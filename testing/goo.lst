     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "run-2"
   638 0000083B 0500000000000000        	dq 5
   639 00000843 72756E2D32              	db 0x72, 0x75, 0x6E, 0x2D, 0x32
   640                                  	; L_constants + 2120:
   641 00000848 03                      	db T_string	; "fold-right"
   642 00000849 0A00000000000000        	dq 10
   643 00000851 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   644 00000859 6874                    	db 0x68, 0x74
   645                                  	; L_constants + 2139:
   646 0000085B 03                      	db T_string	; "+"
   647 0000085C 0100000000000000        	dq 1
   648 00000864 2B                      	db 0x2B
   649                                  	; L_constants + 2149:
   650 00000865 11                      	db T_integer	; 0
   651 00000866 0000000000000000        	dq 0
   652                                  	; L_constants + 2158:
   653 0000086E 03                      	db T_string	; "__bin_integer_to_fr...
   654 0000086F 1900000000000000        	dq 25
   655 00000877 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   656 0000087F 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   657 00000887 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   658 0000088F 6E                      	db 0x6E
   659                                  	; L_constants + 2192:
   660 00000890 41                      	db T_interned_symbol	; +
   661 00000891 [5B08000000000000]      	dq L_constants + 2139
   662                                  	; L_constants + 2201:
   663 00000899 03                      	db T_string	; "all arguments need ...
   664 0000089A 2000000000000000        	dq 32
   665 000008A2 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   666 000008AA 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   667 000008B2 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   668 000008BA 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   669                                  	; L_constants + 2242:
   670 000008C2 03                      	db T_string	; "-"
   671 000008C3 0100000000000000        	dq 1
   672 000008CB 2D                      	db 0x2D
   673                                  	; L_constants + 2252:
   674 000008CC 03                      	db T_string	; "real"
   675 000008CD 0400000000000000        	dq 4
   676 000008D5 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   677                                  	; L_constants + 2265:
   678 000008D9 41                      	db T_interned_symbol	; -
   679 000008DA [C208000000000000]      	dq L_constants + 2242
   680                                  	; L_constants + 2274:
   681 000008E2 03                      	db T_string	; "*"
   682 000008E3 0100000000000000        	dq 1
   683 000008EB 2A                      	db 0x2A
   684                                  	; L_constants + 2284:
   685 000008EC 11                      	db T_integer	; 1
   686 000008ED 0100000000000000        	dq 1
   687                                  	; L_constants + 2293:
   688 000008F5 41                      	db T_interned_symbol	; *
   689 000008F6 [E208000000000000]      	dq L_constants + 2274
   690                                  	; L_constants + 2302:
   691 000008FE 03                      	db T_string	; "/"
   692 000008FF 0100000000000000        	dq 1
   693 00000907 2F                      	db 0x2F
   694                                  	; L_constants + 2312:
   695 00000908 41                      	db T_interned_symbol	; /
   696 00000909 [FE08000000000000]      	dq L_constants + 2302
   697                                  	; L_constants + 2321:
   698 00000911 03                      	db T_string	; "fact"
   699 00000912 0400000000000000        	dq 4
   700 0000091A 66616374                	db 0x66, 0x61, 0x63, 0x74
   701                                  	; L_constants + 2334:
   702 0000091E 03                      	db T_string	; "<"
   703 0000091F 0100000000000000        	dq 1
   704 00000927 3C                      	db 0x3C
   705                                  	; L_constants + 2344:
   706 00000928 03                      	db T_string	; "<="
   707 00000929 0200000000000000        	dq 2
   708 00000931 3C3D                    	db 0x3C, 0x3D
   709                                  	; L_constants + 2355:
   710 00000933 03                      	db T_string	; ">"
   711 00000934 0100000000000000        	dq 1
   712 0000093C 3E                      	db 0x3E
   713                                  	; L_constants + 2365:
   714 0000093D 03                      	db T_string	; ">="
   715 0000093E 0200000000000000        	dq 2
   716 00000946 3E3D                    	db 0x3E, 0x3D
   717                                  	; L_constants + 2376:
   718 00000948 03                      	db T_string	; "="
   719 00000949 0100000000000000        	dq 1
   720 00000951 3D                      	db 0x3D
   721                                  	; L_constants + 2386:
   722 00000952 03                      	db T_string	; "generic-comparator"
   723 00000953 1200000000000000        	dq 18
   724 0000095B 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   725 00000963 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   726 0000096B 6F72                    	db 0x6F, 0x72
   727                                  	; L_constants + 2413:
   728 0000096D 41                      	db T_interned_symbol	; generic-comparator
   729 0000096E [5209000000000000]      	dq L_constants + 2386
   730                                  	; L_constants + 2422:
   731 00000976 03                      	db T_string	; "all the arguments m...
   732 00000977 2100000000000000        	dq 33
   733 0000097F 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   734 00000987 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   735 0000098F 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   736 00000997 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   737 0000099F 73                      	db 0x73
   738                                  	; L_constants + 2464:
   739 000009A0 03                      	db T_string	; "char<?"
   740 000009A1 0600000000000000        	dq 6
   741 000009A9 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   742                                  	; L_constants + 2479:
   743 000009AF 03                      	db T_string	; "char<=?"
   744 000009B0 0700000000000000        	dq 7
   745 000009B8 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   746                                  	; L_constants + 2495:
   747 000009BF 03                      	db T_string	; "char=?"
   748 000009C0 0600000000000000        	dq 6
   749 000009C8 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   750                                  	; L_constants + 2510:
   751 000009CE 03                      	db T_string	; "char>?"
   752 000009CF 0600000000000000        	dq 6
   753 000009D7 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   754                                  	; L_constants + 2525:
   755 000009DD 03                      	db T_string	; "char>=?"
   756 000009DE 0700000000000000        	dq 7
   757 000009E6 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   758                                  	; L_constants + 2541:
   759 000009ED 03                      	db T_string	; "char-downcase"
   760 000009EE 0D00000000000000        	dq 13
   761 000009F6 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   762 000009FE 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   763                                  	; L_constants + 2563:
   764 00000A03 03                      	db T_string	; "char-upcase"
   765 00000A04 0B00000000000000        	dq 11
   766 00000A0C 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   767 00000A14 617365                  	db 0x61, 0x73, 0x65
   768                                  	; L_constants + 2583:
   769 00000A17 0241                    	db T_char, 0x41	; #\A
   770                                  	; L_constants + 2585:
   771 00000A19 025A                    	db T_char, 0x5A	; #\Z
   772                                  	; L_constants + 2587:
   773 00000A1B 0261                    	db T_char, 0x61	; #\a
   774                                  	; L_constants + 2589:
   775 00000A1D 027A                    	db T_char, 0x7A	; #\z
   776                                  	; L_constants + 2591:
   777 00000A1F 03                      	db T_string	; "char-ci<?"
   778 00000A20 0900000000000000        	dq 9
   779 00000A28 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   780 00000A30 3F                      	db 0x3F
   781                                  	; L_constants + 2609:
   782 00000A31 03                      	db T_string	; "char-ci<=?"
   783 00000A32 0A00000000000000        	dq 10
   784 00000A3A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   785 00000A42 3D3F                    	db 0x3D, 0x3F
   786                                  	; L_constants + 2628:
   787 00000A44 03                      	db T_string	; "char-ci=?"
   788 00000A45 0900000000000000        	dq 9
   789 00000A4D 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   790 00000A55 3F                      	db 0x3F
   791                                  	; L_constants + 2646:
   792 00000A56 03                      	db T_string	; "char-ci>?"
   793 00000A57 0900000000000000        	dq 9
   794 00000A5F 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   795 00000A67 3F                      	db 0x3F
   796                                  	; L_constants + 2664:
   797 00000A68 03                      	db T_string	; "char-ci>=?"
   798 00000A69 0A00000000000000        	dq 10
   799 00000A71 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   800 00000A79 3D3F                    	db 0x3D, 0x3F
   801                                  	; L_constants + 2683:
   802 00000A7B 03                      	db T_string	; "string-downcase"
   803 00000A7C 0F00000000000000        	dq 15
   804 00000A84 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   805 00000A8C 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   806                                  	; L_constants + 2707:
   807 00000A93 03                      	db T_string	; "string-upcase"
   808 00000A94 0D00000000000000        	dq 13
   809 00000A9C 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   810 00000AA4 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   811                                  	; L_constants + 2729:
   812 00000AA9 03                      	db T_string	; "list->string"
   813 00000AAA 0C00000000000000        	dq 12
   814 00000AB2 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   815 00000ABA 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   816                                  	; L_constants + 2750:
   817 00000ABE 03                      	db T_string	; "string->list"
   818 00000ABF 0C00000000000000        	dq 12
   819 00000AC7 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   820 00000ACF 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   821                                  	; L_constants + 2771:
   822 00000AD3 03                      	db T_string	; "string<?"
   823 00000AD4 0800000000000000        	dq 8
   824 00000ADC 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   825                                  	; L_constants + 2788:
   826 00000AE4 03                      	db T_string	; "string<=?"
   827 00000AE5 0900000000000000        	dq 9
   828 00000AED 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   829 00000AF5 3F                      	db 0x3F
   830                                  	; L_constants + 2806:
   831 00000AF6 03                      	db T_string	; "string=?"
   832 00000AF7 0800000000000000        	dq 8
   833 00000AFF 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   834                                  	; L_constants + 2823:
   835 00000B07 03                      	db T_string	; "string>=?"
   836 00000B08 0900000000000000        	dq 9
   837 00000B10 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   838 00000B18 3F                      	db 0x3F
   839                                  	; L_constants + 2841:
   840 00000B19 03                      	db T_string	; "string>?"
   841 00000B1A 0800000000000000        	dq 8
   842 00000B22 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   843                                  	; L_constants + 2858:
   844 00000B2A 03                      	db T_string	; "string-ci<?"
   845 00000B2B 0B00000000000000        	dq 11
   846 00000B33 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   847 00000B3B 693C3F                  	db 0x69, 0x3C, 0x3F
   848                                  	; L_constants + 2878:
   849 00000B3E 03                      	db T_string	; "string-ci<=?"
   850 00000B3F 0C00000000000000        	dq 12
   851 00000B47 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   852 00000B4F 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   853                                  	; L_constants + 2899:
   854 00000B53 03                      	db T_string	; "string-ci=?"
   855 00000B54 0B00000000000000        	dq 11
   856 00000B5C 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   857 00000B64 693D3F                  	db 0x69, 0x3D, 0x3F
   858                                  	; L_constants + 2919:
   859 00000B67 03                      	db T_string	; "string-ci>=?"
   860 00000B68 0C00000000000000        	dq 12
   861 00000B70 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   862 00000B78 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   863                                  	; L_constants + 2940:
   864 00000B7C 03                      	db T_string	; "string-ci>?"
   865 00000B7D 0B00000000000000        	dq 11
   866 00000B85 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   867 00000B8D 693E3F                  	db 0x69, 0x3E, 0x3F
   868                                  	; L_constants + 2960:
   869 00000B90 41                      	db T_interned_symbol	; make-vector
   870 00000B91 [4804000000000000]      	dq L_constants + 1096
   871                                  	; L_constants + 2969:
   872 00000B99 03                      	db T_string	; "Usage: (make-vector...
   873 00000B9A 2B00000000000000        	dq 43
   874 00000BA2 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   875 00000BAA 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   876 00000BB2 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   877 00000BBA 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   878 00000BC2 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   879 00000BCA 6C7429                  	db 0x6C, 0x74, 0x29
   880                                  	; L_constants + 3021:
   881 00000BCD 41                      	db T_interned_symbol	; make-string
   882 00000BCE [5C04000000000000]      	dq L_constants + 1116
   883                                  	; L_constants + 3030:
   884 00000BD6 03                      	db T_string	; "Usage: (make-string...
   885 00000BD7 2B00000000000000        	dq 43
   886 00000BDF 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   887 00000BE7 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   888 00000BEF 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   889 00000BF7 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   890 00000BFF 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   891 00000C07 6C7429                  	db 0x6C, 0x74, 0x29
   892                                  	; L_constants + 3082:
   893 00000C0A 03                      	db T_string	; "list->vector"
   894 00000C0B 0C00000000000000        	dq 12
   895 00000C13 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   896 00000C1B 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3103:
   898 00000C1F 03                      	db T_string	; "vector"
   899 00000C20 0600000000000000        	dq 6
   900 00000C28 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   901                                  	; L_constants + 3118:
   902 00000C2E 03                      	db T_string	; "vector->list"
   903 00000C2F 0C00000000000000        	dq 12
   904 00000C37 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   905 00000C3F 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   906                                  	; L_constants + 3139:
   907 00000C43 03                      	db T_string	; "random"
   908 00000C44 0600000000000000        	dq 6
   909 00000C4C 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   910                                  	; L_constants + 3154:
   911 00000C52 03                      	db T_string	; "positive?"
   912 00000C53 0900000000000000        	dq 9
   913 00000C5B 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   914 00000C63 3F                      	db 0x3F
   915                                  	; L_constants + 3172:
   916 00000C64 03                      	db T_string	; "negative?"
   917 00000C65 0900000000000000        	dq 9
   918 00000C6D 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   919 00000C75 3F                      	db 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 03                      	db T_string	; "even?"
   922 00000C77 0500000000000000        	dq 5
   923 00000C7F 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   924                                  	; L_constants + 3204:
   925 00000C84 11                      	db T_integer	; 2
   926 00000C85 0200000000000000        	dq 2
   927                                  	; L_constants + 3213:
   928 00000C8D 03                      	db T_string	; "odd?"
   929 00000C8E 0400000000000000        	dq 4
   930 00000C96 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   931                                  	; L_constants + 3226:
   932 00000C9A 03                      	db T_string	; "abs"
   933 00000C9B 0300000000000000        	dq 3
   934 00000CA3 616273                  	db 0x61, 0x62, 0x73
   935                                  	; L_constants + 3238:
   936 00000CA6 03                      	db T_string	; "equal?"
   937 00000CA7 0600000000000000        	dq 6
   938 00000CAF 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "assoc"
   941 00000CB6 0500000000000000        	dq 5
   942 00000CBE 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   943                                  	; L_constants + 3267:
   944 00000CC3 03                      	db T_string	; "string-append"
   945 00000CC4 0D00000000000000        	dq 13
   946 00000CCC 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   947 00000CD4 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   948                                  	; L_constants + 3289:
   949 00000CD9 03                      	db T_string	; "add"
   950 00000CDA 0300000000000000        	dq 3
   951 00000CE2 616464                  	db 0x61, 0x64, 0x64
   952                                  	; L_constants + 3301:
   953 00000CE5 03                      	db T_string	; "vector-append"
   954 00000CE6 0D00000000000000        	dq 13
   955 00000CEE 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   956 00000CF6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   957                                  	; L_constants + 3323:
   958 00000CFB 03                      	db T_string	; "string-reverse"
   959 00000CFC 0E00000000000000        	dq 14
   960 00000D04 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   961 00000D0C 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   962                                  	; L_constants + 3346:
   963 00000D12 03                      	db T_string	; "vector-reverse"
   964 00000D13 0E00000000000000        	dq 14
   965 00000D1B 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   966 00000D23 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   967                                  	; L_constants + 3369:
   968 00000D29 03                      	db T_string	; "string-reverse!"
   969 00000D2A 0F00000000000000        	dq 15
   970 00000D32 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   971 00000D3A 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   972                                  	; L_constants + 3393:
   973 00000D41 03                      	db T_string	; "vector-reverse!"
   974 00000D42 0F00000000000000        	dq 15
   975 00000D4A 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   976 00000D52 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   977                                  	; L_constants + 3417:
   978 00000D59 03                      	db T_string	; "make-list-thunk"
   979 00000D5A 0F00000000000000        	dq 15
   980 00000D62 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   981 00000D6A 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   982                                  	; L_constants + 3441:
   983 00000D71 03                      	db T_string	; "make-string-thunk"
   984 00000D72 1100000000000000        	dq 17
   985 00000D7A 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   986 00000D82 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   987 00000D8A 6B                      	db 0x6B
   988                                  	; L_constants + 3467:
   989 00000D8B 03                      	db T_string	; "make-vector-thunk"
   990 00000D8C 1100000000000000        	dq 17
   991 00000D94 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   992 00000D9C 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   993 00000DA4 6B                      	db 0x6B
   994                                  	; L_constants + 3493:
   995 00000DA5 03                      	db T_string	; "logarithm"
   996 00000DA6 0900000000000000        	dq 9
   997 00000DAE 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   998 00000DB6 6D                      	db 0x6D
   999                                  	; L_constants + 3511:
  1000 00000DB7 13                      	db T_real	; 1.000000
  1001 00000DB8 000000000000F03F        	dq 1.000000
  1002                                  	; L_constants + 3520:
  1003 00000DC0 03                      	db T_string	; "newline"
  1004 00000DC1 0700000000000000        	dq 7
  1005 00000DC9 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
  1006                                  	; L_constants + 3536:
  1007 00000DD0 020A                    	db T_char, 0x0A	; #\newline
  1008                                  	; L_constants + 3538:
  1009 00000DD2 03                      	db T_string	; "void"
  1010 00000DD3 0400000000000000        	dq 4
  1011 00000DDB 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1012                                  	; L_constants + 3551:
  1013 00000DDF 11                      	db T_integer	; 3
  1014 00000DE0 0300000000000000        	dq 3
  1015                                  	; L_constants + 3560:
  1016 00000DE8 11                      	db T_integer	; 4
  1017 00000DE9 0400000000000000        	dq 4
  1018                                  free_var_0:	; location of *
  1019 00000DF1 [F90D000000000000]      	dq .undefined_object
  1020                                  .undefined_object:
  1021 00000DF9 05                      	db T_undefined
  1022 00000DFA [E208000000000000]      	dq L_constants + 2274
  1023                                  
  1024                                  free_var_1:	; location of +
  1025 00000E02 [0A0E000000000000]      	dq .undefined_object
  1026                                  .undefined_object:
  1027 00000E0A 05                      	db T_undefined
  1028 00000E0B [5B08000000000000]      	dq L_constants + 2139
  1029                                  
  1030                                  free_var_2:	; location of -
  1031 00000E13 [1B0E000000000000]      	dq .undefined_object
  1032                                  .undefined_object:
  1033 00000E1B 05                      	db T_undefined
  1034 00000E1C [C208000000000000]      	dq L_constants + 2242
  1035                                  
  1036                                  free_var_3:	; location of /
  1037 00000E24 [2C0E000000000000]      	dq .undefined_object
  1038                                  .undefined_object:
  1039 00000E2C 05                      	db T_undefined
  1040 00000E2D [FE08000000000000]      	dq L_constants + 2302
  1041                                  
  1042                                  free_var_4:	; location of <
  1043 00000E35 [3D0E000000000000]      	dq .undefined_object
  1044                                  .undefined_object:
  1045 00000E3D 05                      	db T_undefined
  1046 00000E3E [1E09000000000000]      	dq L_constants + 2334
  1047                                  
  1048                                  free_var_5:	; location of <=
  1049 00000E46 [4E0E000000000000]      	dq .undefined_object
  1050                                  .undefined_object:
  1051 00000E4E 05                      	db T_undefined
  1052 00000E4F [2809000000000000]      	dq L_constants + 2344
  1053                                  
  1054                                  free_var_6:	; location of =
  1055 00000E57 [5F0E000000000000]      	dq .undefined_object
  1056                                  .undefined_object:
  1057 00000E5F 05                      	db T_undefined
  1058 00000E60 [4809000000000000]      	dq L_constants + 2376
  1059                                  
  1060                                  free_var_7:	; location of >
  1061 00000E68 [700E000000000000]      	dq .undefined_object
  1062                                  .undefined_object:
  1063 00000E70 05                      	db T_undefined
  1064 00000E71 [3309000000000000]      	dq L_constants + 2355
  1065                                  
  1066                                  free_var_8:	; location of >=
  1067 00000E79 [810E000000000000]      	dq .undefined_object
  1068                                  .undefined_object:
  1069 00000E81 05                      	db T_undefined
  1070 00000E82 [3D09000000000000]      	dq L_constants + 2365
  1071                                  
  1072                                  free_var_9:	; location of __bin-add-qq
  1073 00000E8A [920E000000000000]      	dq .undefined_object
  1074                                  .undefined_object:
  1075 00000E92 05                      	db T_undefined
  1076 00000E93 [6902000000000000]      	dq L_constants + 617
  1077                                  
  1078                                  free_var_10:	; location of __bin-add-rr
  1079 00000E9B [A30E000000000000]      	dq .undefined_object
  1080                                  .undefined_object:
  1081 00000EA3 05                      	db T_undefined
  1082 00000EA4 [1502000000000000]      	dq L_constants + 533
  1083                                  
  1084                                  free_var_11:	; location of __bin-add-zz
  1085 00000EAC [B40E000000000000]      	dq .undefined_object
  1086                                  .undefined_object:
  1087 00000EB4 05                      	db T_undefined
  1088 00000EB5 [BD02000000000000]      	dq L_constants + 701
  1089                                  
  1090                                  free_var_12:	; location of __bin-apply
  1091 00000EBD [C50E000000000000]      	dq .undefined_object
  1092                                  .undefined_object:
  1093 00000EC5 05                      	db T_undefined
  1094 00000EC6 [0102000000000000]      	dq L_constants + 513
  1095                                  
  1096                                  free_var_13:	; location of __bin-div-qq
  1097 00000ECE [D60E000000000000]      	dq .undefined_object
  1098                                  .undefined_object:
  1099 00000ED6 05                      	db T_undefined
  1100 00000ED7 [A802000000000000]      	dq L_constants + 680
  1101                                  
  1102                                  free_var_14:	; location of __bin-div-rr
  1103 00000EDF [E70E000000000000]      	dq .undefined_object
  1104                                  .undefined_object:
  1105 00000EE7 05                      	db T_undefined
  1106 00000EE8 [5402000000000000]      	dq L_constants + 596
  1107                                  
  1108                                  free_var_15:	; location of __bin-div-zz
  1109 00000EF0 [F80E000000000000]      	dq .undefined_object
  1110                                  .undefined_object:
  1111 00000EF8 05                      	db T_undefined
  1112 00000EF9 [FC02000000000000]      	dq L_constants + 764
  1113                                  
  1114                                  free_var_16:	; location of __bin-equal-qq
  1115 00000F01 [090F000000000000]      	dq .undefined_object
  1116                                  .undefined_object:
  1117 00000F09 05                      	db T_undefined
  1118 00000F0A [8703000000000000]      	dq L_constants + 903
  1119                                  
  1120                                  free_var_17:	; location of __bin-equal-rr
  1121 00000F12 [1A0F000000000000]      	dq .undefined_object
  1122                                  .undefined_object:
  1123 00000F1A 05                      	db T_undefined
  1124 00000F1B [7003000000000000]      	dq L_constants + 880
  1125                                  
  1126                                  free_var_18:	; location of __bin-equal-zz
  1127 00000F23 [2B0F000000000000]      	dq .undefined_object
  1128                                  .undefined_object:
  1129 00000F2B 05                      	db T_undefined
  1130 00000F2C [9E03000000000000]      	dq L_constants + 926
  1131                                  
  1132                                  free_var_19:	; location of __bin-less-than-qq
  1133 00000F34 [3C0F000000000000]      	dq .undefined_object
  1134                                  .undefined_object:
  1135 00000F3C 05                      	db T_undefined
  1136 00000F3D [3A03000000000000]      	dq L_constants + 826
  1137                                  
  1138                                  free_var_20:	; location of __bin-less-than-rr
  1139 00000F45 [4D0F000000000000]      	dq .undefined_object
  1140                                  .undefined_object:
  1141 00000F4D 05                      	db T_undefined
  1142 00000F4E [1F03000000000000]      	dq L_constants + 799
  1143                                  
  1144                                  free_var_21:	; location of __bin-less-than-zz
  1145 00000F56 [5E0F000000000000]      	dq .undefined_object
  1146                                  .undefined_object:
  1147 00000F5E 05                      	db T_undefined
  1148 00000F5F [5503000000000000]      	dq L_constants + 853
  1149                                  
  1150                                  free_var_22:	; location of __bin-mul-qq
  1151 00000F67 [6F0F000000000000]      	dq .undefined_object
  1152                                  .undefined_object:
  1153 00000F6F 05                      	db T_undefined
  1154 00000F70 [9302000000000000]      	dq L_constants + 659
  1155                                  
  1156                                  free_var_23:	; location of __bin-mul-rr
  1157 00000F78 [800F000000000000]      	dq .undefined_object
  1158                                  .undefined_object:
  1159 00000F80 05                      	db T_undefined
  1160 00000F81 [3F02000000000000]      	dq L_constants + 575
  1161                                  
  1162                                  free_var_24:	; location of __bin-mul-zz
  1163 00000F89 [910F000000000000]      	dq .undefined_object
  1164                                  .undefined_object:
  1165 00000F91 05                      	db T_undefined
  1166 00000F92 [E702000000000000]      	dq L_constants + 743
  1167                                  
  1168                                  free_var_25:	; location of __bin-sub-qq
  1169 00000F9A [A20F000000000000]      	dq .undefined_object
  1170                                  .undefined_object:
  1171 00000FA2 05                      	db T_undefined
  1172 00000FA3 [7E02000000000000]      	dq L_constants + 638
  1173                                  
  1174                                  free_var_26:	; location of __bin-sub-rr
  1175 00000FAB [B30F000000000000]      	dq .undefined_object
  1176                                  .undefined_object:
  1177 00000FB3 05                      	db T_undefined
  1178 00000FB4 [2A02000000000000]      	dq L_constants + 554
  1179                                  
  1180                                  free_var_27:	; location of __bin-sub-zz
  1181 00000FBC [C40F000000000000]      	dq .undefined_object
  1182                                  .undefined_object:
  1183 00000FC4 05                      	db T_undefined
  1184 00000FC5 [D202000000000000]      	dq L_constants + 722
  1185                                  
  1186                                  free_var_28:	; location of __bin_integer_to_fraction
  1187 00000FCD [D50F000000000000]      	dq .undefined_object
  1188                                  .undefined_object:
  1189 00000FD5 05                      	db T_undefined
  1190 00000FD6 [6E08000000000000]      	dq L_constants + 2158
  1191                                  
  1192                                  free_var_29:	; location of __integer-to-fraction
  1193 00000FDE [E60F000000000000]      	dq .undefined_object
  1194                                  .undefined_object:
  1195 00000FE6 05                      	db T_undefined
  1196 00000FE7 [A204000000000000]      	dq L_constants + 1186
  1197                                  
  1198                                  free_var_30:	; location of abs
  1199 00000FEF [F70F000000000000]      	dq .undefined_object
  1200                                  .undefined_object:
  1201 00000FF7 05                      	db T_undefined
  1202 00000FF8 [9A0C000000000000]      	dq L_constants + 3226
  1203                                  
  1204                                  free_var_31:	; location of add
  1205 00001000 [0810000000000000]      	dq .undefined_object
  1206                                  .undefined_object:
  1207 00001008 05                      	db T_undefined
  1208 00001009 [D90C000000000000]      	dq L_constants + 3289
  1209                                  
  1210                                  free_var_32:	; location of andmap
  1211 00001011 [1910000000000000]      	dq .undefined_object
  1212                                  .undefined_object:
  1213 00001019 05                      	db T_undefined
  1214 0000101A [FA07000000000000]      	dq L_constants + 2042
  1215                                  
  1216                                  free_var_33:	; location of append
  1217 00001022 [2A10000000000000]      	dq .undefined_object
  1218                                  .undefined_object:
  1219 0000102A 05                      	db T_undefined
  1220 0000102B [2B08000000000000]      	dq L_constants + 2091
  1221                                  
  1222                                  free_var_34:	; location of apply
  1223 00001033 [3B10000000000000]      	dq .undefined_object
  1224                                  .undefined_object:
  1225 0000103B 05                      	db T_undefined
  1226 0000103C [D207000000000000]      	dq L_constants + 2002
  1227                                  
  1228                                  free_var_35:	; location of assoc
  1229 00001044 [4C10000000000000]      	dq .undefined_object
  1230                                  .undefined_object:
  1231 0000104C 05                      	db T_undefined
  1232 0000104D [B50C000000000000]      	dq L_constants + 3253
  1233                                  
  1234                                  free_var_36:	; location of caaaar
  1235 00001055 [5D10000000000000]      	dq .undefined_object
  1236                                  .undefined_object:
  1237 0000105D 05                      	db T_undefined
  1238 0000105E [8106000000000000]      	dq L_constants + 1665
  1239                                  
  1240                                  free_var_37:	; location of caaadr
  1241 00001066 [6E10000000000000]      	dq .undefined_object
  1242                                  .undefined_object:
  1243 0000106E 05                      	db T_undefined
  1244 0000106F [9006000000000000]      	dq L_constants + 1680
  1245                                  
  1246                                  free_var_38:	; location of caaar
  1247 00001077 [7F10000000000000]      	dq .undefined_object
  1248                                  .undefined_object:
  1249 0000107F 05                      	db T_undefined
  1250 00001080 [1106000000000000]      	dq L_constants + 1553
  1251                                  
  1252                                  free_var_39:	; location of caadar
  1253 00001088 [9010000000000000]      	dq .undefined_object
  1254                                  .undefined_object:
  1255 00001090 05                      	db T_undefined
  1256 00001091 [9F06000000000000]      	dq L_constants + 1695
  1257                                  
  1258                                  free_var_40:	; location of caaddr
  1259 00001099 [A110000000000000]      	dq .undefined_object
  1260                                  .undefined_object:
  1261 000010A1 05                      	db T_undefined
  1262 000010A2 [AE06000000000000]      	dq L_constants + 1710
  1263                                  
  1264                                  free_var_41:	; location of caadr
  1265 000010AA [B210000000000000]      	dq .undefined_object
  1266                                  .undefined_object:
  1267 000010B2 05                      	db T_undefined
  1268 000010B3 [1F06000000000000]      	dq L_constants + 1567
  1269                                  
  1270                                  free_var_42:	; location of caar
  1271 000010BB [C310000000000000]      	dq .undefined_object
  1272                                  .undefined_object:
  1273 000010C3 05                      	db T_undefined
  1274 000010C4 [DD05000000000000]      	dq L_constants + 1501
  1275                                  
  1276                                  free_var_43:	; location of cadaar
  1277 000010CC [D410000000000000]      	dq .undefined_object
  1278                                  .undefined_object:
  1279 000010D4 05                      	db T_undefined
  1280 000010D5 [BD06000000000000]      	dq L_constants + 1725
  1281                                  
  1282                                  free_var_44:	; location of cadadr
  1283 000010DD [E510000000000000]      	dq .undefined_object
  1284                                  .undefined_object:
  1285 000010E5 05                      	db T_undefined
  1286 000010E6 [CC06000000000000]      	dq L_constants + 1740
  1287                                  
  1288                                  free_var_45:	; location of cadar
  1289 000010EE [F610000000000000]      	dq .undefined_object
  1290                                  .undefined_object:
  1291 000010F6 05                      	db T_undefined
  1292 000010F7 [2D06000000000000]      	dq L_constants + 1581
  1293                                  
  1294                                  free_var_46:	; location of caddar
  1295 000010FF [0711000000000000]      	dq .undefined_object
  1296                                  .undefined_object:
  1297 00001107 05                      	db T_undefined
  1298 00001108 [DB06000000000000]      	dq L_constants + 1755
  1299                                  
  1300                                  free_var_47:	; location of cadddr
  1301 00001110 [1811000000000000]      	dq .undefined_object
  1302                                  .undefined_object:
  1303 00001118 05                      	db T_undefined
  1304 00001119 [EA06000000000000]      	dq L_constants + 1770
  1305                                  
  1306                                  free_var_48:	; location of caddr
  1307 00001121 [2911000000000000]      	dq .undefined_object
  1308                                  .undefined_object:
  1309 00001129 05                      	db T_undefined
  1310 0000112A [3B06000000000000]      	dq L_constants + 1595
  1311                                  
  1312                                  free_var_49:	; location of cadr
  1313 00001132 [3A11000000000000]      	dq .undefined_object
  1314                                  .undefined_object:
  1315 0000113A 05                      	db T_undefined
  1316 0000113B [EA05000000000000]      	dq L_constants + 1514
  1317                                  
  1318                                  free_var_50:	; location of car
  1319 00001143 [4B11000000000000]      	dq .undefined_object
  1320                                  .undefined_object:
  1321 0000114B 05                      	db T_undefined
  1322 0000114C [1501000000000000]      	dq L_constants + 277
  1323                                  
  1324                                  free_var_51:	; location of cdaaar
  1325 00001154 [5C11000000000000]      	dq .undefined_object
  1326                                  .undefined_object:
  1327 0000115C 05                      	db T_undefined
  1328 0000115D [F906000000000000]      	dq L_constants + 1785
  1329                                  
  1330                                  free_var_52:	; location of cdaadr
  1331 00001165 [6D11000000000000]      	dq .undefined_object
  1332                                  .undefined_object:
  1333 0000116D 05                      	db T_undefined
  1334 0000116E [0807000000000000]      	dq L_constants + 1800
  1335                                  
  1336                                  free_var_53:	; location of cdaar
  1337 00001176 [7E11000000000000]      	dq .undefined_object
  1338                                  .undefined_object:
  1339 0000117E 05                      	db T_undefined
  1340 0000117F [4906000000000000]      	dq L_constants + 1609
  1341                                  
  1342                                  free_var_54:	; location of cdadar
  1343 00001187 [8F11000000000000]      	dq .undefined_object
  1344                                  .undefined_object:
  1345 0000118F 05                      	db T_undefined
  1346 00001190 [1707000000000000]      	dq L_constants + 1815
  1347                                  
  1348                                  free_var_55:	; location of cdaddr
  1349 00001198 [A011000000000000]      	dq .undefined_object
  1350                                  .undefined_object:
  1351 000011A0 05                      	db T_undefined
  1352 000011A1 [2607000000000000]      	dq L_constants + 1830
  1353                                  
  1354                                  free_var_56:	; location of cdadr
  1355 000011A9 [B111000000000000]      	dq .undefined_object
  1356                                  .undefined_object:
  1357 000011B1 05                      	db T_undefined
  1358 000011B2 [5706000000000000]      	dq L_constants + 1623
  1359                                  
  1360                                  free_var_57:	; location of cdar
  1361 000011BA [C211000000000000]      	dq .undefined_object
  1362                                  .undefined_object:
  1363 000011C2 05                      	db T_undefined
  1364 000011C3 [F705000000000000]      	dq L_constants + 1527
  1365                                  
  1366                                  free_var_58:	; location of cddaar
  1367 000011CB [D311000000000000]      	dq .undefined_object
  1368                                  .undefined_object:
  1369 000011D3 05                      	db T_undefined
  1370 000011D4 [3507000000000000]      	dq L_constants + 1845
  1371                                  
  1372                                  free_var_59:	; location of cddadr
  1373 000011DC [E411000000000000]      	dq .undefined_object
  1374                                  .undefined_object:
  1375 000011E4 05                      	db T_undefined
  1376 000011E5 [4407000000000000]      	dq L_constants + 1860
  1377                                  
  1378                                  free_var_60:	; location of cddar
  1379 000011ED [F511000000000000]      	dq .undefined_object
  1380                                  .undefined_object:
  1381 000011F5 05                      	db T_undefined
  1382 000011F6 [6506000000000000]      	dq L_constants + 1637
  1383                                  
  1384                                  free_var_61:	; location of cdddar
  1385 000011FE [0612000000000000]      	dq .undefined_object
  1386                                  .undefined_object:
  1387 00001206 05                      	db T_undefined
  1388 00001207 [5307000000000000]      	dq L_constants + 1875
  1389                                  
  1390                                  free_var_62:	; location of cddddr
  1391 0000120F [1712000000000000]      	dq .undefined_object
  1392                                  .undefined_object:
  1393 00001217 05                      	db T_undefined
  1394 00001218 [6207000000000000]      	dq L_constants + 1890
  1395                                  
  1396                                  free_var_63:	; location of cdddr
  1397 00001220 [2812000000000000]      	dq .undefined_object
  1398                                  .undefined_object:
  1399 00001228 05                      	db T_undefined
  1400 00001229 [7306000000000000]      	dq L_constants + 1651
  1401                                  
  1402                                  free_var_64:	; location of cddr
  1403 00001231 [3912000000000000]      	dq .undefined_object
  1404                                  .undefined_object:
  1405 00001239 05                      	db T_undefined
  1406 0000123A [0406000000000000]      	dq L_constants + 1540
  1407                                  
  1408                                  free_var_65:	; location of cdr
  1409 00001242 [4A12000000000000]      	dq .undefined_object
  1410                                  .undefined_object:
  1411 0000124A 05                      	db T_undefined
  1412 0000124B [2101000000000000]      	dq L_constants + 289
  1413                                  
  1414                                  free_var_66:	; location of char->integer
  1415 00001253 [5B12000000000000]      	dq .undefined_object
  1416                                  .undefined_object:
  1417 0000125B 05                      	db T_undefined
  1418 0000125C [A901000000000000]      	dq L_constants + 425
  1419                                  
  1420                                  free_var_67:	; location of char-ci<=?
  1421 00001264 [6C12000000000000]      	dq .undefined_object
  1422                                  .undefined_object:
  1423 0000126C 05                      	db T_undefined
  1424 0000126D [310A000000000000]      	dq L_constants + 2609
  1425                                  
  1426                                  free_var_68:	; location of char-ci<?
  1427 00001275 [7D12000000000000]      	dq .undefined_object
  1428                                  .undefined_object:
  1429 0000127D 05                      	db T_undefined
  1430 0000127E [1F0A000000000000]      	dq L_constants + 2591
  1431                                  
  1432                                  free_var_69:	; location of char-ci=?
  1433 00001286 [8E12000000000000]      	dq .undefined_object
  1434                                  .undefined_object:
  1435 0000128E 05                      	db T_undefined
  1436 0000128F [440A000000000000]      	dq L_constants + 2628
  1437                                  
  1438                                  free_var_70:	; location of char-ci>=?
  1439 00001297 [9F12000000000000]      	dq .undefined_object
  1440                                  .undefined_object:
  1441 0000129F 05                      	db T_undefined
  1442 000012A0 [680A000000000000]      	dq L_constants + 2664
  1443                                  
  1444                                  free_var_71:	; location of char-ci>?
  1445 000012A8 [B012000000000000]      	dq .undefined_object
  1446                                  .undefined_object:
  1447 000012B0 05                      	db T_undefined
  1448 000012B1 [560A000000000000]      	dq L_constants + 2646
  1449                                  
  1450                                  free_var_72:	; location of char-downcase
  1451 000012B9 [C112000000000000]      	dq .undefined_object
  1452                                  .undefined_object:
  1453 000012C1 05                      	db T_undefined
  1454 000012C2 [ED09000000000000]      	dq L_constants + 2541
  1455                                  
  1456                                  free_var_73:	; location of char-upcase
  1457 000012CA [D212000000000000]      	dq .undefined_object
  1458                                  .undefined_object:
  1459 000012D2 05                      	db T_undefined
  1460 000012D3 [030A000000000000]      	dq L_constants + 2563
  1461                                  
  1462                                  free_var_74:	; location of char<=?
  1463 000012DB [E312000000000000]      	dq .undefined_object
  1464                                  .undefined_object:
  1465 000012E3 05                      	db T_undefined
  1466 000012E4 [AF09000000000000]      	dq L_constants + 2479
  1467                                  
  1468                                  free_var_75:	; location of char<?
  1469 000012EC [F412000000000000]      	dq .undefined_object
  1470                                  .undefined_object:
  1471 000012F4 05                      	db T_undefined
  1472 000012F5 [A009000000000000]      	dq L_constants + 2464
  1473                                  
  1474                                  free_var_76:	; location of char=?
  1475 000012FD [0513000000000000]      	dq .undefined_object
  1476                                  .undefined_object:
  1477 00001305 05                      	db T_undefined
  1478 00001306 [BF09000000000000]      	dq L_constants + 2495
  1479                                  
  1480                                  free_var_77:	; location of char>=?
  1481 0000130E [1613000000000000]      	dq .undefined_object
  1482                                  .undefined_object:
  1483 00001316 05                      	db T_undefined
  1484 00001317 [DD09000000000000]      	dq L_constants + 2525
  1485                                  
  1486                                  free_var_78:	; location of char>?
  1487 0000131F [2713000000000000]      	dq .undefined_object
  1488                                  .undefined_object:
  1489 00001327 05                      	db T_undefined
  1490 00001328 [CE09000000000000]      	dq L_constants + 2510
  1491                                  
  1492                                  free_var_79:	; location of char?
  1493 00001330 [3813000000000000]      	dq .undefined_object
  1494                                  .undefined_object:
  1495 00001338 05                      	db T_undefined
  1496 00001339 [3000000000000000]      	dq L_constants + 48
  1497                                  
  1498                                  free_var_80:	; location of cons
  1499 00001341 [4913000000000000]      	dq .undefined_object
  1500                                  .undefined_object:
  1501 00001349 05                      	db T_undefined
  1502 0000134A [DF00000000000000]      	dq L_constants + 223
  1503                                  
  1504                                  free_var_81:	; location of eq?
  1505 00001352 [5A13000000000000]      	dq .undefined_object
  1506                                  .undefined_object:
  1507 0000135A 05                      	db T_undefined
  1508 0000135B [9604000000000000]      	dq L_constants + 1174
  1509                                  
  1510                                  free_var_82:	; location of equal?
  1511 00001363 [6B13000000000000]      	dq .undefined_object
  1512                                  .undefined_object:
  1513 0000136B 05                      	db T_undefined
  1514 0000136C [A60C000000000000]      	dq L_constants + 3238
  1515                                  
  1516                                  free_var_83:	; location of error
  1517 00001374 [7C13000000000000]      	dq .undefined_object
  1518                                  .undefined_object:
  1519 0000137C 05                      	db T_undefined
  1520 0000137D [1103000000000000]      	dq L_constants + 785
  1521                                  
  1522                                  free_var_84:	; location of even?
  1523 00001385 [8D13000000000000]      	dq .undefined_object
  1524                                  .undefined_object:
  1525 0000138D 05                      	db T_undefined
  1526 0000138E [760C000000000000]      	dq L_constants + 3190
  1527                                  
  1528                                  free_var_85:	; location of fact
  1529 00001396 [9E13000000000000]      	dq .undefined_object
  1530                                  .undefined_object:
  1531 0000139E 05                      	db T_undefined
  1532 0000139F [1109000000000000]      	dq L_constants + 2321
  1533                                  
  1534                                  free_var_86:	; location of fold-left
  1535 000013A7 [AF13000000000000]      	dq .undefined_object
  1536                                  .undefined_object:
  1537 000013AF 05                      	db T_undefined
  1538 000013B0 [1908000000000000]      	dq L_constants + 2073
  1539                                  
  1540                                  free_var_87:	; location of fold-right
  1541 000013B8 [C013000000000000]      	dq .undefined_object
  1542                                  .undefined_object:
  1543 000013C0 05                      	db T_undefined
  1544 000013C1 [4808000000000000]      	dq L_constants + 2120
  1545                                  
  1546                                  free_var_88:	; location of fraction->real
  1547 000013C9 [D113000000000000]      	dq .undefined_object
  1548                                  .undefined_object:
  1549 000013D1 05                      	db T_undefined
  1550 000013D2 [9201000000000000]      	dq L_constants + 402
  1551                                  
  1552                                  free_var_89:	; location of fraction?
  1553 000013DA [E213000000000000]      	dq .undefined_object
  1554                                  .undefined_object:
  1555 000013E2 05                      	db T_undefined
  1556 000013E3 [9800000000000000]      	dq L_constants + 152
  1557                                  
  1558                                  free_var_90:	; location of integer->char
  1559 000013EB [F313000000000000]      	dq .undefined_object
  1560                                  .undefined_object:
  1561 000013F3 05                      	db T_undefined
  1562 000013F4 [BF01000000000000]      	dq L_constants + 447
  1563                                  
  1564                                  free_var_91:	; location of integer->real
  1565 000013FC [0414000000000000]      	dq .undefined_object
  1566                                  .undefined_object:
  1567 00001404 05                      	db T_undefined
  1568 00001405 [7C01000000000000]      	dq L_constants + 380
  1569                                  
  1570                                  free_var_92:	; location of integer?
  1571 0000140D [1514000000000000]      	dq .undefined_object
  1572                                  .undefined_object:
  1573 00001415 05                      	db T_undefined
  1574 00001416 [F001000000000000]      	dq L_constants + 496
  1575                                  
  1576                                  free_var_93:	; location of list
  1577 0000141E [2614000000000000]      	dq .undefined_object
  1578                                  .undefined_object:
  1579 00001426 05                      	db T_undefined
  1580 00001427 [7F07000000000000]      	dq L_constants + 1919
  1581                                  
  1582                                  free_var_94:	; location of list*
  1583 0000142F [3714000000000000]      	dq .undefined_object
  1584                                  .undefined_object:
  1585 00001437 05                      	db T_undefined
  1586 00001438 [AA07000000000000]      	dq L_constants + 1962
  1587                                  
  1588                                  free_var_95:	; location of list->string
  1589 00001440 [4814000000000000]      	dq .undefined_object
  1590                                  .undefined_object:
  1591 00001448 05                      	db T_undefined
  1592 00001449 [A90A000000000000]      	dq L_constants + 2729
  1593                                  
  1594                                  free_var_96:	; location of list->vector
  1595 00001451 [5914000000000000]      	dq .undefined_object
  1596                                  .undefined_object:
  1597 00001459 05                      	db T_undefined
  1598 0000145A [0A0C000000000000]      	dq L_constants + 3082
  1599                                  
  1600                                  free_var_97:	; location of list?
  1601 00001462 [6A14000000000000]      	dq .undefined_object
  1602                                  .undefined_object:
  1603 0000146A 05                      	db T_undefined
  1604 0000146B [7107000000000000]      	dq L_constants + 1905
  1605                                  
  1606                                  free_var_98:	; location of logarithm
  1607 00001473 [7B14000000000000]      	dq .undefined_object
  1608                                  .undefined_object:
  1609 0000147B 05                      	db T_undefined
  1610 0000147C [A50D000000000000]      	dq L_constants + 3493
  1611                                  
  1612                                  free_var_99:	; location of make-list-thunk
  1613 00001484 [8C14000000000000]      	dq .undefined_object
  1614                                  .undefined_object:
  1615 0000148C 05                      	db T_undefined
  1616 0000148D [590D000000000000]      	dq L_constants + 3417
  1617                                  
  1618                                  free_var_100:	; location of make-string
  1619 00001495 [9D14000000000000]      	dq .undefined_object
  1620                                  .undefined_object:
  1621 0000149D 05                      	db T_undefined
  1622 0000149E [5C04000000000000]      	dq L_constants + 1116
  1623                                  
  1624                                  free_var_101:	; location of make-string-thunk
  1625 000014A6 [AE14000000000000]      	dq .undefined_object
  1626                                  .undefined_object:
  1627 000014AE 05                      	db T_undefined
  1628 000014AF [710D000000000000]      	dq L_constants + 3441
  1629                                  
  1630                                  free_var_102:	; location of make-vector
  1631 000014B7 [BF14000000000000]      	dq .undefined_object
  1632                                  .undefined_object:
  1633 000014BF 05                      	db T_undefined
  1634 000014C0 [4804000000000000]      	dq L_constants + 1096
  1635                                  
  1636                                  free_var_103:	; location of make-vector-thunk
  1637 000014C8 [D014000000000000]      	dq .undefined_object
  1638                                  .undefined_object:
  1639 000014D0 05                      	db T_undefined
  1640 000014D1 [8B0D000000000000]      	dq L_constants + 3467
  1641                                  
  1642                                  free_var_104:	; location of map
  1643 000014D9 [E114000000000000]      	dq .undefined_object
  1644                                  .undefined_object:
  1645 000014E1 05                      	db T_undefined
  1646 000014E2 [EE07000000000000]      	dq L_constants + 2030
  1647                                  
  1648                                  free_var_105:	; location of negative?
  1649 000014EA [F214000000000000]      	dq .undefined_object
  1650                                  .undefined_object:
  1651 000014F2 05                      	db T_undefined
  1652 000014F3 [640C000000000000]      	dq L_constants + 3172
  1653                                  
  1654                                  free_var_106:	; location of newline
  1655 000014FB [0315000000000000]      	dq .undefined_object
  1656                                  .undefined_object:
  1657 00001503 05                      	db T_undefined
  1658 00001504 [C00D000000000000]      	dq L_constants + 3520
  1659                                  
  1660                                  free_var_107:	; location of not
  1661 0000150C [1415000000000000]      	dq .undefined_object
  1662                                  .undefined_object:
  1663 00001514 05                      	db T_undefined
  1664 00001515 [8C07000000000000]      	dq L_constants + 1932
  1665                                  
  1666                                  free_var_108:	; location of null?
  1667 0000151D [2515000000000000]      	dq .undefined_object
  1668                                  .undefined_object:
  1669 00001525 05                      	db T_undefined
  1670 00001526 [0600000000000000]      	dq L_constants + 6
  1671                                  
  1672                                  free_var_109:	; location of number?
  1673 0000152E [3615000000000000]      	dq .undefined_object
  1674                                  .undefined_object:
  1675 00001536 05                      	db T_undefined
  1676 00001537 [BB00000000000000]      	dq L_constants + 187
  1677                                  
  1678                                  free_var_110:	; location of odd?
  1679 0000153F [4715000000000000]      	dq .undefined_object
  1680                                  .undefined_object:
  1681 00001547 05                      	db T_undefined
  1682 00001548 [8D0C000000000000]      	dq L_constants + 3213
  1683                                  
  1684                                  free_var_111:	; location of ormap
  1685 00001550 [5815000000000000]      	dq .undefined_object
  1686                                  .undefined_object:
  1687 00001558 05                      	db T_undefined
  1688 00001559 [E007000000000000]      	dq L_constants + 2016
  1689                                  
  1690                                  free_var_112:	; location of pair?
  1691 00001561 [6915000000000000]      	dq .undefined_object
  1692                                  .undefined_object:
  1693 00001569 05                      	db T_undefined
  1694 0000156A [1400000000000000]      	dq L_constants + 20
  1695                                  
  1696                                  free_var_113:	; location of positive?
  1697 00001572 [7A15000000000000]      	dq .undefined_object
  1698                                  .undefined_object:
  1699 0000157A 05                      	db T_undefined
  1700 0000157B [520C000000000000]      	dq L_constants + 3154
  1701                                  
  1702                                  free_var_114:	; location of random
  1703 00001583 [8B15000000000000]      	dq .undefined_object
  1704                                  .undefined_object:
  1705 0000158B 05                      	db T_undefined
  1706 0000158C [430C000000000000]      	dq L_constants + 3139
  1707                                  
  1708                                  free_var_115:	; location of rational?
  1709 00001594 [9C15000000000000]      	dq .undefined_object
  1710                                  .undefined_object:
  1711 0000159C 05                      	db T_undefined
  1712 0000159D [9807000000000000]      	dq L_constants + 1944
  1713                                  
  1714                                  free_var_116:	; location of real
  1715 000015A5 [AD15000000000000]      	dq .undefined_object
  1716                                  .undefined_object:
  1717 000015AD 05                      	db T_undefined
  1718 000015AE [CC08000000000000]      	dq L_constants + 2252
  1719                                  
  1720                                  free_var_117:	; location of real?
  1721 000015B6 [BE15000000000000]      	dq .undefined_object
  1722                                  .undefined_object:
  1723 000015BE 05                      	db T_undefined
  1724 000015BF [8A00000000000000]      	dq L_constants + 138
  1725                                  
  1726                                  free_var_118:	; location of remainder
  1727 000015C7 [CF15000000000000]      	dq .undefined_object
  1728                                  .undefined_object:
  1729 000015CF 05                      	db T_undefined
  1730 000015D0 [C603000000000000]      	dq L_constants + 966
  1731                                  
  1732                                  free_var_119:	; location of reverse
  1733 000015D8 [E015000000000000]      	dq .undefined_object
  1734                                  .undefined_object:
  1735 000015E0 05                      	db T_undefined
  1736 000015E1 [0908000000000000]      	dq L_constants + 2057
  1737                                  
  1738                                  free_var_120:	; location of run-2
  1739 000015E9 [F115000000000000]      	dq .undefined_object
  1740                                  .undefined_object:
  1741 000015F1 05                      	db T_undefined
  1742 000015F2 [3A08000000000000]      	dq L_constants + 2106
  1743                                  
  1744                                  free_var_121:	; location of string->list
  1745 000015FA [0216000000000000]      	dq .undefined_object
  1746                                  .undefined_object:
  1747 00001602 05                      	db T_undefined
  1748 00001603 [BE0A000000000000]      	dq L_constants + 2750
  1749                                  
  1750                                  free_var_122:	; location of string-append
  1751 0000160B [1316000000000000]      	dq .undefined_object
  1752                                  .undefined_object:
  1753 00001613 05                      	db T_undefined
  1754 00001614 [C30C000000000000]      	dq L_constants + 3267
  1755                                  
  1756                                  free_var_123:	; location of string-ci<=?
  1757 0000161C [2416000000000000]      	dq .undefined_object
  1758                                  .undefined_object:
  1759 00001624 05                      	db T_undefined
  1760 00001625 [3E0B000000000000]      	dq L_constants + 2878
  1761                                  
  1762                                  free_var_124:	; location of string-ci<?
  1763 0000162D [3516000000000000]      	dq .undefined_object
  1764                                  .undefined_object:
  1765 00001635 05                      	db T_undefined
  1766 00001636 [2A0B000000000000]      	dq L_constants + 2858
  1767                                  
  1768                                  free_var_125:	; location of string-ci=?
  1769 0000163E [4616000000000000]      	dq .undefined_object
  1770                                  .undefined_object:
  1771 00001646 05                      	db T_undefined
  1772 00001647 [530B000000000000]      	dq L_constants + 2899
  1773                                  
  1774                                  free_var_126:	; location of string-ci>=?
  1775 0000164F [5716000000000000]      	dq .undefined_object
  1776                                  .undefined_object:
  1777 00001657 05                      	db T_undefined
  1778 00001658 [670B000000000000]      	dq L_constants + 2919
  1779                                  
  1780                                  free_var_127:	; location of string-ci>?
  1781 00001660 [6816000000000000]      	dq .undefined_object
  1782                                  .undefined_object:
  1783 00001668 05                      	db T_undefined
  1784 00001669 [7C0B000000000000]      	dq L_constants + 2940
  1785                                  
  1786                                  free_var_128:	; location of string-downcase
  1787 00001671 [7916000000000000]      	dq .undefined_object
  1788                                  .undefined_object:
  1789 00001679 05                      	db T_undefined
  1790 0000167A [7B0A000000000000]      	dq L_constants + 2683
  1791                                  
  1792                                  free_var_129:	; location of string-length
  1793 00001682 [8A16000000000000]      	dq .undefined_object
  1794                                  .undefined_object:
  1795 0000168A 05                      	db T_undefined
  1796 0000168B [2D01000000000000]      	dq L_constants + 301
  1797                                  
  1798                                  free_var_130:	; location of string-ref
  1799 00001693 [9B16000000000000]      	dq .undefined_object
  1800                                  .undefined_object:
  1801 0000169B 05                      	db T_undefined
  1802 0000169C [FA03000000000000]      	dq L_constants + 1018
  1803                                  
  1804                                  free_var_131:	; location of string-reverse
  1805 000016A4 [AC16000000000000]      	dq .undefined_object
  1806                                  .undefined_object:
  1807 000016AC 05                      	db T_undefined
  1808 000016AD [FB0C000000000000]      	dq L_constants + 3323
  1809                                  
  1810                                  free_var_132:	; location of string-reverse!
  1811 000016B5 [BD16000000000000]      	dq .undefined_object
  1812                                  .undefined_object:
  1813 000016BD 05                      	db T_undefined
  1814 000016BE [290D000000000000]      	dq L_constants + 3369
  1815                                  
  1816                                  free_var_133:	; location of string-set!
  1817 000016C6 [CE16000000000000]      	dq .undefined_object
  1818                                  .undefined_object:
  1819 000016CE 05                      	db T_undefined
  1820 000016CF [3404000000000000]      	dq L_constants + 1076
  1821                                  
  1822                                  free_var_134:	; location of string-upcase
  1823 000016D7 [DF16000000000000]      	dq .undefined_object
  1824                                  .undefined_object:
  1825 000016DF 05                      	db T_undefined
  1826 000016E0 [930A000000000000]      	dq L_constants + 2707
  1827                                  
  1828                                  free_var_135:	; location of string<=?
  1829 000016E8 [F016000000000000]      	dq .undefined_object
  1830                                  .undefined_object:
  1831 000016F0 05                      	db T_undefined
  1832 000016F1 [E40A000000000000]      	dq L_constants + 2788
  1833                                  
  1834                                  free_var_136:	; location of string<?
  1835 000016F9 [0117000000000000]      	dq .undefined_object
  1836                                  .undefined_object:
  1837 00001701 05                      	db T_undefined
  1838 00001702 [D30A000000000000]      	dq L_constants + 2771
  1839                                  
  1840                                  free_var_137:	; location of string=?
  1841 0000170A [1217000000000000]      	dq .undefined_object
  1842                                  .undefined_object:
  1843 00001712 05                      	db T_undefined
  1844 00001713 [F60A000000000000]      	dq L_constants + 2806
  1845                                  
  1846                                  free_var_138:	; location of string>=?
  1847 0000171B [2317000000000000]      	dq .undefined_object
  1848                                  .undefined_object:
  1849 00001723 05                      	db T_undefined
  1850 00001724 [070B000000000000]      	dq L_constants + 2823
  1851                                  
  1852                                  free_var_139:	; location of string>?
  1853 0000172C [3417000000000000]      	dq .undefined_object
  1854                                  .undefined_object:
  1855 00001734 05                      	db T_undefined
  1856 00001735 [190B000000000000]      	dq L_constants + 2841
  1857                                  
  1858                                  free_var_140:	; location of string?
  1859 0000173D [4517000000000000]      	dq .undefined_object
  1860                                  .undefined_object:
  1861 00001745 05                      	db T_undefined
  1862 00001746 [3E00000000000000]      	dq L_constants + 62
  1863                                  
  1864                                  free_var_141:	; location of trng
  1865 0000174E [5617000000000000]      	dq .undefined_object
  1866                                  .undefined_object:
  1867 00001756 05                      	db T_undefined
  1868 00001757 [D501000000000000]      	dq L_constants + 469
  1869                                  
  1870                                  free_var_142:	; location of vector
  1871 0000175F [6717000000000000]      	dq .undefined_object
  1872                                  .undefined_object:
  1873 00001767 05                      	db T_undefined
  1874 00001768 [1F0C000000000000]      	dq L_constants + 3103
  1875                                  
  1876                                  free_var_143:	; location of vector->list
  1877 00001770 [7817000000000000]      	dq .undefined_object
  1878                                  .undefined_object:
  1879 00001778 05                      	db T_undefined
  1880 00001779 [2E0C000000000000]      	dq L_constants + 3118
  1881                                  
  1882                                  free_var_144:	; location of vector-append
  1883 00001781 [8917000000000000]      	dq .undefined_object
  1884                                  .undefined_object:
  1885 00001789 05                      	db T_undefined
  1886 0000178A [E50C000000000000]      	dq L_constants + 3301
  1887                                  
  1888                                  free_var_145:	; location of vector-length
  1889 00001792 [9A17000000000000]      	dq .undefined_object
  1890                                  .undefined_object:
  1891 0000179A 05                      	db T_undefined
  1892 0000179B [4301000000000000]      	dq L_constants + 323
  1893                                  
  1894                                  free_var_146:	; location of vector-ref
  1895 000017A3 [AB17000000000000]      	dq .undefined_object
  1896                                  .undefined_object:
  1897 000017AB 05                      	db T_undefined
  1898 000017AC [0D04000000000000]      	dq L_constants + 1037
  1899                                  
  1900                                  free_var_147:	; location of vector-reverse
  1901 000017B4 [BC17000000000000]      	dq .undefined_object
  1902                                  .undefined_object:
  1903 000017BC 05                      	db T_undefined
  1904 000017BD [120D000000000000]      	dq L_constants + 3346
  1905                                  
  1906                                  free_var_148:	; location of vector-reverse!
  1907 000017C5 [CD17000000000000]      	dq .undefined_object
  1908                                  .undefined_object:
  1909 000017CD 05                      	db T_undefined
  1910 000017CE [410D000000000000]      	dq L_constants + 3393
  1911                                  
  1912                                  free_var_149:	; location of vector-set!
  1913 000017D6 [DE17000000000000]      	dq .undefined_object
  1914                                  .undefined_object:
  1915 000017DE 05                      	db T_undefined
  1916 000017DF [2004000000000000]      	dq L_constants + 1056
  1917                                  
  1918                                  free_var_150:	; location of vector?
  1919 000017E7 [EF17000000000000]      	dq .undefined_object
  1920                                  .undefined_object:
  1921 000017EF 05                      	db T_undefined
  1922 000017F0 [6700000000000000]      	dq L_constants + 103
  1923                                  
  1924                                  free_var_151:	; location of void
  1925 000017F8 [0018000000000000]      	dq .undefined_object
  1926                                  .undefined_object:
  1927 00001800 05                      	db T_undefined
  1928 00001801 [D20D000000000000]      	dq L_constants + 3538
  1929                                  
  1930                                  free_var_152:	; location of write-char
  1931 00001809 [1118000000000000]      	dq .undefined_object
  1932                                  .undefined_object:
  1933 00001811 05                      	db T_undefined
  1934 00001812 [0201000000000000]      	dq L_constants + 258
  1935                                  
  1936                                  free_var_153:	; location of zero?
  1937 0000181A [2218000000000000]      	dq .undefined_object
  1938                                  .undefined_object:
  1939 00001822 05                      	db T_undefined
  1940 00001823 [E201000000000000]      	dq L_constants + 482
  1941                                  
  1942                                  
  1943                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1944                                  global main
  1945                                  section .text
  1946                                  main:
  1947 00000000 C8000000                        enter 0, 0
  1948 00000004 6A00                            push 0
  1949 00000006 6A00                            push 0
  1950 00000008 68[205F0100]                    push Lend
  1951 0000000D C8000000                        enter 0, 0
  1952                                  	; building closure for null?
  1953 00000011 48BF-                   	mov rdi, free_var_108
  1953 00000013 [1D15000000000000] 
  1954 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1954 0000001D [2B6A010000000000] 
  1955 00000025 E891680100              	call bind_primitive
  1956                                  
  1957                                  	; building closure for pair?
  1958 0000002A 48BF-                   	mov rdi, free_var_112
  1958 0000002C [6115000000000000] 
  1959 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1959 00000036 [5D6A010000000000] 
  1960 0000003E E878680100              	call bind_primitive
  1961                                  
  1962                                  	; building closure for char?
  1963 00000043 48BF-                   	mov rdi, free_var_79
  1963 00000045 [3013000000000000] 
  1964 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1964 0000004F [C16A010000000000] 
  1965 00000057 E85F680100              	call bind_primitive
  1966                                  
  1967                                  	; building closure for string?
  1968 0000005C 48BF-                   	mov rdi, free_var_140
  1968 0000005E [3D17000000000000] 
  1969 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1969 00000068 [F36A010000000000] 
  1970 00000070 E846680100              	call bind_primitive
  1971                                  
  1972                                  	; building closure for vector?
  1973 00000075 48BF-                   	mov rdi, free_var_150
  1973 00000077 [E717000000000000] 
  1974 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1974 00000081 [F16B010000000000] 
  1975 00000089 E82D680100              	call bind_primitive
  1976                                  
  1977                                  	; building closure for real?
  1978 0000008E 48BF-                   	mov rdi, free_var_117
  1978 00000090 [B615000000000000] 
  1979 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1979 0000009A [556C010000000000] 
  1980 000000A2 E814680100              	call bind_primitive
  1981                                  
  1982                                  	; building closure for fraction?
  1983 000000A7 48BF-                   	mov rdi, free_var_89
  1983 000000A9 [DA13000000000000] 
  1984 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1984 000000B3 [876C010000000000] 
  1985 000000BB E8FB670100              	call bind_primitive
  1986                                  
  1987                                  	; building closure for number?
  1988 000000C0 48BF-                   	mov rdi, free_var_109
  1988 000000C2 [2E15000000000000] 
  1989 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1989 000000CC [556D010000000000] 
  1990 000000D4 E8E2670100              	call bind_primitive
  1991                                  
  1992                                  	; building closure for cons
  1993 000000D9 48BF-                   	mov rdi, free_var_80
  1993 000000DB [4113000000000000] 
  1994 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1994 000000E5 [BD6D010000000000] 
  1995 000000ED E8C9670100              	call bind_primitive
  1996                                  
  1997                                  	; building closure for write-char
  1998 000000F2 48BF-                   	mov rdi, free_var_152
  1998 000000F4 [0918000000000000] 
  1999 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1999 000000FE [136E010000000000] 
  2000 00000106 E8B0670100              	call bind_primitive
  2001                                  
  2002                                  	; building closure for car
  2003 0000010B 48BF-                   	mov rdi, free_var_50
  2003 0000010D [4311000000000000] 
  2004 00000115 48BE-                   	mov rsi, L_code_ptr_car
  2004 00000117 [666E010000000000] 
  2005 0000011F E897670100              	call bind_primitive
  2006                                  
  2007                                  	; building closure for cdr
  2008 00000124 48BF-                   	mov rdi, free_var_65
  2008 00000126 [4212000000000000] 
  2009 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  2009 00000130 [8A6E010000000000] 
  2010 00000138 E87E670100              	call bind_primitive
  2011                                  
  2012                                  	; building closure for string-length
  2013 0000013D 48BF-                   	mov rdi, free_var_129
  2013 0000013F [8216000000000000] 
  2014 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  2014 00000149 [AE6E010000000000] 
  2015 00000151 E865670100              	call bind_primitive
  2016                                  
  2017                                  	; building closure for vector-length
  2018 00000156 48BF-                   	mov rdi, free_var_145
  2018 00000158 [9217000000000000] 
  2019 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  2019 00000162 [D76E010000000000] 
  2020 0000016A E84C670100              	call bind_primitive
  2021                                  
  2022                                  	; building closure for integer->real
  2023 0000016F 48BF-                   	mov rdi, free_var_91
  2023 00000171 [FC13000000000000] 
  2024 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2024 0000017B [486F010000000000] 
  2025 00000183 E833670100              	call bind_primitive
  2026                                  
  2027                                  	; building closure for fraction->real
  2028 00000188 48BF-                   	mov rdi, free_var_88
  2028 0000018A [C913000000000000] 
  2029 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2029 00000194 [766F010000000000] 
  2030 0000019C E81A670100              	call bind_primitive
  2031                                  
  2032                                  	; building closure for char->integer
  2033 000001A1 48BF-                   	mov rdi, free_var_66
  2033 000001A3 [5312000000000000] 
  2034 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2034 000001AD [B16F010000000000] 
  2035 000001B5 E801670100              	call bind_primitive
  2036                                  
  2037                                  	; building closure for integer->char
  2038 000001BA 48BF-                   	mov rdi, free_var_90
  2038 000001BC [EB13000000000000] 
  2039 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2039 000001C6 [2070010000000000] 
  2040 000001CE E8E8660100              	call bind_primitive
  2041                                  
  2042                                  	; building closure for trng
  2043 000001D3 48BF-                   	mov rdi, free_var_141
  2043 000001D5 [4E17000000000000] 
  2044 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2044 000001DF [6B70010000000000] 
  2045 000001E7 E8CF660100              	call bind_primitive
  2046                                  
  2047                                  	; building closure for zero?
  2048 000001EC 48BF-                   	mov rdi, free_var_153
  2048 000001EE [1A18000000000000] 
  2049 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2049 000001F8 [8A70010000000000] 
  2050 00000200 E8B6660100              	call bind_primitive
  2051                                  
  2052                                  	; building closure for integer?
  2053 00000205 48BF-                   	mov rdi, free_var_92
  2053 00000207 [0D14000000000000] 
  2054 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2054 00000211 [EF70010000000000] 
  2055 00000219 E89D660100              	call bind_primitive
  2056                                  
  2057                                  	; building closure for __bin-apply
  2058 0000021E 48BF-                   	mov rdi, free_var_12
  2058 00000220 [BD0E000000000000] 
  2059 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2059 0000022A [2B6A010000000000] 
  2060 00000232 E884660100              	call bind_primitive
  2061                                  
  2062                                  	; building closure for __bin-add-rr
  2063 00000237 48BF-                   	mov rdi, free_var_10
  2063 00000239 [9B0E000000000000] 
  2064 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2064 00000243 [2171010000000000] 
  2065 0000024B E86B660100              	call bind_primitive
  2066                                  
  2067                                  	; building closure for __bin-sub-rr
  2068 00000250 48BF-                   	mov rdi, free_var_26
  2068 00000252 [AB0F000000000000] 
  2069 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2069 0000025C [6171010000000000] 
  2070 00000264 E852660100              	call bind_primitive
  2071                                  
  2072                                  	; building closure for __bin-mul-rr
  2073 00000269 48BF-                   	mov rdi, free_var_23
  2073 0000026B [780F000000000000] 
  2074 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2074 00000275 [A171010000000000] 
  2075 0000027D E839660100              	call bind_primitive
  2076                                  
  2077                                  	; building closure for __bin-div-rr
  2078 00000282 48BF-                   	mov rdi, free_var_14
  2078 00000284 [DF0E000000000000] 
  2079 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2079 0000028E [E171010000000000] 
  2080 00000296 E820660100              	call bind_primitive
  2081                                  
  2082                                  	; building closure for __bin-add-qq
  2083 0000029B 48BF-                   	mov rdi, free_var_9
  2083 0000029D [8A0E000000000000] 
  2084 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2084 000002A7 [6B72010000000000] 
  2085 000002AF E807660100              	call bind_primitive
  2086                                  
  2087                                  	; building closure for __bin-sub-qq
  2088 000002B4 48BF-                   	mov rdi, free_var_25
  2088 000002B6 [9A0F000000000000] 
  2089 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2089 000002C0 [0B73010000000000] 
  2090 000002C8 E8EE650100              	call bind_primitive
  2091                                  
  2092                                  	; building closure for __bin-mul-qq
  2093 000002CD 48BF-                   	mov rdi, free_var_22
  2093 000002CF [670F000000000000] 
  2094 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2094 000002D9 [B073010000000000] 
  2095 000002E1 E8D5650100              	call bind_primitive
  2096                                  
  2097                                  	; building closure for __bin-div-qq
  2098 000002E6 48BF-                   	mov rdi, free_var_13
  2098 000002E8 [CE0E000000000000] 
  2099 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2099 000002F2 [4A74010000000000] 
  2100 000002FA E8BC650100              	call bind_primitive
  2101                                  
  2102                                  	; building closure for __bin-add-zz
  2103 000002FF 48BF-                   	mov rdi, free_var_11
  2103 00000301 [AC0E000000000000] 
  2104 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2104 0000030B [2F72010000000000] 
  2105 00000313 E8A3650100              	call bind_primitive
  2106                                  
  2107                                  	; building closure for __bin-sub-zz
  2108 00000318 48BF-                   	mov rdi, free_var_27
  2108 0000031A [BC0F000000000000] 
  2109 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2109 00000324 [CF72010000000000] 
  2110 0000032C E88A650100              	call bind_primitive
  2111                                  
  2112                                  	; building closure for __bin-mul-zz
  2113 00000331 48BF-                   	mov rdi, free_var_24
  2113 00000333 [890F000000000000] 
  2114 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2114 0000033D [6F73010000000000] 
  2115 00000345 E871650100              	call bind_primitive
  2116                                  
  2117                                  	; building closure for __bin-div-zz
  2118 0000034A 48BF-                   	mov rdi, free_var_15
  2118 0000034C [F00E000000000000] 
  2119 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2119 00000356 [0474010000000000] 
  2120 0000035E E858650100              	call bind_primitive
  2121                                  
  2122                                  	; building closure for error
  2123 00000363 48BF-                   	mov rdi, free_var_83
  2123 00000365 [7413000000000000] 
  2124 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2124 0000036F [3475010000000000] 
  2125 00000377 E83F650100              	call bind_primitive
  2126                                  
  2127                                  	; building closure for __bin-less-than-rr
  2128 0000037C 48BF-                   	mov rdi, free_var_20
  2128 0000037E [450F000000000000] 
  2129 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2129 00000388 [F075010000000000] 
  2130 00000390 E826650100              	call bind_primitive
  2131                                  
  2132                                  	; building closure for __bin-less-than-qq
  2133 00000395 48BF-                   	mov rdi, free_var_19
  2133 00000397 [340F000000000000] 
  2134 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2134 000003A1 [9276010000000000] 
  2135 000003A9 E80D650100              	call bind_primitive
  2136                                  
  2137                                  	; building closure for __bin-less-than-zz
  2138 000003AE 48BF-                   	mov rdi, free_var_21
  2138 000003B0 [560F000000000000] 
  2139 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2139 000003BA [4376010000000000] 
  2140 000003C2 E8F4640100              	call bind_primitive
  2141                                  
  2142                                  	; building closure for __bin-equal-rr
  2143 000003C7 48BF-                   	mov rdi, free_var_17
  2143 000003C9 [120F000000000000] 
  2144 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2144 000003D3 [F176010000000000] 
  2145 000003DB E8DB640100              	call bind_primitive
  2146                                  
  2147                                  	; building closure for __bin-equal-qq
  2148 000003E0 48BF-                   	mov rdi, free_var_16
  2148 000003E2 [010F000000000000] 
  2149 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2149 000003EC [9377010000000000] 
  2150 000003F4 E8C2640100              	call bind_primitive
  2151                                  
  2152                                  	; building closure for __bin-equal-zz
  2153 000003F9 48BF-                   	mov rdi, free_var_18
  2153 000003FB [230F000000000000] 
  2154 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2154 00000405 [4477010000000000] 
  2155 0000040D E8A9640100              	call bind_primitive
  2156                                  
  2157                                  	; building closure for remainder
  2158 00000412 48BF-                   	mov rdi, free_var_118
  2158 00000414 [C715000000000000] 
  2159 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2159 0000041E [3E78010000000000] 
  2160 00000426 E890640100              	call bind_primitive
  2161                                  
  2162                                  	; building closure for string-ref
  2163 0000042B 48BF-                   	mov rdi, free_var_130
  2163 0000042D [9316000000000000] 
  2164 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2164 00000437 [EE78010000000000] 
  2165 0000043F E877640100              	call bind_primitive
  2166                                  
  2167                                  	; building closure for vector-ref
  2168 00000444 48BF-                   	mov rdi, free_var_146
  2168 00000446 [A317000000000000] 
  2169 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2169 00000450 [4A79010000000000] 
  2170 00000458 E85E640100              	call bind_primitive
  2171                                  
  2172                                  	; building closure for vector-set!
  2173 0000045D 48BF-                   	mov rdi, free_var_149
  2173 0000045F [D617000000000000] 
  2174 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2174 00000469 [9779010000000000] 
  2175 00000471 E845640100              	call bind_primitive
  2176                                  
  2177                                  	; building closure for string-set!
  2178 00000476 48BF-                   	mov rdi, free_var_133
  2178 00000478 [C616000000000000] 
  2179 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2179 00000482 [F279010000000000] 
  2180 0000048A E82C640100              	call bind_primitive
  2181                                  
  2182                                  	; building closure for make-vector
  2183 0000048F 48BF-                   	mov rdi, free_var_102
  2183 00000491 [B714000000000000] 
  2184 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2184 0000049B [587A010000000000] 
  2185 000004A3 E813640100              	call bind_primitive
  2186                                  
  2187                                  	; building closure for make-string
  2188 000004A8 48BF-                   	mov rdi, free_var_100
  2188 000004AA [9514000000000000] 
  2189 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2189 000004B4 [B37A010000000000] 
  2190 000004BC E8FA630100              	call bind_primitive
  2191                                  
  2192                                  	; building closure for eq?
  2193 000004C1 48BF-                   	mov rdi, free_var_81
  2193 000004C3 [5213000000000000] 
  2194 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2194 000004CD [687B010000000000] 
  2195 000004D5 E8E1630100              	call bind_primitive
  2196                                  
  2197                                  	; building closure for __integer-to-fraction
  2198 000004DA 48BF-                   	mov rdi, free_var_29
  2198 000004DC [DE0F000000000000] 
  2199 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2199 000004E6 [E26F010000000000] 
  2200 000004EE E8C8630100              	call bind_primitive
  2201                                  
  2202 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2203 000004F8 E88E5B0100              	call malloc
  2204 000004FD 50                      	push rax
  2205 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2206 00000503 E8835B0100              	call malloc
  2207 00000508 50                      	push rax
  2208 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2209 0000050E E8785B0100              	call malloc
  2210 00000513 488B7D10                	mov rdi, ENV
  2211 00000517 BE00000000              	mov rsi, 0
  2212 0000051C BA01000000              	mov rdx, 1
  2213                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2214 00000521 4883FE00                	cmp rsi, 0
  2215 00000525 7410                    	je .L_lambda_simple_env_end_0001
  2216 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2217 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2218 0000052F 48FFC6                  	inc rsi
  2219 00000532 48FFC2                  	inc rdx
  2220 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2221                                  .L_lambda_simple_env_end_0001:
  2222 00000537 5B                      	pop rbx
  2223 00000538 BE00000000              	mov rsi, 0
  2224                                  .L_lambda_simple_params_loop_0001:	; copy params
  2225 0000053D 4883FE00                	cmp rsi, 0
  2226 00000541 740E                    	je .L_lambda_simple_params_end_0001
  2227 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2228 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2229 0000054C 48FFC6                  	inc rsi
  2230 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2231                                  .L_lambda_simple_params_end_0001:
  2232 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2233 00000554 4889C3                  	mov rbx, rax
  2234 00000557 58                      	pop rax
  2235 00000558 C60004                  	mov byte [rax], T_closure
  2236 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2237 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2238 00000567 E9A3000000              	jmp .L_lambda_simple_end_0001
  2239                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2240 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2241 00000572 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2242 00000574 FF742410                	push qword [rsp + 8 * 2]
  2243 00000578 6A01                    	push 1
  2244 0000057A E9C55A0100              	jmp L_error_incorrect_arity_simple
  2245                                  .L_lambda_simple_arity_check_ok_0001:
  2246 0000057F C8000000                	enter 0, 0
  2247                                  	; Setting up for a tail-call
  2248                                  	; preparing a non-tail-call
  2249 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2250 00000587 50                      	push rax
  2251 00000588 6A01                    	push 1	; arg count
  2252 0000058A 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2253 00000592 803805                  	cmp byte [rax], T_undefined
  2254 00000595 0F84C3590100            	je L_error_fvar_undefined
  2255 0000059B 803804                  	cmp byte [rax], T_closure
  2256 0000059E 0F853E5A0100            	jne L_error_non_closure
  2257 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2258 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2259 000005AA 50                      	push rax
  2260 000005AB 6A01                    	push 1
  2261 000005AD 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2262 000005B5 803805                  	cmp byte [rax], T_undefined
  2263 000005B8 0F84A0590100            	je L_error_fvar_undefined
  2264 000005BE 803804                  	cmp byte [rax], T_closure
  2265 000005C1 0F851B5A0100            	jne L_error_non_closure
  2266 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2267 000005CA 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2268 000005CE 4C8B4D00                	mov r9, qword [rbp]
  2269 000005D2 4150                    	push r8
  2270 000005D4 4151                    	push r9
  2271 000005D6 41BA05000000            	mov r10, 1 + 4
  2272 000005DC 4C8B5D18                	mov r11, COUNT
  2273 000005E0 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2274 000005E5 4C8D65F8                	lea r12, [rbp - 8]
  2275                                  .L_tc_recycle_frame_loop_0001:
  2276 000005E9 4983FA00                	cmp r10, 0
  2277 000005ED 7414                    	je .L_tc_recycle_frame_done_0001
  2278 000005EF 4D8B2C24                	mov r13, qword [r12]
  2279 000005F3 4D892B                  	mov qword [r11], r13
  2280 000005F6 49FFCA                  	dec r10
  2281 000005F9 4983EB08                	sub r11, 8
  2282 000005FD 4983EC08                	sub r12, 8
  2283 00000601 EBE6                    	jmp .L_tc_recycle_frame_loop_0001
  2284                                  .L_tc_recycle_frame_done_0001:
  2285 00000603 498D6308                	lea rsp, [r11 + 8]
  2286 00000607 5D                      	pop rbp
  2287 00000608 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2288 0000060B C9                      	leave
  2289 0000060C C21800                  	ret AND_KILL_FRAME(1)
  2290                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2291 0000060F 48890425[BB100000]      	mov qword [free_var_42], rax
  2292 00000617 48B8-                   	mov rax, sob_void
  2292 00000619 [0000000000000000] 
  2293                                  
  2294 00000621 4889C7                  	mov rdi, rax
  2295 00000624 E8B75C0100              	call print_sexpr_if_not_void
  2296 00000629 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2297 0000062E E8585A0100              	call malloc
  2298 00000633 50                      	push rax
  2299 00000634 BF00000000              	mov rdi, 8 * 0	; new rib
  2300 00000639 E84D5A0100              	call malloc
  2301 0000063E 50                      	push rax
  2302 0000063F BF08000000              	mov rdi, 8 * 1	; extended env
  2303 00000644 E8425A0100              	call malloc
  2304 00000649 488B7D10                	mov rdi, ENV
  2305 0000064D BE00000000              	mov rsi, 0
  2306 00000652 BA01000000              	mov rdx, 1
  2307                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2308 00000657 4883FE00                	cmp rsi, 0
  2309 0000065B 7410                    	je .L_lambda_simple_env_end_0002
  2310 0000065D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2311 00000661 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2312 00000665 48FFC6                  	inc rsi
  2313 00000668 48FFC2                  	inc rdx
  2314 0000066B EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2315                                  .L_lambda_simple_env_end_0002:
  2316 0000066D 5B                      	pop rbx
  2317 0000066E BE00000000              	mov rsi, 0
  2318                                  .L_lambda_simple_params_loop_0002:	; copy params
  2319 00000673 4883FE00                	cmp rsi, 0
  2320 00000677 740E                    	je .L_lambda_simple_params_end_0002
  2321 00000679 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2322 0000067E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2323 00000682 48FFC6                  	inc rsi
  2324 00000685 EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2325                                  .L_lambda_simple_params_end_0002:
  2326 00000687 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2327 0000068A 4889C3                  	mov rbx, rax
  2328 0000068D 58                      	pop rax
  2329 0000068E C60004                  	mov byte [rax], T_closure
  2330 00000691 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2331 00000695 48C74009[A2060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2332 0000069D E9A3000000              	jmp .L_lambda_simple_end_0002
  2333                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2334 000006A2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2335 000006A8 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2336 000006AA FF742410                	push qword [rsp + 8 * 2]
  2337 000006AE 6A01                    	push 1
  2338 000006B0 E98F590100              	jmp L_error_incorrect_arity_simple
  2339                                  .L_lambda_simple_arity_check_ok_0002:
  2340 000006B5 C8000000                	enter 0, 0
  2341                                  	; Setting up for a tail-call
  2342                                  	; preparing a non-tail-call
  2343 000006B9 488B4520                	mov rax, PARAM(0)	; param x
  2344 000006BD 50                      	push rax
  2345 000006BE 6A01                    	push 1	; arg count
  2346 000006C0 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  2347 000006C8 803805                  	cmp byte [rax], T_undefined
  2348 000006CB 0F848D580100            	je L_error_fvar_undefined
  2349 000006D1 803804                  	cmp byte [rax], T_closure
  2350 000006D4 0F8508590100            	jne L_error_non_closure
  2351 000006DA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2352 000006DD FF5009                  	call SOB_CLOSURE_CODE(rax)
  2353 000006E0 50                      	push rax
  2354 000006E1 6A01                    	push 1
  2355 000006E3 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2356 000006EB 803805                  	cmp byte [rax], T_undefined
  2357 000006EE 0F846A580100            	je L_error_fvar_undefined
  2358 000006F4 803804                  	cmp byte [rax], T_closure
  2359 000006F7 0F85E5580100            	jne L_error_non_closure
  2360 000006FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2361 00000700 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2362 00000704 4C8B4D00                	mov r9, qword [rbp]
  2363 00000708 4150                    	push r8
  2364 0000070A 4151                    	push r9
  2365 0000070C 41BA05000000            	mov r10, 1 + 4
  2366 00000712 4C8B5D18                	mov r11, COUNT
  2367 00000716 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2368 0000071B 4C8D65F8                	lea r12, [rbp - 8]
  2369                                  .L_tc_recycle_frame_loop_0002:
  2370 0000071F 4983FA00                	cmp r10, 0
  2371 00000723 7414                    	je .L_tc_recycle_frame_done_0002
  2372 00000725 4D8B2C24                	mov r13, qword [r12]
  2373 00000729 4D892B                  	mov qword [r11], r13
  2374 0000072C 49FFCA                  	dec r10
  2375 0000072F 4983EB08                	sub r11, 8
  2376 00000733 4983EC08                	sub r12, 8
  2377 00000737 EBE6                    	jmp .L_tc_recycle_frame_loop_0002
  2378                                  .L_tc_recycle_frame_done_0002:
  2379 00000739 498D6308                	lea rsp, [r11 + 8]
  2380 0000073D 5D                      	pop rbp
  2381 0000073E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2382 00000741 C9                      	leave
  2383 00000742 C21800                  	ret AND_KILL_FRAME(1)
  2384                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2385 00000745 48890425[32110000]      	mov qword [free_var_49], rax
  2386 0000074D 48B8-                   	mov rax, sob_void
  2386 0000074F [0000000000000000] 
  2387                                  
  2388 00000757 4889C7                  	mov rdi, rax
  2389 0000075A E8815B0100              	call print_sexpr_if_not_void
  2390 0000075F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2391 00000764 E822590100              	call malloc
  2392 00000769 50                      	push rax
  2393 0000076A BF00000000              	mov rdi, 8 * 0	; new rib
  2394 0000076F E817590100              	call malloc
  2395 00000774 50                      	push rax
  2396 00000775 BF08000000              	mov rdi, 8 * 1	; extended env
  2397 0000077A E80C590100              	call malloc
  2398 0000077F 488B7D10                	mov rdi, ENV
  2399 00000783 BE00000000              	mov rsi, 0
  2400 00000788 BA01000000              	mov rdx, 1
  2401                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2402 0000078D 4883FE00                	cmp rsi, 0
  2403 00000791 7410                    	je .L_lambda_simple_env_end_0003
  2404 00000793 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2405 00000797 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2406 0000079B 48FFC6                  	inc rsi
  2407 0000079E 48FFC2                  	inc rdx
  2408 000007A1 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2409                                  .L_lambda_simple_env_end_0003:
  2410 000007A3 5B                      	pop rbx
  2411 000007A4 BE00000000              	mov rsi, 0
  2412                                  .L_lambda_simple_params_loop_0003:	; copy params
  2413 000007A9 4883FE00                	cmp rsi, 0
  2414 000007AD 740E                    	je .L_lambda_simple_params_end_0003
  2415 000007AF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2416 000007B4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2417 000007B8 48FFC6                  	inc rsi
  2418 000007BB EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2419                                  .L_lambda_simple_params_end_0003:
  2420 000007BD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2421 000007C0 4889C3                  	mov rbx, rax
  2422 000007C3 58                      	pop rax
  2423 000007C4 C60004                  	mov byte [rax], T_closure
  2424 000007C7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2425 000007CB 48C74009[D8070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2426 000007D3 E9A3000000              	jmp .L_lambda_simple_end_0003
  2427                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2428 000007D8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2429 000007DE 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2430 000007E0 FF742410                	push qword [rsp + 8 * 2]
  2431 000007E4 6A01                    	push 1
  2432 000007E6 E959580100              	jmp L_error_incorrect_arity_simple
  2433                                  .L_lambda_simple_arity_check_ok_0003:
  2434 000007EB C8000000                	enter 0, 0
  2435                                  	; Setting up for a tail-call
  2436                                  	; preparing a non-tail-call
  2437 000007EF 488B4520                	mov rax, PARAM(0)	; param x
  2438 000007F3 50                      	push rax
  2439 000007F4 6A01                    	push 1	; arg count
  2440 000007F6 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2441 000007FE 803805                  	cmp byte [rax], T_undefined
  2442 00000801 0F8457570100            	je L_error_fvar_undefined
  2443 00000807 803804                  	cmp byte [rax], T_closure
  2444 0000080A 0F85D2570100            	jne L_error_non_closure
  2445 00000810 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2446 00000813 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2447 00000816 50                      	push rax
  2448 00000817 6A01                    	push 1
  2449 00000819 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  2450 00000821 803805                  	cmp byte [rax], T_undefined
  2451 00000824 0F8434570100            	je L_error_fvar_undefined
  2452 0000082A 803804                  	cmp byte [rax], T_closure
  2453 0000082D 0F85AF570100            	jne L_error_non_closure
  2454 00000833 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2455 00000836 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2456 0000083A 4C8B4D00                	mov r9, qword [rbp]
  2457 0000083E 4150                    	push r8
  2458 00000840 4151                    	push r9
  2459 00000842 41BA05000000            	mov r10, 1 + 4
  2460 00000848 4C8B5D18                	mov r11, COUNT
  2461 0000084C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2462 00000851 4C8D65F8                	lea r12, [rbp - 8]
  2463                                  .L_tc_recycle_frame_loop_0003:
  2464 00000855 4983FA00                	cmp r10, 0
  2465 00000859 7414                    	je .L_tc_recycle_frame_done_0003
  2466 0000085B 4D8B2C24                	mov r13, qword [r12]
  2467 0000085F 4D892B                  	mov qword [r11], r13
  2468 00000862 49FFCA                  	dec r10
  2469 00000865 4983EB08                	sub r11, 8
  2470 00000869 4983EC08                	sub r12, 8
  2471 0000086D EBE6                    	jmp .L_tc_recycle_frame_loop_0003
  2472                                  .L_tc_recycle_frame_done_0003:
  2473 0000086F 498D6308                	lea rsp, [r11 + 8]
  2474 00000873 5D                      	pop rbp
  2475 00000874 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2476 00000877 C9                      	leave
  2477 00000878 C21800                  	ret AND_KILL_FRAME(1)
  2478                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2479 0000087B 48890425[BA110000]      	mov qword [free_var_57], rax
  2480 00000883 48B8-                   	mov rax, sob_void
  2480 00000885 [0000000000000000] 
  2481                                  
  2482 0000088D 4889C7                  	mov rdi, rax
  2483 00000890 E84B5A0100              	call print_sexpr_if_not_void
  2484 00000895 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2485 0000089A E8EC570100              	call malloc
  2486 0000089F 50                      	push rax
  2487 000008A0 BF00000000              	mov rdi, 8 * 0	; new rib
  2488 000008A5 E8E1570100              	call malloc
  2489 000008AA 50                      	push rax
  2490 000008AB BF08000000              	mov rdi, 8 * 1	; extended env
  2491 000008B0 E8D6570100              	call malloc
  2492 000008B5 488B7D10                	mov rdi, ENV
  2493 000008B9 BE00000000              	mov rsi, 0
  2494 000008BE BA01000000              	mov rdx, 1
  2495                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2496 000008C3 4883FE00                	cmp rsi, 0
  2497 000008C7 7410                    	je .L_lambda_simple_env_end_0004
  2498 000008C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2499 000008CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2500 000008D1 48FFC6                  	inc rsi
  2501 000008D4 48FFC2                  	inc rdx
  2502 000008D7 EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2503                                  .L_lambda_simple_env_end_0004:
  2504 000008D9 5B                      	pop rbx
  2505 000008DA BE00000000              	mov rsi, 0
  2506                                  .L_lambda_simple_params_loop_0004:	; copy params
  2507 000008DF 4883FE00                	cmp rsi, 0
  2508 000008E3 740E                    	je .L_lambda_simple_params_end_0004
  2509 000008E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2510 000008EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2511 000008EE 48FFC6                  	inc rsi
  2512 000008F1 EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2513                                  .L_lambda_simple_params_end_0004:
  2514 000008F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2515 000008F6 4889C3                  	mov rbx, rax
  2516 000008F9 58                      	pop rax
  2517 000008FA C60004                  	mov byte [rax], T_closure
  2518 000008FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2519 00000901 48C74009[0E090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2520 00000909 E9A3000000              	jmp .L_lambda_simple_end_0004
  2521                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2522 0000090E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2523 00000914 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2524 00000916 FF742410                	push qword [rsp + 8 * 2]
  2525 0000091A 6A01                    	push 1
  2526 0000091C E923570100              	jmp L_error_incorrect_arity_simple
  2527                                  .L_lambda_simple_arity_check_ok_0004:
  2528 00000921 C8000000                	enter 0, 0
  2529                                  	; Setting up for a tail-call
  2530                                  	; preparing a non-tail-call
  2531 00000925 488B4520                	mov rax, PARAM(0)	; param x
  2532 00000929 50                      	push rax
  2533 0000092A 6A01                    	push 1	; arg count
  2534 0000092C 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  2535 00000934 803805                  	cmp byte [rax], T_undefined
  2536 00000937 0F8421560100            	je L_error_fvar_undefined
  2537 0000093D 803804                  	cmp byte [rax], T_closure
  2538 00000940 0F859C560100            	jne L_error_non_closure
  2539 00000946 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2540 00000949 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2541 0000094C 50                      	push rax
  2542 0000094D 6A01                    	push 1
  2543 0000094F 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  2544 00000957 803805                  	cmp byte [rax], T_undefined
  2545 0000095A 0F84FE550100            	je L_error_fvar_undefined
  2546 00000960 803804                  	cmp byte [rax], T_closure
  2547 00000963 0F8579560100            	jne L_error_non_closure
  2548 00000969 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2549 0000096C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2550 00000970 4C8B4D00                	mov r9, qword [rbp]
  2551 00000974 4150                    	push r8
  2552 00000976 4151                    	push r9
  2553 00000978 41BA05000000            	mov r10, 1 + 4
  2554 0000097E 4C8B5D18                	mov r11, COUNT
  2555 00000982 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2556 00000987 4C8D65F8                	lea r12, [rbp - 8]
  2557                                  .L_tc_recycle_frame_loop_0004:
  2558 0000098B 4983FA00                	cmp r10, 0
  2559 0000098F 7414                    	je .L_tc_recycle_frame_done_0004
  2560 00000991 4D8B2C24                	mov r13, qword [r12]
  2561 00000995 4D892B                  	mov qword [r11], r13
  2562 00000998 49FFCA                  	dec r10
  2563 0000099B 4983EB08                	sub r11, 8
  2564 0000099F 4983EC08                	sub r12, 8
  2565 000009A3 EBE6                    	jmp .L_tc_recycle_frame_loop_0004
  2566                                  .L_tc_recycle_frame_done_0004:
  2567 000009A5 498D6308                	lea rsp, [r11 + 8]
  2568 000009A9 5D                      	pop rbp
  2569 000009AA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2570 000009AD C9                      	leave
  2571 000009AE C21800                  	ret AND_KILL_FRAME(1)
  2572                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2573 000009B1 48890425[31120000]      	mov qword [free_var_64], rax
  2574 000009B9 48B8-                   	mov rax, sob_void
  2574 000009BB [0000000000000000] 
  2575                                  
  2576 000009C3 4889C7                  	mov rdi, rax
  2577 000009C6 E815590100              	call print_sexpr_if_not_void
  2578 000009CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2579 000009D0 E8B6560100              	call malloc
  2580 000009D5 50                      	push rax
  2581 000009D6 BF00000000              	mov rdi, 8 * 0	; new rib
  2582 000009DB E8AB560100              	call malloc
  2583 000009E0 50                      	push rax
  2584 000009E1 BF08000000              	mov rdi, 8 * 1	; extended env
  2585 000009E6 E8A0560100              	call malloc
  2586 000009EB 488B7D10                	mov rdi, ENV
  2587 000009EF BE00000000              	mov rsi, 0
  2588 000009F4 BA01000000              	mov rdx, 1
  2589                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2590 000009F9 4883FE00                	cmp rsi, 0
  2591 000009FD 7410                    	je .L_lambda_simple_env_end_0005
  2592 000009FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2593 00000A03 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2594 00000A07 48FFC6                  	inc rsi
  2595 00000A0A 48FFC2                  	inc rdx
  2596 00000A0D EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2597                                  .L_lambda_simple_env_end_0005:
  2598 00000A0F 5B                      	pop rbx
  2599 00000A10 BE00000000              	mov rsi, 0
  2600                                  .L_lambda_simple_params_loop_0005:	; copy params
  2601 00000A15 4883FE00                	cmp rsi, 0
  2602 00000A19 740E                    	je .L_lambda_simple_params_end_0005
  2603 00000A1B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2604 00000A20 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2605 00000A24 48FFC6                  	inc rsi
  2606 00000A27 EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2607                                  .L_lambda_simple_params_end_0005:
  2608 00000A29 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2609 00000A2C 4889C3                  	mov rbx, rax
  2610 00000A2F 58                      	pop rax
  2611 00000A30 C60004                  	mov byte [rax], T_closure
  2612 00000A33 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2613 00000A37 48C74009[440A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2614 00000A3F E9A3000000              	jmp .L_lambda_simple_end_0005
  2615                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2616 00000A44 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2617 00000A4A 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2618 00000A4C FF742410                	push qword [rsp + 8 * 2]
  2619 00000A50 6A01                    	push 1
  2620 00000A52 E9ED550100              	jmp L_error_incorrect_arity_simple
  2621                                  .L_lambda_simple_arity_check_ok_0005:
  2622 00000A57 C8000000                	enter 0, 0
  2623                                  	; Setting up for a tail-call
  2624                                  	; preparing a non-tail-call
  2625 00000A5B 488B4520                	mov rax, PARAM(0)	; param x
  2626 00000A5F 50                      	push rax
  2627 00000A60 6A01                    	push 1	; arg count
  2628 00000A62 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  2629 00000A6A 803805                  	cmp byte [rax], T_undefined
  2630 00000A6D 0F84EB540100            	je L_error_fvar_undefined
  2631 00000A73 803804                  	cmp byte [rax], T_closure
  2632 00000A76 0F8566550100            	jne L_error_non_closure
  2633 00000A7C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2634 00000A7F FF5009                  	call SOB_CLOSURE_CODE(rax)
  2635 00000A82 50                      	push rax
  2636 00000A83 6A01                    	push 1
  2637 00000A85 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2638 00000A8D 803805                  	cmp byte [rax], T_undefined
  2639 00000A90 0F84C8540100            	je L_error_fvar_undefined
  2640 00000A96 803804                  	cmp byte [rax], T_closure
  2641 00000A99 0F8543550100            	jne L_error_non_closure
  2642 00000A9F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2643 00000AA2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2644 00000AA6 4C8B4D00                	mov r9, qword [rbp]
  2645 00000AAA 4150                    	push r8
  2646 00000AAC 4151                    	push r9
  2647 00000AAE 41BA05000000            	mov r10, 1 + 4
  2648 00000AB4 4C8B5D18                	mov r11, COUNT
  2649 00000AB8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2650 00000ABD 4C8D65F8                	lea r12, [rbp - 8]
  2651                                  .L_tc_recycle_frame_loop_0005:
  2652 00000AC1 4983FA00                	cmp r10, 0
  2653 00000AC5 7414                    	je .L_tc_recycle_frame_done_0005
  2654 00000AC7 4D8B2C24                	mov r13, qword [r12]
  2655 00000ACB 4D892B                  	mov qword [r11], r13
  2656 00000ACE 49FFCA                  	dec r10
  2657 00000AD1 4983EB08                	sub r11, 8
  2658 00000AD5 4983EC08                	sub r12, 8
  2659 00000AD9 EBE6                    	jmp .L_tc_recycle_frame_loop_0005
  2660                                  .L_tc_recycle_frame_done_0005:
  2661 00000ADB 498D6308                	lea rsp, [r11 + 8]
  2662 00000ADF 5D                      	pop rbp
  2663 00000AE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2664 00000AE3 C9                      	leave
  2665 00000AE4 C21800                  	ret AND_KILL_FRAME(1)
  2666                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2667 00000AE7 48890425[77100000]      	mov qword [free_var_38], rax
  2668 00000AEF 48B8-                   	mov rax, sob_void
  2668 00000AF1 [0000000000000000] 
  2669                                  
  2670 00000AF9 4889C7                  	mov rdi, rax
  2671 00000AFC E8DF570100              	call print_sexpr_if_not_void
  2672 00000B01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2673 00000B06 E880550100              	call malloc
  2674 00000B0B 50                      	push rax
  2675 00000B0C BF00000000              	mov rdi, 8 * 0	; new rib
  2676 00000B11 E875550100              	call malloc
  2677 00000B16 50                      	push rax
  2678 00000B17 BF08000000              	mov rdi, 8 * 1	; extended env
  2679 00000B1C E86A550100              	call malloc
  2680 00000B21 488B7D10                	mov rdi, ENV
  2681 00000B25 BE00000000              	mov rsi, 0
  2682 00000B2A BA01000000              	mov rdx, 1
  2683                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2684 00000B2F 4883FE00                	cmp rsi, 0
  2685 00000B33 7410                    	je .L_lambda_simple_env_end_0006
  2686 00000B35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2687 00000B39 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2688 00000B3D 48FFC6                  	inc rsi
  2689 00000B40 48FFC2                  	inc rdx
  2690 00000B43 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2691                                  .L_lambda_simple_env_end_0006:
  2692 00000B45 5B                      	pop rbx
  2693 00000B46 BE00000000              	mov rsi, 0
  2694                                  .L_lambda_simple_params_loop_0006:	; copy params
  2695 00000B4B 4883FE00                	cmp rsi, 0
  2696 00000B4F 740E                    	je .L_lambda_simple_params_end_0006
  2697 00000B51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2698 00000B56 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2699 00000B5A 48FFC6                  	inc rsi
  2700 00000B5D EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2701                                  .L_lambda_simple_params_end_0006:
  2702 00000B5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2703 00000B62 4889C3                  	mov rbx, rax
  2704 00000B65 58                      	pop rax
  2705 00000B66 C60004                  	mov byte [rax], T_closure
  2706 00000B69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2707 00000B6D 48C74009[7A0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2708 00000B75 E9A3000000              	jmp .L_lambda_simple_end_0006
  2709                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2710 00000B7A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2711 00000B80 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2712 00000B82 FF742410                	push qword [rsp + 8 * 2]
  2713 00000B86 6A01                    	push 1
  2714 00000B88 E9B7540100              	jmp L_error_incorrect_arity_simple
  2715                                  .L_lambda_simple_arity_check_ok_0006:
  2716 00000B8D C8000000                	enter 0, 0
  2717                                  	; Setting up for a tail-call
  2718                                  	; preparing a non-tail-call
  2719 00000B91 488B4520                	mov rax, PARAM(0)	; param x
  2720 00000B95 50                      	push rax
  2721 00000B96 6A01                    	push 1	; arg count
  2722 00000B98 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  2723 00000BA0 803805                  	cmp byte [rax], T_undefined
  2724 00000BA3 0F84B5530100            	je L_error_fvar_undefined
  2725 00000BA9 803804                  	cmp byte [rax], T_closure
  2726 00000BAC 0F8530540100            	jne L_error_non_closure
  2727 00000BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2728 00000BB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2729 00000BB8 50                      	push rax
  2730 00000BB9 6A01                    	push 1
  2731 00000BBB 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2732 00000BC3 803805                  	cmp byte [rax], T_undefined
  2733 00000BC6 0F8492530100            	je L_error_fvar_undefined
  2734 00000BCC 803804                  	cmp byte [rax], T_closure
  2735 00000BCF 0F850D540100            	jne L_error_non_closure
  2736 00000BD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2737 00000BD8 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2738 00000BDC 4C8B4D00                	mov r9, qword [rbp]
  2739 00000BE0 4150                    	push r8
  2740 00000BE2 4151                    	push r9
  2741 00000BE4 41BA05000000            	mov r10, 1 + 4
  2742 00000BEA 4C8B5D18                	mov r11, COUNT
  2743 00000BEE 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2744 00000BF3 4C8D65F8                	lea r12, [rbp - 8]
  2745                                  .L_tc_recycle_frame_loop_0006:
  2746 00000BF7 4983FA00                	cmp r10, 0
  2747 00000BFB 7414                    	je .L_tc_recycle_frame_done_0006
  2748 00000BFD 4D8B2C24                	mov r13, qword [r12]
  2749 00000C01 4D892B                  	mov qword [r11], r13
  2750 00000C04 49FFCA                  	dec r10
  2751 00000C07 4983EB08                	sub r11, 8
  2752 00000C0B 4983EC08                	sub r12, 8
  2753 00000C0F EBE6                    	jmp .L_tc_recycle_frame_loop_0006
  2754                                  .L_tc_recycle_frame_done_0006:
  2755 00000C11 498D6308                	lea rsp, [r11 + 8]
  2756 00000C15 5D                      	pop rbp
  2757 00000C16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2758 00000C19 C9                      	leave
  2759 00000C1A C21800                  	ret AND_KILL_FRAME(1)
  2760                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2761 00000C1D 48890425[AA100000]      	mov qword [free_var_41], rax
  2762 00000C25 48B8-                   	mov rax, sob_void
  2762 00000C27 [0000000000000000] 
  2763                                  
  2764 00000C2F 4889C7                  	mov rdi, rax
  2765 00000C32 E8A9560100              	call print_sexpr_if_not_void
  2766 00000C37 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2767 00000C3C E84A540100              	call malloc
  2768 00000C41 50                      	push rax
  2769 00000C42 BF00000000              	mov rdi, 8 * 0	; new rib
  2770 00000C47 E83F540100              	call malloc
  2771 00000C4C 50                      	push rax
  2772 00000C4D BF08000000              	mov rdi, 8 * 1	; extended env
  2773 00000C52 E834540100              	call malloc
  2774 00000C57 488B7D10                	mov rdi, ENV
  2775 00000C5B BE00000000              	mov rsi, 0
  2776 00000C60 BA01000000              	mov rdx, 1
  2777                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2778 00000C65 4883FE00                	cmp rsi, 0
  2779 00000C69 7410                    	je .L_lambda_simple_env_end_0007
  2780 00000C6B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2781 00000C6F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2782 00000C73 48FFC6                  	inc rsi
  2783 00000C76 48FFC2                  	inc rdx
  2784 00000C79 EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2785                                  .L_lambda_simple_env_end_0007:
  2786 00000C7B 5B                      	pop rbx
  2787 00000C7C BE00000000              	mov rsi, 0
  2788                                  .L_lambda_simple_params_loop_0007:	; copy params
  2789 00000C81 4883FE00                	cmp rsi, 0
  2790 00000C85 740E                    	je .L_lambda_simple_params_end_0007
  2791 00000C87 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2792 00000C8C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2793 00000C90 48FFC6                  	inc rsi
  2794 00000C93 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2795                                  .L_lambda_simple_params_end_0007:
  2796 00000C95 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2797 00000C98 4889C3                  	mov rbx, rax
  2798 00000C9B 58                      	pop rax
  2799 00000C9C C60004                  	mov byte [rax], T_closure
  2800 00000C9F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2801 00000CA3 48C74009[B00C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2802 00000CAB E9A3000000              	jmp .L_lambda_simple_end_0007
  2803                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2804 00000CB0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2805 00000CB6 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2806 00000CB8 FF742410                	push qword [rsp + 8 * 2]
  2807 00000CBC 6A01                    	push 1
  2808 00000CBE E981530100              	jmp L_error_incorrect_arity_simple
  2809                                  .L_lambda_simple_arity_check_ok_0007:
  2810 00000CC3 C8000000                	enter 0, 0
  2811                                  	; Setting up for a tail-call
  2812                                  	; preparing a non-tail-call
  2813 00000CC7 488B4520                	mov rax, PARAM(0)	; param x
  2814 00000CCB 50                      	push rax
  2815 00000CCC 6A01                    	push 1	; arg count
  2816 00000CCE 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  2817 00000CD6 803805                  	cmp byte [rax], T_undefined
  2818 00000CD9 0F847F520100            	je L_error_fvar_undefined
  2819 00000CDF 803804                  	cmp byte [rax], T_closure
  2820 00000CE2 0F85FA520100            	jne L_error_non_closure
  2821 00000CE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2822 00000CEB FF5009                  	call SOB_CLOSURE_CODE(rax)
  2823 00000CEE 50                      	push rax
  2824 00000CEF 6A01                    	push 1
  2825 00000CF1 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2826 00000CF9 803805                  	cmp byte [rax], T_undefined
  2827 00000CFC 0F845C520100            	je L_error_fvar_undefined
  2828 00000D02 803804                  	cmp byte [rax], T_closure
  2829 00000D05 0F85D7520100            	jne L_error_non_closure
  2830 00000D0B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2831 00000D0E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2832 00000D12 4C8B4D00                	mov r9, qword [rbp]
  2833 00000D16 4150                    	push r8
  2834 00000D18 4151                    	push r9
  2835 00000D1A 41BA05000000            	mov r10, 1 + 4
  2836 00000D20 4C8B5D18                	mov r11, COUNT
  2837 00000D24 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2838 00000D29 4C8D65F8                	lea r12, [rbp - 8]
  2839                                  .L_tc_recycle_frame_loop_0007:
  2840 00000D2D 4983FA00                	cmp r10, 0
  2841 00000D31 7414                    	je .L_tc_recycle_frame_done_0007
  2842 00000D33 4D8B2C24                	mov r13, qword [r12]
  2843 00000D37 4D892B                  	mov qword [r11], r13
  2844 00000D3A 49FFCA                  	dec r10
  2845 00000D3D 4983EB08                	sub r11, 8
  2846 00000D41 4983EC08                	sub r12, 8
  2847 00000D45 EBE6                    	jmp .L_tc_recycle_frame_loop_0007
  2848                                  .L_tc_recycle_frame_done_0007:
  2849 00000D47 498D6308                	lea rsp, [r11 + 8]
  2850 00000D4B 5D                      	pop rbp
  2851 00000D4C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2852 00000D4F C9                      	leave
  2853 00000D50 C21800                  	ret AND_KILL_FRAME(1)
  2854                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2855 00000D53 48890425[EE100000]      	mov qword [free_var_45], rax
  2856 00000D5B 48B8-                   	mov rax, sob_void
  2856 00000D5D [0000000000000000] 
  2857                                  
  2858 00000D65 4889C7                  	mov rdi, rax
  2859 00000D68 E873550100              	call print_sexpr_if_not_void
  2860 00000D6D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2861 00000D72 E814530100              	call malloc
  2862 00000D77 50                      	push rax
  2863 00000D78 BF00000000              	mov rdi, 8 * 0	; new rib
  2864 00000D7D E809530100              	call malloc
  2865 00000D82 50                      	push rax
  2866 00000D83 BF08000000              	mov rdi, 8 * 1	; extended env
  2867 00000D88 E8FE520100              	call malloc
  2868 00000D8D 488B7D10                	mov rdi, ENV
  2869 00000D91 BE00000000              	mov rsi, 0
  2870 00000D96 BA01000000              	mov rdx, 1
  2871                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2872 00000D9B 4883FE00                	cmp rsi, 0
  2873 00000D9F 7410                    	je .L_lambda_simple_env_end_0008
  2874 00000DA1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2875 00000DA5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2876 00000DA9 48FFC6                  	inc rsi
  2877 00000DAC 48FFC2                  	inc rdx
  2878 00000DAF EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2879                                  .L_lambda_simple_env_end_0008:
  2880 00000DB1 5B                      	pop rbx
  2881 00000DB2 BE00000000              	mov rsi, 0
  2882                                  .L_lambda_simple_params_loop_0008:	; copy params
  2883 00000DB7 4883FE00                	cmp rsi, 0
  2884 00000DBB 740E                    	je .L_lambda_simple_params_end_0008
  2885 00000DBD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2886 00000DC2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2887 00000DC6 48FFC6                  	inc rsi
  2888 00000DC9 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2889                                  .L_lambda_simple_params_end_0008:
  2890 00000DCB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2891 00000DCE 4889C3                  	mov rbx, rax
  2892 00000DD1 58                      	pop rax
  2893 00000DD2 C60004                  	mov byte [rax], T_closure
  2894 00000DD5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2895 00000DD9 48C74009[E60D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2896 00000DE1 E9A3000000              	jmp .L_lambda_simple_end_0008
  2897                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2898 00000DE6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2899 00000DEC 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2900 00000DEE FF742410                	push qword [rsp + 8 * 2]
  2901 00000DF2 6A01                    	push 1
  2902 00000DF4 E94B520100              	jmp L_error_incorrect_arity_simple
  2903                                  .L_lambda_simple_arity_check_ok_0008:
  2904 00000DF9 C8000000                	enter 0, 0
  2905                                  	; Setting up for a tail-call
  2906                                  	; preparing a non-tail-call
  2907 00000DFD 488B4520                	mov rax, PARAM(0)	; param x
  2908 00000E01 50                      	push rax
  2909 00000E02 6A01                    	push 1	; arg count
  2910 00000E04 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  2911 00000E0C 803805                  	cmp byte [rax], T_undefined
  2912 00000E0F 0F8449510100            	je L_error_fvar_undefined
  2913 00000E15 803804                  	cmp byte [rax], T_closure
  2914 00000E18 0F85C4510100            	jne L_error_non_closure
  2915 00000E1E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2916 00000E21 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2917 00000E24 50                      	push rax
  2918 00000E25 6A01                    	push 1
  2919 00000E27 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  2920 00000E2F 803805                  	cmp byte [rax], T_undefined
  2921 00000E32 0F8426510100            	je L_error_fvar_undefined
  2922 00000E38 803804                  	cmp byte [rax], T_closure
  2923 00000E3B 0F85A1510100            	jne L_error_non_closure
  2924 00000E41 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2925 00000E44 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  2926 00000E48 4C8B4D00                	mov r9, qword [rbp]
  2927 00000E4C 4150                    	push r8
  2928 00000E4E 4151                    	push r9
  2929 00000E50 41BA05000000            	mov r10, 1 + 4
  2930 00000E56 4C8B5D18                	mov r11, COUNT
  2931 00000E5A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  2932 00000E5F 4C8D65F8                	lea r12, [rbp - 8]
  2933                                  .L_tc_recycle_frame_loop_0008:
  2934 00000E63 4983FA00                	cmp r10, 0
  2935 00000E67 7414                    	je .L_tc_recycle_frame_done_0008
  2936 00000E69 4D8B2C24                	mov r13, qword [r12]
  2937 00000E6D 4D892B                  	mov qword [r11], r13
  2938 00000E70 49FFCA                  	dec r10
  2939 00000E73 4983EB08                	sub r11, 8
  2940 00000E77 4983EC08                	sub r12, 8
  2941 00000E7B EBE6                    	jmp .L_tc_recycle_frame_loop_0008
  2942                                  .L_tc_recycle_frame_done_0008:
  2943 00000E7D 498D6308                	lea rsp, [r11 + 8]
  2944 00000E81 5D                      	pop rbp
  2945 00000E82 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2946 00000E85 C9                      	leave
  2947 00000E86 C21800                  	ret AND_KILL_FRAME(1)
  2948                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2949 00000E89 48890425[21110000]      	mov qword [free_var_48], rax
  2950 00000E91 48B8-                   	mov rax, sob_void
  2950 00000E93 [0000000000000000] 
  2951                                  
  2952 00000E9B 4889C7                  	mov rdi, rax
  2953 00000E9E E83D540100              	call print_sexpr_if_not_void
  2954 00000EA3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2955 00000EA8 E8DE510100              	call malloc
  2956 00000EAD 50                      	push rax
  2957 00000EAE BF00000000              	mov rdi, 8 * 0	; new rib
  2958 00000EB3 E8D3510100              	call malloc
  2959 00000EB8 50                      	push rax
  2960 00000EB9 BF08000000              	mov rdi, 8 * 1	; extended env
  2961 00000EBE E8C8510100              	call malloc
  2962 00000EC3 488B7D10                	mov rdi, ENV
  2963 00000EC7 BE00000000              	mov rsi, 0
  2964 00000ECC BA01000000              	mov rdx, 1
  2965                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2966 00000ED1 4883FE00                	cmp rsi, 0
  2967 00000ED5 7410                    	je .L_lambda_simple_env_end_0009
  2968 00000ED7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2969 00000EDB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2970 00000EDF 48FFC6                  	inc rsi
  2971 00000EE2 48FFC2                  	inc rdx
  2972 00000EE5 EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2973                                  .L_lambda_simple_env_end_0009:
  2974 00000EE7 5B                      	pop rbx
  2975 00000EE8 BE00000000              	mov rsi, 0
  2976                                  .L_lambda_simple_params_loop_0009:	; copy params
  2977 00000EED 4883FE00                	cmp rsi, 0
  2978 00000EF1 740E                    	je .L_lambda_simple_params_end_0009
  2979 00000EF3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2980 00000EF8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2981 00000EFC 48FFC6                  	inc rsi
  2982 00000EFF EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2983                                  .L_lambda_simple_params_end_0009:
  2984 00000F01 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2985 00000F04 4889C3                  	mov rbx, rax
  2986 00000F07 58                      	pop rax
  2987 00000F08 C60004                  	mov byte [rax], T_closure
  2988 00000F0B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2989 00000F0F 48C74009[1C0F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2990 00000F17 E9A3000000              	jmp .L_lambda_simple_end_0009
  2991                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2992 00000F1C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2993 00000F22 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2994 00000F24 FF742410                	push qword [rsp + 8 * 2]
  2995 00000F28 6A01                    	push 1
  2996 00000F2A E915510100              	jmp L_error_incorrect_arity_simple
  2997                                  .L_lambda_simple_arity_check_ok_0009:
  2998 00000F2F C8000000                	enter 0, 0
  2999                                  	; Setting up for a tail-call
  3000                                  	; preparing a non-tail-call
  3001 00000F33 488B4520                	mov rax, PARAM(0)	; param x
  3002 00000F37 50                      	push rax
  3003 00000F38 6A01                    	push 1	; arg count
  3004 00000F3A 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3005 00000F42 803805                  	cmp byte [rax], T_undefined
  3006 00000F45 0F8413500100            	je L_error_fvar_undefined
  3007 00000F4B 803804                  	cmp byte [rax], T_closure
  3008 00000F4E 0F858E500100            	jne L_error_non_closure
  3009 00000F54 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3010 00000F57 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3011 00000F5A 50                      	push rax
  3012 00000F5B 6A01                    	push 1
  3013 00000F5D 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  3014 00000F65 803805                  	cmp byte [rax], T_undefined
  3015 00000F68 0F84F04F0100            	je L_error_fvar_undefined
  3016 00000F6E 803804                  	cmp byte [rax], T_closure
  3017 00000F71 0F856B500100            	jne L_error_non_closure
  3018 00000F77 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3019 00000F7A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3020 00000F7E 4C8B4D00                	mov r9, qword [rbp]
  3021 00000F82 4150                    	push r8
  3022 00000F84 4151                    	push r9
  3023 00000F86 41BA05000000            	mov r10, 1 + 4
  3024 00000F8C 4C8B5D18                	mov r11, COUNT
  3025 00000F90 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3026 00000F95 4C8D65F8                	lea r12, [rbp - 8]
  3027                                  .L_tc_recycle_frame_loop_0009:
  3028 00000F99 4983FA00                	cmp r10, 0
  3029 00000F9D 7414                    	je .L_tc_recycle_frame_done_0009
  3030 00000F9F 4D8B2C24                	mov r13, qword [r12]
  3031 00000FA3 4D892B                  	mov qword [r11], r13
  3032 00000FA6 49FFCA                  	dec r10
  3033 00000FA9 4983EB08                	sub r11, 8
  3034 00000FAD 4983EC08                	sub r12, 8
  3035 00000FB1 EBE6                    	jmp .L_tc_recycle_frame_loop_0009
  3036                                  .L_tc_recycle_frame_done_0009:
  3037 00000FB3 498D6308                	lea rsp, [r11 + 8]
  3038 00000FB7 5D                      	pop rbp
  3039 00000FB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3040 00000FBB C9                      	leave
  3041 00000FBC C21800                  	ret AND_KILL_FRAME(1)
  3042                                  .L_lambda_simple_end_0009:	; new closure is in rax
  3043 00000FBF 48890425[76110000]      	mov qword [free_var_53], rax
  3044 00000FC7 48B8-                   	mov rax, sob_void
  3044 00000FC9 [0000000000000000] 
  3045                                  
  3046 00000FD1 4889C7                  	mov rdi, rax
  3047 00000FD4 E807530100              	call print_sexpr_if_not_void
  3048 00000FD9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3049 00000FDE E8A8500100              	call malloc
  3050 00000FE3 50                      	push rax
  3051 00000FE4 BF00000000              	mov rdi, 8 * 0	; new rib
  3052 00000FE9 E89D500100              	call malloc
  3053 00000FEE 50                      	push rax
  3054 00000FEF BF08000000              	mov rdi, 8 * 1	; extended env
  3055 00000FF4 E892500100              	call malloc
  3056 00000FF9 488B7D10                	mov rdi, ENV
  3057 00000FFD BE00000000              	mov rsi, 0
  3058 00001002 BA01000000              	mov rdx, 1
  3059                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3060 00001007 4883FE00                	cmp rsi, 0
  3061 0000100B 7410                    	je .L_lambda_simple_env_end_000a
  3062 0000100D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3063 00001011 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3064 00001015 48FFC6                  	inc rsi
  3065 00001018 48FFC2                  	inc rdx
  3066 0000101B EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3067                                  .L_lambda_simple_env_end_000a:
  3068 0000101D 5B                      	pop rbx
  3069 0000101E BE00000000              	mov rsi, 0
  3070                                  .L_lambda_simple_params_loop_000a:	; copy params
  3071 00001023 4883FE00                	cmp rsi, 0
  3072 00001027 740E                    	je .L_lambda_simple_params_end_000a
  3073 00001029 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3074 0000102E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3075 00001032 48FFC6                  	inc rsi
  3076 00001035 EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3077                                  .L_lambda_simple_params_end_000a:
  3078 00001037 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3079 0000103A 4889C3                  	mov rbx, rax
  3080 0000103D 58                      	pop rax
  3081 0000103E C60004                  	mov byte [rax], T_closure
  3082 00001041 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3083 00001045 48C74009[52100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3084 0000104D E9A3000000              	jmp .L_lambda_simple_end_000a
  3085                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3086 00001052 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3087 00001058 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3088 0000105A FF742410                	push qword [rsp + 8 * 2]
  3089 0000105E 6A01                    	push 1
  3090 00001060 E9DF4F0100              	jmp L_error_incorrect_arity_simple
  3091                                  .L_lambda_simple_arity_check_ok_000a:
  3092 00001065 C8000000                	enter 0, 0
  3093                                  	; Setting up for a tail-call
  3094                                  	; preparing a non-tail-call
  3095 00001069 488B4520                	mov rax, PARAM(0)	; param x
  3096 0000106D 50                      	push rax
  3097 0000106E 6A01                    	push 1	; arg count
  3098 00001070 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3099 00001078 803805                  	cmp byte [rax], T_undefined
  3100 0000107B 0F84DD4E0100            	je L_error_fvar_undefined
  3101 00001081 803804                  	cmp byte [rax], T_closure
  3102 00001084 0F85584F0100            	jne L_error_non_closure
  3103 0000108A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3104 0000108D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3105 00001090 50                      	push rax
  3106 00001091 6A01                    	push 1
  3107 00001093 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  3108 0000109B 803805                  	cmp byte [rax], T_undefined
  3109 0000109E 0F84BA4E0100            	je L_error_fvar_undefined
  3110 000010A4 803804                  	cmp byte [rax], T_closure
  3111 000010A7 0F85354F0100            	jne L_error_non_closure
  3112 000010AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3113 000010B0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3114 000010B4 4C8B4D00                	mov r9, qword [rbp]
  3115 000010B8 4150                    	push r8
  3116 000010BA 4151                    	push r9
  3117 000010BC 41BA05000000            	mov r10, 1 + 4
  3118 000010C2 4C8B5D18                	mov r11, COUNT
  3119 000010C6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3120 000010CB 4C8D65F8                	lea r12, [rbp - 8]
  3121                                  .L_tc_recycle_frame_loop_000a:
  3122 000010CF 4983FA00                	cmp r10, 0
  3123 000010D3 7414                    	je .L_tc_recycle_frame_done_000a
  3124 000010D5 4D8B2C24                	mov r13, qword [r12]
  3125 000010D9 4D892B                  	mov qword [r11], r13
  3126 000010DC 49FFCA                  	dec r10
  3127 000010DF 4983EB08                	sub r11, 8
  3128 000010E3 4983EC08                	sub r12, 8
  3129 000010E7 EBE6                    	jmp .L_tc_recycle_frame_loop_000a
  3130                                  .L_tc_recycle_frame_done_000a:
  3131 000010E9 498D6308                	lea rsp, [r11 + 8]
  3132 000010ED 5D                      	pop rbp
  3133 000010EE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3134 000010F1 C9                      	leave
  3135 000010F2 C21800                  	ret AND_KILL_FRAME(1)
  3136                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3137 000010F5 48890425[A9110000]      	mov qword [free_var_56], rax
  3138 000010FD 48B8-                   	mov rax, sob_void
  3138 000010FF [0000000000000000] 
  3139                                  
  3140 00001107 4889C7                  	mov rdi, rax
  3141 0000110A E8D1510100              	call print_sexpr_if_not_void
  3142 0000110F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3143 00001114 E8724F0100              	call malloc
  3144 00001119 50                      	push rax
  3145 0000111A BF00000000              	mov rdi, 8 * 0	; new rib
  3146 0000111F E8674F0100              	call malloc
  3147 00001124 50                      	push rax
  3148 00001125 BF08000000              	mov rdi, 8 * 1	; extended env
  3149 0000112A E85C4F0100              	call malloc
  3150 0000112F 488B7D10                	mov rdi, ENV
  3151 00001133 BE00000000              	mov rsi, 0
  3152 00001138 BA01000000              	mov rdx, 1
  3153                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3154 0000113D 4883FE00                	cmp rsi, 0
  3155 00001141 7410                    	je .L_lambda_simple_env_end_000b
  3156 00001143 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3157 00001147 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3158 0000114B 48FFC6                  	inc rsi
  3159 0000114E 48FFC2                  	inc rdx
  3160 00001151 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3161                                  .L_lambda_simple_env_end_000b:
  3162 00001153 5B                      	pop rbx
  3163 00001154 BE00000000              	mov rsi, 0
  3164                                  .L_lambda_simple_params_loop_000b:	; copy params
  3165 00001159 4883FE00                	cmp rsi, 0
  3166 0000115D 740E                    	je .L_lambda_simple_params_end_000b
  3167 0000115F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3168 00001164 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3169 00001168 48FFC6                  	inc rsi
  3170 0000116B EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3171                                  .L_lambda_simple_params_end_000b:
  3172 0000116D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3173 00001170 4889C3                  	mov rbx, rax
  3174 00001173 58                      	pop rax
  3175 00001174 C60004                  	mov byte [rax], T_closure
  3176 00001177 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3177 0000117B 48C74009[88110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3178 00001183 E9A3000000              	jmp .L_lambda_simple_end_000b
  3179                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3180 00001188 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3181 0000118E 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3182 00001190 FF742410                	push qword [rsp + 8 * 2]
  3183 00001194 6A01                    	push 1
  3184 00001196 E9A94E0100              	jmp L_error_incorrect_arity_simple
  3185                                  .L_lambda_simple_arity_check_ok_000b:
  3186 0000119B C8000000                	enter 0, 0
  3187                                  	; Setting up for a tail-call
  3188                                  	; preparing a non-tail-call
  3189 0000119F 488B4520                	mov rax, PARAM(0)	; param x
  3190 000011A3 50                      	push rax
  3191 000011A4 6A01                    	push 1	; arg count
  3192 000011A6 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  3193 000011AE 803805                  	cmp byte [rax], T_undefined
  3194 000011B1 0F84A74D0100            	je L_error_fvar_undefined
  3195 000011B7 803804                  	cmp byte [rax], T_closure
  3196 000011BA 0F85224E0100            	jne L_error_non_closure
  3197 000011C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3198 000011C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3199 000011C6 50                      	push rax
  3200 000011C7 6A01                    	push 1
  3201 000011C9 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  3202 000011D1 803805                  	cmp byte [rax], T_undefined
  3203 000011D4 0F84844D0100            	je L_error_fvar_undefined
  3204 000011DA 803804                  	cmp byte [rax], T_closure
  3205 000011DD 0F85FF4D0100            	jne L_error_non_closure
  3206 000011E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3207 000011E6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3208 000011EA 4C8B4D00                	mov r9, qword [rbp]
  3209 000011EE 4150                    	push r8
  3210 000011F0 4151                    	push r9
  3211 000011F2 41BA05000000            	mov r10, 1 + 4
  3212 000011F8 4C8B5D18                	mov r11, COUNT
  3213 000011FC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3214 00001201 4C8D65F8                	lea r12, [rbp - 8]
  3215                                  .L_tc_recycle_frame_loop_000b:
  3216 00001205 4983FA00                	cmp r10, 0
  3217 00001209 7414                    	je .L_tc_recycle_frame_done_000b
  3218 0000120B 4D8B2C24                	mov r13, qword [r12]
  3219 0000120F 4D892B                  	mov qword [r11], r13
  3220 00001212 49FFCA                  	dec r10
  3221 00001215 4983EB08                	sub r11, 8
  3222 00001219 4983EC08                	sub r12, 8
  3223 0000121D EBE6                    	jmp .L_tc_recycle_frame_loop_000b
  3224                                  .L_tc_recycle_frame_done_000b:
  3225 0000121F 498D6308                	lea rsp, [r11 + 8]
  3226 00001223 5D                      	pop rbp
  3227 00001224 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3228 00001227 C9                      	leave
  3229 00001228 C21800                  	ret AND_KILL_FRAME(1)
  3230                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3231 0000122B 48890425[ED110000]      	mov qword [free_var_60], rax
  3232 00001233 48B8-                   	mov rax, sob_void
  3232 00001235 [0000000000000000] 
  3233                                  
  3234 0000123D 4889C7                  	mov rdi, rax
  3235 00001240 E89B500100              	call print_sexpr_if_not_void
  3236 00001245 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3237 0000124A E83C4E0100              	call malloc
  3238 0000124F 50                      	push rax
  3239 00001250 BF00000000              	mov rdi, 8 * 0	; new rib
  3240 00001255 E8314E0100              	call malloc
  3241 0000125A 50                      	push rax
  3242 0000125B BF08000000              	mov rdi, 8 * 1	; extended env
  3243 00001260 E8264E0100              	call malloc
  3244 00001265 488B7D10                	mov rdi, ENV
  3245 00001269 BE00000000              	mov rsi, 0
  3246 0000126E BA01000000              	mov rdx, 1
  3247                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3248 00001273 4883FE00                	cmp rsi, 0
  3249 00001277 7410                    	je .L_lambda_simple_env_end_000c
  3250 00001279 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3251 0000127D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3252 00001281 48FFC6                  	inc rsi
  3253 00001284 48FFC2                  	inc rdx
  3254 00001287 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3255                                  .L_lambda_simple_env_end_000c:
  3256 00001289 5B                      	pop rbx
  3257 0000128A BE00000000              	mov rsi, 0
  3258                                  .L_lambda_simple_params_loop_000c:	; copy params
  3259 0000128F 4883FE00                	cmp rsi, 0
  3260 00001293 740E                    	je .L_lambda_simple_params_end_000c
  3261 00001295 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3262 0000129A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3263 0000129E 48FFC6                  	inc rsi
  3264 000012A1 EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3265                                  .L_lambda_simple_params_end_000c:
  3266 000012A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3267 000012A6 4889C3                  	mov rbx, rax
  3268 000012A9 58                      	pop rax
  3269 000012AA C60004                  	mov byte [rax], T_closure
  3270 000012AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3271 000012B1 48C74009[BE120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3272 000012B9 E9A3000000              	jmp .L_lambda_simple_end_000c
  3273                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3274 000012BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3275 000012C4 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3276 000012C6 FF742410                	push qword [rsp + 8 * 2]
  3277 000012CA 6A01                    	push 1
  3278 000012CC E9734D0100              	jmp L_error_incorrect_arity_simple
  3279                                  .L_lambda_simple_arity_check_ok_000c:
  3280 000012D1 C8000000                	enter 0, 0
  3281                                  	; Setting up for a tail-call
  3282                                  	; preparing a non-tail-call
  3283 000012D5 488B4520                	mov rax, PARAM(0)	; param x
  3284 000012D9 50                      	push rax
  3285 000012DA 6A01                    	push 1	; arg count
  3286 000012DC 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  3287 000012E4 803805                  	cmp byte [rax], T_undefined
  3288 000012E7 0F84714C0100            	je L_error_fvar_undefined
  3289 000012ED 803804                  	cmp byte [rax], T_closure
  3290 000012F0 0F85EC4C0100            	jne L_error_non_closure
  3291 000012F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3292 000012F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3293 000012FC 50                      	push rax
  3294 000012FD 6A01                    	push 1
  3295 000012FF 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  3296 00001307 803805                  	cmp byte [rax], T_undefined
  3297 0000130A 0F844E4C0100            	je L_error_fvar_undefined
  3298 00001310 803804                  	cmp byte [rax], T_closure
  3299 00001313 0F85C94C0100            	jne L_error_non_closure
  3300 00001319 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3301 0000131C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3302 00001320 4C8B4D00                	mov r9, qword [rbp]
  3303 00001324 4150                    	push r8
  3304 00001326 4151                    	push r9
  3305 00001328 41BA05000000            	mov r10, 1 + 4
  3306 0000132E 4C8B5D18                	mov r11, COUNT
  3307 00001332 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3308 00001337 4C8D65F8                	lea r12, [rbp - 8]
  3309                                  .L_tc_recycle_frame_loop_000c:
  3310 0000133B 4983FA00                	cmp r10, 0
  3311 0000133F 7414                    	je .L_tc_recycle_frame_done_000c
  3312 00001341 4D8B2C24                	mov r13, qword [r12]
  3313 00001345 4D892B                  	mov qword [r11], r13
  3314 00001348 49FFCA                  	dec r10
  3315 0000134B 4983EB08                	sub r11, 8
  3316 0000134F 4983EC08                	sub r12, 8
  3317 00001353 EBE6                    	jmp .L_tc_recycle_frame_loop_000c
  3318                                  .L_tc_recycle_frame_done_000c:
  3319 00001355 498D6308                	lea rsp, [r11 + 8]
  3320 00001359 5D                      	pop rbp
  3321 0000135A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3322 0000135D C9                      	leave
  3323 0000135E C21800                  	ret AND_KILL_FRAME(1)
  3324                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3325 00001361 48890425[20120000]      	mov qword [free_var_63], rax
  3326 00001369 48B8-                   	mov rax, sob_void
  3326 0000136B [0000000000000000] 
  3327                                  
  3328 00001373 4889C7                  	mov rdi, rax
  3329 00001376 E8654F0100              	call print_sexpr_if_not_void
  3330 0000137B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3331 00001380 E8064D0100              	call malloc
  3332 00001385 50                      	push rax
  3333 00001386 BF00000000              	mov rdi, 8 * 0	; new rib
  3334 0000138B E8FB4C0100              	call malloc
  3335 00001390 50                      	push rax
  3336 00001391 BF08000000              	mov rdi, 8 * 1	; extended env
  3337 00001396 E8F04C0100              	call malloc
  3338 0000139B 488B7D10                	mov rdi, ENV
  3339 0000139F BE00000000              	mov rsi, 0
  3340 000013A4 BA01000000              	mov rdx, 1
  3341                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3342 000013A9 4883FE00                	cmp rsi, 0
  3343 000013AD 7410                    	je .L_lambda_simple_env_end_000d
  3344 000013AF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3345 000013B3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3346 000013B7 48FFC6                  	inc rsi
  3347 000013BA 48FFC2                  	inc rdx
  3348 000013BD EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3349                                  .L_lambda_simple_env_end_000d:
  3350 000013BF 5B                      	pop rbx
  3351 000013C0 BE00000000              	mov rsi, 0
  3352                                  .L_lambda_simple_params_loop_000d:	; copy params
  3353 000013C5 4883FE00                	cmp rsi, 0
  3354 000013C9 740E                    	je .L_lambda_simple_params_end_000d
  3355 000013CB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3356 000013D0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3357 000013D4 48FFC6                  	inc rsi
  3358 000013D7 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3359                                  .L_lambda_simple_params_end_000d:
  3360 000013D9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3361 000013DC 4889C3                  	mov rbx, rax
  3362 000013DF 58                      	pop rax
  3363 000013E0 C60004                  	mov byte [rax], T_closure
  3364 000013E3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3365 000013E7 48C74009[F4130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3366 000013EF E9A3000000              	jmp .L_lambda_simple_end_000d
  3367                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3368 000013F4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3369 000013FA 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3370 000013FC FF742410                	push qword [rsp + 8 * 2]
  3371 00001400 6A01                    	push 1
  3372 00001402 E93D4C0100              	jmp L_error_incorrect_arity_simple
  3373                                  .L_lambda_simple_arity_check_ok_000d:
  3374 00001407 C8000000                	enter 0, 0
  3375                                  	; Setting up for a tail-call
  3376                                  	; preparing a non-tail-call
  3377 0000140B 488B4520                	mov rax, PARAM(0)	; param x
  3378 0000140F 50                      	push rax
  3379 00001410 6A01                    	push 1	; arg count
  3380 00001412 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3381 0000141A 803805                  	cmp byte [rax], T_undefined
  3382 0000141D 0F843B4B0100            	je L_error_fvar_undefined
  3383 00001423 803804                  	cmp byte [rax], T_closure
  3384 00001426 0F85B64B0100            	jne L_error_non_closure
  3385 0000142C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3386 0000142F FF5009                  	call SOB_CLOSURE_CODE(rax)
  3387 00001432 50                      	push rax
  3388 00001433 6A01                    	push 1
  3389 00001435 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3390 0000143D 803805                  	cmp byte [rax], T_undefined
  3391 00001440 0F84184B0100            	je L_error_fvar_undefined
  3392 00001446 803804                  	cmp byte [rax], T_closure
  3393 00001449 0F85934B0100            	jne L_error_non_closure
  3394 0000144F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3395 00001452 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3396 00001456 4C8B4D00                	mov r9, qword [rbp]
  3397 0000145A 4150                    	push r8
  3398 0000145C 4151                    	push r9
  3399 0000145E 41BA05000000            	mov r10, 1 + 4
  3400 00001464 4C8B5D18                	mov r11, COUNT
  3401 00001468 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3402 0000146D 4C8D65F8                	lea r12, [rbp - 8]
  3403                                  .L_tc_recycle_frame_loop_000d:
  3404 00001471 4983FA00                	cmp r10, 0
  3405 00001475 7414                    	je .L_tc_recycle_frame_done_000d
  3406 00001477 4D8B2C24                	mov r13, qword [r12]
  3407 0000147B 4D892B                  	mov qword [r11], r13
  3408 0000147E 49FFCA                  	dec r10
  3409 00001481 4983EB08                	sub r11, 8
  3410 00001485 4983EC08                	sub r12, 8
  3411 00001489 EBE6                    	jmp .L_tc_recycle_frame_loop_000d
  3412                                  .L_tc_recycle_frame_done_000d:
  3413 0000148B 498D6308                	lea rsp, [r11 + 8]
  3414 0000148F 5D                      	pop rbp
  3415 00001490 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3416 00001493 C9                      	leave
  3417 00001494 C21800                  	ret AND_KILL_FRAME(1)
  3418                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3419 00001497 48890425[55100000]      	mov qword [free_var_36], rax
  3420 0000149F 48B8-                   	mov rax, sob_void
  3420 000014A1 [0000000000000000] 
  3421                                  
  3422 000014A9 4889C7                  	mov rdi, rax
  3423 000014AC E82F4E0100              	call print_sexpr_if_not_void
  3424 000014B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3425 000014B6 E8D04B0100              	call malloc
  3426 000014BB 50                      	push rax
  3427 000014BC BF00000000              	mov rdi, 8 * 0	; new rib
  3428 000014C1 E8C54B0100              	call malloc
  3429 000014C6 50                      	push rax
  3430 000014C7 BF08000000              	mov rdi, 8 * 1	; extended env
  3431 000014CC E8BA4B0100              	call malloc
  3432 000014D1 488B7D10                	mov rdi, ENV
  3433 000014D5 BE00000000              	mov rsi, 0
  3434 000014DA BA01000000              	mov rdx, 1
  3435                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3436 000014DF 4883FE00                	cmp rsi, 0
  3437 000014E3 7410                    	je .L_lambda_simple_env_end_000e
  3438 000014E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3439 000014E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3440 000014ED 48FFC6                  	inc rsi
  3441 000014F0 48FFC2                  	inc rdx
  3442 000014F3 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3443                                  .L_lambda_simple_env_end_000e:
  3444 000014F5 5B                      	pop rbx
  3445 000014F6 BE00000000              	mov rsi, 0
  3446                                  .L_lambda_simple_params_loop_000e:	; copy params
  3447 000014FB 4883FE00                	cmp rsi, 0
  3448 000014FF 740E                    	je .L_lambda_simple_params_end_000e
  3449 00001501 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3450 00001506 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3451 0000150A 48FFC6                  	inc rsi
  3452 0000150D EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3453                                  .L_lambda_simple_params_end_000e:
  3454 0000150F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3455 00001512 4889C3                  	mov rbx, rax
  3456 00001515 58                      	pop rax
  3457 00001516 C60004                  	mov byte [rax], T_closure
  3458 00001519 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3459 0000151D 48C74009[2A150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3460 00001525 E9A3000000              	jmp .L_lambda_simple_end_000e
  3461                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3462 0000152A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3463 00001530 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3464 00001532 FF742410                	push qword [rsp + 8 * 2]
  3465 00001536 6A01                    	push 1
  3466 00001538 E9074B0100              	jmp L_error_incorrect_arity_simple
  3467                                  .L_lambda_simple_arity_check_ok_000e:
  3468 0000153D C8000000                	enter 0, 0
  3469                                  	; Setting up for a tail-call
  3470                                  	; preparing a non-tail-call
  3471 00001541 488B4520                	mov rax, PARAM(0)	; param x
  3472 00001545 50                      	push rax
  3473 00001546 6A01                    	push 1	; arg count
  3474 00001548 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3475 00001550 803805                  	cmp byte [rax], T_undefined
  3476 00001553 0F84054A0100            	je L_error_fvar_undefined
  3477 00001559 803804                  	cmp byte [rax], T_closure
  3478 0000155C 0F85804A0100            	jne L_error_non_closure
  3479 00001562 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3480 00001565 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3481 00001568 50                      	push rax
  3482 00001569 6A01                    	push 1
  3483 0000156B 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3484 00001573 803805                  	cmp byte [rax], T_undefined
  3485 00001576 0F84E2490100            	je L_error_fvar_undefined
  3486 0000157C 803804                  	cmp byte [rax], T_closure
  3487 0000157F 0F855D4A0100            	jne L_error_non_closure
  3488 00001585 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3489 00001588 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3490 0000158C 4C8B4D00                	mov r9, qword [rbp]
  3491 00001590 4150                    	push r8
  3492 00001592 4151                    	push r9
  3493 00001594 41BA05000000            	mov r10, 1 + 4
  3494 0000159A 4C8B5D18                	mov r11, COUNT
  3495 0000159E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3496 000015A3 4C8D65F8                	lea r12, [rbp - 8]
  3497                                  .L_tc_recycle_frame_loop_000e:
  3498 000015A7 4983FA00                	cmp r10, 0
  3499 000015AB 7414                    	je .L_tc_recycle_frame_done_000e
  3500 000015AD 4D8B2C24                	mov r13, qword [r12]
  3501 000015B1 4D892B                  	mov qword [r11], r13
  3502 000015B4 49FFCA                  	dec r10
  3503 000015B7 4983EB08                	sub r11, 8
  3504 000015BB 4983EC08                	sub r12, 8
  3505 000015BF EBE6                    	jmp .L_tc_recycle_frame_loop_000e
  3506                                  .L_tc_recycle_frame_done_000e:
  3507 000015C1 498D6308                	lea rsp, [r11 + 8]
  3508 000015C5 5D                      	pop rbp
  3509 000015C6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3510 000015C9 C9                      	leave
  3511 000015CA C21800                  	ret AND_KILL_FRAME(1)
  3512                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3513 000015CD 48890425[66100000]      	mov qword [free_var_37], rax
  3514 000015D5 48B8-                   	mov rax, sob_void
  3514 000015D7 [0000000000000000] 
  3515                                  
  3516 000015DF 4889C7                  	mov rdi, rax
  3517 000015E2 E8F94C0100              	call print_sexpr_if_not_void
  3518 000015E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3519 000015EC E89A4A0100              	call malloc
  3520 000015F1 50                      	push rax
  3521 000015F2 BF00000000              	mov rdi, 8 * 0	; new rib
  3522 000015F7 E88F4A0100              	call malloc
  3523 000015FC 50                      	push rax
  3524 000015FD BF08000000              	mov rdi, 8 * 1	; extended env
  3525 00001602 E8844A0100              	call malloc
  3526 00001607 488B7D10                	mov rdi, ENV
  3527 0000160B BE00000000              	mov rsi, 0
  3528 00001610 BA01000000              	mov rdx, 1
  3529                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3530 00001615 4883FE00                	cmp rsi, 0
  3531 00001619 7410                    	je .L_lambda_simple_env_end_000f
  3532 0000161B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3533 0000161F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3534 00001623 48FFC6                  	inc rsi
  3535 00001626 48FFC2                  	inc rdx
  3536 00001629 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3537                                  .L_lambda_simple_env_end_000f:
  3538 0000162B 5B                      	pop rbx
  3539 0000162C BE00000000              	mov rsi, 0
  3540                                  .L_lambda_simple_params_loop_000f:	; copy params
  3541 00001631 4883FE00                	cmp rsi, 0
  3542 00001635 740E                    	je .L_lambda_simple_params_end_000f
  3543 00001637 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3544 0000163C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3545 00001640 48FFC6                  	inc rsi
  3546 00001643 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3547                                  .L_lambda_simple_params_end_000f:
  3548 00001645 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3549 00001648 4889C3                  	mov rbx, rax
  3550 0000164B 58                      	pop rax
  3551 0000164C C60004                  	mov byte [rax], T_closure
  3552 0000164F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3553 00001653 48C74009[60160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3554 0000165B E9A3000000              	jmp .L_lambda_simple_end_000f
  3555                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3556 00001660 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3557 00001666 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3558 00001668 FF742410                	push qword [rsp + 8 * 2]
  3559 0000166C 6A01                    	push 1
  3560 0000166E E9D1490100              	jmp L_error_incorrect_arity_simple
  3561                                  .L_lambda_simple_arity_check_ok_000f:
  3562 00001673 C8000000                	enter 0, 0
  3563                                  	; Setting up for a tail-call
  3564                                  	; preparing a non-tail-call
  3565 00001677 488B4520                	mov rax, PARAM(0)	; param x
  3566 0000167B 50                      	push rax
  3567 0000167C 6A01                    	push 1	; arg count
  3568 0000167E 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  3569 00001686 803805                  	cmp byte [rax], T_undefined
  3570 00001689 0F84CF480100            	je L_error_fvar_undefined
  3571 0000168F 803804                  	cmp byte [rax], T_closure
  3572 00001692 0F854A490100            	jne L_error_non_closure
  3573 00001698 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3574 0000169B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3575 0000169E 50                      	push rax
  3576 0000169F 6A01                    	push 1
  3577 000016A1 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3578 000016A9 803805                  	cmp byte [rax], T_undefined
  3579 000016AC 0F84AC480100            	je L_error_fvar_undefined
  3580 000016B2 803804                  	cmp byte [rax], T_closure
  3581 000016B5 0F8527490100            	jne L_error_non_closure
  3582 000016BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  3583 000016BE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3584 000016C2 4C8B4D00                	mov r9, qword [rbp]
  3585 000016C6 4150                    	push r8
  3586 000016C8 4151                    	push r9
  3587 000016CA 41BA05000000            	mov r10, 1 + 4
  3588 000016D0 4C8B5D18                	mov r11, COUNT
  3589 000016D4 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3590 000016D9 4C8D65F8                	lea r12, [rbp - 8]
  3591                                  .L_tc_recycle_frame_loop_000f:
  3592 000016DD 4983FA00                	cmp r10, 0
  3593 000016E1 7414                    	je .L_tc_recycle_frame_done_000f
  3594 000016E3 4D8B2C24                	mov r13, qword [r12]
  3595 000016E7 4D892B                  	mov qword [r11], r13
  3596 000016EA 49FFCA                  	dec r10
  3597 000016ED 4983EB08                	sub r11, 8
  3598 000016F1 4983EC08                	sub r12, 8
  3599 000016F5 EBE6                    	jmp .L_tc_recycle_frame_loop_000f
  3600                                  .L_tc_recycle_frame_done_000f:
  3601 000016F7 498D6308                	lea rsp, [r11 + 8]
  3602 000016FB 5D                      	pop rbp
  3603 000016FC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3604 000016FF C9                      	leave
  3605 00001700 C21800                  	ret AND_KILL_FRAME(1)
  3606                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3607 00001703 48890425[88100000]      	mov qword [free_var_39], rax
  3608 0000170B 48B8-                   	mov rax, sob_void
  3608 0000170D [0000000000000000] 
  3609                                  
  3610 00001715 4889C7                  	mov rdi, rax
  3611 00001718 E8C34B0100              	call print_sexpr_if_not_void
  3612 0000171D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3613 00001722 E864490100              	call malloc
  3614 00001727 50                      	push rax
  3615 00001728 BF00000000              	mov rdi, 8 * 0	; new rib
  3616 0000172D E859490100              	call malloc
  3617 00001732 50                      	push rax
  3618 00001733 BF08000000              	mov rdi, 8 * 1	; extended env
  3619 00001738 E84E490100              	call malloc
  3620 0000173D 488B7D10                	mov rdi, ENV
  3621 00001741 BE00000000              	mov rsi, 0
  3622 00001746 BA01000000              	mov rdx, 1
  3623                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3624 0000174B 4883FE00                	cmp rsi, 0
  3625 0000174F 7410                    	je .L_lambda_simple_env_end_0010
  3626 00001751 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3627 00001755 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3628 00001759 48FFC6                  	inc rsi
  3629 0000175C 48FFC2                  	inc rdx
  3630 0000175F EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3631                                  .L_lambda_simple_env_end_0010:
  3632 00001761 5B                      	pop rbx
  3633 00001762 BE00000000              	mov rsi, 0
  3634                                  .L_lambda_simple_params_loop_0010:	; copy params
  3635 00001767 4883FE00                	cmp rsi, 0
  3636 0000176B 740E                    	je .L_lambda_simple_params_end_0010
  3637 0000176D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3638 00001772 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3639 00001776 48FFC6                  	inc rsi
  3640 00001779 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3641                                  .L_lambda_simple_params_end_0010:
  3642 0000177B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3643 0000177E 4889C3                  	mov rbx, rax
  3644 00001781 58                      	pop rax
  3645 00001782 C60004                  	mov byte [rax], T_closure
  3646 00001785 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3647 00001789 48C74009[96170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3648 00001791 E9A3000000              	jmp .L_lambda_simple_end_0010
  3649                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3650 00001796 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3651 0000179C 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3652 0000179E FF742410                	push qword [rsp + 8 * 2]
  3653 000017A2 6A01                    	push 1
  3654 000017A4 E99B480100              	jmp L_error_incorrect_arity_simple
  3655                                  .L_lambda_simple_arity_check_ok_0010:
  3656 000017A9 C8000000                	enter 0, 0
  3657                                  	; Setting up for a tail-call
  3658                                  	; preparing a non-tail-call
  3659 000017AD 488B4520                	mov rax, PARAM(0)	; param x
  3660 000017B1 50                      	push rax
  3661 000017B2 6A01                    	push 1	; arg count
  3662 000017B4 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  3663 000017BC 803805                  	cmp byte [rax], T_undefined
  3664 000017BF 0F8499470100            	je L_error_fvar_undefined
  3665 000017C5 803804                  	cmp byte [rax], T_closure
  3666 000017C8 0F8514480100            	jne L_error_non_closure
  3667 000017CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  3668 000017D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3669 000017D4 50                      	push rax
  3670 000017D5 6A01                    	push 1
  3671 000017D7 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3672 000017DF 803805                  	cmp byte [rax], T_undefined
  3673 000017E2 0F8476470100            	je L_error_fvar_undefined
  3674 000017E8 803804                  	cmp byte [rax], T_closure
  3675 000017EB 0F85F1470100            	jne L_error_non_closure
  3676 000017F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3677 000017F4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3678 000017F8 4C8B4D00                	mov r9, qword [rbp]
  3679 000017FC 4150                    	push r8
  3680 000017FE 4151                    	push r9
  3681 00001800 41BA05000000            	mov r10, 1 + 4
  3682 00001806 4C8B5D18                	mov r11, COUNT
  3683 0000180A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3684 0000180F 4C8D65F8                	lea r12, [rbp - 8]
  3685                                  .L_tc_recycle_frame_loop_0010:
  3686 00001813 4983FA00                	cmp r10, 0
  3687 00001817 7414                    	je .L_tc_recycle_frame_done_0010
  3688 00001819 4D8B2C24                	mov r13, qword [r12]
  3689 0000181D 4D892B                  	mov qword [r11], r13
  3690 00001820 49FFCA                  	dec r10
  3691 00001823 4983EB08                	sub r11, 8
  3692 00001827 4983EC08                	sub r12, 8
  3693 0000182B EBE6                    	jmp .L_tc_recycle_frame_loop_0010
  3694                                  .L_tc_recycle_frame_done_0010:
  3695 0000182D 498D6308                	lea rsp, [r11 + 8]
  3696 00001831 5D                      	pop rbp
  3697 00001832 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3698 00001835 C9                      	leave
  3699 00001836 C21800                  	ret AND_KILL_FRAME(1)
  3700                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3701 00001839 48890425[99100000]      	mov qword [free_var_40], rax
  3702 00001841 48B8-                   	mov rax, sob_void
  3702 00001843 [0000000000000000] 
  3703                                  
  3704 0000184B 4889C7                  	mov rdi, rax
  3705 0000184E E88D4A0100              	call print_sexpr_if_not_void
  3706 00001853 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3707 00001858 E82E480100              	call malloc
  3708 0000185D 50                      	push rax
  3709 0000185E BF00000000              	mov rdi, 8 * 0	; new rib
  3710 00001863 E823480100              	call malloc
  3711 00001868 50                      	push rax
  3712 00001869 BF08000000              	mov rdi, 8 * 1	; extended env
  3713 0000186E E818480100              	call malloc
  3714 00001873 488B7D10                	mov rdi, ENV
  3715 00001877 BE00000000              	mov rsi, 0
  3716 0000187C BA01000000              	mov rdx, 1
  3717                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3718 00001881 4883FE00                	cmp rsi, 0
  3719 00001885 7410                    	je .L_lambda_simple_env_end_0011
  3720 00001887 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3721 0000188B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3722 0000188F 48FFC6                  	inc rsi
  3723 00001892 48FFC2                  	inc rdx
  3724 00001895 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3725                                  .L_lambda_simple_env_end_0011:
  3726 00001897 5B                      	pop rbx
  3727 00001898 BE00000000              	mov rsi, 0
  3728                                  .L_lambda_simple_params_loop_0011:	; copy params
  3729 0000189D 4883FE00                	cmp rsi, 0
  3730 000018A1 740E                    	je .L_lambda_simple_params_end_0011
  3731 000018A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3732 000018A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3733 000018AC 48FFC6                  	inc rsi
  3734 000018AF EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3735                                  .L_lambda_simple_params_end_0011:
  3736 000018B1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3737 000018B4 4889C3                  	mov rbx, rax
  3738 000018B7 58                      	pop rax
  3739 000018B8 C60004                  	mov byte [rax], T_closure
  3740 000018BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3741 000018BF 48C74009[CC180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3742 000018C7 E9A3000000              	jmp .L_lambda_simple_end_0011
  3743                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3744 000018CC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3745 000018D2 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3746 000018D4 FF742410                	push qword [rsp + 8 * 2]
  3747 000018D8 6A01                    	push 1
  3748 000018DA E965470100              	jmp L_error_incorrect_arity_simple
  3749                                  .L_lambda_simple_arity_check_ok_0011:
  3750 000018DF C8000000                	enter 0, 0
  3751                                  	; Setting up for a tail-call
  3752                                  	; preparing a non-tail-call
  3753 000018E3 488B4520                	mov rax, PARAM(0)	; param x
  3754 000018E7 50                      	push rax
  3755 000018E8 6A01                    	push 1	; arg count
  3756 000018EA 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  3757 000018F2 803805                  	cmp byte [rax], T_undefined
  3758 000018F5 0F8463460100            	je L_error_fvar_undefined
  3759 000018FB 803804                  	cmp byte [rax], T_closure
  3760 000018FE 0F85DE460100            	jne L_error_non_closure
  3761 00001904 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3762 00001907 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3763 0000190A 50                      	push rax
  3764 0000190B 6A01                    	push 1
  3765 0000190D 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3766 00001915 803805                  	cmp byte [rax], T_undefined
  3767 00001918 0F8440460100            	je L_error_fvar_undefined
  3768 0000191E 803804                  	cmp byte [rax], T_closure
  3769 00001921 0F85BB460100            	jne L_error_non_closure
  3770 00001927 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3771 0000192A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3772 0000192E 4C8B4D00                	mov r9, qword [rbp]
  3773 00001932 4150                    	push r8
  3774 00001934 4151                    	push r9
  3775 00001936 41BA05000000            	mov r10, 1 + 4
  3776 0000193C 4C8B5D18                	mov r11, COUNT
  3777 00001940 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3778 00001945 4C8D65F8                	lea r12, [rbp - 8]
  3779                                  .L_tc_recycle_frame_loop_0011:
  3780 00001949 4983FA00                	cmp r10, 0
  3781 0000194D 7414                    	je .L_tc_recycle_frame_done_0011
  3782 0000194F 4D8B2C24                	mov r13, qword [r12]
  3783 00001953 4D892B                  	mov qword [r11], r13
  3784 00001956 49FFCA                  	dec r10
  3785 00001959 4983EB08                	sub r11, 8
  3786 0000195D 4983EC08                	sub r12, 8
  3787 00001961 EBE6                    	jmp .L_tc_recycle_frame_loop_0011
  3788                                  .L_tc_recycle_frame_done_0011:
  3789 00001963 498D6308                	lea rsp, [r11 + 8]
  3790 00001967 5D                      	pop rbp
  3791 00001968 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3792 0000196B C9                      	leave
  3793 0000196C C21800                  	ret AND_KILL_FRAME(1)
  3794                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3795 0000196F 48890425[CC100000]      	mov qword [free_var_43], rax
  3796 00001977 48B8-                   	mov rax, sob_void
  3796 00001979 [0000000000000000] 
  3797                                  
  3798 00001981 4889C7                  	mov rdi, rax
  3799 00001984 E857490100              	call print_sexpr_if_not_void
  3800 00001989 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3801 0000198E E8F8460100              	call malloc
  3802 00001993 50                      	push rax
  3803 00001994 BF00000000              	mov rdi, 8 * 0	; new rib
  3804 00001999 E8ED460100              	call malloc
  3805 0000199E 50                      	push rax
  3806 0000199F BF08000000              	mov rdi, 8 * 1	; extended env
  3807 000019A4 E8E2460100              	call malloc
  3808 000019A9 488B7D10                	mov rdi, ENV
  3809 000019AD BE00000000              	mov rsi, 0
  3810 000019B2 BA01000000              	mov rdx, 1
  3811                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3812 000019B7 4883FE00                	cmp rsi, 0
  3813 000019BB 7410                    	je .L_lambda_simple_env_end_0012
  3814 000019BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3815 000019C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3816 000019C5 48FFC6                  	inc rsi
  3817 000019C8 48FFC2                  	inc rdx
  3818 000019CB EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3819                                  .L_lambda_simple_env_end_0012:
  3820 000019CD 5B                      	pop rbx
  3821 000019CE BE00000000              	mov rsi, 0
  3822                                  .L_lambda_simple_params_loop_0012:	; copy params
  3823 000019D3 4883FE00                	cmp rsi, 0
  3824 000019D7 740E                    	je .L_lambda_simple_params_end_0012
  3825 000019D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3826 000019DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3827 000019E2 48FFC6                  	inc rsi
  3828 000019E5 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3829                                  .L_lambda_simple_params_end_0012:
  3830 000019E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3831 000019EA 4889C3                  	mov rbx, rax
  3832 000019ED 58                      	pop rax
  3833 000019EE C60004                  	mov byte [rax], T_closure
  3834 000019F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3835 000019F5 48C74009[021A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3836 000019FD E9A3000000              	jmp .L_lambda_simple_end_0012
  3837                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3838 00001A02 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3839 00001A08 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3840 00001A0A FF742410                	push qword [rsp + 8 * 2]
  3841 00001A0E 6A01                    	push 1
  3842 00001A10 E92F460100              	jmp L_error_incorrect_arity_simple
  3843                                  .L_lambda_simple_arity_check_ok_0012:
  3844 00001A15 C8000000                	enter 0, 0
  3845                                  	; Setting up for a tail-call
  3846                                  	; preparing a non-tail-call
  3847 00001A19 488B4520                	mov rax, PARAM(0)	; param x
  3848 00001A1D 50                      	push rax
  3849 00001A1E 6A01                    	push 1	; arg count
  3850 00001A20 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3851 00001A28 803805                  	cmp byte [rax], T_undefined
  3852 00001A2B 0F842D450100            	je L_error_fvar_undefined
  3853 00001A31 803804                  	cmp byte [rax], T_closure
  3854 00001A34 0F85A8450100            	jne L_error_non_closure
  3855 00001A3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3856 00001A3D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3857 00001A40 50                      	push rax
  3858 00001A41 6A01                    	push 1
  3859 00001A43 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3860 00001A4B 803805                  	cmp byte [rax], T_undefined
  3861 00001A4E 0F840A450100            	je L_error_fvar_undefined
  3862 00001A54 803804                  	cmp byte [rax], T_closure
  3863 00001A57 0F8585450100            	jne L_error_non_closure
  3864 00001A5D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3865 00001A60 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3866 00001A64 4C8B4D00                	mov r9, qword [rbp]
  3867 00001A68 4150                    	push r8
  3868 00001A6A 4151                    	push r9
  3869 00001A6C 41BA05000000            	mov r10, 1 + 4
  3870 00001A72 4C8B5D18                	mov r11, COUNT
  3871 00001A76 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3872 00001A7B 4C8D65F8                	lea r12, [rbp - 8]
  3873                                  .L_tc_recycle_frame_loop_0012:
  3874 00001A7F 4983FA00                	cmp r10, 0
  3875 00001A83 7414                    	je .L_tc_recycle_frame_done_0012
  3876 00001A85 4D8B2C24                	mov r13, qword [r12]
  3877 00001A89 4D892B                  	mov qword [r11], r13
  3878 00001A8C 49FFCA                  	dec r10
  3879 00001A8F 4983EB08                	sub r11, 8
  3880 00001A93 4983EC08                	sub r12, 8
  3881 00001A97 EBE6                    	jmp .L_tc_recycle_frame_loop_0012
  3882                                  .L_tc_recycle_frame_done_0012:
  3883 00001A99 498D6308                	lea rsp, [r11 + 8]
  3884 00001A9D 5D                      	pop rbp
  3885 00001A9E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3886 00001AA1 C9                      	leave
  3887 00001AA2 C21800                  	ret AND_KILL_FRAME(1)
  3888                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3889 00001AA5 48890425[DD100000]      	mov qword [free_var_44], rax
  3890 00001AAD 48B8-                   	mov rax, sob_void
  3890 00001AAF [0000000000000000] 
  3891                                  
  3892 00001AB7 4889C7                  	mov rdi, rax
  3893 00001ABA E821480100              	call print_sexpr_if_not_void
  3894 00001ABF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3895 00001AC4 E8C2450100              	call malloc
  3896 00001AC9 50                      	push rax
  3897 00001ACA BF00000000              	mov rdi, 8 * 0	; new rib
  3898 00001ACF E8B7450100              	call malloc
  3899 00001AD4 50                      	push rax
  3900 00001AD5 BF08000000              	mov rdi, 8 * 1	; extended env
  3901 00001ADA E8AC450100              	call malloc
  3902 00001ADF 488B7D10                	mov rdi, ENV
  3903 00001AE3 BE00000000              	mov rsi, 0
  3904 00001AE8 BA01000000              	mov rdx, 1
  3905                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3906 00001AED 4883FE00                	cmp rsi, 0
  3907 00001AF1 7410                    	je .L_lambda_simple_env_end_0013
  3908 00001AF3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3909 00001AF7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3910 00001AFB 48FFC6                  	inc rsi
  3911 00001AFE 48FFC2                  	inc rdx
  3912 00001B01 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3913                                  .L_lambda_simple_env_end_0013:
  3914 00001B03 5B                      	pop rbx
  3915 00001B04 BE00000000              	mov rsi, 0
  3916                                  .L_lambda_simple_params_loop_0013:	; copy params
  3917 00001B09 4883FE00                	cmp rsi, 0
  3918 00001B0D 740E                    	je .L_lambda_simple_params_end_0013
  3919 00001B0F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3920 00001B14 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3921 00001B18 48FFC6                  	inc rsi
  3922 00001B1B EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3923                                  .L_lambda_simple_params_end_0013:
  3924 00001B1D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3925 00001B20 4889C3                  	mov rbx, rax
  3926 00001B23 58                      	pop rax
  3927 00001B24 C60004                  	mov byte [rax], T_closure
  3928 00001B27 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3929 00001B2B 48C74009[381B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3930 00001B33 E9A3000000              	jmp .L_lambda_simple_end_0013
  3931                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3932 00001B38 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3933 00001B3E 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3934 00001B40 FF742410                	push qword [rsp + 8 * 2]
  3935 00001B44 6A01                    	push 1
  3936 00001B46 E9F9440100              	jmp L_error_incorrect_arity_simple
  3937                                  .L_lambda_simple_arity_check_ok_0013:
  3938 00001B4B C8000000                	enter 0, 0
  3939                                  	; Setting up for a tail-call
  3940                                  	; preparing a non-tail-call
  3941 00001B4F 488B4520                	mov rax, PARAM(0)	; param x
  3942 00001B53 50                      	push rax
  3943 00001B54 6A01                    	push 1	; arg count
  3944 00001B56 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  3945 00001B5E 803805                  	cmp byte [rax], T_undefined
  3946 00001B61 0F84F7430100            	je L_error_fvar_undefined
  3947 00001B67 803804                  	cmp byte [rax], T_closure
  3948 00001B6A 0F8572440100            	jne L_error_non_closure
  3949 00001B70 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3950 00001B73 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3951 00001B76 50                      	push rax
  3952 00001B77 6A01                    	push 1
  3953 00001B79 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  3954 00001B81 803805                  	cmp byte [rax], T_undefined
  3955 00001B84 0F84D4430100            	je L_error_fvar_undefined
  3956 00001B8A 803804                  	cmp byte [rax], T_closure
  3957 00001B8D 0F854F440100            	jne L_error_non_closure
  3958 00001B93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3959 00001B96 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  3960 00001B9A 4C8B4D00                	mov r9, qword [rbp]
  3961 00001B9E 4150                    	push r8
  3962 00001BA0 4151                    	push r9
  3963 00001BA2 41BA05000000            	mov r10, 1 + 4
  3964 00001BA8 4C8B5D18                	mov r11, COUNT
  3965 00001BAC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  3966 00001BB1 4C8D65F8                	lea r12, [rbp - 8]
  3967                                  .L_tc_recycle_frame_loop_0013:
  3968 00001BB5 4983FA00                	cmp r10, 0
  3969 00001BB9 7414                    	je .L_tc_recycle_frame_done_0013
  3970 00001BBB 4D8B2C24                	mov r13, qword [r12]
  3971 00001BBF 4D892B                  	mov qword [r11], r13
  3972 00001BC2 49FFCA                  	dec r10
  3973 00001BC5 4983EB08                	sub r11, 8
  3974 00001BC9 4983EC08                	sub r12, 8
  3975 00001BCD EBE6                    	jmp .L_tc_recycle_frame_loop_0013
  3976                                  .L_tc_recycle_frame_done_0013:
  3977 00001BCF 498D6308                	lea rsp, [r11 + 8]
  3978 00001BD3 5D                      	pop rbp
  3979 00001BD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3980 00001BD7 C9                      	leave
  3981 00001BD8 C21800                  	ret AND_KILL_FRAME(1)
  3982                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3983 00001BDB 48890425[FF100000]      	mov qword [free_var_46], rax
  3984 00001BE3 48B8-                   	mov rax, sob_void
  3984 00001BE5 [0000000000000000] 
  3985                                  
  3986 00001BED 4889C7                  	mov rdi, rax
  3987 00001BF0 E8EB460100              	call print_sexpr_if_not_void
  3988 00001BF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3989 00001BFA E88C440100              	call malloc
  3990 00001BFF 50                      	push rax
  3991 00001C00 BF00000000              	mov rdi, 8 * 0	; new rib
  3992 00001C05 E881440100              	call malloc
  3993 00001C0A 50                      	push rax
  3994 00001C0B BF08000000              	mov rdi, 8 * 1	; extended env
  3995 00001C10 E876440100              	call malloc
  3996 00001C15 488B7D10                	mov rdi, ENV
  3997 00001C19 BE00000000              	mov rsi, 0
  3998 00001C1E BA01000000              	mov rdx, 1
  3999                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  4000 00001C23 4883FE00                	cmp rsi, 0
  4001 00001C27 7410                    	je .L_lambda_simple_env_end_0014
  4002 00001C29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4003 00001C2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4004 00001C31 48FFC6                  	inc rsi
  4005 00001C34 48FFC2                  	inc rdx
  4006 00001C37 EBEA                    	jmp .L_lambda_simple_env_loop_0014
  4007                                  .L_lambda_simple_env_end_0014:
  4008 00001C39 5B                      	pop rbx
  4009 00001C3A BE00000000              	mov rsi, 0
  4010                                  .L_lambda_simple_params_loop_0014:	; copy params
  4011 00001C3F 4883FE00                	cmp rsi, 0
  4012 00001C43 740E                    	je .L_lambda_simple_params_end_0014
  4013 00001C45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4014 00001C4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4015 00001C4E 48FFC6                  	inc rsi
  4016 00001C51 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  4017                                  .L_lambda_simple_params_end_0014:
  4018 00001C53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4019 00001C56 4889C3                  	mov rbx, rax
  4020 00001C59 58                      	pop rax
  4021 00001C5A C60004                  	mov byte [rax], T_closure
  4022 00001C5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4023 00001C61 48C74009[6E1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  4024 00001C69 E9A3000000              	jmp .L_lambda_simple_end_0014
  4025                                  .L_lambda_simple_code_0014:	; lambda-simple body
  4026 00001C6E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4027 00001C74 740B                    	je .L_lambda_simple_arity_check_ok_0014
  4028 00001C76 FF742410                	push qword [rsp + 8 * 2]
  4029 00001C7A 6A01                    	push 1
  4030 00001C7C E9C3430100              	jmp L_error_incorrect_arity_simple
  4031                                  .L_lambda_simple_arity_check_ok_0014:
  4032 00001C81 C8000000                	enter 0, 0
  4033                                  	; Setting up for a tail-call
  4034                                  	; preparing a non-tail-call
  4035 00001C85 488B4520                	mov rax, PARAM(0)	; param x
  4036 00001C89 50                      	push rax
  4037 00001C8A 6A01                    	push 1	; arg count
  4038 00001C8C 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4039 00001C94 803805                  	cmp byte [rax], T_undefined
  4040 00001C97 0F84C1420100            	je L_error_fvar_undefined
  4041 00001C9D 803804                  	cmp byte [rax], T_closure
  4042 00001CA0 0F853C430100            	jne L_error_non_closure
  4043 00001CA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4044 00001CA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4045 00001CAC 50                      	push rax
  4046 00001CAD 6A01                    	push 1
  4047 00001CAF 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  4048 00001CB7 803805                  	cmp byte [rax], T_undefined
  4049 00001CBA 0F849E420100            	je L_error_fvar_undefined
  4050 00001CC0 803804                  	cmp byte [rax], T_closure
  4051 00001CC3 0F8519430100            	jne L_error_non_closure
  4052 00001CC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4053 00001CCC 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4054 00001CD0 4C8B4D00                	mov r9, qword [rbp]
  4055 00001CD4 4150                    	push r8
  4056 00001CD6 4151                    	push r9
  4057 00001CD8 41BA05000000            	mov r10, 1 + 4
  4058 00001CDE 4C8B5D18                	mov r11, COUNT
  4059 00001CE2 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4060 00001CE7 4C8D65F8                	lea r12, [rbp - 8]
  4061                                  .L_tc_recycle_frame_loop_0014:
  4062 00001CEB 4983FA00                	cmp r10, 0
  4063 00001CEF 7414                    	je .L_tc_recycle_frame_done_0014
  4064 00001CF1 4D8B2C24                	mov r13, qword [r12]
  4065 00001CF5 4D892B                  	mov qword [r11], r13
  4066 00001CF8 49FFCA                  	dec r10
  4067 00001CFB 4983EB08                	sub r11, 8
  4068 00001CFF 4983EC08                	sub r12, 8
  4069 00001D03 EBE6                    	jmp .L_tc_recycle_frame_loop_0014
  4070                                  .L_tc_recycle_frame_done_0014:
  4071 00001D05 498D6308                	lea rsp, [r11 + 8]
  4072 00001D09 5D                      	pop rbp
  4073 00001D0A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4074 00001D0D C9                      	leave
  4075 00001D0E C21800                  	ret AND_KILL_FRAME(1)
  4076                                  .L_lambda_simple_end_0014:	; new closure is in rax
  4077 00001D11 48890425[10110000]      	mov qword [free_var_47], rax
  4078 00001D19 48B8-                   	mov rax, sob_void
  4078 00001D1B [0000000000000000] 
  4079                                  
  4080 00001D23 4889C7                  	mov rdi, rax
  4081 00001D26 E8B5450100              	call print_sexpr_if_not_void
  4082 00001D2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4083 00001D30 E856430100              	call malloc
  4084 00001D35 50                      	push rax
  4085 00001D36 BF00000000              	mov rdi, 8 * 0	; new rib
  4086 00001D3B E84B430100              	call malloc
  4087 00001D40 50                      	push rax
  4088 00001D41 BF08000000              	mov rdi, 8 * 1	; extended env
  4089 00001D46 E840430100              	call malloc
  4090 00001D4B 488B7D10                	mov rdi, ENV
  4091 00001D4F BE00000000              	mov rsi, 0
  4092 00001D54 BA01000000              	mov rdx, 1
  4093                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4094 00001D59 4883FE00                	cmp rsi, 0
  4095 00001D5D 7410                    	je .L_lambda_simple_env_end_0015
  4096 00001D5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4097 00001D63 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4098 00001D67 48FFC6                  	inc rsi
  4099 00001D6A 48FFC2                  	inc rdx
  4100 00001D6D EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4101                                  .L_lambda_simple_env_end_0015:
  4102 00001D6F 5B                      	pop rbx
  4103 00001D70 BE00000000              	mov rsi, 0
  4104                                  .L_lambda_simple_params_loop_0015:	; copy params
  4105 00001D75 4883FE00                	cmp rsi, 0
  4106 00001D79 740E                    	je .L_lambda_simple_params_end_0015
  4107 00001D7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4108 00001D80 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4109 00001D84 48FFC6                  	inc rsi
  4110 00001D87 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4111                                  .L_lambda_simple_params_end_0015:
  4112 00001D89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4113 00001D8C 4889C3                  	mov rbx, rax
  4114 00001D8F 58                      	pop rax
  4115 00001D90 C60004                  	mov byte [rax], T_closure
  4116 00001D93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4117 00001D97 48C74009[A41D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4118 00001D9F E9A3000000              	jmp .L_lambda_simple_end_0015
  4119                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4120 00001DA4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4121 00001DAA 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4122 00001DAC FF742410                	push qword [rsp + 8 * 2]
  4123 00001DB0 6A01                    	push 1
  4124 00001DB2 E98D420100              	jmp L_error_incorrect_arity_simple
  4125                                  .L_lambda_simple_arity_check_ok_0015:
  4126 00001DB7 C8000000                	enter 0, 0
  4127                                  	; Setting up for a tail-call
  4128                                  	; preparing a non-tail-call
  4129 00001DBB 488B4520                	mov rax, PARAM(0)	; param x
  4130 00001DBF 50                      	push rax
  4131 00001DC0 6A01                    	push 1	; arg count
  4132 00001DC2 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  4133 00001DCA 803805                  	cmp byte [rax], T_undefined
  4134 00001DCD 0F848B410100            	je L_error_fvar_undefined
  4135 00001DD3 803804                  	cmp byte [rax], T_closure
  4136 00001DD6 0F8506420100            	jne L_error_non_closure
  4137 00001DDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4138 00001DDF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4139 00001DE2 50                      	push rax
  4140 00001DE3 6A01                    	push 1
  4141 00001DE5 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4142 00001DED 803805                  	cmp byte [rax], T_undefined
  4143 00001DF0 0F8468410100            	je L_error_fvar_undefined
  4144 00001DF6 803804                  	cmp byte [rax], T_closure
  4145 00001DF9 0F85E3410100            	jne L_error_non_closure
  4146 00001DFF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4147 00001E02 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4148 00001E06 4C8B4D00                	mov r9, qword [rbp]
  4149 00001E0A 4150                    	push r8
  4150 00001E0C 4151                    	push r9
  4151 00001E0E 41BA05000000            	mov r10, 1 + 4
  4152 00001E14 4C8B5D18                	mov r11, COUNT
  4153 00001E18 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4154 00001E1D 4C8D65F8                	lea r12, [rbp - 8]
  4155                                  .L_tc_recycle_frame_loop_0015:
  4156 00001E21 4983FA00                	cmp r10, 0
  4157 00001E25 7414                    	je .L_tc_recycle_frame_done_0015
  4158 00001E27 4D8B2C24                	mov r13, qword [r12]
  4159 00001E2B 4D892B                  	mov qword [r11], r13
  4160 00001E2E 49FFCA                  	dec r10
  4161 00001E31 4983EB08                	sub r11, 8
  4162 00001E35 4983EC08                	sub r12, 8
  4163 00001E39 EBE6                    	jmp .L_tc_recycle_frame_loop_0015
  4164                                  .L_tc_recycle_frame_done_0015:
  4165 00001E3B 498D6308                	lea rsp, [r11 + 8]
  4166 00001E3F 5D                      	pop rbp
  4167 00001E40 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4168 00001E43 C9                      	leave
  4169 00001E44 C21800                  	ret AND_KILL_FRAME(1)
  4170                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4171 00001E47 48890425[54110000]      	mov qword [free_var_51], rax
  4172 00001E4F 48B8-                   	mov rax, sob_void
  4172 00001E51 [0000000000000000] 
  4173                                  
  4174 00001E59 4889C7                  	mov rdi, rax
  4175 00001E5C E87F440100              	call print_sexpr_if_not_void
  4176 00001E61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4177 00001E66 E820420100              	call malloc
  4178 00001E6B 50                      	push rax
  4179 00001E6C BF00000000              	mov rdi, 8 * 0	; new rib
  4180 00001E71 E815420100              	call malloc
  4181 00001E76 50                      	push rax
  4182 00001E77 BF08000000              	mov rdi, 8 * 1	; extended env
  4183 00001E7C E80A420100              	call malloc
  4184 00001E81 488B7D10                	mov rdi, ENV
  4185 00001E85 BE00000000              	mov rsi, 0
  4186 00001E8A BA01000000              	mov rdx, 1
  4187                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4188 00001E8F 4883FE00                	cmp rsi, 0
  4189 00001E93 7410                    	je .L_lambda_simple_env_end_0016
  4190 00001E95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4191 00001E99 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4192 00001E9D 48FFC6                  	inc rsi
  4193 00001EA0 48FFC2                  	inc rdx
  4194 00001EA3 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4195                                  .L_lambda_simple_env_end_0016:
  4196 00001EA5 5B                      	pop rbx
  4197 00001EA6 BE00000000              	mov rsi, 0
  4198                                  .L_lambda_simple_params_loop_0016:	; copy params
  4199 00001EAB 4883FE00                	cmp rsi, 0
  4200 00001EAF 740E                    	je .L_lambda_simple_params_end_0016
  4201 00001EB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4202 00001EB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4203 00001EBA 48FFC6                  	inc rsi
  4204 00001EBD EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4205                                  .L_lambda_simple_params_end_0016:
  4206 00001EBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4207 00001EC2 4889C3                  	mov rbx, rax
  4208 00001EC5 58                      	pop rax
  4209 00001EC6 C60004                  	mov byte [rax], T_closure
  4210 00001EC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4211 00001ECD 48C74009[DA1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4212 00001ED5 E9A3000000              	jmp .L_lambda_simple_end_0016
  4213                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4214 00001EDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4215 00001EE0 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4216 00001EE2 FF742410                	push qword [rsp + 8 * 2]
  4217 00001EE6 6A01                    	push 1
  4218 00001EE8 E957410100              	jmp L_error_incorrect_arity_simple
  4219                                  .L_lambda_simple_arity_check_ok_0016:
  4220 00001EED C8000000                	enter 0, 0
  4221                                  	; Setting up for a tail-call
  4222                                  	; preparing a non-tail-call
  4223 00001EF1 488B4520                	mov rax, PARAM(0)	; param x
  4224 00001EF5 50                      	push rax
  4225 00001EF6 6A01                    	push 1	; arg count
  4226 00001EF8 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  4227 00001F00 803805                  	cmp byte [rax], T_undefined
  4228 00001F03 0F8455400100            	je L_error_fvar_undefined
  4229 00001F09 803804                  	cmp byte [rax], T_closure
  4230 00001F0C 0F85D0400100            	jne L_error_non_closure
  4231 00001F12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4232 00001F15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4233 00001F18 50                      	push rax
  4234 00001F19 6A01                    	push 1
  4235 00001F1B 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4236 00001F23 803805                  	cmp byte [rax], T_undefined
  4237 00001F26 0F8432400100            	je L_error_fvar_undefined
  4238 00001F2C 803804                  	cmp byte [rax], T_closure
  4239 00001F2F 0F85AD400100            	jne L_error_non_closure
  4240 00001F35 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4241 00001F38 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4242 00001F3C 4C8B4D00                	mov r9, qword [rbp]
  4243 00001F40 4150                    	push r8
  4244 00001F42 4151                    	push r9
  4245 00001F44 41BA05000000            	mov r10, 1 + 4
  4246 00001F4A 4C8B5D18                	mov r11, COUNT
  4247 00001F4E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4248 00001F53 4C8D65F8                	lea r12, [rbp - 8]
  4249                                  .L_tc_recycle_frame_loop_0016:
  4250 00001F57 4983FA00                	cmp r10, 0
  4251 00001F5B 7414                    	je .L_tc_recycle_frame_done_0016
  4252 00001F5D 4D8B2C24                	mov r13, qword [r12]
  4253 00001F61 4D892B                  	mov qword [r11], r13
  4254 00001F64 49FFCA                  	dec r10
  4255 00001F67 4983EB08                	sub r11, 8
  4256 00001F6B 4983EC08                	sub r12, 8
  4257 00001F6F EBE6                    	jmp .L_tc_recycle_frame_loop_0016
  4258                                  .L_tc_recycle_frame_done_0016:
  4259 00001F71 498D6308                	lea rsp, [r11 + 8]
  4260 00001F75 5D                      	pop rbp
  4261 00001F76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4262 00001F79 C9                      	leave
  4263 00001F7A C21800                  	ret AND_KILL_FRAME(1)
  4264                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4265 00001F7D 48890425[65110000]      	mov qword [free_var_52], rax
  4266 00001F85 48B8-                   	mov rax, sob_void
  4266 00001F87 [0000000000000000] 
  4267                                  
  4268 00001F8F 4889C7                  	mov rdi, rax
  4269 00001F92 E849430100              	call print_sexpr_if_not_void
  4270 00001F97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4271 00001F9C E8EA400100              	call malloc
  4272 00001FA1 50                      	push rax
  4273 00001FA2 BF00000000              	mov rdi, 8 * 0	; new rib
  4274 00001FA7 E8DF400100              	call malloc
  4275 00001FAC 50                      	push rax
  4276 00001FAD BF08000000              	mov rdi, 8 * 1	; extended env
  4277 00001FB2 E8D4400100              	call malloc
  4278 00001FB7 488B7D10                	mov rdi, ENV
  4279 00001FBB BE00000000              	mov rsi, 0
  4280 00001FC0 BA01000000              	mov rdx, 1
  4281                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4282 00001FC5 4883FE00                	cmp rsi, 0
  4283 00001FC9 7410                    	je .L_lambda_simple_env_end_0017
  4284 00001FCB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4285 00001FCF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4286 00001FD3 48FFC6                  	inc rsi
  4287 00001FD6 48FFC2                  	inc rdx
  4288 00001FD9 EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4289                                  .L_lambda_simple_env_end_0017:
  4290 00001FDB 5B                      	pop rbx
  4291 00001FDC BE00000000              	mov rsi, 0
  4292                                  .L_lambda_simple_params_loop_0017:	; copy params
  4293 00001FE1 4883FE00                	cmp rsi, 0
  4294 00001FE5 740E                    	je .L_lambda_simple_params_end_0017
  4295 00001FE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4296 00001FEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4297 00001FF0 48FFC6                  	inc rsi
  4298 00001FF3 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4299                                  .L_lambda_simple_params_end_0017:
  4300 00001FF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4301 00001FF8 4889C3                  	mov rbx, rax
  4302 00001FFB 58                      	pop rax
  4303 00001FFC C60004                  	mov byte [rax], T_closure
  4304 00001FFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4305 00002003 48C74009[10200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4306 0000200B E9A3000000              	jmp .L_lambda_simple_end_0017
  4307                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4308 00002010 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4309 00002016 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4310 00002018 FF742410                	push qword [rsp + 8 * 2]
  4311 0000201C 6A01                    	push 1
  4312 0000201E E921400100              	jmp L_error_incorrect_arity_simple
  4313                                  .L_lambda_simple_arity_check_ok_0017:
  4314 00002023 C8000000                	enter 0, 0
  4315                                  	; Setting up for a tail-call
  4316                                  	; preparing a non-tail-call
  4317 00002027 488B4520                	mov rax, PARAM(0)	; param x
  4318 0000202B 50                      	push rax
  4319 0000202C 6A01                    	push 1	; arg count
  4320 0000202E 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4321 00002036 803805                  	cmp byte [rax], T_undefined
  4322 00002039 0F841F3F0100            	je L_error_fvar_undefined
  4323 0000203F 803804                  	cmp byte [rax], T_closure
  4324 00002042 0F859A3F0100            	jne L_error_non_closure
  4325 00002048 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4326 0000204B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4327 0000204E 50                      	push rax
  4328 0000204F 6A01                    	push 1
  4329 00002051 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4330 00002059 803805                  	cmp byte [rax], T_undefined
  4331 0000205C 0F84FC3E0100            	je L_error_fvar_undefined
  4332 00002062 803804                  	cmp byte [rax], T_closure
  4333 00002065 0F85773F0100            	jne L_error_non_closure
  4334 0000206B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4335 0000206E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4336 00002072 4C8B4D00                	mov r9, qword [rbp]
  4337 00002076 4150                    	push r8
  4338 00002078 4151                    	push r9
  4339 0000207A 41BA05000000            	mov r10, 1 + 4
  4340 00002080 4C8B5D18                	mov r11, COUNT
  4341 00002084 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4342 00002089 4C8D65F8                	lea r12, [rbp - 8]
  4343                                  .L_tc_recycle_frame_loop_0017:
  4344 0000208D 4983FA00                	cmp r10, 0
  4345 00002091 7414                    	je .L_tc_recycle_frame_done_0017
  4346 00002093 4D8B2C24                	mov r13, qword [r12]
  4347 00002097 4D892B                  	mov qword [r11], r13
  4348 0000209A 49FFCA                  	dec r10
  4349 0000209D 4983EB08                	sub r11, 8
  4350 000020A1 4983EC08                	sub r12, 8
  4351 000020A5 EBE6                    	jmp .L_tc_recycle_frame_loop_0017
  4352                                  .L_tc_recycle_frame_done_0017:
  4353 000020A7 498D6308                	lea rsp, [r11 + 8]
  4354 000020AB 5D                      	pop rbp
  4355 000020AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4356 000020AF C9                      	leave
  4357 000020B0 C21800                  	ret AND_KILL_FRAME(1)
  4358                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4359 000020B3 48890425[87110000]      	mov qword [free_var_54], rax
  4360 000020BB 48B8-                   	mov rax, sob_void
  4360 000020BD [0000000000000000] 
  4361                                  
  4362 000020C5 4889C7                  	mov rdi, rax
  4363 000020C8 E813420100              	call print_sexpr_if_not_void
  4364 000020CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4365 000020D2 E8B43F0100              	call malloc
  4366 000020D7 50                      	push rax
  4367 000020D8 BF00000000              	mov rdi, 8 * 0	; new rib
  4368 000020DD E8A93F0100              	call malloc
  4369 000020E2 50                      	push rax
  4370 000020E3 BF08000000              	mov rdi, 8 * 1	; extended env
  4371 000020E8 E89E3F0100              	call malloc
  4372 000020ED 488B7D10                	mov rdi, ENV
  4373 000020F1 BE00000000              	mov rsi, 0
  4374 000020F6 BA01000000              	mov rdx, 1
  4375                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4376 000020FB 4883FE00                	cmp rsi, 0
  4377 000020FF 7410                    	je .L_lambda_simple_env_end_0018
  4378 00002101 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4379 00002105 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4380 00002109 48FFC6                  	inc rsi
  4381 0000210C 48FFC2                  	inc rdx
  4382 0000210F EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4383                                  .L_lambda_simple_env_end_0018:
  4384 00002111 5B                      	pop rbx
  4385 00002112 BE00000000              	mov rsi, 0
  4386                                  .L_lambda_simple_params_loop_0018:	; copy params
  4387 00002117 4883FE00                	cmp rsi, 0
  4388 0000211B 740E                    	je .L_lambda_simple_params_end_0018
  4389 0000211D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4390 00002122 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4391 00002126 48FFC6                  	inc rsi
  4392 00002129 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4393                                  .L_lambda_simple_params_end_0018:
  4394 0000212B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4395 0000212E 4889C3                  	mov rbx, rax
  4396 00002131 58                      	pop rax
  4397 00002132 C60004                  	mov byte [rax], T_closure
  4398 00002135 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4399 00002139 48C74009[46210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4400 00002141 E9A3000000              	jmp .L_lambda_simple_end_0018
  4401                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4402 00002146 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4403 0000214C 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4404 0000214E FF742410                	push qword [rsp + 8 * 2]
  4405 00002152 6A01                    	push 1
  4406 00002154 E9EB3E0100              	jmp L_error_incorrect_arity_simple
  4407                                  .L_lambda_simple_arity_check_ok_0018:
  4408 00002159 C8000000                	enter 0, 0
  4409                                  	; Setting up for a tail-call
  4410                                  	; preparing a non-tail-call
  4411 0000215D 488B4520                	mov rax, PARAM(0)	; param x
  4412 00002161 50                      	push rax
  4413 00002162 6A01                    	push 1	; arg count
  4414 00002164 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4415 0000216C 803805                  	cmp byte [rax], T_undefined
  4416 0000216F 0F84E93D0100            	je L_error_fvar_undefined
  4417 00002175 803804                  	cmp byte [rax], T_closure
  4418 00002178 0F85643E0100            	jne L_error_non_closure
  4419 0000217E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4420 00002181 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4421 00002184 50                      	push rax
  4422 00002185 6A01                    	push 1
  4423 00002187 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4424 0000218F 803805                  	cmp byte [rax], T_undefined
  4425 00002192 0F84C63D0100            	je L_error_fvar_undefined
  4426 00002198 803804                  	cmp byte [rax], T_closure
  4427 0000219B 0F85413E0100            	jne L_error_non_closure
  4428 000021A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4429 000021A4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4430 000021A8 4C8B4D00                	mov r9, qword [rbp]
  4431 000021AC 4150                    	push r8
  4432 000021AE 4151                    	push r9
  4433 000021B0 41BA05000000            	mov r10, 1 + 4
  4434 000021B6 4C8B5D18                	mov r11, COUNT
  4435 000021BA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4436 000021BF 4C8D65F8                	lea r12, [rbp - 8]
  4437                                  .L_tc_recycle_frame_loop_0018:
  4438 000021C3 4983FA00                	cmp r10, 0
  4439 000021C7 7414                    	je .L_tc_recycle_frame_done_0018
  4440 000021C9 4D8B2C24                	mov r13, qword [r12]
  4441 000021CD 4D892B                  	mov qword [r11], r13
  4442 000021D0 49FFCA                  	dec r10
  4443 000021D3 4983EB08                	sub r11, 8
  4444 000021D7 4983EC08                	sub r12, 8
  4445 000021DB EBE6                    	jmp .L_tc_recycle_frame_loop_0018
  4446                                  .L_tc_recycle_frame_done_0018:
  4447 000021DD 498D6308                	lea rsp, [r11 + 8]
  4448 000021E1 5D                      	pop rbp
  4449 000021E2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4450 000021E5 C9                      	leave
  4451 000021E6 C21800                  	ret AND_KILL_FRAME(1)
  4452                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4453 000021E9 48890425[98110000]      	mov qword [free_var_55], rax
  4454 000021F1 48B8-                   	mov rax, sob_void
  4454 000021F3 [0000000000000000] 
  4455                                  
  4456 000021FB 4889C7                  	mov rdi, rax
  4457 000021FE E8DD400100              	call print_sexpr_if_not_void
  4458 00002203 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4459 00002208 E87E3E0100              	call malloc
  4460 0000220D 50                      	push rax
  4461 0000220E BF00000000              	mov rdi, 8 * 0	; new rib
  4462 00002213 E8733E0100              	call malloc
  4463 00002218 50                      	push rax
  4464 00002219 BF08000000              	mov rdi, 8 * 1	; extended env
  4465 0000221E E8683E0100              	call malloc
  4466 00002223 488B7D10                	mov rdi, ENV
  4467 00002227 BE00000000              	mov rsi, 0
  4468 0000222C BA01000000              	mov rdx, 1
  4469                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4470 00002231 4883FE00                	cmp rsi, 0
  4471 00002235 7410                    	je .L_lambda_simple_env_end_0019
  4472 00002237 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4473 0000223B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4474 0000223F 48FFC6                  	inc rsi
  4475 00002242 48FFC2                  	inc rdx
  4476 00002245 EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4477                                  .L_lambda_simple_env_end_0019:
  4478 00002247 5B                      	pop rbx
  4479 00002248 BE00000000              	mov rsi, 0
  4480                                  .L_lambda_simple_params_loop_0019:	; copy params
  4481 0000224D 4883FE00                	cmp rsi, 0
  4482 00002251 740E                    	je .L_lambda_simple_params_end_0019
  4483 00002253 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4484 00002258 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4485 0000225C 48FFC6                  	inc rsi
  4486 0000225F EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4487                                  .L_lambda_simple_params_end_0019:
  4488 00002261 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4489 00002264 4889C3                  	mov rbx, rax
  4490 00002267 58                      	pop rax
  4491 00002268 C60004                  	mov byte [rax], T_closure
  4492 0000226B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4493 0000226F 48C74009[7C220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4494 00002277 E9A3000000              	jmp .L_lambda_simple_end_0019
  4495                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4496 0000227C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4497 00002282 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4498 00002284 FF742410                	push qword [rsp + 8 * 2]
  4499 00002288 6A01                    	push 1
  4500 0000228A E9B53D0100              	jmp L_error_incorrect_arity_simple
  4501                                  .L_lambda_simple_arity_check_ok_0019:
  4502 0000228F C8000000                	enter 0, 0
  4503                                  	; Setting up for a tail-call
  4504                                  	; preparing a non-tail-call
  4505 00002293 488B4520                	mov rax, PARAM(0)	; param x
  4506 00002297 50                      	push rax
  4507 00002298 6A01                    	push 1	; arg count
  4508 0000229A 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
  4509 000022A2 803805                  	cmp byte [rax], T_undefined
  4510 000022A5 0F84B33C0100            	je L_error_fvar_undefined
  4511 000022AB 803804                  	cmp byte [rax], T_closure
  4512 000022AE 0F852E3D0100            	jne L_error_non_closure
  4513 000022B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4514 000022B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4515 000022BA 50                      	push rax
  4516 000022BB 6A01                    	push 1
  4517 000022BD 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4518 000022C5 803805                  	cmp byte [rax], T_undefined
  4519 000022C8 0F84903C0100            	je L_error_fvar_undefined
  4520 000022CE 803804                  	cmp byte [rax], T_closure
  4521 000022D1 0F850B3D0100            	jne L_error_non_closure
  4522 000022D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4523 000022DA 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4524 000022DE 4C8B4D00                	mov r9, qword [rbp]
  4525 000022E2 4150                    	push r8
  4526 000022E4 4151                    	push r9
  4527 000022E6 41BA05000000            	mov r10, 1 + 4
  4528 000022EC 4C8B5D18                	mov r11, COUNT
  4529 000022F0 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4530 000022F5 4C8D65F8                	lea r12, [rbp - 8]
  4531                                  .L_tc_recycle_frame_loop_0019:
  4532 000022F9 4983FA00                	cmp r10, 0
  4533 000022FD 7414                    	je .L_tc_recycle_frame_done_0019
  4534 000022FF 4D8B2C24                	mov r13, qword [r12]
  4535 00002303 4D892B                  	mov qword [r11], r13
  4536 00002306 49FFCA                  	dec r10
  4537 00002309 4983EB08                	sub r11, 8
  4538 0000230D 4983EC08                	sub r12, 8
  4539 00002311 EBE6                    	jmp .L_tc_recycle_frame_loop_0019
  4540                                  .L_tc_recycle_frame_done_0019:
  4541 00002313 498D6308                	lea rsp, [r11 + 8]
  4542 00002317 5D                      	pop rbp
  4543 00002318 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4544 0000231B C9                      	leave
  4545 0000231C C21800                  	ret AND_KILL_FRAME(1)
  4546                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4547 0000231F 48890425[CB110000]      	mov qword [free_var_58], rax
  4548 00002327 48B8-                   	mov rax, sob_void
  4548 00002329 [0000000000000000] 
  4549                                  
  4550 00002331 4889C7                  	mov rdi, rax
  4551 00002334 E8A73F0100              	call print_sexpr_if_not_void
  4552 00002339 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4553 0000233E E8483D0100              	call malloc
  4554 00002343 50                      	push rax
  4555 00002344 BF00000000              	mov rdi, 8 * 0	; new rib
  4556 00002349 E83D3D0100              	call malloc
  4557 0000234E 50                      	push rax
  4558 0000234F BF08000000              	mov rdi, 8 * 1	; extended env
  4559 00002354 E8323D0100              	call malloc
  4560 00002359 488B7D10                	mov rdi, ENV
  4561 0000235D BE00000000              	mov rsi, 0
  4562 00002362 BA01000000              	mov rdx, 1
  4563                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4564 00002367 4883FE00                	cmp rsi, 0
  4565 0000236B 7410                    	je .L_lambda_simple_env_end_001a
  4566 0000236D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4567 00002371 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4568 00002375 48FFC6                  	inc rsi
  4569 00002378 48FFC2                  	inc rdx
  4570 0000237B EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4571                                  .L_lambda_simple_env_end_001a:
  4572 0000237D 5B                      	pop rbx
  4573 0000237E BE00000000              	mov rsi, 0
  4574                                  .L_lambda_simple_params_loop_001a:	; copy params
  4575 00002383 4883FE00                	cmp rsi, 0
  4576 00002387 740E                    	je .L_lambda_simple_params_end_001a
  4577 00002389 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4578 0000238E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4579 00002392 48FFC6                  	inc rsi
  4580 00002395 EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4581                                  .L_lambda_simple_params_end_001a:
  4582 00002397 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4583 0000239A 4889C3                  	mov rbx, rax
  4584 0000239D 58                      	pop rax
  4585 0000239E C60004                  	mov byte [rax], T_closure
  4586 000023A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4587 000023A5 48C74009[B2230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4588 000023AD E9A3000000              	jmp .L_lambda_simple_end_001a
  4589                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4590 000023B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4591 000023B8 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4592 000023BA FF742410                	push qword [rsp + 8 * 2]
  4593 000023BE 6A01                    	push 1
  4594 000023C0 E97F3C0100              	jmp L_error_incorrect_arity_simple
  4595                                  .L_lambda_simple_arity_check_ok_001a:
  4596 000023C5 C8000000                	enter 0, 0
  4597                                  	; Setting up for a tail-call
  4598                                  	; preparing a non-tail-call
  4599 000023C9 488B4520                	mov rax, PARAM(0)	; param x
  4600 000023CD 50                      	push rax
  4601 000023CE 6A01                    	push 1	; arg count
  4602 000023D0 488B0425[32110000]      	mov rax, qword [free_var_49]	; free var cadr
  4603 000023D8 803805                  	cmp byte [rax], T_undefined
  4604 000023DB 0F847D3B0100            	je L_error_fvar_undefined
  4605 000023E1 803804                  	cmp byte [rax], T_closure
  4606 000023E4 0F85F83B0100            	jne L_error_non_closure
  4607 000023EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4608 000023ED FF5009                  	call SOB_CLOSURE_CODE(rax)
  4609 000023F0 50                      	push rax
  4610 000023F1 6A01                    	push 1
  4611 000023F3 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4612 000023FB 803805                  	cmp byte [rax], T_undefined
  4613 000023FE 0F845A3B0100            	je L_error_fvar_undefined
  4614 00002404 803804                  	cmp byte [rax], T_closure
  4615 00002407 0F85D53B0100            	jne L_error_non_closure
  4616 0000240D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4617 00002410 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4618 00002414 4C8B4D00                	mov r9, qword [rbp]
  4619 00002418 4150                    	push r8
  4620 0000241A 4151                    	push r9
  4621 0000241C 41BA05000000            	mov r10, 1 + 4
  4622 00002422 4C8B5D18                	mov r11, COUNT
  4623 00002426 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4624 0000242B 4C8D65F8                	lea r12, [rbp - 8]
  4625                                  .L_tc_recycle_frame_loop_001a:
  4626 0000242F 4983FA00                	cmp r10, 0
  4627 00002433 7414                    	je .L_tc_recycle_frame_done_001a
  4628 00002435 4D8B2C24                	mov r13, qword [r12]
  4629 00002439 4D892B                  	mov qword [r11], r13
  4630 0000243C 49FFCA                  	dec r10
  4631 0000243F 4983EB08                	sub r11, 8
  4632 00002443 4983EC08                	sub r12, 8
  4633 00002447 EBE6                    	jmp .L_tc_recycle_frame_loop_001a
  4634                                  .L_tc_recycle_frame_done_001a:
  4635 00002449 498D6308                	lea rsp, [r11 + 8]
  4636 0000244D 5D                      	pop rbp
  4637 0000244E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4638 00002451 C9                      	leave
  4639 00002452 C21800                  	ret AND_KILL_FRAME(1)
  4640                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4641 00002455 48890425[DC110000]      	mov qword [free_var_59], rax
  4642 0000245D 48B8-                   	mov rax, sob_void
  4642 0000245F [0000000000000000] 
  4643                                  
  4644 00002467 4889C7                  	mov rdi, rax
  4645 0000246A E8713E0100              	call print_sexpr_if_not_void
  4646 0000246F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4647 00002474 E8123C0100              	call malloc
  4648 00002479 50                      	push rax
  4649 0000247A BF00000000              	mov rdi, 8 * 0	; new rib
  4650 0000247F E8073C0100              	call malloc
  4651 00002484 50                      	push rax
  4652 00002485 BF08000000              	mov rdi, 8 * 1	; extended env
  4653 0000248A E8FC3B0100              	call malloc
  4654 0000248F 488B7D10                	mov rdi, ENV
  4655 00002493 BE00000000              	mov rsi, 0
  4656 00002498 BA01000000              	mov rdx, 1
  4657                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4658 0000249D 4883FE00                	cmp rsi, 0
  4659 000024A1 7410                    	je .L_lambda_simple_env_end_001b
  4660 000024A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4661 000024A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4662 000024AB 48FFC6                  	inc rsi
  4663 000024AE 48FFC2                  	inc rdx
  4664 000024B1 EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4665                                  .L_lambda_simple_env_end_001b:
  4666 000024B3 5B                      	pop rbx
  4667 000024B4 BE00000000              	mov rsi, 0
  4668                                  .L_lambda_simple_params_loop_001b:	; copy params
  4669 000024B9 4883FE00                	cmp rsi, 0
  4670 000024BD 740E                    	je .L_lambda_simple_params_end_001b
  4671 000024BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4672 000024C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4673 000024C8 48FFC6                  	inc rsi
  4674 000024CB EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4675                                  .L_lambda_simple_params_end_001b:
  4676 000024CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4677 000024D0 4889C3                  	mov rbx, rax
  4678 000024D3 58                      	pop rax
  4679 000024D4 C60004                  	mov byte [rax], T_closure
  4680 000024D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4681 000024DB 48C74009[E8240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4682 000024E3 E9A3000000              	jmp .L_lambda_simple_end_001b
  4683                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4684 000024E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4685 000024EE 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4686 000024F0 FF742410                	push qword [rsp + 8 * 2]
  4687 000024F4 6A01                    	push 1
  4688 000024F6 E9493B0100              	jmp L_error_incorrect_arity_simple
  4689                                  .L_lambda_simple_arity_check_ok_001b:
  4690 000024FB C8000000                	enter 0, 0
  4691                                  	; Setting up for a tail-call
  4692                                  	; preparing a non-tail-call
  4693 000024FF 488B4520                	mov rax, PARAM(0)	; param x
  4694 00002503 50                      	push rax
  4695 00002504 6A01                    	push 1	; arg count
  4696 00002506 488B0425[BA110000]      	mov rax, qword [free_var_57]	; free var cdar
  4697 0000250E 803805                  	cmp byte [rax], T_undefined
  4698 00002511 0F84473A0100            	je L_error_fvar_undefined
  4699 00002517 803804                  	cmp byte [rax], T_closure
  4700 0000251A 0F85C23A0100            	jne L_error_non_closure
  4701 00002520 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4702 00002523 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4703 00002526 50                      	push rax
  4704 00002527 6A01                    	push 1
  4705 00002529 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4706 00002531 803805                  	cmp byte [rax], T_undefined
  4707 00002534 0F84243A0100            	je L_error_fvar_undefined
  4708 0000253A 803804                  	cmp byte [rax], T_closure
  4709 0000253D 0F859F3A0100            	jne L_error_non_closure
  4710 00002543 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4711 00002546 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4712 0000254A 4C8B4D00                	mov r9, qword [rbp]
  4713 0000254E 4150                    	push r8
  4714 00002550 4151                    	push r9
  4715 00002552 41BA05000000            	mov r10, 1 + 4
  4716 00002558 4C8B5D18                	mov r11, COUNT
  4717 0000255C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4718 00002561 4C8D65F8                	lea r12, [rbp - 8]
  4719                                  .L_tc_recycle_frame_loop_001b:
  4720 00002565 4983FA00                	cmp r10, 0
  4721 00002569 7414                    	je .L_tc_recycle_frame_done_001b
  4722 0000256B 4D8B2C24                	mov r13, qword [r12]
  4723 0000256F 4D892B                  	mov qword [r11], r13
  4724 00002572 49FFCA                  	dec r10
  4725 00002575 4983EB08                	sub r11, 8
  4726 00002579 4983EC08                	sub r12, 8
  4727 0000257D EBE6                    	jmp .L_tc_recycle_frame_loop_001b
  4728                                  .L_tc_recycle_frame_done_001b:
  4729 0000257F 498D6308                	lea rsp, [r11 + 8]
  4730 00002583 5D                      	pop rbp
  4731 00002584 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4732 00002587 C9                      	leave
  4733 00002588 C21800                  	ret AND_KILL_FRAME(1)
  4734                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4735 0000258B 48890425[FE110000]      	mov qword [free_var_61], rax
  4736 00002593 48B8-                   	mov rax, sob_void
  4736 00002595 [0000000000000000] 
  4737                                  
  4738 0000259D 4889C7                  	mov rdi, rax
  4739 000025A0 E83B3D0100              	call print_sexpr_if_not_void
  4740 000025A5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4741 000025AA E8DC3A0100              	call malloc
  4742 000025AF 50                      	push rax
  4743 000025B0 BF00000000              	mov rdi, 8 * 0	; new rib
  4744 000025B5 E8D13A0100              	call malloc
  4745 000025BA 50                      	push rax
  4746 000025BB BF08000000              	mov rdi, 8 * 1	; extended env
  4747 000025C0 E8C63A0100              	call malloc
  4748 000025C5 488B7D10                	mov rdi, ENV
  4749 000025C9 BE00000000              	mov rsi, 0
  4750 000025CE BA01000000              	mov rdx, 1
  4751                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4752 000025D3 4883FE00                	cmp rsi, 0
  4753 000025D7 7410                    	je .L_lambda_simple_env_end_001c
  4754 000025D9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4755 000025DD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4756 000025E1 48FFC6                  	inc rsi
  4757 000025E4 48FFC2                  	inc rdx
  4758 000025E7 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4759                                  .L_lambda_simple_env_end_001c:
  4760 000025E9 5B                      	pop rbx
  4761 000025EA BE00000000              	mov rsi, 0
  4762                                  .L_lambda_simple_params_loop_001c:	; copy params
  4763 000025EF 4883FE00                	cmp rsi, 0
  4764 000025F3 740E                    	je .L_lambda_simple_params_end_001c
  4765 000025F5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4766 000025FA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4767 000025FE 48FFC6                  	inc rsi
  4768 00002601 EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4769                                  .L_lambda_simple_params_end_001c:
  4770 00002603 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4771 00002606 4889C3                  	mov rbx, rax
  4772 00002609 58                      	pop rax
  4773 0000260A C60004                  	mov byte [rax], T_closure
  4774 0000260D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4775 00002611 48C74009[1E260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4776 00002619 E9A3000000              	jmp .L_lambda_simple_end_001c
  4777                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4778 0000261E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4779 00002624 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4780 00002626 FF742410                	push qword [rsp + 8 * 2]
  4781 0000262A 6A01                    	push 1
  4782 0000262C E9133A0100              	jmp L_error_incorrect_arity_simple
  4783                                  .L_lambda_simple_arity_check_ok_001c:
  4784 00002631 C8000000                	enter 0, 0
  4785                                  	; Setting up for a tail-call
  4786                                  	; preparing a non-tail-call
  4787 00002635 488B4520                	mov rax, PARAM(0)	; param x
  4788 00002639 50                      	push rax
  4789 0000263A 6A01                    	push 1	; arg count
  4790 0000263C 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4791 00002644 803805                  	cmp byte [rax], T_undefined
  4792 00002647 0F8411390100            	je L_error_fvar_undefined
  4793 0000264D 803804                  	cmp byte [rax], T_closure
  4794 00002650 0F858C390100            	jne L_error_non_closure
  4795 00002656 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4796 00002659 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4797 0000265C 50                      	push rax
  4798 0000265D 6A01                    	push 1
  4799 0000265F 488B0425[31120000]      	mov rax, qword [free_var_64]	; free var cddr
  4800 00002667 803805                  	cmp byte [rax], T_undefined
  4801 0000266A 0F84EE380100            	je L_error_fvar_undefined
  4802 00002670 803804                  	cmp byte [rax], T_closure
  4803 00002673 0F8569390100            	jne L_error_non_closure
  4804 00002679 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4805 0000267C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4806 00002680 4C8B4D00                	mov r9, qword [rbp]
  4807 00002684 4150                    	push r8
  4808 00002686 4151                    	push r9
  4809 00002688 41BA05000000            	mov r10, 1 + 4
  4810 0000268E 4C8B5D18                	mov r11, COUNT
  4811 00002692 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4812 00002697 4C8D65F8                	lea r12, [rbp - 8]
  4813                                  .L_tc_recycle_frame_loop_001c:
  4814 0000269B 4983FA00                	cmp r10, 0
  4815 0000269F 7414                    	je .L_tc_recycle_frame_done_001c
  4816 000026A1 4D8B2C24                	mov r13, qword [r12]
  4817 000026A5 4D892B                  	mov qword [r11], r13
  4818 000026A8 49FFCA                  	dec r10
  4819 000026AB 4983EB08                	sub r11, 8
  4820 000026AF 4983EC08                	sub r12, 8
  4821 000026B3 EBE6                    	jmp .L_tc_recycle_frame_loop_001c
  4822                                  .L_tc_recycle_frame_done_001c:
  4823 000026B5 498D6308                	lea rsp, [r11 + 8]
  4824 000026B9 5D                      	pop rbp
  4825 000026BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4826 000026BD C9                      	leave
  4827 000026BE C21800                  	ret AND_KILL_FRAME(1)
  4828                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4829 000026C1 48890425[0F120000]      	mov qword [free_var_62], rax
  4830 000026C9 48B8-                   	mov rax, sob_void
  4830 000026CB [0000000000000000] 
  4831                                  
  4832 000026D3 4889C7                  	mov rdi, rax
  4833 000026D6 E8053C0100              	call print_sexpr_if_not_void
  4834 000026DB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4835 000026E0 E8A6390100              	call malloc
  4836 000026E5 50                      	push rax
  4837 000026E6 BF00000000              	mov rdi, 8 * 0	; new rib
  4838 000026EB E89B390100              	call malloc
  4839 000026F0 50                      	push rax
  4840 000026F1 BF08000000              	mov rdi, 8 * 1	; extended env
  4841 000026F6 E890390100              	call malloc
  4842 000026FB 488B7D10                	mov rdi, ENV
  4843 000026FF BE00000000              	mov rsi, 0
  4844 00002704 BA01000000              	mov rdx, 1
  4845                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4846 00002709 4883FE00                	cmp rsi, 0
  4847 0000270D 7410                    	je .L_lambda_simple_env_end_001d
  4848 0000270F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4849 00002713 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4850 00002717 48FFC6                  	inc rsi
  4851 0000271A 48FFC2                  	inc rdx
  4852 0000271D EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4853                                  .L_lambda_simple_env_end_001d:
  4854 0000271F 5B                      	pop rbx
  4855 00002720 BE00000000              	mov rsi, 0
  4856                                  .L_lambda_simple_params_loop_001d:	; copy params
  4857 00002725 4883FE00                	cmp rsi, 0
  4858 00002729 740E                    	je .L_lambda_simple_params_end_001d
  4859 0000272B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4860 00002730 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4861 00002734 48FFC6                  	inc rsi
  4862 00002737 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4863                                  .L_lambda_simple_params_end_001d:
  4864 00002739 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4865 0000273C 4889C3                  	mov rbx, rax
  4866 0000273F 58                      	pop rax
  4867 00002740 C60004                  	mov byte [rax], T_closure
  4868 00002743 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4869 00002747 48C74009[54270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4870 0000274F E915010000              	jmp .L_lambda_simple_end_001d
  4871                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4872 00002754 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4873 0000275A 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4874 0000275C FF742410                	push qword [rsp + 8 * 2]
  4875 00002760 6A01                    	push 1
  4876 00002762 E9DD380100              	jmp L_error_incorrect_arity_simple
  4877                                  .L_lambda_simple_arity_check_ok_001d:
  4878 00002767 C8000000                	enter 0, 0
  4879                                  	; preparing a non-tail-call
  4880 0000276B 488B4520                	mov rax, PARAM(0)	; param e
  4881 0000276F 50                      	push rax
  4882 00002770 6A01                    	push 1	; arg count
  4883 00002772 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  4884 0000277A 803805                  	cmp byte [rax], T_undefined
  4885 0000277D 0F84DB370100            	je L_error_fvar_undefined
  4886 00002783 803804                  	cmp byte [rax], T_closure
  4887 00002786 0F8556380100            	jne L_error_non_closure
  4888 0000278C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4889 0000278F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4890 00002792 483D[02000000]          	cmp rax, sob_boolean_false
  4891 00002798 0F85C7000000            	jne .L_or_end_0001
  4892                                  
  4893                                  	; preparing a non-tail-call
  4894 0000279E 488B4520                	mov rax, PARAM(0)	; param e
  4895 000027A2 50                      	push rax
  4896 000027A3 6A01                    	push 1	; arg count
  4897 000027A5 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
  4898 000027AD 803805                  	cmp byte [rax], T_undefined
  4899 000027B0 0F84A8370100            	je L_error_fvar_undefined
  4900 000027B6 803804                  	cmp byte [rax], T_closure
  4901 000027B9 0F8523380100            	jne L_error_non_closure
  4902 000027BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4903 000027C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4904 000027C5 483D[02000000]          	cmp rax, sob_boolean_false
  4905 000027CB 0F848A000000            	je .L_if_else_0001
  4906                                  	; Setting up for a tail-call
  4907                                  	; preparing a non-tail-call
  4908 000027D1 488B4520                	mov rax, PARAM(0)	; param e
  4909 000027D5 50                      	push rax
  4910 000027D6 6A01                    	push 1	; arg count
  4911 000027D8 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  4912 000027E0 803805                  	cmp byte [rax], T_undefined
  4913 000027E3 0F8475370100            	je L_error_fvar_undefined
  4914 000027E9 803804                  	cmp byte [rax], T_closure
  4915 000027EC 0F85F0370100            	jne L_error_non_closure
  4916 000027F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4917 000027F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4918 000027F8 50                      	push rax
  4919 000027F9 6A01                    	push 1
  4920 000027FB 488B0425[62140000]      	mov rax, qword [free_var_97]	; free var list?
  4921 00002803 803805                  	cmp byte [rax], T_undefined
  4922 00002806 0F8452370100            	je L_error_fvar_undefined
  4923 0000280C 803804                  	cmp byte [rax], T_closure
  4924 0000280F 0F85CD370100            	jne L_error_non_closure
  4925 00002815 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4926 00002818 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  4927 0000281C 4C8B4D00                	mov r9, qword [rbp]
  4928 00002820 4150                    	push r8
  4929 00002822 4151                    	push r9
  4930 00002824 41BA05000000            	mov r10, 1 + 4
  4931 0000282A 4C8B5D18                	mov r11, COUNT
  4932 0000282E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  4933 00002833 4C8D65F8                	lea r12, [rbp - 8]
  4934                                  .L_tc_recycle_frame_loop_001d:
  4935 00002837 4983FA00                	cmp r10, 0
  4936 0000283B 7414                    	je .L_tc_recycle_frame_done_001d
  4937 0000283D 4D8B2C24                	mov r13, qword [r12]
  4938 00002841 4D892B                  	mov qword [r11], r13
  4939 00002844 49FFCA                  	dec r10
  4940 00002847 4983EB08                	sub r11, 8
  4941 0000284B 4983EC08                	sub r12, 8
  4942 0000284F EBE6                    	jmp .L_tc_recycle_frame_loop_001d
  4943                                  .L_tc_recycle_frame_done_001d:
  4944 00002851 498D6308                	lea rsp, [r11 + 8]
  4945 00002855 5D                      	pop rbp
  4946 00002856 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4947 00002859 EB0A                    	jmp .L_if_end_0001
  4948                                  .L_if_else_0001:
  4949 0000285B 48B8-                   	mov rax, L_constants + 2
  4949 0000285D [0200000000000000] 
  4950                                  .L_if_end_0001:
  4951                                  .L_or_end_0001:
  4952 00002865 C9                      	leave
  4953 00002866 C21800                  	ret AND_KILL_FRAME(1)
  4954                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4955 00002869 48890425[62140000]      	mov qword [free_var_97], rax
  4956 00002871 48B8-                   	mov rax, sob_void
  4956 00002873 [0000000000000000] 
  4957                                  
  4958 0000287B 4889C7                  	mov rdi, rax
  4959 0000287E E85D3A0100              	call print_sexpr_if_not_void
  4960 00002883 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4961 00002888 E8FE370100              	call malloc
  4962 0000288D 50                      	push rax
  4963 0000288E BF00000000              	mov rdi, 8 * 0	; new rib
  4964 00002893 E8F3370100              	call malloc
  4965 00002898 50                      	push rax
  4966 00002899 BF08000000              	mov rdi, 8 * 1	; extended env
  4967 0000289E E8E8370100              	call malloc
  4968 000028A3 488B7D10                	mov rdi, ENV
  4969 000028A7 BE00000000              	mov rsi, 0
  4970 000028AC BA01000000              	mov rdx, 1
  4971                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  4972 000028B1 4883FE00                	cmp rsi, 0
  4973 000028B5 7410                    	je .L_lambda_opt_env_end_0001
  4974 000028B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4975 000028BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4976 000028BF 48FFC6                  	inc rsi
  4977 000028C2 48FFC2                  	inc rdx
  4978 000028C5 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  4979                                  .L_lambda_opt_env_end_0001:
  4980 000028C7 5B                      	pop rbx
  4981 000028C8 BE00000000              	mov rsi, 0
  4982                                  .L_lambda_opt_params_loop_0001:	; copy params
  4983 000028CD 4883FE00                	cmp rsi, 0
  4984 000028D1 740E                    	je .L_lambda_opt_params_end_0001
  4985 000028D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4986 000028D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4987 000028DC 48FFC6                  	inc rsi
  4988 000028DF EBEC                    	jmp .L_lambda_opt_params_loop_0001
  4989                                  .L_lambda_opt_params_end_0001:
  4990 000028E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4991 000028E4 4889C3                  	mov rbx, rax
  4992 000028E7 58                      	pop rax
  4993 000028E8 C60004                  	mov byte [rax], T_closure
  4994 000028EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4995 000028EF 48C74009[FC280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  4996 000028F7 E90A010000              	jmp .L_lambda_opt_end_0001
  4997                                  .L_lambda_opt_code_0001:
  4998 000028FC 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  4999 00002901 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  5000 00002905 7407                    	je .L_lambda_opt_arity_check_exact_0001	; Jump if arity matches
  5001 00002907 7F4C                    	jg .L_lambda_opt_arity_check_more_0001	; Jump if more arguments passed
  5002 00002909 E94A370100              	jmp L_error_incorrect_arity_opt
  5003                                  .L_lambda_opt_arity_check_exact_0001:
  5004 0000290E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5005 00002911 4983C603                	add r14, 3 ; add 3 first stack values
  5006 00002915 41BF00000000            	mov r15, 0 ; r15 = index
  5007 0000291B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5008 0000291F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5009 00002927 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  5010                                  .L_lambda_opt_stack_shrink_loop_0001:
  5011 00002929 4983FE00                	cmp r14, 0
  5012 0000292D 7E11                    	jle .L_make_lambda_opt_exact_finish_0001
  5013 0000292F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5014 00002934 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5015 00002938 49FFCE                  	dec r14 ; next loop value
  5016 0000293B 49FFC7                  	inc r15 ; update i
  5017 0000293E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  5018                                  .L_make_lambda_opt_exact_finish_0001:
  5019 00002940 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5020 00002948 49FFC2                  	inc r10
  5021 0000294B 4C89542410              	mov qword [rsp + 8 * 2], r10
  5022 00002950 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0001
  5023                                  .L_lambda_opt_arity_check_more_0001:
  5024 00002955 4D89D6                  	mov r14, r10 ; r14 = num args
  5025 00002958 4D89D7                  	mov r15, r10 ; r15 = num args
  5026 0000295B 41B900000000            	mov r9, 0; r9 = number of params 
  5027 00002961 4D29CE                  	sub r14, r9 ; r14 = extra args
  5028 00002964 4D01F1                  	add r9, r14 ; r9 = num args
  5029 00002967 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5029 00002969 [0100000000000000] 
  5030 00002971 EB00                    	jmp .L_make_lambda_opt_arg_list_0001
  5031                                  .L_make_lambda_opt_arg_list_0001:
  5032 00002973 4983FE00                	cmp r14, 0
  5033 00002977 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0001
  5034 00002979 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  5035 0000297E 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  5036 00002981 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5037 00002987 E8FF360100              	call malloc                         ; Allocate memory, result in rax
  5038 0000298C C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5039 0000298F 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  5040 00002993 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5041 00002997 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5042 0000299A 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  5043 0000299D 49FFC9                  	dec r9                              ; args index minus 1
  5044 000029A0 49FFCE                  	dec r14                             ; next iteration
  5045 000029A3 EBCE                    	jmp .L_make_lambda_opt_arg_list_0001
  5046                                  .L_make_lambda_opt_stack_fixed_0001:
  5047 000029A5 4D89FE                  	mov r14, r15 ; r14 = num args
  5048 000029A8 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5049 000029AB 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5050 000029AF 41BA00000000            	mov r10, 0; r10 = num of params
  5051 000029B5 4D29D6                  	sub r14, r10 ; r14 = extra args
  5052 000029B8 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5053 000029BB 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5054 000029BE 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5055 000029C3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0001
  5056                                  .L_lambda_opt_stack_shrink_loop_more_0001:
  5057 000029C5 4983F800                	cmp r8, 0
  5058 000029C9 7E15                    	jle .L_make_lambda_opt_more_finish_0001
  5059 000029CB 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5060 000029CF 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5061 000029D3 4D8D26                  	lea r12, [r14]
  5062 000029D6 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5063 000029DB 49FFC8                  	dec r8 ; next iteration
  5064 000029DE EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0001
  5065                                  .L_make_lambda_opt_more_finish_0001:
  5066 000029E0 4D89F8                  	mov r8, r15 ; num of args
  5067 000029E3 41BA00000000            	mov r10, 0
  5068 000029E9 4D29D0                  	sub r8, r10 ; num of new args
  5069 000029EC 49FFC0                  	inc r8
  5070 000029EF 4C89442420              	mov qword [rsp + 8 * 4], r8
  5071 000029F4 4883C410                	add rsp, 8 * 2  ; 
  5072 000029F8 EB00                    	jmp .L_lambda_opt_stack_adjusted_0001
  5073                                  .L_lambda_opt_stack_adjusted_0001:
  5074 000029FA C8000000                	enter 0, 0
  5075 000029FE 488B4520                	mov rax, PARAM(0)	; param args
  5076 00002A02 C9                      	leave
  5077 00002A03 C21000                  	ret AND_KILL_FRAME(0)
  5078                                  .L_lambda_opt_end_0001:	; new closure is in rax
  5079 00002A06 48890425[1E140000]      	mov qword [free_var_93], rax
  5080 00002A0E 48B8-                   	mov rax, sob_void
  5080 00002A10 [0000000000000000] 
  5081                                  
  5082 00002A18 4889C7                  	mov rdi, rax
  5083 00002A1B E8C0380100              	call print_sexpr_if_not_void
  5084 00002A20 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5085 00002A25 E861360100              	call malloc
  5086 00002A2A 50                      	push rax
  5087 00002A2B BF00000000              	mov rdi, 8 * 0	; new rib
  5088 00002A30 E856360100              	call malloc
  5089 00002A35 50                      	push rax
  5090 00002A36 BF08000000              	mov rdi, 8 * 1	; extended env
  5091 00002A3B E84B360100              	call malloc
  5092 00002A40 488B7D10                	mov rdi, ENV
  5093 00002A44 BE00000000              	mov rsi, 0
  5094 00002A49 BA01000000              	mov rdx, 1
  5095                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  5096 00002A4E 4883FE00                	cmp rsi, 0
  5097 00002A52 7410                    	je .L_lambda_simple_env_end_001e
  5098 00002A54 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5099 00002A58 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5100 00002A5C 48FFC6                  	inc rsi
  5101 00002A5F 48FFC2                  	inc rdx
  5102 00002A62 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  5103                                  .L_lambda_simple_env_end_001e:
  5104 00002A64 5B                      	pop rbx
  5105 00002A65 BE00000000              	mov rsi, 0
  5106                                  .L_lambda_simple_params_loop_001e:	; copy params
  5107 00002A6A 4883FE00                	cmp rsi, 0
  5108 00002A6E 740E                    	je .L_lambda_simple_params_end_001e
  5109 00002A70 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5110 00002A75 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5111 00002A79 48FFC6                  	inc rsi
  5112 00002A7C EBEC                    	jmp .L_lambda_simple_params_loop_001e
  5113                                  .L_lambda_simple_params_end_001e:
  5114 00002A7E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5115 00002A81 4889C3                  	mov rbx, rax
  5116 00002A84 58                      	pop rax
  5117 00002A85 C60004                  	mov byte [rax], T_closure
  5118 00002A88 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5119 00002A8C 48C74009[962A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  5120 00002A94 EB3D                    	jmp .L_lambda_simple_end_001e
  5121                                  .L_lambda_simple_code_001e:	; lambda-simple body
  5122 00002A96 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5123 00002A9C 740B                    	je .L_lambda_simple_arity_check_ok_001e
  5124 00002A9E FF742410                	push qword [rsp + 8 * 2]
  5125 00002AA2 6A01                    	push 1
  5126 00002AA4 E99B350100              	jmp L_error_incorrect_arity_simple
  5127                                  .L_lambda_simple_arity_check_ok_001e:
  5128 00002AA9 C8000000                	enter 0, 0
  5129 00002AAD 488B4520                	mov rax, PARAM(0)	; param x
  5130 00002AB1 483D[02000000]          	cmp rax, sob_boolean_false
  5131 00002AB7 740C                    	je .L_if_else_0002
  5132 00002AB9 48B8-                   	mov rax, L_constants + 2
  5132 00002ABB [0200000000000000] 
  5133 00002AC3 EB0A                    	jmp .L_if_end_0002
  5134                                  .L_if_else_0002:
  5135 00002AC5 48B8-                   	mov rax, L_constants + 3
  5135 00002AC7 [0300000000000000] 
  5136                                  .L_if_end_0002:
  5137 00002ACF C9                      	leave
  5138 00002AD0 C21800                  	ret AND_KILL_FRAME(1)
  5139                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5140 00002AD3 48890425[0C150000]      	mov qword [free_var_107], rax
  5141 00002ADB 48B8-                   	mov rax, sob_void
  5141 00002ADD [0000000000000000] 
  5142                                  
  5143 00002AE5 4889C7                  	mov rdi, rax
  5144 00002AE8 E8F3370100              	call print_sexpr_if_not_void
  5145 00002AED BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5146 00002AF2 E894350100              	call malloc
  5147 00002AF7 50                      	push rax
  5148 00002AF8 BF00000000              	mov rdi, 8 * 0	; new rib
  5149 00002AFD E889350100              	call malloc
  5150 00002B02 50                      	push rax
  5151 00002B03 BF08000000              	mov rdi, 8 * 1	; extended env
  5152 00002B08 E87E350100              	call malloc
  5153 00002B0D 488B7D10                	mov rdi, ENV
  5154 00002B11 BE00000000              	mov rsi, 0
  5155 00002B16 BA01000000              	mov rdx, 1
  5156                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5157 00002B1B 4883FE00                	cmp rsi, 0
  5158 00002B1F 7410                    	je .L_lambda_simple_env_end_001f
  5159 00002B21 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5160 00002B25 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5161 00002B29 48FFC6                  	inc rsi
  5162 00002B2C 48FFC2                  	inc rdx
  5163 00002B2F EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5164                                  .L_lambda_simple_env_end_001f:
  5165 00002B31 5B                      	pop rbx
  5166 00002B32 BE00000000              	mov rsi, 0
  5167                                  .L_lambda_simple_params_loop_001f:	; copy params
  5168 00002B37 4883FE00                	cmp rsi, 0
  5169 00002B3B 740E                    	je .L_lambda_simple_params_end_001f
  5170 00002B3D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5171 00002B42 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5172 00002B46 48FFC6                  	inc rsi
  5173 00002B49 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5174                                  .L_lambda_simple_params_end_001f:
  5175 00002B4B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5176 00002B4E 4889C3                  	mov rbx, rax
  5177 00002B51 58                      	pop rax
  5178 00002B52 C60004                  	mov byte [rax], T_closure
  5179 00002B55 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5180 00002B59 48C74009[662B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5181 00002B61 E9AF000000              	jmp .L_lambda_simple_end_001f
  5182                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5183 00002B66 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5184 00002B6C 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5185 00002B6E FF742410                	push qword [rsp + 8 * 2]
  5186 00002B72 6A01                    	push 1
  5187 00002B74 E9CB340100              	jmp L_error_incorrect_arity_simple
  5188                                  .L_lambda_simple_arity_check_ok_001f:
  5189 00002B79 C8000000                	enter 0, 0
  5190                                  	; preparing a non-tail-call
  5191 00002B7D 488B4520                	mov rax, PARAM(0)	; param q
  5192 00002B81 50                      	push rax
  5193 00002B82 6A01                    	push 1	; arg count
  5194 00002B84 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
  5195 00002B8C 803805                  	cmp byte [rax], T_undefined
  5196 00002B8F 0F84C9330100            	je L_error_fvar_undefined
  5197 00002B95 803804                  	cmp byte [rax], T_closure
  5198 00002B98 0F8544340100            	jne L_error_non_closure
  5199 00002B9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5200 00002BA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5201 00002BA4 483D[02000000]          	cmp rax, sob_boolean_false
  5202 00002BAA 7565                    	jne .L_or_end_0002
  5203                                  
  5204                                  	; Setting up for a tail-call
  5205 00002BAC 488B4520                	mov rax, PARAM(0)	; param q
  5206 00002BB0 50                      	push rax
  5207 00002BB1 6A01                    	push 1
  5208 00002BB3 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
  5209 00002BBB 803805                  	cmp byte [rax], T_undefined
  5210 00002BBE 0F849A330100            	je L_error_fvar_undefined
  5211 00002BC4 803804                  	cmp byte [rax], T_closure
  5212 00002BC7 0F8515340100            	jne L_error_non_closure
  5213 00002BCD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5214 00002BD0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  5215 00002BD4 4C8B4D00                	mov r9, qword [rbp]
  5216 00002BD8 4150                    	push r8
  5217 00002BDA 4151                    	push r9
  5218 00002BDC 41BA05000000            	mov r10, 1 + 4
  5219 00002BE2 4C8B5D18                	mov r11, COUNT
  5220 00002BE6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  5221 00002BEB 4C8D65F8                	lea r12, [rbp - 8]
  5222                                  .L_tc_recycle_frame_loop_001e:
  5223 00002BEF 4983FA00                	cmp r10, 0
  5224 00002BF3 7414                    	je .L_tc_recycle_frame_done_001e
  5225 00002BF5 4D8B2C24                	mov r13, qword [r12]
  5226 00002BF9 4D892B                  	mov qword [r11], r13
  5227 00002BFC 49FFCA                  	dec r10
  5228 00002BFF 4983EB08                	sub r11, 8
  5229 00002C03 4983EC08                	sub r12, 8
  5230 00002C07 EBE6                    	jmp .L_tc_recycle_frame_loop_001e
  5231                                  .L_tc_recycle_frame_done_001e:
  5232 00002C09 498D6308                	lea rsp, [r11 + 8]
  5233 00002C0D 5D                      	pop rbp
  5234 00002C0E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5235                                  .L_or_end_0002:
  5236 00002C11 C9                      	leave
  5237 00002C12 C21800                  	ret AND_KILL_FRAME(1)
  5238                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5239 00002C15 48890425[94150000]      	mov qword [free_var_115], rax
  5240 00002C1D 48B8-                   	mov rax, sob_void
  5240 00002C1F [0000000000000000] 
  5241                                  
  5242 00002C27 4889C7                  	mov rdi, rax
  5243 00002C2A E8B1360100              	call print_sexpr_if_not_void
  5244                                  	; preparing a non-tail-call
  5245 00002C2F 48B8-                   	mov rax, L_constants + 1993
  5245 00002C31 [C907000000000000] 
  5246 00002C39 50                      	push rax
  5247 00002C3A 6A01                    	push 1	; arg count
  5248 00002C3C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5249 00002C41 E845340100              	call malloc
  5250 00002C46 50                      	push rax
  5251 00002C47 BF00000000              	mov rdi, 8 * 0	; new rib
  5252 00002C4C E83A340100              	call malloc
  5253 00002C51 50                      	push rax
  5254 00002C52 BF08000000              	mov rdi, 8 * 1	; extended env
  5255 00002C57 E82F340100              	call malloc
  5256 00002C5C 488B7D10                	mov rdi, ENV
  5257 00002C60 BE00000000              	mov rsi, 0
  5258 00002C65 BA01000000              	mov rdx, 1
  5259                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5260 00002C6A 4883FE00                	cmp rsi, 0
  5261 00002C6E 7410                    	je .L_lambda_simple_env_end_0020
  5262 00002C70 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5263 00002C74 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5264 00002C78 48FFC6                  	inc rsi
  5265 00002C7B 48FFC2                  	inc rdx
  5266 00002C7E EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5267                                  .L_lambda_simple_env_end_0020:
  5268 00002C80 5B                      	pop rbx
  5269 00002C81 BE00000000              	mov rsi, 0
  5270                                  .L_lambda_simple_params_loop_0020:	; copy params
  5271 00002C86 4883FE00                	cmp rsi, 0
  5272 00002C8A 740E                    	je .L_lambda_simple_params_end_0020
  5273 00002C8C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5274 00002C91 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5275 00002C95 48FFC6                  	inc rsi
  5276 00002C98 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5277                                  .L_lambda_simple_params_end_0020:
  5278 00002C9A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5279 00002C9D 4889C3                  	mov rbx, rax
  5280 00002CA0 58                      	pop rax
  5281 00002CA1 C60004                  	mov byte [rax], T_closure
  5282 00002CA4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5283 00002CA8 48C74009[B52C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5284 00002CB0 E9E1030000              	jmp .L_lambda_simple_end_0020
  5285                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5286 00002CB5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5287 00002CBB 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5288 00002CBD FF742410                	push qword [rsp + 8 * 2]
  5289 00002CC1 6A01                    	push 1
  5290 00002CC3 E97C330100              	jmp L_error_incorrect_arity_simple
  5291                                  .L_lambda_simple_arity_check_ok_0020:
  5292 00002CC8 C8000000                	enter 0, 0
  5293 00002CCC BF08000000              	mov rdi, 8 * 1
  5294 00002CD1 E8B5330100              	call malloc
  5295 00002CD6 488B5D20                	mov rbx, PARAM(0)
  5296 00002CDA 488918                  	mov qword [rax], rbx
  5297 00002CDD 48894520                	mov PARAM(0), rax
  5298 00002CE1 48B8-                   	mov rax, sob_void
  5298 00002CE3 [0000000000000000] 
  5299                                  
  5300                                  	; preparing a non-tail-call
  5301 00002CEB 6A00                    	push 0	; arg count
  5302 00002CED BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5303 00002CF2 E894330100              	call malloc
  5304 00002CF7 50                      	push rax
  5305 00002CF8 BF08000000              	mov rdi, 8 * 1	; new rib
  5306 00002CFD E889330100              	call malloc
  5307 00002D02 50                      	push rax
  5308 00002D03 BF10000000              	mov rdi, 8 * 2	; extended env
  5309 00002D08 E87E330100              	call malloc
  5310 00002D0D 488B7D10                	mov rdi, ENV
  5311 00002D11 BE00000000              	mov rsi, 0
  5312 00002D16 BA01000000              	mov rdx, 1
  5313                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5314 00002D1B 4883FE01                	cmp rsi, 1
  5315 00002D1F 7410                    	je .L_lambda_simple_env_end_0021
  5316 00002D21 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5317 00002D25 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5318 00002D29 48FFC6                  	inc rsi
  5319 00002D2C 48FFC2                  	inc rdx
  5320 00002D2F EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5321                                  .L_lambda_simple_env_end_0021:
  5322 00002D31 5B                      	pop rbx
  5323 00002D32 BE00000000              	mov rsi, 0
  5324                                  .L_lambda_simple_params_loop_0021:	; copy params
  5325 00002D37 4883FE01                	cmp rsi, 1
  5326 00002D3B 740E                    	je .L_lambda_simple_params_end_0021
  5327 00002D3D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5328 00002D42 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5329 00002D46 48FFC6                  	inc rsi
  5330 00002D49 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5331                                  .L_lambda_simple_params_end_0021:
  5332 00002D4B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5333 00002D4E 4889C3                  	mov rbx, rax
  5334 00002D51 58                      	pop rax
  5335 00002D52 C60004                  	mov byte [rax], T_closure
  5336 00002D55 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5337 00002D59 48C74009[662D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5338 00002D61 E927010000              	jmp .L_lambda_simple_end_0021
  5339                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5340 00002D66 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5341 00002D6C 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5342 00002D6E FF742410                	push qword [rsp + 8 * 2]
  5343 00002D72 6A02                    	push 2
  5344 00002D74 E9CB320100              	jmp L_error_incorrect_arity_simple
  5345                                  .L_lambda_simple_arity_check_ok_0021:
  5346 00002D79 C8000000                	enter 0, 0
  5347                                  	; preparing a non-tail-call
  5348 00002D7D 488B4528                	mov rax, PARAM(1)	; param s
  5349 00002D81 50                      	push rax
  5350 00002D82 6A01                    	push 1	; arg count
  5351 00002D84 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  5352 00002D8C 803805                  	cmp byte [rax], T_undefined
  5353 00002D8F 0F84C9310100            	je L_error_fvar_undefined
  5354 00002D95 803804                  	cmp byte [rax], T_closure
  5355 00002D98 0F8544320100            	jne L_error_non_closure
  5356 00002D9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5357 00002DA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5358 00002DA4 483D[02000000]          	cmp rax, sob_boolean_false
  5359 00002DAA 7409                    	je .L_if_else_0003
  5360 00002DAC 488B4520                	mov rax, PARAM(0)	; param a
  5361 00002DB0 E9D4000000              	jmp .L_if_end_0003
  5362                                  .L_if_else_0003:
  5363                                  	; Setting up for a tail-call
  5364 00002DB5 488B4520                	mov rax, PARAM(0)	; param a
  5365 00002DB9 50                      	push rax
  5366                                  	; preparing a non-tail-call
  5367                                  	; preparing a non-tail-call
  5368 00002DBA 488B4528                	mov rax, PARAM(1)	; param s
  5369 00002DBE 50                      	push rax
  5370 00002DBF 6A01                    	push 1	; arg count
  5371 00002DC1 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  5372 00002DC9 803805                  	cmp byte [rax], T_undefined
  5373 00002DCC 0F848C310100            	je L_error_fvar_undefined
  5374 00002DD2 803804                  	cmp byte [rax], T_closure
  5375 00002DD5 0F8507320100            	jne L_error_non_closure
  5376 00002DDB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5377 00002DDE FF5009                  	call SOB_CLOSURE_CODE(rax)
  5378 00002DE1 50                      	push rax
  5379                                  	; preparing a non-tail-call
  5380 00002DE2 488B4528                	mov rax, PARAM(1)	; param s
  5381 00002DE6 50                      	push rax
  5382 00002DE7 6A01                    	push 1	; arg count
  5383 00002DE9 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  5384 00002DF1 803805                  	cmp byte [rax], T_undefined
  5385 00002DF4 0F8464310100            	je L_error_fvar_undefined
  5386 00002DFA 803804                  	cmp byte [rax], T_closure
  5387 00002DFD 0F85DF310100            	jne L_error_non_closure
  5388 00002E03 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5389 00002E06 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5390 00002E09 50                      	push rax
  5391 00002E0A 6A02                    	push 2	; arg count
  5392 00002E0C 488B4510                	mov rax, ENV
  5393 00002E10 488B00                  	mov rax, qword [rax + 8 * 0]
  5394 00002E13 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5395 00002E16 488B00                  	mov rax, qword [rax]
  5396 00002E19 803804                  	cmp byte [rax], T_closure
  5397 00002E1C 0F85C0310100            	jne L_error_non_closure
  5398 00002E22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5399 00002E25 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5400 00002E28 50                      	push rax
  5401 00002E29 6A02                    	push 2
  5402 00002E2B 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  5403 00002E33 803805                  	cmp byte [rax], T_undefined
  5404 00002E36 0F8422310100            	je L_error_fvar_undefined
  5405 00002E3C 803804                  	cmp byte [rax], T_closure
  5406 00002E3F 0F859D310100            	jne L_error_non_closure
  5407 00002E45 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5408 00002E48 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  5409 00002E4C 4C8B4D00                	mov r9, qword [rbp]
  5410 00002E50 4150                    	push r8
  5411 00002E52 4151                    	push r9
  5412 00002E54 41BA06000000            	mov r10, 2 + 4
  5413 00002E5A 4C8B5D18                	mov r11, COUNT
  5414 00002E5E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  5415 00002E63 4C8D65F8                	lea r12, [rbp - 8]
  5416                                  .L_tc_recycle_frame_loop_001f:
  5417 00002E67 4983FA00                	cmp r10, 0
  5418 00002E6B 7414                    	je .L_tc_recycle_frame_done_001f
  5419 00002E6D 4D8B2C24                	mov r13, qword [r12]
  5420 00002E71 4D892B                  	mov qword [r11], r13
  5421 00002E74 49FFCA                  	dec r10
  5422 00002E77 4983EB08                	sub r11, 8
  5423 00002E7B 4983EC08                	sub r12, 8
  5424 00002E7F EBE6                    	jmp .L_tc_recycle_frame_loop_001f
  5425                                  .L_tc_recycle_frame_done_001f:
  5426 00002E81 498D6308                	lea rsp, [r11 + 8]
  5427 00002E85 5D                      	pop rbp
  5428 00002E86 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5429                                  .L_if_end_0003:
  5430 00002E89 C9                      	leave
  5431 00002E8A C22000                  	ret AND_KILL_FRAME(2)
  5432                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5433 00002E8D 803804                  	cmp byte [rax], T_closure
  5434 00002E90 0F854C310100            	jne L_error_non_closure
  5435 00002E96 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5436 00002E99 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5437 00002E9C 50                      	push rax
  5438 00002E9D 488B4520                	mov rax, PARAM(0)	; param run
  5439 00002EA1 8F00                    	pop qword [rax]
  5440 00002EA3 48B8-                   	mov rax, sob_void
  5440 00002EA5 [0000000000000000] 
  5441                                  
  5442 00002EAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5443 00002EB2 E8D4310100              	call malloc
  5444 00002EB7 50                      	push rax
  5445 00002EB8 BF08000000              	mov rdi, 8 * 1	; new rib
  5446 00002EBD E8C9310100              	call malloc
  5447 00002EC2 50                      	push rax
  5448 00002EC3 BF10000000              	mov rdi, 8 * 2	; extended env
  5449 00002EC8 E8BE310100              	call malloc
  5450 00002ECD 488B7D10                	mov rdi, ENV
  5451 00002ED1 BE00000000              	mov rsi, 0
  5452 00002ED6 BA01000000              	mov rdx, 1
  5453                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  5454 00002EDB 4883FE01                	cmp rsi, 1
  5455 00002EDF 7410                    	je .L_lambda_opt_env_end_0002
  5456 00002EE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5457 00002EE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5458 00002EE9 48FFC6                  	inc rsi
  5459 00002EEC 48FFC2                  	inc rdx
  5460 00002EEF EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5461                                  .L_lambda_opt_env_end_0002:
  5462 00002EF1 5B                      	pop rbx
  5463 00002EF2 BE00000000              	mov rsi, 0
  5464                                  .L_lambda_opt_params_loop_0002:	; copy params
  5465 00002EF7 4883FE01                	cmp rsi, 1
  5466 00002EFB 740E                    	je .L_lambda_opt_params_end_0002
  5467 00002EFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5468 00002F02 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5469 00002F06 48FFC6                  	inc rsi
  5470 00002F09 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5471                                  .L_lambda_opt_params_end_0002:
  5472 00002F0B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5473 00002F0E 4889C3                  	mov rbx, rax
  5474 00002F11 58                      	pop rax
  5475 00002F12 C60004                  	mov byte [rax], T_closure
  5476 00002F15 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5477 00002F19 48C74009[262F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5478 00002F21 E96C010000              	jmp .L_lambda_opt_end_0002
  5479                                  .L_lambda_opt_code_0002:
  5480 00002F26 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5481 00002F2B 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5482 00002F2F 7407                    	je .L_lambda_opt_arity_check_exact_0002	; Jump if arity matches
  5483 00002F31 7F4C                    	jg .L_lambda_opt_arity_check_more_0002	; Jump if more arguments passed
  5484 00002F33 E920310100              	jmp L_error_incorrect_arity_opt
  5485                                  .L_lambda_opt_arity_check_exact_0002:
  5486 00002F38 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5487 00002F3B 4983C603                	add r14, 3 ; add 3 first stack values
  5488 00002F3F 41BF00000000            	mov r15, 0 ; r15 = index
  5489 00002F45 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5490 00002F49 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5491 00002F51 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5492                                  .L_lambda_opt_stack_shrink_loop_0002:
  5493 00002F53 4983FE00                	cmp r14, 0
  5494 00002F57 7E11                    	jle .L_make_lambda_opt_exact_finish_0002
  5495 00002F59 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5496 00002F5E 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5497 00002F62 49FFCE                  	dec r14 ; next loop value
  5498 00002F65 49FFC7                  	inc r15 ; update i
  5499 00002F68 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5500                                  .L_make_lambda_opt_exact_finish_0002:
  5501 00002F6A 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5502 00002F72 49FFC2                  	inc r10
  5503 00002F75 4C89542410              	mov qword [rsp + 8 * 2], r10
  5504 00002F7A E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0002
  5505                                  .L_lambda_opt_arity_check_more_0002:
  5506 00002F7F 4D89D6                  	mov r14, r10 ; r14 = num args
  5507 00002F82 4D89D7                  	mov r15, r10 ; r15 = num args
  5508 00002F85 41B901000000            	mov r9, 1; r9 = number of params 
  5509 00002F8B 4D29CE                  	sub r14, r9 ; r14 = extra args
  5510 00002F8E 4D01F1                  	add r9, r14 ; r9 = num args
  5511 00002F91 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5511 00002F93 [0100000000000000] 
  5512 00002F9B EB00                    	jmp .L_make_lambda_opt_arg_list_0002
  5513                                  .L_make_lambda_opt_arg_list_0002:
  5514 00002F9D 4983FE00                	cmp r14, 0
  5515 00002FA1 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0002
  5516 00002FA3 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  5517 00002FA8 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  5518 00002FAB 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5519 00002FB1 E8D5300100              	call malloc                         ; Allocate memory, result in rax
  5520 00002FB6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5521 00002FB9 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  5522 00002FBD 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5523 00002FC1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5524 00002FC4 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  5525 00002FC7 49FFC9                  	dec r9                              ; args index minus 1
  5526 00002FCA 49FFCE                  	dec r14                             ; next iteration
  5527 00002FCD EBCE                    	jmp .L_make_lambda_opt_arg_list_0002
  5528                                  .L_make_lambda_opt_stack_fixed_0002:
  5529 00002FCF 4D89FE                  	mov r14, r15 ; r14 = num args
  5530 00002FD2 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5531 00002FD5 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5532 00002FD9 41BA01000000            	mov r10, 1; r10 = num of params
  5533 00002FDF 4D29D6                  	sub r14, r10 ; r14 = extra args
  5534 00002FE2 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5535 00002FE5 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5536 00002FE8 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5537 00002FED EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0002
  5538                                  .L_lambda_opt_stack_shrink_loop_more_0002:
  5539 00002FEF 4983F800                	cmp r8, 0
  5540 00002FF3 7E15                    	jle .L_make_lambda_opt_more_finish_0002
  5541 00002FF5 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5542 00002FF9 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5543 00002FFD 4D8D26                  	lea r12, [r14]
  5544 00003000 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5545 00003005 49FFC8                  	dec r8 ; next iteration
  5546 00003008 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0002
  5547                                  .L_make_lambda_opt_more_finish_0002:
  5548 0000300A 4D89F8                  	mov r8, r15 ; num of args
  5549 0000300D 41BA01000000            	mov r10, 1
  5550 00003013 4D29D0                  	sub r8, r10 ; num of new args
  5551 00003016 49FFC0                  	inc r8
  5552 00003019 4C89442420              	mov qword [rsp + 8 * 4], r8
  5553 0000301E 4883C410                	add rsp, 8 * 2  ; 
  5554 00003022 EB00                    	jmp .L_lambda_opt_stack_adjusted_0002
  5555                                  .L_lambda_opt_stack_adjusted_0002:
  5556 00003024 C8000000                	enter 0, 0
  5557                                  	; Setting up for a tail-call
  5558 00003028 488B4520                	mov rax, PARAM(0)	; param a
  5559 0000302C 50                      	push rax
  5560 0000302D 488B4528                	mov rax, PARAM(1)	; param s
  5561 00003031 50                      	push rax
  5562 00003032 6A02                    	push 2
  5563 00003034 488B4510                	mov rax, ENV
  5564 00003038 488B00                  	mov rax, qword [rax + 8 * 0]
  5565 0000303B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5566 0000303E 488B00                  	mov rax, qword [rax]
  5567 00003041 803804                  	cmp byte [rax], T_closure
  5568 00003044 0F85982F0100            	jne L_error_non_closure
  5569 0000304A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5570 0000304D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  5571 00003051 4C8B4D00                	mov r9, qword [rbp]
  5572 00003055 4150                    	push r8
  5573 00003057 4151                    	push r9
  5574 00003059 41BA06000000            	mov r10, 2 + 4
  5575 0000305F 4C8B5D18                	mov r11, COUNT
  5576 00003063 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  5577 00003068 4C8D65F8                	lea r12, [rbp - 8]
  5578                                  .L_tc_recycle_frame_loop_0020:
  5579 0000306C 4983FA00                	cmp r10, 0
  5580 00003070 7414                    	je .L_tc_recycle_frame_done_0020
  5581 00003072 4D8B2C24                	mov r13, qword [r12]
  5582 00003076 4D892B                  	mov qword [r11], r13
  5583 00003079 49FFCA                  	dec r10
  5584 0000307C 4983EB08                	sub r11, 8
  5585 00003080 4983EC08                	sub r12, 8
  5586 00003084 EBE6                    	jmp .L_tc_recycle_frame_loop_0020
  5587                                  .L_tc_recycle_frame_done_0020:
  5588 00003086 498D6308                	lea rsp, [r11 + 8]
  5589 0000308A 5D                      	pop rbp
  5590 0000308B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5591 0000308E C9                      	leave
  5592 0000308F C21800                  	ret AND_KILL_FRAME(1)
  5593                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5594 00003092 C9                      	leave
  5595 00003093 C21800                  	ret AND_KILL_FRAME(1)
  5596                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5597 00003096 803804                  	cmp byte [rax], T_closure
  5598 00003099 0F85432F0100            	jne L_error_non_closure
  5599 0000309F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5600 000030A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5601 000030A5 48890425[2F140000]      	mov qword [free_var_94], rax
  5602 000030AD 48B8-                   	mov rax, sob_void
  5602 000030AF [0000000000000000] 
  5603                                  
  5604 000030B7 4889C7                  	mov rdi, rax
  5605 000030BA E821320100              	call print_sexpr_if_not_void
  5606                                  	; preparing a non-tail-call
  5607 000030BF 48B8-                   	mov rax, L_constants + 1993
  5607 000030C1 [C907000000000000] 
  5608 000030C9 50                      	push rax
  5609 000030CA 6A01                    	push 1	; arg count
  5610 000030CC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5611 000030D1 E8B52F0100              	call malloc
  5612 000030D6 50                      	push rax
  5613 000030D7 BF00000000              	mov rdi, 8 * 0	; new rib
  5614 000030DC E8AA2F0100              	call malloc
  5615 000030E1 50                      	push rax
  5616 000030E2 BF08000000              	mov rdi, 8 * 1	; extended env
  5617 000030E7 E89F2F0100              	call malloc
  5618 000030EC 488B7D10                	mov rdi, ENV
  5619 000030F0 BE00000000              	mov rsi, 0
  5620 000030F5 BA01000000              	mov rdx, 1
  5621                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5622 000030FA 4883FE00                	cmp rsi, 0
  5623 000030FE 7410                    	je .L_lambda_simple_env_end_0022
  5624 00003100 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5625 00003104 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5626 00003108 48FFC6                  	inc rsi
  5627 0000310B 48FFC2                  	inc rdx
  5628 0000310E EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5629                                  .L_lambda_simple_env_end_0022:
  5630 00003110 5B                      	pop rbx
  5631 00003111 BE00000000              	mov rsi, 0
  5632                                  .L_lambda_simple_params_loop_0022:	; copy params
  5633 00003116 4883FE00                	cmp rsi, 0
  5634 0000311A 740E                    	je .L_lambda_simple_params_end_0022
  5635 0000311C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5636 00003121 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5637 00003125 48FFC6                  	inc rsi
  5638 00003128 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5639                                  .L_lambda_simple_params_end_0022:
  5640 0000312A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5641 0000312D 4889C3                  	mov rbx, rax
  5642 00003130 58                      	pop rax
  5643 00003131 C60004                  	mov byte [rax], T_closure
  5644 00003134 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5645 00003138 48C74009[45310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5646 00003140 E950040000              	jmp .L_lambda_simple_end_0022
  5647                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5648 00003145 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5649 0000314B 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5650 0000314D FF742410                	push qword [rsp + 8 * 2]
  5651 00003151 6A01                    	push 1
  5652 00003153 E9EC2E0100              	jmp L_error_incorrect_arity_simple
  5653                                  .L_lambda_simple_arity_check_ok_0022:
  5654 00003158 C8000000                	enter 0, 0
  5655 0000315C BF08000000              	mov rdi, 8 * 1
  5656 00003161 E8252F0100              	call malloc
  5657 00003166 488B5D20                	mov rbx, PARAM(0)
  5658 0000316A 488918                  	mov qword [rax], rbx
  5659 0000316D 48894520                	mov PARAM(0), rax
  5660 00003171 48B8-                   	mov rax, sob_void
  5660 00003173 [0000000000000000] 
  5661                                  
  5662                                  	; preparing a non-tail-call
  5663 0000317B 6A00                    	push 0	; arg count
  5664 0000317D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5665 00003182 E8042F0100              	call malloc
  5666 00003187 50                      	push rax
  5667 00003188 BF08000000              	mov rdi, 8 * 1	; new rib
  5668 0000318D E8F92E0100              	call malloc
  5669 00003192 50                      	push rax
  5670 00003193 BF10000000              	mov rdi, 8 * 2	; extended env
  5671 00003198 E8EE2E0100              	call malloc
  5672 0000319D 488B7D10                	mov rdi, ENV
  5673 000031A1 BE00000000              	mov rsi, 0
  5674 000031A6 BA01000000              	mov rdx, 1
  5675                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5676 000031AB 4883FE01                	cmp rsi, 1
  5677 000031AF 7410                    	je .L_lambda_simple_env_end_0023
  5678 000031B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5679 000031B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5680 000031B9 48FFC6                  	inc rsi
  5681 000031BC 48FFC2                  	inc rdx
  5682 000031BF EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5683                                  .L_lambda_simple_env_end_0023:
  5684 000031C1 5B                      	pop rbx
  5685 000031C2 BE00000000              	mov rsi, 0
  5686                                  .L_lambda_simple_params_loop_0023:	; copy params
  5687 000031C7 4883FE01                	cmp rsi, 1
  5688 000031CB 740E                    	je .L_lambda_simple_params_end_0023
  5689 000031CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5690 000031D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5691 000031D6 48FFC6                  	inc rsi
  5692 000031D9 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5693                                  .L_lambda_simple_params_end_0023:
  5694 000031DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5695 000031DE 4889C3                  	mov rbx, rax
  5696 000031E1 58                      	pop rax
  5697 000031E2 C60004                  	mov byte [rax], T_closure
  5698 000031E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5699 000031E9 48C74009[F6310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5700 000031F1 E928010000              	jmp .L_lambda_simple_end_0023
  5701                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5702 000031F6 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5703 000031FC 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5704 000031FE FF742410                	push qword [rsp + 8 * 2]
  5705 00003202 6A02                    	push 2
  5706 00003204 E93B2E0100              	jmp L_error_incorrect_arity_simple
  5707                                  .L_lambda_simple_arity_check_ok_0023:
  5708 00003209 C8000000                	enter 0, 0
  5709                                  	; preparing a non-tail-call
  5710 0000320D 488B4528                	mov rax, PARAM(1)	; param s
  5711 00003211 50                      	push rax
  5712 00003212 6A01                    	push 1	; arg count
  5713 00003214 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
  5714 0000321C 803805                  	cmp byte [rax], T_undefined
  5715 0000321F 0F84392D0100            	je L_error_fvar_undefined
  5716 00003225 803804                  	cmp byte [rax], T_closure
  5717 00003228 0F85B42D0100            	jne L_error_non_closure
  5718 0000322E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5719 00003231 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5720 00003234 483D[02000000]          	cmp rax, sob_boolean_false
  5721 0000323A 0F84D6000000            	je .L_if_else_0004
  5722                                  	; Setting up for a tail-call
  5723 00003240 488B4520                	mov rax, PARAM(0)	; param a
  5724 00003244 50                      	push rax
  5725                                  	; preparing a non-tail-call
  5726                                  	; preparing a non-tail-call
  5727 00003245 488B4528                	mov rax, PARAM(1)	; param s
  5728 00003249 50                      	push rax
  5729 0000324A 6A01                    	push 1	; arg count
  5730 0000324C 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  5731 00003254 803805                  	cmp byte [rax], T_undefined
  5732 00003257 0F84012D0100            	je L_error_fvar_undefined
  5733 0000325D 803804                  	cmp byte [rax], T_closure
  5734 00003260 0F857C2D0100            	jne L_error_non_closure
  5735 00003266 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5736 00003269 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5737 0000326C 50                      	push rax
  5738                                  	; preparing a non-tail-call
  5739 0000326D 488B4528                	mov rax, PARAM(1)	; param s
  5740 00003271 50                      	push rax
  5741 00003272 6A01                    	push 1	; arg count
  5742 00003274 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  5743 0000327C 803805                  	cmp byte [rax], T_undefined
  5744 0000327F 0F84D92C0100            	je L_error_fvar_undefined
  5745 00003285 803804                  	cmp byte [rax], T_closure
  5746 00003288 0F85542D0100            	jne L_error_non_closure
  5747 0000328E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5748 00003291 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5749 00003294 50                      	push rax
  5750 00003295 6A02                    	push 2	; arg count
  5751 00003297 488B4510                	mov rax, ENV
  5752 0000329B 488B00                  	mov rax, qword [rax + 8 * 0]
  5753 0000329E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5754 000032A1 488B00                  	mov rax, qword [rax]
  5755 000032A4 803804                  	cmp byte [rax], T_closure
  5756 000032A7 0F85352D0100            	jne L_error_non_closure
  5757 000032AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5758 000032B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5759 000032B3 50                      	push rax
  5760 000032B4 6A02                    	push 2
  5761 000032B6 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  5762 000032BE 803805                  	cmp byte [rax], T_undefined
  5763 000032C1 0F84972C0100            	je L_error_fvar_undefined
  5764 000032C7 803804                  	cmp byte [rax], T_closure
  5765 000032CA 0F85122D0100            	jne L_error_non_closure
  5766 000032D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5767 000032D3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  5768 000032D7 4C8B4D00                	mov r9, qword [rbp]
  5769 000032DB 4150                    	push r8
  5770 000032DD 4151                    	push r9
  5771 000032DF 41BA06000000            	mov r10, 2 + 4
  5772 000032E5 4C8B5D18                	mov r11, COUNT
  5773 000032E9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  5774 000032EE 4C8D65F8                	lea r12, [rbp - 8]
  5775                                  .L_tc_recycle_frame_loop_0021:
  5776 000032F2 4983FA00                	cmp r10, 0
  5777 000032F6 7414                    	je .L_tc_recycle_frame_done_0021
  5778 000032F8 4D8B2C24                	mov r13, qword [r12]
  5779 000032FC 4D892B                  	mov qword [r11], r13
  5780 000032FF 49FFCA                  	dec r10
  5781 00003302 4983EB08                	sub r11, 8
  5782 00003306 4983EC08                	sub r12, 8
  5783 0000330A EBE6                    	jmp .L_tc_recycle_frame_loop_0021
  5784                                  .L_tc_recycle_frame_done_0021:
  5785 0000330C 498D6308                	lea rsp, [r11 + 8]
  5786 00003310 5D                      	pop rbp
  5787 00003311 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5788 00003314 EB04                    	jmp .L_if_end_0004
  5789                                  .L_if_else_0004:
  5790 00003316 488B4520                	mov rax, PARAM(0)	; param a
  5791                                  .L_if_end_0004:
  5792 0000331A C9                      	leave
  5793 0000331B C22000                  	ret AND_KILL_FRAME(2)
  5794                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5795 0000331E 803804                  	cmp byte [rax], T_closure
  5796 00003321 0F85BB2C0100            	jne L_error_non_closure
  5797 00003327 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5798 0000332A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5799 0000332D 50                      	push rax
  5800 0000332E 488B4520                	mov rax, PARAM(0)	; param run
  5801 00003332 8F00                    	pop qword [rax]
  5802 00003334 48B8-                   	mov rax, sob_void
  5802 00003336 [0000000000000000] 
  5803                                  
  5804 0000333E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5805 00003343 E8432D0100              	call malloc
  5806 00003348 50                      	push rax
  5807 00003349 BF08000000              	mov rdi, 8 * 1	; new rib
  5808 0000334E E8382D0100              	call malloc
  5809 00003353 50                      	push rax
  5810 00003354 BF10000000              	mov rdi, 8 * 2	; extended env
  5811 00003359 E82D2D0100              	call malloc
  5812 0000335E 488B7D10                	mov rdi, ENV
  5813 00003362 BE00000000              	mov rsi, 0
  5814 00003367 BA01000000              	mov rdx, 1
  5815                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5816 0000336C 4883FE01                	cmp rsi, 1
  5817 00003370 7410                    	je .L_lambda_opt_env_end_0003
  5818 00003372 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5819 00003376 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5820 0000337A 48FFC6                  	inc rsi
  5821 0000337D 48FFC2                  	inc rdx
  5822 00003380 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5823                                  .L_lambda_opt_env_end_0003:
  5824 00003382 5B                      	pop rbx
  5825 00003383 BE00000000              	mov rsi, 0
  5826                                  .L_lambda_opt_params_loop_0003:	; copy params
  5827 00003388 4883FE01                	cmp rsi, 1
  5828 0000338C 740E                    	je .L_lambda_opt_params_end_0003
  5829 0000338E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5830 00003393 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5831 00003397 48FFC6                  	inc rsi
  5832 0000339A EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5833                                  .L_lambda_opt_params_end_0003:
  5834 0000339C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5835 0000339F 4889C3                  	mov rbx, rax
  5836 000033A2 58                      	pop rax
  5837 000033A3 C60004                  	mov byte [rax], T_closure
  5838 000033A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5839 000033AA 48C74009[B7330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5840 000033B2 E9DA010000              	jmp .L_lambda_opt_end_0003
  5841                                  .L_lambda_opt_code_0003:
  5842 000033B7 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5843 000033BC 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5844 000033C0 7407                    	je .L_lambda_opt_arity_check_exact_0003	; Jump if arity matches
  5845 000033C2 7F4C                    	jg .L_lambda_opt_arity_check_more_0003	; Jump if more arguments passed
  5846 000033C4 E98F2C0100              	jmp L_error_incorrect_arity_opt
  5847                                  .L_lambda_opt_arity_check_exact_0003:
  5848 000033C9 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5849 000033CC 4983C603                	add r14, 3 ; add 3 first stack values
  5850 000033D0 41BF00000000            	mov r15, 0 ; r15 = index
  5851 000033D6 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5852 000033DA 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5853 000033E2 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5854                                  .L_lambda_opt_stack_shrink_loop_0003:
  5855 000033E4 4983FE00                	cmp r14, 0
  5856 000033E8 7E11                    	jle .L_make_lambda_opt_exact_finish_0003
  5857 000033EA 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5858 000033EF 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5859 000033F3 49FFCE                  	dec r14 ; next loop value
  5860 000033F6 49FFC7                  	inc r15 ; update i
  5861 000033F9 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5862                                  .L_make_lambda_opt_exact_finish_0003:
  5863 000033FB 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5864 00003403 49FFC2                  	inc r10
  5865 00003406 4C89542410              	mov qword [rsp + 8 * 2], r10
  5866 0000340B E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0003
  5867                                  .L_lambda_opt_arity_check_more_0003:
  5868 00003410 4D89D6                  	mov r14, r10 ; r14 = num args
  5869 00003413 4D89D7                  	mov r15, r10 ; r15 = num args
  5870 00003416 41B901000000            	mov r9, 1; r9 = number of params 
  5871 0000341C 4D29CE                  	sub r14, r9 ; r14 = extra args
  5872 0000341F 4D01F1                  	add r9, r14 ; r9 = num args
  5873 00003422 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5873 00003424 [0100000000000000] 
  5874 0000342C EB00                    	jmp .L_make_lambda_opt_arg_list_0003
  5875                                  .L_make_lambda_opt_arg_list_0003:
  5876 0000342E 4983FE00                	cmp r14, 0
  5877 00003432 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0003
  5878 00003434 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  5879 00003439 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  5880 0000343C 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5881 00003442 E8442C0100              	call malloc                         ; Allocate memory, result in rax
  5882 00003447 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5883 0000344A 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  5884 0000344E 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5885 00003452 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5886 00003455 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  5887 00003458 49FFC9                  	dec r9                              ; args index minus 1
  5888 0000345B 49FFCE                  	dec r14                             ; next iteration
  5889 0000345E EBCE                    	jmp .L_make_lambda_opt_arg_list_0003
  5890                                  .L_make_lambda_opt_stack_fixed_0003:
  5891 00003460 4D89FE                  	mov r14, r15 ; r14 = num args
  5892 00003463 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5893 00003466 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5894 0000346A 41BA01000000            	mov r10, 1; r10 = num of params
  5895 00003470 4D29D6                  	sub r14, r10 ; r14 = extra args
  5896 00003473 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5897 00003476 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5898 00003479 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5899 0000347E EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0003
  5900                                  .L_lambda_opt_stack_shrink_loop_more_0003:
  5901 00003480 4983F800                	cmp r8, 0
  5902 00003484 7E15                    	jle .L_make_lambda_opt_more_finish_0003
  5903 00003486 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5904 0000348A 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5905 0000348E 4D8D26                  	lea r12, [r14]
  5906 00003491 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5907 00003496 49FFC8                  	dec r8 ; next iteration
  5908 00003499 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0003
  5909                                  .L_make_lambda_opt_more_finish_0003:
  5910 0000349B 4D89F8                  	mov r8, r15 ; num of args
  5911 0000349E 41BA01000000            	mov r10, 1
  5912 000034A4 4D29D0                  	sub r8, r10 ; num of new args
  5913 000034A7 49FFC0                  	inc r8
  5914 000034AA 4C89442420              	mov qword [rsp + 8 * 4], r8
  5915 000034AF 4883C410                	add rsp, 8 * 2  ; 
  5916 000034B3 EB00                    	jmp .L_lambda_opt_stack_adjusted_0003
  5917                                  .L_lambda_opt_stack_adjusted_0003:
  5918 000034B5 C8000000                	enter 0, 0
  5919                                  	; Setting up for a tail-call
  5920 000034B9 488B4520                	mov rax, PARAM(0)	; param f
  5921 000034BD 50                      	push rax
  5922                                  	; preparing a non-tail-call
  5923                                  	; preparing a non-tail-call
  5924 000034BE 488B4528                	mov rax, PARAM(1)	; param s
  5925 000034C2 50                      	push rax
  5926 000034C3 6A01                    	push 1	; arg count
  5927 000034C5 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  5928 000034CD 803805                  	cmp byte [rax], T_undefined
  5929 000034D0 0F84882A0100            	je L_error_fvar_undefined
  5930 000034D6 803804                  	cmp byte [rax], T_closure
  5931 000034D9 0F85032B0100            	jne L_error_non_closure
  5932 000034DF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5933 000034E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5934 000034E5 50                      	push rax
  5935                                  	; preparing a non-tail-call
  5936 000034E6 488B4528                	mov rax, PARAM(1)	; param s
  5937 000034EA 50                      	push rax
  5938 000034EB 6A01                    	push 1	; arg count
  5939 000034ED 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  5940 000034F5 803805                  	cmp byte [rax], T_undefined
  5941 000034F8 0F84602A0100            	je L_error_fvar_undefined
  5942 000034FE 803804                  	cmp byte [rax], T_closure
  5943 00003501 0F85DB2A0100            	jne L_error_non_closure
  5944 00003507 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5945 0000350A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5946 0000350D 50                      	push rax
  5947 0000350E 6A02                    	push 2	; arg count
  5948 00003510 488B4510                	mov rax, ENV
  5949 00003514 488B00                  	mov rax, qword [rax + 8 * 0]
  5950 00003517 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5951 0000351A 488B00                  	mov rax, qword [rax]
  5952 0000351D 803804                  	cmp byte [rax], T_closure
  5953 00003520 0F85BC2A0100            	jne L_error_non_closure
  5954 00003526 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5955 00003529 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5956 0000352C 50                      	push rax
  5957 0000352D 6A02                    	push 2
  5958 0000352F 488B0425[BD0E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5959 00003537 803805                  	cmp byte [rax], T_undefined
  5960 0000353A 0F841E2A0100            	je L_error_fvar_undefined
  5961 00003540 803804                  	cmp byte [rax], T_closure
  5962 00003543 0F85992A0100            	jne L_error_non_closure
  5963 00003549 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5964 0000354C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  5965 00003550 4C8B4D00                	mov r9, qword [rbp]
  5966 00003554 4150                    	push r8
  5967 00003556 4151                    	push r9
  5968 00003558 41BA06000000            	mov r10, 2 + 4
  5969 0000355E 4C8B5D18                	mov r11, COUNT
  5970 00003562 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  5971 00003567 4C8D65F8                	lea r12, [rbp - 8]
  5972                                  .L_tc_recycle_frame_loop_0022:
  5973 0000356B 4983FA00                	cmp r10, 0
  5974 0000356F 7414                    	je .L_tc_recycle_frame_done_0022
  5975 00003571 4D8B2C24                	mov r13, qword [r12]
  5976 00003575 4D892B                  	mov qword [r11], r13
  5977 00003578 49FFCA                  	dec r10
  5978 0000357B 4983EB08                	sub r11, 8
  5979 0000357F 4983EC08                	sub r12, 8
  5980 00003583 EBE6                    	jmp .L_tc_recycle_frame_loop_0022
  5981                                  .L_tc_recycle_frame_done_0022:
  5982 00003585 498D6308                	lea rsp, [r11 + 8]
  5983 00003589 5D                      	pop rbp
  5984 0000358A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5985 0000358D C9                      	leave
  5986 0000358E C21800                  	ret AND_KILL_FRAME(1)
  5987                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5988 00003591 C9                      	leave
  5989 00003592 C21800                  	ret AND_KILL_FRAME(1)
  5990                                  .L_lambda_simple_end_0022:	; new closure is in rax
  5991 00003595 803804                  	cmp byte [rax], T_closure
  5992 00003598 0F85442A0100            	jne L_error_non_closure
  5993 0000359E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5994 000035A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5995 000035A4 48890425[33100000]      	mov qword [free_var_34], rax
  5996 000035AC 48B8-                   	mov rax, sob_void
  5996 000035AE [0000000000000000] 
  5997                                  
  5998 000035B6 4889C7                  	mov rdi, rax
  5999 000035B9 E8222D0100              	call print_sexpr_if_not_void
  6000 000035BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6001 000035C3 E8C32A0100              	call malloc
  6002 000035C8 50                      	push rax
  6003 000035C9 BF00000000              	mov rdi, 8 * 0	; new rib
  6004 000035CE E8B82A0100              	call malloc
  6005 000035D3 50                      	push rax
  6006 000035D4 BF08000000              	mov rdi, 8 * 1	; extended env
  6007 000035D9 E8AD2A0100              	call malloc
  6008 000035DE 488B7D10                	mov rdi, ENV
  6009 000035E2 BE00000000              	mov rsi, 0
  6010 000035E7 BA01000000              	mov rdx, 1
  6011                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  6012 000035EC 4883FE00                	cmp rsi, 0
  6013 000035F0 7410                    	je .L_lambda_opt_env_end_0004
  6014 000035F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6015 000035F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6016 000035FA 48FFC6                  	inc rsi
  6017 000035FD 48FFC2                  	inc rdx
  6018 00003600 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  6019                                  .L_lambda_opt_env_end_0004:
  6020 00003602 5B                      	pop rbx
  6021 00003603 BE00000000              	mov rsi, 0
  6022                                  .L_lambda_opt_params_loop_0004:	; copy params
  6023 00003608 4883FE00                	cmp rsi, 0
  6024 0000360C 740E                    	je .L_lambda_opt_params_end_0004
  6025 0000360E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6026 00003613 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6027 00003617 48FFC6                  	inc rsi
  6028 0000361A EBEC                    	jmp .L_lambda_opt_params_loop_0004
  6029                                  .L_lambda_opt_params_end_0004:
  6030 0000361C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6031 0000361F 4889C3                  	mov rbx, rax
  6032 00003622 58                      	pop rax
  6033 00003623 C60004                  	mov byte [rax], T_closure
  6034 00003626 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6035 0000362A 48C74009[37360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  6036 00003632 E99B040000              	jmp .L_lambda_opt_end_0004
  6037                                  .L_lambda_opt_code_0004:
  6038 00003637 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  6039 0000363C 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  6040 00003640 7407                    	je .L_lambda_opt_arity_check_exact_0004	; Jump if arity matches
  6041 00003642 7F4C                    	jg .L_lambda_opt_arity_check_more_0004	; Jump if more arguments passed
  6042 00003644 E90F2A0100              	jmp L_error_incorrect_arity_opt
  6043                                  .L_lambda_opt_arity_check_exact_0004:
  6044 00003649 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  6045 0000364C 4983C603                	add r14, 3 ; add 3 first stack values
  6046 00003650 41BF00000000            	mov r15, 0 ; r15 = index
  6047 00003656 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  6048 0000365A 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  6049 00003662 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6050                                  .L_lambda_opt_stack_shrink_loop_0004:
  6051 00003664 4983FE00                	cmp r14, 0
  6052 00003668 7E11                    	jle .L_make_lambda_opt_exact_finish_0004
  6053 0000366A 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  6054 0000366F 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  6055 00003673 49FFCE                  	dec r14 ; next loop value
  6056 00003676 49FFC7                  	inc r15 ; update i
  6057 00003679 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6058                                  .L_make_lambda_opt_exact_finish_0004:
  6059 0000367B 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  6060 00003683 49FFC2                  	inc r10
  6061 00003686 4C89542410              	mov qword [rsp + 8 * 2], r10
  6062 0000368B E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0004
  6063                                  .L_lambda_opt_arity_check_more_0004:
  6064 00003690 4D89D6                  	mov r14, r10 ; r14 = num args
  6065 00003693 4D89D7                  	mov r15, r10 ; r15 = num args
  6066 00003696 41B901000000            	mov r9, 1; r9 = number of params 
  6067 0000369C 4D29CE                  	sub r14, r9 ; r14 = extra args
  6068 0000369F 4D01F1                  	add r9, r14 ; r9 = num args
  6069 000036A2 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  6069 000036A4 [0100000000000000] 
  6070 000036AC EB00                    	jmp .L_make_lambda_opt_arg_list_0004
  6071                                  .L_make_lambda_opt_arg_list_0004:
  6072 000036AE 4983FE00                	cmp r14, 0
  6073 000036B2 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0004
  6074 000036B4 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  6075 000036B9 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  6076 000036BC 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  6077 000036C2 E8C4290100              	call malloc                         ; Allocate memory, result in rax
  6078 000036C7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  6079 000036CA 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  6080 000036CE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  6081 000036D2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  6082 000036D5 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  6083 000036D8 49FFC9                  	dec r9                              ; args index minus 1
  6084 000036DB 49FFCE                  	dec r14                             ; next iteration
  6085 000036DE EBCE                    	jmp .L_make_lambda_opt_arg_list_0004
  6086                                  .L_make_lambda_opt_stack_fixed_0004:
  6087 000036E0 4D89FE                  	mov r14, r15 ; r14 = num args
  6088 000036E3 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  6089 000036E6 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  6090 000036EA 41BA01000000            	mov r10, 1; r10 = num of params
  6091 000036F0 4D29D6                  	sub r14, r10 ; r14 = extra args
  6092 000036F3 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6093 000036F6 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6094 000036F9 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  6095 000036FE EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0004
  6096                                  .L_lambda_opt_stack_shrink_loop_more_0004:
  6097 00003700 4983F800                	cmp r8, 0
  6098 00003704 7E15                    	jle .L_make_lambda_opt_more_finish_0004
  6099 00003706 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  6100 0000370A 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6101 0000370E 4D8D26                  	lea r12, [r14]
  6102 00003711 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  6103 00003716 49FFC8                  	dec r8 ; next iteration
  6104 00003719 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0004
  6105                                  .L_make_lambda_opt_more_finish_0004:
  6106 0000371B 4D89F8                  	mov r8, r15 ; num of args
  6107 0000371E 41BA01000000            	mov r10, 1
  6108 00003724 4D29D0                  	sub r8, r10 ; num of new args
  6109 00003727 49FFC0                  	inc r8
  6110 0000372A 4C89442420              	mov qword [rsp + 8 * 4], r8
  6111 0000372F 4883C410                	add rsp, 8 * 2  ; 
  6112 00003733 EB00                    	jmp .L_lambda_opt_stack_adjusted_0004
  6113                                  .L_lambda_opt_stack_adjusted_0004:
  6114 00003735 C8000000                	enter 0, 0
  6115                                  	; Setting up for a tail-call
  6116 00003739 48B8-                   	mov rax, L_constants + 1993
  6116 0000373B [C907000000000000] 
  6117 00003743 50                      	push rax
  6118 00003744 6A01                    	push 1
  6119 00003746 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6120 0000374B E83B290100              	call malloc
  6121 00003750 50                      	push rax
  6122 00003751 BF08000000              	mov rdi, 8 * 1	; new rib
  6123 00003756 E830290100              	call malloc
  6124 0000375B 50                      	push rax
  6125 0000375C BF10000000              	mov rdi, 8 * 2	; extended env
  6126 00003761 E825290100              	call malloc
  6127 00003766 488B7D10                	mov rdi, ENV
  6128 0000376A BE00000000              	mov rsi, 0
  6129 0000376F BA01000000              	mov rdx, 1
  6130                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6131 00003774 4883FE01                	cmp rsi, 1
  6132 00003778 7410                    	je .L_lambda_simple_env_end_0024
  6133 0000377A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6134 0000377E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6135 00003782 48FFC6                  	inc rsi
  6136 00003785 48FFC2                  	inc rdx
  6137 00003788 EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6138                                  .L_lambda_simple_env_end_0024:
  6139 0000378A 5B                      	pop rbx
  6140 0000378B BE00000000              	mov rsi, 0
  6141                                  .L_lambda_simple_params_loop_0024:	; copy params
  6142 00003790 4883FE01                	cmp rsi, 1
  6143 00003794 740E                    	je .L_lambda_simple_params_end_0024
  6144 00003796 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6145 0000379B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6146 0000379F 48FFC6                  	inc rsi
  6147 000037A2 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6148                                  .L_lambda_simple_params_end_0024:
  6149 000037A4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6150 000037A7 4889C3                  	mov rbx, rax
  6151 000037AA 58                      	pop rax
  6152 000037AB C60004                  	mov byte [rax], T_closure
  6153 000037AE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6154 000037B2 48C74009[BF370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6155 000037BA E9C2020000              	jmp .L_lambda_simple_end_0024
  6156                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6157 000037BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6158 000037C5 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6159 000037C7 FF742410                	push qword [rsp + 8 * 2]
  6160 000037CB 6A01                    	push 1
  6161 000037CD E972280100              	jmp L_error_incorrect_arity_simple
  6162                                  .L_lambda_simple_arity_check_ok_0024:
  6163 000037D2 C8000000                	enter 0, 0
  6164 000037D6 BF08000000              	mov rdi, 8 * 1
  6165 000037DB E8AB280100              	call malloc
  6166 000037E0 488B5D20                	mov rbx, PARAM(0)
  6167 000037E4 488918                  	mov qword [rax], rbx
  6168 000037E7 48894520                	mov PARAM(0), rax
  6169 000037EB 48B8-                   	mov rax, sob_void
  6169 000037ED [0000000000000000] 
  6170                                  
  6171                                  	; preparing a non-tail-call
  6172 000037F5 6A00                    	push 0	; arg count
  6173 000037F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6174 000037FC E88A280100              	call malloc
  6175 00003801 50                      	push rax
  6176 00003802 BF08000000              	mov rdi, 8 * 1	; new rib
  6177 00003807 E87F280100              	call malloc
  6178 0000380C 50                      	push rax
  6179 0000380D BF18000000              	mov rdi, 8 * 3	; extended env
  6180 00003812 E874280100              	call malloc
  6181 00003817 488B7D10                	mov rdi, ENV
  6182 0000381B BE00000000              	mov rsi, 0
  6183 00003820 BA01000000              	mov rdx, 1
  6184                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6185 00003825 4883FE02                	cmp rsi, 2
  6186 00003829 7410                    	je .L_lambda_simple_env_end_0025
  6187 0000382B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6188 0000382F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6189 00003833 48FFC6                  	inc rsi
  6190 00003836 48FFC2                  	inc rdx
  6191 00003839 EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6192                                  .L_lambda_simple_env_end_0025:
  6193 0000383B 5B                      	pop rbx
  6194 0000383C BE00000000              	mov rsi, 0
  6195                                  .L_lambda_simple_params_loop_0025:	; copy params
  6196 00003841 4883FE01                	cmp rsi, 1
  6197 00003845 740E                    	je .L_lambda_simple_params_end_0025
  6198 00003847 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6199 0000384C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6200 00003850 48FFC6                  	inc rsi
  6201 00003853 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6202                                  .L_lambda_simple_params_end_0025:
  6203 00003855 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6204 00003858 4889C3                  	mov rbx, rax
  6205 0000385B 58                      	pop rax
  6206 0000385C C60004                  	mov byte [rax], T_closure
  6207 0000385F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6208 00003863 48C74009[70380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6209 0000386B E987010000              	jmp .L_lambda_simple_end_0025
  6210                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6211 00003870 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6212 00003876 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6213 00003878 FF742410                	push qword [rsp + 8 * 2]
  6214 0000387C 6A01                    	push 1
  6215 0000387E E9C1270100              	jmp L_error_incorrect_arity_simple
  6216                                  .L_lambda_simple_arity_check_ok_0025:
  6217 00003883 C8000000                	enter 0, 0
  6218                                  	; preparing a non-tail-call
  6219                                  	; preparing a non-tail-call
  6220 00003887 488B4520                	mov rax, PARAM(0)	; param s
  6221 0000388B 50                      	push rax
  6222 0000388C 6A01                    	push 1	; arg count
  6223 0000388E 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  6224 00003896 803805                  	cmp byte [rax], T_undefined
  6225 00003899 0F84BF260100            	je L_error_fvar_undefined
  6226 0000389F 803804                  	cmp byte [rax], T_closure
  6227 000038A2 0F853A270100            	jne L_error_non_closure
  6228 000038A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6229 000038AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  6230 000038AE 50                      	push rax
  6231 000038AF 6A01                    	push 1	; arg count
  6232 000038B1 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
  6233 000038B9 803805                  	cmp byte [rax], T_undefined
  6234 000038BC 0F849C260100            	je L_error_fvar_undefined
  6235 000038C2 803804                  	cmp byte [rax], T_closure
  6236 000038C5 0F8517270100            	jne L_error_non_closure
  6237 000038CB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6238 000038CE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6239 000038D1 483D[02000000]          	cmp rax, sob_boolean_false
  6240 000038D7 0F840C010000            	je .L_if_else_0005
  6241                                  	; preparing a non-tail-call
  6242                                  	; preparing a non-tail-call
  6243 000038DD 488B4520                	mov rax, PARAM(0)	; param s
  6244 000038E1 50                      	push rax
  6245 000038E2 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  6246 000038EA 803805                  	cmp byte [rax], T_undefined
  6247 000038ED 0F846B260100            	je L_error_fvar_undefined
  6248 000038F3 50                      	push rax
  6249 000038F4 6A02                    	push 2	; arg count
  6250 000038F6 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  6251 000038FE 803805                  	cmp byte [rax], T_undefined
  6252 00003901 0F8457260100            	je L_error_fvar_undefined
  6253 00003907 803804                  	cmp byte [rax], T_closure
  6254 0000390A 0F85D2260100            	jne L_error_non_closure
  6255 00003910 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6256 00003913 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6257 00003916 50                      	push rax
  6258 00003917 488B4510                	mov rax, ENV
  6259 0000391B 488B4008                	mov rax, qword [rax + 8 * 1]
  6260 0000391F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6261 00003922 50                      	push rax
  6262 00003923 6A02                    	push 2	; arg count
  6263 00003925 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
  6264 0000392D 803805                  	cmp byte [rax], T_undefined
  6265 00003930 0F8428260100            	je L_error_fvar_undefined
  6266 00003936 803804                  	cmp byte [rax], T_closure
  6267 00003939 0F85A3260100            	jne L_error_non_closure
  6268 0000393F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6269 00003942 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6270 00003945 483D[02000000]          	cmp rax, sob_boolean_false
  6271 0000394B 0F8596000000            	jne .L_or_end_0003
  6272                                  
  6273                                  	; Setting up for a tail-call
  6274                                  	; preparing a non-tail-call
  6275 00003951 488B4520                	mov rax, PARAM(0)	; param s
  6276 00003955 50                      	push rax
  6277 00003956 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  6278 0000395E 803805                  	cmp byte [rax], T_undefined
  6279 00003961 0F84F7250100            	je L_error_fvar_undefined
  6280 00003967 50                      	push rax
  6281 00003968 6A02                    	push 2	; arg count
  6282 0000396A 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  6283 00003972 803805                  	cmp byte [rax], T_undefined
  6284 00003975 0F84E3250100            	je L_error_fvar_undefined
  6285 0000397B 803804                  	cmp byte [rax], T_closure
  6286 0000397E 0F855E260100            	jne L_error_non_closure
  6287 00003984 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6288 00003987 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6289 0000398A 50                      	push rax
  6290 0000398B 6A01                    	push 1
  6291 0000398D 488B4510                	mov rax, ENV
  6292 00003991 488B00                  	mov rax, qword [rax + 8 * 0]
  6293 00003994 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6294 00003997 488B00                  	mov rax, qword [rax]
  6295 0000399A 803804                  	cmp byte [rax], T_closure
  6296 0000399D 0F853F260100            	jne L_error_non_closure
  6297 000039A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6298 000039A6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  6299 000039AA 4C8B4D00                	mov r9, qword [rbp]
  6300 000039AE 4150                    	push r8
  6301 000039B0 4151                    	push r9
  6302 000039B2 41BA05000000            	mov r10, 1 + 4
  6303 000039B8 4C8B5D18                	mov r11, COUNT
  6304 000039BC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  6305 000039C1 4C8D65F8                	lea r12, [rbp - 8]
  6306                                  .L_tc_recycle_frame_loop_0023:
  6307 000039C5 4983FA00                	cmp r10, 0
  6308 000039C9 7414                    	je .L_tc_recycle_frame_done_0023
  6309 000039CB 4D8B2C24                	mov r13, qword [r12]
  6310 000039CF 4D892B                  	mov qword [r11], r13
  6311 000039D2 49FFCA                  	dec r10
  6312 000039D5 4983EB08                	sub r11, 8
  6313 000039D9 4983EC08                	sub r12, 8
  6314 000039DD EBE6                    	jmp .L_tc_recycle_frame_loop_0023
  6315                                  .L_tc_recycle_frame_done_0023:
  6316 000039DF 498D6308                	lea rsp, [r11 + 8]
  6317 000039E3 5D                      	pop rbp
  6318 000039E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6319                                  .L_or_end_0003:
  6320 000039E7 EB0A                    	jmp .L_if_end_0005
  6321                                  .L_if_else_0005:
  6322 000039E9 48B8-                   	mov rax, L_constants + 2
  6322 000039EB [0200000000000000] 
  6323                                  .L_if_end_0005:
  6324 000039F3 C9                      	leave
  6325 000039F4 C21800                  	ret AND_KILL_FRAME(1)
  6326                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6327 000039F7 803804                  	cmp byte [rax], T_closure
  6328 000039FA 0F85E2250100            	jne L_error_non_closure
  6329 00003A00 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6330 00003A03 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6331 00003A06 50                      	push rax
  6332 00003A07 488B4520                	mov rax, PARAM(0)	; param loop
  6333 00003A0B 8F00                    	pop qword [rax]
  6334 00003A0D 48B8-                   	mov rax, sob_void
  6334 00003A0F [0000000000000000] 
  6335                                  
  6336                                  	; preparing a non-tail-call
  6337 00003A17 488B4510                	mov rax, ENV
  6338 00003A1B 488B00                  	mov rax, qword [rax + 8 * 0]
  6339 00003A1E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6340 00003A22 50                      	push rax
  6341 00003A23 6A01                    	push 1	; arg count
  6342 00003A25 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
  6343 00003A2D 803805                  	cmp byte [rax], T_undefined
  6344 00003A30 0F8428250100            	je L_error_fvar_undefined
  6345 00003A36 803804                  	cmp byte [rax], T_closure
  6346 00003A39 0F85A3250100            	jne L_error_non_closure
  6347 00003A3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6348 00003A42 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6349 00003A45 483D[02000000]          	cmp rax, sob_boolean_false
  6350 00003A4B 7426                    	je .L_if_else_0006
  6351                                  	; preparing a non-tail-call
  6352 00003A4D 488B4510                	mov rax, ENV
  6353 00003A51 488B00                  	mov rax, qword [rax + 8 * 0]
  6354 00003A54 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6355 00003A58 50                      	push rax
  6356 00003A59 6A01                    	push 1	; arg count
  6357 00003A5B 488B4520                	mov rax, PARAM(0)	; param loop
  6358 00003A5F 488B00                  	mov rax, qword [rax]
  6359 00003A62 803804                  	cmp byte [rax], T_closure
  6360 00003A65 0F8577250100            	jne L_error_non_closure
  6361 00003A6B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6362 00003A6E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6363 00003A71 EB0A                    	jmp .L_if_end_0006
  6364                                  .L_if_else_0006:
  6365 00003A73 48B8-                   	mov rax, L_constants + 2
  6365 00003A75 [0200000000000000] 
  6366                                  .L_if_end_0006:
  6367 00003A7D C9                      	leave
  6368 00003A7E C21800                  	ret AND_KILL_FRAME(1)
  6369                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6370 00003A81 803804                  	cmp byte [rax], T_closure
  6371 00003A84 0F8558250100            	jne L_error_non_closure
  6372 00003A8A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6373 00003A8D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  6374 00003A91 4C8B4D00                	mov r9, qword [rbp]
  6375 00003A95 4150                    	push r8
  6376 00003A97 4151                    	push r9
  6377 00003A99 41BA05000000            	mov r10, 1 + 4
  6378 00003A9F 4C8B5D18                	mov r11, COUNT
  6379 00003AA3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  6380 00003AA8 4C8D65F8                	lea r12, [rbp - 8]
  6381                                  .L_tc_recycle_frame_loop_0024:
  6382 00003AAC 4983FA00                	cmp r10, 0
  6383 00003AB0 7414                    	je .L_tc_recycle_frame_done_0024
  6384 00003AB2 4D8B2C24                	mov r13, qword [r12]
  6385 00003AB6 4D892B                  	mov qword [r11], r13
  6386 00003AB9 49FFCA                  	dec r10
  6387 00003ABC 4983EB08                	sub r11, 8
  6388 00003AC0 4983EC08                	sub r12, 8
  6389 00003AC4 EBE6                    	jmp .L_tc_recycle_frame_loop_0024
  6390                                  .L_tc_recycle_frame_done_0024:
  6391 00003AC6 498D6308                	lea rsp, [r11 + 8]
  6392 00003ACA 5D                      	pop rbp
  6393 00003ACB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6394 00003ACE C9                      	leave
  6395 00003ACF C21800                  	ret AND_KILL_FRAME(1)
  6396                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6397 00003AD2 48890425[50150000]      	mov qword [free_var_111], rax
  6398 00003ADA 48B8-                   	mov rax, sob_void
  6398 00003ADC [0000000000000000] 
  6399                                  
  6400 00003AE4 4889C7                  	mov rdi, rax
  6401 00003AE7 E8F4270100              	call print_sexpr_if_not_void
  6402 00003AEC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6403 00003AF1 E895250100              	call malloc
  6404 00003AF6 50                      	push rax
  6405 00003AF7 BF00000000              	mov rdi, 8 * 0	; new rib
  6406 00003AFC E88A250100              	call malloc
  6407 00003B01 50                      	push rax
  6408 00003B02 BF08000000              	mov rdi, 8 * 1	; extended env
  6409 00003B07 E87F250100              	call malloc
  6410 00003B0C 488B7D10                	mov rdi, ENV
  6411 00003B10 BE00000000              	mov rsi, 0
  6412 00003B15 BA01000000              	mov rdx, 1
  6413                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6414 00003B1A 4883FE00                	cmp rsi, 0
  6415 00003B1E 7410                    	je .L_lambda_opt_env_end_0005
  6416 00003B20 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6417 00003B24 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6418 00003B28 48FFC6                  	inc rsi
  6419 00003B2B 48FFC2                  	inc rdx
  6420 00003B2E EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6421                                  .L_lambda_opt_env_end_0005:
  6422 00003B30 5B                      	pop rbx
  6423 00003B31 BE00000000              	mov rsi, 0
  6424                                  .L_lambda_opt_params_loop_0005:	; copy params
  6425 00003B36 4883FE00                	cmp rsi, 0
  6426 00003B3A 740E                    	je .L_lambda_opt_params_end_0005
  6427 00003B3C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6428 00003B41 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6429 00003B45 48FFC6                  	inc rsi
  6430 00003B48 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6431                                  .L_lambda_opt_params_end_0005:
  6432 00003B4A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6433 00003B4D 4889C3                  	mov rbx, rax
  6434 00003B50 58                      	pop rax
  6435 00003B51 C60004                  	mov byte [rax], T_closure
  6436 00003B54 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6437 00003B58 48C74009[653B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6438 00003B60 E9D1040000              	jmp .L_lambda_opt_end_0005
  6439                                  .L_lambda_opt_code_0005:
  6440 00003B65 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  6441 00003B6A 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  6442 00003B6E 7407                    	je .L_lambda_opt_arity_check_exact_0005	; Jump if arity matches
  6443 00003B70 7F4C                    	jg .L_lambda_opt_arity_check_more_0005	; Jump if more arguments passed
  6444 00003B72 E9E1240100              	jmp L_error_incorrect_arity_opt
  6445                                  .L_lambda_opt_arity_check_exact_0005:
  6446 00003B77 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  6447 00003B7A 4983C603                	add r14, 3 ; add 3 first stack values
  6448 00003B7E 41BF00000000            	mov r15, 0 ; r15 = index
  6449 00003B84 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  6450 00003B88 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  6451 00003B90 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6452                                  .L_lambda_opt_stack_shrink_loop_0005:
  6453 00003B92 4983FE00                	cmp r14, 0
  6454 00003B96 7E11                    	jle .L_make_lambda_opt_exact_finish_0005
  6455 00003B98 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  6456 00003B9D 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  6457 00003BA1 49FFCE                  	dec r14 ; next loop value
  6458 00003BA4 49FFC7                  	inc r15 ; update i
  6459 00003BA7 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6460                                  .L_make_lambda_opt_exact_finish_0005:
  6461 00003BA9 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  6462 00003BB1 49FFC2                  	inc r10
  6463 00003BB4 4C89542410              	mov qword [rsp + 8 * 2], r10
  6464 00003BB9 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0005
  6465                                  .L_lambda_opt_arity_check_more_0005:
  6466 00003BBE 4D89D6                  	mov r14, r10 ; r14 = num args
  6467 00003BC1 4D89D7                  	mov r15, r10 ; r15 = num args
  6468 00003BC4 41B901000000            	mov r9, 1; r9 = number of params 
  6469 00003BCA 4D29CE                  	sub r14, r9 ; r14 = extra args
  6470 00003BCD 4D01F1                  	add r9, r14 ; r9 = num args
  6471 00003BD0 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  6471 00003BD2 [0100000000000000] 
  6472 00003BDA EB00                    	jmp .L_make_lambda_opt_arg_list_0005
  6473                                  .L_make_lambda_opt_arg_list_0005:
  6474 00003BDC 4983FE00                	cmp r14, 0
  6475 00003BE0 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0005
  6476 00003BE2 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  6477 00003BE7 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  6478 00003BEA 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  6479 00003BF0 E896240100              	call malloc                         ; Allocate memory, result in rax
  6480 00003BF5 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  6481 00003BF8 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  6482 00003BFC 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  6483 00003C00 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  6484 00003C03 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  6485 00003C06 49FFC9                  	dec r9                              ; args index minus 1
  6486 00003C09 49FFCE                  	dec r14                             ; next iteration
  6487 00003C0C EBCE                    	jmp .L_make_lambda_opt_arg_list_0005
  6488                                  .L_make_lambda_opt_stack_fixed_0005:
  6489 00003C0E 4D89FE                  	mov r14, r15 ; r14 = num args
  6490 00003C11 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  6491 00003C14 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  6492 00003C18 41BA01000000            	mov r10, 1; r10 = num of params
  6493 00003C1E 4D29D6                  	sub r14, r10 ; r14 = extra args
  6494 00003C21 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6495 00003C24 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6496 00003C27 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  6497 00003C2C EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0005
  6498                                  .L_lambda_opt_stack_shrink_loop_more_0005:
  6499 00003C2E 4983F800                	cmp r8, 0
  6500 00003C32 7E15                    	jle .L_make_lambda_opt_more_finish_0005
  6501 00003C34 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  6502 00003C38 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6503 00003C3C 4D8D26                  	lea r12, [r14]
  6504 00003C3F 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  6505 00003C44 49FFC8                  	dec r8 ; next iteration
  6506 00003C47 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0005
  6507                                  .L_make_lambda_opt_more_finish_0005:
  6508 00003C49 4D89F8                  	mov r8, r15 ; num of args
  6509 00003C4C 41BA01000000            	mov r10, 1
  6510 00003C52 4D29D0                  	sub r8, r10 ; num of new args
  6511 00003C55 49FFC0                  	inc r8
  6512 00003C58 4C89442420              	mov qword [rsp + 8 * 4], r8
  6513 00003C5D 4883C410                	add rsp, 8 * 2  ; 
  6514 00003C61 EB00                    	jmp .L_lambda_opt_stack_adjusted_0005
  6515                                  .L_lambda_opt_stack_adjusted_0005:
  6516 00003C63 C8000000                	enter 0, 0
  6517                                  	; Setting up for a tail-call
  6518 00003C67 48B8-                   	mov rax, L_constants + 1993
  6518 00003C69 [C907000000000000] 
  6519 00003C71 50                      	push rax
  6520 00003C72 6A01                    	push 1
  6521 00003C74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6522 00003C79 E80D240100              	call malloc
  6523 00003C7E 50                      	push rax
  6524 00003C7F BF08000000              	mov rdi, 8 * 1	; new rib
  6525 00003C84 E802240100              	call malloc
  6526 00003C89 50                      	push rax
  6527 00003C8A BF10000000              	mov rdi, 8 * 2	; extended env
  6528 00003C8F E8F7230100              	call malloc
  6529 00003C94 488B7D10                	mov rdi, ENV
  6530 00003C98 BE00000000              	mov rsi, 0
  6531 00003C9D BA01000000              	mov rdx, 1
  6532                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6533 00003CA2 4883FE01                	cmp rsi, 1
  6534 00003CA6 7410                    	je .L_lambda_simple_env_end_0026
  6535 00003CA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6536 00003CAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6537 00003CB0 48FFC6                  	inc rsi
  6538 00003CB3 48FFC2                  	inc rdx
  6539 00003CB6 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6540                                  .L_lambda_simple_env_end_0026:
  6541 00003CB8 5B                      	pop rbx
  6542 00003CB9 BE00000000              	mov rsi, 0
  6543                                  .L_lambda_simple_params_loop_0026:	; copy params
  6544 00003CBE 4883FE01                	cmp rsi, 1
  6545 00003CC2 740E                    	je .L_lambda_simple_params_end_0026
  6546 00003CC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6547 00003CC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6548 00003CCD 48FFC6                  	inc rsi
  6549 00003CD0 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6550                                  .L_lambda_simple_params_end_0026:
  6551 00003CD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6552 00003CD5 4889C3                  	mov rbx, rax
  6553 00003CD8 58                      	pop rax
  6554 00003CD9 C60004                  	mov byte [rax], T_closure
  6555 00003CDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6556 00003CE0 48C74009[ED3C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6557 00003CE8 E9F8020000              	jmp .L_lambda_simple_end_0026
  6558                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6559 00003CED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6560 00003CF3 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6561 00003CF5 FF742410                	push qword [rsp + 8 * 2]
  6562 00003CF9 6A01                    	push 1
  6563 00003CFB E944230100              	jmp L_error_incorrect_arity_simple
  6564                                  .L_lambda_simple_arity_check_ok_0026:
  6565 00003D00 C8000000                	enter 0, 0
  6566 00003D04 BF08000000              	mov rdi, 8 * 1
  6567 00003D09 E87D230100              	call malloc
  6568 00003D0E 488B5D20                	mov rbx, PARAM(0)
  6569 00003D12 488918                  	mov qword [rax], rbx
  6570 00003D15 48894520                	mov PARAM(0), rax
  6571 00003D19 48B8-                   	mov rax, sob_void
  6571 00003D1B [0000000000000000] 
  6572                                  
  6573                                  	; preparing a non-tail-call
  6574 00003D23 6A00                    	push 0	; arg count
  6575 00003D25 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6576 00003D2A E85C230100              	call malloc
  6577 00003D2F 50                      	push rax
  6578 00003D30 BF08000000              	mov rdi, 8 * 1	; new rib
  6579 00003D35 E851230100              	call malloc
  6580 00003D3A 50                      	push rax
  6581 00003D3B BF18000000              	mov rdi, 8 * 3	; extended env
  6582 00003D40 E846230100              	call malloc
  6583 00003D45 488B7D10                	mov rdi, ENV
  6584 00003D49 BE00000000              	mov rsi, 0
  6585 00003D4E BA01000000              	mov rdx, 1
  6586                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6587 00003D53 4883FE02                	cmp rsi, 2
  6588 00003D57 7410                    	je .L_lambda_simple_env_end_0027
  6589 00003D59 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6590 00003D5D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6591 00003D61 48FFC6                  	inc rsi
  6592 00003D64 48FFC2                  	inc rdx
  6593 00003D67 EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6594                                  .L_lambda_simple_env_end_0027:
  6595 00003D69 5B                      	pop rbx
  6596 00003D6A BE00000000              	mov rsi, 0
  6597                                  .L_lambda_simple_params_loop_0027:	; copy params
  6598 00003D6F 4883FE01                	cmp rsi, 1
  6599 00003D73 740E                    	je .L_lambda_simple_params_end_0027
  6600 00003D75 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6601 00003D7A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6602 00003D7E 48FFC6                  	inc rsi
  6603 00003D81 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6604                                  .L_lambda_simple_params_end_0027:
  6605 00003D83 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6606 00003D86 4889C3                  	mov rbx, rax
  6607 00003D89 58                      	pop rax
  6608 00003D8A C60004                  	mov byte [rax], T_closure
  6609 00003D8D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6610 00003D91 48C74009[9E3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6611 00003D99 E987010000              	jmp .L_lambda_simple_end_0027
  6612                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6613 00003D9E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6614 00003DA4 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6615 00003DA6 FF742410                	push qword [rsp + 8 * 2]
  6616 00003DAA 6A01                    	push 1
  6617 00003DAC E993220100              	jmp L_error_incorrect_arity_simple
  6618                                  .L_lambda_simple_arity_check_ok_0027:
  6619 00003DB1 C8000000                	enter 0, 0
  6620                                  	; preparing a non-tail-call
  6621                                  	; preparing a non-tail-call
  6622 00003DB5 488B4520                	mov rax, PARAM(0)	; param s
  6623 00003DB9 50                      	push rax
  6624 00003DBA 6A01                    	push 1	; arg count
  6625 00003DBC 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  6626 00003DC4 803805                  	cmp byte [rax], T_undefined
  6627 00003DC7 0F8491210100            	je L_error_fvar_undefined
  6628 00003DCD 803804                  	cmp byte [rax], T_closure
  6629 00003DD0 0F850C220100            	jne L_error_non_closure
  6630 00003DD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6631 00003DD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6632 00003DDC 50                      	push rax
  6633 00003DDD 6A01                    	push 1	; arg count
  6634 00003DDF 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  6635 00003DE7 803805                  	cmp byte [rax], T_undefined
  6636 00003DEA 0F846E210100            	je L_error_fvar_undefined
  6637 00003DF0 803804                  	cmp byte [rax], T_closure
  6638 00003DF3 0F85E9210100            	jne L_error_non_closure
  6639 00003DF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6640 00003DFC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6641 00003DFF 483D[02000000]          	cmp rax, sob_boolean_false
  6642 00003E05 0F8516010000            	jne .L_or_end_0004
  6643                                  
  6644                                  	; preparing a non-tail-call
  6645                                  	; preparing a non-tail-call
  6646 00003E0B 488B4520                	mov rax, PARAM(0)	; param s
  6647 00003E0F 50                      	push rax
  6648 00003E10 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  6649 00003E18 803805                  	cmp byte [rax], T_undefined
  6650 00003E1B 0F843D210100            	je L_error_fvar_undefined
  6651 00003E21 50                      	push rax
  6652 00003E22 6A02                    	push 2	; arg count
  6653 00003E24 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  6654 00003E2C 803805                  	cmp byte [rax], T_undefined
  6655 00003E2F 0F8429210100            	je L_error_fvar_undefined
  6656 00003E35 803804                  	cmp byte [rax], T_closure
  6657 00003E38 0F85A4210100            	jne L_error_non_closure
  6658 00003E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6659 00003E41 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6660 00003E44 50                      	push rax
  6661 00003E45 488B4510                	mov rax, ENV
  6662 00003E49 488B4008                	mov rax, qword [rax + 8 * 1]
  6663 00003E4D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6664 00003E50 50                      	push rax
  6665 00003E51 6A02                    	push 2	; arg count
  6666 00003E53 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
  6667 00003E5B 803805                  	cmp byte [rax], T_undefined
  6668 00003E5E 0F84FA200100            	je L_error_fvar_undefined
  6669 00003E64 803804                  	cmp byte [rax], T_closure
  6670 00003E67 0F8575210100            	jne L_error_non_closure
  6671 00003E6D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6672 00003E70 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6673 00003E73 483D[02000000]          	cmp rax, sob_boolean_false
  6674 00003E79 0F8498000000            	je .L_if_else_0007
  6675                                  	; Setting up for a tail-call
  6676                                  	; preparing a non-tail-call
  6677 00003E7F 488B4520                	mov rax, PARAM(0)	; param s
  6678 00003E83 50                      	push rax
  6679 00003E84 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  6680 00003E8C 803805                  	cmp byte [rax], T_undefined
  6681 00003E8F 0F84C9200100            	je L_error_fvar_undefined
  6682 00003E95 50                      	push rax
  6683 00003E96 6A02                    	push 2	; arg count
  6684 00003E98 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  6685 00003EA0 803805                  	cmp byte [rax], T_undefined
  6686 00003EA3 0F84B5200100            	je L_error_fvar_undefined
  6687 00003EA9 803804                  	cmp byte [rax], T_closure
  6688 00003EAC 0F8530210100            	jne L_error_non_closure
  6689 00003EB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6690 00003EB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6691 00003EB8 50                      	push rax
  6692 00003EB9 6A01                    	push 1
  6693 00003EBB 488B4510                	mov rax, ENV
  6694 00003EBF 488B00                  	mov rax, qword [rax + 8 * 0]
  6695 00003EC2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6696 00003EC5 488B00                  	mov rax, qword [rax]
  6697 00003EC8 803804                  	cmp byte [rax], T_closure
  6698 00003ECB 0F8511210100            	jne L_error_non_closure
  6699 00003ED1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6700 00003ED4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  6701 00003ED8 4C8B4D00                	mov r9, qword [rbp]
  6702 00003EDC 4150                    	push r8
  6703 00003EDE 4151                    	push r9
  6704 00003EE0 41BA05000000            	mov r10, 1 + 4
  6705 00003EE6 4C8B5D18                	mov r11, COUNT
  6706 00003EEA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  6707 00003EEF 4C8D65F8                	lea r12, [rbp - 8]
  6708                                  .L_tc_recycle_frame_loop_0025:
  6709 00003EF3 4983FA00                	cmp r10, 0
  6710 00003EF7 7414                    	je .L_tc_recycle_frame_done_0025
  6711 00003EF9 4D8B2C24                	mov r13, qword [r12]
  6712 00003EFD 4D892B                  	mov qword [r11], r13
  6713 00003F00 49FFCA                  	dec r10
  6714 00003F03 4983EB08                	sub r11, 8
  6715 00003F07 4983EC08                	sub r12, 8
  6716 00003F0B EBE6                    	jmp .L_tc_recycle_frame_loop_0025
  6717                                  .L_tc_recycle_frame_done_0025:
  6718 00003F0D 498D6308                	lea rsp, [r11 + 8]
  6719 00003F11 5D                      	pop rbp
  6720 00003F12 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6721 00003F15 EB0A                    	jmp .L_if_end_0007
  6722                                  .L_if_else_0007:
  6723 00003F17 48B8-                   	mov rax, L_constants + 2
  6723 00003F19 [0200000000000000] 
  6724                                  .L_if_end_0007:
  6725                                  .L_or_end_0004:
  6726 00003F21 C9                      	leave
  6727 00003F22 C21800                  	ret AND_KILL_FRAME(1)
  6728                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6729 00003F25 803804                  	cmp byte [rax], T_closure
  6730 00003F28 0F85B4200100            	jne L_error_non_closure
  6731 00003F2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6732 00003F31 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6733 00003F34 50                      	push rax
  6734 00003F35 488B4520                	mov rax, PARAM(0)	; param loop
  6735 00003F39 8F00                    	pop qword [rax]
  6736 00003F3B 48B8-                   	mov rax, sob_void
  6736 00003F3D [0000000000000000] 
  6737                                  
  6738                                  	; preparing a non-tail-call
  6739 00003F45 488B4510                	mov rax, ENV
  6740 00003F49 488B00                  	mov rax, qword [rax + 8 * 0]
  6741 00003F4C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6742 00003F50 50                      	push rax
  6743 00003F51 6A01                    	push 1	; arg count
  6744 00003F53 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  6745 00003F5B 803805                  	cmp byte [rax], T_undefined
  6746 00003F5E 0F84FA1F0100            	je L_error_fvar_undefined
  6747 00003F64 803804                  	cmp byte [rax], T_closure
  6748 00003F67 0F8575200100            	jne L_error_non_closure
  6749 00003F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6750 00003F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6751 00003F73 483D[02000000]          	cmp rax, sob_boolean_false
  6752 00003F79 7566                    	jne .L_or_end_0005
  6753                                  
  6754                                  	; preparing a non-tail-call
  6755 00003F7B 488B4510                	mov rax, ENV
  6756 00003F7F 488B00                  	mov rax, qword [rax + 8 * 0]
  6757 00003F82 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6758 00003F86 50                      	push rax
  6759 00003F87 6A01                    	push 1	; arg count
  6760 00003F89 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
  6761 00003F91 803805                  	cmp byte [rax], T_undefined
  6762 00003F94 0F84C41F0100            	je L_error_fvar_undefined
  6763 00003F9A 803804                  	cmp byte [rax], T_closure
  6764 00003F9D 0F853F200100            	jne L_error_non_closure
  6765 00003FA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6766 00003FA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6767 00003FA9 483D[02000000]          	cmp rax, sob_boolean_false
  6768 00003FAF 7426                    	je .L_if_else_0008
  6769                                  	; preparing a non-tail-call
  6770 00003FB1 488B4510                	mov rax, ENV
  6771 00003FB5 488B00                  	mov rax, qword [rax + 8 * 0]
  6772 00003FB8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6773 00003FBC 50                      	push rax
  6774 00003FBD 6A01                    	push 1	; arg count
  6775 00003FBF 488B4520                	mov rax, PARAM(0)	; param loop
  6776 00003FC3 488B00                  	mov rax, qword [rax]
  6777 00003FC6 803804                  	cmp byte [rax], T_closure
  6778 00003FC9 0F8513200100            	jne L_error_non_closure
  6779 00003FCF FF7001                  	push SOB_CLOSURE_ENV(rax)
  6780 00003FD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6781 00003FD5 EB0A                    	jmp .L_if_end_0008
  6782                                  .L_if_else_0008:
  6783 00003FD7 48B8-                   	mov rax, L_constants + 2
  6783 00003FD9 [0200000000000000] 
  6784                                  .L_if_end_0008:
  6785                                  .L_or_end_0005:
  6786 00003FE1 C9                      	leave
  6787 00003FE2 C21800                  	ret AND_KILL_FRAME(1)
  6788                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6789 00003FE5 803804                  	cmp byte [rax], T_closure
  6790 00003FE8 0F85F41F0100            	jne L_error_non_closure
  6791 00003FEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6792 00003FF1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  6793 00003FF5 4C8B4D00                	mov r9, qword [rbp]
  6794 00003FF9 4150                    	push r8
  6795 00003FFB 4151                    	push r9
  6796 00003FFD 41BA05000000            	mov r10, 1 + 4
  6797 00004003 4C8B5D18                	mov r11, COUNT
  6798 00004007 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  6799 0000400C 4C8D65F8                	lea r12, [rbp - 8]
  6800                                  .L_tc_recycle_frame_loop_0026:
  6801 00004010 4983FA00                	cmp r10, 0
  6802 00004014 7414                    	je .L_tc_recycle_frame_done_0026
  6803 00004016 4D8B2C24                	mov r13, qword [r12]
  6804 0000401A 4D892B                  	mov qword [r11], r13
  6805 0000401D 49FFCA                  	dec r10
  6806 00004020 4983EB08                	sub r11, 8
  6807 00004024 4983EC08                	sub r12, 8
  6808 00004028 EBE6                    	jmp .L_tc_recycle_frame_loop_0026
  6809                                  .L_tc_recycle_frame_done_0026:
  6810 0000402A 498D6308                	lea rsp, [r11 + 8]
  6811 0000402E 5D                      	pop rbp
  6812 0000402F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6813 00004032 C9                      	leave
  6814 00004033 C21800                  	ret AND_KILL_FRAME(1)
  6815                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6816 00004036 48890425[11100000]      	mov qword [free_var_32], rax
  6817 0000403E 48B8-                   	mov rax, sob_void
  6817 00004040 [0000000000000000] 
  6818                                  
  6819 00004048 4889C7                  	mov rdi, rax
  6820 0000404B E890220100              	call print_sexpr_if_not_void
  6821                                  	; preparing a non-tail-call
  6822 00004050 48B8-                   	mov rax, L_constants + 1993
  6822 00004052 [C907000000000000] 
  6823 0000405A 50                      	push rax
  6824 0000405B 6A01                    	push 1	; arg count
  6825 0000405D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6826 00004062 E824200100              	call malloc
  6827 00004067 50                      	push rax
  6828 00004068 BF00000000              	mov rdi, 8 * 0	; new rib
  6829 0000406D E819200100              	call malloc
  6830 00004072 50                      	push rax
  6831 00004073 BF08000000              	mov rdi, 8 * 1	; extended env
  6832 00004078 E80E200100              	call malloc
  6833 0000407D 488B7D10                	mov rdi, ENV
  6834 00004081 BE00000000              	mov rsi, 0
  6835 00004086 BA01000000              	mov rdx, 1
  6836                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6837 0000408B 4883FE00                	cmp rsi, 0
  6838 0000408F 7410                    	je .L_lambda_simple_env_end_0028
  6839 00004091 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6840 00004095 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6841 00004099 48FFC6                  	inc rsi
  6842 0000409C 48FFC2                  	inc rdx
  6843 0000409F EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6844                                  .L_lambda_simple_env_end_0028:
  6845 000040A1 5B                      	pop rbx
  6846 000040A2 BE00000000              	mov rsi, 0
  6847                                  .L_lambda_simple_params_loop_0028:	; copy params
  6848 000040A7 4883FE00                	cmp rsi, 0
  6849 000040AB 740E                    	je .L_lambda_simple_params_end_0028
  6850 000040AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6851 000040B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6852 000040B6 48FFC6                  	inc rsi
  6853 000040B9 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6854                                  .L_lambda_simple_params_end_0028:
  6855 000040BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6856 000040BE 4889C3                  	mov rbx, rax
  6857 000040C1 58                      	pop rax
  6858 000040C2 C60004                  	mov byte [rax], T_closure
  6859 000040C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6860 000040C9 48C74009[D6400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6861 000040D1 E938070000              	jmp .L_lambda_simple_end_0028
  6862                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6863 000040D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6864 000040DC 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6865 000040DE FF742410                	push qword [rsp + 8 * 2]
  6866 000040E2 6A01                    	push 1
  6867 000040E4 E95B1F0100              	jmp L_error_incorrect_arity_simple
  6868                                  .L_lambda_simple_arity_check_ok_0028:
  6869 000040E9 C8000000                	enter 0, 0
  6870 000040ED BF08000000              	mov rdi, 8 * 1
  6871 000040F2 E8941F0100              	call malloc
  6872 000040F7 488B5D20                	mov rbx, PARAM(0)
  6873 000040FB 488918                  	mov qword [rax], rbx
  6874 000040FE 48894520                	mov PARAM(0), rax
  6875 00004102 48B8-                   	mov rax, sob_void
  6875 00004104 [0000000000000000] 
  6876                                  
  6877                                  	; preparing a non-tail-call
  6878 0000410C 6A00                    	push 0	; arg count
  6879 0000410E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6880 00004113 E8731F0100              	call malloc
  6881 00004118 50                      	push rax
  6882 00004119 BF08000000              	mov rdi, 8 * 1	; new rib
  6883 0000411E E8681F0100              	call malloc
  6884 00004123 50                      	push rax
  6885 00004124 BF10000000              	mov rdi, 8 * 2	; extended env
  6886 00004129 E85D1F0100              	call malloc
  6887 0000412E 488B7D10                	mov rdi, ENV
  6888 00004132 BE00000000              	mov rsi, 0
  6889 00004137 BA01000000              	mov rdx, 1
  6890                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6891 0000413C 4883FE01                	cmp rsi, 1
  6892 00004140 7410                    	je .L_lambda_simple_env_end_0029
  6893 00004142 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6894 00004146 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6895 0000414A 48FFC6                  	inc rsi
  6896 0000414D 48FFC2                  	inc rdx
  6897 00004150 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6898                                  .L_lambda_simple_env_end_0029:
  6899 00004152 5B                      	pop rbx
  6900 00004153 BE00000000              	mov rsi, 0
  6901                                  .L_lambda_simple_params_loop_0029:	; copy params
  6902 00004158 4883FE01                	cmp rsi, 1
  6903 0000415C 740E                    	je .L_lambda_simple_params_end_0029
  6904 0000415E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6905 00004163 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6906 00004167 48FFC6                  	inc rsi
  6907 0000416A EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6908                                  .L_lambda_simple_params_end_0029:
  6909 0000416C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6910 0000416F 4889C3                  	mov rbx, rax
  6911 00004172 58                      	pop rax
  6912 00004173 C60004                  	mov byte [rax], T_closure
  6913 00004176 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6914 0000417A 48C74009[87410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6915 00004182 E943010000              	jmp .L_lambda_simple_end_0029
  6916                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6917 00004187 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6918 0000418D 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6919 0000418F FF742410                	push qword [rsp + 8 * 2]
  6920 00004193 6A02                    	push 2
  6921 00004195 E9AA1E0100              	jmp L_error_incorrect_arity_simple
  6922                                  .L_lambda_simple_arity_check_ok_0029:
  6923 0000419A C8000000                	enter 0, 0
  6924                                  	; preparing a non-tail-call
  6925 0000419E 488B4528                	mov rax, PARAM(1)	; param s
  6926 000041A2 50                      	push rax
  6927 000041A3 6A01                    	push 1	; arg count
  6928 000041A5 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  6929 000041AD 803805                  	cmp byte [rax], T_undefined
  6930 000041B0 0F84A81D0100            	je L_error_fvar_undefined
  6931 000041B6 803804                  	cmp byte [rax], T_closure
  6932 000041B9 0F85231E0100            	jne L_error_non_closure
  6933 000041BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  6934 000041C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6935 000041C5 483D[02000000]          	cmp rax, sob_boolean_false
  6936 000041CB 740F                    	je .L_if_else_0009
  6937 000041CD 48B8-                   	mov rax, L_constants + 1
  6937 000041CF [0100000000000000] 
  6938 000041D7 E9EA000000              	jmp .L_if_end_0009
  6939                                  .L_if_else_0009:
  6940                                  	; Setting up for a tail-call
  6941                                  	; preparing a non-tail-call
  6942                                  	; preparing a non-tail-call
  6943 000041DC 488B4528                	mov rax, PARAM(1)	; param s
  6944 000041E0 50                      	push rax
  6945 000041E1 6A01                    	push 1	; arg count
  6946 000041E3 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  6947 000041EB 803805                  	cmp byte [rax], T_undefined
  6948 000041EE 0F846A1D0100            	je L_error_fvar_undefined
  6949 000041F4 803804                  	cmp byte [rax], T_closure
  6950 000041F7 0F85E51D0100            	jne L_error_non_closure
  6951 000041FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6952 00004200 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6953 00004203 50                      	push rax
  6954 00004204 6A01                    	push 1	; arg count
  6955 00004206 488B4520                	mov rax, PARAM(0)	; param f
  6956 0000420A 803804                  	cmp byte [rax], T_closure
  6957 0000420D 0F85CF1D0100            	jne L_error_non_closure
  6958 00004213 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6959 00004216 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6960 00004219 50                      	push rax
  6961                                  	; preparing a non-tail-call
  6962                                  	; preparing a non-tail-call
  6963 0000421A 488B4528                	mov rax, PARAM(1)	; param s
  6964 0000421E 50                      	push rax
  6965 0000421F 6A01                    	push 1	; arg count
  6966 00004221 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  6967 00004229 803805                  	cmp byte [rax], T_undefined
  6968 0000422C 0F842C1D0100            	je L_error_fvar_undefined
  6969 00004232 803804                  	cmp byte [rax], T_closure
  6970 00004235 0F85A71D0100            	jne L_error_non_closure
  6971 0000423B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6972 0000423E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6973 00004241 50                      	push rax
  6974 00004242 488B4520                	mov rax, PARAM(0)	; param f
  6975 00004246 50                      	push rax
  6976 00004247 6A02                    	push 2	; arg count
  6977 00004249 488B4510                	mov rax, ENV
  6978 0000424D 488B00                  	mov rax, qword [rax + 8 * 0]
  6979 00004250 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6980 00004253 488B00                  	mov rax, qword [rax]
  6981 00004256 803804                  	cmp byte [rax], T_closure
  6982 00004259 0F85831D0100            	jne L_error_non_closure
  6983 0000425F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6984 00004262 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6985 00004265 50                      	push rax
  6986 00004266 6A02                    	push 2
  6987 00004268 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  6988 00004270 803805                  	cmp byte [rax], T_undefined
  6989 00004273 0F84E51C0100            	je L_error_fvar_undefined
  6990 00004279 803804                  	cmp byte [rax], T_closure
  6991 0000427C 0F85601D0100            	jne L_error_non_closure
  6992 00004282 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6993 00004285 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  6994 00004289 4C8B4D00                	mov r9, qword [rbp]
  6995 0000428D 4150                    	push r8
  6996 0000428F 4151                    	push r9
  6997 00004291 41BA06000000            	mov r10, 2 + 4
  6998 00004297 4C8B5D18                	mov r11, COUNT
  6999 0000429B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7000 000042A0 4C8D65F8                	lea r12, [rbp - 8]
  7001                                  .L_tc_recycle_frame_loop_0027:
  7002 000042A4 4983FA00                	cmp r10, 0
  7003 000042A8 7414                    	je .L_tc_recycle_frame_done_0027
  7004 000042AA 4D8B2C24                	mov r13, qword [r12]
  7005 000042AE 4D892B                  	mov qword [r11], r13
  7006 000042B1 49FFCA                  	dec r10
  7007 000042B4 4983EB08                	sub r11, 8
  7008 000042B8 4983EC08                	sub r12, 8
  7009 000042BC EBE6                    	jmp .L_tc_recycle_frame_loop_0027
  7010                                  .L_tc_recycle_frame_done_0027:
  7011 000042BE 498D6308                	lea rsp, [r11 + 8]
  7012 000042C2 5D                      	pop rbp
  7013 000042C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7014                                  .L_if_end_0009:
  7015 000042C6 C9                      	leave
  7016 000042C7 C22000                  	ret AND_KILL_FRAME(2)
  7017                                  .L_lambda_simple_end_0029:	; new closure is in rax
  7018 000042CA 803804                  	cmp byte [rax], T_closure
  7019 000042CD 0F850F1D0100            	jne L_error_non_closure
  7020 000042D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7021 000042D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7022 000042D9 50                      	push rax
  7023 000042DA 488B4520                	mov rax, PARAM(0)	; param map1
  7024 000042DE 8F00                    	pop qword [rax]
  7025 000042E0 48B8-                   	mov rax, sob_void
  7025 000042E2 [0000000000000000] 
  7026                                  
  7027                                  	; preparing a non-tail-call
  7028 000042EA 48B8-                   	mov rax, L_constants + 1993
  7028 000042EC [C907000000000000] 
  7029 000042F4 50                      	push rax
  7030 000042F5 6A01                    	push 1	; arg count
  7031 000042F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7032 000042FC E88A1D0100              	call malloc
  7033 00004301 50                      	push rax
  7034 00004302 BF08000000              	mov rdi, 8 * 1	; new rib
  7035 00004307 E87F1D0100              	call malloc
  7036 0000430C 50                      	push rax
  7037 0000430D BF10000000              	mov rdi, 8 * 2	; extended env
  7038 00004312 E8741D0100              	call malloc
  7039 00004317 488B7D10                	mov rdi, ENV
  7040 0000431B BE00000000              	mov rsi, 0
  7041 00004320 BA01000000              	mov rdx, 1
  7042                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  7043 00004325 4883FE01                	cmp rsi, 1
  7044 00004329 7410                    	je .L_lambda_simple_env_end_002a
  7045 0000432B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7046 0000432F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7047 00004333 48FFC6                  	inc rsi
  7048 00004336 48FFC2                  	inc rdx
  7049 00004339 EBEA                    	jmp .L_lambda_simple_env_loop_002a
  7050                                  .L_lambda_simple_env_end_002a:
  7051 0000433B 5B                      	pop rbx
  7052 0000433C BE00000000              	mov rsi, 0
  7053                                  .L_lambda_simple_params_loop_002a:	; copy params
  7054 00004341 4883FE01                	cmp rsi, 1
  7055 00004345 740E                    	je .L_lambda_simple_params_end_002a
  7056 00004347 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7057 0000434C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7058 00004350 48FFC6                  	inc rsi
  7059 00004353 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  7060                                  .L_lambda_simple_params_end_002a:
  7061 00004355 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7062 00004358 4889C3                  	mov rbx, rax
  7063 0000435B 58                      	pop rax
  7064 0000435C C60004                  	mov byte [rax], T_closure
  7065 0000435F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7066 00004363 48C74009[70430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  7067 0000436B E98B040000              	jmp .L_lambda_simple_end_002a
  7068                                  .L_lambda_simple_code_002a:	; lambda-simple body
  7069 00004370 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7070 00004376 740B                    	je .L_lambda_simple_arity_check_ok_002a
  7071 00004378 FF742410                	push qword [rsp + 8 * 2]
  7072 0000437C 6A01                    	push 1
  7073 0000437E E9C11C0100              	jmp L_error_incorrect_arity_simple
  7074                                  .L_lambda_simple_arity_check_ok_002a:
  7075 00004383 C8000000                	enter 0, 0
  7076 00004387 BF08000000              	mov rdi, 8 * 1
  7077 0000438C E8FA1C0100              	call malloc
  7078 00004391 488B5D20                	mov rbx, PARAM(0)
  7079 00004395 488918                  	mov qword [rax], rbx
  7080 00004398 48894520                	mov PARAM(0), rax
  7081 0000439C 48B8-                   	mov rax, sob_void
  7081 0000439E [0000000000000000] 
  7082                                  
  7083                                  	; preparing a non-tail-call
  7084 000043A6 6A00                    	push 0	; arg count
  7085 000043A8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7086 000043AD E8D91C0100              	call malloc
  7087 000043B2 50                      	push rax
  7088 000043B3 BF08000000              	mov rdi, 8 * 1	; new rib
  7089 000043B8 E8CE1C0100              	call malloc
  7090 000043BD 50                      	push rax
  7091 000043BE BF18000000              	mov rdi, 8 * 3	; extended env
  7092 000043C3 E8C31C0100              	call malloc
  7093 000043C8 488B7D10                	mov rdi, ENV
  7094 000043CC BE00000000              	mov rsi, 0
  7095 000043D1 BA01000000              	mov rdx, 1
  7096                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7097 000043D6 4883FE02                	cmp rsi, 2
  7098 000043DA 7410                    	je .L_lambda_simple_env_end_002b
  7099 000043DC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7100 000043E0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7101 000043E4 48FFC6                  	inc rsi
  7102 000043E7 48FFC2                  	inc rdx
  7103 000043EA EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7104                                  .L_lambda_simple_env_end_002b:
  7105 000043EC 5B                      	pop rbx
  7106 000043ED BE00000000              	mov rsi, 0
  7107                                  .L_lambda_simple_params_loop_002b:	; copy params
  7108 000043F2 4883FE01                	cmp rsi, 1
  7109 000043F6 740E                    	je .L_lambda_simple_params_end_002b
  7110 000043F8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7111 000043FD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7112 00004401 48FFC6                  	inc rsi
  7113 00004404 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7114                                  .L_lambda_simple_params_end_002b:
  7115 00004406 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7116 00004409 4889C3                  	mov rbx, rax
  7117 0000440C 58                      	pop rax
  7118 0000440D C60004                  	mov byte [rax], T_closure
  7119 00004410 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7120 00004414 48C74009[21440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7121 0000441C E996010000              	jmp .L_lambda_simple_end_002b
  7122                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7123 00004421 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7124 00004427 740B                    	je .L_lambda_simple_arity_check_ok_002b
  7125 00004429 FF742410                	push qword [rsp + 8 * 2]
  7126 0000442D 6A02                    	push 2
  7127 0000442F E9101C0100              	jmp L_error_incorrect_arity_simple
  7128                                  .L_lambda_simple_arity_check_ok_002b:
  7129 00004434 C8000000                	enter 0, 0
  7130                                  	; preparing a non-tail-call
  7131                                  	; preparing a non-tail-call
  7132 00004438 488B4528                	mov rax, PARAM(1)	; param s
  7133 0000443C 50                      	push rax
  7134 0000443D 6A01                    	push 1	; arg count
  7135 0000443F 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  7136 00004447 803805                  	cmp byte [rax], T_undefined
  7137 0000444A 0F840E1B0100            	je L_error_fvar_undefined
  7138 00004450 803804                  	cmp byte [rax], T_closure
  7139 00004453 0F85891B0100            	jne L_error_non_closure
  7140 00004459 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7141 0000445C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7142 0000445F 50                      	push rax
  7143 00004460 6A01                    	push 1	; arg count
  7144 00004462 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  7145 0000446A 803805                  	cmp byte [rax], T_undefined
  7146 0000446D 0F84EB1A0100            	je L_error_fvar_undefined
  7147 00004473 803804                  	cmp byte [rax], T_closure
  7148 00004476 0F85661B0100            	jne L_error_non_closure
  7149 0000447C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7150 0000447F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7151 00004482 483D[02000000]          	cmp rax, sob_boolean_false
  7152 00004488 740F                    	je .L_if_else_000a
  7153 0000448A 48B8-                   	mov rax, L_constants + 1
  7153 0000448C [0100000000000000] 
  7154 00004494 E91A010000              	jmp .L_if_end_000a
  7155                                  .L_if_else_000a:
  7156                                  	; Setting up for a tail-call
  7157                                  	; preparing a non-tail-call
  7158                                  	; preparing a non-tail-call
  7159 00004499 488B4528                	mov rax, PARAM(1)	; param s
  7160 0000449D 50                      	push rax
  7161 0000449E 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  7162 000044A6 803805                  	cmp byte [rax], T_undefined
  7163 000044A9 0F84AF1A0100            	je L_error_fvar_undefined
  7164 000044AF 50                      	push rax
  7165 000044B0 6A02                    	push 2	; arg count
  7166 000044B2 488B4510                	mov rax, ENV
  7167 000044B6 488B4008                	mov rax, qword [rax + 8 * 1]
  7168 000044BA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7169 000044BD 488B00                  	mov rax, qword [rax]
  7170 000044C0 803804                  	cmp byte [rax], T_closure
  7171 000044C3 0F85191B0100            	jne L_error_non_closure
  7172 000044C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7173 000044CC FF5009                  	call SOB_CLOSURE_CODE(rax)
  7174 000044CF 50                      	push rax
  7175 000044D0 488B4520                	mov rax, PARAM(0)	; param f
  7176 000044D4 50                      	push rax
  7177 000044D5 6A02                    	push 2	; arg count
  7178 000044D7 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
  7179 000044DF 803805                  	cmp byte [rax], T_undefined
  7180 000044E2 0F84761A0100            	je L_error_fvar_undefined
  7181 000044E8 803804                  	cmp byte [rax], T_closure
  7182 000044EB 0F85F11A0100            	jne L_error_non_closure
  7183 000044F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7184 000044F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7185 000044F7 50                      	push rax
  7186                                  	; preparing a non-tail-call
  7187                                  	; preparing a non-tail-call
  7188 000044F8 488B4528                	mov rax, PARAM(1)	; param s
  7189 000044FC 50                      	push rax
  7190 000044FD 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  7191 00004505 803805                  	cmp byte [rax], T_undefined
  7192 00004508 0F84501A0100            	je L_error_fvar_undefined
  7193 0000450E 50                      	push rax
  7194 0000450F 6A02                    	push 2	; arg count
  7195 00004511 488B4510                	mov rax, ENV
  7196 00004515 488B4008                	mov rax, qword [rax + 8 * 1]
  7197 00004519 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7198 0000451C 488B00                  	mov rax, qword [rax]
  7199 0000451F 803804                  	cmp byte [rax], T_closure
  7200 00004522 0F85BA1A0100            	jne L_error_non_closure
  7201 00004528 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7202 0000452B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7203 0000452E 50                      	push rax
  7204 0000452F 488B4520                	mov rax, PARAM(0)	; param f
  7205 00004533 50                      	push rax
  7206 00004534 6A02                    	push 2	; arg count
  7207 00004536 488B4510                	mov rax, ENV
  7208 0000453A 488B00                  	mov rax, qword [rax + 8 * 0]
  7209 0000453D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map-list
  7210 00004540 488B00                  	mov rax, qword [rax]
  7211 00004543 803804                  	cmp byte [rax], T_closure
  7212 00004546 0F85961A0100            	jne L_error_non_closure
  7213 0000454C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7214 0000454F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7215 00004552 50                      	push rax
  7216 00004553 6A02                    	push 2
  7217 00004555 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  7218 0000455D 803805                  	cmp byte [rax], T_undefined
  7219 00004560 0F84F8190100            	je L_error_fvar_undefined
  7220 00004566 803804                  	cmp byte [rax], T_closure
  7221 00004569 0F85731A0100            	jne L_error_non_closure
  7222 0000456F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7223 00004572 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7224 00004576 4C8B4D00                	mov r9, qword [rbp]
  7225 0000457A 4150                    	push r8
  7226 0000457C 4151                    	push r9
  7227 0000457E 41BA06000000            	mov r10, 2 + 4
  7228 00004584 4C8B5D18                	mov r11, COUNT
  7229 00004588 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7230 0000458D 4C8D65F8                	lea r12, [rbp - 8]
  7231                                  .L_tc_recycle_frame_loop_0028:
  7232 00004591 4983FA00                	cmp r10, 0
  7233 00004595 7414                    	je .L_tc_recycle_frame_done_0028
  7234 00004597 4D8B2C24                	mov r13, qword [r12]
  7235 0000459B 4D892B                  	mov qword [r11], r13
  7236 0000459E 49FFCA                  	dec r10
  7237 000045A1 4983EB08                	sub r11, 8
  7238 000045A5 4983EC08                	sub r12, 8
  7239 000045A9 EBE6                    	jmp .L_tc_recycle_frame_loop_0028
  7240                                  .L_tc_recycle_frame_done_0028:
  7241 000045AB 498D6308                	lea rsp, [r11 + 8]
  7242 000045AF 5D                      	pop rbp
  7243 000045B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7244                                  .L_if_end_000a:
  7245 000045B3 C9                      	leave
  7246 000045B4 C22000                  	ret AND_KILL_FRAME(2)
  7247                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7248 000045B7 803804                  	cmp byte [rax], T_closure
  7249 000045BA 0F85221A0100            	jne L_error_non_closure
  7250 000045C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7251 000045C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7252 000045C6 50                      	push rax
  7253 000045C7 488B4520                	mov rax, PARAM(0)	; param map-list
  7254 000045CB 8F00                    	pop qword [rax]
  7255 000045CD 48B8-                   	mov rax, sob_void
  7255 000045CF [0000000000000000] 
  7256                                  
  7257 000045D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7258 000045DC E8AA1A0100              	call malloc
  7259 000045E1 50                      	push rax
  7260 000045E2 BF08000000              	mov rdi, 8 * 1	; new rib
  7261 000045E7 E89F1A0100              	call malloc
  7262 000045EC 50                      	push rax
  7263 000045ED BF18000000              	mov rdi, 8 * 3	; extended env
  7264 000045F2 E8941A0100              	call malloc
  7265 000045F7 488B7D10                	mov rdi, ENV
  7266 000045FB BE00000000              	mov rsi, 0
  7267 00004600 BA01000000              	mov rdx, 1
  7268                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  7269 00004605 4883FE02                	cmp rsi, 2
  7270 00004609 7410                    	je .L_lambda_opt_env_end_0006
  7271 0000460B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7272 0000460F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7273 00004613 48FFC6                  	inc rsi
  7274 00004616 48FFC2                  	inc rdx
  7275 00004619 EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7276                                  .L_lambda_opt_env_end_0006:
  7277 0000461B 5B                      	pop rbx
  7278 0000461C BE00000000              	mov rsi, 0
  7279                                  .L_lambda_opt_params_loop_0006:	; copy params
  7280 00004621 4883FE01                	cmp rsi, 1
  7281 00004625 740E                    	je .L_lambda_opt_params_end_0006
  7282 00004627 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7283 0000462C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7284 00004630 48FFC6                  	inc rsi
  7285 00004633 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7286                                  .L_lambda_opt_params_end_0006:
  7287 00004635 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7288 00004638 4889C3                  	mov rbx, rax
  7289 0000463B 58                      	pop rax
  7290 0000463C C60004                  	mov byte [rax], T_closure
  7291 0000463F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7292 00004643 48C74009[50460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7293 0000464B E9A7010000              	jmp .L_lambda_opt_end_0006
  7294                                  .L_lambda_opt_code_0006:
  7295 00004650 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  7296 00004655 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  7297 00004659 7407                    	je .L_lambda_opt_arity_check_exact_0006	; Jump if arity matches
  7298 0000465B 7F4C                    	jg .L_lambda_opt_arity_check_more_0006	; Jump if more arguments passed
  7299 0000465D E9F6190100              	jmp L_error_incorrect_arity_opt
  7300                                  .L_lambda_opt_arity_check_exact_0006:
  7301 00004662 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  7302 00004665 4983C603                	add r14, 3 ; add 3 first stack values
  7303 00004669 41BF00000000            	mov r15, 0 ; r15 = index
  7304 0000466F 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  7305 00004673 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  7306 0000467B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7307                                  .L_lambda_opt_stack_shrink_loop_0006:
  7308 0000467D 4983FE00                	cmp r14, 0
  7309 00004681 7E11                    	jle .L_make_lambda_opt_exact_finish_0006
  7310 00004683 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  7311 00004688 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  7312 0000468C 49FFCE                  	dec r14 ; next loop value
  7313 0000468F 49FFC7                  	inc r15 ; update i
  7314 00004692 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7315                                  .L_make_lambda_opt_exact_finish_0006:
  7316 00004694 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  7317 0000469C 49FFC2                  	inc r10
  7318 0000469F 4C89542410              	mov qword [rsp + 8 * 2], r10
  7319 000046A4 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0006
  7320                                  .L_lambda_opt_arity_check_more_0006:
  7321 000046A9 4D89D6                  	mov r14, r10 ; r14 = num args
  7322 000046AC 4D89D7                  	mov r15, r10 ; r15 = num args
  7323 000046AF 41B901000000            	mov r9, 1; r9 = number of params 
  7324 000046B5 4D29CE                  	sub r14, r9 ; r14 = extra args
  7325 000046B8 4D01F1                  	add r9, r14 ; r9 = num args
  7326 000046BB 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  7326 000046BD [0100000000000000] 
  7327 000046C5 EB00                    	jmp .L_make_lambda_opt_arg_list_0006
  7328                                  .L_make_lambda_opt_arg_list_0006:
  7329 000046C7 4983FE00                	cmp r14, 0
  7330 000046CB 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0006
  7331 000046CD 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  7332 000046D2 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  7333 000046D5 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  7334 000046DB E8AB190100              	call malloc                         ; Allocate memory, result in rax
  7335 000046E0 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  7336 000046E3 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  7337 000046E7 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  7338 000046EB 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  7339 000046EE 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  7340 000046F1 49FFC9                  	dec r9                              ; args index minus 1
  7341 000046F4 49FFCE                  	dec r14                             ; next iteration
  7342 000046F7 EBCE                    	jmp .L_make_lambda_opt_arg_list_0006
  7343                                  .L_make_lambda_opt_stack_fixed_0006:
  7344 000046F9 4D89FE                  	mov r14, r15 ; r14 = num args
  7345 000046FC 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  7346 000046FF 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  7347 00004703 41BA01000000            	mov r10, 1; r10 = num of params
  7348 00004709 4D29D6                  	sub r14, r10 ; r14 = extra args
  7349 0000470C 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  7350 0000470F 49FFCE                  	dec r14 ; how much we need to change stack wise?
  7351 00004712 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  7352 00004717 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0006
  7353                                  .L_lambda_opt_stack_shrink_loop_more_0006:
  7354 00004719 4983F800                	cmp r8, 0
  7355 0000471D 7E15                    	jle .L_make_lambda_opt_more_finish_0006
  7356 0000471F 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  7357 00004723 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  7358 00004727 4D8D26                  	lea r12, [r14]
  7359 0000472A 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  7360 0000472F 49FFC8                  	dec r8 ; next iteration
  7361 00004732 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0006
  7362                                  .L_make_lambda_opt_more_finish_0006:
  7363 00004734 4D89F8                  	mov r8, r15 ; num of args
  7364 00004737 41BA01000000            	mov r10, 1
  7365 0000473D 4D29D0                  	sub r8, r10 ; num of new args
  7366 00004740 49FFC0                  	inc r8
  7367 00004743 4C89442420              	mov qword [rsp + 8 * 4], r8
  7368 00004748 4883C410                	add rsp, 8 * 2  ; 
  7369 0000474C EB00                    	jmp .L_lambda_opt_stack_adjusted_0006
  7370                                  .L_lambda_opt_stack_adjusted_0006:
  7371 0000474E C8000000                	enter 0, 0
  7372                                  	; preparing a non-tail-call
  7373 00004752 488B4528                	mov rax, PARAM(1)	; param s
  7374 00004756 50                      	push rax
  7375 00004757 6A01                    	push 1	; arg count
  7376 00004759 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  7377 00004761 803805                  	cmp byte [rax], T_undefined
  7378 00004764 0F84F4170100            	je L_error_fvar_undefined
  7379 0000476A 803804                  	cmp byte [rax], T_closure
  7380 0000476D 0F856F180100            	jne L_error_non_closure
  7381 00004773 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7382 00004776 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7383 00004779 483D[02000000]          	cmp rax, sob_boolean_false
  7384 0000477F 740C                    	je .L_if_else_000b
  7385 00004781 48B8-                   	mov rax, L_constants + 1
  7385 00004783 [0100000000000000] 
  7386 0000478B EB66                    	jmp .L_if_end_000b
  7387                                  .L_if_else_000b:
  7388                                  	; Setting up for a tail-call
  7389 0000478D 488B4520                	mov rax, PARAM(0)	; param f
  7390 00004791 50                      	push rax
  7391 00004792 488B4528                	mov rax, PARAM(1)	; param s
  7392 00004796 50                      	push rax
  7393 00004797 6A02                    	push 2
  7394 00004799 488B4510                	mov rax, ENV
  7395 0000479D 488B00                  	mov rax, qword [rax + 8 * 0]
  7396 000047A0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map-list
  7397 000047A3 488B00                  	mov rax, qword [rax]
  7398 000047A6 803804                  	cmp byte [rax], T_closure
  7399 000047A9 0F8533180100            	jne L_error_non_closure
  7400 000047AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7401 000047B2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7402 000047B6 4C8B4D00                	mov r9, qword [rbp]
  7403 000047BA 4150                    	push r8
  7404 000047BC 4151                    	push r9
  7405 000047BE 41BA06000000            	mov r10, 2 + 4
  7406 000047C4 4C8B5D18                	mov r11, COUNT
  7407 000047C8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7408 000047CD 4C8D65F8                	lea r12, [rbp - 8]
  7409                                  .L_tc_recycle_frame_loop_0029:
  7410 000047D1 4983FA00                	cmp r10, 0
  7411 000047D5 7414                    	je .L_tc_recycle_frame_done_0029
  7412 000047D7 4D8B2C24                	mov r13, qword [r12]
  7413 000047DB 4D892B                  	mov qword [r11], r13
  7414 000047DE 49FFCA                  	dec r10
  7415 000047E1 4983EB08                	sub r11, 8
  7416 000047E5 4983EC08                	sub r12, 8
  7417 000047E9 EBE6                    	jmp .L_tc_recycle_frame_loop_0029
  7418                                  .L_tc_recycle_frame_done_0029:
  7419 000047EB 498D6308                	lea rsp, [r11 + 8]
  7420 000047EF 5D                      	pop rbp
  7421 000047F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7422                                  .L_if_end_000b:
  7423 000047F3 C9                      	leave
  7424 000047F4 C21800                  	ret AND_KILL_FRAME(1)
  7425                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7426 000047F7 C9                      	leave
  7427 000047F8 C21800                  	ret AND_KILL_FRAME(1)
  7428                                  .L_lambda_simple_end_002a:	; new closure is in rax
  7429 000047FB 803804                  	cmp byte [rax], T_closure
  7430 000047FE 0F85DE170100            	jne L_error_non_closure
  7431 00004804 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7432 00004807 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7433 0000480A C9                      	leave
  7434 0000480B C21800                  	ret AND_KILL_FRAME(1)
  7435                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7436 0000480E 803804                  	cmp byte [rax], T_closure
  7437 00004811 0F85CB170100            	jne L_error_non_closure
  7438 00004817 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7439 0000481A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7440 0000481D 48890425[D9140000]      	mov qword [free_var_104], rax
  7441 00004825 48B8-                   	mov rax, sob_void
  7441 00004827 [0000000000000000] 
  7442                                  
  7443 0000482F 4889C7                  	mov rdi, rax
  7444 00004832 E8A91A0100              	call print_sexpr_if_not_void
  7445 00004837 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7446 0000483C E84A180100              	call malloc
  7447 00004841 50                      	push rax
  7448 00004842 BF00000000              	mov rdi, 8 * 0	; new rib
  7449 00004847 E83F180100              	call malloc
  7450 0000484C 50                      	push rax
  7451 0000484D BF08000000              	mov rdi, 8 * 1	; extended env
  7452 00004852 E834180100              	call malloc
  7453 00004857 488B7D10                	mov rdi, ENV
  7454 0000485B BE00000000              	mov rsi, 0
  7455 00004860 BA01000000              	mov rdx, 1
  7456                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7457 00004865 4883FE00                	cmp rsi, 0
  7458 00004869 7410                    	je .L_lambda_simple_env_end_002c
  7459 0000486B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7460 0000486F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7461 00004873 48FFC6                  	inc rsi
  7462 00004876 48FFC2                  	inc rdx
  7463 00004879 EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7464                                  .L_lambda_simple_env_end_002c:
  7465 0000487B 5B                      	pop rbx
  7466 0000487C BE00000000              	mov rsi, 0
  7467                                  .L_lambda_simple_params_loop_002c:	; copy params
  7468 00004881 4883FE00                	cmp rsi, 0
  7469 00004885 740E                    	je .L_lambda_simple_params_end_002c
  7470 00004887 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7471 0000488C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7472 00004890 48FFC6                  	inc rsi
  7473 00004893 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7474                                  .L_lambda_simple_params_end_002c:
  7475 00004895 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7476 00004898 4889C3                  	mov rbx, rax
  7477 0000489B 58                      	pop rax
  7478 0000489C C60004                  	mov byte [rax], T_closure
  7479 0000489F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7480 000048A3 48C74009[B0480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7481 000048AB E98A010000              	jmp .L_lambda_simple_end_002c
  7482                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7483 000048B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7484 000048B6 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7485 000048B8 FF742410                	push qword [rsp + 8 * 2]
  7486 000048BC 6A01                    	push 1
  7487 000048BE E981170100              	jmp L_error_incorrect_arity_simple
  7488                                  .L_lambda_simple_arity_check_ok_002c:
  7489 000048C3 C8000000                	enter 0, 0
  7490                                  	; Setting up for a tail-call
  7491 000048C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7492 000048CC E8BA170100              	call malloc
  7493 000048D1 50                      	push rax
  7494 000048D2 BF08000000              	mov rdi, 8 * 1	; new rib
  7495 000048D7 E8AF170100              	call malloc
  7496 000048DC 50                      	push rax
  7497 000048DD BF10000000              	mov rdi, 8 * 2	; extended env
  7498 000048E2 E8A4170100              	call malloc
  7499 000048E7 488B7D10                	mov rdi, ENV
  7500 000048EB BE00000000              	mov rsi, 0
  7501 000048F0 BA01000000              	mov rdx, 1
  7502                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7503 000048F5 4883FE01                	cmp rsi, 1
  7504 000048F9 7410                    	je .L_lambda_simple_env_end_002d
  7505 000048FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7506 000048FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7507 00004903 48FFC6                  	inc rsi
  7508 00004906 48FFC2                  	inc rdx
  7509 00004909 EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7510                                  .L_lambda_simple_env_end_002d:
  7511 0000490B 5B                      	pop rbx
  7512 0000490C BE00000000              	mov rsi, 0
  7513                                  .L_lambda_simple_params_loop_002d:	; copy params
  7514 00004911 4883FE01                	cmp rsi, 1
  7515 00004915 740E                    	je .L_lambda_simple_params_end_002d
  7516 00004917 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7517 0000491C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7518 00004920 48FFC6                  	inc rsi
  7519 00004923 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7520                                  .L_lambda_simple_params_end_002d:
  7521 00004925 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7522 00004928 4889C3                  	mov rbx, rax
  7523 0000492B 58                      	pop rax
  7524 0000492C C60004                  	mov byte [rax], T_closure
  7525 0000492F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7526 00004933 48C74009[40490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7527 0000493B E985000000              	jmp .L_lambda_simple_end_002d
  7528                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7529 00004940 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7530 00004946 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7531 00004948 FF742410                	push qword [rsp + 8 * 2]
  7532 0000494C 6A02                    	push 2
  7533 0000494E E9F1160100              	jmp L_error_incorrect_arity_simple
  7534                                  .L_lambda_simple_arity_check_ok_002d:
  7535 00004953 C8000000                	enter 0, 0
  7536                                  	; Setting up for a tail-call
  7537 00004957 488B4528                	mov rax, PARAM(1)	; param a
  7538 0000495B 50                      	push rax
  7539 0000495C 488B4520                	mov rax, PARAM(0)	; param r
  7540 00004960 50                      	push rax
  7541 00004961 6A02                    	push 2
  7542 00004963 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  7543 0000496B 803805                  	cmp byte [rax], T_undefined
  7544 0000496E 0F84EA150100            	je L_error_fvar_undefined
  7545 00004974 803804                  	cmp byte [rax], T_closure
  7546 00004977 0F8565160100            	jne L_error_non_closure
  7547 0000497D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7548 00004980 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7549 00004984 4C8B4D00                	mov r9, qword [rbp]
  7550 00004988 4150                    	push r8
  7551 0000498A 4151                    	push r9
  7552 0000498C 41BA06000000            	mov r10, 2 + 4
  7553 00004992 4C8B5D18                	mov r11, COUNT
  7554 00004996 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7555 0000499B 4C8D65F8                	lea r12, [rbp - 8]
  7556                                  .L_tc_recycle_frame_loop_002a:
  7557 0000499F 4983FA00                	cmp r10, 0
  7558 000049A3 7414                    	je .L_tc_recycle_frame_done_002a
  7559 000049A5 4D8B2C24                	mov r13, qword [r12]
  7560 000049A9 4D892B                  	mov qword [r11], r13
  7561 000049AC 49FFCA                  	dec r10
  7562 000049AF 4983EB08                	sub r11, 8
  7563 000049B3 4983EC08                	sub r12, 8
  7564 000049B7 EBE6                    	jmp .L_tc_recycle_frame_loop_002a
  7565                                  .L_tc_recycle_frame_done_002a:
  7566 000049B9 498D6308                	lea rsp, [r11 + 8]
  7567 000049BD 5D                      	pop rbp
  7568 000049BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7569 000049C1 C9                      	leave
  7570 000049C2 C22000                  	ret AND_KILL_FRAME(2)
  7571                                  .L_lambda_simple_end_002d:	; new closure is in rax
  7572 000049C5 50                      	push rax
  7573 000049C6 48B8-                   	mov rax, L_constants + 1
  7573 000049C8 [0100000000000000] 
  7574 000049D0 50                      	push rax
  7575 000049D1 488B4520                	mov rax, PARAM(0)	; param s
  7576 000049D5 50                      	push rax
  7577 000049D6 6A03                    	push 3
  7578 000049D8 488B0425[A7130000]      	mov rax, qword [free_var_86]	; free var fold-left
  7579 000049E0 803805                  	cmp byte [rax], T_undefined
  7580 000049E3 0F8475150100            	je L_error_fvar_undefined
  7581 000049E9 803804                  	cmp byte [rax], T_closure
  7582 000049EC 0F85F0150100            	jne L_error_non_closure
  7583 000049F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7584 000049F5 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7585 000049F9 4C8B4D00                	mov r9, qword [rbp]
  7586 000049FD 4150                    	push r8
  7587 000049FF 4151                    	push r9
  7588 00004A01 41BA07000000            	mov r10, 3 + 4
  7589 00004A07 4C8B5D18                	mov r11, COUNT
  7590 00004A0B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7591 00004A10 4C8D65F8                	lea r12, [rbp - 8]
  7592                                  .L_tc_recycle_frame_loop_002b:
  7593 00004A14 4983FA00                	cmp r10, 0
  7594 00004A18 7414                    	je .L_tc_recycle_frame_done_002b
  7595 00004A1A 4D8B2C24                	mov r13, qword [r12]
  7596 00004A1E 4D892B                  	mov qword [r11], r13
  7597 00004A21 49FFCA                  	dec r10
  7598 00004A24 4983EB08                	sub r11, 8
  7599 00004A28 4983EC08                	sub r12, 8
  7600 00004A2C EBE6                    	jmp .L_tc_recycle_frame_loop_002b
  7601                                  .L_tc_recycle_frame_done_002b:
  7602 00004A2E 498D6308                	lea rsp, [r11 + 8]
  7603 00004A32 5D                      	pop rbp
  7604 00004A33 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7605 00004A36 C9                      	leave
  7606 00004A37 C21800                  	ret AND_KILL_FRAME(1)
  7607                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7608 00004A3A 48890425[D8150000]      	mov qword [free_var_119], rax
  7609 00004A42 48B8-                   	mov rax, sob_void
  7609 00004A44 [0000000000000000] 
  7610                                  
  7611 00004A4C 4889C7                  	mov rdi, rax
  7612 00004A4F E88C180100              	call print_sexpr_if_not_void
  7613                                  	; preparing a non-tail-call
  7614 00004A54 48B8-                   	mov rax, L_constants + 1993
  7614 00004A56 [C907000000000000] 
  7615 00004A5E 50                      	push rax
  7616 00004A5F 6A01                    	push 1	; arg count
  7617 00004A61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7618 00004A66 E820160100              	call malloc
  7619 00004A6B 50                      	push rax
  7620 00004A6C BF00000000              	mov rdi, 8 * 0	; new rib
  7621 00004A71 E815160100              	call malloc
  7622 00004A76 50                      	push rax
  7623 00004A77 BF08000000              	mov rdi, 8 * 1	; extended env
  7624 00004A7C E80A160100              	call malloc
  7625 00004A81 488B7D10                	mov rdi, ENV
  7626 00004A85 BE00000000              	mov rsi, 0
  7627 00004A8A BA01000000              	mov rdx, 1
  7628                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7629 00004A8F 4883FE00                	cmp rsi, 0
  7630 00004A93 7410                    	je .L_lambda_simple_env_end_002e
  7631 00004A95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7632 00004A99 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7633 00004A9D 48FFC6                  	inc rsi
  7634 00004AA0 48FFC2                  	inc rdx
  7635 00004AA3 EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7636                                  .L_lambda_simple_env_end_002e:
  7637 00004AA5 5B                      	pop rbx
  7638 00004AA6 BE00000000              	mov rsi, 0
  7639                                  .L_lambda_simple_params_loop_002e:	; copy params
  7640 00004AAB 4883FE00                	cmp rsi, 0
  7641 00004AAF 740E                    	je .L_lambda_simple_params_end_002e
  7642 00004AB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7643 00004AB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7644 00004ABA 48FFC6                  	inc rsi
  7645 00004ABD EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7646                                  .L_lambda_simple_params_end_002e:
  7647 00004ABF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7648 00004AC2 4889C3                  	mov rbx, rax
  7649 00004AC5 58                      	pop rax
  7650 00004AC6 C60004                  	mov byte [rax], T_closure
  7651 00004AC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7652 00004ACD 48C74009[DA4A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7653 00004AD5 E9F7060000              	jmp .L_lambda_simple_end_002e
  7654                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7655 00004ADA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7656 00004AE0 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7657 00004AE2 FF742410                	push qword [rsp + 8 * 2]
  7658 00004AE6 6A01                    	push 1
  7659 00004AE8 E957150100              	jmp L_error_incorrect_arity_simple
  7660                                  .L_lambda_simple_arity_check_ok_002e:
  7661 00004AED C8000000                	enter 0, 0
  7662 00004AF1 BF08000000              	mov rdi, 8 * 1
  7663 00004AF6 E890150100              	call malloc
  7664 00004AFB 488B5D20                	mov rbx, PARAM(0)
  7665 00004AFF 488918                  	mov qword [rax], rbx
  7666 00004B02 48894520                	mov PARAM(0), rax
  7667 00004B06 48B8-                   	mov rax, sob_void
  7667 00004B08 [0000000000000000] 
  7668                                  
  7669                                  	; preparing a non-tail-call
  7670 00004B10 6A00                    	push 0	; arg count
  7671 00004B12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7672 00004B17 E86F150100              	call malloc
  7673 00004B1C 50                      	push rax
  7674 00004B1D BF08000000              	mov rdi, 8 * 1	; new rib
  7675 00004B22 E864150100              	call malloc
  7676 00004B27 50                      	push rax
  7677 00004B28 BF10000000              	mov rdi, 8 * 2	; extended env
  7678 00004B2D E859150100              	call malloc
  7679 00004B32 488B7D10                	mov rdi, ENV
  7680 00004B36 BE00000000              	mov rsi, 0
  7681 00004B3B BA01000000              	mov rdx, 1
  7682                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7683 00004B40 4883FE01                	cmp rsi, 1
  7684 00004B44 7410                    	je .L_lambda_simple_env_end_002f
  7685 00004B46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7686 00004B4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7687 00004B4E 48FFC6                  	inc rsi
  7688 00004B51 48FFC2                  	inc rdx
  7689 00004B54 EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7690                                  .L_lambda_simple_env_end_002f:
  7691 00004B56 5B                      	pop rbx
  7692 00004B57 BE00000000              	mov rsi, 0
  7693                                  .L_lambda_simple_params_loop_002f:	; copy params
  7694 00004B5C 4883FE01                	cmp rsi, 1
  7695 00004B60 740E                    	je .L_lambda_simple_params_end_002f
  7696 00004B62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7697 00004B67 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7698 00004B6B 48FFC6                  	inc rsi
  7699 00004B6E EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7700                                  .L_lambda_simple_params_end_002f:
  7701 00004B70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7702 00004B73 4889C3                  	mov rbx, rax
  7703 00004B76 58                      	pop rax
  7704 00004B77 C60004                  	mov byte [rax], T_closure
  7705 00004B7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7706 00004B7E 48C74009[8B4B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7707 00004B86 E927010000              	jmp .L_lambda_simple_end_002f
  7708                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7709 00004B8B 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7710 00004B91 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7711 00004B93 FF742410                	push qword [rsp + 8 * 2]
  7712 00004B97 6A02                    	push 2
  7713 00004B99 E9A6140100              	jmp L_error_incorrect_arity_simple
  7714                                  .L_lambda_simple_arity_check_ok_002f:
  7715 00004B9E C8000000                	enter 0, 0
  7716                                  	; preparing a non-tail-call
  7717 00004BA2 488B4528                	mov rax, PARAM(1)	; param sr
  7718 00004BA6 50                      	push rax
  7719 00004BA7 6A01                    	push 1	; arg count
  7720 00004BA9 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  7721 00004BB1 803805                  	cmp byte [rax], T_undefined
  7722 00004BB4 0F84A4130100            	je L_error_fvar_undefined
  7723 00004BBA 803804                  	cmp byte [rax], T_closure
  7724 00004BBD 0F851F140100            	jne L_error_non_closure
  7725 00004BC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7726 00004BC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7727 00004BC9 483D[02000000]          	cmp rax, sob_boolean_false
  7728 00004BCF 7409                    	je .L_if_else_000c
  7729 00004BD1 488B4520                	mov rax, PARAM(0)	; param s1
  7730 00004BD5 E9D4000000              	jmp .L_if_end_000c
  7731                                  .L_if_else_000c:
  7732                                  	; Setting up for a tail-call
  7733 00004BDA 488B4520                	mov rax, PARAM(0)	; param s1
  7734 00004BDE 50                      	push rax
  7735                                  	; preparing a non-tail-call
  7736                                  	; preparing a non-tail-call
  7737 00004BDF 488B4528                	mov rax, PARAM(1)	; param sr
  7738 00004BE3 50                      	push rax
  7739 00004BE4 6A01                    	push 1	; arg count
  7740 00004BE6 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  7741 00004BEE 803805                  	cmp byte [rax], T_undefined
  7742 00004BF1 0F8467130100            	je L_error_fvar_undefined
  7743 00004BF7 803804                  	cmp byte [rax], T_closure
  7744 00004BFA 0F85E2130100            	jne L_error_non_closure
  7745 00004C00 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7746 00004C03 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7747 00004C06 50                      	push rax
  7748                                  	; preparing a non-tail-call
  7749 00004C07 488B4528                	mov rax, PARAM(1)	; param sr
  7750 00004C0B 50                      	push rax
  7751 00004C0C 6A01                    	push 1	; arg count
  7752 00004C0E 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  7753 00004C16 803805                  	cmp byte [rax], T_undefined
  7754 00004C19 0F843F130100            	je L_error_fvar_undefined
  7755 00004C1F 803804                  	cmp byte [rax], T_closure
  7756 00004C22 0F85BA130100            	jne L_error_non_closure
  7757 00004C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7758 00004C2B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7759 00004C2E 50                      	push rax
  7760 00004C2F 6A02                    	push 2	; arg count
  7761 00004C31 488B4510                	mov rax, ENV
  7762 00004C35 488B00                  	mov rax, qword [rax + 8 * 0]
  7763 00004C38 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7764 00004C3B 488B00                  	mov rax, qword [rax]
  7765 00004C3E 803804                  	cmp byte [rax], T_closure
  7766 00004C41 0F859B130100            	jne L_error_non_closure
  7767 00004C47 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7768 00004C4A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7769 00004C4D 50                      	push rax
  7770 00004C4E 6A02                    	push 2
  7771 00004C50 488B0425[E9150000]      	mov rax, qword [free_var_120]	; free var run-2
  7772 00004C58 803805                  	cmp byte [rax], T_undefined
  7773 00004C5B 0F84FD120100            	je L_error_fvar_undefined
  7774 00004C61 803804                  	cmp byte [rax], T_closure
  7775 00004C64 0F8578130100            	jne L_error_non_closure
  7776 00004C6A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7777 00004C6D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7778 00004C71 4C8B4D00                	mov r9, qword [rbp]
  7779 00004C75 4150                    	push r8
  7780 00004C77 4151                    	push r9
  7781 00004C79 41BA06000000            	mov r10, 2 + 4
  7782 00004C7F 4C8B5D18                	mov r11, COUNT
  7783 00004C83 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7784 00004C88 4C8D65F8                	lea r12, [rbp - 8]
  7785                                  .L_tc_recycle_frame_loop_002c:
  7786 00004C8C 4983FA00                	cmp r10, 0
  7787 00004C90 7414                    	je .L_tc_recycle_frame_done_002c
  7788 00004C92 4D8B2C24                	mov r13, qword [r12]
  7789 00004C96 4D892B                  	mov qword [r11], r13
  7790 00004C99 49FFCA                  	dec r10
  7791 00004C9C 4983EB08                	sub r11, 8
  7792 00004CA0 4983EC08                	sub r12, 8
  7793 00004CA4 EBE6                    	jmp .L_tc_recycle_frame_loop_002c
  7794                                  .L_tc_recycle_frame_done_002c:
  7795 00004CA6 498D6308                	lea rsp, [r11 + 8]
  7796 00004CAA 5D                      	pop rbp
  7797 00004CAB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7798                                  .L_if_end_000c:
  7799 00004CAE C9                      	leave
  7800 00004CAF C22000                  	ret AND_KILL_FRAME(2)
  7801                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7802 00004CB2 803804                  	cmp byte [rax], T_closure
  7803 00004CB5 0F8527130100            	jne L_error_non_closure
  7804 00004CBB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7805 00004CBE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7806 00004CC1 50                      	push rax
  7807 00004CC2 488B4520                	mov rax, PARAM(0)	; param run-1
  7808 00004CC6 8F00                    	pop qword [rax]
  7809 00004CC8 48B8-                   	mov rax, sob_void
  7809 00004CCA [0000000000000000] 
  7810                                  
  7811                                  	; preparing a non-tail-call
  7812 00004CD2 48B8-                   	mov rax, L_constants + 1993
  7812 00004CD4 [C907000000000000] 
  7813 00004CDC 50                      	push rax
  7814 00004CDD 6A01                    	push 1	; arg count
  7815 00004CDF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7816 00004CE4 E8A2130100              	call malloc
  7817 00004CE9 50                      	push rax
  7818 00004CEA BF08000000              	mov rdi, 8 * 1	; new rib
  7819 00004CEF E897130100              	call malloc
  7820 00004CF4 50                      	push rax
  7821 00004CF5 BF10000000              	mov rdi, 8 * 2	; extended env
  7822 00004CFA E88C130100              	call malloc
  7823 00004CFF 488B7D10                	mov rdi, ENV
  7824 00004D03 BE00000000              	mov rsi, 0
  7825 00004D08 BA01000000              	mov rdx, 1
  7826                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  7827 00004D0D 4883FE01                	cmp rsi, 1
  7828 00004D11 7410                    	je .L_lambda_simple_env_end_0030
  7829 00004D13 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7830 00004D17 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7831 00004D1B 48FFC6                  	inc rsi
  7832 00004D1E 48FFC2                  	inc rdx
  7833 00004D21 EBEA                    	jmp .L_lambda_simple_env_loop_0030
  7834                                  .L_lambda_simple_env_end_0030:
  7835 00004D23 5B                      	pop rbx
  7836 00004D24 BE00000000              	mov rsi, 0
  7837                                  .L_lambda_simple_params_loop_0030:	; copy params
  7838 00004D29 4883FE01                	cmp rsi, 1
  7839 00004D2D 740E                    	je .L_lambda_simple_params_end_0030
  7840 00004D2F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7841 00004D34 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7842 00004D38 48FFC6                  	inc rsi
  7843 00004D3B EBEC                    	jmp .L_lambda_simple_params_loop_0030
  7844                                  .L_lambda_simple_params_end_0030:
  7845 00004D3D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7846 00004D40 4889C3                  	mov rbx, rax
  7847 00004D43 58                      	pop rax
  7848 00004D44 C60004                  	mov byte [rax], T_closure
  7849 00004D47 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7850 00004D4B 48C74009[584D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  7851 00004D53 E966040000              	jmp .L_lambda_simple_end_0030
  7852                                  .L_lambda_simple_code_0030:	; lambda-simple body
  7853 00004D58 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7854 00004D5E 740B                    	je .L_lambda_simple_arity_check_ok_0030
  7855 00004D60 FF742410                	push qword [rsp + 8 * 2]
  7856 00004D64 6A01                    	push 1
  7857 00004D66 E9D9120100              	jmp L_error_incorrect_arity_simple
  7858                                  .L_lambda_simple_arity_check_ok_0030:
  7859 00004D6B C8000000                	enter 0, 0
  7860 00004D6F BF08000000              	mov rdi, 8 * 1
  7861 00004D74 E812130100              	call malloc
  7862 00004D79 488B5D20                	mov rbx, PARAM(0)
  7863 00004D7D 488918                  	mov qword [rax], rbx
  7864 00004D80 48894520                	mov PARAM(0), rax
  7865 00004D84 48B8-                   	mov rax, sob_void
  7865 00004D86 [0000000000000000] 
  7866                                  
  7867                                  	; preparing a non-tail-call
  7868 00004D8E 6A00                    	push 0	; arg count
  7869 00004D90 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7870 00004D95 E8F1120100              	call malloc
  7871 00004D9A 50                      	push rax
  7872 00004D9B BF08000000              	mov rdi, 8 * 1	; new rib
  7873 00004DA0 E8E6120100              	call malloc
  7874 00004DA5 50                      	push rax
  7875 00004DA6 BF18000000              	mov rdi, 8 * 3	; extended env
  7876 00004DAB E8DB120100              	call malloc
  7877 00004DB0 488B7D10                	mov rdi, ENV
  7878 00004DB4 BE00000000              	mov rsi, 0
  7879 00004DB9 BA01000000              	mov rdx, 1
  7880                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  7881 00004DBE 4883FE02                	cmp rsi, 2
  7882 00004DC2 7410                    	je .L_lambda_simple_env_end_0031
  7883 00004DC4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7884 00004DC8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7885 00004DCC 48FFC6                  	inc rsi
  7886 00004DCF 48FFC2                  	inc rdx
  7887 00004DD2 EBEA                    	jmp .L_lambda_simple_env_loop_0031
  7888                                  .L_lambda_simple_env_end_0031:
  7889 00004DD4 5B                      	pop rbx
  7890 00004DD5 BE00000000              	mov rsi, 0
  7891                                  .L_lambda_simple_params_loop_0031:	; copy params
  7892 00004DDA 4883FE01                	cmp rsi, 1
  7893 00004DDE 740E                    	je .L_lambda_simple_params_end_0031
  7894 00004DE0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7895 00004DE5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7896 00004DE9 48FFC6                  	inc rsi
  7897 00004DEC EBEC                    	jmp .L_lambda_simple_params_loop_0031
  7898                                  .L_lambda_simple_params_end_0031:
  7899 00004DEE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7900 00004DF1 4889C3                  	mov rbx, rax
  7901 00004DF4 58                      	pop rax
  7902 00004DF5 C60004                  	mov byte [rax], T_closure
  7903 00004DF8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7904 00004DFC 48C74009[094E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  7905 00004E04 E927010000              	jmp .L_lambda_simple_end_0031
  7906                                  .L_lambda_simple_code_0031:	; lambda-simple body
  7907 00004E09 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7908 00004E0F 740B                    	je .L_lambda_simple_arity_check_ok_0031
  7909 00004E11 FF742410                	push qword [rsp + 8 * 2]
  7910 00004E15 6A02                    	push 2
  7911 00004E17 E928120100              	jmp L_error_incorrect_arity_simple
  7912                                  .L_lambda_simple_arity_check_ok_0031:
  7913 00004E1C C8000000                	enter 0, 0
  7914                                  	; preparing a non-tail-call
  7915 00004E20 488B4520                	mov rax, PARAM(0)	; param s1
  7916 00004E24 50                      	push rax
  7917 00004E25 6A01                    	push 1	; arg count
  7918 00004E27 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  7919 00004E2F 803805                  	cmp byte [rax], T_undefined
  7920 00004E32 0F8426110100            	je L_error_fvar_undefined
  7921 00004E38 803804                  	cmp byte [rax], T_closure
  7922 00004E3B 0F85A1110100            	jne L_error_non_closure
  7923 00004E41 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7924 00004E44 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7925 00004E47 483D[02000000]          	cmp rax, sob_boolean_false
  7926 00004E4D 7409                    	je .L_if_else_000d
  7927 00004E4F 488B4528                	mov rax, PARAM(1)	; param s2
  7928 00004E53 E9D4000000              	jmp .L_if_end_000d
  7929                                  .L_if_else_000d:
  7930                                  	; Setting up for a tail-call
  7931                                  	; preparing a non-tail-call
  7932 00004E58 488B4520                	mov rax, PARAM(0)	; param s1
  7933 00004E5C 50                      	push rax
  7934 00004E5D 6A01                    	push 1	; arg count
  7935 00004E5F 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  7936 00004E67 803805                  	cmp byte [rax], T_undefined
  7937 00004E6A 0F84EE100100            	je L_error_fvar_undefined
  7938 00004E70 803804                  	cmp byte [rax], T_closure
  7939 00004E73 0F8569110100            	jne L_error_non_closure
  7940 00004E79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7941 00004E7C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7942 00004E7F 50                      	push rax
  7943                                  	; preparing a non-tail-call
  7944 00004E80 488B4528                	mov rax, PARAM(1)	; param s2
  7945 00004E84 50                      	push rax
  7946                                  	; preparing a non-tail-call
  7947 00004E85 488B4520                	mov rax, PARAM(0)	; param s1
  7948 00004E89 50                      	push rax
  7949 00004E8A 6A01                    	push 1	; arg count
  7950 00004E8C 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  7951 00004E94 803805                  	cmp byte [rax], T_undefined
  7952 00004E97 0F84C1100100            	je L_error_fvar_undefined
  7953 00004E9D 803804                  	cmp byte [rax], T_closure
  7954 00004EA0 0F853C110100            	jne L_error_non_closure
  7955 00004EA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7956 00004EA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7957 00004EAC 50                      	push rax
  7958 00004EAD 6A02                    	push 2	; arg count
  7959 00004EAF 488B4510                	mov rax, ENV
  7960 00004EB3 488B00                  	mov rax, qword [rax + 8 * 0]
  7961 00004EB6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-2
  7962 00004EB9 488B00                  	mov rax, qword [rax]
  7963 00004EBC 803804                  	cmp byte [rax], T_closure
  7964 00004EBF 0F851D110100            	jne L_error_non_closure
  7965 00004EC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7966 00004EC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7967 00004ECB 50                      	push rax
  7968 00004ECC 6A02                    	push 2
  7969 00004ECE 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  7970 00004ED6 803805                  	cmp byte [rax], T_undefined
  7971 00004ED9 0F847F100100            	je L_error_fvar_undefined
  7972 00004EDF 803804                  	cmp byte [rax], T_closure
  7973 00004EE2 0F85FA100100            	jne L_error_non_closure
  7974 00004EE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7975 00004EEB 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  7976 00004EEF 4C8B4D00                	mov r9, qword [rbp]
  7977 00004EF3 4150                    	push r8
  7978 00004EF5 4151                    	push r9
  7979 00004EF7 41BA06000000            	mov r10, 2 + 4
  7980 00004EFD 4C8B5D18                	mov r11, COUNT
  7981 00004F01 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  7982 00004F06 4C8D65F8                	lea r12, [rbp - 8]
  7983                                  .L_tc_recycle_frame_loop_002d:
  7984 00004F0A 4983FA00                	cmp r10, 0
  7985 00004F0E 7414                    	je .L_tc_recycle_frame_done_002d
  7986 00004F10 4D8B2C24                	mov r13, qword [r12]
  7987 00004F14 4D892B                  	mov qword [r11], r13
  7988 00004F17 49FFCA                  	dec r10
  7989 00004F1A 4983EB08                	sub r11, 8
  7990 00004F1E 4983EC08                	sub r12, 8
  7991 00004F22 EBE6                    	jmp .L_tc_recycle_frame_loop_002d
  7992                                  .L_tc_recycle_frame_done_002d:
  7993 00004F24 498D6308                	lea rsp, [r11 + 8]
  7994 00004F28 5D                      	pop rbp
  7995 00004F29 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7996                                  .L_if_end_000d:
  7997 00004F2C C9                      	leave
  7998 00004F2D C22000                  	ret AND_KILL_FRAME(2)
  7999                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8000 00004F30 803804                  	cmp byte [rax], T_closure
  8001 00004F33 0F85A9100100            	jne L_error_non_closure
  8002 00004F39 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8003 00004F3C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8004 00004F3F 50                      	push rax
  8005 00004F40 488B4520                	mov rax, PARAM(0)	; param run-2
  8006 00004F44 8F00                    	pop qword [rax]
  8007 00004F46 48B8-                   	mov rax, sob_void
  8007 00004F48 [0000000000000000] 
  8008                                  
  8009 00004F50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8010 00004F55 E831110100              	call malloc
  8011 00004F5A 50                      	push rax
  8012 00004F5B BF08000000              	mov rdi, 8 * 1	; new rib
  8013 00004F60 E826110100              	call malloc
  8014 00004F65 50                      	push rax
  8015 00004F66 BF18000000              	mov rdi, 8 * 3	; extended env
  8016 00004F6B E81B110100              	call malloc
  8017 00004F70 488B7D10                	mov rdi, ENV
  8018 00004F74 BE00000000              	mov rsi, 0
  8019 00004F79 BA01000000              	mov rdx, 1
  8020                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  8021 00004F7E 4883FE02                	cmp rsi, 2
  8022 00004F82 7410                    	je .L_lambda_opt_env_end_0007
  8023 00004F84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8024 00004F88 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8025 00004F8C 48FFC6                  	inc rsi
  8026 00004F8F 48FFC2                  	inc rdx
  8027 00004F92 EBEA                    	jmp .L_lambda_opt_env_loop_0007
  8028                                  .L_lambda_opt_env_end_0007:
  8029 00004F94 5B                      	pop rbx
  8030 00004F95 BE00000000              	mov rsi, 0
  8031                                  .L_lambda_opt_params_loop_0007:	; copy params
  8032 00004F9A 4883FE01                	cmp rsi, 1
  8033 00004F9E 740E                    	je .L_lambda_opt_params_end_0007
  8034 00004FA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8035 00004FA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8036 00004FA9 48FFC6                  	inc rsi
  8037 00004FAC EBEC                    	jmp .L_lambda_opt_params_loop_0007
  8038                                  .L_lambda_opt_params_end_0007:
  8039 00004FAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8040 00004FB1 4889C3                  	mov rbx, rax
  8041 00004FB4 58                      	pop rax
  8042 00004FB5 C60004                  	mov byte [rax], T_closure
  8043 00004FB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8044 00004FBC 48C74009[C94F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  8045 00004FC4 E9F1010000              	jmp .L_lambda_opt_end_0007
  8046                                  .L_lambda_opt_code_0007:
  8047 00004FC9 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8048 00004FCE 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  8049 00004FD2 7407                    	je .L_lambda_opt_arity_check_exact_0007	; Jump if arity matches
  8050 00004FD4 7F4C                    	jg .L_lambda_opt_arity_check_more_0007	; Jump if more arguments passed
  8051 00004FD6 E97D100100              	jmp L_error_incorrect_arity_opt
  8052                                  .L_lambda_opt_arity_check_exact_0007:
  8053 00004FDB 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8054 00004FDE 4983C603                	add r14, 3 ; add 3 first stack values
  8055 00004FE2 41BF00000000            	mov r15, 0 ; r15 = index
  8056 00004FE8 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8057 00004FEC 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8058 00004FF4 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8059                                  .L_lambda_opt_stack_shrink_loop_0007:
  8060 00004FF6 4983FE00                	cmp r14, 0
  8061 00004FFA 7E11                    	jle .L_make_lambda_opt_exact_finish_0007
  8062 00004FFC 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8063 00005001 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8064 00005005 49FFCE                  	dec r14 ; next loop value
  8065 00005008 49FFC7                  	inc r15 ; update i
  8066 0000500B EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8067                                  .L_make_lambda_opt_exact_finish_0007:
  8068 0000500D 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8069 00005015 49FFC2                  	inc r10
  8070 00005018 4C89542410              	mov qword [rsp + 8 * 2], r10
  8071 0000501D E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0007
  8072                                  .L_lambda_opt_arity_check_more_0007:
  8073 00005022 4D89D6                  	mov r14, r10 ; r14 = num args
  8074 00005025 4D89D7                  	mov r15, r10 ; r15 = num args
  8075 00005028 41B900000000            	mov r9, 0; r9 = number of params 
  8076 0000502E 4D29CE                  	sub r14, r9 ; r14 = extra args
  8077 00005031 4D01F1                  	add r9, r14 ; r9 = num args
  8078 00005034 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8078 00005036 [0100000000000000] 
  8079 0000503E EB00                    	jmp .L_make_lambda_opt_arg_list_0007
  8080                                  .L_make_lambda_opt_arg_list_0007:
  8081 00005040 4983FE00                	cmp r14, 0
  8082 00005044 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0007
  8083 00005046 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  8084 0000504B 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  8085 0000504E 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8086 00005054 E832100100              	call malloc                         ; Allocate memory, result in rax
  8087 00005059 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8088 0000505C 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  8089 00005060 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8090 00005064 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8091 00005067 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  8092 0000506A 49FFC9                  	dec r9                              ; args index minus 1
  8093 0000506D 49FFCE                  	dec r14                             ; next iteration
  8094 00005070 EBCE                    	jmp .L_make_lambda_opt_arg_list_0007
  8095                                  .L_make_lambda_opt_stack_fixed_0007:
  8096 00005072 4D89FE                  	mov r14, r15 ; r14 = num args
  8097 00005075 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8098 00005078 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8099 0000507C 41BA00000000            	mov r10, 0; r10 = num of params
  8100 00005082 4D29D6                  	sub r14, r10 ; r14 = extra args
  8101 00005085 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8102 00005088 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8103 0000508B 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  8104 00005090 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0007
  8105                                  .L_lambda_opt_stack_shrink_loop_more_0007:
  8106 00005092 4983F800                	cmp r8, 0
  8107 00005096 7E15                    	jle .L_make_lambda_opt_more_finish_0007
  8108 00005098 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  8109 0000509C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8110 000050A0 4D8D26                  	lea r12, [r14]
  8111 000050A3 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  8112 000050A8 49FFC8                  	dec r8 ; next iteration
  8113 000050AB EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0007
  8114                                  .L_make_lambda_opt_more_finish_0007:
  8115 000050AD 4D89F8                  	mov r8, r15 ; num of args
  8116 000050B0 41BA00000000            	mov r10, 0
  8117 000050B6 4D29D0                  	sub r8, r10 ; num of new args
  8118 000050B9 49FFC0                  	inc r8
  8119 000050BC 4C89442420              	mov qword [rsp + 8 * 4], r8
  8120 000050C1 4883C410                	add rsp, 8 * 2  ; 
  8121 000050C5 EB00                    	jmp .L_lambda_opt_stack_adjusted_0007
  8122                                  .L_lambda_opt_stack_adjusted_0007:
  8123 000050C7 C8000000                	enter 0, 0
  8124                                  	; preparing a non-tail-call
  8125 000050CB 488B4520                	mov rax, PARAM(0)	; param s
  8126 000050CF 50                      	push rax
  8127 000050D0 6A01                    	push 1	; arg count
  8128 000050D2 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  8129 000050DA 803805                  	cmp byte [rax], T_undefined
  8130 000050DD 0F847B0E0100            	je L_error_fvar_undefined
  8131 000050E3 803804                  	cmp byte [rax], T_closure
  8132 000050E6 0F85F60E0100            	jne L_error_non_closure
  8133 000050EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  8134 000050EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  8135 000050F2 483D[02000000]          	cmp rax, sob_boolean_false
  8136 000050F8 740F                    	je .L_if_else_000e
  8137 000050FA 48B8-                   	mov rax, L_constants + 1
  8137 000050FC [0100000000000000] 
  8138 00005104 E9AD000000              	jmp .L_if_end_000e
  8139                                  .L_if_else_000e:
  8140                                  	; Setting up for a tail-call
  8141                                  	; preparing a non-tail-call
  8142 00005109 488B4520                	mov rax, PARAM(0)	; param s
  8143 0000510D 50                      	push rax
  8144 0000510E 6A01                    	push 1	; arg count
  8145 00005110 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  8146 00005118 803805                  	cmp byte [rax], T_undefined
  8147 0000511B 0F843D0E0100            	je L_error_fvar_undefined
  8148 00005121 803804                  	cmp byte [rax], T_closure
  8149 00005124 0F85B80E0100            	jne L_error_non_closure
  8150 0000512A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8151 0000512D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8152 00005130 50                      	push rax
  8153                                  	; preparing a non-tail-call
  8154 00005131 488B4520                	mov rax, PARAM(0)	; param s
  8155 00005135 50                      	push rax
  8156 00005136 6A01                    	push 1	; arg count
  8157 00005138 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  8158 00005140 803805                  	cmp byte [rax], T_undefined
  8159 00005143 0F84150E0100            	je L_error_fvar_undefined
  8160 00005149 803804                  	cmp byte [rax], T_closure
  8161 0000514C 0F85900E0100            	jne L_error_non_closure
  8162 00005152 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8163 00005155 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8164 00005158 50                      	push rax
  8165 00005159 6A02                    	push 2
  8166 0000515B 488B4510                	mov rax, ENV
  8167 0000515F 488B4008                	mov rax, qword [rax + 8 * 1]
  8168 00005163 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8169 00005166 488B00                  	mov rax, qword [rax]
  8170 00005169 803804                  	cmp byte [rax], T_closure
  8171 0000516C 0F85700E0100            	jne L_error_non_closure
  8172 00005172 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8173 00005175 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  8174 00005179 4C8B4D00                	mov r9, qword [rbp]
  8175 0000517D 4150                    	push r8
  8176 0000517F 4151                    	push r9
  8177 00005181 41BA06000000            	mov r10, 2 + 4
  8178 00005187 4C8B5D18                	mov r11, COUNT
  8179 0000518B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  8180 00005190 4C8D65F8                	lea r12, [rbp - 8]
  8181                                  .L_tc_recycle_frame_loop_002e:
  8182 00005194 4983FA00                	cmp r10, 0
  8183 00005198 7414                    	je .L_tc_recycle_frame_done_002e
  8184 0000519A 4D8B2C24                	mov r13, qword [r12]
  8185 0000519E 4D892B                  	mov qword [r11], r13
  8186 000051A1 49FFCA                  	dec r10
  8187 000051A4 4983EB08                	sub r11, 8
  8188 000051A8 4983EC08                	sub r12, 8
  8189 000051AC EBE6                    	jmp .L_tc_recycle_frame_loop_002e
  8190                                  .L_tc_recycle_frame_done_002e:
  8191 000051AE 498D6308                	lea rsp, [r11 + 8]
  8192 000051B2 5D                      	pop rbp
  8193 000051B3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8194                                  .L_if_end_000e:
  8195 000051B6 C9                      	leave
  8196 000051B7 C21000                  	ret AND_KILL_FRAME(0)
  8197                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8198 000051BA C9                      	leave
  8199 000051BB C21800                  	ret AND_KILL_FRAME(1)
  8200                                  .L_lambda_simple_end_0030:	; new closure is in rax
  8201 000051BE 803804                  	cmp byte [rax], T_closure
  8202 000051C1 0F851B0E0100            	jne L_error_non_closure
  8203 000051C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8204 000051CA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8205 000051CD C9                      	leave
  8206 000051CE C21800                  	ret AND_KILL_FRAME(1)
  8207                                  .L_lambda_simple_end_002e:	; new closure is in rax
  8208 000051D1 803804                  	cmp byte [rax], T_closure
  8209 000051D4 0F85080E0100            	jne L_error_non_closure
  8210 000051DA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8211 000051DD FF5009                  	call SOB_CLOSURE_CODE(rax)
  8212 000051E0 48890425[22100000]      	mov qword [free_var_33], rax
  8213 000051E8 48B8-                   	mov rax, sob_void
  8213 000051EA [0000000000000000] 
  8214                                  
  8215 000051F2 4889C7                  	mov rdi, rax
  8216 000051F5 E8E6100100              	call print_sexpr_if_not_void
  8217                                  	; preparing a non-tail-call
  8218 000051FA 48B8-                   	mov rax, L_constants + 1993
  8218 000051FC [C907000000000000] 
  8219 00005204 50                      	push rax
  8220 00005205 6A01                    	push 1	; arg count
  8221 00005207 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8222 0000520C E87A0E0100              	call malloc
  8223 00005211 50                      	push rax
  8224 00005212 BF00000000              	mov rdi, 8 * 0	; new rib
  8225 00005217 E86F0E0100              	call malloc
  8226 0000521C 50                      	push rax
  8227 0000521D BF08000000              	mov rdi, 8 * 1	; extended env
  8228 00005222 E8640E0100              	call malloc
  8229 00005227 488B7D10                	mov rdi, ENV
  8230 0000522B BE00000000              	mov rsi, 0
  8231 00005230 BA01000000              	mov rdx, 1
  8232                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8233 00005235 4883FE00                	cmp rsi, 0
  8234 00005239 7410                    	je .L_lambda_simple_env_end_0032
  8235 0000523B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8236 0000523F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8237 00005243 48FFC6                  	inc rsi
  8238 00005246 48FFC2                  	inc rdx
  8239 00005249 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8240                                  .L_lambda_simple_env_end_0032:
  8241 0000524B 5B                      	pop rbx
  8242 0000524C BE00000000              	mov rsi, 0
  8243                                  .L_lambda_simple_params_loop_0032:	; copy params
  8244 00005251 4883FE00                	cmp rsi, 0
  8245 00005255 740E                    	je .L_lambda_simple_params_end_0032
  8246 00005257 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8247 0000525C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8248 00005260 48FFC6                  	inc rsi
  8249 00005263 EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8250                                  .L_lambda_simple_params_end_0032:
  8251 00005265 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8252 00005268 4889C3                  	mov rbx, rax
  8253 0000526B 58                      	pop rax
  8254 0000526C C60004                  	mov byte [rax], T_closure
  8255 0000526F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8256 00005273 48C74009[80520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8257 0000527B E926040000              	jmp .L_lambda_simple_end_0032
  8258                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8259 00005280 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8260 00005286 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8261 00005288 FF742410                	push qword [rsp + 8 * 2]
  8262 0000528C 6A01                    	push 1
  8263 0000528E E9B10D0100              	jmp L_error_incorrect_arity_simple
  8264                                  .L_lambda_simple_arity_check_ok_0032:
  8265 00005293 C8000000                	enter 0, 0
  8266 00005297 BF08000000              	mov rdi, 8 * 1
  8267 0000529C E8EA0D0100              	call malloc
  8268 000052A1 488B5D20                	mov rbx, PARAM(0)
  8269 000052A5 488918                  	mov qword [rax], rbx
  8270 000052A8 48894520                	mov PARAM(0), rax
  8271 000052AC 48B8-                   	mov rax, sob_void
  8271 000052AE [0000000000000000] 
  8272                                  
  8273                                  	; preparing a non-tail-call
  8274 000052B6 6A00                    	push 0	; arg count
  8275 000052B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8276 000052BD E8C90D0100              	call malloc
  8277 000052C2 50                      	push rax
  8278 000052C3 BF08000000              	mov rdi, 8 * 1	; new rib
  8279 000052C8 E8BE0D0100              	call malloc
  8280 000052CD 50                      	push rax
  8281 000052CE BF10000000              	mov rdi, 8 * 2	; extended env
  8282 000052D3 E8B30D0100              	call malloc
  8283 000052D8 488B7D10                	mov rdi, ENV
  8284 000052DC BE00000000              	mov rsi, 0
  8285 000052E1 BA01000000              	mov rdx, 1
  8286                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8287 000052E6 4883FE01                	cmp rsi, 1
  8288 000052EA 7410                    	je .L_lambda_simple_env_end_0033
  8289 000052EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8290 000052F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8291 000052F4 48FFC6                  	inc rsi
  8292 000052F7 48FFC2                  	inc rdx
  8293 000052FA EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8294                                  .L_lambda_simple_env_end_0033:
  8295 000052FC 5B                      	pop rbx
  8296 000052FD BE00000000              	mov rsi, 0
  8297                                  .L_lambda_simple_params_loop_0033:	; copy params
  8298 00005302 4883FE01                	cmp rsi, 1
  8299 00005306 740E                    	je .L_lambda_simple_params_end_0033
  8300 00005308 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8301 0000530D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8302 00005311 48FFC6                  	inc rsi
  8303 00005314 EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8304                                  .L_lambda_simple_params_end_0033:
  8305 00005316 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8306 00005319 4889C3                  	mov rbx, rax
  8307 0000531C 58                      	pop rax
  8308 0000531D C60004                  	mov byte [rax], T_closure
  8309 00005320 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8310 00005324 48C74009[31530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8311 0000532C E967010000              	jmp .L_lambda_simple_end_0033
  8312                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8313 00005331 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8314 00005337 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8315 00005339 FF742410                	push qword [rsp + 8 * 2]
  8316 0000533D 6A03                    	push 3
  8317 0000533F E9000D0100              	jmp L_error_incorrect_arity_simple
  8318                                  .L_lambda_simple_arity_check_ok_0033:
  8319 00005344 C8000000                	enter 0, 0
  8320                                  	; preparing a non-tail-call
  8321 00005348 488B4530                	mov rax, PARAM(2)	; param ss
  8322 0000534C 50                      	push rax
  8323 0000534D 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  8324 00005355 803805                  	cmp byte [rax], T_undefined
  8325 00005358 0F84000C0100            	je L_error_fvar_undefined
  8326 0000535E 50                      	push rax
  8327 0000535F 6A02                    	push 2	; arg count
  8328 00005361 488B0425[50150000]      	mov rax, qword [free_var_111]	; free var ormap
  8329 00005369 803805                  	cmp byte [rax], T_undefined
  8330 0000536C 0F84EC0B0100            	je L_error_fvar_undefined
  8331 00005372 803804                  	cmp byte [rax], T_closure
  8332 00005375 0F85670C0100            	jne L_error_non_closure
  8333 0000537B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8334 0000537E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8335 00005381 483D[02000000]          	cmp rax, sob_boolean_false
  8336 00005387 7409                    	je .L_if_else_000f
  8337 00005389 488B4528                	mov rax, PARAM(1)	; param unit
  8338 0000538D E902010000              	jmp .L_if_end_000f
  8339                                  .L_if_else_000f:
  8340                                  	; Setting up for a tail-call
  8341 00005392 488B4520                	mov rax, PARAM(0)	; param f
  8342 00005396 50                      	push rax
  8343                                  	; preparing a non-tail-call
  8344                                  	; preparing a non-tail-call
  8345 00005397 488B4530                	mov rax, PARAM(2)	; param ss
  8346 0000539B 50                      	push rax
  8347 0000539C 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  8348 000053A4 803805                  	cmp byte [rax], T_undefined
  8349 000053A7 0F84B10B0100            	je L_error_fvar_undefined
  8350 000053AD 50                      	push rax
  8351 000053AE 6A02                    	push 2	; arg count
  8352 000053B0 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  8353 000053B8 803805                  	cmp byte [rax], T_undefined
  8354 000053BB 0F849D0B0100            	je L_error_fvar_undefined
  8355 000053C1 803804                  	cmp byte [rax], T_closure
  8356 000053C4 0F85180C0100            	jne L_error_non_closure
  8357 000053CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8358 000053CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  8359 000053D0 50                      	push rax
  8360 000053D1 488B4528                	mov rax, PARAM(1)	; param unit
  8361 000053D5 50                      	push rax
  8362 000053D6 488B4520                	mov rax, PARAM(0)	; param f
  8363 000053DA 50                      	push rax
  8364 000053DB 6A03                    	push 3	; arg count
  8365 000053DD 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
  8366 000053E5 803805                  	cmp byte [rax], T_undefined
  8367 000053E8 0F84700B0100            	je L_error_fvar_undefined
  8368 000053EE 803804                  	cmp byte [rax], T_closure
  8369 000053F1 0F85EB0B0100            	jne L_error_non_closure
  8370 000053F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8371 000053FA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8372 000053FD 50                      	push rax
  8373                                  	; preparing a non-tail-call
  8374 000053FE 488B4530                	mov rax, PARAM(2)	; param ss
  8375 00005402 50                      	push rax
  8376 00005403 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  8377 0000540B 803805                  	cmp byte [rax], T_undefined
  8378 0000540E 0F844A0B0100            	je L_error_fvar_undefined
  8379 00005414 50                      	push rax
  8380 00005415 6A02                    	push 2	; arg count
  8381 00005417 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  8382 0000541F 803805                  	cmp byte [rax], T_undefined
  8383 00005422 0F84360B0100            	je L_error_fvar_undefined
  8384 00005428 803804                  	cmp byte [rax], T_closure
  8385 0000542B 0F85B10B0100            	jne L_error_non_closure
  8386 00005431 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8387 00005434 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8388 00005437 50                      	push rax
  8389 00005438 6A03                    	push 3
  8390 0000543A 488B4510                	mov rax, ENV
  8391 0000543E 488B00                  	mov rax, qword [rax + 8 * 0]
  8392 00005441 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8393 00005444 488B00                  	mov rax, qword [rax]
  8394 00005447 803804                  	cmp byte [rax], T_closure
  8395 0000544A 0F85920B0100            	jne L_error_non_closure
  8396 00005450 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8397 00005453 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  8398 00005457 4C8B4D00                	mov r9, qword [rbp]
  8399 0000545B 4150                    	push r8
  8400 0000545D 4151                    	push r9
  8401 0000545F 41BA07000000            	mov r10, 3 + 4
  8402 00005465 4C8B5D18                	mov r11, COUNT
  8403 00005469 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  8404 0000546E 4C8D65F8                	lea r12, [rbp - 8]
  8405                                  .L_tc_recycle_frame_loop_002f:
  8406 00005472 4983FA00                	cmp r10, 0
  8407 00005476 7414                    	je .L_tc_recycle_frame_done_002f
  8408 00005478 4D8B2C24                	mov r13, qword [r12]
  8409 0000547C 4D892B                  	mov qword [r11], r13
  8410 0000547F 49FFCA                  	dec r10
  8411 00005482 4983EB08                	sub r11, 8
  8412 00005486 4983EC08                	sub r12, 8
  8413 0000548A EBE6                    	jmp .L_tc_recycle_frame_loop_002f
  8414                                  .L_tc_recycle_frame_done_002f:
  8415 0000548C 498D6308                	lea rsp, [r11 + 8]
  8416 00005490 5D                      	pop rbp
  8417 00005491 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8418                                  .L_if_end_000f:
  8419 00005494 C9                      	leave
  8420 00005495 C22800                  	ret AND_KILL_FRAME(3)
  8421                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8422 00005498 803804                  	cmp byte [rax], T_closure
  8423 0000549B 0F85410B0100            	jne L_error_non_closure
  8424 000054A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8425 000054A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8426 000054A7 50                      	push rax
  8427 000054A8 488B4520                	mov rax, PARAM(0)	; param run
  8428 000054AC 8F00                    	pop qword [rax]
  8429 000054AE 48B8-                   	mov rax, sob_void
  8429 000054B0 [0000000000000000] 
  8430                                  
  8431 000054B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8432 000054BD E8C90B0100              	call malloc
  8433 000054C2 50                      	push rax
  8434 000054C3 BF08000000              	mov rdi, 8 * 1	; new rib
  8435 000054C8 E8BE0B0100              	call malloc
  8436 000054CD 50                      	push rax
  8437 000054CE BF10000000              	mov rdi, 8 * 2	; extended env
  8438 000054D3 E8B30B0100              	call malloc
  8439 000054D8 488B7D10                	mov rdi, ENV
  8440 000054DC BE00000000              	mov rsi, 0
  8441 000054E1 BA01000000              	mov rdx, 1
  8442                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8443 000054E6 4883FE01                	cmp rsi, 1
  8444 000054EA 7410                    	je .L_lambda_opt_env_end_0008
  8445 000054EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8446 000054F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8447 000054F4 48FFC6                  	inc rsi
  8448 000054F7 48FFC2                  	inc rdx
  8449 000054FA EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8450                                  .L_lambda_opt_env_end_0008:
  8451 000054FC 5B                      	pop rbx
  8452 000054FD BE00000000              	mov rsi, 0
  8453                                  .L_lambda_opt_params_loop_0008:	; copy params
  8454 00005502 4883FE01                	cmp rsi, 1
  8455 00005506 740E                    	je .L_lambda_opt_params_end_0008
  8456 00005508 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8457 0000550D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8458 00005511 48FFC6                  	inc rsi
  8459 00005514 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8460                                  .L_lambda_opt_params_end_0008:
  8461 00005516 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8462 00005519 4889C3                  	mov rbx, rax
  8463 0000551C 58                      	pop rax
  8464 0000551D C60004                  	mov byte [rax], T_closure
  8465 00005520 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8466 00005524 48C74009[31550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8467 0000552C E971010000              	jmp .L_lambda_opt_end_0008
  8468                                  .L_lambda_opt_code_0008:
  8469 00005531 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8470 00005536 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8471 0000553A 7407                    	je .L_lambda_opt_arity_check_exact_0008	; Jump if arity matches
  8472 0000553C 7F4C                    	jg .L_lambda_opt_arity_check_more_0008	; Jump if more arguments passed
  8473 0000553E E9150B0100              	jmp L_error_incorrect_arity_opt
  8474                                  .L_lambda_opt_arity_check_exact_0008:
  8475 00005543 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8476 00005546 4983C603                	add r14, 3 ; add 3 first stack values
  8477 0000554A 41BF00000000            	mov r15, 0 ; r15 = index
  8478 00005550 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8479 00005554 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8480 0000555C EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8481                                  .L_lambda_opt_stack_shrink_loop_0008:
  8482 0000555E 4983FE00                	cmp r14, 0
  8483 00005562 7E11                    	jle .L_make_lambda_opt_exact_finish_0008
  8484 00005564 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8485 00005569 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8486 0000556D 49FFCE                  	dec r14 ; next loop value
  8487 00005570 49FFC7                  	inc r15 ; update i
  8488 00005573 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8489                                  .L_make_lambda_opt_exact_finish_0008:
  8490 00005575 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8491 0000557D 49FFC2                  	inc r10
  8492 00005580 4C89542410              	mov qword [rsp + 8 * 2], r10
  8493 00005585 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0008
  8494                                  .L_lambda_opt_arity_check_more_0008:
  8495 0000558A 4D89D6                  	mov r14, r10 ; r14 = num args
  8496 0000558D 4D89D7                  	mov r15, r10 ; r15 = num args
  8497 00005590 41B902000000            	mov r9, 2; r9 = number of params 
  8498 00005596 4D29CE                  	sub r14, r9 ; r14 = extra args
  8499 00005599 4D01F1                  	add r9, r14 ; r9 = num args
  8500 0000559C 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8500 0000559E [0100000000000000] 
  8501 000055A6 EB00                    	jmp .L_make_lambda_opt_arg_list_0008
  8502                                  .L_make_lambda_opt_arg_list_0008:
  8503 000055A8 4983FE00                	cmp r14, 0
  8504 000055AC 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0008
  8505 000055AE 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  8506 000055B3 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  8507 000055B6 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8508 000055BC E8CA0A0100              	call malloc                         ; Allocate memory, result in rax
  8509 000055C1 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8510 000055C4 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  8511 000055C8 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8512 000055CC 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8513 000055CF 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  8514 000055D2 49FFC9                  	dec r9                              ; args index minus 1
  8515 000055D5 49FFCE                  	dec r14                             ; next iteration
  8516 000055D8 EBCE                    	jmp .L_make_lambda_opt_arg_list_0008
  8517                                  .L_make_lambda_opt_stack_fixed_0008:
  8518 000055DA 4D89FE                  	mov r14, r15 ; r14 = num args
  8519 000055DD 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8520 000055E0 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8521 000055E4 41BA02000000            	mov r10, 2; r10 = num of params
  8522 000055EA 4D29D6                  	sub r14, r10 ; r14 = extra args
  8523 000055ED 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8524 000055F0 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8525 000055F3 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  8526 000055F8 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0008
  8527                                  .L_lambda_opt_stack_shrink_loop_more_0008:
  8528 000055FA 4983F800                	cmp r8, 0
  8529 000055FE 7E15                    	jle .L_make_lambda_opt_more_finish_0008
  8530 00005600 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  8531 00005604 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8532 00005608 4D8D26                  	lea r12, [r14]
  8533 0000560B 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  8534 00005610 49FFC8                  	dec r8 ; next iteration
  8535 00005613 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0008
  8536                                  .L_make_lambda_opt_more_finish_0008:
  8537 00005615 4D89F8                  	mov r8, r15 ; num of args
  8538 00005618 41BA02000000            	mov r10, 2
  8539 0000561E 4D29D0                  	sub r8, r10 ; num of new args
  8540 00005621 49FFC0                  	inc r8
  8541 00005624 4C89442420              	mov qword [rsp + 8 * 4], r8
  8542 00005629 4883C410                	add rsp, 8 * 2  ; 
  8543 0000562D EB00                    	jmp .L_lambda_opt_stack_adjusted_0008
  8544                                  .L_lambda_opt_stack_adjusted_0008:
  8545 0000562F C8000000                	enter 0, 0
  8546                                  	; Setting up for a tail-call
  8547 00005633 488B4520                	mov rax, PARAM(0)	; param f
  8548 00005637 50                      	push rax
  8549 00005638 488B4528                	mov rax, PARAM(1)	; param unit
  8550 0000563C 50                      	push rax
  8551 0000563D 488B4530                	mov rax, PARAM(2)	; param ss
  8552 00005641 50                      	push rax
  8553 00005642 6A03                    	push 3
  8554 00005644 488B4510                	mov rax, ENV
  8555 00005648 488B00                  	mov rax, qword [rax + 8 * 0]
  8556 0000564B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8557 0000564E 488B00                  	mov rax, qword [rax]
  8558 00005651 803804                  	cmp byte [rax], T_closure
  8559 00005654 0F8588090100            	jne L_error_non_closure
  8560 0000565A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8561 0000565D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  8562 00005661 4C8B4D00                	mov r9, qword [rbp]
  8563 00005665 4150                    	push r8
  8564 00005667 4151                    	push r9
  8565 00005669 41BA07000000            	mov r10, 3 + 4
  8566 0000566F 4C8B5D18                	mov r11, COUNT
  8567 00005673 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  8568 00005678 4C8D65F8                	lea r12, [rbp - 8]
  8569                                  .L_tc_recycle_frame_loop_0030:
  8570 0000567C 4983FA00                	cmp r10, 0
  8571 00005680 7414                    	je .L_tc_recycle_frame_done_0030
  8572 00005682 4D8B2C24                	mov r13, qword [r12]
  8573 00005686 4D892B                  	mov qword [r11], r13
  8574 00005689 49FFCA                  	dec r10
  8575 0000568C 4983EB08                	sub r11, 8
  8576 00005690 4983EC08                	sub r12, 8
  8577 00005694 EBE6                    	jmp .L_tc_recycle_frame_loop_0030
  8578                                  .L_tc_recycle_frame_done_0030:
  8579 00005696 498D6308                	lea rsp, [r11 + 8]
  8580 0000569A 5D                      	pop rbp
  8581 0000569B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8582 0000569E C9                      	leave
  8583 0000569F C22000                  	ret AND_KILL_FRAME(2)
  8584                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8585 000056A2 C9                      	leave
  8586 000056A3 C21800                  	ret AND_KILL_FRAME(1)
  8587                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8588 000056A6 803804                  	cmp byte [rax], T_closure
  8589 000056A9 0F8533090100            	jne L_error_non_closure
  8590 000056AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8591 000056B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8592 000056B5 48890425[A7130000]      	mov qword [free_var_86], rax
  8593 000056BD 48B8-                   	mov rax, sob_void
  8593 000056BF [0000000000000000] 
  8594                                  
  8595 000056C7 4889C7                  	mov rdi, rax
  8596 000056CA E8110C0100              	call print_sexpr_if_not_void
  8597                                  	; preparing a non-tail-call
  8598 000056CF 48B8-                   	mov rax, L_constants + 1993
  8598 000056D1 [C907000000000000] 
  8599 000056D9 50                      	push rax
  8600 000056DA 6A01                    	push 1	; arg count
  8601 000056DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8602 000056E1 E8A5090100              	call malloc
  8603 000056E6 50                      	push rax
  8604 000056E7 BF00000000              	mov rdi, 8 * 0	; new rib
  8605 000056EC E89A090100              	call malloc
  8606 000056F1 50                      	push rax
  8607 000056F2 BF08000000              	mov rdi, 8 * 1	; extended env
  8608 000056F7 E88F090100              	call malloc
  8609 000056FC 488B7D10                	mov rdi, ENV
  8610 00005700 BE00000000              	mov rsi, 0
  8611 00005705 BA01000000              	mov rdx, 1
  8612                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8613 0000570A 4883FE00                	cmp rsi, 0
  8614 0000570E 7410                    	je .L_lambda_simple_env_end_0034
  8615 00005710 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8616 00005714 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8617 00005718 48FFC6                  	inc rsi
  8618 0000571B 48FFC2                  	inc rdx
  8619 0000571E EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8620                                  .L_lambda_simple_env_end_0034:
  8621 00005720 5B                      	pop rbx
  8622 00005721 BE00000000              	mov rsi, 0
  8623                                  .L_lambda_simple_params_loop_0034:	; copy params
  8624 00005726 4883FE00                	cmp rsi, 0
  8625 0000572A 740E                    	je .L_lambda_simple_params_end_0034
  8626 0000572C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8627 00005731 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8628 00005735 48FFC6                  	inc rsi
  8629 00005738 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8630                                  .L_lambda_simple_params_end_0034:
  8631 0000573A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8632 0000573D 4889C3                  	mov rbx, rax
  8633 00005740 58                      	pop rax
  8634 00005741 C60004                  	mov byte [rax], T_closure
  8635 00005744 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8636 00005748 48C74009[55570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8637 00005750 E977040000              	jmp .L_lambda_simple_end_0034
  8638                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8639 00005755 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8640 0000575B 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8641 0000575D FF742410                	push qword [rsp + 8 * 2]
  8642 00005761 6A01                    	push 1
  8643 00005763 E9DC080100              	jmp L_error_incorrect_arity_simple
  8644                                  .L_lambda_simple_arity_check_ok_0034:
  8645 00005768 C8000000                	enter 0, 0
  8646 0000576C BF08000000              	mov rdi, 8 * 1
  8647 00005771 E815090100              	call malloc
  8648 00005776 488B5D20                	mov rbx, PARAM(0)
  8649 0000577A 488918                  	mov qword [rax], rbx
  8650 0000577D 48894520                	mov PARAM(0), rax
  8651 00005781 48B8-                   	mov rax, sob_void
  8651 00005783 [0000000000000000] 
  8652                                  
  8653                                  	; preparing a non-tail-call
  8654 0000578B 6A00                    	push 0	; arg count
  8655 0000578D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8656 00005792 E8F4080100              	call malloc
  8657 00005797 50                      	push rax
  8658 00005798 BF08000000              	mov rdi, 8 * 1	; new rib
  8659 0000579D E8E9080100              	call malloc
  8660 000057A2 50                      	push rax
  8661 000057A3 BF10000000              	mov rdi, 8 * 2	; extended env
  8662 000057A8 E8DE080100              	call malloc
  8663 000057AD 488B7D10                	mov rdi, ENV
  8664 000057B1 BE00000000              	mov rsi, 0
  8665 000057B6 BA01000000              	mov rdx, 1
  8666                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8667 000057BB 4883FE01                	cmp rsi, 1
  8668 000057BF 7410                    	je .L_lambda_simple_env_end_0035
  8669 000057C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8670 000057C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8671 000057C9 48FFC6                  	inc rsi
  8672 000057CC 48FFC2                  	inc rdx
  8673 000057CF EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8674                                  .L_lambda_simple_env_end_0035:
  8675 000057D1 5B                      	pop rbx
  8676 000057D2 BE00000000              	mov rsi, 0
  8677                                  .L_lambda_simple_params_loop_0035:	; copy params
  8678 000057D7 4883FE01                	cmp rsi, 1
  8679 000057DB 740E                    	je .L_lambda_simple_params_end_0035
  8680 000057DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8681 000057E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8682 000057E6 48FFC6                  	inc rsi
  8683 000057E9 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  8684                                  .L_lambda_simple_params_end_0035:
  8685 000057EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8686 000057EE 4889C3                  	mov rbx, rax
  8687 000057F1 58                      	pop rax
  8688 000057F2 C60004                  	mov byte [rax], T_closure
  8689 000057F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8690 000057F9 48C74009[06580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  8691 00005801 E9B8010000              	jmp .L_lambda_simple_end_0035
  8692                                  .L_lambda_simple_code_0035:	; lambda-simple body
  8693 00005806 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8694 0000580C 740B                    	je .L_lambda_simple_arity_check_ok_0035
  8695 0000580E FF742410                	push qword [rsp + 8 * 2]
  8696 00005812 6A03                    	push 3
  8697 00005814 E92B080100              	jmp L_error_incorrect_arity_simple
  8698                                  .L_lambda_simple_arity_check_ok_0035:
  8699 00005819 C8000000                	enter 0, 0
  8700                                  	; preparing a non-tail-call
  8701 0000581D 488B4530                	mov rax, PARAM(2)	; param ss
  8702 00005821 50                      	push rax
  8703 00005822 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
  8704 0000582A 803805                  	cmp byte [rax], T_undefined
  8705 0000582D 0F842B070100            	je L_error_fvar_undefined
  8706 00005833 50                      	push rax
  8707 00005834 6A02                    	push 2	; arg count
  8708 00005836 488B0425[50150000]      	mov rax, qword [free_var_111]	; free var ormap
  8709 0000583E 803805                  	cmp byte [rax], T_undefined
  8710 00005841 0F8417070100            	je L_error_fvar_undefined
  8711 00005847 803804                  	cmp byte [rax], T_closure
  8712 0000584A 0F8592070100            	jne L_error_non_closure
  8713 00005850 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8714 00005853 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8715 00005856 483D[02000000]          	cmp rax, sob_boolean_false
  8716 0000585C 7409                    	je .L_if_else_0010
  8717 0000585E 488B4528                	mov rax, PARAM(1)	; param unit
  8718 00005862 E953010000              	jmp .L_if_end_0010
  8719                                  .L_if_else_0010:
  8720                                  	; Setting up for a tail-call
  8721 00005867 488B4520                	mov rax, PARAM(0)	; param f
  8722 0000586B 50                      	push rax
  8723                                  	; preparing a non-tail-call
  8724                                  	; preparing a non-tail-call
  8725 0000586C 48B8-                   	mov rax, L_constants + 1
  8725 0000586E [0100000000000000] 
  8726 00005876 50                      	push rax
  8727                                  	; preparing a non-tail-call
  8728                                  	; preparing a non-tail-call
  8729 00005877 488B4530                	mov rax, PARAM(2)	; param ss
  8730 0000587B 50                      	push rax
  8731 0000587C 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
  8732 00005884 803805                  	cmp byte [rax], T_undefined
  8733 00005887 0F84D1060100            	je L_error_fvar_undefined
  8734 0000588D 50                      	push rax
  8735 0000588E 6A02                    	push 2	; arg count
  8736 00005890 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  8737 00005898 803805                  	cmp byte [rax], T_undefined
  8738 0000589B 0F84BD060100            	je L_error_fvar_undefined
  8739 000058A1 803804                  	cmp byte [rax], T_closure
  8740 000058A4 0F8538070100            	jne L_error_non_closure
  8741 000058AA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8742 000058AD FF5009                  	call SOB_CLOSURE_CODE(rax)
  8743 000058B0 50                      	push rax
  8744 000058B1 488B4528                	mov rax, PARAM(1)	; param unit
  8745 000058B5 50                      	push rax
  8746 000058B6 488B4520                	mov rax, PARAM(0)	; param f
  8747 000058BA 50                      	push rax
  8748 000058BB 6A03                    	push 3	; arg count
  8749 000058BD 488B4510                	mov rax, ENV
  8750 000058C1 488B00                  	mov rax, qword [rax + 8 * 0]
  8751 000058C4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8752 000058C7 488B00                  	mov rax, qword [rax]
  8753 000058CA 803804                  	cmp byte [rax], T_closure
  8754 000058CD 0F850F070100            	jne L_error_non_closure
  8755 000058D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8756 000058D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8757 000058D9 50                      	push rax
  8758 000058DA 6A02                    	push 2	; arg count
  8759 000058DC 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
  8760 000058E4 803805                  	cmp byte [rax], T_undefined
  8761 000058E7 0F8471060100            	je L_error_fvar_undefined
  8762 000058ED 803804                  	cmp byte [rax], T_closure
  8763 000058F0 0F85EC060100            	jne L_error_non_closure
  8764 000058F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8765 000058F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8766 000058FC 50                      	push rax
  8767                                  	; preparing a non-tail-call
  8768 000058FD 488B4530                	mov rax, PARAM(2)	; param ss
  8769 00005901 50                      	push rax
  8770 00005902 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
  8771 0000590A 803805                  	cmp byte [rax], T_undefined
  8772 0000590D 0F844B060100            	je L_error_fvar_undefined
  8773 00005913 50                      	push rax
  8774 00005914 6A02                    	push 2	; arg count
  8775 00005916 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
  8776 0000591E 803805                  	cmp byte [rax], T_undefined
  8777 00005921 0F8437060100            	je L_error_fvar_undefined
  8778 00005927 803804                  	cmp byte [rax], T_closure
  8779 0000592A 0F85B2060100            	jne L_error_non_closure
  8780 00005930 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8781 00005933 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8782 00005936 50                      	push rax
  8783 00005937 6A02                    	push 2	; arg count
  8784 00005939 488B0425[22100000]      	mov rax, qword [free_var_33]	; free var append
  8785 00005941 803805                  	cmp byte [rax], T_undefined
  8786 00005944 0F8414060100            	je L_error_fvar_undefined
  8787 0000594A 803804                  	cmp byte [rax], T_closure
  8788 0000594D 0F858F060100            	jne L_error_non_closure
  8789 00005953 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8790 00005956 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8791 00005959 50                      	push rax
  8792 0000595A 6A02                    	push 2
  8793 0000595C 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
  8794 00005964 803805                  	cmp byte [rax], T_undefined
  8795 00005967 0F84F1050100            	je L_error_fvar_undefined
  8796 0000596D 803804                  	cmp byte [rax], T_closure
  8797 00005970 0F856C060100            	jne L_error_non_closure
  8798 00005976 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8799 00005979 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  8800 0000597D 4C8B4D00                	mov r9, qword [rbp]
  8801 00005981 4150                    	push r8
  8802 00005983 4151                    	push r9
  8803 00005985 41BA06000000            	mov r10, 2 + 4
  8804 0000598B 4C8B5D18                	mov r11, COUNT
  8805 0000598F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  8806 00005994 4C8D65F8                	lea r12, [rbp - 8]
  8807                                  .L_tc_recycle_frame_loop_0031:
  8808 00005998 4983FA00                	cmp r10, 0
  8809 0000599C 7414                    	je .L_tc_recycle_frame_done_0031
  8810 0000599E 4D8B2C24                	mov r13, qword [r12]
  8811 000059A2 4D892B                  	mov qword [r11], r13
  8812 000059A5 49FFCA                  	dec r10
  8813 000059A8 4983EB08                	sub r11, 8
  8814 000059AC 4983EC08                	sub r12, 8
  8815 000059B0 EBE6                    	jmp .L_tc_recycle_frame_loop_0031
  8816                                  .L_tc_recycle_frame_done_0031:
  8817 000059B2 498D6308                	lea rsp, [r11 + 8]
  8818 000059B6 5D                      	pop rbp
  8819 000059B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8820                                  .L_if_end_0010:
  8821 000059BA C9                      	leave
  8822 000059BB C22800                  	ret AND_KILL_FRAME(3)
  8823                                  .L_lambda_simple_end_0035:	; new closure is in rax
  8824 000059BE 803804                  	cmp byte [rax], T_closure
  8825 000059C1 0F851B060100            	jne L_error_non_closure
  8826 000059C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8827 000059CA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8828 000059CD 50                      	push rax
  8829 000059CE 488B4520                	mov rax, PARAM(0)	; param run
  8830 000059D2 8F00                    	pop qword [rax]
  8831 000059D4 48B8-                   	mov rax, sob_void
  8831 000059D6 [0000000000000000] 
  8832                                  
  8833 000059DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8834 000059E3 E8A3060100              	call malloc
  8835 000059E8 50                      	push rax
  8836 000059E9 BF08000000              	mov rdi, 8 * 1	; new rib
  8837 000059EE E898060100              	call malloc
  8838 000059F3 50                      	push rax
  8839 000059F4 BF10000000              	mov rdi, 8 * 2	; extended env
  8840 000059F9 E88D060100              	call malloc
  8841 000059FE 488B7D10                	mov rdi, ENV
  8842 00005A02 BE00000000              	mov rsi, 0
  8843 00005A07 BA01000000              	mov rdx, 1
  8844                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  8845 00005A0C 4883FE01                	cmp rsi, 1
  8846 00005A10 7410                    	je .L_lambda_opt_env_end_0009
  8847 00005A12 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8848 00005A16 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8849 00005A1A 48FFC6                  	inc rsi
  8850 00005A1D 48FFC2                  	inc rdx
  8851 00005A20 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8852                                  .L_lambda_opt_env_end_0009:
  8853 00005A22 5B                      	pop rbx
  8854 00005A23 BE00000000              	mov rsi, 0
  8855                                  .L_lambda_opt_params_loop_0009:	; copy params
  8856 00005A28 4883FE01                	cmp rsi, 1
  8857 00005A2C 740E                    	je .L_lambda_opt_params_end_0009
  8858 00005A2E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8859 00005A33 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8860 00005A37 48FFC6                  	inc rsi
  8861 00005A3A EBEC                    	jmp .L_lambda_opt_params_loop_0009
  8862                                  .L_lambda_opt_params_end_0009:
  8863 00005A3C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8864 00005A3F 4889C3                  	mov rbx, rax
  8865 00005A42 58                      	pop rax
  8866 00005A43 C60004                  	mov byte [rax], T_closure
  8867 00005A46 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8868 00005A4A 48C74009[575A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8869 00005A52 E971010000              	jmp .L_lambda_opt_end_0009
  8870                                  .L_lambda_opt_code_0009:
  8871 00005A57 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8872 00005A5C 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8873 00005A60 7407                    	je .L_lambda_opt_arity_check_exact_0009	; Jump if arity matches
  8874 00005A62 7F4C                    	jg .L_lambda_opt_arity_check_more_0009	; Jump if more arguments passed
  8875 00005A64 E9EF050100              	jmp L_error_incorrect_arity_opt
  8876                                  .L_lambda_opt_arity_check_exact_0009:
  8877 00005A69 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8878 00005A6C 4983C603                	add r14, 3 ; add 3 first stack values
  8879 00005A70 41BF00000000            	mov r15, 0 ; r15 = index
  8880 00005A76 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8881 00005A7A 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8882 00005A82 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8883                                  .L_lambda_opt_stack_shrink_loop_0009:
  8884 00005A84 4983FE00                	cmp r14, 0
  8885 00005A88 7E11                    	jle .L_make_lambda_opt_exact_finish_0009
  8886 00005A8A 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8887 00005A8F 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8888 00005A93 49FFCE                  	dec r14 ; next loop value
  8889 00005A96 49FFC7                  	inc r15 ; update i
  8890 00005A99 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8891                                  .L_make_lambda_opt_exact_finish_0009:
  8892 00005A9B 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8893 00005AA3 49FFC2                  	inc r10
  8894 00005AA6 4C89542410              	mov qword [rsp + 8 * 2], r10
  8895 00005AAB E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0009
  8896                                  .L_lambda_opt_arity_check_more_0009:
  8897 00005AB0 4D89D6                  	mov r14, r10 ; r14 = num args
  8898 00005AB3 4D89D7                  	mov r15, r10 ; r15 = num args
  8899 00005AB6 41B902000000            	mov r9, 2; r9 = number of params 
  8900 00005ABC 4D29CE                  	sub r14, r9 ; r14 = extra args
  8901 00005ABF 4D01F1                  	add r9, r14 ; r9 = num args
  8902 00005AC2 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8902 00005AC4 [0100000000000000] 
  8903 00005ACC EB00                    	jmp .L_make_lambda_opt_arg_list_0009
  8904                                  .L_make_lambda_opt_arg_list_0009:
  8905 00005ACE 4983FE00                	cmp r14, 0
  8906 00005AD2 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0009
  8907 00005AD4 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
  8908 00005AD9 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
  8909 00005ADC 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8910 00005AE2 E8A4050100              	call malloc                         ; Allocate memory, result in rax
  8911 00005AE7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8912 00005AEA 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
  8913 00005AEE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8914 00005AF2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8915 00005AF5 4C89C0                  	mov rax, r8                         ; Restore closure to rax
  8916 00005AF8 49FFC9                  	dec r9                              ; args index minus 1
  8917 00005AFB 49FFCE                  	dec r14                             ; next iteration
  8918 00005AFE EBCE                    	jmp .L_make_lambda_opt_arg_list_0009
  8919                                  .L_make_lambda_opt_stack_fixed_0009:
  8920 00005B00 4D89FE                  	mov r14, r15 ; r14 = num args
  8921 00005B03 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8922 00005B06 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8923 00005B0A 41BA02000000            	mov r10, 2; r10 = num of params
  8924 00005B10 4D29D6                  	sub r14, r10 ; r14 = extra args
  8925 00005B13 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8926 00005B16 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8927 00005B19 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  8928 00005B1E EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0009
  8929                                  .L_lambda_opt_stack_shrink_loop_more_0009:
  8930 00005B20 4983F800                	cmp r8, 0
  8931 00005B24 7E15                    	jle .L_make_lambda_opt_more_finish_0009
  8932 00005B26 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  8933 00005B2A 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8934 00005B2E 4D8D26                  	lea r12, [r14]
  8935 00005B31 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  8936 00005B36 49FFC8                  	dec r8 ; next iteration
  8937 00005B39 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0009
  8938                                  .L_make_lambda_opt_more_finish_0009:
  8939 00005B3B 4D89F8                  	mov r8, r15 ; num of args
  8940 00005B3E 41BA02000000            	mov r10, 2
  8941 00005B44 4D29D0                  	sub r8, r10 ; num of new args
  8942 00005B47 49FFC0                  	inc r8
  8943 00005B4A 4C89442420              	mov qword [rsp + 8 * 4], r8
  8944 00005B4F 4883C410                	add rsp, 8 * 2  ; 
  8945 00005B53 EB00                    	jmp .L_lambda_opt_stack_adjusted_0009
  8946                                  .L_lambda_opt_stack_adjusted_0009:
  8947 00005B55 C8000000                	enter 0, 0
  8948                                  	; Setting up for a tail-call
  8949 00005B59 488B4520                	mov rax, PARAM(0)	; param f
  8950 00005B5D 50                      	push rax
  8951 00005B5E 488B4528                	mov rax, PARAM(1)	; param unit
  8952 00005B62 50                      	push rax
  8953 00005B63 488B4530                	mov rax, PARAM(2)	; param ss
  8954 00005B67 50                      	push rax
  8955 00005B68 6A03                    	push 3
  8956 00005B6A 488B4510                	mov rax, ENV
  8957 00005B6E 488B00                  	mov rax, qword [rax + 8 * 0]
  8958 00005B71 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8959 00005B74 488B00                  	mov rax, qword [rax]
  8960 00005B77 803804                  	cmp byte [rax], T_closure
  8961 00005B7A 0F8562040100            	jne L_error_non_closure
  8962 00005B80 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8963 00005B83 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  8964 00005B87 4C8B4D00                	mov r9, qword [rbp]
  8965 00005B8B 4150                    	push r8
  8966 00005B8D 4151                    	push r9
  8967 00005B8F 41BA07000000            	mov r10, 3 + 4
  8968 00005B95 4C8B5D18                	mov r11, COUNT
  8969 00005B99 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  8970 00005B9E 4C8D65F8                	lea r12, [rbp - 8]
  8971                                  .L_tc_recycle_frame_loop_0032:
  8972 00005BA2 4983FA00                	cmp r10, 0
  8973 00005BA6 7414                    	je .L_tc_recycle_frame_done_0032
  8974 00005BA8 4D8B2C24                	mov r13, qword [r12]
  8975 00005BAC 4D892B                  	mov qword [r11], r13
  8976 00005BAF 49FFCA                  	dec r10
  8977 00005BB2 4983EB08                	sub r11, 8
  8978 00005BB6 4983EC08                	sub r12, 8
  8979 00005BBA EBE6                    	jmp .L_tc_recycle_frame_loop_0032
  8980                                  .L_tc_recycle_frame_done_0032:
  8981 00005BBC 498D6308                	lea rsp, [r11 + 8]
  8982 00005BC0 5D                      	pop rbp
  8983 00005BC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8984 00005BC4 C9                      	leave
  8985 00005BC5 C22000                  	ret AND_KILL_FRAME(2)
  8986                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8987 00005BC8 C9                      	leave
  8988 00005BC9 C21800                  	ret AND_KILL_FRAME(1)
  8989                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8990 00005BCC 803804                  	cmp byte [rax], T_closure
  8991 00005BCF 0F850D040100            	jne L_error_non_closure
  8992 00005BD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8993 00005BD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8994 00005BDB 48890425[B8130000]      	mov qword [free_var_87], rax
  8995 00005BE3 48B8-                   	mov rax, sob_void
  8995 00005BE5 [0000000000000000] 
  8996                                  
  8997 00005BED 4889C7                  	mov rdi, rax
  8998 00005BF0 E8EB060100              	call print_sexpr_if_not_void
  8999                                  	; preparing a non-tail-call
  9000 00005BF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9001 00005BFA E88C040100              	call malloc
  9002 00005BFF 50                      	push rax
  9003 00005C00 BF00000000              	mov rdi, 8 * 0	; new rib
  9004 00005C05 E881040100              	call malloc
  9005 00005C0A 50                      	push rax
  9006 00005C0B BF08000000              	mov rdi, 8 * 1	; extended env
  9007 00005C10 E876040100              	call malloc
  9008 00005C15 488B7D10                	mov rdi, ENV
  9009 00005C19 BE00000000              	mov rsi, 0
  9010 00005C1E BA01000000              	mov rdx, 1
  9011                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9012 00005C23 4883FE00                	cmp rsi, 0
  9013 00005C27 7410                    	je .L_lambda_simple_env_end_0036
  9014 00005C29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9015 00005C2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9016 00005C31 48FFC6                  	inc rsi
  9017 00005C34 48FFC2                  	inc rdx
  9018 00005C37 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9019                                  .L_lambda_simple_env_end_0036:
  9020 00005C39 5B                      	pop rbx
  9021 00005C3A BE00000000              	mov rsi, 0
  9022                                  .L_lambda_simple_params_loop_0036:	; copy params
  9023 00005C3F 4883FE00                	cmp rsi, 0
  9024 00005C43 740E                    	je .L_lambda_simple_params_end_0036
  9025 00005C45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9026 00005C4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9027 00005C4E 48FFC6                  	inc rsi
  9028 00005C51 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9029                                  .L_lambda_simple_params_end_0036:
  9030 00005C53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9031 00005C56 4889C3                  	mov rbx, rax
  9032 00005C59 58                      	pop rax
  9033 00005C5A C60004                  	mov byte [rax], T_closure
  9034 00005C5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9035 00005C61 48C74009[6E5C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9036 00005C69 E991000000              	jmp .L_lambda_simple_end_0036
  9037                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9038 00005C6E 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9039 00005C74 740B                    	je .L_lambda_simple_arity_check_ok_0036
  9040 00005C76 FF742410                	push qword [rsp + 8 * 2]
  9041 00005C7A 6A00                    	push 0
  9042 00005C7C E9C3030100              	jmp L_error_incorrect_arity_simple
  9043                                  .L_lambda_simple_arity_check_ok_0036:
  9044 00005C81 C8000000                	enter 0, 0
  9045                                  	; Setting up for a tail-call
  9046 00005C85 48B8-                   	mov rax, L_constants + 2192
  9046 00005C87 [9008000000000000] 
  9047 00005C8F 50                      	push rax
  9048 00005C90 48B8-                   	mov rax, L_constants + 2201
  9048 00005C92 [9908000000000000] 
  9049 00005C9A 50                      	push rax
  9050 00005C9B 6A02                    	push 2
  9051 00005C9D 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
  9052 00005CA5 803805                  	cmp byte [rax], T_undefined
  9053 00005CA8 0F84B0020100            	je L_error_fvar_undefined
  9054 00005CAE 803804                  	cmp byte [rax], T_closure
  9055 00005CB1 0F852B030100            	jne L_error_non_closure
  9056 00005CB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9057 00005CBA 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9058 00005CBE 4C8B4D00                	mov r9, qword [rbp]
  9059 00005CC2 4150                    	push r8
  9060 00005CC4 4151                    	push r9
  9061 00005CC6 41BA06000000            	mov r10, 2 + 4
  9062 00005CCC 4C8B5D18                	mov r11, COUNT
  9063 00005CD0 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9064 00005CD5 4C8D65F8                	lea r12, [rbp - 8]
  9065                                  .L_tc_recycle_frame_loop_0033:
  9066 00005CD9 4983FA00                	cmp r10, 0
  9067 00005CDD 7414                    	je .L_tc_recycle_frame_done_0033
  9068 00005CDF 4D8B2C24                	mov r13, qword [r12]
  9069 00005CE3 4D892B                  	mov qword [r11], r13
  9070 00005CE6 49FFCA                  	dec r10
  9071 00005CE9 4983EB08                	sub r11, 8
  9072 00005CED 4983EC08                	sub r12, 8
  9073 00005CF1 EBE6                    	jmp .L_tc_recycle_frame_loop_0033
  9074                                  .L_tc_recycle_frame_done_0033:
  9075 00005CF3 498D6308                	lea rsp, [r11 + 8]
  9076 00005CF7 5D                      	pop rbp
  9077 00005CF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9078 00005CFB C9                      	leave
  9079 00005CFC C21000                  	ret AND_KILL_FRAME(0)
  9080                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9081 00005CFF 50                      	push rax
  9082 00005D00 6A01                    	push 1	; arg count
  9083 00005D02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9084 00005D07 E87F030100              	call malloc
  9085 00005D0C 50                      	push rax
  9086 00005D0D BF00000000              	mov rdi, 8 * 0	; new rib
  9087 00005D12 E874030100              	call malloc
  9088 00005D17 50                      	push rax
  9089 00005D18 BF08000000              	mov rdi, 8 * 1	; extended env
  9090 00005D1D E869030100              	call malloc
  9091 00005D22 488B7D10                	mov rdi, ENV
  9092 00005D26 BE00000000              	mov rsi, 0
  9093 00005D2B BA01000000              	mov rdx, 1
  9094                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9095 00005D30 4883FE00                	cmp rsi, 0
  9096 00005D34 7410                    	je .L_lambda_simple_env_end_0037
  9097 00005D36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9098 00005D3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9099 00005D3E 48FFC6                  	inc rsi
  9100 00005D41 48FFC2                  	inc rdx
  9101 00005D44 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9102                                  .L_lambda_simple_env_end_0037:
  9103 00005D46 5B                      	pop rbx
  9104 00005D47 BE00000000              	mov rsi, 0
  9105                                  .L_lambda_simple_params_loop_0037:	; copy params
  9106 00005D4C 4883FE00                	cmp rsi, 0
  9107 00005D50 740E                    	je .L_lambda_simple_params_end_0037
  9108 00005D52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9109 00005D57 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9110 00005D5B 48FFC6                  	inc rsi
  9111 00005D5E EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9112                                  .L_lambda_simple_params_end_0037:
  9113 00005D60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9114 00005D63 4889C3                  	mov rbx, rax
  9115 00005D66 58                      	pop rax
  9116 00005D67 C60004                  	mov byte [rax], T_closure
  9117 00005D6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9118 00005D6E 48C74009[7B5D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9119 00005D76 E9E90C0000              	jmp .L_lambda_simple_end_0037
  9120                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9121 00005D7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9122 00005D81 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9123 00005D83 FF742410                	push qword [rsp + 8 * 2]
  9124 00005D87 6A01                    	push 1
  9125 00005D89 E9B6020100              	jmp L_error_incorrect_arity_simple
  9126                                  .L_lambda_simple_arity_check_ok_0037:
  9127 00005D8E C8000000                	enter 0, 0
  9128                                  	; Setting up for a tail-call
  9129 00005D92 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9130 00005D97 E8EF020100              	call malloc
  9131 00005D9C 50                      	push rax
  9132 00005D9D BF08000000              	mov rdi, 8 * 1	; new rib
  9133 00005DA2 E8E4020100              	call malloc
  9134 00005DA7 50                      	push rax
  9135 00005DA8 BF10000000              	mov rdi, 8 * 2	; extended env
  9136 00005DAD E8D9020100              	call malloc
  9137 00005DB2 488B7D10                	mov rdi, ENV
  9138 00005DB6 BE00000000              	mov rsi, 0
  9139 00005DBB BA01000000              	mov rdx, 1
  9140                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  9141 00005DC0 4883FE01                	cmp rsi, 1
  9142 00005DC4 7410                    	je .L_lambda_simple_env_end_0038
  9143 00005DC6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9144 00005DCA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9145 00005DCE 48FFC6                  	inc rsi
  9146 00005DD1 48FFC2                  	inc rdx
  9147 00005DD4 EBEA                    	jmp .L_lambda_simple_env_loop_0038
  9148                                  .L_lambda_simple_env_end_0038:
  9149 00005DD6 5B                      	pop rbx
  9150 00005DD7 BE00000000              	mov rsi, 0
  9151                                  .L_lambda_simple_params_loop_0038:	; copy params
  9152 00005DDC 4883FE01                	cmp rsi, 1
  9153 00005DE0 740E                    	je .L_lambda_simple_params_end_0038
  9154 00005DE2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9155 00005DE7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9156 00005DEB 48FFC6                  	inc rsi
  9157 00005DEE EBEC                    	jmp .L_lambda_simple_params_loop_0038
  9158                                  .L_lambda_simple_params_end_0038:
  9159 00005DF0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9160 00005DF3 4889C3                  	mov rbx, rax
  9161 00005DF6 58                      	pop rax
  9162 00005DF7 C60004                  	mov byte [rax], T_closure
  9163 00005DFA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9164 00005DFE 48C74009[0B5E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  9165 00005E06 E993080000              	jmp .L_lambda_simple_end_0038
  9166                                  .L_lambda_simple_code_0038:	; lambda-simple body
  9167 00005E0B 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9168 00005E11 740B                    	je .L_lambda_simple_arity_check_ok_0038
  9169 00005E13 FF742410                	push qword [rsp + 8 * 2]
  9170 00005E17 6A02                    	push 2
  9171 00005E19 E926020100              	jmp L_error_incorrect_arity_simple
  9172                                  .L_lambda_simple_arity_check_ok_0038:
  9173 00005E1E C8000000                	enter 0, 0
  9174                                  	; preparing a non-tail-call
  9175 00005E22 488B4520                	mov rax, PARAM(0)	; param a
  9176 00005E26 50                      	push rax
  9177 00005E27 6A01                    	push 1	; arg count
  9178 00005E29 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
  9179 00005E31 803805                  	cmp byte [rax], T_undefined
  9180 00005E34 0F8424010100            	je L_error_fvar_undefined
  9181 00005E3A 803804                  	cmp byte [rax], T_closure
  9182 00005E3D 0F859F010100            	jne L_error_non_closure
  9183 00005E43 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9184 00005E46 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9185 00005E49 483D[02000000]          	cmp rax, sob_boolean_false
  9186 00005E4F 0F8483020000            	je .L_if_else_001c
  9187                                  	; preparing a non-tail-call
  9188 00005E55 488B4528                	mov rax, PARAM(1)	; param b
  9189 00005E59 50                      	push rax
  9190 00005E5A 6A01                    	push 1	; arg count
  9191 00005E5C 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
  9192 00005E64 803805                  	cmp byte [rax], T_undefined
  9193 00005E67 0F84F1000100            	je L_error_fvar_undefined
  9194 00005E6D 803804                  	cmp byte [rax], T_closure
  9195 00005E70 0F856C010100            	jne L_error_non_closure
  9196 00005E76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9197 00005E79 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9198 00005E7C 483D[02000000]          	cmp rax, sob_boolean_false
  9199 00005E82 746F                    	je .L_if_else_0013
  9200                                  	; Setting up for a tail-call
  9201 00005E84 488B4520                	mov rax, PARAM(0)	; param a
  9202 00005E88 50                      	push rax
  9203 00005E89 488B4528                	mov rax, PARAM(1)	; param b
  9204 00005E8D 50                      	push rax
  9205 00005E8E 6A02                    	push 2
  9206 00005E90 488B0425[AC0E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9207 00005E98 803805                  	cmp byte [rax], T_undefined
  9208 00005E9B 0F84BD000100            	je L_error_fvar_undefined
  9209 00005EA1 803804                  	cmp byte [rax], T_closure
  9210 00005EA4 0F8538010100            	jne L_error_non_closure
  9211 00005EAA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9212 00005EAD 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9213 00005EB1 4C8B4D00                	mov r9, qword [rbp]
  9214 00005EB5 4150                    	push r8
  9215 00005EB7 4151                    	push r9
  9216 00005EB9 41BA06000000            	mov r10, 2 + 4
  9217 00005EBF 4C8B5D18                	mov r11, COUNT
  9218 00005EC3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9219 00005EC8 4C8D65F8                	lea r12, [rbp - 8]
  9220                                  .L_tc_recycle_frame_loop_0034:
  9221 00005ECC 4983FA00                	cmp r10, 0
  9222 00005ED0 7414                    	je .L_tc_recycle_frame_done_0034
  9223 00005ED2 4D8B2C24                	mov r13, qword [r12]
  9224 00005ED6 4D892B                  	mov qword [r11], r13
  9225 00005ED9 49FFCA                  	dec r10
  9226 00005EDC 4983EB08                	sub r11, 8
  9227 00005EE0 4983EC08                	sub r12, 8
  9228 00005EE4 EBE6                    	jmp .L_tc_recycle_frame_loop_0034
  9229                                  .L_tc_recycle_frame_done_0034:
  9230 00005EE6 498D6308                	lea rsp, [r11 + 8]
  9231 00005EEA 5D                      	pop rbp
  9232 00005EEB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9233 00005EEE E9E0010000              	jmp .L_if_end_0013
  9234                                  .L_if_else_0013:
  9235                                  	; preparing a non-tail-call
  9236 00005EF3 488B4528                	mov rax, PARAM(1)	; param b
  9237 00005EF7 50                      	push rax
  9238 00005EF8 6A01                    	push 1	; arg count
  9239 00005EFA 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
  9240 00005F02 803805                  	cmp byte [rax], T_undefined
  9241 00005F05 0F8453000100            	je L_error_fvar_undefined
  9242 00005F0B 803804                  	cmp byte [rax], T_closure
  9243 00005F0E 0F85CE000100            	jne L_error_non_closure
  9244 00005F14 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9245 00005F17 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9246 00005F1A 483D[02000000]          	cmp rax, sob_boolean_false
  9247 00005F20 0F8492000000            	je .L_if_else_0012
  9248                                  	; Setting up for a tail-call
  9249                                  	; preparing a non-tail-call
  9250 00005F26 488B4520                	mov rax, PARAM(0)	; param a
  9251 00005F2A 50                      	push rax
  9252 00005F2B 6A01                    	push 1	; arg count
  9253 00005F2D 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9254 00005F35 803805                  	cmp byte [rax], T_undefined
  9255 00005F38 0F8420000100            	je L_error_fvar_undefined
  9256 00005F3E 803804                  	cmp byte [rax], T_closure
  9257 00005F41 0F859B000100            	jne L_error_non_closure
  9258 00005F47 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9259 00005F4A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9260 00005F4D 50                      	push rax
  9261 00005F4E 488B4528                	mov rax, PARAM(1)	; param b
  9262 00005F52 50                      	push rax
  9263 00005F53 6A02                    	push 2
  9264 00005F55 488B0425[8A0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9265 00005F5D 803805                  	cmp byte [rax], T_undefined
  9266 00005F60 0F84F8FF0000            	je L_error_fvar_undefined
  9267 00005F66 803804                  	cmp byte [rax], T_closure
  9268 00005F69 0F8573000100            	jne L_error_non_closure
  9269 00005F6F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9270 00005F72 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9271 00005F76 4C8B4D00                	mov r9, qword [rbp]
  9272 00005F7A 4150                    	push r8
  9273 00005F7C 4151                    	push r9
  9274 00005F7E 41BA06000000            	mov r10, 2 + 4
  9275 00005F84 4C8B5D18                	mov r11, COUNT
  9276 00005F88 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9277 00005F8D 4C8D65F8                	lea r12, [rbp - 8]
  9278                                  .L_tc_recycle_frame_loop_0035:
  9279 00005F91 4983FA00                	cmp r10, 0
  9280 00005F95 7414                    	je .L_tc_recycle_frame_done_0035
  9281 00005F97 4D8B2C24                	mov r13, qword [r12]
  9282 00005F9B 4D892B                  	mov qword [r11], r13
  9283 00005F9E 49FFCA                  	dec r10
  9284 00005FA1 4983EB08                	sub r11, 8
  9285 00005FA5 4983EC08                	sub r12, 8
  9286 00005FA9 EBE6                    	jmp .L_tc_recycle_frame_loop_0035
  9287                                  .L_tc_recycle_frame_done_0035:
  9288 00005FAB 498D6308                	lea rsp, [r11 + 8]
  9289 00005FAF 5D                      	pop rbp
  9290 00005FB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9291 00005FB3 E91B010000              	jmp .L_if_end_0012
  9292                                  .L_if_else_0012:
  9293                                  	; preparing a non-tail-call
  9294 00005FB8 488B4528                	mov rax, PARAM(1)	; param b
  9295 00005FBC 50                      	push rax
  9296 00005FBD 6A01                    	push 1	; arg count
  9297 00005FBF 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
  9298 00005FC7 803805                  	cmp byte [rax], T_undefined
  9299 00005FCA 0F848EFF0000            	je L_error_fvar_undefined
  9300 00005FD0 803804                  	cmp byte [rax], T_closure
  9301 00005FD3 0F8509000100            	jne L_error_non_closure
  9302 00005FD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9303 00005FDC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9304 00005FDF 483D[02000000]          	cmp rax, sob_boolean_false
  9305 00005FE5 0F848F000000            	je .L_if_else_0011
  9306                                  	; Setting up for a tail-call
  9307                                  	; preparing a non-tail-call
  9308 00005FEB 488B4520                	mov rax, PARAM(0)	; param a
  9309 00005FEF 50                      	push rax
  9310 00005FF0 6A01                    	push 1	; arg count
  9311 00005FF2 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
  9312 00005FFA 803805                  	cmp byte [rax], T_undefined
  9313 00005FFD 0F845BFF0000            	je L_error_fvar_undefined
  9314 00006003 803804                  	cmp byte [rax], T_closure
  9315 00006006 0F85D6FF0000            	jne L_error_non_closure
  9316 0000600C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9317 0000600F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9318 00006012 50                      	push rax
  9319 00006013 488B4528                	mov rax, PARAM(1)	; param b
  9320 00006017 50                      	push rax
  9321 00006018 6A02                    	push 2
  9322 0000601A 488B0425[9B0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9323 00006022 803805                  	cmp byte [rax], T_undefined
  9324 00006025 0F8433FF0000            	je L_error_fvar_undefined
  9325 0000602B 803804                  	cmp byte [rax], T_closure
  9326 0000602E 0F85AEFF0000            	jne L_error_non_closure
  9327 00006034 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9328 00006037 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9329 0000603B 4C8B4D00                	mov r9, qword [rbp]
  9330 0000603F 4150                    	push r8
  9331 00006041 4151                    	push r9
  9332 00006043 41BA06000000            	mov r10, 2 + 4
  9333 00006049 4C8B5D18                	mov r11, COUNT
  9334 0000604D 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9335 00006052 4C8D65F8                	lea r12, [rbp - 8]
  9336                                  .L_tc_recycle_frame_loop_0036:
  9337 00006056 4983FA00                	cmp r10, 0
  9338 0000605A 7414                    	je .L_tc_recycle_frame_done_0036
  9339 0000605C 4D8B2C24                	mov r13, qword [r12]
  9340 00006060 4D892B                  	mov qword [r11], r13
  9341 00006063 49FFCA                  	dec r10
  9342 00006066 4983EB08                	sub r11, 8
  9343 0000606A 4983EC08                	sub r12, 8
  9344 0000606E EBE6                    	jmp .L_tc_recycle_frame_loop_0036
  9345                                  .L_tc_recycle_frame_done_0036:
  9346 00006070 498D6308                	lea rsp, [r11 + 8]
  9347 00006074 5D                      	pop rbp
  9348 00006075 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9349 00006078 EB59                    	jmp .L_if_end_0011
  9350                                  .L_if_else_0011:
  9351                                  	; Setting up for a tail-call
  9352 0000607A 6A00                    	push 0
  9353 0000607C 488B4510                	mov rax, ENV
  9354 00006080 488B00                  	mov rax, qword [rax + 8 * 0]
  9355 00006083 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9356 00006086 803804                  	cmp byte [rax], T_closure
  9357 00006089 0F8553FF0000            	jne L_error_non_closure
  9358 0000608F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9359 00006092 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9360 00006096 4C8B4D00                	mov r9, qword [rbp]
  9361 0000609A 4150                    	push r8
  9362 0000609C 4151                    	push r9
  9363 0000609E 41BA04000000            	mov r10, 0 + 4
  9364 000060A4 4C8B5D18                	mov r11, COUNT
  9365 000060A8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9366 000060AD 4C8D65F8                	lea r12, [rbp - 8]
  9367                                  .L_tc_recycle_frame_loop_0037:
  9368 000060B1 4983FA00                	cmp r10, 0
  9369 000060B5 7414                    	je .L_tc_recycle_frame_done_0037
  9370 000060B7 4D8B2C24                	mov r13, qword [r12]
  9371 000060BB 4D892B                  	mov qword [r11], r13
  9372 000060BE 49FFCA                  	dec r10
  9373 000060C1 4983EB08                	sub r11, 8
  9374 000060C5 4983EC08                	sub r12, 8
  9375 000060C9 EBE6                    	jmp .L_tc_recycle_frame_loop_0037
  9376                                  .L_tc_recycle_frame_done_0037:
  9377 000060CB 498D6308                	lea rsp, [r11 + 8]
  9378 000060CF 5D                      	pop rbp
  9379 000060D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9380                                  .L_if_end_0011:
  9381                                  .L_if_end_0012:
  9382                                  .L_if_end_0013:
  9383 000060D3 E9C2050000              	jmp .L_if_end_001c
  9384                                  .L_if_else_001c:
  9385                                  	; preparing a non-tail-call
  9386 000060D8 488B4520                	mov rax, PARAM(0)	; param a
  9387 000060DC 50                      	push rax
  9388 000060DD 6A01                    	push 1	; arg count
  9389 000060DF 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
  9390 000060E7 803805                  	cmp byte [rax], T_undefined
  9391 000060EA 0F846EFE0000            	je L_error_fvar_undefined
  9392 000060F0 803804                  	cmp byte [rax], T_closure
  9393 000060F3 0F85E9FE0000            	jne L_error_non_closure
  9394 000060F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9395 000060FC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9396 000060FF 483D[02000000]          	cmp rax, sob_boolean_false
  9397 00006105 0F8483020000            	je .L_if_else_001b
  9398                                  	; preparing a non-tail-call
  9399 0000610B 488B4528                	mov rax, PARAM(1)	; param b
  9400 0000610F 50                      	push rax
  9401 00006110 6A01                    	push 1	; arg count
  9402 00006112 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
  9403 0000611A 803805                  	cmp byte [rax], T_undefined
  9404 0000611D 0F843BFE0000            	je L_error_fvar_undefined
  9405 00006123 803804                  	cmp byte [rax], T_closure
  9406 00006126 0F85B6FE0000            	jne L_error_non_closure
  9407 0000612C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9408 0000612F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9409 00006132 483D[02000000]          	cmp rax, sob_boolean_false
  9410 00006138 0F8492000000            	je .L_if_else_0016
  9411                                  	; Setting up for a tail-call
  9412 0000613E 488B4520                	mov rax, PARAM(0)	; param a
  9413 00006142 50                      	push rax
  9414                                  	; preparing a non-tail-call
  9415 00006143 488B4528                	mov rax, PARAM(1)	; param b
  9416 00006147 50                      	push rax
  9417 00006148 6A01                    	push 1	; arg count
  9418 0000614A 488B0425[CD0F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9419 00006152 803805                  	cmp byte [rax], T_undefined
  9420 00006155 0F8403FE0000            	je L_error_fvar_undefined
  9421 0000615B 803804                  	cmp byte [rax], T_closure
  9422 0000615E 0F857EFE0000            	jne L_error_non_closure
  9423 00006164 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9424 00006167 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9425 0000616A 50                      	push rax
  9426 0000616B 6A02                    	push 2
  9427 0000616D 488B0425[8A0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9428 00006175 803805                  	cmp byte [rax], T_undefined
  9429 00006178 0F84E0FD0000            	je L_error_fvar_undefined
  9430 0000617E 803804                  	cmp byte [rax], T_closure
  9431 00006181 0F855BFE0000            	jne L_error_non_closure
  9432 00006187 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9433 0000618A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9434 0000618E 4C8B4D00                	mov r9, qword [rbp]
  9435 00006192 4150                    	push r8
  9436 00006194 4151                    	push r9
  9437 00006196 41BA06000000            	mov r10, 2 + 4
  9438 0000619C 4C8B5D18                	mov r11, COUNT
  9439 000061A0 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9440 000061A5 4C8D65F8                	lea r12, [rbp - 8]
  9441                                  .L_tc_recycle_frame_loop_0038:
  9442 000061A9 4983FA00                	cmp r10, 0
  9443 000061AD 7414                    	je .L_tc_recycle_frame_done_0038
  9444 000061AF 4D8B2C24                	mov r13, qword [r12]
  9445 000061B3 4D892B                  	mov qword [r11], r13
  9446 000061B6 49FFCA                  	dec r10
  9447 000061B9 4983EB08                	sub r11, 8
  9448 000061BD 4983EC08                	sub r12, 8
  9449 000061C1 EBE6                    	jmp .L_tc_recycle_frame_loop_0038
  9450                                  .L_tc_recycle_frame_done_0038:
  9451 000061C3 498D6308                	lea rsp, [r11 + 8]
  9452 000061C7 5D                      	pop rbp
  9453 000061C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9454 000061CB E9B9010000              	jmp .L_if_end_0016
  9455                                  .L_if_else_0016:
  9456                                  	; preparing a non-tail-call
  9457 000061D0 488B4528                	mov rax, PARAM(1)	; param b
  9458 000061D4 50                      	push rax
  9459 000061D5 6A01                    	push 1	; arg count
  9460 000061D7 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
  9461 000061DF 803805                  	cmp byte [rax], T_undefined
  9462 000061E2 0F8476FD0000            	je L_error_fvar_undefined
  9463 000061E8 803804                  	cmp byte [rax], T_closure
  9464 000061EB 0F85F1FD0000            	jne L_error_non_closure
  9465 000061F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9466 000061F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9467 000061F7 483D[02000000]          	cmp rax, sob_boolean_false
  9468 000061FD 746F                    	je .L_if_else_0015
  9469                                  	; Setting up for a tail-call
  9470 000061FF 488B4520                	mov rax, PARAM(0)	; param a
  9471 00006203 50                      	push rax
  9472 00006204 488B4528                	mov rax, PARAM(1)	; param b
  9473 00006208 50                      	push rax
  9474 00006209 6A02                    	push 2
  9475 0000620B 488B0425[8A0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9476 00006213 803805                  	cmp byte [rax], T_undefined
  9477 00006216 0F8442FD0000            	je L_error_fvar_undefined
  9478 0000621C 803804                  	cmp byte [rax], T_closure
  9479 0000621F 0F85BDFD0000            	jne L_error_non_closure
  9480 00006225 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9481 00006228 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9482 0000622C 4C8B4D00                	mov r9, qword [rbp]
  9483 00006230 4150                    	push r8
  9484 00006232 4151                    	push r9
  9485 00006234 41BA06000000            	mov r10, 2 + 4
  9486 0000623A 4C8B5D18                	mov r11, COUNT
  9487 0000623E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9488 00006243 4C8D65F8                	lea r12, [rbp - 8]
  9489                                  .L_tc_recycle_frame_loop_0039:
  9490 00006247 4983FA00                	cmp r10, 0
  9491 0000624B 7414                    	je .L_tc_recycle_frame_done_0039
  9492 0000624D 4D8B2C24                	mov r13, qword [r12]
  9493 00006251 4D892B                  	mov qword [r11], r13
  9494 00006254 49FFCA                  	dec r10
  9495 00006257 4983EB08                	sub r11, 8
  9496 0000625B 4983EC08                	sub r12, 8
  9497 0000625F EBE6                    	jmp .L_tc_recycle_frame_loop_0039
  9498                                  .L_tc_recycle_frame_done_0039:
  9499 00006261 498D6308                	lea rsp, [r11 + 8]
  9500 00006265 5D                      	pop rbp
  9501 00006266 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9502 00006269 E91B010000              	jmp .L_if_end_0015
  9503                                  .L_if_else_0015:
  9504                                  	; preparing a non-tail-call
  9505 0000626E 488B4528                	mov rax, PARAM(1)	; param b
  9506 00006272 50                      	push rax
  9507 00006273 6A01                    	push 1	; arg count
  9508 00006275 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
  9509 0000627D 803805                  	cmp byte [rax], T_undefined
  9510 00006280 0F84D8FC0000            	je L_error_fvar_undefined
  9511 00006286 803804                  	cmp byte [rax], T_closure
  9512 00006289 0F8553FD0000            	jne L_error_non_closure
  9513 0000628F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9514 00006292 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9515 00006295 483D[02000000]          	cmp rax, sob_boolean_false
  9516 0000629B 0F848F000000            	je .L_if_else_0014
  9517                                  	; Setting up for a tail-call
  9518                                  	; preparing a non-tail-call
  9519 000062A1 488B4520                	mov rax, PARAM(0)	; param a
  9520 000062A5 50                      	push rax
  9521 000062A6 6A01                    	push 1	; arg count
  9522 000062A8 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
  9523 000062B0 803805                  	cmp byte [rax], T_undefined
  9524 000062B3 0F84A5FC0000            	je L_error_fvar_undefined
  9525 000062B9 803804                  	cmp byte [rax], T_closure
  9526 000062BC 0F8520FD0000            	jne L_error_non_closure
  9527 000062C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9528 000062C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9529 000062C8 50                      	push rax
  9530 000062C9 488B4528                	mov rax, PARAM(1)	; param b
  9531 000062CD 50                      	push rax
  9532 000062CE 6A02                    	push 2
  9533 000062D0 488B0425[9B0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9534 000062D8 803805                  	cmp byte [rax], T_undefined
  9535 000062DB 0F847DFC0000            	je L_error_fvar_undefined
  9536 000062E1 803804                  	cmp byte [rax], T_closure
  9537 000062E4 0F85F8FC0000            	jne L_error_non_closure
  9538 000062EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9539 000062ED 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9540 000062F1 4C8B4D00                	mov r9, qword [rbp]
  9541 000062F5 4150                    	push r8
  9542 000062F7 4151                    	push r9
  9543 000062F9 41BA06000000            	mov r10, 2 + 4
  9544 000062FF 4C8B5D18                	mov r11, COUNT
  9545 00006303 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9546 00006308 4C8D65F8                	lea r12, [rbp - 8]
  9547                                  .L_tc_recycle_frame_loop_003a:
  9548 0000630C 4983FA00                	cmp r10, 0
  9549 00006310 7414                    	je .L_tc_recycle_frame_done_003a
  9550 00006312 4D8B2C24                	mov r13, qword [r12]
  9551 00006316 4D892B                  	mov qword [r11], r13
  9552 00006319 49FFCA                  	dec r10
  9553 0000631C 4983EB08                	sub r11, 8
  9554 00006320 4983EC08                	sub r12, 8
  9555 00006324 EBE6                    	jmp .L_tc_recycle_frame_loop_003a
  9556                                  .L_tc_recycle_frame_done_003a:
  9557 00006326 498D6308                	lea rsp, [r11 + 8]
  9558 0000632A 5D                      	pop rbp
  9559 0000632B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9560 0000632E EB59                    	jmp .L_if_end_0014
  9561                                  .L_if_else_0014:
  9562                                  	; Setting up for a tail-call
  9563 00006330 6A00                    	push 0
  9564 00006332 488B4510                	mov rax, ENV
  9565 00006336 488B00                  	mov rax, qword [rax + 8 * 0]
  9566 00006339 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9567 0000633C 803804                  	cmp byte [rax], T_closure
  9568 0000633F 0F859DFC0000            	jne L_error_non_closure
  9569 00006345 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9570 00006348 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9571 0000634C 4C8B4D00                	mov r9, qword [rbp]
  9572 00006350 4150                    	push r8
  9573 00006352 4151                    	push r9
  9574 00006354 41BA04000000            	mov r10, 0 + 4
  9575 0000635A 4C8B5D18                	mov r11, COUNT
  9576 0000635E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9577 00006363 4C8D65F8                	lea r12, [rbp - 8]
  9578                                  .L_tc_recycle_frame_loop_003b:
  9579 00006367 4983FA00                	cmp r10, 0
  9580 0000636B 7414                    	je .L_tc_recycle_frame_done_003b
  9581 0000636D 4D8B2C24                	mov r13, qword [r12]
  9582 00006371 4D892B                  	mov qword [r11], r13
  9583 00006374 49FFCA                  	dec r10
  9584 00006377 4983EB08                	sub r11, 8
  9585 0000637B 4983EC08                	sub r12, 8
  9586 0000637F EBE6                    	jmp .L_tc_recycle_frame_loop_003b
  9587                                  .L_tc_recycle_frame_done_003b:
  9588 00006381 498D6308                	lea rsp, [r11 + 8]
  9589 00006385 5D                      	pop rbp
  9590 00006386 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9591                                  .L_if_end_0014:
  9592                                  .L_if_end_0015:
  9593                                  .L_if_end_0016:
  9594 00006389 E90C030000              	jmp .L_if_end_001b
  9595                                  .L_if_else_001b:
  9596                                  	; preparing a non-tail-call
  9597 0000638E 488B4520                	mov rax, PARAM(0)	; param a
  9598 00006392 50                      	push rax
  9599 00006393 6A01                    	push 1	; arg count
  9600 00006395 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
  9601 0000639D 803805                  	cmp byte [rax], T_undefined
  9602 000063A0 0F84B8FB0000            	je L_error_fvar_undefined
  9603 000063A6 803804                  	cmp byte [rax], T_closure
  9604 000063A9 0F8533FC0000            	jne L_error_non_closure
  9605 000063AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9606 000063B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9607 000063B5 483D[02000000]          	cmp rax, sob_boolean_false
  9608 000063BB 0F8480020000            	je .L_if_else_001a
  9609                                  	; preparing a non-tail-call
  9610 000063C1 488B4528                	mov rax, PARAM(1)	; param b
  9611 000063C5 50                      	push rax
  9612 000063C6 6A01                    	push 1	; arg count
  9613 000063C8 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
  9614 000063D0 803805                  	cmp byte [rax], T_undefined
  9615 000063D3 0F8485FB0000            	je L_error_fvar_undefined
  9616 000063D9 803804                  	cmp byte [rax], T_closure
  9617 000063DC 0F8500FC0000            	jne L_error_non_closure
  9618 000063E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9619 000063E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9620 000063E8 483D[02000000]          	cmp rax, sob_boolean_false
  9621 000063EE 0F8492000000            	je .L_if_else_0019
  9622                                  	; Setting up for a tail-call
  9623 000063F4 488B4520                	mov rax, PARAM(0)	; param a
  9624 000063F8 50                      	push rax
  9625                                  	; preparing a non-tail-call
  9626 000063F9 488B4528                	mov rax, PARAM(1)	; param b
  9627 000063FD 50                      	push rax
  9628 000063FE 6A01                    	push 1	; arg count
  9629 00006400 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
  9630 00006408 803805                  	cmp byte [rax], T_undefined
  9631 0000640B 0F844DFB0000            	je L_error_fvar_undefined
  9632 00006411 803804                  	cmp byte [rax], T_closure
  9633 00006414 0F85C8FB0000            	jne L_error_non_closure
  9634 0000641A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9635 0000641D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9636 00006420 50                      	push rax
  9637 00006421 6A02                    	push 2
  9638 00006423 488B0425[9B0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9639 0000642B 803805                  	cmp byte [rax], T_undefined
  9640 0000642E 0F842AFB0000            	je L_error_fvar_undefined
  9641 00006434 803804                  	cmp byte [rax], T_closure
  9642 00006437 0F85A5FB0000            	jne L_error_non_closure
  9643 0000643D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9644 00006440 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9645 00006444 4C8B4D00                	mov r9, qword [rbp]
  9646 00006448 4150                    	push r8
  9647 0000644A 4151                    	push r9
  9648 0000644C 41BA06000000            	mov r10, 2 + 4
  9649 00006452 4C8B5D18                	mov r11, COUNT
  9650 00006456 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9651 0000645B 4C8D65F8                	lea r12, [rbp - 8]
  9652                                  .L_tc_recycle_frame_loop_003c:
  9653 0000645F 4983FA00                	cmp r10, 0
  9654 00006463 7414                    	je .L_tc_recycle_frame_done_003c
  9655 00006465 4D8B2C24                	mov r13, qword [r12]
  9656 00006469 4D892B                  	mov qword [r11], r13
  9657 0000646C 49FFCA                  	dec r10
  9658 0000646F 4983EB08                	sub r11, 8
  9659 00006473 4983EC08                	sub r12, 8
  9660 00006477 EBE6                    	jmp .L_tc_recycle_frame_loop_003c
  9661                                  .L_tc_recycle_frame_done_003c:
  9662 00006479 498D6308                	lea rsp, [r11 + 8]
  9663 0000647D 5D                      	pop rbp
  9664 0000647E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9665 00006481 E9B9010000              	jmp .L_if_end_0019
  9666                                  .L_if_else_0019:
  9667                                  	; preparing a non-tail-call
  9668 00006486 488B4528                	mov rax, PARAM(1)	; param b
  9669 0000648A 50                      	push rax
  9670 0000648B 6A01                    	push 1	; arg count
  9671 0000648D 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
  9672 00006495 803805                  	cmp byte [rax], T_undefined
  9673 00006498 0F84C0FA0000            	je L_error_fvar_undefined
  9674 0000649E 803804                  	cmp byte [rax], T_closure
  9675 000064A1 0F853BFB0000            	jne L_error_non_closure
  9676 000064A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9677 000064AA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9678 000064AD 483D[02000000]          	cmp rax, sob_boolean_false
  9679 000064B3 0F8492000000            	je .L_if_else_0018
  9680                                  	; Setting up for a tail-call
  9681 000064B9 488B4520                	mov rax, PARAM(0)	; param a
  9682 000064BD 50                      	push rax
  9683                                  	; preparing a non-tail-call
  9684 000064BE 488B4528                	mov rax, PARAM(1)	; param b
  9685 000064C2 50                      	push rax
  9686 000064C3 6A01                    	push 1	; arg count
  9687 000064C5 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
  9688 000064CD 803805                  	cmp byte [rax], T_undefined
  9689 000064D0 0F8488FA0000            	je L_error_fvar_undefined
  9690 000064D6 803804                  	cmp byte [rax], T_closure
  9691 000064D9 0F8503FB0000            	jne L_error_non_closure
  9692 000064DF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9693 000064E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9694 000064E5 50                      	push rax
  9695 000064E6 6A02                    	push 2
  9696 000064E8 488B0425[9B0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9697 000064F0 803805                  	cmp byte [rax], T_undefined
  9698 000064F3 0F8465FA0000            	je L_error_fvar_undefined
  9699 000064F9 803804                  	cmp byte [rax], T_closure
  9700 000064FC 0F85E0FA0000            	jne L_error_non_closure
  9701 00006502 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9702 00006505 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9703 00006509 4C8B4D00                	mov r9, qword [rbp]
  9704 0000650D 4150                    	push r8
  9705 0000650F 4151                    	push r9
  9706 00006511 41BA06000000            	mov r10, 2 + 4
  9707 00006517 4C8B5D18                	mov r11, COUNT
  9708 0000651B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9709 00006520 4C8D65F8                	lea r12, [rbp - 8]
  9710                                  .L_tc_recycle_frame_loop_003d:
  9711 00006524 4983FA00                	cmp r10, 0
  9712 00006528 7414                    	je .L_tc_recycle_frame_done_003d
  9713 0000652A 4D8B2C24                	mov r13, qword [r12]
  9714 0000652E 4D892B                  	mov qword [r11], r13
  9715 00006531 49FFCA                  	dec r10
  9716 00006534 4983EB08                	sub r11, 8
  9717 00006538 4983EC08                	sub r12, 8
  9718 0000653C EBE6                    	jmp .L_tc_recycle_frame_loop_003d
  9719                                  .L_tc_recycle_frame_done_003d:
  9720 0000653E 498D6308                	lea rsp, [r11 + 8]
  9721 00006542 5D                      	pop rbp
  9722 00006543 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9723 00006546 E9F4000000              	jmp .L_if_end_0018
  9724                                  .L_if_else_0018:
  9725                                  	; preparing a non-tail-call
  9726 0000654B 488B4528                	mov rax, PARAM(1)	; param b
  9727 0000654F 50                      	push rax
  9728 00006550 6A01                    	push 1	; arg count
  9729 00006552 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
  9730 0000655A 803805                  	cmp byte [rax], T_undefined
  9731 0000655D 0F84FBF90000            	je L_error_fvar_undefined
  9732 00006563 803804                  	cmp byte [rax], T_closure
  9733 00006566 0F8576FA0000            	jne L_error_non_closure
  9734 0000656C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9735 0000656F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9736 00006572 483D[02000000]          	cmp rax, sob_boolean_false
  9737 00006578 746C                    	je .L_if_else_0017
  9738                                  	; Setting up for a tail-call
  9739 0000657A 488B4520                	mov rax, PARAM(0)	; param a
  9740 0000657E 50                      	push rax
  9741 0000657F 488B4528                	mov rax, PARAM(1)	; param b
  9742 00006583 50                      	push rax
  9743 00006584 6A02                    	push 2
  9744 00006586 488B0425[9B0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9745 0000658E 803805                  	cmp byte [rax], T_undefined
  9746 00006591 0F84C7F90000            	je L_error_fvar_undefined
  9747 00006597 803804                  	cmp byte [rax], T_closure
  9748 0000659A 0F8542FA0000            	jne L_error_non_closure
  9749 000065A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9750 000065A3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9751 000065A7 4C8B4D00                	mov r9, qword [rbp]
  9752 000065AB 4150                    	push r8
  9753 000065AD 4151                    	push r9
  9754 000065AF 41BA06000000            	mov r10, 2 + 4
  9755 000065B5 4C8B5D18                	mov r11, COUNT
  9756 000065B9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9757 000065BE 4C8D65F8                	lea r12, [rbp - 8]
  9758                                  .L_tc_recycle_frame_loop_003e:
  9759 000065C2 4983FA00                	cmp r10, 0
  9760 000065C6 7414                    	je .L_tc_recycle_frame_done_003e
  9761 000065C8 4D8B2C24                	mov r13, qword [r12]
  9762 000065CC 4D892B                  	mov qword [r11], r13
  9763 000065CF 49FFCA                  	dec r10
  9764 000065D2 4983EB08                	sub r11, 8
  9765 000065D6 4983EC08                	sub r12, 8
  9766 000065DA EBE6                    	jmp .L_tc_recycle_frame_loop_003e
  9767                                  .L_tc_recycle_frame_done_003e:
  9768 000065DC 498D6308                	lea rsp, [r11 + 8]
  9769 000065E0 5D                      	pop rbp
  9770 000065E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9771 000065E4 EB59                    	jmp .L_if_end_0017
  9772                                  .L_if_else_0017:
  9773                                  	; Setting up for a tail-call
  9774 000065E6 6A00                    	push 0
  9775 000065E8 488B4510                	mov rax, ENV
  9776 000065EC 488B00                  	mov rax, qword [rax + 8 * 0]
  9777 000065EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9778 000065F2 803804                  	cmp byte [rax], T_closure
  9779 000065F5 0F85E7F90000            	jne L_error_non_closure
  9780 000065FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  9781 000065FE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9782 00006602 4C8B4D00                	mov r9, qword [rbp]
  9783 00006606 4150                    	push r8
  9784 00006608 4151                    	push r9
  9785 0000660A 41BA04000000            	mov r10, 0 + 4
  9786 00006610 4C8B5D18                	mov r11, COUNT
  9787 00006614 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9788 00006619 4C8D65F8                	lea r12, [rbp - 8]
  9789                                  .L_tc_recycle_frame_loop_003f:
  9790 0000661D 4983FA00                	cmp r10, 0
  9791 00006621 7414                    	je .L_tc_recycle_frame_done_003f
  9792 00006623 4D8B2C24                	mov r13, qword [r12]
  9793 00006627 4D892B                  	mov qword [r11], r13
  9794 0000662A 49FFCA                  	dec r10
  9795 0000662D 4983EB08                	sub r11, 8
  9796 00006631 4983EC08                	sub r12, 8
  9797 00006635 EBE6                    	jmp .L_tc_recycle_frame_loop_003f
  9798                                  .L_tc_recycle_frame_done_003f:
  9799 00006637 498D6308                	lea rsp, [r11 + 8]
  9800 0000663B 5D                      	pop rbp
  9801 0000663C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9802                                  .L_if_end_0017:
  9803                                  .L_if_end_0018:
  9804                                  .L_if_end_0019:
  9805 0000663F EB59                    	jmp .L_if_end_001a
  9806                                  .L_if_else_001a:
  9807                                  	; Setting up for a tail-call
  9808 00006641 6A00                    	push 0
  9809 00006643 488B4510                	mov rax, ENV
  9810 00006647 488B00                  	mov rax, qword [rax + 8 * 0]
  9811 0000664A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9812 0000664D 803804                  	cmp byte [rax], T_closure
  9813 00006650 0F858CF90000            	jne L_error_non_closure
  9814 00006656 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9815 00006659 4C8B4508                	mov r8, qword [rbp + 8 * 1]
  9816 0000665D 4C8B4D00                	mov r9, qword [rbp]
  9817 00006661 4150                    	push r8
  9818 00006663 4151                    	push r9
  9819 00006665 41BA04000000            	mov r10, 0 + 4
  9820 0000666B 4C8B5D18                	mov r11, COUNT
  9821 0000666F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
  9822 00006674 4C8D65F8                	lea r12, [rbp - 8]
  9823                                  .L_tc_recycle_frame_loop_0040:
  9824 00006678 4983FA00                	cmp r10, 0
  9825 0000667C 7414                    	je .L_tc_recycle_frame_done_0040
  9826 0000667E 4D8B2C24                	mov r13, qword [r12]
  9827 00006682 4D892B                  	mov qword [r11], r13
  9828 00006685 49FFCA                  	dec r10
  9829 00006688 4983EB08                	sub r11, 8
  9830 0000668C 4983EC08                	sub r12, 8
  9831 00006690 EBE6                    	jmp .L_tc_recycle_frame_loop_0040
  9832                                  .L_tc_recycle_frame_done_0040:
  9833 00006692 498D6308                	lea rsp, [r11 + 8]
  9834 00006696 5D                      	pop rbp
  9835 00006697 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9836                                  .L_if_end_001a:
  9837                                  .L_if_end_001b:
  9838                                  .L_if_end_001c:
  9839 0000669A C9                      	leave
  9840 0000669B C22000                  	ret AND_KILL_FRAME(2)
  9841                                  .L_lambda_simple_end_0038:	; new closure is in rax
  9842 0000669E 50                      	push rax
  9843 0000669F 6A01                    	push 1
  9844 000066A1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9845 000066A6 E8E0F90000              	call malloc
  9846 000066AB 50                      	push rax
  9847 000066AC BF08000000              	mov rdi, 8 * 1	; new rib
  9848 000066B1 E8D5F90000              	call malloc
  9849 000066B6 50                      	push rax
  9850 000066B7 BF10000000              	mov rdi, 8 * 2	; extended env
  9851 000066BC E8CAF90000              	call malloc
  9852 000066C1 488B7D10                	mov rdi, ENV
  9853 000066C5 BE00000000              	mov rsi, 0
  9854 000066CA BA01000000              	mov rdx, 1
  9855                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  9856 000066CF 4883FE01                	cmp rsi, 1
  9857 000066D3 7410                    	je .L_lambda_simple_env_end_0039
  9858 000066D5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9859 000066D9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9860 000066DD 48FFC6                  	inc rsi
  9861 000066E0 48FFC2                  	inc rdx
  9862 000066E3 EBEA                    	jmp .L_lambda_simple_env_loop_0039
  9863                                  .L_lambda_simple_env_end_0039:
  9864 000066E5 5B                      	pop rbx
  9865 000066E6 BE00000000              	mov rsi, 0
  9866                                  .L_lambda_simple_params_loop_0039:	; copy params
  9867 000066EB 4883FE01                	cmp rsi, 1
  9868 000066EF 740E                    	je .L_lambda_simple_params_end_0039
  9869 000066F1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9870 000066F6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9871 000066FA 48FFC6                  	inc rsi
  9872 000066FD EBEC                    	jmp .L_lambda_simple_params_loop_0039
  9873                                  .L_lambda_simple_params_end_0039:
  9874 000066FF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9875 00006702 4889C3                  	mov rbx, rax
  9876 00006705 58                      	pop rax
  9877 00006706 C60004                  	mov byte [rax], T_closure
  9878 00006709 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9879 0000670D 48C74009[1A670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  9880 00006715 E9F9020000              	jmp .L_lambda_simple_end_0039
  9881                                  .L_lambda_simple_code_0039:	; lambda-simple body
  9882 0000671A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9883 00006720 740B                    	je .L_lambda_simple_arity_check_ok_0039
  9884 00006722 FF742410                	push qword [rsp + 8 * 2]
  9885 00006726 6A01                    	push 1
  9886 00006728 E917F90000              	jmp L_error_incorrect_arity_simple
  9887                                  .L_lambda_simple_arity_check_ok_0039:
  9888 0000672D C8000000                	enter 0, 0
  9889                                  	; Setting up for a tail-call
  9890 00006731 6A00                    	push 0
  9891 00006733 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9892 00006738 E84EF90000              	call malloc
  9893 0000673D 50                      	push rax
  9894 0000673E BF08000000              	mov rdi, 8 * 1	; new rib
  9895 00006743 E843F90000              	call malloc
  9896 00006748 50                      	push rax
  9897 00006749 BF18000000              	mov rdi, 8 * 3	; extended env
  9898 0000674E E838F90000              	call malloc
  9899 00006753 488B7D10                	mov rdi, ENV
  9900 00006757 BE00000000              	mov rsi, 0
  9901 0000675C BA01000000              	mov rdx, 1
  9902                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  9903 00006761 4883FE02                	cmp rsi, 2
  9904 00006765 7410                    	je .L_lambda_simple_env_end_003a
  9905 00006767 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9906 0000676B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9907 0000676F 48FFC6                  	inc rsi
  9908 00006772 48FFC2                  	inc rdx
  9909 00006775 EBEA                    	jmp .L_lambda_simple_env_loop_003a
  9910                                  .L_lambda_simple_env_end_003a:
  9911 00006777 5B                      	pop rbx
  9912 00006778 BE00000000              	mov rsi, 0
  9913                                  .L_lambda_simple_params_loop_003a:	; copy params
  9914 0000677D 4883FE01                	cmp rsi, 1
  9915 00006781 740E                    	je .L_lambda_simple_params_end_003a
  9916 00006783 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9917 00006788 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9918 0000678C 48FFC6                  	inc rsi
  9919 0000678F EBEC                    	jmp .L_lambda_simple_params_loop_003a
  9920                                  .L_lambda_simple_params_end_003a:
  9921 00006791 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9922 00006794 4889C3                  	mov rbx, rax
  9923 00006797 58                      	pop rax
  9924 00006798 C60004                  	mov byte [rax], T_closure
  9925 0000679B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9926 0000679F 48C74009[AC670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
  9927 000067A7 E916020000              	jmp .L_lambda_simple_end_003a
  9928                                  .L_lambda_simple_code_003a:	; lambda-simple body
  9929 000067AC 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9930 000067B2 740B                    	je .L_lambda_simple_arity_check_ok_003a
  9931 000067B4 FF742410                	push qword [rsp + 8 * 2]
  9932 000067B8 6A00                    	push 0
  9933 000067BA E985F80000              	jmp L_error_incorrect_arity_simple
  9934                                  .L_lambda_simple_arity_check_ok_003a:
  9935 000067BF C8000000                	enter 0, 0
  9936 000067C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9937 000067C8 E8BEF80000              	call malloc
  9938 000067CD 50                      	push rax
  9939 000067CE BF00000000              	mov rdi, 8 * 0	; new rib
  9940 000067D3 E8B3F80000              	call malloc
  9941 000067D8 50                      	push rax
  9942 000067D9 BF20000000              	mov rdi, 8 * 4	; extended env
  9943 000067DE E8A8F80000              	call malloc
  9944 000067E3 488B7D10                	mov rdi, ENV
  9945 000067E7 BE00000000              	mov rsi, 0
  9946 000067EC BA01000000              	mov rdx, 1
  9947                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9948 000067F1 4883FE03                	cmp rsi, 3
  9949 000067F5 7410                    	je .L_lambda_opt_env_end_000a
  9950 000067F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9951 000067FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9952 000067FF 48FFC6                  	inc rsi
  9953 00006802 48FFC2                  	inc rdx
  9954 00006805 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9955                                  .L_lambda_opt_env_end_000a:
  9956 00006807 5B                      	pop rbx
  9957 00006808 BE00000000              	mov rsi, 0
  9958                                  .L_lambda_opt_params_loop_000a:	; copy params
  9959 0000680D 4883FE00                	cmp rsi, 0
  9960 00006811 740E                    	je .L_lambda_opt_params_end_000a
  9961 00006813 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9962 00006818 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9963 0000681C 48FFC6                  	inc rsi
  9964 0000681F EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9965                                  .L_lambda_opt_params_end_000a:
  9966 00006821 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9967 00006824 4889C3                  	mov rbx, rax
  9968 00006827 58                      	pop rax
  9969 00006828 C60004                  	mov byte [rax], T_closure
  9970 0000682B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9971 0000682F 48C74009[3C680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9972 00006837 E982010000              	jmp .L_lambda_opt_end_000a
  9973                                  .L_lambda_opt_code_000a:
  9974 0000683C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  9975 00006841 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  9976 00006845 7407                    	je .L_lambda_opt_arity_check_exact_000a	; Jump if arity matches
  9977 00006847 7F4C                    	jg .L_lambda_opt_arity_check_more_000a	; Jump if more arguments passed
  9978 00006849 E90AF80000              	jmp L_error_incorrect_arity_opt
  9979                                  .L_lambda_opt_arity_check_exact_000a:
  9980 0000684E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  9981 00006851 4983C603                	add r14, 3 ; add 3 first stack values
  9982 00006855 41BF00000000            	mov r15, 0 ; r15 = index
  9983 0000685B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  9984 0000685F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  9985 00006867 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9986                                  .L_lambda_opt_stack_shrink_loop_000a:
  9987 00006869 4983FE00                	cmp r14, 0
  9988 0000686D 7E11                    	jle .L_make_lambda_opt_exact_finish_000a
  9989 0000686F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  9990 00006874 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  9991 00006878 49FFCE                  	dec r14 ; next loop value
  9992 0000687B 49FFC7                  	inc r15 ; update i
  9993 0000687E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9994                                  .L_make_lambda_opt_exact_finish_000a:
  9995 00006880 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  9996 00006888 49FFC2                  	inc r10
  9997 0000688B 4C89542410              	mov qword [rsp + 8 * 2], r10
  9998 00006890 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000a
  9999                                  .L_lambda_opt_arity_check_more_000a:
 10000 00006895 4D89D6                  	mov r14, r10 ; r14 = num args
 10001 00006898 4D89D7                  	mov r15, r10 ; r15 = num args
 10002 0000689B 41B900000000            	mov r9, 0; r9 = number of params 
 10003 000068A1 4D29CE                  	sub r14, r9 ; r14 = extra args
 10004 000068A4 4D01F1                  	add r9, r14 ; r9 = num args
 10005 000068A7 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 10005 000068A9 [0100000000000000] 
 10006 000068B1 EB00                    	jmp .L_make_lambda_opt_arg_list_000a
 10007                                  .L_make_lambda_opt_arg_list_000a:
 10008 000068B3 4983FE00                	cmp r14, 0
 10009 000068B7 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000a
 10010 000068B9 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 10011 000068BE 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 10012 000068C1 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 10013 000068C7 E8BFF70000              	call malloc                         ; Allocate memory, result in rax
 10014 000068CC C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 10015 000068CF 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 10016 000068D3 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 10017 000068D7 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 10018 000068DA 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 10019 000068DD 49FFC9                  	dec r9                              ; args index minus 1
 10020 000068E0 49FFCE                  	dec r14                             ; next iteration
 10021 000068E3 EBCE                    	jmp .L_make_lambda_opt_arg_list_000a
 10022                                  .L_make_lambda_opt_stack_fixed_000a:
 10023 000068E5 4D89FE                  	mov r14, r15 ; r14 = num args
 10024 000068E8 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 10025 000068EB 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 10026 000068EF 41BA00000000            	mov r10, 0; r10 = num of params
 10027 000068F5 4D29D6                  	sub r14, r10 ; r14 = extra args
 10028 000068F8 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 10029 000068FB 49FFCE                  	dec r14 ; how much we need to change stack wise?
 10030 000068FE 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 10031 00006903 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000a
 10032                                  .L_lambda_opt_stack_shrink_loop_more_000a:
 10033 00006905 4983F800                	cmp r8, 0
 10034 00006909 7E15                    	jle .L_make_lambda_opt_more_finish_000a
 10035 0000690B 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 10036 0000690F 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 10037 00006913 4D8D26                  	lea r12, [r14]
 10038 00006916 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 10039 0000691B 49FFC8                  	dec r8 ; next iteration
 10040 0000691E EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000a
 10041                                  .L_make_lambda_opt_more_finish_000a:
 10042 00006920 4D89F8                  	mov r8, r15 ; num of args
 10043 00006923 41BA00000000            	mov r10, 0
 10044 00006929 4D29D0                  	sub r8, r10 ; num of new args
 10045 0000692C 49FFC0                  	inc r8
 10046 0000692F 4C89442420              	mov qword [rsp + 8 * 4], r8
 10047 00006934 4883C410                	add rsp, 8 * 2  ; 
 10048 00006938 EB00                    	jmp .L_lambda_opt_stack_adjusted_000a
 10049                                  .L_lambda_opt_stack_adjusted_000a:
 10050 0000693A C8000000                	enter 0, 0
 10051                                  	; Setting up for a tail-call
 10052 0000693E 488B4510                	mov rax, ENV
 10053 00006942 488B4008                	mov rax, qword [rax + 8 * 1]
 10054 00006946 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
 10055 00006949 50                      	push rax
 10056 0000694A 48B8-                   	mov rax, L_constants + 2149
 10056 0000694C [6508000000000000] 
 10057 00006954 50                      	push rax
 10058 00006955 488B4520                	mov rax, PARAM(0)	; param s
 10059 00006959 50                      	push rax
 10060 0000695A 6A03                    	push 3
 10061 0000695C 488B0425[A7130000]      	mov rax, qword [free_var_86]	; free var fold-left
 10062 00006964 803805                  	cmp byte [rax], T_undefined
 10063 00006967 0F84F1F50000            	je L_error_fvar_undefined
 10064 0000696D 803804                  	cmp byte [rax], T_closure
 10065 00006970 0F856CF60000            	jne L_error_non_closure
 10066 00006976 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10067 00006979 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10068 0000697D 4C8B4D00                	mov r9, qword [rbp]
 10069 00006981 4150                    	push r8
 10070 00006983 4151                    	push r9
 10071 00006985 41BA07000000            	mov r10, 3 + 4
 10072 0000698B 4C8B5D18                	mov r11, COUNT
 10073 0000698F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10074 00006994 4C8D65F8                	lea r12, [rbp - 8]
 10075                                  .L_tc_recycle_frame_loop_0041:
 10076 00006998 4983FA00                	cmp r10, 0
 10077 0000699C 7414                    	je .L_tc_recycle_frame_done_0041
 10078 0000699E 4D8B2C24                	mov r13, qword [r12]
 10079 000069A2 4D892B                  	mov qword [r11], r13
 10080 000069A5 49FFCA                  	dec r10
 10081 000069A8 4983EB08                	sub r11, 8
 10082 000069AC 4983EC08                	sub r12, 8
 10083 000069B0 EBE6                    	jmp .L_tc_recycle_frame_loop_0041
 10084                                  .L_tc_recycle_frame_done_0041:
 10085 000069B2 498D6308                	lea rsp, [r11 + 8]
 10086 000069B6 5D                      	pop rbp
 10087 000069B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10088 000069BA C9                      	leave
 10089 000069BB C21000                  	ret AND_KILL_FRAME(0)
 10090                                  .L_lambda_opt_end_000a:	; new closure is in rax
 10091 000069BE C9                      	leave
 10092 000069BF C21000                  	ret AND_KILL_FRAME(0)
 10093                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10094 000069C2 803804                  	cmp byte [rax], T_closure
 10095 000069C5 0F8517F60000            	jne L_error_non_closure
 10096 000069CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10097 000069CE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10098 000069D2 4C8B4D00                	mov r9, qword [rbp]
 10099 000069D6 4150                    	push r8
 10100 000069D8 4151                    	push r9
 10101 000069DA 41BA04000000            	mov r10, 0 + 4
 10102 000069E0 4C8B5D18                	mov r11, COUNT
 10103 000069E4 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10104 000069E9 4C8D65F8                	lea r12, [rbp - 8]
 10105                                  .L_tc_recycle_frame_loop_0042:
 10106 000069ED 4983FA00                	cmp r10, 0
 10107 000069F1 7414                    	je .L_tc_recycle_frame_done_0042
 10108 000069F3 4D8B2C24                	mov r13, qword [r12]
 10109 000069F7 4D892B                  	mov qword [r11], r13
 10110 000069FA 49FFCA                  	dec r10
 10111 000069FD 4983EB08                	sub r11, 8
 10112 00006A01 4983EC08                	sub r12, 8
 10113 00006A05 EBE6                    	jmp .L_tc_recycle_frame_loop_0042
 10114                                  .L_tc_recycle_frame_done_0042:
 10115 00006A07 498D6308                	lea rsp, [r11 + 8]
 10116 00006A0B 5D                      	pop rbp
 10117 00006A0C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10118 00006A0F C9                      	leave
 10119 00006A10 C21800                  	ret AND_KILL_FRAME(1)
 10120                                  .L_lambda_simple_end_0039:	; new closure is in rax
 10121 00006A13 803804                  	cmp byte [rax], T_closure
 10122 00006A16 0F85C6F50000            	jne L_error_non_closure
 10123 00006A1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10124 00006A1F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10125 00006A23 4C8B4D00                	mov r9, qword [rbp]
 10126 00006A27 4150                    	push r8
 10127 00006A29 4151                    	push r9
 10128 00006A2B 41BA05000000            	mov r10, 1 + 4
 10129 00006A31 4C8B5D18                	mov r11, COUNT
 10130 00006A35 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10131 00006A3A 4C8D65F8                	lea r12, [rbp - 8]
 10132                                  .L_tc_recycle_frame_loop_0043:
 10133 00006A3E 4983FA00                	cmp r10, 0
 10134 00006A42 7414                    	je .L_tc_recycle_frame_done_0043
 10135 00006A44 4D8B2C24                	mov r13, qword [r12]
 10136 00006A48 4D892B                  	mov qword [r11], r13
 10137 00006A4B 49FFCA                  	dec r10
 10138 00006A4E 4983EB08                	sub r11, 8
 10139 00006A52 4983EC08                	sub r12, 8
 10140 00006A56 EBE6                    	jmp .L_tc_recycle_frame_loop_0043
 10141                                  .L_tc_recycle_frame_done_0043:
 10142 00006A58 498D6308                	lea rsp, [r11 + 8]
 10143 00006A5C 5D                      	pop rbp
 10144 00006A5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10145 00006A60 C9                      	leave
 10146 00006A61 C21800                  	ret AND_KILL_FRAME(1)
 10147                                  .L_lambda_simple_end_0037:	; new closure is in rax
 10148 00006A64 803804                  	cmp byte [rax], T_closure
 10149 00006A67 0F8575F50000            	jne L_error_non_closure
 10150 00006A6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10151 00006A70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10152 00006A73 48890425[020E0000]      	mov qword [free_var_1], rax
 10153 00006A7B 48B8-                   	mov rax, sob_void
 10153 00006A7D [0000000000000000] 
 10154                                  
 10155 00006A85 4889C7                  	mov rdi, rax
 10156 00006A88 E853F80000              	call print_sexpr_if_not_void
 10157                                  	; preparing a non-tail-call
 10158 00006A8D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10159 00006A92 E8F4F50000              	call malloc
 10160 00006A97 50                      	push rax
 10161 00006A98 BF00000000              	mov rdi, 8 * 0	; new rib
 10162 00006A9D E8E9F50000              	call malloc
 10163 00006AA2 50                      	push rax
 10164 00006AA3 BF08000000              	mov rdi, 8 * 1	; extended env
 10165 00006AA8 E8DEF50000              	call malloc
 10166 00006AAD 488B7D10                	mov rdi, ENV
 10167 00006AB1 BE00000000              	mov rsi, 0
 10168 00006AB6 BA01000000              	mov rdx, 1
 10169                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10170 00006ABB 4883FE00                	cmp rsi, 0
 10171 00006ABF 7410                    	je .L_lambda_simple_env_end_003b
 10172 00006AC1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10173 00006AC5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10174 00006AC9 48FFC6                  	inc rsi
 10175 00006ACC 48FFC2                  	inc rdx
 10176 00006ACF EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10177                                  .L_lambda_simple_env_end_003b:
 10178 00006AD1 5B                      	pop rbx
 10179 00006AD2 BE00000000              	mov rsi, 0
 10180                                  .L_lambda_simple_params_loop_003b:	; copy params
 10181 00006AD7 4883FE00                	cmp rsi, 0
 10182 00006ADB 740E                    	je .L_lambda_simple_params_end_003b
 10183 00006ADD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10184 00006AE2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10185 00006AE6 48FFC6                  	inc rsi
 10186 00006AE9 EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10187                                  .L_lambda_simple_params_end_003b:
 10188 00006AEB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10189 00006AEE 4889C3                  	mov rbx, rax
 10190 00006AF1 58                      	pop rax
 10191 00006AF2 C60004                  	mov byte [rax], T_closure
 10192 00006AF5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10193 00006AF9 48C74009[066B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10194 00006B01 E991000000              	jmp .L_lambda_simple_end_003b
 10195                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10196 00006B06 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10197 00006B0C 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10198 00006B0E FF742410                	push qword [rsp + 8 * 2]
 10199 00006B12 6A00                    	push 0
 10200 00006B14 E92BF50000              	jmp L_error_incorrect_arity_simple
 10201                                  .L_lambda_simple_arity_check_ok_003b:
 10202 00006B19 C8000000                	enter 0, 0
 10203                                  	; Setting up for a tail-call
 10204 00006B1D 48B8-                   	mov rax, L_constants + 2265
 10204 00006B1F [D908000000000000] 
 10205 00006B27 50                      	push rax
 10206 00006B28 48B8-                   	mov rax, L_constants + 2201
 10206 00006B2A [9908000000000000] 
 10207 00006B32 50                      	push rax
 10208 00006B33 6A02                    	push 2
 10209 00006B35 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 10210 00006B3D 803805                  	cmp byte [rax], T_undefined
 10211 00006B40 0F8418F40000            	je L_error_fvar_undefined
 10212 00006B46 803804                  	cmp byte [rax], T_closure
 10213 00006B49 0F8593F40000            	jne L_error_non_closure
 10214 00006B4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10215 00006B52 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10216 00006B56 4C8B4D00                	mov r9, qword [rbp]
 10217 00006B5A 4150                    	push r8
 10218 00006B5C 4151                    	push r9
 10219 00006B5E 41BA06000000            	mov r10, 2 + 4
 10220 00006B64 4C8B5D18                	mov r11, COUNT
 10221 00006B68 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10222 00006B6D 4C8D65F8                	lea r12, [rbp - 8]
 10223                                  .L_tc_recycle_frame_loop_0044:
 10224 00006B71 4983FA00                	cmp r10, 0
 10225 00006B75 7414                    	je .L_tc_recycle_frame_done_0044
 10226 00006B77 4D8B2C24                	mov r13, qword [r12]
 10227 00006B7B 4D892B                  	mov qword [r11], r13
 10228 00006B7E 49FFCA                  	dec r10
 10229 00006B81 4983EB08                	sub r11, 8
 10230 00006B85 4983EC08                	sub r12, 8
 10231 00006B89 EBE6                    	jmp .L_tc_recycle_frame_loop_0044
 10232                                  .L_tc_recycle_frame_done_0044:
 10233 00006B8B 498D6308                	lea rsp, [r11 + 8]
 10234 00006B8F 5D                      	pop rbp
 10235 00006B90 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10236 00006B93 C9                      	leave
 10237 00006B94 C21000                  	ret AND_KILL_FRAME(0)
 10238                                  .L_lambda_simple_end_003b:	; new closure is in rax
 10239 00006B97 50                      	push rax
 10240 00006B98 6A01                    	push 1	; arg count
 10241 00006B9A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10242 00006B9F E8E7F40000              	call malloc
 10243 00006BA4 50                      	push rax
 10244 00006BA5 BF00000000              	mov rdi, 8 * 0	; new rib
 10245 00006BAA E8DCF40000              	call malloc
 10246 00006BAF 50                      	push rax
 10247 00006BB0 BF08000000              	mov rdi, 8 * 1	; extended env
 10248 00006BB5 E8D1F40000              	call malloc
 10249 00006BBA 488B7D10                	mov rdi, ENV
 10250 00006BBE BE00000000              	mov rsi, 0
 10251 00006BC3 BA01000000              	mov rdx, 1
 10252                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 10253 00006BC8 4883FE00                	cmp rsi, 0
 10254 00006BCC 7410                    	je .L_lambda_simple_env_end_003c
 10255 00006BCE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10256 00006BD2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10257 00006BD6 48FFC6                  	inc rsi
 10258 00006BD9 48FFC2                  	inc rdx
 10259 00006BDC EBEA                    	jmp .L_lambda_simple_env_loop_003c
 10260                                  .L_lambda_simple_env_end_003c:
 10261 00006BDE 5B                      	pop rbx
 10262 00006BDF BE00000000              	mov rsi, 0
 10263                                  .L_lambda_simple_params_loop_003c:	; copy params
 10264 00006BE4 4883FE00                	cmp rsi, 0
 10265 00006BE8 740E                    	je .L_lambda_simple_params_end_003c
 10266 00006BEA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10267 00006BEF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10268 00006BF3 48FFC6                  	inc rsi
 10269 00006BF6 EBEC                    	jmp .L_lambda_simple_params_loop_003c
 10270                                  .L_lambda_simple_params_end_003c:
 10271 00006BF8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10272 00006BFB 4889C3                  	mov rbx, rax
 10273 00006BFE 58                      	pop rax
 10274 00006BFF C60004                  	mov byte [rax], T_closure
 10275 00006C02 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10276 00006C06 48C74009[136C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 10277 00006C0E E99D0E0000              	jmp .L_lambda_simple_end_003c
 10278                                  .L_lambda_simple_code_003c:	; lambda-simple body
 10279 00006C13 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10280 00006C19 740B                    	je .L_lambda_simple_arity_check_ok_003c
 10281 00006C1B FF742410                	push qword [rsp + 8 * 2]
 10282 00006C1F 6A01                    	push 1
 10283 00006C21 E91EF40000              	jmp L_error_incorrect_arity_simple
 10284                                  .L_lambda_simple_arity_check_ok_003c:
 10285 00006C26 C8000000                	enter 0, 0
 10286                                  	; Setting up for a tail-call
 10287 00006C2A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10288 00006C2F E857F40000              	call malloc
 10289 00006C34 50                      	push rax
 10290 00006C35 BF08000000              	mov rdi, 8 * 1	; new rib
 10291 00006C3A E84CF40000              	call malloc
 10292 00006C3F 50                      	push rax
 10293 00006C40 BF10000000              	mov rdi, 8 * 2	; extended env
 10294 00006C45 E841F40000              	call malloc
 10295 00006C4A 488B7D10                	mov rdi, ENV
 10296 00006C4E BE00000000              	mov rsi, 0
 10297 00006C53 BA01000000              	mov rdx, 1
 10298                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 10299 00006C58 4883FE01                	cmp rsi, 1
 10300 00006C5C 7410                    	je .L_lambda_simple_env_end_003d
 10301 00006C5E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10302 00006C62 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10303 00006C66 48FFC6                  	inc rsi
 10304 00006C69 48FFC2                  	inc rdx
 10305 00006C6C EBEA                    	jmp .L_lambda_simple_env_loop_003d
 10306                                  .L_lambda_simple_env_end_003d:
 10307 00006C6E 5B                      	pop rbx
 10308 00006C6F BE00000000              	mov rsi, 0
 10309                                  .L_lambda_simple_params_loop_003d:	; copy params
 10310 00006C74 4883FE01                	cmp rsi, 1
 10311 00006C78 740E                    	je .L_lambda_simple_params_end_003d
 10312 00006C7A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10313 00006C7F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10314 00006C83 48FFC6                  	inc rsi
 10315 00006C86 EBEC                    	jmp .L_lambda_simple_params_loop_003d
 10316                                  .L_lambda_simple_params_end_003d:
 10317 00006C88 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10318 00006C8B 4889C3                  	mov rbx, rax
 10319 00006C8E 58                      	pop rax
 10320 00006C8F C60004                  	mov byte [rax], T_closure
 10321 00006C92 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10322 00006C96 48C74009[A36C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 10323 00006C9E E993080000              	jmp .L_lambda_simple_end_003d
 10324                                  .L_lambda_simple_code_003d:	; lambda-simple body
 10325 00006CA3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10326 00006CA9 740B                    	je .L_lambda_simple_arity_check_ok_003d
 10327 00006CAB FF742410                	push qword [rsp + 8 * 2]
 10328 00006CAF 6A02                    	push 2
 10329 00006CB1 E98EF30000              	jmp L_error_incorrect_arity_simple
 10330                                  .L_lambda_simple_arity_check_ok_003d:
 10331 00006CB6 C8000000                	enter 0, 0
 10332                                  	; preparing a non-tail-call
 10333 00006CBA 488B4520                	mov rax, PARAM(0)	; param a
 10334 00006CBE 50                      	push rax
 10335 00006CBF 6A01                    	push 1	; arg count
 10336 00006CC1 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 10337 00006CC9 803805                  	cmp byte [rax], T_undefined
 10338 00006CCC 0F848CF20000            	je L_error_fvar_undefined
 10339 00006CD2 803804                  	cmp byte [rax], T_closure
 10340 00006CD5 0F8507F30000            	jne L_error_non_closure
 10341 00006CDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10342 00006CDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 10343 00006CE1 483D[02000000]          	cmp rax, sob_boolean_false
 10344 00006CE7 0F8483020000            	je .L_if_else_0028
 10345                                  	; preparing a non-tail-call
 10346 00006CED 488B4528                	mov rax, PARAM(1)	; param b
 10347 00006CF1 50                      	push rax
 10348 00006CF2 6A01                    	push 1	; arg count
 10349 00006CF4 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 10350 00006CFC 803805                  	cmp byte [rax], T_undefined
 10351 00006CFF 0F8459F20000            	je L_error_fvar_undefined
 10352 00006D05 803804                  	cmp byte [rax], T_closure
 10353 00006D08 0F85D4F20000            	jne L_error_non_closure
 10354 00006D0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10355 00006D11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10356 00006D14 483D[02000000]          	cmp rax, sob_boolean_false
 10357 00006D1A 746F                    	je .L_if_else_001f
 10358                                  	; Setting up for a tail-call
 10359 00006D1C 488B4520                	mov rax, PARAM(0)	; param a
 10360 00006D20 50                      	push rax
 10361 00006D21 488B4528                	mov rax, PARAM(1)	; param b
 10362 00006D25 50                      	push rax
 10363 00006D26 6A02                    	push 2
 10364 00006D28 488B0425[BC0F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10365 00006D30 803805                  	cmp byte [rax], T_undefined
 10366 00006D33 0F8425F20000            	je L_error_fvar_undefined
 10367 00006D39 803804                  	cmp byte [rax], T_closure
 10368 00006D3C 0F85A0F20000            	jne L_error_non_closure
 10369 00006D42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10370 00006D45 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10371 00006D49 4C8B4D00                	mov r9, qword [rbp]
 10372 00006D4D 4150                    	push r8
 10373 00006D4F 4151                    	push r9
 10374 00006D51 41BA06000000            	mov r10, 2 + 4
 10375 00006D57 4C8B5D18                	mov r11, COUNT
 10376 00006D5B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10377 00006D60 4C8D65F8                	lea r12, [rbp - 8]
 10378                                  .L_tc_recycle_frame_loop_0045:
 10379 00006D64 4983FA00                	cmp r10, 0
 10380 00006D68 7414                    	je .L_tc_recycle_frame_done_0045
 10381 00006D6A 4D8B2C24                	mov r13, qword [r12]
 10382 00006D6E 4D892B                  	mov qword [r11], r13
 10383 00006D71 49FFCA                  	dec r10
 10384 00006D74 4983EB08                	sub r11, 8
 10385 00006D78 4983EC08                	sub r12, 8
 10386 00006D7C EBE6                    	jmp .L_tc_recycle_frame_loop_0045
 10387                                  .L_tc_recycle_frame_done_0045:
 10388 00006D7E 498D6308                	lea rsp, [r11 + 8]
 10389 00006D82 5D                      	pop rbp
 10390 00006D83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10391 00006D86 E9E0010000              	jmp .L_if_end_001f
 10392                                  .L_if_else_001f:
 10393                                  	; preparing a non-tail-call
 10394 00006D8B 488B4528                	mov rax, PARAM(1)	; param b
 10395 00006D8F 50                      	push rax
 10396 00006D90 6A01                    	push 1	; arg count
 10397 00006D92 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 10398 00006D9A 803805                  	cmp byte [rax], T_undefined
 10399 00006D9D 0F84BBF10000            	je L_error_fvar_undefined
 10400 00006DA3 803804                  	cmp byte [rax], T_closure
 10401 00006DA6 0F8536F20000            	jne L_error_non_closure
 10402 00006DAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10403 00006DAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10404 00006DB2 483D[02000000]          	cmp rax, sob_boolean_false
 10405 00006DB8 0F8492000000            	je .L_if_else_001e
 10406                                  	; Setting up for a tail-call
 10407                                  	; preparing a non-tail-call
 10408 00006DBE 488B4520                	mov rax, PARAM(0)	; param a
 10409 00006DC2 50                      	push rax
 10410 00006DC3 6A01                    	push 1	; arg count
 10411 00006DC5 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10412 00006DCD 803805                  	cmp byte [rax], T_undefined
 10413 00006DD0 0F8488F10000            	je L_error_fvar_undefined
 10414 00006DD6 803804                  	cmp byte [rax], T_closure
 10415 00006DD9 0F8503F20000            	jne L_error_non_closure
 10416 00006DDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10417 00006DE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10418 00006DE5 50                      	push rax
 10419 00006DE6 488B4528                	mov rax, PARAM(1)	; param b
 10420 00006DEA 50                      	push rax
 10421 00006DEB 6A02                    	push 2
 10422 00006DED 488B0425[9A0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10423 00006DF5 803805                  	cmp byte [rax], T_undefined
 10424 00006DF8 0F8460F10000            	je L_error_fvar_undefined
 10425 00006DFE 803804                  	cmp byte [rax], T_closure
 10426 00006E01 0F85DBF10000            	jne L_error_non_closure
 10427 00006E07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10428 00006E0A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10429 00006E0E 4C8B4D00                	mov r9, qword [rbp]
 10430 00006E12 4150                    	push r8
 10431 00006E14 4151                    	push r9
 10432 00006E16 41BA06000000            	mov r10, 2 + 4
 10433 00006E1C 4C8B5D18                	mov r11, COUNT
 10434 00006E20 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10435 00006E25 4C8D65F8                	lea r12, [rbp - 8]
 10436                                  .L_tc_recycle_frame_loop_0046:
 10437 00006E29 4983FA00                	cmp r10, 0
 10438 00006E2D 7414                    	je .L_tc_recycle_frame_done_0046
 10439 00006E2F 4D8B2C24                	mov r13, qword [r12]
 10440 00006E33 4D892B                  	mov qword [r11], r13
 10441 00006E36 49FFCA                  	dec r10
 10442 00006E39 4983EB08                	sub r11, 8
 10443 00006E3D 4983EC08                	sub r12, 8
 10444 00006E41 EBE6                    	jmp .L_tc_recycle_frame_loop_0046
 10445                                  .L_tc_recycle_frame_done_0046:
 10446 00006E43 498D6308                	lea rsp, [r11 + 8]
 10447 00006E47 5D                      	pop rbp
 10448 00006E48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10449 00006E4B E91B010000              	jmp .L_if_end_001e
 10450                                  .L_if_else_001e:
 10451                                  	; preparing a non-tail-call
 10452 00006E50 488B4528                	mov rax, PARAM(1)	; param b
 10453 00006E54 50                      	push rax
 10454 00006E55 6A01                    	push 1	; arg count
 10455 00006E57 488B0425[A5150000]      	mov rax, qword [free_var_116]	; free var real
 10456 00006E5F 803805                  	cmp byte [rax], T_undefined
 10457 00006E62 0F84F6F00000            	je L_error_fvar_undefined
 10458 00006E68 803804                  	cmp byte [rax], T_closure
 10459 00006E6B 0F8571F10000            	jne L_error_non_closure
 10460 00006E71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10461 00006E74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10462 00006E77 483D[02000000]          	cmp rax, sob_boolean_false
 10463 00006E7D 0F848F000000            	je .L_if_else_001d
 10464                                  	; Setting up for a tail-call
 10465                                  	; preparing a non-tail-call
 10466 00006E83 488B4520                	mov rax, PARAM(0)	; param a
 10467 00006E87 50                      	push rax
 10468 00006E88 6A01                    	push 1	; arg count
 10469 00006E8A 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 10470 00006E92 803805                  	cmp byte [rax], T_undefined
 10471 00006E95 0F84C3F00000            	je L_error_fvar_undefined
 10472 00006E9B 803804                  	cmp byte [rax], T_closure
 10473 00006E9E 0F853EF10000            	jne L_error_non_closure
 10474 00006EA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10475 00006EA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10476 00006EAA 50                      	push rax
 10477 00006EAB 488B4528                	mov rax, PARAM(1)	; param b
 10478 00006EAF 50                      	push rax
 10479 00006EB0 6A02                    	push 2
 10480 00006EB2 488B0425[AB0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10481 00006EBA 803805                  	cmp byte [rax], T_undefined
 10482 00006EBD 0F849BF00000            	je L_error_fvar_undefined
 10483 00006EC3 803804                  	cmp byte [rax], T_closure
 10484 00006EC6 0F8516F10000            	jne L_error_non_closure
 10485 00006ECC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10486 00006ECF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10487 00006ED3 4C8B4D00                	mov r9, qword [rbp]
 10488 00006ED7 4150                    	push r8
 10489 00006ED9 4151                    	push r9
 10490 00006EDB 41BA06000000            	mov r10, 2 + 4
 10491 00006EE1 4C8B5D18                	mov r11, COUNT
 10492 00006EE5 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10493 00006EEA 4C8D65F8                	lea r12, [rbp - 8]
 10494                                  .L_tc_recycle_frame_loop_0047:
 10495 00006EEE 4983FA00                	cmp r10, 0
 10496 00006EF2 7414                    	je .L_tc_recycle_frame_done_0047
 10497 00006EF4 4D8B2C24                	mov r13, qword [r12]
 10498 00006EF8 4D892B                  	mov qword [r11], r13
 10499 00006EFB 49FFCA                  	dec r10
 10500 00006EFE 4983EB08                	sub r11, 8
 10501 00006F02 4983EC08                	sub r12, 8
 10502 00006F06 EBE6                    	jmp .L_tc_recycle_frame_loop_0047
 10503                                  .L_tc_recycle_frame_done_0047:
 10504 00006F08 498D6308                	lea rsp, [r11 + 8]
 10505 00006F0C 5D                      	pop rbp
 10506 00006F0D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10507 00006F10 EB59                    	jmp .L_if_end_001d
 10508                                  .L_if_else_001d:
 10509                                  	; Setting up for a tail-call
 10510 00006F12 6A00                    	push 0
 10511 00006F14 488B4510                	mov rax, ENV
 10512 00006F18 488B00                  	mov rax, qword [rax + 8 * 0]
 10513 00006F1B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10514 00006F1E 803804                  	cmp byte [rax], T_closure
 10515 00006F21 0F85BBF00000            	jne L_error_non_closure
 10516 00006F27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10517 00006F2A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10518 00006F2E 4C8B4D00                	mov r9, qword [rbp]
 10519 00006F32 4150                    	push r8
 10520 00006F34 4151                    	push r9
 10521 00006F36 41BA04000000            	mov r10, 0 + 4
 10522 00006F3C 4C8B5D18                	mov r11, COUNT
 10523 00006F40 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10524 00006F45 4C8D65F8                	lea r12, [rbp - 8]
 10525                                  .L_tc_recycle_frame_loop_0048:
 10526 00006F49 4983FA00                	cmp r10, 0
 10527 00006F4D 7414                    	je .L_tc_recycle_frame_done_0048
 10528 00006F4F 4D8B2C24                	mov r13, qword [r12]
 10529 00006F53 4D892B                  	mov qword [r11], r13
 10530 00006F56 49FFCA                  	dec r10
 10531 00006F59 4983EB08                	sub r11, 8
 10532 00006F5D 4983EC08                	sub r12, 8
 10533 00006F61 EBE6                    	jmp .L_tc_recycle_frame_loop_0048
 10534                                  .L_tc_recycle_frame_done_0048:
 10535 00006F63 498D6308                	lea rsp, [r11 + 8]
 10536 00006F67 5D                      	pop rbp
 10537 00006F68 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10538                                  .L_if_end_001d:
 10539                                  .L_if_end_001e:
 10540                                  .L_if_end_001f:
 10541 00006F6B E9C2050000              	jmp .L_if_end_0028
 10542                                  .L_if_else_0028:
 10543                                  	; preparing a non-tail-call
 10544 00006F70 488B4520                	mov rax, PARAM(0)	; param a
 10545 00006F74 50                      	push rax
 10546 00006F75 6A01                    	push 1	; arg count
 10547 00006F77 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 10548 00006F7F 803805                  	cmp byte [rax], T_undefined
 10549 00006F82 0F84D6EF0000            	je L_error_fvar_undefined
 10550 00006F88 803804                  	cmp byte [rax], T_closure
 10551 00006F8B 0F8551F00000            	jne L_error_non_closure
 10552 00006F91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10553 00006F94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10554 00006F97 483D[02000000]          	cmp rax, sob_boolean_false
 10555 00006F9D 0F8483020000            	je .L_if_else_0027
 10556                                  	; preparing a non-tail-call
 10557 00006FA3 488B4528                	mov rax, PARAM(1)	; param b
 10558 00006FA7 50                      	push rax
 10559 00006FA8 6A01                    	push 1	; arg count
 10560 00006FAA 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 10561 00006FB2 803805                  	cmp byte [rax], T_undefined
 10562 00006FB5 0F84A3EF0000            	je L_error_fvar_undefined
 10563 00006FBB 803804                  	cmp byte [rax], T_closure
 10564 00006FBE 0F851EF00000            	jne L_error_non_closure
 10565 00006FC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10566 00006FC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10567 00006FCA 483D[02000000]          	cmp rax, sob_boolean_false
 10568 00006FD0 0F8492000000            	je .L_if_else_0022
 10569                                  	; Setting up for a tail-call
 10570 00006FD6 488B4520                	mov rax, PARAM(0)	; param a
 10571 00006FDA 50                      	push rax
 10572                                  	; preparing a non-tail-call
 10573 00006FDB 488B4528                	mov rax, PARAM(1)	; param b
 10574 00006FDF 50                      	push rax
 10575 00006FE0 6A01                    	push 1	; arg count
 10576 00006FE2 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10577 00006FEA 803805                  	cmp byte [rax], T_undefined
 10578 00006FED 0F846BEF0000            	je L_error_fvar_undefined
 10579 00006FF3 803804                  	cmp byte [rax], T_closure
 10580 00006FF6 0F85E6EF0000            	jne L_error_non_closure
 10581 00006FFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10582 00006FFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10583 00007002 50                      	push rax
 10584 00007003 6A02                    	push 2
 10585 00007005 488B0425[9A0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10586 0000700D 803805                  	cmp byte [rax], T_undefined
 10587 00007010 0F8448EF0000            	je L_error_fvar_undefined
 10588 00007016 803804                  	cmp byte [rax], T_closure
 10589 00007019 0F85C3EF0000            	jne L_error_non_closure
 10590 0000701F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10591 00007022 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10592 00007026 4C8B4D00                	mov r9, qword [rbp]
 10593 0000702A 4150                    	push r8
 10594 0000702C 4151                    	push r9
 10595 0000702E 41BA06000000            	mov r10, 2 + 4
 10596 00007034 4C8B5D18                	mov r11, COUNT
 10597 00007038 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10598 0000703D 4C8D65F8                	lea r12, [rbp - 8]
 10599                                  .L_tc_recycle_frame_loop_0049:
 10600 00007041 4983FA00                	cmp r10, 0
 10601 00007045 7414                    	je .L_tc_recycle_frame_done_0049
 10602 00007047 4D8B2C24                	mov r13, qword [r12]
 10603 0000704B 4D892B                  	mov qword [r11], r13
 10604 0000704E 49FFCA                  	dec r10
 10605 00007051 4983EB08                	sub r11, 8
 10606 00007055 4983EC08                	sub r12, 8
 10607 00007059 EBE6                    	jmp .L_tc_recycle_frame_loop_0049
 10608                                  .L_tc_recycle_frame_done_0049:
 10609 0000705B 498D6308                	lea rsp, [r11 + 8]
 10610 0000705F 5D                      	pop rbp
 10611 00007060 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10612 00007063 E9B9010000              	jmp .L_if_end_0022
 10613                                  .L_if_else_0022:
 10614                                  	; preparing a non-tail-call
 10615 00007068 488B4528                	mov rax, PARAM(1)	; param b
 10616 0000706C 50                      	push rax
 10617 0000706D 6A01                    	push 1	; arg count
 10618 0000706F 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 10619 00007077 803805                  	cmp byte [rax], T_undefined
 10620 0000707A 0F84DEEE0000            	je L_error_fvar_undefined
 10621 00007080 803804                  	cmp byte [rax], T_closure
 10622 00007083 0F8559EF0000            	jne L_error_non_closure
 10623 00007089 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10624 0000708C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10625 0000708F 483D[02000000]          	cmp rax, sob_boolean_false
 10626 00007095 746F                    	je .L_if_else_0021
 10627                                  	; Setting up for a tail-call
 10628 00007097 488B4520                	mov rax, PARAM(0)	; param a
 10629 0000709B 50                      	push rax
 10630 0000709C 488B4528                	mov rax, PARAM(1)	; param b
 10631 000070A0 50                      	push rax
 10632 000070A1 6A02                    	push 2
 10633 000070A3 488B0425[9A0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10634 000070AB 803805                  	cmp byte [rax], T_undefined
 10635 000070AE 0F84AAEE0000            	je L_error_fvar_undefined
 10636 000070B4 803804                  	cmp byte [rax], T_closure
 10637 000070B7 0F8525EF0000            	jne L_error_non_closure
 10638 000070BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 10639 000070C0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10640 000070C4 4C8B4D00                	mov r9, qword [rbp]
 10641 000070C8 4150                    	push r8
 10642 000070CA 4151                    	push r9
 10643 000070CC 41BA06000000            	mov r10, 2 + 4
 10644 000070D2 4C8B5D18                	mov r11, COUNT
 10645 000070D6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10646 000070DB 4C8D65F8                	lea r12, [rbp - 8]
 10647                                  .L_tc_recycle_frame_loop_004a:
 10648 000070DF 4983FA00                	cmp r10, 0
 10649 000070E3 7414                    	je .L_tc_recycle_frame_done_004a
 10650 000070E5 4D8B2C24                	mov r13, qword [r12]
 10651 000070E9 4D892B                  	mov qword [r11], r13
 10652 000070EC 49FFCA                  	dec r10
 10653 000070EF 4983EB08                	sub r11, 8
 10654 000070F3 4983EC08                	sub r12, 8
 10655 000070F7 EBE6                    	jmp .L_tc_recycle_frame_loop_004a
 10656                                  .L_tc_recycle_frame_done_004a:
 10657 000070F9 498D6308                	lea rsp, [r11 + 8]
 10658 000070FD 5D                      	pop rbp
 10659 000070FE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10660 00007101 E91B010000              	jmp .L_if_end_0021
 10661                                  .L_if_else_0021:
 10662                                  	; preparing a non-tail-call
 10663 00007106 488B4528                	mov rax, PARAM(1)	; param b
 10664 0000710A 50                      	push rax
 10665 0000710B 6A01                    	push 1	; arg count
 10666 0000710D 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 10667 00007115 803805                  	cmp byte [rax], T_undefined
 10668 00007118 0F8440EE0000            	je L_error_fvar_undefined
 10669 0000711E 803804                  	cmp byte [rax], T_closure
 10670 00007121 0F85BBEE0000            	jne L_error_non_closure
 10671 00007127 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10672 0000712A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10673 0000712D 483D[02000000]          	cmp rax, sob_boolean_false
 10674 00007133 0F848F000000            	je .L_if_else_0020
 10675                                  	; Setting up for a tail-call
 10676                                  	; preparing a non-tail-call
 10677 00007139 488B4520                	mov rax, PARAM(0)	; param a
 10678 0000713D 50                      	push rax
 10679 0000713E 6A01                    	push 1	; arg count
 10680 00007140 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 10681 00007148 803805                  	cmp byte [rax], T_undefined
 10682 0000714B 0F840DEE0000            	je L_error_fvar_undefined
 10683 00007151 803804                  	cmp byte [rax], T_closure
 10684 00007154 0F8588EE0000            	jne L_error_non_closure
 10685 0000715A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10686 0000715D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10687 00007160 50                      	push rax
 10688 00007161 488B4528                	mov rax, PARAM(1)	; param b
 10689 00007165 50                      	push rax
 10690 00007166 6A02                    	push 2
 10691 00007168 488B0425[AB0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10692 00007170 803805                  	cmp byte [rax], T_undefined
 10693 00007173 0F84E5ED0000            	je L_error_fvar_undefined
 10694 00007179 803804                  	cmp byte [rax], T_closure
 10695 0000717C 0F8560EE0000            	jne L_error_non_closure
 10696 00007182 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10697 00007185 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10698 00007189 4C8B4D00                	mov r9, qword [rbp]
 10699 0000718D 4150                    	push r8
 10700 0000718F 4151                    	push r9
 10701 00007191 41BA06000000            	mov r10, 2 + 4
 10702 00007197 4C8B5D18                	mov r11, COUNT
 10703 0000719B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10704 000071A0 4C8D65F8                	lea r12, [rbp - 8]
 10705                                  .L_tc_recycle_frame_loop_004b:
 10706 000071A4 4983FA00                	cmp r10, 0
 10707 000071A8 7414                    	je .L_tc_recycle_frame_done_004b
 10708 000071AA 4D8B2C24                	mov r13, qword [r12]
 10709 000071AE 4D892B                  	mov qword [r11], r13
 10710 000071B1 49FFCA                  	dec r10
 10711 000071B4 4983EB08                	sub r11, 8
 10712 000071B8 4983EC08                	sub r12, 8
 10713 000071BC EBE6                    	jmp .L_tc_recycle_frame_loop_004b
 10714                                  .L_tc_recycle_frame_done_004b:
 10715 000071BE 498D6308                	lea rsp, [r11 + 8]
 10716 000071C2 5D                      	pop rbp
 10717 000071C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10718 000071C6 EB59                    	jmp .L_if_end_0020
 10719                                  .L_if_else_0020:
 10720                                  	; Setting up for a tail-call
 10721 000071C8 6A00                    	push 0
 10722 000071CA 488B4510                	mov rax, ENV
 10723 000071CE 488B00                  	mov rax, qword [rax + 8 * 0]
 10724 000071D1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10725 000071D4 803804                  	cmp byte [rax], T_closure
 10726 000071D7 0F8505EE0000            	jne L_error_non_closure
 10727 000071DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 10728 000071E0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10729 000071E4 4C8B4D00                	mov r9, qword [rbp]
 10730 000071E8 4150                    	push r8
 10731 000071EA 4151                    	push r9
 10732 000071EC 41BA04000000            	mov r10, 0 + 4
 10733 000071F2 4C8B5D18                	mov r11, COUNT
 10734 000071F6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10735 000071FB 4C8D65F8                	lea r12, [rbp - 8]
 10736                                  .L_tc_recycle_frame_loop_004c:
 10737 000071FF 4983FA00                	cmp r10, 0
 10738 00007203 7414                    	je .L_tc_recycle_frame_done_004c
 10739 00007205 4D8B2C24                	mov r13, qword [r12]
 10740 00007209 4D892B                  	mov qword [r11], r13
 10741 0000720C 49FFCA                  	dec r10
 10742 0000720F 4983EB08                	sub r11, 8
 10743 00007213 4983EC08                	sub r12, 8
 10744 00007217 EBE6                    	jmp .L_tc_recycle_frame_loop_004c
 10745                                  .L_tc_recycle_frame_done_004c:
 10746 00007219 498D6308                	lea rsp, [r11 + 8]
 10747 0000721D 5D                      	pop rbp
 10748 0000721E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10749                                  .L_if_end_0020:
 10750                                  .L_if_end_0021:
 10751                                  .L_if_end_0022:
 10752 00007221 E90C030000              	jmp .L_if_end_0027
 10753                                  .L_if_else_0027:
 10754                                  	; preparing a non-tail-call
 10755 00007226 488B4520                	mov rax, PARAM(0)	; param a
 10756 0000722A 50                      	push rax
 10757 0000722B 6A01                    	push 1	; arg count
 10758 0000722D 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 10759 00007235 803805                  	cmp byte [rax], T_undefined
 10760 00007238 0F8420ED0000            	je L_error_fvar_undefined
 10761 0000723E 803804                  	cmp byte [rax], T_closure
 10762 00007241 0F859BED0000            	jne L_error_non_closure
 10763 00007247 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10764 0000724A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10765 0000724D 483D[02000000]          	cmp rax, sob_boolean_false
 10766 00007253 0F8480020000            	je .L_if_else_0026
 10767                                  	; preparing a non-tail-call
 10768 00007259 488B4528                	mov rax, PARAM(1)	; param b
 10769 0000725D 50                      	push rax
 10770 0000725E 6A01                    	push 1	; arg count
 10771 00007260 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 10772 00007268 803805                  	cmp byte [rax], T_undefined
 10773 0000726B 0F84EDEC0000            	je L_error_fvar_undefined
 10774 00007271 803804                  	cmp byte [rax], T_closure
 10775 00007274 0F8568ED0000            	jne L_error_non_closure
 10776 0000727A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10777 0000727D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10778 00007280 483D[02000000]          	cmp rax, sob_boolean_false
 10779 00007286 0F8492000000            	je .L_if_else_0025
 10780                                  	; Setting up for a tail-call
 10781 0000728C 488B4520                	mov rax, PARAM(0)	; param a
 10782 00007290 50                      	push rax
 10783                                  	; preparing a non-tail-call
 10784 00007291 488B4528                	mov rax, PARAM(1)	; param b
 10785 00007295 50                      	push rax
 10786 00007296 6A01                    	push 1	; arg count
 10787 00007298 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 10788 000072A0 803805                  	cmp byte [rax], T_undefined
 10789 000072A3 0F84B5EC0000            	je L_error_fvar_undefined
 10790 000072A9 803804                  	cmp byte [rax], T_closure
 10791 000072AC 0F8530ED0000            	jne L_error_non_closure
 10792 000072B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10793 000072B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10794 000072B8 50                      	push rax
 10795 000072B9 6A02                    	push 2
 10796 000072BB 488B0425[AB0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10797 000072C3 803805                  	cmp byte [rax], T_undefined
 10798 000072C6 0F8492EC0000            	je L_error_fvar_undefined
 10799 000072CC 803804                  	cmp byte [rax], T_closure
 10800 000072CF 0F850DED0000            	jne L_error_non_closure
 10801 000072D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10802 000072D8 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10803 000072DC 4C8B4D00                	mov r9, qword [rbp]
 10804 000072E0 4150                    	push r8
 10805 000072E2 4151                    	push r9
 10806 000072E4 41BA06000000            	mov r10, 2 + 4
 10807 000072EA 4C8B5D18                	mov r11, COUNT
 10808 000072EE 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10809 000072F3 4C8D65F8                	lea r12, [rbp - 8]
 10810                                  .L_tc_recycle_frame_loop_004d:
 10811 000072F7 4983FA00                	cmp r10, 0
 10812 000072FB 7414                    	je .L_tc_recycle_frame_done_004d
 10813 000072FD 4D8B2C24                	mov r13, qword [r12]
 10814 00007301 4D892B                  	mov qword [r11], r13
 10815 00007304 49FFCA                  	dec r10
 10816 00007307 4983EB08                	sub r11, 8
 10817 0000730B 4983EC08                	sub r12, 8
 10818 0000730F EBE6                    	jmp .L_tc_recycle_frame_loop_004d
 10819                                  .L_tc_recycle_frame_done_004d:
 10820 00007311 498D6308                	lea rsp, [r11 + 8]
 10821 00007315 5D                      	pop rbp
 10822 00007316 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10823 00007319 E9B9010000              	jmp .L_if_end_0025
 10824                                  .L_if_else_0025:
 10825                                  	; preparing a non-tail-call
 10826 0000731E 488B4528                	mov rax, PARAM(1)	; param b
 10827 00007322 50                      	push rax
 10828 00007323 6A01                    	push 1	; arg count
 10829 00007325 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 10830 0000732D 803805                  	cmp byte [rax], T_undefined
 10831 00007330 0F8428EC0000            	je L_error_fvar_undefined
 10832 00007336 803804                  	cmp byte [rax], T_closure
 10833 00007339 0F85A3EC0000            	jne L_error_non_closure
 10834 0000733F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10835 00007342 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10836 00007345 483D[02000000]          	cmp rax, sob_boolean_false
 10837 0000734B 0F8492000000            	je .L_if_else_0024
 10838                                  	; Setting up for a tail-call
 10839 00007351 488B4520                	mov rax, PARAM(0)	; param a
 10840 00007355 50                      	push rax
 10841                                  	; preparing a non-tail-call
 10842 00007356 488B4528                	mov rax, PARAM(1)	; param b
 10843 0000735A 50                      	push rax
 10844 0000735B 6A01                    	push 1	; arg count
 10845 0000735D 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 10846 00007365 803805                  	cmp byte [rax], T_undefined
 10847 00007368 0F84F0EB0000            	je L_error_fvar_undefined
 10848 0000736E 803804                  	cmp byte [rax], T_closure
 10849 00007371 0F856BEC0000            	jne L_error_non_closure
 10850 00007377 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10851 0000737A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10852 0000737D 50                      	push rax
 10853 0000737E 6A02                    	push 2
 10854 00007380 488B0425[AB0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10855 00007388 803805                  	cmp byte [rax], T_undefined
 10856 0000738B 0F84CDEB0000            	je L_error_fvar_undefined
 10857 00007391 803804                  	cmp byte [rax], T_closure
 10858 00007394 0F8548EC0000            	jne L_error_non_closure
 10859 0000739A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10860 0000739D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10861 000073A1 4C8B4D00                	mov r9, qword [rbp]
 10862 000073A5 4150                    	push r8
 10863 000073A7 4151                    	push r9
 10864 000073A9 41BA06000000            	mov r10, 2 + 4
 10865 000073AF 4C8B5D18                	mov r11, COUNT
 10866 000073B3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10867 000073B8 4C8D65F8                	lea r12, [rbp - 8]
 10868                                  .L_tc_recycle_frame_loop_004e:
 10869 000073BC 4983FA00                	cmp r10, 0
 10870 000073C0 7414                    	je .L_tc_recycle_frame_done_004e
 10871 000073C2 4D8B2C24                	mov r13, qword [r12]
 10872 000073C6 4D892B                  	mov qword [r11], r13
 10873 000073C9 49FFCA                  	dec r10
 10874 000073CC 4983EB08                	sub r11, 8
 10875 000073D0 4983EC08                	sub r12, 8
 10876 000073D4 EBE6                    	jmp .L_tc_recycle_frame_loop_004e
 10877                                  .L_tc_recycle_frame_done_004e:
 10878 000073D6 498D6308                	lea rsp, [r11 + 8]
 10879 000073DA 5D                      	pop rbp
 10880 000073DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10881 000073DE E9F4000000              	jmp .L_if_end_0024
 10882                                  .L_if_else_0024:
 10883                                  	; preparing a non-tail-call
 10884 000073E3 488B4528                	mov rax, PARAM(1)	; param b
 10885 000073E7 50                      	push rax
 10886 000073E8 6A01                    	push 1	; arg count
 10887 000073EA 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 10888 000073F2 803805                  	cmp byte [rax], T_undefined
 10889 000073F5 0F8463EB0000            	je L_error_fvar_undefined
 10890 000073FB 803804                  	cmp byte [rax], T_closure
 10891 000073FE 0F85DEEB0000            	jne L_error_non_closure
 10892 00007404 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10893 00007407 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10894 0000740A 483D[02000000]          	cmp rax, sob_boolean_false
 10895 00007410 746C                    	je .L_if_else_0023
 10896                                  	; Setting up for a tail-call
 10897 00007412 488B4520                	mov rax, PARAM(0)	; param a
 10898 00007416 50                      	push rax
 10899 00007417 488B4528                	mov rax, PARAM(1)	; param b
 10900 0000741B 50                      	push rax
 10901 0000741C 6A02                    	push 2
 10902 0000741E 488B0425[AB0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10903 00007426 803805                  	cmp byte [rax], T_undefined
 10904 00007429 0F842FEB0000            	je L_error_fvar_undefined
 10905 0000742F 803804                  	cmp byte [rax], T_closure
 10906 00007432 0F85AAEB0000            	jne L_error_non_closure
 10907 00007438 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10908 0000743B 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10909 0000743F 4C8B4D00                	mov r9, qword [rbp]
 10910 00007443 4150                    	push r8
 10911 00007445 4151                    	push r9
 10912 00007447 41BA06000000            	mov r10, 2 + 4
 10913 0000744D 4C8B5D18                	mov r11, COUNT
 10914 00007451 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10915 00007456 4C8D65F8                	lea r12, [rbp - 8]
 10916                                  .L_tc_recycle_frame_loop_004f:
 10917 0000745A 4983FA00                	cmp r10, 0
 10918 0000745E 7414                    	je .L_tc_recycle_frame_done_004f
 10919 00007460 4D8B2C24                	mov r13, qword [r12]
 10920 00007464 4D892B                  	mov qword [r11], r13
 10921 00007467 49FFCA                  	dec r10
 10922 0000746A 4983EB08                	sub r11, 8
 10923 0000746E 4983EC08                	sub r12, 8
 10924 00007472 EBE6                    	jmp .L_tc_recycle_frame_loop_004f
 10925                                  .L_tc_recycle_frame_done_004f:
 10926 00007474 498D6308                	lea rsp, [r11 + 8]
 10927 00007478 5D                      	pop rbp
 10928 00007479 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10929 0000747C EB59                    	jmp .L_if_end_0023
 10930                                  .L_if_else_0023:
 10931                                  	; Setting up for a tail-call
 10932 0000747E 6A00                    	push 0
 10933 00007480 488B4510                	mov rax, ENV
 10934 00007484 488B00                  	mov rax, qword [rax + 8 * 0]
 10935 00007487 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10936 0000748A 803804                  	cmp byte [rax], T_closure
 10937 0000748D 0F854FEB0000            	jne L_error_non_closure
 10938 00007493 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10939 00007496 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10940 0000749A 4C8B4D00                	mov r9, qword [rbp]
 10941 0000749E 4150                    	push r8
 10942 000074A0 4151                    	push r9
 10943 000074A2 41BA04000000            	mov r10, 0 + 4
 10944 000074A8 4C8B5D18                	mov r11, COUNT
 10945 000074AC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10946 000074B1 4C8D65F8                	lea r12, [rbp - 8]
 10947                                  .L_tc_recycle_frame_loop_0050:
 10948 000074B5 4983FA00                	cmp r10, 0
 10949 000074B9 7414                    	je .L_tc_recycle_frame_done_0050
 10950 000074BB 4D8B2C24                	mov r13, qword [r12]
 10951 000074BF 4D892B                  	mov qword [r11], r13
 10952 000074C2 49FFCA                  	dec r10
 10953 000074C5 4983EB08                	sub r11, 8
 10954 000074C9 4983EC08                	sub r12, 8
 10955 000074CD EBE6                    	jmp .L_tc_recycle_frame_loop_0050
 10956                                  .L_tc_recycle_frame_done_0050:
 10957 000074CF 498D6308                	lea rsp, [r11 + 8]
 10958 000074D3 5D                      	pop rbp
 10959 000074D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10960                                  .L_if_end_0023:
 10961                                  .L_if_end_0024:
 10962                                  .L_if_end_0025:
 10963 000074D7 EB59                    	jmp .L_if_end_0026
 10964                                  .L_if_else_0026:
 10965                                  	; Setting up for a tail-call
 10966 000074D9 6A00                    	push 0
 10967 000074DB 488B4510                	mov rax, ENV
 10968 000074DF 488B00                  	mov rax, qword [rax + 8 * 0]
 10969 000074E2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10970 000074E5 803804                  	cmp byte [rax], T_closure
 10971 000074E8 0F85F4EA0000            	jne L_error_non_closure
 10972 000074EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10973 000074F1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 10974 000074F5 4C8B4D00                	mov r9, qword [rbp]
 10975 000074F9 4150                    	push r8
 10976 000074FB 4151                    	push r9
 10977 000074FD 41BA04000000            	mov r10, 0 + 4
 10978 00007503 4C8B5D18                	mov r11, COUNT
 10979 00007507 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 10980 0000750C 4C8D65F8                	lea r12, [rbp - 8]
 10981                                  .L_tc_recycle_frame_loop_0051:
 10982 00007510 4983FA00                	cmp r10, 0
 10983 00007514 7414                    	je .L_tc_recycle_frame_done_0051
 10984 00007516 4D8B2C24                	mov r13, qword [r12]
 10985 0000751A 4D892B                  	mov qword [r11], r13
 10986 0000751D 49FFCA                  	dec r10
 10987 00007520 4983EB08                	sub r11, 8
 10988 00007524 4983EC08                	sub r12, 8
 10989 00007528 EBE6                    	jmp .L_tc_recycle_frame_loop_0051
 10990                                  .L_tc_recycle_frame_done_0051:
 10991 0000752A 498D6308                	lea rsp, [r11 + 8]
 10992 0000752E 5D                      	pop rbp
 10993 0000752F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10994                                  .L_if_end_0026:
 10995                                  .L_if_end_0027:
 10996                                  .L_if_end_0028:
 10997 00007532 C9                      	leave
 10998 00007533 C22000                  	ret AND_KILL_FRAME(2)
 10999                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11000 00007536 50                      	push rax
 11001 00007537 6A01                    	push 1
 11002 00007539 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11003 0000753E E848EB0000              	call malloc
 11004 00007543 50                      	push rax
 11005 00007544 BF08000000              	mov rdi, 8 * 1	; new rib
 11006 00007549 E83DEB0000              	call malloc
 11007 0000754E 50                      	push rax
 11008 0000754F BF10000000              	mov rdi, 8 * 2	; extended env
 11009 00007554 E832EB0000              	call malloc
 11010 00007559 488B7D10                	mov rdi, ENV
 11011 0000755D BE00000000              	mov rsi, 0
 11012 00007562 BA01000000              	mov rdx, 1
 11013                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11014 00007567 4883FE01                	cmp rsi, 1
 11015 0000756B 7410                    	je .L_lambda_simple_env_end_003e
 11016 0000756D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11017 00007571 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11018 00007575 48FFC6                  	inc rsi
 11019 00007578 48FFC2                  	inc rdx
 11020 0000757B EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11021                                  .L_lambda_simple_env_end_003e:
 11022 0000757D 5B                      	pop rbx
 11023 0000757E BE00000000              	mov rsi, 0
 11024                                  .L_lambda_simple_params_loop_003e:	; copy params
 11025 00007583 4883FE01                	cmp rsi, 1
 11026 00007587 740E                    	je .L_lambda_simple_params_end_003e
 11027 00007589 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11028 0000758E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11029 00007592 48FFC6                  	inc rsi
 11030 00007595 EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11031                                  .L_lambda_simple_params_end_003e:
 11032 00007597 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11033 0000759A 4889C3                  	mov rbx, rax
 11034 0000759D 58                      	pop rax
 11035 0000759E C60004                  	mov byte [rax], T_closure
 11036 000075A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11037 000075A5 48C74009[B2750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11038 000075AD E9AD040000              	jmp .L_lambda_simple_end_003e
 11039                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11040 000075B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11041 000075B8 740B                    	je .L_lambda_simple_arity_check_ok_003e
 11042 000075BA FF742410                	push qword [rsp + 8 * 2]
 11043 000075BE 6A01                    	push 1
 11044 000075C0 E97FEA0000              	jmp L_error_incorrect_arity_simple
 11045                                  .L_lambda_simple_arity_check_ok_003e:
 11046 000075C5 C8000000                	enter 0, 0
 11047                                  	; Setting up for a tail-call
 11048 000075C9 6A00                    	push 0
 11049 000075CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11050 000075D0 E8B6EA0000              	call malloc
 11051 000075D5 50                      	push rax
 11052 000075D6 BF08000000              	mov rdi, 8 * 1	; new rib
 11053 000075DB E8ABEA0000              	call malloc
 11054 000075E0 50                      	push rax
 11055 000075E1 BF18000000              	mov rdi, 8 * 3	; extended env
 11056 000075E6 E8A0EA0000              	call malloc
 11057 000075EB 488B7D10                	mov rdi, ENV
 11058 000075EF BE00000000              	mov rsi, 0
 11059 000075F4 BA01000000              	mov rdx, 1
 11060                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11061 000075F9 4883FE02                	cmp rsi, 2
 11062 000075FD 7410                    	je .L_lambda_simple_env_end_003f
 11063 000075FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11064 00007603 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11065 00007607 48FFC6                  	inc rsi
 11066 0000760A 48FFC2                  	inc rdx
 11067 0000760D EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11068                                  .L_lambda_simple_env_end_003f:
 11069 0000760F 5B                      	pop rbx
 11070 00007610 BE00000000              	mov rsi, 0
 11071                                  .L_lambda_simple_params_loop_003f:	; copy params
 11072 00007615 4883FE01                	cmp rsi, 1
 11073 00007619 740E                    	je .L_lambda_simple_params_end_003f
 11074 0000761B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11075 00007620 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11076 00007624 48FFC6                  	inc rsi
 11077 00007627 EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11078                                  .L_lambda_simple_params_end_003f:
 11079 00007629 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11080 0000762C 4889C3                  	mov rbx, rax
 11081 0000762F 58                      	pop rax
 11082 00007630 C60004                  	mov byte [rax], T_closure
 11083 00007633 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11084 00007637 48C74009[44760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11085 0000763F E9CA030000              	jmp .L_lambda_simple_end_003f
 11086                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11087 00007644 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11088 0000764A 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11089 0000764C FF742410                	push qword [rsp + 8 * 2]
 11090 00007650 6A00                    	push 0
 11091 00007652 E9EDE90000              	jmp L_error_incorrect_arity_simple
 11092                                  .L_lambda_simple_arity_check_ok_003f:
 11093 00007657 C8000000                	enter 0, 0
 11094 0000765B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11095 00007660 E826EA0000              	call malloc
 11096 00007665 50                      	push rax
 11097 00007666 BF00000000              	mov rdi, 8 * 0	; new rib
 11098 0000766B E81BEA0000              	call malloc
 11099 00007670 50                      	push rax
 11100 00007671 BF20000000              	mov rdi, 8 * 4	; extended env
 11101 00007676 E810EA0000              	call malloc
 11102 0000767B 488B7D10                	mov rdi, ENV
 11103 0000767F BE00000000              	mov rsi, 0
 11104 00007684 BA01000000              	mov rdx, 1
 11105                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 11106 00007689 4883FE03                	cmp rsi, 3
 11107 0000768D 7410                    	je .L_lambda_opt_env_end_000b
 11108 0000768F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11109 00007693 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11110 00007697 48FFC6                  	inc rsi
 11111 0000769A 48FFC2                  	inc rdx
 11112 0000769D EBEA                    	jmp .L_lambda_opt_env_loop_000b
 11113                                  .L_lambda_opt_env_end_000b:
 11114 0000769F 5B                      	pop rbx
 11115 000076A0 BE00000000              	mov rsi, 0
 11116                                  .L_lambda_opt_params_loop_000b:	; copy params
 11117 000076A5 4883FE00                	cmp rsi, 0
 11118 000076A9 740E                    	je .L_lambda_opt_params_end_000b
 11119 000076AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11120 000076B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11121 000076B4 48FFC6                  	inc rsi
 11122 000076B7 EBEC                    	jmp .L_lambda_opt_params_loop_000b
 11123                                  .L_lambda_opt_params_end_000b:
 11124 000076B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11125 000076BC 4889C3                  	mov rbx, rax
 11126 000076BF 58                      	pop rax
 11127 000076C0 C60004                  	mov byte [rax], T_closure
 11128 000076C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11129 000076C7 48C74009[D4760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 11130 000076CF E936030000              	jmp .L_lambda_opt_end_000b
 11131                                  .L_lambda_opt_code_000b:
 11132 000076D4 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 11133 000076D9 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 11134 000076DD 7407                    	je .L_lambda_opt_arity_check_exact_000b	; Jump if arity matches
 11135 000076DF 7F4C                    	jg .L_lambda_opt_arity_check_more_000b	; Jump if more arguments passed
 11136 000076E1 E972E90000              	jmp L_error_incorrect_arity_opt
 11137                                  .L_lambda_opt_arity_check_exact_000b:
 11138 000076E6 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 11139 000076E9 4983C603                	add r14, 3 ; add 3 first stack values
 11140 000076ED 41BF00000000            	mov r15, 0 ; r15 = index
 11141 000076F3 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 11142 000076F7 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 11143 000076FF EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11144                                  .L_lambda_opt_stack_shrink_loop_000b:
 11145 00007701 4983FE00                	cmp r14, 0
 11146 00007705 7E11                    	jle .L_make_lambda_opt_exact_finish_000b
 11147 00007707 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 11148 0000770C 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 11149 00007710 49FFCE                  	dec r14 ; next loop value
 11150 00007713 49FFC7                  	inc r15 ; update i
 11151 00007716 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11152                                  .L_make_lambda_opt_exact_finish_000b:
 11153 00007718 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 11154 00007720 49FFC2                  	inc r10
 11155 00007723 4C89542410              	mov qword [rsp + 8 * 2], r10
 11156 00007728 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000b
 11157                                  .L_lambda_opt_arity_check_more_000b:
 11158 0000772D 4D89D6                  	mov r14, r10 ; r14 = num args
 11159 00007730 4D89D7                  	mov r15, r10 ; r15 = num args
 11160 00007733 41B901000000            	mov r9, 1; r9 = number of params 
 11161 00007739 4D29CE                  	sub r14, r9 ; r14 = extra args
 11162 0000773C 4D01F1                  	add r9, r14 ; r9 = num args
 11163 0000773F 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 11163 00007741 [0100000000000000] 
 11164 00007749 EB00                    	jmp .L_make_lambda_opt_arg_list_000b
 11165                                  .L_make_lambda_opt_arg_list_000b:
 11166 0000774B 4983FE00                	cmp r14, 0
 11167 0000774F 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000b
 11168 00007751 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 11169 00007756 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 11170 00007759 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 11171 0000775F E827E90000              	call malloc                         ; Allocate memory, result in rax
 11172 00007764 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 11173 00007767 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 11174 0000776B 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 11175 0000776F 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 11176 00007772 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 11177 00007775 49FFC9                  	dec r9                              ; args index minus 1
 11178 00007778 49FFCE                  	dec r14                             ; next iteration
 11179 0000777B EBCE                    	jmp .L_make_lambda_opt_arg_list_000b
 11180                                  .L_make_lambda_opt_stack_fixed_000b:
 11181 0000777D 4D89FE                  	mov r14, r15 ; r14 = num args
 11182 00007780 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 11183 00007783 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 11184 00007787 41BA01000000            	mov r10, 1; r10 = num of params
 11185 0000778D 4D29D6                  	sub r14, r10 ; r14 = extra args
 11186 00007790 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 11187 00007793 49FFCE                  	dec r14 ; how much we need to change stack wise?
 11188 00007796 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 11189 0000779B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000b
 11190                                  .L_lambda_opt_stack_shrink_loop_more_000b:
 11191 0000779D 4983F800                	cmp r8, 0
 11192 000077A1 7E15                    	jle .L_make_lambda_opt_more_finish_000b
 11193 000077A3 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 11194 000077A7 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 11195 000077AB 4D8D26                  	lea r12, [r14]
 11196 000077AE 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 11197 000077B3 49FFC8                  	dec r8 ; next iteration
 11198 000077B6 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000b
 11199                                  .L_make_lambda_opt_more_finish_000b:
 11200 000077B8 4D89F8                  	mov r8, r15 ; num of args
 11201 000077BB 41BA01000000            	mov r10, 1
 11202 000077C1 4D29D0                  	sub r8, r10 ; num of new args
 11203 000077C4 49FFC0                  	inc r8
 11204 000077C7 4C89442420              	mov qword [rsp + 8 * 4], r8
 11205 000077CC 4883C410                	add rsp, 8 * 2  ; 
 11206 000077D0 EB00                    	jmp .L_lambda_opt_stack_adjusted_000b
 11207                                  .L_lambda_opt_stack_adjusted_000b:
 11208 000077D2 C8000000                	enter 0, 0
 11209                                  	; preparing a non-tail-call
 11210 000077D6 488B4528                	mov rax, PARAM(1)	; param s
 11211 000077DA 50                      	push rax
 11212 000077DB 6A01                    	push 1	; arg count
 11213 000077DD 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 11214 000077E5 803805                  	cmp byte [rax], T_undefined
 11215 000077E8 0F8470E70000            	je L_error_fvar_undefined
 11216 000077EE 803804                  	cmp byte [rax], T_closure
 11217 000077F1 0F85EBE70000            	jne L_error_non_closure
 11218 000077F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11219 000077FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 11220 000077FD 483D[02000000]          	cmp rax, sob_boolean_false
 11221 00007803 746F                    	je .L_if_else_0029
 11222                                  	; Setting up for a tail-call
 11223 00007805 48B8-                   	mov rax, L_constants + 2149
 11223 00007807 [6508000000000000] 
 11224 0000780F 50                      	push rax
 11225 00007810 488B4520                	mov rax, PARAM(0)	; param a
 11226 00007814 50                      	push rax
 11227 00007815 6A02                    	push 2
 11228 00007817 488B4510                	mov rax, ENV
 11229 0000781B 488B4008                	mov rax, qword [rax + 8 * 1]
 11230 0000781F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11231 00007822 803804                  	cmp byte [rax], T_closure
 11232 00007825 0F85B7E70000            	jne L_error_non_closure
 11233 0000782B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11234 0000782E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11235 00007832 4C8B4D00                	mov r9, qword [rbp]
 11236 00007836 4150                    	push r8
 11237 00007838 4151                    	push r9
 11238 0000783A 41BA06000000            	mov r10, 2 + 4
 11239 00007840 4C8B5D18                	mov r11, COUNT
 11240 00007844 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11241 00007849 4C8D65F8                	lea r12, [rbp - 8]
 11242                                  .L_tc_recycle_frame_loop_0052:
 11243 0000784D 4983FA00                	cmp r10, 0
 11244 00007851 7414                    	je .L_tc_recycle_frame_done_0052
 11245 00007853 4D8B2C24                	mov r13, qword [r12]
 11246 00007857 4D892B                  	mov qword [r11], r13
 11247 0000785A 49FFCA                  	dec r10
 11248 0000785D 4983EB08                	sub r11, 8
 11249 00007861 4983EC08                	sub r12, 8
 11250 00007865 EBE6                    	jmp .L_tc_recycle_frame_loop_0052
 11251                                  .L_tc_recycle_frame_done_0052:
 11252 00007867 498D6308                	lea rsp, [r11 + 8]
 11253 0000786B 5D                      	pop rbp
 11254 0000786C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11255 0000786F E992010000              	jmp .L_if_end_0029
 11256                                  .L_if_else_0029:
 11257                                  	; Setting up for a tail-call
 11258                                  	; preparing a non-tail-call
 11259 00007874 488B4528                	mov rax, PARAM(1)	; param s
 11260 00007878 50                      	push rax
 11261 00007879 48B8-                   	mov rax, L_constants + 2149
 11261 0000787B [6508000000000000] 
 11262 00007883 50                      	push rax
 11263 00007884 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 11264 0000788C 803805                  	cmp byte [rax], T_undefined
 11265 0000788F 0F84C9E60000            	je L_error_fvar_undefined
 11266 00007895 50                      	push rax
 11267 00007896 6A03                    	push 3	; arg count
 11268 00007898 488B0425[A7130000]      	mov rax, qword [free_var_86]	; free var fold-left
 11269 000078A0 803805                  	cmp byte [rax], T_undefined
 11270 000078A3 0F84B5E60000            	je L_error_fvar_undefined
 11271 000078A9 803804                  	cmp byte [rax], T_closure
 11272 000078AC 0F8530E70000            	jne L_error_non_closure
 11273 000078B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11274 000078B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11275 000078B8 50                      	push rax
 11276 000078B9 6A01                    	push 1
 11277 000078BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11278 000078C0 E8C6E70000              	call malloc
 11279 000078C5 50                      	push rax
 11280 000078C6 BF08000000              	mov rdi, 8 * 1	; new rib
 11281 000078CB E8BBE70000              	call malloc
 11282 000078D0 50                      	push rax
 11283 000078D1 BF28000000              	mov rdi, 8 * 5	; extended env
 11284 000078D6 E8B0E70000              	call malloc
 11285 000078DB 488B7D10                	mov rdi, ENV
 11286 000078DF BE00000000              	mov rsi, 0
 11287 000078E4 BA01000000              	mov rdx, 1
 11288                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 11289 000078E9 4883FE04                	cmp rsi, 4
 11290 000078ED 7410                    	je .L_lambda_simple_env_end_0040
 11291 000078EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11292 000078F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11293 000078F7 48FFC6                  	inc rsi
 11294 000078FA 48FFC2                  	inc rdx
 11295 000078FD EBEA                    	jmp .L_lambda_simple_env_loop_0040
 11296                                  .L_lambda_simple_env_end_0040:
 11297 000078FF 5B                      	pop rbx
 11298 00007900 BE00000000              	mov rsi, 0
 11299                                  .L_lambda_simple_params_loop_0040:	; copy params
 11300 00007905 4883FE01                	cmp rsi, 1
 11301 00007909 740E                    	je .L_lambda_simple_params_end_0040
 11302 0000790B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11303 00007910 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11304 00007914 48FFC6                  	inc rsi
 11305 00007917 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 11306                                  .L_lambda_simple_params_end_0040:
 11307 00007919 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11308 0000791C 4889C3                  	mov rbx, rax
 11309 0000791F 58                      	pop rax
 11310 00007920 C60004                  	mov byte [rax], T_closure
 11311 00007923 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11312 00007927 48C74009[34790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 11313 0000792F E985000000              	jmp .L_lambda_simple_end_0040
 11314                                  .L_lambda_simple_code_0040:	; lambda-simple body
 11315 00007934 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11316 0000793A 740B                    	je .L_lambda_simple_arity_check_ok_0040
 11317 0000793C FF742410                	push qword [rsp + 8 * 2]
 11318 00007940 6A01                    	push 1
 11319 00007942 E9FDE60000              	jmp L_error_incorrect_arity_simple
 11320                                  .L_lambda_simple_arity_check_ok_0040:
 11321 00007947 C8000000                	enter 0, 0
 11322                                  	; Setting up for a tail-call
 11323 0000794B 488B4510                	mov rax, ENV
 11324 0000794F 488B00                  	mov rax, qword [rax + 8 * 0]
 11325 00007952 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11326 00007955 50                      	push rax
 11327 00007956 488B4520                	mov rax, PARAM(0)	; param b
 11328 0000795A 50                      	push rax
 11329 0000795B 6A02                    	push 2
 11330 0000795D 488B4510                	mov rax, ENV
 11331 00007961 488B4010                	mov rax, qword [rax + 8 * 2]
 11332 00007965 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11333 00007968 803804                  	cmp byte [rax], T_closure
 11334 0000796B 0F8571E60000            	jne L_error_non_closure
 11335 00007971 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11336 00007974 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11337 00007978 4C8B4D00                	mov r9, qword [rbp]
 11338 0000797C 4150                    	push r8
 11339 0000797E 4151                    	push r9
 11340 00007980 41BA06000000            	mov r10, 2 + 4
 11341 00007986 4C8B5D18                	mov r11, COUNT
 11342 0000798A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11343 0000798F 4C8D65F8                	lea r12, [rbp - 8]
 11344                                  .L_tc_recycle_frame_loop_0053:
 11345 00007993 4983FA00                	cmp r10, 0
 11346 00007997 7414                    	je .L_tc_recycle_frame_done_0053
 11347 00007999 4D8B2C24                	mov r13, qword [r12]
 11348 0000799D 4D892B                  	mov qword [r11], r13
 11349 000079A0 49FFCA                  	dec r10
 11350 000079A3 4983EB08                	sub r11, 8
 11351 000079A7 4983EC08                	sub r12, 8
 11352 000079AB EBE6                    	jmp .L_tc_recycle_frame_loop_0053
 11353                                  .L_tc_recycle_frame_done_0053:
 11354 000079AD 498D6308                	lea rsp, [r11 + 8]
 11355 000079B1 5D                      	pop rbp
 11356 000079B2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11357 000079B5 C9                      	leave
 11358 000079B6 C21800                  	ret AND_KILL_FRAME(1)
 11359                                  .L_lambda_simple_end_0040:	; new closure is in rax
 11360 000079B9 803804                  	cmp byte [rax], T_closure
 11361 000079BC 0F8520E60000            	jne L_error_non_closure
 11362 000079C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11363 000079C5 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11364 000079C9 4C8B4D00                	mov r9, qword [rbp]
 11365 000079CD 4150                    	push r8
 11366 000079CF 4151                    	push r9
 11367 000079D1 41BA05000000            	mov r10, 1 + 4
 11368 000079D7 4C8B5D18                	mov r11, COUNT
 11369 000079DB 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11370 000079E0 4C8D65F8                	lea r12, [rbp - 8]
 11371                                  .L_tc_recycle_frame_loop_0054:
 11372 000079E4 4983FA00                	cmp r10, 0
 11373 000079E8 7414                    	je .L_tc_recycle_frame_done_0054
 11374 000079EA 4D8B2C24                	mov r13, qword [r12]
 11375 000079EE 4D892B                  	mov qword [r11], r13
 11376 000079F1 49FFCA                  	dec r10
 11377 000079F4 4983EB08                	sub r11, 8
 11378 000079F8 4983EC08                	sub r12, 8
 11379 000079FC EBE6                    	jmp .L_tc_recycle_frame_loop_0054
 11380                                  .L_tc_recycle_frame_done_0054:
 11381 000079FE 498D6308                	lea rsp, [r11 + 8]
 11382 00007A02 5D                      	pop rbp
 11383 00007A03 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11384                                  .L_if_end_0029:
 11385 00007A06 C9                      	leave
 11386 00007A07 C21800                  	ret AND_KILL_FRAME(1)
 11387                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11388 00007A0A C9                      	leave
 11389 00007A0B C21000                  	ret AND_KILL_FRAME(0)
 11390                                  .L_lambda_simple_end_003f:	; new closure is in rax
 11391 00007A0E 803804                  	cmp byte [rax], T_closure
 11392 00007A11 0F85CBE50000            	jne L_error_non_closure
 11393 00007A17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11394 00007A1A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11395 00007A1E 4C8B4D00                	mov r9, qword [rbp]
 11396 00007A22 4150                    	push r8
 11397 00007A24 4151                    	push r9
 11398 00007A26 41BA04000000            	mov r10, 0 + 4
 11399 00007A2C 4C8B5D18                	mov r11, COUNT
 11400 00007A30 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11401 00007A35 4C8D65F8                	lea r12, [rbp - 8]
 11402                                  .L_tc_recycle_frame_loop_0055:
 11403 00007A39 4983FA00                	cmp r10, 0
 11404 00007A3D 7414                    	je .L_tc_recycle_frame_done_0055
 11405 00007A3F 4D8B2C24                	mov r13, qword [r12]
 11406 00007A43 4D892B                  	mov qword [r11], r13
 11407 00007A46 49FFCA                  	dec r10
 11408 00007A49 4983EB08                	sub r11, 8
 11409 00007A4D 4983EC08                	sub r12, 8
 11410 00007A51 EBE6                    	jmp .L_tc_recycle_frame_loop_0055
 11411                                  .L_tc_recycle_frame_done_0055:
 11412 00007A53 498D6308                	lea rsp, [r11 + 8]
 11413 00007A57 5D                      	pop rbp
 11414 00007A58 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11415 00007A5B C9                      	leave
 11416 00007A5C C21800                  	ret AND_KILL_FRAME(1)
 11417                                  .L_lambda_simple_end_003e:	; new closure is in rax
 11418 00007A5F 803804                  	cmp byte [rax], T_closure
 11419 00007A62 0F857AE50000            	jne L_error_non_closure
 11420 00007A68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11421 00007A6B 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11422 00007A6F 4C8B4D00                	mov r9, qword [rbp]
 11423 00007A73 4150                    	push r8
 11424 00007A75 4151                    	push r9
 11425 00007A77 41BA05000000            	mov r10, 1 + 4
 11426 00007A7D 4C8B5D18                	mov r11, COUNT
 11427 00007A81 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11428 00007A86 4C8D65F8                	lea r12, [rbp - 8]
 11429                                  .L_tc_recycle_frame_loop_0056:
 11430 00007A8A 4983FA00                	cmp r10, 0
 11431 00007A8E 7414                    	je .L_tc_recycle_frame_done_0056
 11432 00007A90 4D8B2C24                	mov r13, qword [r12]
 11433 00007A94 4D892B                  	mov qword [r11], r13
 11434 00007A97 49FFCA                  	dec r10
 11435 00007A9A 4983EB08                	sub r11, 8
 11436 00007A9E 4983EC08                	sub r12, 8
 11437 00007AA2 EBE6                    	jmp .L_tc_recycle_frame_loop_0056
 11438                                  .L_tc_recycle_frame_done_0056:
 11439 00007AA4 498D6308                	lea rsp, [r11 + 8]
 11440 00007AA8 5D                      	pop rbp
 11441 00007AA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11442 00007AAC C9                      	leave
 11443 00007AAD C21800                  	ret AND_KILL_FRAME(1)
 11444                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11445 00007AB0 803804                  	cmp byte [rax], T_closure
 11446 00007AB3 0F8529E50000            	jne L_error_non_closure
 11447 00007AB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11448 00007ABC FF5009                  	call SOB_CLOSURE_CODE(rax)
 11449 00007ABF 48890425[130E0000]      	mov qword [free_var_2], rax
 11450 00007AC7 48B8-                   	mov rax, sob_void
 11450 00007AC9 [0000000000000000] 
 11451                                  
 11452 00007AD1 4889C7                  	mov rdi, rax
 11453 00007AD4 E807E80000              	call print_sexpr_if_not_void
 11454                                  	; preparing a non-tail-call
 11455 00007AD9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11456 00007ADE E8A8E50000              	call malloc
 11457 00007AE3 50                      	push rax
 11458 00007AE4 BF00000000              	mov rdi, 8 * 0	; new rib
 11459 00007AE9 E89DE50000              	call malloc
 11460 00007AEE 50                      	push rax
 11461 00007AEF BF08000000              	mov rdi, 8 * 1	; extended env
 11462 00007AF4 E892E50000              	call malloc
 11463 00007AF9 488B7D10                	mov rdi, ENV
 11464 00007AFD BE00000000              	mov rsi, 0
 11465 00007B02 BA01000000              	mov rdx, 1
 11466                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 11467 00007B07 4883FE00                	cmp rsi, 0
 11468 00007B0B 7410                    	je .L_lambda_simple_env_end_0041
 11469 00007B0D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11470 00007B11 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11471 00007B15 48FFC6                  	inc rsi
 11472 00007B18 48FFC2                  	inc rdx
 11473 00007B1B EBEA                    	jmp .L_lambda_simple_env_loop_0041
 11474                                  .L_lambda_simple_env_end_0041:
 11475 00007B1D 5B                      	pop rbx
 11476 00007B1E BE00000000              	mov rsi, 0
 11477                                  .L_lambda_simple_params_loop_0041:	; copy params
 11478 00007B23 4883FE00                	cmp rsi, 0
 11479 00007B27 740E                    	je .L_lambda_simple_params_end_0041
 11480 00007B29 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11481 00007B2E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11482 00007B32 48FFC6                  	inc rsi
 11483 00007B35 EBEC                    	jmp .L_lambda_simple_params_loop_0041
 11484                                  .L_lambda_simple_params_end_0041:
 11485 00007B37 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11486 00007B3A 4889C3                  	mov rbx, rax
 11487 00007B3D 58                      	pop rax
 11488 00007B3E C60004                  	mov byte [rax], T_closure
 11489 00007B41 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11490 00007B45 48C74009[527B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 11491 00007B4D E991000000              	jmp .L_lambda_simple_end_0041
 11492                                  .L_lambda_simple_code_0041:	; lambda-simple body
 11493 00007B52 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11494 00007B58 740B                    	je .L_lambda_simple_arity_check_ok_0041
 11495 00007B5A FF742410                	push qword [rsp + 8 * 2]
 11496 00007B5E 6A00                    	push 0
 11497 00007B60 E9DFE40000              	jmp L_error_incorrect_arity_simple
 11498                                  .L_lambda_simple_arity_check_ok_0041:
 11499 00007B65 C8000000                	enter 0, 0
 11500                                  	; Setting up for a tail-call
 11501 00007B69 48B8-                   	mov rax, L_constants + 2293
 11501 00007B6B [F508000000000000] 
 11502 00007B73 50                      	push rax
 11503 00007B74 48B8-                   	mov rax, L_constants + 2201
 11503 00007B76 [9908000000000000] 
 11504 00007B7E 50                      	push rax
 11505 00007B7F 6A02                    	push 2
 11506 00007B81 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 11507 00007B89 803805                  	cmp byte [rax], T_undefined
 11508 00007B8C 0F84CCE30000            	je L_error_fvar_undefined
 11509 00007B92 803804                  	cmp byte [rax], T_closure
 11510 00007B95 0F8547E40000            	jne L_error_non_closure
 11511 00007B9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11512 00007B9E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11513 00007BA2 4C8B4D00                	mov r9, qword [rbp]
 11514 00007BA6 4150                    	push r8
 11515 00007BA8 4151                    	push r9
 11516 00007BAA 41BA06000000            	mov r10, 2 + 4
 11517 00007BB0 4C8B5D18                	mov r11, COUNT
 11518 00007BB4 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11519 00007BB9 4C8D65F8                	lea r12, [rbp - 8]
 11520                                  .L_tc_recycle_frame_loop_0057:
 11521 00007BBD 4983FA00                	cmp r10, 0
 11522 00007BC1 7414                    	je .L_tc_recycle_frame_done_0057
 11523 00007BC3 4D8B2C24                	mov r13, qword [r12]
 11524 00007BC7 4D892B                  	mov qword [r11], r13
 11525 00007BCA 49FFCA                  	dec r10
 11526 00007BCD 4983EB08                	sub r11, 8
 11527 00007BD1 4983EC08                	sub r12, 8
 11528 00007BD5 EBE6                    	jmp .L_tc_recycle_frame_loop_0057
 11529                                  .L_tc_recycle_frame_done_0057:
 11530 00007BD7 498D6308                	lea rsp, [r11 + 8]
 11531 00007BDB 5D                      	pop rbp
 11532 00007BDC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11533 00007BDF C9                      	leave
 11534 00007BE0 C21000                  	ret AND_KILL_FRAME(0)
 11535                                  .L_lambda_simple_end_0041:	; new closure is in rax
 11536 00007BE3 50                      	push rax
 11537 00007BE4 6A01                    	push 1	; arg count
 11538 00007BE6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11539 00007BEB E89BE40000              	call malloc
 11540 00007BF0 50                      	push rax
 11541 00007BF1 BF00000000              	mov rdi, 8 * 0	; new rib
 11542 00007BF6 E890E40000              	call malloc
 11543 00007BFB 50                      	push rax
 11544 00007BFC BF08000000              	mov rdi, 8 * 1	; extended env
 11545 00007C01 E885E40000              	call malloc
 11546 00007C06 488B7D10                	mov rdi, ENV
 11547 00007C0A BE00000000              	mov rsi, 0
 11548 00007C0F BA01000000              	mov rdx, 1
 11549                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 11550 00007C14 4883FE00                	cmp rsi, 0
 11551 00007C18 7410                    	je .L_lambda_simple_env_end_0042
 11552 00007C1A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11553 00007C1E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11554 00007C22 48FFC6                  	inc rsi
 11555 00007C25 48FFC2                  	inc rdx
 11556 00007C28 EBEA                    	jmp .L_lambda_simple_env_loop_0042
 11557                                  .L_lambda_simple_env_end_0042:
 11558 00007C2A 5B                      	pop rbx
 11559 00007C2B BE00000000              	mov rsi, 0
 11560                                  .L_lambda_simple_params_loop_0042:	; copy params
 11561 00007C30 4883FE00                	cmp rsi, 0
 11562 00007C34 740E                    	je .L_lambda_simple_params_end_0042
 11563 00007C36 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11564 00007C3B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11565 00007C3F 48FFC6                  	inc rsi
 11566 00007C42 EBEC                    	jmp .L_lambda_simple_params_loop_0042
 11567                                  .L_lambda_simple_params_end_0042:
 11568 00007C44 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11569 00007C47 4889C3                  	mov rbx, rax
 11570 00007C4A 58                      	pop rax
 11571 00007C4B C60004                  	mov byte [rax], T_closure
 11572 00007C4E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11573 00007C52 48C74009[5F7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 11574 00007C5A E9E90C0000              	jmp .L_lambda_simple_end_0042
 11575                                  .L_lambda_simple_code_0042:	; lambda-simple body
 11576 00007C5F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11577 00007C65 740B                    	je .L_lambda_simple_arity_check_ok_0042
 11578 00007C67 FF742410                	push qword [rsp + 8 * 2]
 11579 00007C6B 6A01                    	push 1
 11580 00007C6D E9D2E30000              	jmp L_error_incorrect_arity_simple
 11581                                  .L_lambda_simple_arity_check_ok_0042:
 11582 00007C72 C8000000                	enter 0, 0
 11583                                  	; Setting up for a tail-call
 11584 00007C76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11585 00007C7B E80BE40000              	call malloc
 11586 00007C80 50                      	push rax
 11587 00007C81 BF08000000              	mov rdi, 8 * 1	; new rib
 11588 00007C86 E800E40000              	call malloc
 11589 00007C8B 50                      	push rax
 11590 00007C8C BF10000000              	mov rdi, 8 * 2	; extended env
 11591 00007C91 E8F5E30000              	call malloc
 11592 00007C96 488B7D10                	mov rdi, ENV
 11593 00007C9A BE00000000              	mov rsi, 0
 11594 00007C9F BA01000000              	mov rdx, 1
 11595                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 11596 00007CA4 4883FE01                	cmp rsi, 1
 11597 00007CA8 7410                    	je .L_lambda_simple_env_end_0043
 11598 00007CAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11599 00007CAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11600 00007CB2 48FFC6                  	inc rsi
 11601 00007CB5 48FFC2                  	inc rdx
 11602 00007CB8 EBEA                    	jmp .L_lambda_simple_env_loop_0043
 11603                                  .L_lambda_simple_env_end_0043:
 11604 00007CBA 5B                      	pop rbx
 11605 00007CBB BE00000000              	mov rsi, 0
 11606                                  .L_lambda_simple_params_loop_0043:	; copy params
 11607 00007CC0 4883FE01                	cmp rsi, 1
 11608 00007CC4 740E                    	je .L_lambda_simple_params_end_0043
 11609 00007CC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11610 00007CCB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11611 00007CCF 48FFC6                  	inc rsi
 11612 00007CD2 EBEC                    	jmp .L_lambda_simple_params_loop_0043
 11613                                  .L_lambda_simple_params_end_0043:
 11614 00007CD4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11615 00007CD7 4889C3                  	mov rbx, rax
 11616 00007CDA 58                      	pop rax
 11617 00007CDB C60004                  	mov byte [rax], T_closure
 11618 00007CDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11619 00007CE2 48C74009[EF7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 11620 00007CEA E993080000              	jmp .L_lambda_simple_end_0043
 11621                                  .L_lambda_simple_code_0043:	; lambda-simple body
 11622 00007CEF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11623 00007CF5 740B                    	je .L_lambda_simple_arity_check_ok_0043
 11624 00007CF7 FF742410                	push qword [rsp + 8 * 2]
 11625 00007CFB 6A02                    	push 2
 11626 00007CFD E942E30000              	jmp L_error_incorrect_arity_simple
 11627                                  .L_lambda_simple_arity_check_ok_0043:
 11628 00007D02 C8000000                	enter 0, 0
 11629                                  	; preparing a non-tail-call
 11630 00007D06 488B4520                	mov rax, PARAM(0)	; param a
 11631 00007D0A 50                      	push rax
 11632 00007D0B 6A01                    	push 1	; arg count
 11633 00007D0D 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 11634 00007D15 803805                  	cmp byte [rax], T_undefined
 11635 00007D18 0F8440E20000            	je L_error_fvar_undefined
 11636 00007D1E 803804                  	cmp byte [rax], T_closure
 11637 00007D21 0F85BBE20000            	jne L_error_non_closure
 11638 00007D27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11639 00007D2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11640 00007D2D 483D[02000000]          	cmp rax, sob_boolean_false
 11641 00007D33 0F8483020000            	je .L_if_else_0035
 11642                                  	; preparing a non-tail-call
 11643 00007D39 488B4528                	mov rax, PARAM(1)	; param b
 11644 00007D3D 50                      	push rax
 11645 00007D3E 6A01                    	push 1	; arg count
 11646 00007D40 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 11647 00007D48 803805                  	cmp byte [rax], T_undefined
 11648 00007D4B 0F840DE20000            	je L_error_fvar_undefined
 11649 00007D51 803804                  	cmp byte [rax], T_closure
 11650 00007D54 0F8588E20000            	jne L_error_non_closure
 11651 00007D5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11652 00007D5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11653 00007D60 483D[02000000]          	cmp rax, sob_boolean_false
 11654 00007D66 746F                    	je .L_if_else_002c
 11655                                  	; Setting up for a tail-call
 11656 00007D68 488B4520                	mov rax, PARAM(0)	; param a
 11657 00007D6C 50                      	push rax
 11658 00007D6D 488B4528                	mov rax, PARAM(1)	; param b
 11659 00007D71 50                      	push rax
 11660 00007D72 6A02                    	push 2
 11661 00007D74 488B0425[890F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11662 00007D7C 803805                  	cmp byte [rax], T_undefined
 11663 00007D7F 0F84D9E10000            	je L_error_fvar_undefined
 11664 00007D85 803804                  	cmp byte [rax], T_closure
 11665 00007D88 0F8554E20000            	jne L_error_non_closure
 11666 00007D8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11667 00007D91 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11668 00007D95 4C8B4D00                	mov r9, qword [rbp]
 11669 00007D99 4150                    	push r8
 11670 00007D9B 4151                    	push r9
 11671 00007D9D 41BA06000000            	mov r10, 2 + 4
 11672 00007DA3 4C8B5D18                	mov r11, COUNT
 11673 00007DA7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11674 00007DAC 4C8D65F8                	lea r12, [rbp - 8]
 11675                                  .L_tc_recycle_frame_loop_0058:
 11676 00007DB0 4983FA00                	cmp r10, 0
 11677 00007DB4 7414                    	je .L_tc_recycle_frame_done_0058
 11678 00007DB6 4D8B2C24                	mov r13, qword [r12]
 11679 00007DBA 4D892B                  	mov qword [r11], r13
 11680 00007DBD 49FFCA                  	dec r10
 11681 00007DC0 4983EB08                	sub r11, 8
 11682 00007DC4 4983EC08                	sub r12, 8
 11683 00007DC8 EBE6                    	jmp .L_tc_recycle_frame_loop_0058
 11684                                  .L_tc_recycle_frame_done_0058:
 11685 00007DCA 498D6308                	lea rsp, [r11 + 8]
 11686 00007DCE 5D                      	pop rbp
 11687 00007DCF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11688 00007DD2 E9E0010000              	jmp .L_if_end_002c
 11689                                  .L_if_else_002c:
 11690                                  	; preparing a non-tail-call
 11691 00007DD7 488B4528                	mov rax, PARAM(1)	; param b
 11692 00007DDB 50                      	push rax
 11693 00007DDC 6A01                    	push 1	; arg count
 11694 00007DDE 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 11695 00007DE6 803805                  	cmp byte [rax], T_undefined
 11696 00007DE9 0F846FE10000            	je L_error_fvar_undefined
 11697 00007DEF 803804                  	cmp byte [rax], T_closure
 11698 00007DF2 0F85EAE10000            	jne L_error_non_closure
 11699 00007DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11700 00007DFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 11701 00007DFE 483D[02000000]          	cmp rax, sob_boolean_false
 11702 00007E04 0F8492000000            	je .L_if_else_002b
 11703                                  	; Setting up for a tail-call
 11704                                  	; preparing a non-tail-call
 11705 00007E0A 488B4520                	mov rax, PARAM(0)	; param a
 11706 00007E0E 50                      	push rax
 11707 00007E0F 6A01                    	push 1	; arg count
 11708 00007E11 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11709 00007E19 803805                  	cmp byte [rax], T_undefined
 11710 00007E1C 0F843CE10000            	je L_error_fvar_undefined
 11711 00007E22 803804                  	cmp byte [rax], T_closure
 11712 00007E25 0F85B7E10000            	jne L_error_non_closure
 11713 00007E2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11714 00007E2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11715 00007E31 50                      	push rax
 11716 00007E32 488B4528                	mov rax, PARAM(1)	; param b
 11717 00007E36 50                      	push rax
 11718 00007E37 6A02                    	push 2
 11719 00007E39 488B0425[670F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11720 00007E41 803805                  	cmp byte [rax], T_undefined
 11721 00007E44 0F8414E10000            	je L_error_fvar_undefined
 11722 00007E4A 803804                  	cmp byte [rax], T_closure
 11723 00007E4D 0F858FE10000            	jne L_error_non_closure
 11724 00007E53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11725 00007E56 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11726 00007E5A 4C8B4D00                	mov r9, qword [rbp]
 11727 00007E5E 4150                    	push r8
 11728 00007E60 4151                    	push r9
 11729 00007E62 41BA06000000            	mov r10, 2 + 4
 11730 00007E68 4C8B5D18                	mov r11, COUNT
 11731 00007E6C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11732 00007E71 4C8D65F8                	lea r12, [rbp - 8]
 11733                                  .L_tc_recycle_frame_loop_0059:
 11734 00007E75 4983FA00                	cmp r10, 0
 11735 00007E79 7414                    	je .L_tc_recycle_frame_done_0059
 11736 00007E7B 4D8B2C24                	mov r13, qword [r12]
 11737 00007E7F 4D892B                  	mov qword [r11], r13
 11738 00007E82 49FFCA                  	dec r10
 11739 00007E85 4983EB08                	sub r11, 8
 11740 00007E89 4983EC08                	sub r12, 8
 11741 00007E8D EBE6                    	jmp .L_tc_recycle_frame_loop_0059
 11742                                  .L_tc_recycle_frame_done_0059:
 11743 00007E8F 498D6308                	lea rsp, [r11 + 8]
 11744 00007E93 5D                      	pop rbp
 11745 00007E94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11746 00007E97 E91B010000              	jmp .L_if_end_002b
 11747                                  .L_if_else_002b:
 11748                                  	; preparing a non-tail-call
 11749 00007E9C 488B4528                	mov rax, PARAM(1)	; param b
 11750 00007EA0 50                      	push rax
 11751 00007EA1 6A01                    	push 1	; arg count
 11752 00007EA3 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 11753 00007EAB 803805                  	cmp byte [rax], T_undefined
 11754 00007EAE 0F84AAE00000            	je L_error_fvar_undefined
 11755 00007EB4 803804                  	cmp byte [rax], T_closure
 11756 00007EB7 0F8525E10000            	jne L_error_non_closure
 11757 00007EBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11758 00007EC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11759 00007EC3 483D[02000000]          	cmp rax, sob_boolean_false
 11760 00007EC9 0F848F000000            	je .L_if_else_002a
 11761                                  	; Setting up for a tail-call
 11762                                  	; preparing a non-tail-call
 11763 00007ECF 488B4520                	mov rax, PARAM(0)	; param a
 11764 00007ED3 50                      	push rax
 11765 00007ED4 6A01                    	push 1	; arg count
 11766 00007ED6 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 11767 00007EDE 803805                  	cmp byte [rax], T_undefined
 11768 00007EE1 0F8477E00000            	je L_error_fvar_undefined
 11769 00007EE7 803804                  	cmp byte [rax], T_closure
 11770 00007EEA 0F85F2E00000            	jne L_error_non_closure
 11771 00007EF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11772 00007EF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11773 00007EF6 50                      	push rax
 11774 00007EF7 488B4528                	mov rax, PARAM(1)	; param b
 11775 00007EFB 50                      	push rax
 11776 00007EFC 6A02                    	push 2
 11777 00007EFE 488B0425[780F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11778 00007F06 803805                  	cmp byte [rax], T_undefined
 11779 00007F09 0F844FE00000            	je L_error_fvar_undefined
 11780 00007F0F 803804                  	cmp byte [rax], T_closure
 11781 00007F12 0F85CAE00000            	jne L_error_non_closure
 11782 00007F18 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11783 00007F1B 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11784 00007F1F 4C8B4D00                	mov r9, qword [rbp]
 11785 00007F23 4150                    	push r8
 11786 00007F25 4151                    	push r9
 11787 00007F27 41BA06000000            	mov r10, 2 + 4
 11788 00007F2D 4C8B5D18                	mov r11, COUNT
 11789 00007F31 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11790 00007F36 4C8D65F8                	lea r12, [rbp - 8]
 11791                                  .L_tc_recycle_frame_loop_005a:
 11792 00007F3A 4983FA00                	cmp r10, 0
 11793 00007F3E 7414                    	je .L_tc_recycle_frame_done_005a
 11794 00007F40 4D8B2C24                	mov r13, qword [r12]
 11795 00007F44 4D892B                  	mov qword [r11], r13
 11796 00007F47 49FFCA                  	dec r10
 11797 00007F4A 4983EB08                	sub r11, 8
 11798 00007F4E 4983EC08                	sub r12, 8
 11799 00007F52 EBE6                    	jmp .L_tc_recycle_frame_loop_005a
 11800                                  .L_tc_recycle_frame_done_005a:
 11801 00007F54 498D6308                	lea rsp, [r11 + 8]
 11802 00007F58 5D                      	pop rbp
 11803 00007F59 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11804 00007F5C EB59                    	jmp .L_if_end_002a
 11805                                  .L_if_else_002a:
 11806                                  	; Setting up for a tail-call
 11807 00007F5E 6A00                    	push 0
 11808 00007F60 488B4510                	mov rax, ENV
 11809 00007F64 488B00                  	mov rax, qword [rax + 8 * 0]
 11810 00007F67 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11811 00007F6A 803804                  	cmp byte [rax], T_closure
 11812 00007F6D 0F856FE00000            	jne L_error_non_closure
 11813 00007F73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11814 00007F76 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11815 00007F7A 4C8B4D00                	mov r9, qword [rbp]
 11816 00007F7E 4150                    	push r8
 11817 00007F80 4151                    	push r9
 11818 00007F82 41BA04000000            	mov r10, 0 + 4
 11819 00007F88 4C8B5D18                	mov r11, COUNT
 11820 00007F8C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11821 00007F91 4C8D65F8                	lea r12, [rbp - 8]
 11822                                  .L_tc_recycle_frame_loop_005b:
 11823 00007F95 4983FA00                	cmp r10, 0
 11824 00007F99 7414                    	je .L_tc_recycle_frame_done_005b
 11825 00007F9B 4D8B2C24                	mov r13, qword [r12]
 11826 00007F9F 4D892B                  	mov qword [r11], r13
 11827 00007FA2 49FFCA                  	dec r10
 11828 00007FA5 4983EB08                	sub r11, 8
 11829 00007FA9 4983EC08                	sub r12, 8
 11830 00007FAD EBE6                    	jmp .L_tc_recycle_frame_loop_005b
 11831                                  .L_tc_recycle_frame_done_005b:
 11832 00007FAF 498D6308                	lea rsp, [r11 + 8]
 11833 00007FB3 5D                      	pop rbp
 11834 00007FB4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11835                                  .L_if_end_002a:
 11836                                  .L_if_end_002b:
 11837                                  .L_if_end_002c:
 11838 00007FB7 E9C2050000              	jmp .L_if_end_0035
 11839                                  .L_if_else_0035:
 11840                                  	; preparing a non-tail-call
 11841 00007FBC 488B4520                	mov rax, PARAM(0)	; param a
 11842 00007FC0 50                      	push rax
 11843 00007FC1 6A01                    	push 1	; arg count
 11844 00007FC3 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 11845 00007FCB 803805                  	cmp byte [rax], T_undefined
 11846 00007FCE 0F848ADF0000            	je L_error_fvar_undefined
 11847 00007FD4 803804                  	cmp byte [rax], T_closure
 11848 00007FD7 0F8505E00000            	jne L_error_non_closure
 11849 00007FDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11850 00007FE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11851 00007FE3 483D[02000000]          	cmp rax, sob_boolean_false
 11852 00007FE9 0F8483020000            	je .L_if_else_0034
 11853                                  	; preparing a non-tail-call
 11854 00007FEF 488B4528                	mov rax, PARAM(1)	; param b
 11855 00007FF3 50                      	push rax
 11856 00007FF4 6A01                    	push 1	; arg count
 11857 00007FF6 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 11858 00007FFE 803805                  	cmp byte [rax], T_undefined
 11859 00008001 0F8457DF0000            	je L_error_fvar_undefined
 11860 00008007 803804                  	cmp byte [rax], T_closure
 11861 0000800A 0F85D2DF0000            	jne L_error_non_closure
 11862 00008010 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11863 00008013 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11864 00008016 483D[02000000]          	cmp rax, sob_boolean_false
 11865 0000801C 0F8492000000            	je .L_if_else_002f
 11866                                  	; Setting up for a tail-call
 11867 00008022 488B4520                	mov rax, PARAM(0)	; param a
 11868 00008026 50                      	push rax
 11869                                  	; preparing a non-tail-call
 11870 00008027 488B4528                	mov rax, PARAM(1)	; param b
 11871 0000802B 50                      	push rax
 11872 0000802C 6A01                    	push 1	; arg count
 11873 0000802E 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11874 00008036 803805                  	cmp byte [rax], T_undefined
 11875 00008039 0F841FDF0000            	je L_error_fvar_undefined
 11876 0000803F 803804                  	cmp byte [rax], T_closure
 11877 00008042 0F859ADF0000            	jne L_error_non_closure
 11878 00008048 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11879 0000804B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11880 0000804E 50                      	push rax
 11881 0000804F 6A02                    	push 2
 11882 00008051 488B0425[670F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11883 00008059 803805                  	cmp byte [rax], T_undefined
 11884 0000805C 0F84FCDE0000            	je L_error_fvar_undefined
 11885 00008062 803804                  	cmp byte [rax], T_closure
 11886 00008065 0F8577DF0000            	jne L_error_non_closure
 11887 0000806B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11888 0000806E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11889 00008072 4C8B4D00                	mov r9, qword [rbp]
 11890 00008076 4150                    	push r8
 11891 00008078 4151                    	push r9
 11892 0000807A 41BA06000000            	mov r10, 2 + 4
 11893 00008080 4C8B5D18                	mov r11, COUNT
 11894 00008084 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11895 00008089 4C8D65F8                	lea r12, [rbp - 8]
 11896                                  .L_tc_recycle_frame_loop_005c:
 11897 0000808D 4983FA00                	cmp r10, 0
 11898 00008091 7414                    	je .L_tc_recycle_frame_done_005c
 11899 00008093 4D8B2C24                	mov r13, qword [r12]
 11900 00008097 4D892B                  	mov qword [r11], r13
 11901 0000809A 49FFCA                  	dec r10
 11902 0000809D 4983EB08                	sub r11, 8
 11903 000080A1 4983EC08                	sub r12, 8
 11904 000080A5 EBE6                    	jmp .L_tc_recycle_frame_loop_005c
 11905                                  .L_tc_recycle_frame_done_005c:
 11906 000080A7 498D6308                	lea rsp, [r11 + 8]
 11907 000080AB 5D                      	pop rbp
 11908 000080AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11909 000080AF E9B9010000              	jmp .L_if_end_002f
 11910                                  .L_if_else_002f:
 11911                                  	; preparing a non-tail-call
 11912 000080B4 488B4528                	mov rax, PARAM(1)	; param b
 11913 000080B8 50                      	push rax
 11914 000080B9 6A01                    	push 1	; arg count
 11915 000080BB 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 11916 000080C3 803805                  	cmp byte [rax], T_undefined
 11917 000080C6 0F8492DE0000            	je L_error_fvar_undefined
 11918 000080CC 803804                  	cmp byte [rax], T_closure
 11919 000080CF 0F850DDF0000            	jne L_error_non_closure
 11920 000080D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11921 000080D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11922 000080DB 483D[02000000]          	cmp rax, sob_boolean_false
 11923 000080E1 746F                    	je .L_if_else_002e
 11924                                  	; Setting up for a tail-call
 11925 000080E3 488B4520                	mov rax, PARAM(0)	; param a
 11926 000080E7 50                      	push rax
 11927 000080E8 488B4528                	mov rax, PARAM(1)	; param b
 11928 000080EC 50                      	push rax
 11929 000080ED 6A02                    	push 2
 11930 000080EF 488B0425[670F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11931 000080F7 803805                  	cmp byte [rax], T_undefined
 11932 000080FA 0F845EDE0000            	je L_error_fvar_undefined
 11933 00008100 803804                  	cmp byte [rax], T_closure
 11934 00008103 0F85D9DE0000            	jne L_error_non_closure
 11935 00008109 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11936 0000810C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11937 00008110 4C8B4D00                	mov r9, qword [rbp]
 11938 00008114 4150                    	push r8
 11939 00008116 4151                    	push r9
 11940 00008118 41BA06000000            	mov r10, 2 + 4
 11941 0000811E 4C8B5D18                	mov r11, COUNT
 11942 00008122 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 11943 00008127 4C8D65F8                	lea r12, [rbp - 8]
 11944                                  .L_tc_recycle_frame_loop_005d:
 11945 0000812B 4983FA00                	cmp r10, 0
 11946 0000812F 7414                    	je .L_tc_recycle_frame_done_005d
 11947 00008131 4D8B2C24                	mov r13, qword [r12]
 11948 00008135 4D892B                  	mov qword [r11], r13
 11949 00008138 49FFCA                  	dec r10
 11950 0000813B 4983EB08                	sub r11, 8
 11951 0000813F 4983EC08                	sub r12, 8
 11952 00008143 EBE6                    	jmp .L_tc_recycle_frame_loop_005d
 11953                                  .L_tc_recycle_frame_done_005d:
 11954 00008145 498D6308                	lea rsp, [r11 + 8]
 11955 00008149 5D                      	pop rbp
 11956 0000814A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11957 0000814D E91B010000              	jmp .L_if_end_002e
 11958                                  .L_if_else_002e:
 11959                                  	; preparing a non-tail-call
 11960 00008152 488B4528                	mov rax, PARAM(1)	; param b
 11961 00008156 50                      	push rax
 11962 00008157 6A01                    	push 1	; arg count
 11963 00008159 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 11964 00008161 803805                  	cmp byte [rax], T_undefined
 11965 00008164 0F84F4DD0000            	je L_error_fvar_undefined
 11966 0000816A 803804                  	cmp byte [rax], T_closure
 11967 0000816D 0F856FDE0000            	jne L_error_non_closure
 11968 00008173 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11969 00008176 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11970 00008179 483D[02000000]          	cmp rax, sob_boolean_false
 11971 0000817F 0F848F000000            	je .L_if_else_002d
 11972                                  	; Setting up for a tail-call
 11973                                  	; preparing a non-tail-call
 11974 00008185 488B4520                	mov rax, PARAM(0)	; param a
 11975 00008189 50                      	push rax
 11976 0000818A 6A01                    	push 1	; arg count
 11977 0000818C 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 11978 00008194 803805                  	cmp byte [rax], T_undefined
 11979 00008197 0F84C1DD0000            	je L_error_fvar_undefined
 11980 0000819D 803804                  	cmp byte [rax], T_closure
 11981 000081A0 0F853CDE0000            	jne L_error_non_closure
 11982 000081A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11983 000081A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11984 000081AC 50                      	push rax
 11985 000081AD 488B4528                	mov rax, PARAM(1)	; param b
 11986 000081B1 50                      	push rax
 11987 000081B2 6A02                    	push 2
 11988 000081B4 488B0425[780F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11989 000081BC 803805                  	cmp byte [rax], T_undefined
 11990 000081BF 0F8499DD0000            	je L_error_fvar_undefined
 11991 000081C5 803804                  	cmp byte [rax], T_closure
 11992 000081C8 0F8514DE0000            	jne L_error_non_closure
 11993 000081CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11994 000081D1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 11995 000081D5 4C8B4D00                	mov r9, qword [rbp]
 11996 000081D9 4150                    	push r8
 11997 000081DB 4151                    	push r9
 11998 000081DD 41BA06000000            	mov r10, 2 + 4
 11999 000081E3 4C8B5D18                	mov r11, COUNT
 12000 000081E7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12001 000081EC 4C8D65F8                	lea r12, [rbp - 8]
 12002                                  .L_tc_recycle_frame_loop_005e:
 12003 000081F0 4983FA00                	cmp r10, 0
 12004 000081F4 7414                    	je .L_tc_recycle_frame_done_005e
 12005 000081F6 4D8B2C24                	mov r13, qword [r12]
 12006 000081FA 4D892B                  	mov qword [r11], r13
 12007 000081FD 49FFCA                  	dec r10
 12008 00008200 4983EB08                	sub r11, 8
 12009 00008204 4983EC08                	sub r12, 8
 12010 00008208 EBE6                    	jmp .L_tc_recycle_frame_loop_005e
 12011                                  .L_tc_recycle_frame_done_005e:
 12012 0000820A 498D6308                	lea rsp, [r11 + 8]
 12013 0000820E 5D                      	pop rbp
 12014 0000820F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12015 00008212 EB59                    	jmp .L_if_end_002d
 12016                                  .L_if_else_002d:
 12017                                  	; Setting up for a tail-call
 12018 00008214 6A00                    	push 0
 12019 00008216 488B4510                	mov rax, ENV
 12020 0000821A 488B00                  	mov rax, qword [rax + 8 * 0]
 12021 0000821D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12022 00008220 803804                  	cmp byte [rax], T_closure
 12023 00008223 0F85B9DD0000            	jne L_error_non_closure
 12024 00008229 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12025 0000822C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12026 00008230 4C8B4D00                	mov r9, qword [rbp]
 12027 00008234 4150                    	push r8
 12028 00008236 4151                    	push r9
 12029 00008238 41BA04000000            	mov r10, 0 + 4
 12030 0000823E 4C8B5D18                	mov r11, COUNT
 12031 00008242 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12032 00008247 4C8D65F8                	lea r12, [rbp - 8]
 12033                                  .L_tc_recycle_frame_loop_005f:
 12034 0000824B 4983FA00                	cmp r10, 0
 12035 0000824F 7414                    	je .L_tc_recycle_frame_done_005f
 12036 00008251 4D8B2C24                	mov r13, qword [r12]
 12037 00008255 4D892B                  	mov qword [r11], r13
 12038 00008258 49FFCA                  	dec r10
 12039 0000825B 4983EB08                	sub r11, 8
 12040 0000825F 4983EC08                	sub r12, 8
 12041 00008263 EBE6                    	jmp .L_tc_recycle_frame_loop_005f
 12042                                  .L_tc_recycle_frame_done_005f:
 12043 00008265 498D6308                	lea rsp, [r11 + 8]
 12044 00008269 5D                      	pop rbp
 12045 0000826A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12046                                  .L_if_end_002d:
 12047                                  .L_if_end_002e:
 12048                                  .L_if_end_002f:
 12049 0000826D E90C030000              	jmp .L_if_end_0034
 12050                                  .L_if_else_0034:
 12051                                  	; preparing a non-tail-call
 12052 00008272 488B4520                	mov rax, PARAM(0)	; param a
 12053 00008276 50                      	push rax
 12054 00008277 6A01                    	push 1	; arg count
 12055 00008279 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 12056 00008281 803805                  	cmp byte [rax], T_undefined
 12057 00008284 0F84D4DC0000            	je L_error_fvar_undefined
 12058 0000828A 803804                  	cmp byte [rax], T_closure
 12059 0000828D 0F854FDD0000            	jne L_error_non_closure
 12060 00008293 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12061 00008296 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12062 00008299 483D[02000000]          	cmp rax, sob_boolean_false
 12063 0000829F 0F8480020000            	je .L_if_else_0033
 12064                                  	; preparing a non-tail-call
 12065 000082A5 488B4528                	mov rax, PARAM(1)	; param b
 12066 000082A9 50                      	push rax
 12067 000082AA 6A01                    	push 1	; arg count
 12068 000082AC 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 12069 000082B4 803805                  	cmp byte [rax], T_undefined
 12070 000082B7 0F84A1DC0000            	je L_error_fvar_undefined
 12071 000082BD 803804                  	cmp byte [rax], T_closure
 12072 000082C0 0F851CDD0000            	jne L_error_non_closure
 12073 000082C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12074 000082C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12075 000082CC 483D[02000000]          	cmp rax, sob_boolean_false
 12076 000082D2 0F8492000000            	je .L_if_else_0032
 12077                                  	; Setting up for a tail-call
 12078 000082D8 488B4520                	mov rax, PARAM(0)	; param a
 12079 000082DC 50                      	push rax
 12080                                  	; preparing a non-tail-call
 12081 000082DD 488B4528                	mov rax, PARAM(1)	; param b
 12082 000082E1 50                      	push rax
 12083 000082E2 6A01                    	push 1	; arg count
 12084 000082E4 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 12085 000082EC 803805                  	cmp byte [rax], T_undefined
 12086 000082EF 0F8469DC0000            	je L_error_fvar_undefined
 12087 000082F5 803804                  	cmp byte [rax], T_closure
 12088 000082F8 0F85E4DC0000            	jne L_error_non_closure
 12089 000082FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12090 00008301 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12091 00008304 50                      	push rax
 12092 00008305 6A02                    	push 2
 12093 00008307 488B0425[780F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12094 0000830F 803805                  	cmp byte [rax], T_undefined
 12095 00008312 0F8446DC0000            	je L_error_fvar_undefined
 12096 00008318 803804                  	cmp byte [rax], T_closure
 12097 0000831B 0F85C1DC0000            	jne L_error_non_closure
 12098 00008321 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12099 00008324 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12100 00008328 4C8B4D00                	mov r9, qword [rbp]
 12101 0000832C 4150                    	push r8
 12102 0000832E 4151                    	push r9
 12103 00008330 41BA06000000            	mov r10, 2 + 4
 12104 00008336 4C8B5D18                	mov r11, COUNT
 12105 0000833A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12106 0000833F 4C8D65F8                	lea r12, [rbp - 8]
 12107                                  .L_tc_recycle_frame_loop_0060:
 12108 00008343 4983FA00                	cmp r10, 0
 12109 00008347 7414                    	je .L_tc_recycle_frame_done_0060
 12110 00008349 4D8B2C24                	mov r13, qword [r12]
 12111 0000834D 4D892B                  	mov qword [r11], r13
 12112 00008350 49FFCA                  	dec r10
 12113 00008353 4983EB08                	sub r11, 8
 12114 00008357 4983EC08                	sub r12, 8
 12115 0000835B EBE6                    	jmp .L_tc_recycle_frame_loop_0060
 12116                                  .L_tc_recycle_frame_done_0060:
 12117 0000835D 498D6308                	lea rsp, [r11 + 8]
 12118 00008361 5D                      	pop rbp
 12119 00008362 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12120 00008365 E9B9010000              	jmp .L_if_end_0032
 12121                                  .L_if_else_0032:
 12122                                  	; preparing a non-tail-call
 12123 0000836A 488B4528                	mov rax, PARAM(1)	; param b
 12124 0000836E 50                      	push rax
 12125 0000836F 6A01                    	push 1	; arg count
 12126 00008371 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 12127 00008379 803805                  	cmp byte [rax], T_undefined
 12128 0000837C 0F84DCDB0000            	je L_error_fvar_undefined
 12129 00008382 803804                  	cmp byte [rax], T_closure
 12130 00008385 0F8557DC0000            	jne L_error_non_closure
 12131 0000838B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12132 0000838E FF5009                  	call SOB_CLOSURE_CODE(rax)
 12133 00008391 483D[02000000]          	cmp rax, sob_boolean_false
 12134 00008397 0F8492000000            	je .L_if_else_0031
 12135                                  	; Setting up for a tail-call
 12136 0000839D 488B4520                	mov rax, PARAM(0)	; param a
 12137 000083A1 50                      	push rax
 12138                                  	; preparing a non-tail-call
 12139 000083A2 488B4528                	mov rax, PARAM(1)	; param b
 12140 000083A6 50                      	push rax
 12141 000083A7 6A01                    	push 1	; arg count
 12142 000083A9 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 12143 000083B1 803805                  	cmp byte [rax], T_undefined
 12144 000083B4 0F84A4DB0000            	je L_error_fvar_undefined
 12145 000083BA 803804                  	cmp byte [rax], T_closure
 12146 000083BD 0F851FDC0000            	jne L_error_non_closure
 12147 000083C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12148 000083C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12149 000083C9 50                      	push rax
 12150 000083CA 6A02                    	push 2
 12151 000083CC 488B0425[780F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12152 000083D4 803805                  	cmp byte [rax], T_undefined
 12153 000083D7 0F8481DB0000            	je L_error_fvar_undefined
 12154 000083DD 803804                  	cmp byte [rax], T_closure
 12155 000083E0 0F85FCDB0000            	jne L_error_non_closure
 12156 000083E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12157 000083E9 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12158 000083ED 4C8B4D00                	mov r9, qword [rbp]
 12159 000083F1 4150                    	push r8
 12160 000083F3 4151                    	push r9
 12161 000083F5 41BA06000000            	mov r10, 2 + 4
 12162 000083FB 4C8B5D18                	mov r11, COUNT
 12163 000083FF 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12164 00008404 4C8D65F8                	lea r12, [rbp - 8]
 12165                                  .L_tc_recycle_frame_loop_0061:
 12166 00008408 4983FA00                	cmp r10, 0
 12167 0000840C 7414                    	je .L_tc_recycle_frame_done_0061
 12168 0000840E 4D8B2C24                	mov r13, qword [r12]
 12169 00008412 4D892B                  	mov qword [r11], r13
 12170 00008415 49FFCA                  	dec r10
 12171 00008418 4983EB08                	sub r11, 8
 12172 0000841C 4983EC08                	sub r12, 8
 12173 00008420 EBE6                    	jmp .L_tc_recycle_frame_loop_0061
 12174                                  .L_tc_recycle_frame_done_0061:
 12175 00008422 498D6308                	lea rsp, [r11 + 8]
 12176 00008426 5D                      	pop rbp
 12177 00008427 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12178 0000842A E9F4000000              	jmp .L_if_end_0031
 12179                                  .L_if_else_0031:
 12180                                  	; preparing a non-tail-call
 12181 0000842F 488B4528                	mov rax, PARAM(1)	; param b
 12182 00008433 50                      	push rax
 12183 00008434 6A01                    	push 1	; arg count
 12184 00008436 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 12185 0000843E 803805                  	cmp byte [rax], T_undefined
 12186 00008441 0F8417DB0000            	je L_error_fvar_undefined
 12187 00008447 803804                  	cmp byte [rax], T_closure
 12188 0000844A 0F8592DB0000            	jne L_error_non_closure
 12189 00008450 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12190 00008453 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12191 00008456 483D[02000000]          	cmp rax, sob_boolean_false
 12192 0000845C 746C                    	je .L_if_else_0030
 12193                                  	; Setting up for a tail-call
 12194 0000845E 488B4520                	mov rax, PARAM(0)	; param a
 12195 00008462 50                      	push rax
 12196 00008463 488B4528                	mov rax, PARAM(1)	; param b
 12197 00008467 50                      	push rax
 12198 00008468 6A02                    	push 2
 12199 0000846A 488B0425[780F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12200 00008472 803805                  	cmp byte [rax], T_undefined
 12201 00008475 0F84E3DA0000            	je L_error_fvar_undefined
 12202 0000847B 803804                  	cmp byte [rax], T_closure
 12203 0000847E 0F855EDB0000            	jne L_error_non_closure
 12204 00008484 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12205 00008487 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12206 0000848B 4C8B4D00                	mov r9, qword [rbp]
 12207 0000848F 4150                    	push r8
 12208 00008491 4151                    	push r9
 12209 00008493 41BA06000000            	mov r10, 2 + 4
 12210 00008499 4C8B5D18                	mov r11, COUNT
 12211 0000849D 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12212 000084A2 4C8D65F8                	lea r12, [rbp - 8]
 12213                                  .L_tc_recycle_frame_loop_0062:
 12214 000084A6 4983FA00                	cmp r10, 0
 12215 000084AA 7414                    	je .L_tc_recycle_frame_done_0062
 12216 000084AC 4D8B2C24                	mov r13, qword [r12]
 12217 000084B0 4D892B                  	mov qword [r11], r13
 12218 000084B3 49FFCA                  	dec r10
 12219 000084B6 4983EB08                	sub r11, 8
 12220 000084BA 4983EC08                	sub r12, 8
 12221 000084BE EBE6                    	jmp .L_tc_recycle_frame_loop_0062
 12222                                  .L_tc_recycle_frame_done_0062:
 12223 000084C0 498D6308                	lea rsp, [r11 + 8]
 12224 000084C4 5D                      	pop rbp
 12225 000084C5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12226 000084C8 EB59                    	jmp .L_if_end_0030
 12227                                  .L_if_else_0030:
 12228                                  	; Setting up for a tail-call
 12229 000084CA 6A00                    	push 0
 12230 000084CC 488B4510                	mov rax, ENV
 12231 000084D0 488B00                  	mov rax, qword [rax + 8 * 0]
 12232 000084D3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12233 000084D6 803804                  	cmp byte [rax], T_closure
 12234 000084D9 0F8503DB0000            	jne L_error_non_closure
 12235 000084DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12236 000084E2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12237 000084E6 4C8B4D00                	mov r9, qword [rbp]
 12238 000084EA 4150                    	push r8
 12239 000084EC 4151                    	push r9
 12240 000084EE 41BA04000000            	mov r10, 0 + 4
 12241 000084F4 4C8B5D18                	mov r11, COUNT
 12242 000084F8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12243 000084FD 4C8D65F8                	lea r12, [rbp - 8]
 12244                                  .L_tc_recycle_frame_loop_0063:
 12245 00008501 4983FA00                	cmp r10, 0
 12246 00008505 7414                    	je .L_tc_recycle_frame_done_0063
 12247 00008507 4D8B2C24                	mov r13, qword [r12]
 12248 0000850B 4D892B                  	mov qword [r11], r13
 12249 0000850E 49FFCA                  	dec r10
 12250 00008511 4983EB08                	sub r11, 8
 12251 00008515 4983EC08                	sub r12, 8
 12252 00008519 EBE6                    	jmp .L_tc_recycle_frame_loop_0063
 12253                                  .L_tc_recycle_frame_done_0063:
 12254 0000851B 498D6308                	lea rsp, [r11 + 8]
 12255 0000851F 5D                      	pop rbp
 12256 00008520 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12257                                  .L_if_end_0030:
 12258                                  .L_if_end_0031:
 12259                                  .L_if_end_0032:
 12260 00008523 EB59                    	jmp .L_if_end_0033
 12261                                  .L_if_else_0033:
 12262                                  	; Setting up for a tail-call
 12263 00008525 6A00                    	push 0
 12264 00008527 488B4510                	mov rax, ENV
 12265 0000852B 488B00                  	mov rax, qword [rax + 8 * 0]
 12266 0000852E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12267 00008531 803804                  	cmp byte [rax], T_closure
 12268 00008534 0F85A8DA0000            	jne L_error_non_closure
 12269 0000853A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12270 0000853D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12271 00008541 4C8B4D00                	mov r9, qword [rbp]
 12272 00008545 4150                    	push r8
 12273 00008547 4151                    	push r9
 12274 00008549 41BA04000000            	mov r10, 0 + 4
 12275 0000854F 4C8B5D18                	mov r11, COUNT
 12276 00008553 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12277 00008558 4C8D65F8                	lea r12, [rbp - 8]
 12278                                  .L_tc_recycle_frame_loop_0064:
 12279 0000855C 4983FA00                	cmp r10, 0
 12280 00008560 7414                    	je .L_tc_recycle_frame_done_0064
 12281 00008562 4D8B2C24                	mov r13, qword [r12]
 12282 00008566 4D892B                  	mov qword [r11], r13
 12283 00008569 49FFCA                  	dec r10
 12284 0000856C 4983EB08                	sub r11, 8
 12285 00008570 4983EC08                	sub r12, 8
 12286 00008574 EBE6                    	jmp .L_tc_recycle_frame_loop_0064
 12287                                  .L_tc_recycle_frame_done_0064:
 12288 00008576 498D6308                	lea rsp, [r11 + 8]
 12289 0000857A 5D                      	pop rbp
 12290 0000857B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12291                                  .L_if_end_0033:
 12292                                  .L_if_end_0034:
 12293                                  .L_if_end_0035:
 12294 0000857E C9                      	leave
 12295 0000857F C22000                  	ret AND_KILL_FRAME(2)
 12296                                  .L_lambda_simple_end_0043:	; new closure is in rax
 12297 00008582 50                      	push rax
 12298 00008583 6A01                    	push 1
 12299 00008585 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12300 0000858A E8FCDA0000              	call malloc
 12301 0000858F 50                      	push rax
 12302 00008590 BF08000000              	mov rdi, 8 * 1	; new rib
 12303 00008595 E8F1DA0000              	call malloc
 12304 0000859A 50                      	push rax
 12305 0000859B BF10000000              	mov rdi, 8 * 2	; extended env
 12306 000085A0 E8E6DA0000              	call malloc
 12307 000085A5 488B7D10                	mov rdi, ENV
 12308 000085A9 BE00000000              	mov rsi, 0
 12309 000085AE BA01000000              	mov rdx, 1
 12310                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 12311 000085B3 4883FE01                	cmp rsi, 1
 12312 000085B7 7410                    	je .L_lambda_simple_env_end_0044
 12313 000085B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12314 000085BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12315 000085C1 48FFC6                  	inc rsi
 12316 000085C4 48FFC2                  	inc rdx
 12317 000085C7 EBEA                    	jmp .L_lambda_simple_env_loop_0044
 12318                                  .L_lambda_simple_env_end_0044:
 12319 000085C9 5B                      	pop rbx
 12320 000085CA BE00000000              	mov rsi, 0
 12321                                  .L_lambda_simple_params_loop_0044:	; copy params
 12322 000085CF 4883FE01                	cmp rsi, 1
 12323 000085D3 740E                    	je .L_lambda_simple_params_end_0044
 12324 000085D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12325 000085DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12326 000085DE 48FFC6                  	inc rsi
 12327 000085E1 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 12328                                  .L_lambda_simple_params_end_0044:
 12329 000085E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12330 000085E6 4889C3                  	mov rbx, rax
 12331 000085E9 58                      	pop rax
 12332 000085EA C60004                  	mov byte [rax], T_closure
 12333 000085ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12334 000085F1 48C74009[FE850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 12335 000085F9 E9F9020000              	jmp .L_lambda_simple_end_0044
 12336                                  .L_lambda_simple_code_0044:	; lambda-simple body
 12337 000085FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12338 00008604 740B                    	je .L_lambda_simple_arity_check_ok_0044
 12339 00008606 FF742410                	push qword [rsp + 8 * 2]
 12340 0000860A 6A01                    	push 1
 12341 0000860C E933DA0000              	jmp L_error_incorrect_arity_simple
 12342                                  .L_lambda_simple_arity_check_ok_0044:
 12343 00008611 C8000000                	enter 0, 0
 12344                                  	; Setting up for a tail-call
 12345 00008615 6A00                    	push 0
 12346 00008617 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12347 0000861C E86ADA0000              	call malloc
 12348 00008621 50                      	push rax
 12349 00008622 BF08000000              	mov rdi, 8 * 1	; new rib
 12350 00008627 E85FDA0000              	call malloc
 12351 0000862C 50                      	push rax
 12352 0000862D BF18000000              	mov rdi, 8 * 3	; extended env
 12353 00008632 E854DA0000              	call malloc
 12354 00008637 488B7D10                	mov rdi, ENV
 12355 0000863B BE00000000              	mov rsi, 0
 12356 00008640 BA01000000              	mov rdx, 1
 12357                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 12358 00008645 4883FE02                	cmp rsi, 2
 12359 00008649 7410                    	je .L_lambda_simple_env_end_0045
 12360 0000864B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12361 0000864F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12362 00008653 48FFC6                  	inc rsi
 12363 00008656 48FFC2                  	inc rdx
 12364 00008659 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 12365                                  .L_lambda_simple_env_end_0045:
 12366 0000865B 5B                      	pop rbx
 12367 0000865C BE00000000              	mov rsi, 0
 12368                                  .L_lambda_simple_params_loop_0045:	; copy params
 12369 00008661 4883FE01                	cmp rsi, 1
 12370 00008665 740E                    	je .L_lambda_simple_params_end_0045
 12371 00008667 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12372 0000866C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12373 00008670 48FFC6                  	inc rsi
 12374 00008673 EBEC                    	jmp .L_lambda_simple_params_loop_0045
 12375                                  .L_lambda_simple_params_end_0045:
 12376 00008675 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12377 00008678 4889C3                  	mov rbx, rax
 12378 0000867B 58                      	pop rax
 12379 0000867C C60004                  	mov byte [rax], T_closure
 12380 0000867F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12381 00008683 48C74009[90860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 12382 0000868B E916020000              	jmp .L_lambda_simple_end_0045
 12383                                  .L_lambda_simple_code_0045:	; lambda-simple body
 12384 00008690 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12385 00008696 740B                    	je .L_lambda_simple_arity_check_ok_0045
 12386 00008698 FF742410                	push qword [rsp + 8 * 2]
 12387 0000869C 6A00                    	push 0
 12388 0000869E E9A1D90000              	jmp L_error_incorrect_arity_simple
 12389                                  .L_lambda_simple_arity_check_ok_0045:
 12390 000086A3 C8000000                	enter 0, 0
 12391 000086A7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12392 000086AC E8DAD90000              	call malloc
 12393 000086B1 50                      	push rax
 12394 000086B2 BF00000000              	mov rdi, 8 * 0	; new rib
 12395 000086B7 E8CFD90000              	call malloc
 12396 000086BC 50                      	push rax
 12397 000086BD BF20000000              	mov rdi, 8 * 4	; extended env
 12398 000086C2 E8C4D90000              	call malloc
 12399 000086C7 488B7D10                	mov rdi, ENV
 12400 000086CB BE00000000              	mov rsi, 0
 12401 000086D0 BA01000000              	mov rdx, 1
 12402                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 12403 000086D5 4883FE03                	cmp rsi, 3
 12404 000086D9 7410                    	je .L_lambda_opt_env_end_000c
 12405 000086DB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12406 000086DF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12407 000086E3 48FFC6                  	inc rsi
 12408 000086E6 48FFC2                  	inc rdx
 12409 000086E9 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12410                                  .L_lambda_opt_env_end_000c:
 12411 000086EB 5B                      	pop rbx
 12412 000086EC BE00000000              	mov rsi, 0
 12413                                  .L_lambda_opt_params_loop_000c:	; copy params
 12414 000086F1 4883FE00                	cmp rsi, 0
 12415 000086F5 740E                    	je .L_lambda_opt_params_end_000c
 12416 000086F7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12417 000086FC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12418 00008700 48FFC6                  	inc rsi
 12419 00008703 EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12420                                  .L_lambda_opt_params_end_000c:
 12421 00008705 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12422 00008708 4889C3                  	mov rbx, rax
 12423 0000870B 58                      	pop rax
 12424 0000870C C60004                  	mov byte [rax], T_closure
 12425 0000870F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12426 00008713 48C74009[20870000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12427 0000871B E982010000              	jmp .L_lambda_opt_end_000c
 12428                                  .L_lambda_opt_code_000c:
 12429 00008720 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 12430 00008725 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 12431 00008729 7407                    	je .L_lambda_opt_arity_check_exact_000c	; Jump if arity matches
 12432 0000872B 7F4C                    	jg .L_lambda_opt_arity_check_more_000c	; Jump if more arguments passed
 12433 0000872D E926D90000              	jmp L_error_incorrect_arity_opt
 12434                                  .L_lambda_opt_arity_check_exact_000c:
 12435 00008732 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 12436 00008735 4983C603                	add r14, 3 ; add 3 first stack values
 12437 00008739 41BF00000000            	mov r15, 0 ; r15 = index
 12438 0000873F 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 12439 00008743 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 12440 0000874B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12441                                  .L_lambda_opt_stack_shrink_loop_000c:
 12442 0000874D 4983FE00                	cmp r14, 0
 12443 00008751 7E11                    	jle .L_make_lambda_opt_exact_finish_000c
 12444 00008753 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 12445 00008758 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 12446 0000875C 49FFCE                  	dec r14 ; next loop value
 12447 0000875F 49FFC7                  	inc r15 ; update i
 12448 00008762 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12449                                  .L_make_lambda_opt_exact_finish_000c:
 12450 00008764 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 12451 0000876C 49FFC2                  	inc r10
 12452 0000876F 4C89542410              	mov qword [rsp + 8 * 2], r10
 12453 00008774 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000c
 12454                                  .L_lambda_opt_arity_check_more_000c:
 12455 00008779 4D89D6                  	mov r14, r10 ; r14 = num args
 12456 0000877C 4D89D7                  	mov r15, r10 ; r15 = num args
 12457 0000877F 41B900000000            	mov r9, 0; r9 = number of params 
 12458 00008785 4D29CE                  	sub r14, r9 ; r14 = extra args
 12459 00008788 4D01F1                  	add r9, r14 ; r9 = num args
 12460 0000878B 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 12460 0000878D [0100000000000000] 
 12461 00008795 EB00                    	jmp .L_make_lambda_opt_arg_list_000c
 12462                                  .L_make_lambda_opt_arg_list_000c:
 12463 00008797 4983FE00                	cmp r14, 0
 12464 0000879B 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000c
 12465 0000879D 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 12466 000087A2 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 12467 000087A5 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 12468 000087AB E8DBD80000              	call malloc                         ; Allocate memory, result in rax
 12469 000087B0 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 12470 000087B3 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 12471 000087B7 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 12472 000087BB 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 12473 000087BE 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 12474 000087C1 49FFC9                  	dec r9                              ; args index minus 1
 12475 000087C4 49FFCE                  	dec r14                             ; next iteration
 12476 000087C7 EBCE                    	jmp .L_make_lambda_opt_arg_list_000c
 12477                                  .L_make_lambda_opt_stack_fixed_000c:
 12478 000087C9 4D89FE                  	mov r14, r15 ; r14 = num args
 12479 000087CC 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 12480 000087CF 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 12481 000087D3 41BA00000000            	mov r10, 0; r10 = num of params
 12482 000087D9 4D29D6                  	sub r14, r10 ; r14 = extra args
 12483 000087DC 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 12484 000087DF 49FFCE                  	dec r14 ; how much we need to change stack wise?
 12485 000087E2 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 12486 000087E7 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000c
 12487                                  .L_lambda_opt_stack_shrink_loop_more_000c:
 12488 000087E9 4983F800                	cmp r8, 0
 12489 000087ED 7E15                    	jle .L_make_lambda_opt_more_finish_000c
 12490 000087EF 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 12491 000087F3 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 12492 000087F7 4D8D26                  	lea r12, [r14]
 12493 000087FA 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 12494 000087FF 49FFC8                  	dec r8 ; next iteration
 12495 00008802 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000c
 12496                                  .L_make_lambda_opt_more_finish_000c:
 12497 00008804 4D89F8                  	mov r8, r15 ; num of args
 12498 00008807 41BA00000000            	mov r10, 0
 12499 0000880D 4D29D0                  	sub r8, r10 ; num of new args
 12500 00008810 49FFC0                  	inc r8
 12501 00008813 4C89442420              	mov qword [rsp + 8 * 4], r8
 12502 00008818 4883C410                	add rsp, 8 * 2  ; 
 12503 0000881C EB00                    	jmp .L_lambda_opt_stack_adjusted_000c
 12504                                  .L_lambda_opt_stack_adjusted_000c:
 12505 0000881E C8000000                	enter 0, 0
 12506                                  	; Setting up for a tail-call
 12507 00008822 488B4510                	mov rax, ENV
 12508 00008826 488B4008                	mov rax, qword [rax + 8 * 1]
 12509 0000882A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12510 0000882D 50                      	push rax
 12511 0000882E 48B8-                   	mov rax, L_constants + 2284
 12511 00008830 [EC08000000000000] 
 12512 00008838 50                      	push rax
 12513 00008839 488B4520                	mov rax, PARAM(0)	; param s
 12514 0000883D 50                      	push rax
 12515 0000883E 6A03                    	push 3
 12516 00008840 488B0425[A7130000]      	mov rax, qword [free_var_86]	; free var fold-left
 12517 00008848 803805                  	cmp byte [rax], T_undefined
 12518 0000884B 0F840DD70000            	je L_error_fvar_undefined
 12519 00008851 803804                  	cmp byte [rax], T_closure
 12520 00008854 0F8588D70000            	jne L_error_non_closure
 12521 0000885A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12522 0000885D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12523 00008861 4C8B4D00                	mov r9, qword [rbp]
 12524 00008865 4150                    	push r8
 12525 00008867 4151                    	push r9
 12526 00008869 41BA07000000            	mov r10, 3 + 4
 12527 0000886F 4C8B5D18                	mov r11, COUNT
 12528 00008873 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12529 00008878 4C8D65F8                	lea r12, [rbp - 8]
 12530                                  .L_tc_recycle_frame_loop_0065:
 12531 0000887C 4983FA00                	cmp r10, 0
 12532 00008880 7414                    	je .L_tc_recycle_frame_done_0065
 12533 00008882 4D8B2C24                	mov r13, qword [r12]
 12534 00008886 4D892B                  	mov qword [r11], r13
 12535 00008889 49FFCA                  	dec r10
 12536 0000888C 4983EB08                	sub r11, 8
 12537 00008890 4983EC08                	sub r12, 8
 12538 00008894 EBE6                    	jmp .L_tc_recycle_frame_loop_0065
 12539                                  .L_tc_recycle_frame_done_0065:
 12540 00008896 498D6308                	lea rsp, [r11 + 8]
 12541 0000889A 5D                      	pop rbp
 12542 0000889B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12543 0000889E C9                      	leave
 12544 0000889F C21000                  	ret AND_KILL_FRAME(0)
 12545                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12546 000088A2 C9                      	leave
 12547 000088A3 C21000                  	ret AND_KILL_FRAME(0)
 12548                                  .L_lambda_simple_end_0045:	; new closure is in rax
 12549 000088A6 803804                  	cmp byte [rax], T_closure
 12550 000088A9 0F8533D70000            	jne L_error_non_closure
 12551 000088AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12552 000088B2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12553 000088B6 4C8B4D00                	mov r9, qword [rbp]
 12554 000088BA 4150                    	push r8
 12555 000088BC 4151                    	push r9
 12556 000088BE 41BA04000000            	mov r10, 0 + 4
 12557 000088C4 4C8B5D18                	mov r11, COUNT
 12558 000088C8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12559 000088CD 4C8D65F8                	lea r12, [rbp - 8]
 12560                                  .L_tc_recycle_frame_loop_0066:
 12561 000088D1 4983FA00                	cmp r10, 0
 12562 000088D5 7414                    	je .L_tc_recycle_frame_done_0066
 12563 000088D7 4D8B2C24                	mov r13, qword [r12]
 12564 000088DB 4D892B                  	mov qword [r11], r13
 12565 000088DE 49FFCA                  	dec r10
 12566 000088E1 4983EB08                	sub r11, 8
 12567 000088E5 4983EC08                	sub r12, 8
 12568 000088E9 EBE6                    	jmp .L_tc_recycle_frame_loop_0066
 12569                                  .L_tc_recycle_frame_done_0066:
 12570 000088EB 498D6308                	lea rsp, [r11 + 8]
 12571 000088EF 5D                      	pop rbp
 12572 000088F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12573 000088F3 C9                      	leave
 12574 000088F4 C21800                  	ret AND_KILL_FRAME(1)
 12575                                  .L_lambda_simple_end_0044:	; new closure is in rax
 12576 000088F7 803804                  	cmp byte [rax], T_closure
 12577 000088FA 0F85E2D60000            	jne L_error_non_closure
 12578 00008900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12579 00008903 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12580 00008907 4C8B4D00                	mov r9, qword [rbp]
 12581 0000890B 4150                    	push r8
 12582 0000890D 4151                    	push r9
 12583 0000890F 41BA05000000            	mov r10, 1 + 4
 12584 00008915 4C8B5D18                	mov r11, COUNT
 12585 00008919 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12586 0000891E 4C8D65F8                	lea r12, [rbp - 8]
 12587                                  .L_tc_recycle_frame_loop_0067:
 12588 00008922 4983FA00                	cmp r10, 0
 12589 00008926 7414                    	je .L_tc_recycle_frame_done_0067
 12590 00008928 4D8B2C24                	mov r13, qword [r12]
 12591 0000892C 4D892B                  	mov qword [r11], r13
 12592 0000892F 49FFCA                  	dec r10
 12593 00008932 4983EB08                	sub r11, 8
 12594 00008936 4983EC08                	sub r12, 8
 12595 0000893A EBE6                    	jmp .L_tc_recycle_frame_loop_0067
 12596                                  .L_tc_recycle_frame_done_0067:
 12597 0000893C 498D6308                	lea rsp, [r11 + 8]
 12598 00008940 5D                      	pop rbp
 12599 00008941 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12600 00008944 C9                      	leave
 12601 00008945 C21800                  	ret AND_KILL_FRAME(1)
 12602                                  .L_lambda_simple_end_0042:	; new closure is in rax
 12603 00008948 803804                  	cmp byte [rax], T_closure
 12604 0000894B 0F8591D60000            	jne L_error_non_closure
 12605 00008951 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12606 00008954 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12607 00008957 48890425[F10D0000]      	mov qword [free_var_0], rax
 12608 0000895F 48B8-                   	mov rax, sob_void
 12608 00008961 [0000000000000000] 
 12609                                  
 12610 00008969 4889C7                  	mov rdi, rax
 12611 0000896C E86FD90000              	call print_sexpr_if_not_void
 12612                                  	; preparing a non-tail-call
 12613 00008971 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12614 00008976 E810D70000              	call malloc
 12615 0000897B 50                      	push rax
 12616 0000897C BF00000000              	mov rdi, 8 * 0	; new rib
 12617 00008981 E805D70000              	call malloc
 12618 00008986 50                      	push rax
 12619 00008987 BF08000000              	mov rdi, 8 * 1	; extended env
 12620 0000898C E8FAD60000              	call malloc
 12621 00008991 488B7D10                	mov rdi, ENV
 12622 00008995 BE00000000              	mov rsi, 0
 12623 0000899A BA01000000              	mov rdx, 1
 12624                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 12625 0000899F 4883FE00                	cmp rsi, 0
 12626 000089A3 7410                    	je .L_lambda_simple_env_end_0046
 12627 000089A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12628 000089A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12629 000089AD 48FFC6                  	inc rsi
 12630 000089B0 48FFC2                  	inc rdx
 12631 000089B3 EBEA                    	jmp .L_lambda_simple_env_loop_0046
 12632                                  .L_lambda_simple_env_end_0046:
 12633 000089B5 5B                      	pop rbx
 12634 000089B6 BE00000000              	mov rsi, 0
 12635                                  .L_lambda_simple_params_loop_0046:	; copy params
 12636 000089BB 4883FE00                	cmp rsi, 0
 12637 000089BF 740E                    	je .L_lambda_simple_params_end_0046
 12638 000089C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12639 000089C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12640 000089CA 48FFC6                  	inc rsi
 12641 000089CD EBEC                    	jmp .L_lambda_simple_params_loop_0046
 12642                                  .L_lambda_simple_params_end_0046:
 12643 000089CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12644 000089D2 4889C3                  	mov rbx, rax
 12645 000089D5 58                      	pop rax
 12646 000089D6 C60004                  	mov byte [rax], T_closure
 12647 000089D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12648 000089DD 48C74009[EA890000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 12649 000089E5 E991000000              	jmp .L_lambda_simple_end_0046
 12650                                  .L_lambda_simple_code_0046:	; lambda-simple body
 12651 000089EA 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12652 000089F0 740B                    	je .L_lambda_simple_arity_check_ok_0046
 12653 000089F2 FF742410                	push qword [rsp + 8 * 2]
 12654 000089F6 6A00                    	push 0
 12655 000089F8 E947D60000              	jmp L_error_incorrect_arity_simple
 12656                                  .L_lambda_simple_arity_check_ok_0046:
 12657 000089FD C8000000                	enter 0, 0
 12658                                  	; Setting up for a tail-call
 12659 00008A01 48B8-                   	mov rax, L_constants + 2312
 12659 00008A03 [0809000000000000] 
 12660 00008A0B 50                      	push rax
 12661 00008A0C 48B8-                   	mov rax, L_constants + 2201
 12661 00008A0E [9908000000000000] 
 12662 00008A16 50                      	push rax
 12663 00008A17 6A02                    	push 2
 12664 00008A19 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 12665 00008A21 803805                  	cmp byte [rax], T_undefined
 12666 00008A24 0F8434D50000            	je L_error_fvar_undefined
 12667 00008A2A 803804                  	cmp byte [rax], T_closure
 12668 00008A2D 0F85AFD50000            	jne L_error_non_closure
 12669 00008A33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12670 00008A36 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12671 00008A3A 4C8B4D00                	mov r9, qword [rbp]
 12672 00008A3E 4150                    	push r8
 12673 00008A40 4151                    	push r9
 12674 00008A42 41BA06000000            	mov r10, 2 + 4
 12675 00008A48 4C8B5D18                	mov r11, COUNT
 12676 00008A4C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12677 00008A51 4C8D65F8                	lea r12, [rbp - 8]
 12678                                  .L_tc_recycle_frame_loop_0068:
 12679 00008A55 4983FA00                	cmp r10, 0
 12680 00008A59 7414                    	je .L_tc_recycle_frame_done_0068
 12681 00008A5B 4D8B2C24                	mov r13, qword [r12]
 12682 00008A5F 4D892B                  	mov qword [r11], r13
 12683 00008A62 49FFCA                  	dec r10
 12684 00008A65 4983EB08                	sub r11, 8
 12685 00008A69 4983EC08                	sub r12, 8
 12686 00008A6D EBE6                    	jmp .L_tc_recycle_frame_loop_0068
 12687                                  .L_tc_recycle_frame_done_0068:
 12688 00008A6F 498D6308                	lea rsp, [r11 + 8]
 12689 00008A73 5D                      	pop rbp
 12690 00008A74 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12691 00008A77 C9                      	leave
 12692 00008A78 C21000                  	ret AND_KILL_FRAME(0)
 12693                                  .L_lambda_simple_end_0046:	; new closure is in rax
 12694 00008A7B 50                      	push rax
 12695 00008A7C 6A01                    	push 1	; arg count
 12696 00008A7E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12697 00008A83 E803D60000              	call malloc
 12698 00008A88 50                      	push rax
 12699 00008A89 BF00000000              	mov rdi, 8 * 0	; new rib
 12700 00008A8E E8F8D50000              	call malloc
 12701 00008A93 50                      	push rax
 12702 00008A94 BF08000000              	mov rdi, 8 * 1	; extended env
 12703 00008A99 E8EDD50000              	call malloc
 12704 00008A9E 488B7D10                	mov rdi, ENV
 12705 00008AA2 BE00000000              	mov rsi, 0
 12706 00008AA7 BA01000000              	mov rdx, 1
 12707                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 12708 00008AAC 4883FE00                	cmp rsi, 0
 12709 00008AB0 7410                    	je .L_lambda_simple_env_end_0047
 12710 00008AB2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12711 00008AB6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12712 00008ABA 48FFC6                  	inc rsi
 12713 00008ABD 48FFC2                  	inc rdx
 12714 00008AC0 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 12715                                  .L_lambda_simple_env_end_0047:
 12716 00008AC2 5B                      	pop rbx
 12717 00008AC3 BE00000000              	mov rsi, 0
 12718                                  .L_lambda_simple_params_loop_0047:	; copy params
 12719 00008AC8 4883FE00                	cmp rsi, 0
 12720 00008ACC 740E                    	je .L_lambda_simple_params_end_0047
 12721 00008ACE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12722 00008AD3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12723 00008AD7 48FFC6                  	inc rsi
 12724 00008ADA EBEC                    	jmp .L_lambda_simple_params_loop_0047
 12725                                  .L_lambda_simple_params_end_0047:
 12726 00008ADC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12727 00008ADF 4889C3                  	mov rbx, rax
 12728 00008AE2 58                      	pop rax
 12729 00008AE3 C60004                  	mov byte [rax], T_closure
 12730 00008AE6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12731 00008AEA 48C74009[F78A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 12732 00008AF2 E99D0E0000              	jmp .L_lambda_simple_end_0047
 12733                                  .L_lambda_simple_code_0047:	; lambda-simple body
 12734 00008AF7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12735 00008AFD 740B                    	je .L_lambda_simple_arity_check_ok_0047
 12736 00008AFF FF742410                	push qword [rsp + 8 * 2]
 12737 00008B03 6A01                    	push 1
 12738 00008B05 E93AD50000              	jmp L_error_incorrect_arity_simple
 12739                                  .L_lambda_simple_arity_check_ok_0047:
 12740 00008B0A C8000000                	enter 0, 0
 12741                                  	; Setting up for a tail-call
 12742 00008B0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12743 00008B13 E873D50000              	call malloc
 12744 00008B18 50                      	push rax
 12745 00008B19 BF08000000              	mov rdi, 8 * 1	; new rib
 12746 00008B1E E868D50000              	call malloc
 12747 00008B23 50                      	push rax
 12748 00008B24 BF10000000              	mov rdi, 8 * 2	; extended env
 12749 00008B29 E85DD50000              	call malloc
 12750 00008B2E 488B7D10                	mov rdi, ENV
 12751 00008B32 BE00000000              	mov rsi, 0
 12752 00008B37 BA01000000              	mov rdx, 1
 12753                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 12754 00008B3C 4883FE01                	cmp rsi, 1
 12755 00008B40 7410                    	je .L_lambda_simple_env_end_0048
 12756 00008B42 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12757 00008B46 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12758 00008B4A 48FFC6                  	inc rsi
 12759 00008B4D 48FFC2                  	inc rdx
 12760 00008B50 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 12761                                  .L_lambda_simple_env_end_0048:
 12762 00008B52 5B                      	pop rbx
 12763 00008B53 BE00000000              	mov rsi, 0
 12764                                  .L_lambda_simple_params_loop_0048:	; copy params
 12765 00008B58 4883FE01                	cmp rsi, 1
 12766 00008B5C 740E                    	je .L_lambda_simple_params_end_0048
 12767 00008B5E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12768 00008B63 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12769 00008B67 48FFC6                  	inc rsi
 12770 00008B6A EBEC                    	jmp .L_lambda_simple_params_loop_0048
 12771                                  .L_lambda_simple_params_end_0048:
 12772 00008B6C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12773 00008B6F 4889C3                  	mov rbx, rax
 12774 00008B72 58                      	pop rax
 12775 00008B73 C60004                  	mov byte [rax], T_closure
 12776 00008B76 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12777 00008B7A 48C74009[878B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 12778 00008B82 E993080000              	jmp .L_lambda_simple_end_0048
 12779                                  .L_lambda_simple_code_0048:	; lambda-simple body
 12780 00008B87 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12781 00008B8D 740B                    	je .L_lambda_simple_arity_check_ok_0048
 12782 00008B8F FF742410                	push qword [rsp + 8 * 2]
 12783 00008B93 6A02                    	push 2
 12784 00008B95 E9AAD40000              	jmp L_error_incorrect_arity_simple
 12785                                  .L_lambda_simple_arity_check_ok_0048:
 12786 00008B9A C8000000                	enter 0, 0
 12787                                  	; preparing a non-tail-call
 12788 00008B9E 488B4520                	mov rax, PARAM(0)	; param a
 12789 00008BA2 50                      	push rax
 12790 00008BA3 6A01                    	push 1	; arg count
 12791 00008BA5 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 12792 00008BAD 803805                  	cmp byte [rax], T_undefined
 12793 00008BB0 0F84A8D30000            	je L_error_fvar_undefined
 12794 00008BB6 803804                  	cmp byte [rax], T_closure
 12795 00008BB9 0F8523D40000            	jne L_error_non_closure
 12796 00008BBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12797 00008BC2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12798 00008BC5 483D[02000000]          	cmp rax, sob_boolean_false
 12799 00008BCB 0F8483020000            	je .L_if_else_0041
 12800                                  	; preparing a non-tail-call
 12801 00008BD1 488B4528                	mov rax, PARAM(1)	; param b
 12802 00008BD5 50                      	push rax
 12803 00008BD6 6A01                    	push 1	; arg count
 12804 00008BD8 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 12805 00008BE0 803805                  	cmp byte [rax], T_undefined
 12806 00008BE3 0F8475D30000            	je L_error_fvar_undefined
 12807 00008BE9 803804                  	cmp byte [rax], T_closure
 12808 00008BEC 0F85F0D30000            	jne L_error_non_closure
 12809 00008BF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12810 00008BF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12811 00008BF8 483D[02000000]          	cmp rax, sob_boolean_false
 12812 00008BFE 746F                    	je .L_if_else_0038
 12813                                  	; Setting up for a tail-call
 12814 00008C00 488B4520                	mov rax, PARAM(0)	; param a
 12815 00008C04 50                      	push rax
 12816 00008C05 488B4528                	mov rax, PARAM(1)	; param b
 12817 00008C09 50                      	push rax
 12818 00008C0A 6A02                    	push 2
 12819 00008C0C 488B0425[F00E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12820 00008C14 803805                  	cmp byte [rax], T_undefined
 12821 00008C17 0F8441D30000            	je L_error_fvar_undefined
 12822 00008C1D 803804                  	cmp byte [rax], T_closure
 12823 00008C20 0F85BCD30000            	jne L_error_non_closure
 12824 00008C26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12825 00008C29 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12826 00008C2D 4C8B4D00                	mov r9, qword [rbp]
 12827 00008C31 4150                    	push r8
 12828 00008C33 4151                    	push r9
 12829 00008C35 41BA06000000            	mov r10, 2 + 4
 12830 00008C3B 4C8B5D18                	mov r11, COUNT
 12831 00008C3F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12832 00008C44 4C8D65F8                	lea r12, [rbp - 8]
 12833                                  .L_tc_recycle_frame_loop_0069:
 12834 00008C48 4983FA00                	cmp r10, 0
 12835 00008C4C 7414                    	je .L_tc_recycle_frame_done_0069
 12836 00008C4E 4D8B2C24                	mov r13, qword [r12]
 12837 00008C52 4D892B                  	mov qword [r11], r13
 12838 00008C55 49FFCA                  	dec r10
 12839 00008C58 4983EB08                	sub r11, 8
 12840 00008C5C 4983EC08                	sub r12, 8
 12841 00008C60 EBE6                    	jmp .L_tc_recycle_frame_loop_0069
 12842                                  .L_tc_recycle_frame_done_0069:
 12843 00008C62 498D6308                	lea rsp, [r11 + 8]
 12844 00008C66 5D                      	pop rbp
 12845 00008C67 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12846 00008C6A E9E0010000              	jmp .L_if_end_0038
 12847                                  .L_if_else_0038:
 12848                                  	; preparing a non-tail-call
 12849 00008C6F 488B4528                	mov rax, PARAM(1)	; param b
 12850 00008C73 50                      	push rax
 12851 00008C74 6A01                    	push 1	; arg count
 12852 00008C76 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 12853 00008C7E 803805                  	cmp byte [rax], T_undefined
 12854 00008C81 0F84D7D20000            	je L_error_fvar_undefined
 12855 00008C87 803804                  	cmp byte [rax], T_closure
 12856 00008C8A 0F8552D30000            	jne L_error_non_closure
 12857 00008C90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12858 00008C93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12859 00008C96 483D[02000000]          	cmp rax, sob_boolean_false
 12860 00008C9C 0F8492000000            	je .L_if_else_0037
 12861                                  	; Setting up for a tail-call
 12862                                  	; preparing a non-tail-call
 12863 00008CA2 488B4520                	mov rax, PARAM(0)	; param a
 12864 00008CA6 50                      	push rax
 12865 00008CA7 6A01                    	push 1	; arg count
 12866 00008CA9 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12867 00008CB1 803805                  	cmp byte [rax], T_undefined
 12868 00008CB4 0F84A4D20000            	je L_error_fvar_undefined
 12869 00008CBA 803804                  	cmp byte [rax], T_closure
 12870 00008CBD 0F851FD30000            	jne L_error_non_closure
 12871 00008CC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12872 00008CC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12873 00008CC9 50                      	push rax
 12874 00008CCA 488B4528                	mov rax, PARAM(1)	; param b
 12875 00008CCE 50                      	push rax
 12876 00008CCF 6A02                    	push 2
 12877 00008CD1 488B0425[CE0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12878 00008CD9 803805                  	cmp byte [rax], T_undefined
 12879 00008CDC 0F847CD20000            	je L_error_fvar_undefined
 12880 00008CE2 803804                  	cmp byte [rax], T_closure
 12881 00008CE5 0F85F7D20000            	jne L_error_non_closure
 12882 00008CEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12883 00008CEE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12884 00008CF2 4C8B4D00                	mov r9, qword [rbp]
 12885 00008CF6 4150                    	push r8
 12886 00008CF8 4151                    	push r9
 12887 00008CFA 41BA06000000            	mov r10, 2 + 4
 12888 00008D00 4C8B5D18                	mov r11, COUNT
 12889 00008D04 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12890 00008D09 4C8D65F8                	lea r12, [rbp - 8]
 12891                                  .L_tc_recycle_frame_loop_006a:
 12892 00008D0D 4983FA00                	cmp r10, 0
 12893 00008D11 7414                    	je .L_tc_recycle_frame_done_006a
 12894 00008D13 4D8B2C24                	mov r13, qword [r12]
 12895 00008D17 4D892B                  	mov qword [r11], r13
 12896 00008D1A 49FFCA                  	dec r10
 12897 00008D1D 4983EB08                	sub r11, 8
 12898 00008D21 4983EC08                	sub r12, 8
 12899 00008D25 EBE6                    	jmp .L_tc_recycle_frame_loop_006a
 12900                                  .L_tc_recycle_frame_done_006a:
 12901 00008D27 498D6308                	lea rsp, [r11 + 8]
 12902 00008D2B 5D                      	pop rbp
 12903 00008D2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12904 00008D2F E91B010000              	jmp .L_if_end_0037
 12905                                  .L_if_else_0037:
 12906                                  	; preparing a non-tail-call
 12907 00008D34 488B4528                	mov rax, PARAM(1)	; param b
 12908 00008D38 50                      	push rax
 12909 00008D39 6A01                    	push 1	; arg count
 12910 00008D3B 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 12911 00008D43 803805                  	cmp byte [rax], T_undefined
 12912 00008D46 0F8412D20000            	je L_error_fvar_undefined
 12913 00008D4C 803804                  	cmp byte [rax], T_closure
 12914 00008D4F 0F858DD20000            	jne L_error_non_closure
 12915 00008D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12916 00008D58 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12917 00008D5B 483D[02000000]          	cmp rax, sob_boolean_false
 12918 00008D61 0F848F000000            	je .L_if_else_0036
 12919                                  	; Setting up for a tail-call
 12920                                  	; preparing a non-tail-call
 12921 00008D67 488B4520                	mov rax, PARAM(0)	; param a
 12922 00008D6B 50                      	push rax
 12923 00008D6C 6A01                    	push 1	; arg count
 12924 00008D6E 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 12925 00008D76 803805                  	cmp byte [rax], T_undefined
 12926 00008D79 0F84DFD10000            	je L_error_fvar_undefined
 12927 00008D7F 803804                  	cmp byte [rax], T_closure
 12928 00008D82 0F855AD20000            	jne L_error_non_closure
 12929 00008D88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12930 00008D8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 12931 00008D8E 50                      	push rax
 12932 00008D8F 488B4528                	mov rax, PARAM(1)	; param b
 12933 00008D93 50                      	push rax
 12934 00008D94 6A02                    	push 2
 12935 00008D96 488B0425[DF0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12936 00008D9E 803805                  	cmp byte [rax], T_undefined
 12937 00008DA1 0F84B7D10000            	je L_error_fvar_undefined
 12938 00008DA7 803804                  	cmp byte [rax], T_closure
 12939 00008DAA 0F8532D20000            	jne L_error_non_closure
 12940 00008DB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12941 00008DB3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12942 00008DB7 4C8B4D00                	mov r9, qword [rbp]
 12943 00008DBB 4150                    	push r8
 12944 00008DBD 4151                    	push r9
 12945 00008DBF 41BA06000000            	mov r10, 2 + 4
 12946 00008DC5 4C8B5D18                	mov r11, COUNT
 12947 00008DC9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12948 00008DCE 4C8D65F8                	lea r12, [rbp - 8]
 12949                                  .L_tc_recycle_frame_loop_006b:
 12950 00008DD2 4983FA00                	cmp r10, 0
 12951 00008DD6 7414                    	je .L_tc_recycle_frame_done_006b
 12952 00008DD8 4D8B2C24                	mov r13, qword [r12]
 12953 00008DDC 4D892B                  	mov qword [r11], r13
 12954 00008DDF 49FFCA                  	dec r10
 12955 00008DE2 4983EB08                	sub r11, 8
 12956 00008DE6 4983EC08                	sub r12, 8
 12957 00008DEA EBE6                    	jmp .L_tc_recycle_frame_loop_006b
 12958                                  .L_tc_recycle_frame_done_006b:
 12959 00008DEC 498D6308                	lea rsp, [r11 + 8]
 12960 00008DF0 5D                      	pop rbp
 12961 00008DF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12962 00008DF4 EB59                    	jmp .L_if_end_0036
 12963                                  .L_if_else_0036:
 12964                                  	; Setting up for a tail-call
 12965 00008DF6 6A00                    	push 0
 12966 00008DF8 488B4510                	mov rax, ENV
 12967 00008DFC 488B00                  	mov rax, qword [rax + 8 * 0]
 12968 00008DFF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12969 00008E02 803804                  	cmp byte [rax], T_closure
 12970 00008E05 0F85D7D10000            	jne L_error_non_closure
 12971 00008E0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12972 00008E0E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 12973 00008E12 4C8B4D00                	mov r9, qword [rbp]
 12974 00008E16 4150                    	push r8
 12975 00008E18 4151                    	push r9
 12976 00008E1A 41BA04000000            	mov r10, 0 + 4
 12977 00008E20 4C8B5D18                	mov r11, COUNT
 12978 00008E24 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 12979 00008E29 4C8D65F8                	lea r12, [rbp - 8]
 12980                                  .L_tc_recycle_frame_loop_006c:
 12981 00008E2D 4983FA00                	cmp r10, 0
 12982 00008E31 7414                    	je .L_tc_recycle_frame_done_006c
 12983 00008E33 4D8B2C24                	mov r13, qword [r12]
 12984 00008E37 4D892B                  	mov qword [r11], r13
 12985 00008E3A 49FFCA                  	dec r10
 12986 00008E3D 4983EB08                	sub r11, 8
 12987 00008E41 4983EC08                	sub r12, 8
 12988 00008E45 EBE6                    	jmp .L_tc_recycle_frame_loop_006c
 12989                                  .L_tc_recycle_frame_done_006c:
 12990 00008E47 498D6308                	lea rsp, [r11 + 8]
 12991 00008E4B 5D                      	pop rbp
 12992 00008E4C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12993                                  .L_if_end_0036:
 12994                                  .L_if_end_0037:
 12995                                  .L_if_end_0038:
 12996 00008E4F E9C2050000              	jmp .L_if_end_0041
 12997                                  .L_if_else_0041:
 12998                                  	; preparing a non-tail-call
 12999 00008E54 488B4520                	mov rax, PARAM(0)	; param a
 13000 00008E58 50                      	push rax
 13001 00008E59 6A01                    	push 1	; arg count
 13002 00008E5B 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 13003 00008E63 803805                  	cmp byte [rax], T_undefined
 13004 00008E66 0F84F2D00000            	je L_error_fvar_undefined
 13005 00008E6C 803804                  	cmp byte [rax], T_closure
 13006 00008E6F 0F856DD10000            	jne L_error_non_closure
 13007 00008E75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13008 00008E78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13009 00008E7B 483D[02000000]          	cmp rax, sob_boolean_false
 13010 00008E81 0F8483020000            	je .L_if_else_0040
 13011                                  	; preparing a non-tail-call
 13012 00008E87 488B4528                	mov rax, PARAM(1)	; param b
 13013 00008E8B 50                      	push rax
 13014 00008E8C 6A01                    	push 1	; arg count
 13015 00008E8E 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 13016 00008E96 803805                  	cmp byte [rax], T_undefined
 13017 00008E99 0F84BFD00000            	je L_error_fvar_undefined
 13018 00008E9F 803804                  	cmp byte [rax], T_closure
 13019 00008EA2 0F853AD10000            	jne L_error_non_closure
 13020 00008EA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13021 00008EAB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13022 00008EAE 483D[02000000]          	cmp rax, sob_boolean_false
 13023 00008EB4 0F8492000000            	je .L_if_else_003b
 13024                                  	; Setting up for a tail-call
 13025 00008EBA 488B4520                	mov rax, PARAM(0)	; param a
 13026 00008EBE 50                      	push rax
 13027                                  	; preparing a non-tail-call
 13028 00008EBF 488B4528                	mov rax, PARAM(1)	; param b
 13029 00008EC3 50                      	push rax
 13030 00008EC4 6A01                    	push 1	; arg count
 13031 00008EC6 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13032 00008ECE 803805                  	cmp byte [rax], T_undefined
 13033 00008ED1 0F8487D00000            	je L_error_fvar_undefined
 13034 00008ED7 803804                  	cmp byte [rax], T_closure
 13035 00008EDA 0F8502D10000            	jne L_error_non_closure
 13036 00008EE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13037 00008EE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13038 00008EE6 50                      	push rax
 13039 00008EE7 6A02                    	push 2
 13040 00008EE9 488B0425[CE0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13041 00008EF1 803805                  	cmp byte [rax], T_undefined
 13042 00008EF4 0F8464D00000            	je L_error_fvar_undefined
 13043 00008EFA 803804                  	cmp byte [rax], T_closure
 13044 00008EFD 0F85DFD00000            	jne L_error_non_closure
 13045 00008F03 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13046 00008F06 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13047 00008F0A 4C8B4D00                	mov r9, qword [rbp]
 13048 00008F0E 4150                    	push r8
 13049 00008F10 4151                    	push r9
 13050 00008F12 41BA06000000            	mov r10, 2 + 4
 13051 00008F18 4C8B5D18                	mov r11, COUNT
 13052 00008F1C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13053 00008F21 4C8D65F8                	lea r12, [rbp - 8]
 13054                                  .L_tc_recycle_frame_loop_006d:
 13055 00008F25 4983FA00                	cmp r10, 0
 13056 00008F29 7414                    	je .L_tc_recycle_frame_done_006d
 13057 00008F2B 4D8B2C24                	mov r13, qword [r12]
 13058 00008F2F 4D892B                  	mov qword [r11], r13
 13059 00008F32 49FFCA                  	dec r10
 13060 00008F35 4983EB08                	sub r11, 8
 13061 00008F39 4983EC08                	sub r12, 8
 13062 00008F3D EBE6                    	jmp .L_tc_recycle_frame_loop_006d
 13063                                  .L_tc_recycle_frame_done_006d:
 13064 00008F3F 498D6308                	lea rsp, [r11 + 8]
 13065 00008F43 5D                      	pop rbp
 13066 00008F44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13067 00008F47 E9B9010000              	jmp .L_if_end_003b
 13068                                  .L_if_else_003b:
 13069                                  	; preparing a non-tail-call
 13070 00008F4C 488B4528                	mov rax, PARAM(1)	; param b
 13071 00008F50 50                      	push rax
 13072 00008F51 6A01                    	push 1	; arg count
 13073 00008F53 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 13074 00008F5B 803805                  	cmp byte [rax], T_undefined
 13075 00008F5E 0F84FACF0000            	je L_error_fvar_undefined
 13076 00008F64 803804                  	cmp byte [rax], T_closure
 13077 00008F67 0F8575D00000            	jne L_error_non_closure
 13078 00008F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13079 00008F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13080 00008F73 483D[02000000]          	cmp rax, sob_boolean_false
 13081 00008F79 746F                    	je .L_if_else_003a
 13082                                  	; Setting up for a tail-call
 13083 00008F7B 488B4520                	mov rax, PARAM(0)	; param a
 13084 00008F7F 50                      	push rax
 13085 00008F80 488B4528                	mov rax, PARAM(1)	; param b
 13086 00008F84 50                      	push rax
 13087 00008F85 6A02                    	push 2
 13088 00008F87 488B0425[CE0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13089 00008F8F 803805                  	cmp byte [rax], T_undefined
 13090 00008F92 0F84C6CF0000            	je L_error_fvar_undefined
 13091 00008F98 803804                  	cmp byte [rax], T_closure
 13092 00008F9B 0F8541D00000            	jne L_error_non_closure
 13093 00008FA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13094 00008FA4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13095 00008FA8 4C8B4D00                	mov r9, qword [rbp]
 13096 00008FAC 4150                    	push r8
 13097 00008FAE 4151                    	push r9
 13098 00008FB0 41BA06000000            	mov r10, 2 + 4
 13099 00008FB6 4C8B5D18                	mov r11, COUNT
 13100 00008FBA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13101 00008FBF 4C8D65F8                	lea r12, [rbp - 8]
 13102                                  .L_tc_recycle_frame_loop_006e:
 13103 00008FC3 4983FA00                	cmp r10, 0
 13104 00008FC7 7414                    	je .L_tc_recycle_frame_done_006e
 13105 00008FC9 4D8B2C24                	mov r13, qword [r12]
 13106 00008FCD 4D892B                  	mov qword [r11], r13
 13107 00008FD0 49FFCA                  	dec r10
 13108 00008FD3 4983EB08                	sub r11, 8
 13109 00008FD7 4983EC08                	sub r12, 8
 13110 00008FDB EBE6                    	jmp .L_tc_recycle_frame_loop_006e
 13111                                  .L_tc_recycle_frame_done_006e:
 13112 00008FDD 498D6308                	lea rsp, [r11 + 8]
 13113 00008FE1 5D                      	pop rbp
 13114 00008FE2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13115 00008FE5 E91B010000              	jmp .L_if_end_003a
 13116                                  .L_if_else_003a:
 13117                                  	; preparing a non-tail-call
 13118 00008FEA 488B4528                	mov rax, PARAM(1)	; param b
 13119 00008FEE 50                      	push rax
 13120 00008FEF 6A01                    	push 1	; arg count
 13121 00008FF1 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 13122 00008FF9 803805                  	cmp byte [rax], T_undefined
 13123 00008FFC 0F845CCF0000            	je L_error_fvar_undefined
 13124 00009002 803804                  	cmp byte [rax], T_closure
 13125 00009005 0F85D7CF0000            	jne L_error_non_closure
 13126 0000900B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13127 0000900E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13128 00009011 483D[02000000]          	cmp rax, sob_boolean_false
 13129 00009017 0F848F000000            	je .L_if_else_0039
 13130                                  	; Setting up for a tail-call
 13131                                  	; preparing a non-tail-call
 13132 0000901D 488B4520                	mov rax, PARAM(0)	; param a
 13133 00009021 50                      	push rax
 13134 00009022 6A01                    	push 1	; arg count
 13135 00009024 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 13136 0000902C 803805                  	cmp byte [rax], T_undefined
 13137 0000902F 0F8429CF0000            	je L_error_fvar_undefined
 13138 00009035 803804                  	cmp byte [rax], T_closure
 13139 00009038 0F85A4CF0000            	jne L_error_non_closure
 13140 0000903E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13141 00009041 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13142 00009044 50                      	push rax
 13143 00009045 488B4528                	mov rax, PARAM(1)	; param b
 13144 00009049 50                      	push rax
 13145 0000904A 6A02                    	push 2
 13146 0000904C 488B0425[DF0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13147 00009054 803805                  	cmp byte [rax], T_undefined
 13148 00009057 0F8401CF0000            	je L_error_fvar_undefined
 13149 0000905D 803804                  	cmp byte [rax], T_closure
 13150 00009060 0F857CCF0000            	jne L_error_non_closure
 13151 00009066 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13152 00009069 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13153 0000906D 4C8B4D00                	mov r9, qword [rbp]
 13154 00009071 4150                    	push r8
 13155 00009073 4151                    	push r9
 13156 00009075 41BA06000000            	mov r10, 2 + 4
 13157 0000907B 4C8B5D18                	mov r11, COUNT
 13158 0000907F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13159 00009084 4C8D65F8                	lea r12, [rbp - 8]
 13160                                  .L_tc_recycle_frame_loop_006f:
 13161 00009088 4983FA00                	cmp r10, 0
 13162 0000908C 7414                    	je .L_tc_recycle_frame_done_006f
 13163 0000908E 4D8B2C24                	mov r13, qword [r12]
 13164 00009092 4D892B                  	mov qword [r11], r13
 13165 00009095 49FFCA                  	dec r10
 13166 00009098 4983EB08                	sub r11, 8
 13167 0000909C 4983EC08                	sub r12, 8
 13168 000090A0 EBE6                    	jmp .L_tc_recycle_frame_loop_006f
 13169                                  .L_tc_recycle_frame_done_006f:
 13170 000090A2 498D6308                	lea rsp, [r11 + 8]
 13171 000090A6 5D                      	pop rbp
 13172 000090A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13173 000090AA EB59                    	jmp .L_if_end_0039
 13174                                  .L_if_else_0039:
 13175                                  	; Setting up for a tail-call
 13176 000090AC 6A00                    	push 0
 13177 000090AE 488B4510                	mov rax, ENV
 13178 000090B2 488B00                  	mov rax, qword [rax + 8 * 0]
 13179 000090B5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13180 000090B8 803804                  	cmp byte [rax], T_closure
 13181 000090BB 0F8521CF0000            	jne L_error_non_closure
 13182 000090C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13183 000090C4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13184 000090C8 4C8B4D00                	mov r9, qword [rbp]
 13185 000090CC 4150                    	push r8
 13186 000090CE 4151                    	push r9
 13187 000090D0 41BA04000000            	mov r10, 0 + 4
 13188 000090D6 4C8B5D18                	mov r11, COUNT
 13189 000090DA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13190 000090DF 4C8D65F8                	lea r12, [rbp - 8]
 13191                                  .L_tc_recycle_frame_loop_0070:
 13192 000090E3 4983FA00                	cmp r10, 0
 13193 000090E7 7414                    	je .L_tc_recycle_frame_done_0070
 13194 000090E9 4D8B2C24                	mov r13, qword [r12]
 13195 000090ED 4D892B                  	mov qword [r11], r13
 13196 000090F0 49FFCA                  	dec r10
 13197 000090F3 4983EB08                	sub r11, 8
 13198 000090F7 4983EC08                	sub r12, 8
 13199 000090FB EBE6                    	jmp .L_tc_recycle_frame_loop_0070
 13200                                  .L_tc_recycle_frame_done_0070:
 13201 000090FD 498D6308                	lea rsp, [r11 + 8]
 13202 00009101 5D                      	pop rbp
 13203 00009102 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13204                                  .L_if_end_0039:
 13205                                  .L_if_end_003a:
 13206                                  .L_if_end_003b:
 13207 00009105 E90C030000              	jmp .L_if_end_0040
 13208                                  .L_if_else_0040:
 13209                                  	; preparing a non-tail-call
 13210 0000910A 488B4520                	mov rax, PARAM(0)	; param a
 13211 0000910E 50                      	push rax
 13212 0000910F 6A01                    	push 1	; arg count
 13213 00009111 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 13214 00009119 803805                  	cmp byte [rax], T_undefined
 13215 0000911C 0F843CCE0000            	je L_error_fvar_undefined
 13216 00009122 803804                  	cmp byte [rax], T_closure
 13217 00009125 0F85B7CE0000            	jne L_error_non_closure
 13218 0000912B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13219 0000912E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13220 00009131 483D[02000000]          	cmp rax, sob_boolean_false
 13221 00009137 0F8480020000            	je .L_if_else_003f
 13222                                  	; preparing a non-tail-call
 13223 0000913D 488B4528                	mov rax, PARAM(1)	; param b
 13224 00009141 50                      	push rax
 13225 00009142 6A01                    	push 1	; arg count
 13226 00009144 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 13227 0000914C 803805                  	cmp byte [rax], T_undefined
 13228 0000914F 0F8409CE0000            	je L_error_fvar_undefined
 13229 00009155 803804                  	cmp byte [rax], T_closure
 13230 00009158 0F8584CE0000            	jne L_error_non_closure
 13231 0000915E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13232 00009161 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13233 00009164 483D[02000000]          	cmp rax, sob_boolean_false
 13234 0000916A 0F8492000000            	je .L_if_else_003e
 13235                                  	; Setting up for a tail-call
 13236 00009170 488B4520                	mov rax, PARAM(0)	; param a
 13237 00009174 50                      	push rax
 13238                                  	; preparing a non-tail-call
 13239 00009175 488B4528                	mov rax, PARAM(1)	; param b
 13240 00009179 50                      	push rax
 13241 0000917A 6A01                    	push 1	; arg count
 13242 0000917C 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 13243 00009184 803805                  	cmp byte [rax], T_undefined
 13244 00009187 0F84D1CD0000            	je L_error_fvar_undefined
 13245 0000918D 803804                  	cmp byte [rax], T_closure
 13246 00009190 0F854CCE0000            	jne L_error_non_closure
 13247 00009196 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13248 00009199 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13249 0000919C 50                      	push rax
 13250 0000919D 6A02                    	push 2
 13251 0000919F 488B0425[DF0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13252 000091A7 803805                  	cmp byte [rax], T_undefined
 13253 000091AA 0F84AECD0000            	je L_error_fvar_undefined
 13254 000091B0 803804                  	cmp byte [rax], T_closure
 13255 000091B3 0F8529CE0000            	jne L_error_non_closure
 13256 000091B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13257 000091BC 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13258 000091C0 4C8B4D00                	mov r9, qword [rbp]
 13259 000091C4 4150                    	push r8
 13260 000091C6 4151                    	push r9
 13261 000091C8 41BA06000000            	mov r10, 2 + 4
 13262 000091CE 4C8B5D18                	mov r11, COUNT
 13263 000091D2 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13264 000091D7 4C8D65F8                	lea r12, [rbp - 8]
 13265                                  .L_tc_recycle_frame_loop_0071:
 13266 000091DB 4983FA00                	cmp r10, 0
 13267 000091DF 7414                    	je .L_tc_recycle_frame_done_0071
 13268 000091E1 4D8B2C24                	mov r13, qword [r12]
 13269 000091E5 4D892B                  	mov qword [r11], r13
 13270 000091E8 49FFCA                  	dec r10
 13271 000091EB 4983EB08                	sub r11, 8
 13272 000091EF 4983EC08                	sub r12, 8
 13273 000091F3 EBE6                    	jmp .L_tc_recycle_frame_loop_0071
 13274                                  .L_tc_recycle_frame_done_0071:
 13275 000091F5 498D6308                	lea rsp, [r11 + 8]
 13276 000091F9 5D                      	pop rbp
 13277 000091FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13278 000091FD E9B9010000              	jmp .L_if_end_003e
 13279                                  .L_if_else_003e:
 13280                                  	; preparing a non-tail-call
 13281 00009202 488B4528                	mov rax, PARAM(1)	; param b
 13282 00009206 50                      	push rax
 13283 00009207 6A01                    	push 1	; arg count
 13284 00009209 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 13285 00009211 803805                  	cmp byte [rax], T_undefined
 13286 00009214 0F8444CD0000            	je L_error_fvar_undefined
 13287 0000921A 803804                  	cmp byte [rax], T_closure
 13288 0000921D 0F85BFCD0000            	jne L_error_non_closure
 13289 00009223 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13290 00009226 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13291 00009229 483D[02000000]          	cmp rax, sob_boolean_false
 13292 0000922F 0F8492000000            	je .L_if_else_003d
 13293                                  	; Setting up for a tail-call
 13294 00009235 488B4520                	mov rax, PARAM(0)	; param a
 13295 00009239 50                      	push rax
 13296                                  	; preparing a non-tail-call
 13297 0000923A 488B4528                	mov rax, PARAM(1)	; param b
 13298 0000923E 50                      	push rax
 13299 0000923F 6A01                    	push 1	; arg count
 13300 00009241 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 13301 00009249 803805                  	cmp byte [rax], T_undefined
 13302 0000924C 0F840CCD0000            	je L_error_fvar_undefined
 13303 00009252 803804                  	cmp byte [rax], T_closure
 13304 00009255 0F8587CD0000            	jne L_error_non_closure
 13305 0000925B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13306 0000925E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13307 00009261 50                      	push rax
 13308 00009262 6A02                    	push 2
 13309 00009264 488B0425[DF0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13310 0000926C 803805                  	cmp byte [rax], T_undefined
 13311 0000926F 0F84E9CC0000            	je L_error_fvar_undefined
 13312 00009275 803804                  	cmp byte [rax], T_closure
 13313 00009278 0F8564CD0000            	jne L_error_non_closure
 13314 0000927E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13315 00009281 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13316 00009285 4C8B4D00                	mov r9, qword [rbp]
 13317 00009289 4150                    	push r8
 13318 0000928B 4151                    	push r9
 13319 0000928D 41BA06000000            	mov r10, 2 + 4
 13320 00009293 4C8B5D18                	mov r11, COUNT
 13321 00009297 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13322 0000929C 4C8D65F8                	lea r12, [rbp - 8]
 13323                                  .L_tc_recycle_frame_loop_0072:
 13324 000092A0 4983FA00                	cmp r10, 0
 13325 000092A4 7414                    	je .L_tc_recycle_frame_done_0072
 13326 000092A6 4D8B2C24                	mov r13, qword [r12]
 13327 000092AA 4D892B                  	mov qword [r11], r13
 13328 000092AD 49FFCA                  	dec r10
 13329 000092B0 4983EB08                	sub r11, 8
 13330 000092B4 4983EC08                	sub r12, 8
 13331 000092B8 EBE6                    	jmp .L_tc_recycle_frame_loop_0072
 13332                                  .L_tc_recycle_frame_done_0072:
 13333 000092BA 498D6308                	lea rsp, [r11 + 8]
 13334 000092BE 5D                      	pop rbp
 13335 000092BF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13336 000092C2 E9F4000000              	jmp .L_if_end_003d
 13337                                  .L_if_else_003d:
 13338                                  	; preparing a non-tail-call
 13339 000092C7 488B4528                	mov rax, PARAM(1)	; param b
 13340 000092CB 50                      	push rax
 13341 000092CC 6A01                    	push 1	; arg count
 13342 000092CE 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 13343 000092D6 803805                  	cmp byte [rax], T_undefined
 13344 000092D9 0F847FCC0000            	je L_error_fvar_undefined
 13345 000092DF 803804                  	cmp byte [rax], T_closure
 13346 000092E2 0F85FACC0000            	jne L_error_non_closure
 13347 000092E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13348 000092EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13349 000092EE 483D[02000000]          	cmp rax, sob_boolean_false
 13350 000092F4 746C                    	je .L_if_else_003c
 13351                                  	; Setting up for a tail-call
 13352 000092F6 488B4520                	mov rax, PARAM(0)	; param a
 13353 000092FA 50                      	push rax
 13354 000092FB 488B4528                	mov rax, PARAM(1)	; param b
 13355 000092FF 50                      	push rax
 13356 00009300 6A02                    	push 2
 13357 00009302 488B0425[DF0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13358 0000930A 803805                  	cmp byte [rax], T_undefined
 13359 0000930D 0F844BCC0000            	je L_error_fvar_undefined
 13360 00009313 803804                  	cmp byte [rax], T_closure
 13361 00009316 0F85C6CC0000            	jne L_error_non_closure
 13362 0000931C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13363 0000931F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13364 00009323 4C8B4D00                	mov r9, qword [rbp]
 13365 00009327 4150                    	push r8
 13366 00009329 4151                    	push r9
 13367 0000932B 41BA06000000            	mov r10, 2 + 4
 13368 00009331 4C8B5D18                	mov r11, COUNT
 13369 00009335 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13370 0000933A 4C8D65F8                	lea r12, [rbp - 8]
 13371                                  .L_tc_recycle_frame_loop_0073:
 13372 0000933E 4983FA00                	cmp r10, 0
 13373 00009342 7414                    	je .L_tc_recycle_frame_done_0073
 13374 00009344 4D8B2C24                	mov r13, qword [r12]
 13375 00009348 4D892B                  	mov qword [r11], r13
 13376 0000934B 49FFCA                  	dec r10
 13377 0000934E 4983EB08                	sub r11, 8
 13378 00009352 4983EC08                	sub r12, 8
 13379 00009356 EBE6                    	jmp .L_tc_recycle_frame_loop_0073
 13380                                  .L_tc_recycle_frame_done_0073:
 13381 00009358 498D6308                	lea rsp, [r11 + 8]
 13382 0000935C 5D                      	pop rbp
 13383 0000935D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13384 00009360 EB59                    	jmp .L_if_end_003c
 13385                                  .L_if_else_003c:
 13386                                  	; Setting up for a tail-call
 13387 00009362 6A00                    	push 0
 13388 00009364 488B4510                	mov rax, ENV
 13389 00009368 488B00                  	mov rax, qword [rax + 8 * 0]
 13390 0000936B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13391 0000936E 803804                  	cmp byte [rax], T_closure
 13392 00009371 0F856BCC0000            	jne L_error_non_closure
 13393 00009377 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13394 0000937A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13395 0000937E 4C8B4D00                	mov r9, qword [rbp]
 13396 00009382 4150                    	push r8
 13397 00009384 4151                    	push r9
 13398 00009386 41BA04000000            	mov r10, 0 + 4
 13399 0000938C 4C8B5D18                	mov r11, COUNT
 13400 00009390 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13401 00009395 4C8D65F8                	lea r12, [rbp - 8]
 13402                                  .L_tc_recycle_frame_loop_0074:
 13403 00009399 4983FA00                	cmp r10, 0
 13404 0000939D 7414                    	je .L_tc_recycle_frame_done_0074
 13405 0000939F 4D8B2C24                	mov r13, qword [r12]
 13406 000093A3 4D892B                  	mov qword [r11], r13
 13407 000093A6 49FFCA                  	dec r10
 13408 000093A9 4983EB08                	sub r11, 8
 13409 000093AD 4983EC08                	sub r12, 8
 13410 000093B1 EBE6                    	jmp .L_tc_recycle_frame_loop_0074
 13411                                  .L_tc_recycle_frame_done_0074:
 13412 000093B3 498D6308                	lea rsp, [r11 + 8]
 13413 000093B7 5D                      	pop rbp
 13414 000093B8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13415                                  .L_if_end_003c:
 13416                                  .L_if_end_003d:
 13417                                  .L_if_end_003e:
 13418 000093BB EB59                    	jmp .L_if_end_003f
 13419                                  .L_if_else_003f:
 13420                                  	; Setting up for a tail-call
 13421 000093BD 6A00                    	push 0
 13422 000093BF 488B4510                	mov rax, ENV
 13423 000093C3 488B00                  	mov rax, qword [rax + 8 * 0]
 13424 000093C6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13425 000093C9 803804                  	cmp byte [rax], T_closure
 13426 000093CC 0F8510CC0000            	jne L_error_non_closure
 13427 000093D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13428 000093D5 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13429 000093D9 4C8B4D00                	mov r9, qword [rbp]
 13430 000093DD 4150                    	push r8
 13431 000093DF 4151                    	push r9
 13432 000093E1 41BA04000000            	mov r10, 0 + 4
 13433 000093E7 4C8B5D18                	mov r11, COUNT
 13434 000093EB 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13435 000093F0 4C8D65F8                	lea r12, [rbp - 8]
 13436                                  .L_tc_recycle_frame_loop_0075:
 13437 000093F4 4983FA00                	cmp r10, 0
 13438 000093F8 7414                    	je .L_tc_recycle_frame_done_0075
 13439 000093FA 4D8B2C24                	mov r13, qword [r12]
 13440 000093FE 4D892B                  	mov qword [r11], r13
 13441 00009401 49FFCA                  	dec r10
 13442 00009404 4983EB08                	sub r11, 8
 13443 00009408 4983EC08                	sub r12, 8
 13444 0000940C EBE6                    	jmp .L_tc_recycle_frame_loop_0075
 13445                                  .L_tc_recycle_frame_done_0075:
 13446 0000940E 498D6308                	lea rsp, [r11 + 8]
 13447 00009412 5D                      	pop rbp
 13448 00009413 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13449                                  .L_if_end_003f:
 13450                                  .L_if_end_0040:
 13451                                  .L_if_end_0041:
 13452 00009416 C9                      	leave
 13453 00009417 C22000                  	ret AND_KILL_FRAME(2)
 13454                                  .L_lambda_simple_end_0048:	; new closure is in rax
 13455 0000941A 50                      	push rax
 13456 0000941B 6A01                    	push 1
 13457 0000941D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13458 00009422 E864CC0000              	call malloc
 13459 00009427 50                      	push rax
 13460 00009428 BF08000000              	mov rdi, 8 * 1	; new rib
 13461 0000942D E859CC0000              	call malloc
 13462 00009432 50                      	push rax
 13463 00009433 BF10000000              	mov rdi, 8 * 2	; extended env
 13464 00009438 E84ECC0000              	call malloc
 13465 0000943D 488B7D10                	mov rdi, ENV
 13466 00009441 BE00000000              	mov rsi, 0
 13467 00009446 BA01000000              	mov rdx, 1
 13468                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13469 0000944B 4883FE01                	cmp rsi, 1
 13470 0000944F 7410                    	je .L_lambda_simple_env_end_0049
 13471 00009451 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13472 00009455 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13473 00009459 48FFC6                  	inc rsi
 13474 0000945C 48FFC2                  	inc rdx
 13475 0000945F EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13476                                  .L_lambda_simple_env_end_0049:
 13477 00009461 5B                      	pop rbx
 13478 00009462 BE00000000              	mov rsi, 0
 13479                                  .L_lambda_simple_params_loop_0049:	; copy params
 13480 00009467 4883FE01                	cmp rsi, 1
 13481 0000946B 740E                    	je .L_lambda_simple_params_end_0049
 13482 0000946D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13483 00009472 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13484 00009476 48FFC6                  	inc rsi
 13485 00009479 EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13486                                  .L_lambda_simple_params_end_0049:
 13487 0000947B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13488 0000947E 4889C3                  	mov rbx, rax
 13489 00009481 58                      	pop rax
 13490 00009482 C60004                  	mov byte [rax], T_closure
 13491 00009485 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13492 00009489 48C74009[96940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13493 00009491 E9AD040000              	jmp .L_lambda_simple_end_0049
 13494                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13495 00009496 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13496 0000949C 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13497 0000949E FF742410                	push qword [rsp + 8 * 2]
 13498 000094A2 6A01                    	push 1
 13499 000094A4 E99BCB0000              	jmp L_error_incorrect_arity_simple
 13500                                  .L_lambda_simple_arity_check_ok_0049:
 13501 000094A9 C8000000                	enter 0, 0
 13502                                  	; Setting up for a tail-call
 13503 000094AD 6A00                    	push 0
 13504 000094AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13505 000094B4 E8D2CB0000              	call malloc
 13506 000094B9 50                      	push rax
 13507 000094BA BF08000000              	mov rdi, 8 * 1	; new rib
 13508 000094BF E8C7CB0000              	call malloc
 13509 000094C4 50                      	push rax
 13510 000094C5 BF18000000              	mov rdi, 8 * 3	; extended env
 13511 000094CA E8BCCB0000              	call malloc
 13512 000094CF 488B7D10                	mov rdi, ENV
 13513 000094D3 BE00000000              	mov rsi, 0
 13514 000094D8 BA01000000              	mov rdx, 1
 13515                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13516 000094DD 4883FE02                	cmp rsi, 2
 13517 000094E1 7410                    	je .L_lambda_simple_env_end_004a
 13518 000094E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13519 000094E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13520 000094EB 48FFC6                  	inc rsi
 13521 000094EE 48FFC2                  	inc rdx
 13522 000094F1 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13523                                  .L_lambda_simple_env_end_004a:
 13524 000094F3 5B                      	pop rbx
 13525 000094F4 BE00000000              	mov rsi, 0
 13526                                  .L_lambda_simple_params_loop_004a:	; copy params
 13527 000094F9 4883FE01                	cmp rsi, 1
 13528 000094FD 740E                    	je .L_lambda_simple_params_end_004a
 13529 000094FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13530 00009504 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13531 00009508 48FFC6                  	inc rsi
 13532 0000950B EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13533                                  .L_lambda_simple_params_end_004a:
 13534 0000950D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13535 00009510 4889C3                  	mov rbx, rax
 13536 00009513 58                      	pop rax
 13537 00009514 C60004                  	mov byte [rax], T_closure
 13538 00009517 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13539 0000951B 48C74009[28950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13540 00009523 E9CA030000              	jmp .L_lambda_simple_end_004a
 13541                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13542 00009528 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13543 0000952E 740B                    	je .L_lambda_simple_arity_check_ok_004a
 13544 00009530 FF742410                	push qword [rsp + 8 * 2]
 13545 00009534 6A00                    	push 0
 13546 00009536 E909CB0000              	jmp L_error_incorrect_arity_simple
 13547                                  .L_lambda_simple_arity_check_ok_004a:
 13548 0000953B C8000000                	enter 0, 0
 13549 0000953F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13550 00009544 E842CB0000              	call malloc
 13551 00009549 50                      	push rax
 13552 0000954A BF00000000              	mov rdi, 8 * 0	; new rib
 13553 0000954F E837CB0000              	call malloc
 13554 00009554 50                      	push rax
 13555 00009555 BF20000000              	mov rdi, 8 * 4	; extended env
 13556 0000955A E82CCB0000              	call malloc
 13557 0000955F 488B7D10                	mov rdi, ENV
 13558 00009563 BE00000000              	mov rsi, 0
 13559 00009568 BA01000000              	mov rdx, 1
 13560                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13561 0000956D 4883FE03                	cmp rsi, 3
 13562 00009571 7410                    	je .L_lambda_opt_env_end_000d
 13563 00009573 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13564 00009577 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13565 0000957B 48FFC6                  	inc rsi
 13566 0000957E 48FFC2                  	inc rdx
 13567 00009581 EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13568                                  .L_lambda_opt_env_end_000d:
 13569 00009583 5B                      	pop rbx
 13570 00009584 BE00000000              	mov rsi, 0
 13571                                  .L_lambda_opt_params_loop_000d:	; copy params
 13572 00009589 4883FE00                	cmp rsi, 0
 13573 0000958D 740E                    	je .L_lambda_opt_params_end_000d
 13574 0000958F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13575 00009594 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13576 00009598 48FFC6                  	inc rsi
 13577 0000959B EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13578                                  .L_lambda_opt_params_end_000d:
 13579 0000959D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13580 000095A0 4889C3                  	mov rbx, rax
 13581 000095A3 58                      	pop rax
 13582 000095A4 C60004                  	mov byte [rax], T_closure
 13583 000095A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13584 000095AB 48C74009[B8950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13585 000095B3 E936030000              	jmp .L_lambda_opt_end_000d
 13586                                  .L_lambda_opt_code_000d:
 13587 000095B8 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 13588 000095BD 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 13589 000095C1 7407                    	je .L_lambda_opt_arity_check_exact_000d	; Jump if arity matches
 13590 000095C3 7F4C                    	jg .L_lambda_opt_arity_check_more_000d	; Jump if more arguments passed
 13591 000095C5 E98ECA0000              	jmp L_error_incorrect_arity_opt
 13592                                  .L_lambda_opt_arity_check_exact_000d:
 13593 000095CA 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 13594 000095CD 4983C603                	add r14, 3 ; add 3 first stack values
 13595 000095D1 41BF00000000            	mov r15, 0 ; r15 = index
 13596 000095D7 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 13597 000095DB 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 13598 000095E3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13599                                  .L_lambda_opt_stack_shrink_loop_000d:
 13600 000095E5 4983FE00                	cmp r14, 0
 13601 000095E9 7E11                    	jle .L_make_lambda_opt_exact_finish_000d
 13602 000095EB 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 13603 000095F0 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 13604 000095F4 49FFCE                  	dec r14 ; next loop value
 13605 000095F7 49FFC7                  	inc r15 ; update i
 13606 000095FA EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13607                                  .L_make_lambda_opt_exact_finish_000d:
 13608 000095FC 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 13609 00009604 49FFC2                  	inc r10
 13610 00009607 4C89542410              	mov qword [rsp + 8 * 2], r10
 13611 0000960C E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000d
 13612                                  .L_lambda_opt_arity_check_more_000d:
 13613 00009611 4D89D6                  	mov r14, r10 ; r14 = num args
 13614 00009614 4D89D7                  	mov r15, r10 ; r15 = num args
 13615 00009617 41B901000000            	mov r9, 1; r9 = number of params 
 13616 0000961D 4D29CE                  	sub r14, r9 ; r14 = extra args
 13617 00009620 4D01F1                  	add r9, r14 ; r9 = num args
 13618 00009623 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 13618 00009625 [0100000000000000] 
 13619 0000962D EB00                    	jmp .L_make_lambda_opt_arg_list_000d
 13620                                  .L_make_lambda_opt_arg_list_000d:
 13621 0000962F 4983FE00                	cmp r14, 0
 13622 00009633 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000d
 13623 00009635 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 13624 0000963A 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 13625 0000963D 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 13626 00009643 E843CA0000              	call malloc                         ; Allocate memory, result in rax
 13627 00009648 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 13628 0000964B 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 13629 0000964F 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 13630 00009653 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 13631 00009656 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 13632 00009659 49FFC9                  	dec r9                              ; args index minus 1
 13633 0000965C 49FFCE                  	dec r14                             ; next iteration
 13634 0000965F EBCE                    	jmp .L_make_lambda_opt_arg_list_000d
 13635                                  .L_make_lambda_opt_stack_fixed_000d:
 13636 00009661 4D89FE                  	mov r14, r15 ; r14 = num args
 13637 00009664 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 13638 00009667 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 13639 0000966B 41BA01000000            	mov r10, 1; r10 = num of params
 13640 00009671 4D29D6                  	sub r14, r10 ; r14 = extra args
 13641 00009674 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 13642 00009677 49FFCE                  	dec r14 ; how much we need to change stack wise?
 13643 0000967A 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 13644 0000967F EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000d
 13645                                  .L_lambda_opt_stack_shrink_loop_more_000d:
 13646 00009681 4983F800                	cmp r8, 0
 13647 00009685 7E15                    	jle .L_make_lambda_opt_more_finish_000d
 13648 00009687 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 13649 0000968B 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 13650 0000968F 4D8D26                  	lea r12, [r14]
 13651 00009692 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 13652 00009697 49FFC8                  	dec r8 ; next iteration
 13653 0000969A EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000d
 13654                                  .L_make_lambda_opt_more_finish_000d:
 13655 0000969C 4D89F8                  	mov r8, r15 ; num of args
 13656 0000969F 41BA01000000            	mov r10, 1
 13657 000096A5 4D29D0                  	sub r8, r10 ; num of new args
 13658 000096A8 49FFC0                  	inc r8
 13659 000096AB 4C89442420              	mov qword [rsp + 8 * 4], r8
 13660 000096B0 4883C410                	add rsp, 8 * 2  ; 
 13661 000096B4 EB00                    	jmp .L_lambda_opt_stack_adjusted_000d
 13662                                  .L_lambda_opt_stack_adjusted_000d:
 13663 000096B6 C8000000                	enter 0, 0
 13664                                  	; preparing a non-tail-call
 13665 000096BA 488B4528                	mov rax, PARAM(1)	; param s
 13666 000096BE 50                      	push rax
 13667 000096BF 6A01                    	push 1	; arg count
 13668 000096C1 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 13669 000096C9 803805                  	cmp byte [rax], T_undefined
 13670 000096CC 0F848CC80000            	je L_error_fvar_undefined
 13671 000096D2 803804                  	cmp byte [rax], T_closure
 13672 000096D5 0F8507C90000            	jne L_error_non_closure
 13673 000096DB FF7001                  	push SOB_CLOSURE_ENV(rax)
 13674 000096DE FF5009                  	call SOB_CLOSURE_CODE(rax)
 13675 000096E1 483D[02000000]          	cmp rax, sob_boolean_false
 13676 000096E7 746F                    	je .L_if_else_0042
 13677                                  	; Setting up for a tail-call
 13678 000096E9 48B8-                   	mov rax, L_constants + 2284
 13678 000096EB [EC08000000000000] 
 13679 000096F3 50                      	push rax
 13680 000096F4 488B4520                	mov rax, PARAM(0)	; param a
 13681 000096F8 50                      	push rax
 13682 000096F9 6A02                    	push 2
 13683 000096FB 488B4510                	mov rax, ENV
 13684 000096FF 488B4008                	mov rax, qword [rax + 8 * 1]
 13685 00009703 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13686 00009706 803804                  	cmp byte [rax], T_closure
 13687 00009709 0F85D3C80000            	jne L_error_non_closure
 13688 0000970F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13689 00009712 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13690 00009716 4C8B4D00                	mov r9, qword [rbp]
 13691 0000971A 4150                    	push r8
 13692 0000971C 4151                    	push r9
 13693 0000971E 41BA06000000            	mov r10, 2 + 4
 13694 00009724 4C8B5D18                	mov r11, COUNT
 13695 00009728 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13696 0000972D 4C8D65F8                	lea r12, [rbp - 8]
 13697                                  .L_tc_recycle_frame_loop_0076:
 13698 00009731 4983FA00                	cmp r10, 0
 13699 00009735 7414                    	je .L_tc_recycle_frame_done_0076
 13700 00009737 4D8B2C24                	mov r13, qword [r12]
 13701 0000973B 4D892B                  	mov qword [r11], r13
 13702 0000973E 49FFCA                  	dec r10
 13703 00009741 4983EB08                	sub r11, 8
 13704 00009745 4983EC08                	sub r12, 8
 13705 00009749 EBE6                    	jmp .L_tc_recycle_frame_loop_0076
 13706                                  .L_tc_recycle_frame_done_0076:
 13707 0000974B 498D6308                	lea rsp, [r11 + 8]
 13708 0000974F 5D                      	pop rbp
 13709 00009750 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13710 00009753 E992010000              	jmp .L_if_end_0042
 13711                                  .L_if_else_0042:
 13712                                  	; Setting up for a tail-call
 13713                                  	; preparing a non-tail-call
 13714 00009758 488B4528                	mov rax, PARAM(1)	; param s
 13715 0000975C 50                      	push rax
 13716 0000975D 48B8-                   	mov rax, L_constants + 2284
 13716 0000975F [EC08000000000000] 
 13717 00009767 50                      	push rax
 13718 00009768 488B0425[F10D0000]      	mov rax, qword [free_var_0]	; free var *
 13719 00009770 803805                  	cmp byte [rax], T_undefined
 13720 00009773 0F84E5C70000            	je L_error_fvar_undefined
 13721 00009779 50                      	push rax
 13722 0000977A 6A03                    	push 3	; arg count
 13723 0000977C 488B0425[A7130000]      	mov rax, qword [free_var_86]	; free var fold-left
 13724 00009784 803805                  	cmp byte [rax], T_undefined
 13725 00009787 0F84D1C70000            	je L_error_fvar_undefined
 13726 0000978D 803804                  	cmp byte [rax], T_closure
 13727 00009790 0F854CC80000            	jne L_error_non_closure
 13728 00009796 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13729 00009799 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13730 0000979C 50                      	push rax
 13731 0000979D 6A01                    	push 1
 13732 0000979F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13733 000097A4 E8E2C80000              	call malloc
 13734 000097A9 50                      	push rax
 13735 000097AA BF08000000              	mov rdi, 8 * 1	; new rib
 13736 000097AF E8D7C80000              	call malloc
 13737 000097B4 50                      	push rax
 13738 000097B5 BF28000000              	mov rdi, 8 * 5	; extended env
 13739 000097BA E8CCC80000              	call malloc
 13740 000097BF 488B7D10                	mov rdi, ENV
 13741 000097C3 BE00000000              	mov rsi, 0
 13742 000097C8 BA01000000              	mov rdx, 1
 13743                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 13744 000097CD 4883FE04                	cmp rsi, 4
 13745 000097D1 7410                    	je .L_lambda_simple_env_end_004b
 13746 000097D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13747 000097D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13748 000097DB 48FFC6                  	inc rsi
 13749 000097DE 48FFC2                  	inc rdx
 13750 000097E1 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 13751                                  .L_lambda_simple_env_end_004b:
 13752 000097E3 5B                      	pop rbx
 13753 000097E4 BE00000000              	mov rsi, 0
 13754                                  .L_lambda_simple_params_loop_004b:	; copy params
 13755 000097E9 4883FE01                	cmp rsi, 1
 13756 000097ED 740E                    	je .L_lambda_simple_params_end_004b
 13757 000097EF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13758 000097F4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13759 000097F8 48FFC6                  	inc rsi
 13760 000097FB EBEC                    	jmp .L_lambda_simple_params_loop_004b
 13761                                  .L_lambda_simple_params_end_004b:
 13762 000097FD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13763 00009800 4889C3                  	mov rbx, rax
 13764 00009803 58                      	pop rax
 13765 00009804 C60004                  	mov byte [rax], T_closure
 13766 00009807 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13767 0000980B 48C74009[18980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 13768 00009813 E985000000              	jmp .L_lambda_simple_end_004b
 13769                                  .L_lambda_simple_code_004b:	; lambda-simple body
 13770 00009818 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13771 0000981E 740B                    	je .L_lambda_simple_arity_check_ok_004b
 13772 00009820 FF742410                	push qword [rsp + 8 * 2]
 13773 00009824 6A01                    	push 1
 13774 00009826 E919C80000              	jmp L_error_incorrect_arity_simple
 13775                                  .L_lambda_simple_arity_check_ok_004b:
 13776 0000982B C8000000                	enter 0, 0
 13777                                  	; Setting up for a tail-call
 13778 0000982F 488B4510                	mov rax, ENV
 13779 00009833 488B00                  	mov rax, qword [rax + 8 * 0]
 13780 00009836 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13781 00009839 50                      	push rax
 13782 0000983A 488B4520                	mov rax, PARAM(0)	; param b
 13783 0000983E 50                      	push rax
 13784 0000983F 6A02                    	push 2
 13785 00009841 488B4510                	mov rax, ENV
 13786 00009845 488B4010                	mov rax, qword [rax + 8 * 2]
 13787 00009849 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13788 0000984C 803804                  	cmp byte [rax], T_closure
 13789 0000984F 0F858DC70000            	jne L_error_non_closure
 13790 00009855 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13791 00009858 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13792 0000985C 4C8B4D00                	mov r9, qword [rbp]
 13793 00009860 4150                    	push r8
 13794 00009862 4151                    	push r9
 13795 00009864 41BA06000000            	mov r10, 2 + 4
 13796 0000986A 4C8B5D18                	mov r11, COUNT
 13797 0000986E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13798 00009873 4C8D65F8                	lea r12, [rbp - 8]
 13799                                  .L_tc_recycle_frame_loop_0077:
 13800 00009877 4983FA00                	cmp r10, 0
 13801 0000987B 7414                    	je .L_tc_recycle_frame_done_0077
 13802 0000987D 4D8B2C24                	mov r13, qword [r12]
 13803 00009881 4D892B                  	mov qword [r11], r13
 13804 00009884 49FFCA                  	dec r10
 13805 00009887 4983EB08                	sub r11, 8
 13806 0000988B 4983EC08                	sub r12, 8
 13807 0000988F EBE6                    	jmp .L_tc_recycle_frame_loop_0077
 13808                                  .L_tc_recycle_frame_done_0077:
 13809 00009891 498D6308                	lea rsp, [r11 + 8]
 13810 00009895 5D                      	pop rbp
 13811 00009896 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13812 00009899 C9                      	leave
 13813 0000989A C21800                  	ret AND_KILL_FRAME(1)
 13814                                  .L_lambda_simple_end_004b:	; new closure is in rax
 13815 0000989D 803804                  	cmp byte [rax], T_closure
 13816 000098A0 0F853CC70000            	jne L_error_non_closure
 13817 000098A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13818 000098A9 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13819 000098AD 4C8B4D00                	mov r9, qword [rbp]
 13820 000098B1 4150                    	push r8
 13821 000098B3 4151                    	push r9
 13822 000098B5 41BA05000000            	mov r10, 1 + 4
 13823 000098BB 4C8B5D18                	mov r11, COUNT
 13824 000098BF 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13825 000098C4 4C8D65F8                	lea r12, [rbp - 8]
 13826                                  .L_tc_recycle_frame_loop_0078:
 13827 000098C8 4983FA00                	cmp r10, 0
 13828 000098CC 7414                    	je .L_tc_recycle_frame_done_0078
 13829 000098CE 4D8B2C24                	mov r13, qword [r12]
 13830 000098D2 4D892B                  	mov qword [r11], r13
 13831 000098D5 49FFCA                  	dec r10
 13832 000098D8 4983EB08                	sub r11, 8
 13833 000098DC 4983EC08                	sub r12, 8
 13834 000098E0 EBE6                    	jmp .L_tc_recycle_frame_loop_0078
 13835                                  .L_tc_recycle_frame_done_0078:
 13836 000098E2 498D6308                	lea rsp, [r11 + 8]
 13837 000098E6 5D                      	pop rbp
 13838 000098E7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13839                                  .L_if_end_0042:
 13840 000098EA C9                      	leave
 13841 000098EB C21800                  	ret AND_KILL_FRAME(1)
 13842                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13843 000098EE C9                      	leave
 13844 000098EF C21000                  	ret AND_KILL_FRAME(0)
 13845                                  .L_lambda_simple_end_004a:	; new closure is in rax
 13846 000098F2 803804                  	cmp byte [rax], T_closure
 13847 000098F5 0F85E7C60000            	jne L_error_non_closure
 13848 000098FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 13849 000098FE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13850 00009902 4C8B4D00                	mov r9, qword [rbp]
 13851 00009906 4150                    	push r8
 13852 00009908 4151                    	push r9
 13853 0000990A 41BA04000000            	mov r10, 0 + 4
 13854 00009910 4C8B5D18                	mov r11, COUNT
 13855 00009914 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13856 00009919 4C8D65F8                	lea r12, [rbp - 8]
 13857                                  .L_tc_recycle_frame_loop_0079:
 13858 0000991D 4983FA00                	cmp r10, 0
 13859 00009921 7414                    	je .L_tc_recycle_frame_done_0079
 13860 00009923 4D8B2C24                	mov r13, qword [r12]
 13861 00009927 4D892B                  	mov qword [r11], r13
 13862 0000992A 49FFCA                  	dec r10
 13863 0000992D 4983EB08                	sub r11, 8
 13864 00009931 4983EC08                	sub r12, 8
 13865 00009935 EBE6                    	jmp .L_tc_recycle_frame_loop_0079
 13866                                  .L_tc_recycle_frame_done_0079:
 13867 00009937 498D6308                	lea rsp, [r11 + 8]
 13868 0000993B 5D                      	pop rbp
 13869 0000993C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13870 0000993F C9                      	leave
 13871 00009940 C21800                  	ret AND_KILL_FRAME(1)
 13872                                  .L_lambda_simple_end_0049:	; new closure is in rax
 13873 00009943 803804                  	cmp byte [rax], T_closure
 13874 00009946 0F8596C60000            	jne L_error_non_closure
 13875 0000994C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13876 0000994F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 13877 00009953 4C8B4D00                	mov r9, qword [rbp]
 13878 00009957 4150                    	push r8
 13879 00009959 4151                    	push r9
 13880 0000995B 41BA05000000            	mov r10, 1 + 4
 13881 00009961 4C8B5D18                	mov r11, COUNT
 13882 00009965 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 13883 0000996A 4C8D65F8                	lea r12, [rbp - 8]
 13884                                  .L_tc_recycle_frame_loop_007a:
 13885 0000996E 4983FA00                	cmp r10, 0
 13886 00009972 7414                    	je .L_tc_recycle_frame_done_007a
 13887 00009974 4D8B2C24                	mov r13, qword [r12]
 13888 00009978 4D892B                  	mov qword [r11], r13
 13889 0000997B 49FFCA                  	dec r10
 13890 0000997E 4983EB08                	sub r11, 8
 13891 00009982 4983EC08                	sub r12, 8
 13892 00009986 EBE6                    	jmp .L_tc_recycle_frame_loop_007a
 13893                                  .L_tc_recycle_frame_done_007a:
 13894 00009988 498D6308                	lea rsp, [r11 + 8]
 13895 0000998C 5D                      	pop rbp
 13896 0000998D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13897 00009990 C9                      	leave
 13898 00009991 C21800                  	ret AND_KILL_FRAME(1)
 13899                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13900 00009994 803804                  	cmp byte [rax], T_closure
 13901 00009997 0F8545C60000            	jne L_error_non_closure
 13902 0000999D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13903 000099A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13904 000099A3 48890425[240E0000]      	mov qword [free_var_3], rax
 13905 000099AB 48B8-                   	mov rax, sob_void
 13905 000099AD [0000000000000000] 
 13906                                  
 13907 000099B5 4889C7                  	mov rdi, rax
 13908 000099B8 E823C90000              	call print_sexpr_if_not_void
 13909 000099BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13910 000099C2 E8C4C60000              	call malloc
 13911 000099C7 50                      	push rax
 13912 000099C8 BF00000000              	mov rdi, 8 * 0	; new rib
 13913 000099CD E8B9C60000              	call malloc
 13914 000099D2 50                      	push rax
 13915 000099D3 BF08000000              	mov rdi, 8 * 1	; extended env
 13916 000099D8 E8AEC60000              	call malloc
 13917 000099DD 488B7D10                	mov rdi, ENV
 13918 000099E1 BE00000000              	mov rsi, 0
 13919 000099E6 BA01000000              	mov rdx, 1
 13920                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 13921 000099EB 4883FE00                	cmp rsi, 0
 13922 000099EF 7410                    	je .L_lambda_simple_env_end_004c
 13923 000099F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13924 000099F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13925 000099F9 48FFC6                  	inc rsi
 13926 000099FC 48FFC2                  	inc rdx
 13927 000099FF EBEA                    	jmp .L_lambda_simple_env_loop_004c
 13928                                  .L_lambda_simple_env_end_004c:
 13929 00009A01 5B                      	pop rbx
 13930 00009A02 BE00000000              	mov rsi, 0
 13931                                  .L_lambda_simple_params_loop_004c:	; copy params
 13932 00009A07 4883FE00                	cmp rsi, 0
 13933 00009A0B 740E                    	je .L_lambda_simple_params_end_004c
 13934 00009A0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13935 00009A12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13936 00009A16 48FFC6                  	inc rsi
 13937 00009A19 EBEC                    	jmp .L_lambda_simple_params_loop_004c
 13938                                  .L_lambda_simple_params_end_004c:
 13939 00009A1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13940 00009A1E 4889C3                  	mov rbx, rax
 13941 00009A21 58                      	pop rax
 13942 00009A22 C60004                  	mov byte [rax], T_closure
 13943 00009A25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13944 00009A29 48C74009[369A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 13945 00009A31 E914010000              	jmp .L_lambda_simple_end_004c
 13946                                  .L_lambda_simple_code_004c:	; lambda-simple body
 13947 00009A36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13948 00009A3C 740B                    	je .L_lambda_simple_arity_check_ok_004c
 13949 00009A3E FF742410                	push qword [rsp + 8 * 2]
 13950 00009A42 6A01                    	push 1
 13951 00009A44 E9FBC50000              	jmp L_error_incorrect_arity_simple
 13952                                  .L_lambda_simple_arity_check_ok_004c:
 13953 00009A49 C8000000                	enter 0, 0
 13954                                  	; preparing a non-tail-call
 13955 00009A4D 488B4520                	mov rax, PARAM(0)	; param n
 13956 00009A51 50                      	push rax
 13957 00009A52 6A01                    	push 1	; arg count
 13958 00009A54 488B0425[1A180000]      	mov rax, qword [free_var_153]	; free var zero?
 13959 00009A5C 803805                  	cmp byte [rax], T_undefined
 13960 00009A5F 0F84F9C40000            	je L_error_fvar_undefined
 13961 00009A65 803804                  	cmp byte [rax], T_closure
 13962 00009A68 0F8574C50000            	jne L_error_non_closure
 13963 00009A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13964 00009A71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13965 00009A74 483D[02000000]          	cmp rax, sob_boolean_false
 13966 00009A7A 740F                    	je .L_if_else_0043
 13967 00009A7C 48B8-                   	mov rax, L_constants + 2284
 13967 00009A7E [EC08000000000000] 
 13968 00009A86 E9BB000000              	jmp .L_if_end_0043
 13969                                  .L_if_else_0043:
 13970                                  	; Setting up for a tail-call
 13971 00009A8B 488B4520                	mov rax, PARAM(0)	; param n
 13972 00009A8F 50                      	push rax
 13973                                  	; preparing a non-tail-call
 13974                                  	; preparing a non-tail-call
 13975 00009A90 48B8-                   	mov rax, L_constants + 2284
 13975 00009A92 [EC08000000000000] 
 13976 00009A9A 50                      	push rax
 13977 00009A9B 488B4520                	mov rax, PARAM(0)	; param n
 13978 00009A9F 50                      	push rax
 13979 00009AA0 6A02                    	push 2	; arg count
 13980 00009AA2 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 13981 00009AAA 803805                  	cmp byte [rax], T_undefined
 13982 00009AAD 0F84ABC40000            	je L_error_fvar_undefined
 13983 00009AB3 803804                  	cmp byte [rax], T_closure
 13984 00009AB6 0F8526C50000            	jne L_error_non_closure
 13985 00009ABC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13986 00009ABF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13987 00009AC2 50                      	push rax
 13988 00009AC3 6A01                    	push 1	; arg count
 13989 00009AC5 488B0425[96130000]      	mov rax, qword [free_var_85]	; free var fact
 13990 00009ACD 803805                  	cmp byte [rax], T_undefined
 13991 00009AD0 0F8488C40000            	je L_error_fvar_undefined
 13992 00009AD6 803804                  	cmp byte [rax], T_closure
 13993 00009AD9 0F8503C50000            	jne L_error_non_closure
 13994 00009ADF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13995 00009AE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13996 00009AE5 50                      	push rax
 13997 00009AE6 6A02                    	push 2
 13998 00009AE8 488B0425[F10D0000]      	mov rax, qword [free_var_0]	; free var *
 13999 00009AF0 803805                  	cmp byte [rax], T_undefined
 14000 00009AF3 0F8465C40000            	je L_error_fvar_undefined
 14001 00009AF9 803804                  	cmp byte [rax], T_closure
 14002 00009AFC 0F85E0C40000            	jne L_error_non_closure
 14003 00009B02 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14004 00009B05 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14005 00009B09 4C8B4D00                	mov r9, qword [rbp]
 14006 00009B0D 4150                    	push r8
 14007 00009B0F 4151                    	push r9
 14008 00009B11 41BA06000000            	mov r10, 2 + 4
 14009 00009B17 4C8B5D18                	mov r11, COUNT
 14010 00009B1B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14011 00009B20 4C8D65F8                	lea r12, [rbp - 8]
 14012                                  .L_tc_recycle_frame_loop_007b:
 14013 00009B24 4983FA00                	cmp r10, 0
 14014 00009B28 7414                    	je .L_tc_recycle_frame_done_007b
 14015 00009B2A 4D8B2C24                	mov r13, qword [r12]
 14016 00009B2E 4D892B                  	mov qword [r11], r13
 14017 00009B31 49FFCA                  	dec r10
 14018 00009B34 4983EB08                	sub r11, 8
 14019 00009B38 4983EC08                	sub r12, 8
 14020 00009B3C EBE6                    	jmp .L_tc_recycle_frame_loop_007b
 14021                                  .L_tc_recycle_frame_done_007b:
 14022 00009B3E 498D6308                	lea rsp, [r11 + 8]
 14023 00009B42 5D                      	pop rbp
 14024 00009B43 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14025                                  .L_if_end_0043:
 14026 00009B46 C9                      	leave
 14027 00009B47 C21800                  	ret AND_KILL_FRAME(1)
 14028                                  .L_lambda_simple_end_004c:	; new closure is in rax
 14029 00009B4A 48890425[96130000]      	mov qword [free_var_85], rax
 14030 00009B52 48B8-                   	mov rax, sob_void
 14030 00009B54 [0000000000000000] 
 14031                                  
 14032 00009B5C 4889C7                  	mov rdi, rax
 14033 00009B5F E87CC70000              	call print_sexpr_if_not_void
 14034 00009B64 48B8-                   	mov rax, L_constants + 0
 14034 00009B66 [0000000000000000] 
 14035 00009B6E 48890425[350E0000]      	mov qword [free_var_4], rax
 14036 00009B76 48B8-                   	mov rax, sob_void
 14036 00009B78 [0000000000000000] 
 14037                                  
 14038 00009B80 4889C7                  	mov rdi, rax
 14039 00009B83 E858C70000              	call print_sexpr_if_not_void
 14040 00009B88 48B8-                   	mov rax, L_constants + 0
 14040 00009B8A [0000000000000000] 
 14041 00009B92 48890425[460E0000]      	mov qword [free_var_5], rax
 14042 00009B9A 48B8-                   	mov rax, sob_void
 14042 00009B9C [0000000000000000] 
 14043                                  
 14044 00009BA4 4889C7                  	mov rdi, rax
 14045 00009BA7 E834C70000              	call print_sexpr_if_not_void
 14046 00009BAC 48B8-                   	mov rax, L_constants + 0
 14046 00009BAE [0000000000000000] 
 14047 00009BB6 48890425[680E0000]      	mov qword [free_var_7], rax
 14048 00009BBE 48B8-                   	mov rax, sob_void
 14048 00009BC0 [0000000000000000] 
 14049                                  
 14050 00009BC8 4889C7                  	mov rdi, rax
 14051 00009BCB E810C70000              	call print_sexpr_if_not_void
 14052 00009BD0 48B8-                   	mov rax, L_constants + 0
 14052 00009BD2 [0000000000000000] 
 14053 00009BDA 48890425[790E0000]      	mov qword [free_var_8], rax
 14054 00009BE2 48B8-                   	mov rax, sob_void
 14054 00009BE4 [0000000000000000] 
 14055                                  
 14056 00009BEC 4889C7                  	mov rdi, rax
 14057 00009BEF E8ECC60000              	call print_sexpr_if_not_void
 14058 00009BF4 48B8-                   	mov rax, L_constants + 0
 14058 00009BF6 [0000000000000000] 
 14059 00009BFE 48890425[570E0000]      	mov qword [free_var_6], rax
 14060 00009C06 48B8-                   	mov rax, sob_void
 14060 00009C08 [0000000000000000] 
 14061                                  
 14062 00009C10 4889C7                  	mov rdi, rax
 14063 00009C13 E8C8C60000              	call print_sexpr_if_not_void
 14064                                  	; preparing a non-tail-call
 14065 00009C18 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14066 00009C1D E869C40000              	call malloc
 14067 00009C22 50                      	push rax
 14068 00009C23 BF00000000              	mov rdi, 8 * 0	; new rib
 14069 00009C28 E85EC40000              	call malloc
 14070 00009C2D 50                      	push rax
 14071 00009C2E BF08000000              	mov rdi, 8 * 1	; extended env
 14072 00009C33 E853C40000              	call malloc
 14073 00009C38 488B7D10                	mov rdi, ENV
 14074 00009C3C BE00000000              	mov rsi, 0
 14075 00009C41 BA01000000              	mov rdx, 1
 14076                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14077 00009C46 4883FE00                	cmp rsi, 0
 14078 00009C4A 7410                    	je .L_lambda_simple_env_end_004d
 14079 00009C4C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14080 00009C50 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14081 00009C54 48FFC6                  	inc rsi
 14082 00009C57 48FFC2                  	inc rdx
 14083 00009C5A EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14084                                  .L_lambda_simple_env_end_004d:
 14085 00009C5C 5B                      	pop rbx
 14086 00009C5D BE00000000              	mov rsi, 0
 14087                                  .L_lambda_simple_params_loop_004d:	; copy params
 14088 00009C62 4883FE00                	cmp rsi, 0
 14089 00009C66 740E                    	je .L_lambda_simple_params_end_004d
 14090 00009C68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14091 00009C6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14092 00009C71 48FFC6                  	inc rsi
 14093 00009C74 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14094                                  .L_lambda_simple_params_end_004d:
 14095 00009C76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14096 00009C79 4889C3                  	mov rbx, rax
 14097 00009C7C 58                      	pop rax
 14098 00009C7D C60004                  	mov byte [rax], T_closure
 14099 00009C80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14100 00009C84 48C74009[919C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14101 00009C8C E991000000              	jmp .L_lambda_simple_end_004d
 14102                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14103 00009C91 48837C241000            	cmp qword [rsp + 8 * 2], 0
 14104 00009C97 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14105 00009C99 FF742410                	push qword [rsp + 8 * 2]
 14106 00009C9D 6A00                    	push 0
 14107 00009C9F E9A0C30000              	jmp L_error_incorrect_arity_simple
 14108                                  .L_lambda_simple_arity_check_ok_004d:
 14109 00009CA4 C8000000                	enter 0, 0
 14110                                  	; Setting up for a tail-call
 14111 00009CA8 48B8-                   	mov rax, L_constants + 2413
 14111 00009CAA [6D09000000000000] 
 14112 00009CB2 50                      	push rax
 14113 00009CB3 48B8-                   	mov rax, L_constants + 2422
 14113 00009CB5 [7609000000000000] 
 14114 00009CBD 50                      	push rax
 14115 00009CBE 6A02                    	push 2
 14116 00009CC0 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 14117 00009CC8 803805                  	cmp byte [rax], T_undefined
 14118 00009CCB 0F848DC20000            	je L_error_fvar_undefined
 14119 00009CD1 803804                  	cmp byte [rax], T_closure
 14120 00009CD4 0F8508C30000            	jne L_error_non_closure
 14121 00009CDA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14122 00009CDD 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14123 00009CE1 4C8B4D00                	mov r9, qword [rbp]
 14124 00009CE5 4150                    	push r8
 14125 00009CE7 4151                    	push r9
 14126 00009CE9 41BA06000000            	mov r10, 2 + 4
 14127 00009CEF 4C8B5D18                	mov r11, COUNT
 14128 00009CF3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14129 00009CF8 4C8D65F8                	lea r12, [rbp - 8]
 14130                                  .L_tc_recycle_frame_loop_007c:
 14131 00009CFC 4983FA00                	cmp r10, 0
 14132 00009D00 7414                    	je .L_tc_recycle_frame_done_007c
 14133 00009D02 4D8B2C24                	mov r13, qword [r12]
 14134 00009D06 4D892B                  	mov qword [r11], r13
 14135 00009D09 49FFCA                  	dec r10
 14136 00009D0C 4983EB08                	sub r11, 8
 14137 00009D10 4983EC08                	sub r12, 8
 14138 00009D14 EBE6                    	jmp .L_tc_recycle_frame_loop_007c
 14139                                  .L_tc_recycle_frame_done_007c:
 14140 00009D16 498D6308                	lea rsp, [r11 + 8]
 14141 00009D1A 5D                      	pop rbp
 14142 00009D1B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14143 00009D1E C9                      	leave
 14144 00009D1F C21000                  	ret AND_KILL_FRAME(0)
 14145                                  .L_lambda_simple_end_004d:	; new closure is in rax
 14146 00009D22 50                      	push rax
 14147 00009D23 6A01                    	push 1	; arg count
 14148 00009D25 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14149 00009D2A E85CC30000              	call malloc
 14150 00009D2F 50                      	push rax
 14151 00009D30 BF00000000              	mov rdi, 8 * 0	; new rib
 14152 00009D35 E851C30000              	call malloc
 14153 00009D3A 50                      	push rax
 14154 00009D3B BF08000000              	mov rdi, 8 * 1	; extended env
 14155 00009D40 E846C30000              	call malloc
 14156 00009D45 488B7D10                	mov rdi, ENV
 14157 00009D49 BE00000000              	mov rsi, 0
 14158 00009D4E BA01000000              	mov rdx, 1
 14159                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14160 00009D53 4883FE00                	cmp rsi, 0
 14161 00009D57 7410                    	je .L_lambda_simple_env_end_004e
 14162 00009D59 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14163 00009D5D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14164 00009D61 48FFC6                  	inc rsi
 14165 00009D64 48FFC2                  	inc rdx
 14166 00009D67 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14167                                  .L_lambda_simple_env_end_004e:
 14168 00009D69 5B                      	pop rbx
 14169 00009D6A BE00000000              	mov rsi, 0
 14170                                  .L_lambda_simple_params_loop_004e:	; copy params
 14171 00009D6F 4883FE00                	cmp rsi, 0
 14172 00009D73 740E                    	je .L_lambda_simple_params_end_004e
 14173 00009D75 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14174 00009D7A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14175 00009D7E 48FFC6                  	inc rsi
 14176 00009D81 EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14177                                  .L_lambda_simple_params_end_004e:
 14178 00009D83 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14179 00009D86 4889C3                  	mov rbx, rax
 14180 00009D89 58                      	pop rax
 14181 00009D8A C60004                  	mov byte [rax], T_closure
 14182 00009D8D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14183 00009D91 48C74009[9E9D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14184 00009D99 E9EB1A0000              	jmp .L_lambda_simple_end_004e
 14185                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14186 00009D9E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14187 00009DA4 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14188 00009DA6 FF742410                	push qword [rsp + 8 * 2]
 14189 00009DAA 6A01                    	push 1
 14190 00009DAC E993C20000              	jmp L_error_incorrect_arity_simple
 14191                                  .L_lambda_simple_arity_check_ok_004e:
 14192 00009DB1 C8000000                	enter 0, 0
 14193                                  	; Setting up for a tail-call
 14194 00009DB5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14195 00009DBA E8CCC20000              	call malloc
 14196 00009DBF 50                      	push rax
 14197 00009DC0 BF08000000              	mov rdi, 8 * 1	; new rib
 14198 00009DC5 E8C1C20000              	call malloc
 14199 00009DCA 50                      	push rax
 14200 00009DCB BF10000000              	mov rdi, 8 * 2	; extended env
 14201 00009DD0 E8B6C20000              	call malloc
 14202 00009DD5 488B7D10                	mov rdi, ENV
 14203 00009DD9 BE00000000              	mov rsi, 0
 14204 00009DDE BA01000000              	mov rdx, 1
 14205                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14206 00009DE3 4883FE01                	cmp rsi, 1
 14207 00009DE7 7410                    	je .L_lambda_simple_env_end_004f
 14208 00009DE9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14209 00009DED 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14210 00009DF1 48FFC6                  	inc rsi
 14211 00009DF4 48FFC2                  	inc rdx
 14212 00009DF7 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14213                                  .L_lambda_simple_env_end_004f:
 14214 00009DF9 5B                      	pop rbx
 14215 00009DFA BE00000000              	mov rsi, 0
 14216                                  .L_lambda_simple_params_loop_004f:	; copy params
 14217 00009DFF 4883FE01                	cmp rsi, 1
 14218 00009E03 740E                    	je .L_lambda_simple_params_end_004f
 14219 00009E05 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14220 00009E0A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14221 00009E0E 48FFC6                  	inc rsi
 14222 00009E11 EBEC                    	jmp .L_lambda_simple_params_loop_004f
 14223                                  .L_lambda_simple_params_end_004f:
 14224 00009E13 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14225 00009E16 4889C3                  	mov rbx, rax
 14226 00009E19 58                      	pop rax
 14227 00009E1A C60004                  	mov byte [rax], T_closure
 14228 00009E1D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14229 00009E21 48C74009[2E9E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 14230 00009E29 E9F4080000              	jmp .L_lambda_simple_end_004f
 14231                                  .L_lambda_simple_code_004f:	; lambda-simple body
 14232 00009E2E 48837C241003            	cmp qword [rsp + 8 * 2], 3
 14233 00009E34 740B                    	je .L_lambda_simple_arity_check_ok_004f
 14234 00009E36 FF742410                	push qword [rsp + 8 * 2]
 14235 00009E3A 6A03                    	push 3
 14236 00009E3C E903C20000              	jmp L_error_incorrect_arity_simple
 14237                                  .L_lambda_simple_arity_check_ok_004f:
 14238 00009E41 C8000000                	enter 0, 0
 14239 00009E45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14240 00009E4A E83CC20000              	call malloc
 14241 00009E4F 50                      	push rax
 14242 00009E50 BF18000000              	mov rdi, 8 * 3	; new rib
 14243 00009E55 E831C20000              	call malloc
 14244 00009E5A 50                      	push rax
 14245 00009E5B BF18000000              	mov rdi, 8 * 3	; extended env
 14246 00009E60 E826C20000              	call malloc
 14247 00009E65 488B7D10                	mov rdi, ENV
 14248 00009E69 BE00000000              	mov rsi, 0
 14249 00009E6E BA01000000              	mov rdx, 1
 14250                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 14251 00009E73 4883FE02                	cmp rsi, 2
 14252 00009E77 7410                    	je .L_lambda_simple_env_end_0050
 14253 00009E79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14254 00009E7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14255 00009E81 48FFC6                  	inc rsi
 14256 00009E84 48FFC2                  	inc rdx
 14257 00009E87 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 14258                                  .L_lambda_simple_env_end_0050:
 14259 00009E89 5B                      	pop rbx
 14260 00009E8A BE00000000              	mov rsi, 0
 14261                                  .L_lambda_simple_params_loop_0050:	; copy params
 14262 00009E8F 4883FE03                	cmp rsi, 3
 14263 00009E93 740E                    	je .L_lambda_simple_params_end_0050
 14264 00009E95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14265 00009E9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14266 00009E9E 48FFC6                  	inc rsi
 14267 00009EA1 EBEC                    	jmp .L_lambda_simple_params_loop_0050
 14268                                  .L_lambda_simple_params_end_0050:
 14269 00009EA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14270 00009EA6 4889C3                  	mov rbx, rax
 14271 00009EA9 58                      	pop rax
 14272 00009EAA C60004                  	mov byte [rax], T_closure
 14273 00009EAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14274 00009EB1 48C74009[BE9E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 14275 00009EB9 E960080000              	jmp .L_lambda_simple_end_0050
 14276                                  .L_lambda_simple_code_0050:	; lambda-simple body
 14277 00009EBE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14278 00009EC4 740B                    	je .L_lambda_simple_arity_check_ok_0050
 14279 00009EC6 FF742410                	push qword [rsp + 8 * 2]
 14280 00009ECA 6A02                    	push 2
 14281 00009ECC E973C10000              	jmp L_error_incorrect_arity_simple
 14282                                  .L_lambda_simple_arity_check_ok_0050:
 14283 00009ED1 C8000000                	enter 0, 0
 14284                                  	; preparing a non-tail-call
 14285 00009ED5 488B4520                	mov rax, PARAM(0)	; param a
 14286 00009ED9 50                      	push rax
 14287 00009EDA 6A01                    	push 1	; arg count
 14288 00009EDC 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 14289 00009EE4 803805                  	cmp byte [rax], T_undefined
 14290 00009EE7 0F8471C00000            	je L_error_fvar_undefined
 14291 00009EED 803804                  	cmp byte [rax], T_closure
 14292 00009EF0 0F85ECC00000            	jne L_error_non_closure
 14293 00009EF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14294 00009EF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14295 00009EFC 483D[02000000]          	cmp rax, sob_boolean_false
 14296 00009F02 0F8471020000            	je .L_if_else_004f
 14297                                  	; preparing a non-tail-call
 14298 00009F08 488B4528                	mov rax, PARAM(1)	; param b
 14299 00009F0C 50                      	push rax
 14300 00009F0D 6A01                    	push 1	; arg count
 14301 00009F0F 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 14302 00009F17 803805                  	cmp byte [rax], T_undefined
 14303 00009F1A 0F843EC00000            	je L_error_fvar_undefined
 14304 00009F20 803804                  	cmp byte [rax], T_closure
 14305 00009F23 0F85B9C00000            	jne L_error_non_closure
 14306 00009F29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14307 00009F2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14308 00009F2F 483D[02000000]          	cmp rax, sob_boolean_false
 14309 00009F35 7468                    	je .L_if_else_0046
 14310                                  	; Setting up for a tail-call
 14311 00009F37 488B4520                	mov rax, PARAM(0)	; param a
 14312 00009F3B 50                      	push rax
 14313 00009F3C 488B4528                	mov rax, PARAM(1)	; param b
 14314 00009F40 50                      	push rax
 14315 00009F41 6A02                    	push 2
 14316 00009F43 488B4510                	mov rax, ENV
 14317 00009F47 488B00                  	mov rax, qword [rax + 8 * 0]
 14318 00009F4A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14319 00009F4D 803804                  	cmp byte [rax], T_closure
 14320 00009F50 0F858CC00000            	jne L_error_non_closure
 14321 00009F56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14322 00009F59 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14323 00009F5D 4C8B4D00                	mov r9, qword [rbp]
 14324 00009F61 4150                    	push r8
 14325 00009F63 4151                    	push r9
 14326 00009F65 41BA06000000            	mov r10, 2 + 4
 14327 00009F6B 4C8B5D18                	mov r11, COUNT
 14328 00009F6F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14329 00009F74 4C8D65F8                	lea r12, [rbp - 8]
 14330                                  .L_tc_recycle_frame_loop_007d:
 14331 00009F78 4983FA00                	cmp r10, 0
 14332 00009F7C 7414                    	je .L_tc_recycle_frame_done_007d
 14333 00009F7E 4D8B2C24                	mov r13, qword [r12]
 14334 00009F82 4D892B                  	mov qword [r11], r13
 14335 00009F85 49FFCA                  	dec r10
 14336 00009F88 4983EB08                	sub r11, 8
 14337 00009F8C 4983EC08                	sub r12, 8
 14338 00009F90 EBE6                    	jmp .L_tc_recycle_frame_loop_007d
 14339                                  .L_tc_recycle_frame_done_007d:
 14340 00009F92 498D6308                	lea rsp, [r11 + 8]
 14341 00009F96 5D                      	pop rbp
 14342 00009F97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14343 00009F9A E9D5010000              	jmp .L_if_end_0046
 14344                                  .L_if_else_0046:
 14345                                  	; preparing a non-tail-call
 14346 00009F9F 488B4528                	mov rax, PARAM(1)	; param b
 14347 00009FA3 50                      	push rax
 14348 00009FA4 6A01                    	push 1	; arg count
 14349 00009FA6 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 14350 00009FAE 803805                  	cmp byte [rax], T_undefined
 14351 00009FB1 0F84A7BF0000            	je L_error_fvar_undefined
 14352 00009FB7 803804                  	cmp byte [rax], T_closure
 14353 00009FBA 0F8522C00000            	jne L_error_non_closure
 14354 00009FC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14355 00009FC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14356 00009FC6 483D[02000000]          	cmp rax, sob_boolean_false
 14357 00009FCC 0F848C000000            	je .L_if_else_0045
 14358                                  	; Setting up for a tail-call
 14359                                  	; preparing a non-tail-call
 14360 00009FD2 488B4520                	mov rax, PARAM(0)	; param a
 14361 00009FD6 50                      	push rax
 14362 00009FD7 6A01                    	push 1	; arg count
 14363 00009FD9 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14364 00009FE1 803805                  	cmp byte [rax], T_undefined
 14365 00009FE4 0F8474BF0000            	je L_error_fvar_undefined
 14366 00009FEA 803804                  	cmp byte [rax], T_closure
 14367 00009FED 0F85EFBF0000            	jne L_error_non_closure
 14368 00009FF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14369 00009FF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14370 00009FF9 50                      	push rax
 14371 00009FFA 488B4528                	mov rax, PARAM(1)	; param b
 14372 00009FFE 50                      	push rax
 14373 00009FFF 6A02                    	push 2
 14374 0000A001 488B4510                	mov rax, ENV
 14375 0000A005 488B00                  	mov rax, qword [rax + 8 * 0]
 14376 0000A008 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14377 0000A00C 803804                  	cmp byte [rax], T_closure
 14378 0000A00F 0F85CDBF0000            	jne L_error_non_closure
 14379 0000A015 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14380 0000A018 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14381 0000A01C 4C8B4D00                	mov r9, qword [rbp]
 14382 0000A020 4150                    	push r8
 14383 0000A022 4151                    	push r9
 14384 0000A024 41BA06000000            	mov r10, 2 + 4
 14385 0000A02A 4C8B5D18                	mov r11, COUNT
 14386 0000A02E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14387 0000A033 4C8D65F8                	lea r12, [rbp - 8]
 14388                                  .L_tc_recycle_frame_loop_007e:
 14389 0000A037 4983FA00                	cmp r10, 0
 14390 0000A03B 7414                    	je .L_tc_recycle_frame_done_007e
 14391 0000A03D 4D8B2C24                	mov r13, qword [r12]
 14392 0000A041 4D892B                  	mov qword [r11], r13
 14393 0000A044 49FFCA                  	dec r10
 14394 0000A047 4983EB08                	sub r11, 8
 14395 0000A04B 4983EC08                	sub r12, 8
 14396 0000A04F EBE6                    	jmp .L_tc_recycle_frame_loop_007e
 14397                                  .L_tc_recycle_frame_done_007e:
 14398 0000A051 498D6308                	lea rsp, [r11 + 8]
 14399 0000A055 5D                      	pop rbp
 14400 0000A056 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14401 0000A059 E916010000              	jmp .L_if_end_0045
 14402                                  .L_if_else_0045:
 14403                                  	; preparing a non-tail-call
 14404 0000A05E 488B4528                	mov rax, PARAM(1)	; param b
 14405 0000A062 50                      	push rax
 14406 0000A063 6A01                    	push 1	; arg count
 14407 0000A065 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 14408 0000A06D 803805                  	cmp byte [rax], T_undefined
 14409 0000A070 0F84E8BE0000            	je L_error_fvar_undefined
 14410 0000A076 803804                  	cmp byte [rax], T_closure
 14411 0000A079 0F8563BF0000            	jne L_error_non_closure
 14412 0000A07F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14413 0000A082 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14414 0000A085 483D[02000000]          	cmp rax, sob_boolean_false
 14415 0000A08B 0F8489000000            	je .L_if_else_0044
 14416                                  	; Setting up for a tail-call
 14417                                  	; preparing a non-tail-call
 14418 0000A091 488B4520                	mov rax, PARAM(0)	; param a
 14419 0000A095 50                      	push rax
 14420 0000A096 6A01                    	push 1	; arg count
 14421 0000A098 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 14422 0000A0A0 803805                  	cmp byte [rax], T_undefined
 14423 0000A0A3 0F84B5BE0000            	je L_error_fvar_undefined
 14424 0000A0A9 803804                  	cmp byte [rax], T_closure
 14425 0000A0AC 0F8530BF0000            	jne L_error_non_closure
 14426 0000A0B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14427 0000A0B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14428 0000A0B8 50                      	push rax
 14429 0000A0B9 488B4528                	mov rax, PARAM(1)	; param b
 14430 0000A0BD 50                      	push rax
 14431 0000A0BE 6A02                    	push 2
 14432 0000A0C0 488B4510                	mov rax, ENV
 14433 0000A0C4 488B00                  	mov rax, qword [rax + 8 * 0]
 14434 0000A0C7 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14435 0000A0CB 803804                  	cmp byte [rax], T_closure
 14436 0000A0CE 0F850EBF0000            	jne L_error_non_closure
 14437 0000A0D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14438 0000A0D7 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14439 0000A0DB 4C8B4D00                	mov r9, qword [rbp]
 14440 0000A0DF 4150                    	push r8
 14441 0000A0E1 4151                    	push r9
 14442 0000A0E3 41BA06000000            	mov r10, 2 + 4
 14443 0000A0E9 4C8B5D18                	mov r11, COUNT
 14444 0000A0ED 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14445 0000A0F2 4C8D65F8                	lea r12, [rbp - 8]
 14446                                  .L_tc_recycle_frame_loop_007f:
 14447 0000A0F6 4983FA00                	cmp r10, 0
 14448 0000A0FA 7414                    	je .L_tc_recycle_frame_done_007f
 14449 0000A0FC 4D8B2C24                	mov r13, qword [r12]
 14450 0000A100 4D892B                  	mov qword [r11], r13
 14451 0000A103 49FFCA                  	dec r10
 14452 0000A106 4983EB08                	sub r11, 8
 14453 0000A10A 4983EC08                	sub r12, 8
 14454 0000A10E EBE6                    	jmp .L_tc_recycle_frame_loop_007f
 14455                                  .L_tc_recycle_frame_done_007f:
 14456 0000A110 498D6308                	lea rsp, [r11 + 8]
 14457 0000A114 5D                      	pop rbp
 14458 0000A115 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14459 0000A118 EB5A                    	jmp .L_if_end_0044
 14460                                  .L_if_else_0044:
 14461                                  	; Setting up for a tail-call
 14462 0000A11A 6A00                    	push 0
 14463 0000A11C 488B4510                	mov rax, ENV
 14464 0000A120 488B4008                	mov rax, qword [rax + 8 * 1]
 14465 0000A124 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14466 0000A127 803804                  	cmp byte [rax], T_closure
 14467 0000A12A 0F85B2BE0000            	jne L_error_non_closure
 14468 0000A130 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14469 0000A133 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14470 0000A137 4C8B4D00                	mov r9, qword [rbp]
 14471 0000A13B 4150                    	push r8
 14472 0000A13D 4151                    	push r9
 14473 0000A13F 41BA04000000            	mov r10, 0 + 4
 14474 0000A145 4C8B5D18                	mov r11, COUNT
 14475 0000A149 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14476 0000A14E 4C8D65F8                	lea r12, [rbp - 8]
 14477                                  .L_tc_recycle_frame_loop_0080:
 14478 0000A152 4983FA00                	cmp r10, 0
 14479 0000A156 7414                    	je .L_tc_recycle_frame_done_0080
 14480 0000A158 4D8B2C24                	mov r13, qword [r12]
 14481 0000A15C 4D892B                  	mov qword [r11], r13
 14482 0000A15F 49FFCA                  	dec r10
 14483 0000A162 4983EB08                	sub r11, 8
 14484 0000A166 4983EC08                	sub r12, 8
 14485 0000A16A EBE6                    	jmp .L_tc_recycle_frame_loop_0080
 14486                                  .L_tc_recycle_frame_done_0080:
 14487 0000A16C 498D6308                	lea rsp, [r11 + 8]
 14488 0000A170 5D                      	pop rbp
 14489 0000A171 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14490                                  .L_if_end_0044:
 14491                                  .L_if_end_0045:
 14492                                  .L_if_end_0046:
 14493 0000A174 E9A1050000              	jmp .L_if_end_004f
 14494                                  .L_if_else_004f:
 14495                                  	; preparing a non-tail-call
 14496 0000A179 488B4520                	mov rax, PARAM(0)	; param a
 14497 0000A17D 50                      	push rax
 14498 0000A17E 6A01                    	push 1	; arg count
 14499 0000A180 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 14500 0000A188 803805                  	cmp byte [rax], T_undefined
 14501 0000A18B 0F84CDBD0000            	je L_error_fvar_undefined
 14502 0000A191 803804                  	cmp byte [rax], T_closure
 14503 0000A194 0F8548BE0000            	jne L_error_non_closure
 14504 0000A19A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14505 0000A19D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14506 0000A1A0 483D[02000000]          	cmp rax, sob_boolean_false
 14507 0000A1A6 0F8472020000            	je .L_if_else_004e
 14508                                  	; preparing a non-tail-call
 14509 0000A1AC 488B4528                	mov rax, PARAM(1)	; param b
 14510 0000A1B0 50                      	push rax
 14511 0000A1B1 6A01                    	push 1	; arg count
 14512 0000A1B3 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 14513 0000A1BB 803805                  	cmp byte [rax], T_undefined
 14514 0000A1BE 0F849ABD0000            	je L_error_fvar_undefined
 14515 0000A1C4 803804                  	cmp byte [rax], T_closure
 14516 0000A1C7 0F8515BE0000            	jne L_error_non_closure
 14517 0000A1CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14518 0000A1D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14519 0000A1D3 483D[02000000]          	cmp rax, sob_boolean_false
 14520 0000A1D9 0F848C000000            	je .L_if_else_0049
 14521                                  	; Setting up for a tail-call
 14522 0000A1DF 488B4520                	mov rax, PARAM(0)	; param a
 14523 0000A1E3 50                      	push rax
 14524                                  	; preparing a non-tail-call
 14525 0000A1E4 488B4528                	mov rax, PARAM(1)	; param b
 14526 0000A1E8 50                      	push rax
 14527 0000A1E9 6A01                    	push 1	; arg count
 14528 0000A1EB 488B0425[DE0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14529 0000A1F3 803805                  	cmp byte [rax], T_undefined
 14530 0000A1F6 0F8462BD0000            	je L_error_fvar_undefined
 14531 0000A1FC 803804                  	cmp byte [rax], T_closure
 14532 0000A1FF 0F85DDBD0000            	jne L_error_non_closure
 14533 0000A205 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14534 0000A208 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14535 0000A20B 50                      	push rax
 14536 0000A20C 6A02                    	push 2
 14537 0000A20E 488B4510                	mov rax, ENV
 14538 0000A212 488B00                  	mov rax, qword [rax + 8 * 0]
 14539 0000A215 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14540 0000A219 803804                  	cmp byte [rax], T_closure
 14541 0000A21C 0F85C0BD0000            	jne L_error_non_closure
 14542 0000A222 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14543 0000A225 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14544 0000A229 4C8B4D00                	mov r9, qword [rbp]
 14545 0000A22D 4150                    	push r8
 14546 0000A22F 4151                    	push r9
 14547 0000A231 41BA06000000            	mov r10, 2 + 4
 14548 0000A237 4C8B5D18                	mov r11, COUNT
 14549 0000A23B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14550 0000A240 4C8D65F8                	lea r12, [rbp - 8]
 14551                                  .L_tc_recycle_frame_loop_0081:
 14552 0000A244 4983FA00                	cmp r10, 0
 14553 0000A248 7414                    	je .L_tc_recycle_frame_done_0081
 14554 0000A24A 4D8B2C24                	mov r13, qword [r12]
 14555 0000A24E 4D892B                  	mov qword [r11], r13
 14556 0000A251 49FFCA                  	dec r10
 14557 0000A254 4983EB08                	sub r11, 8
 14558 0000A258 4983EC08                	sub r12, 8
 14559 0000A25C EBE6                    	jmp .L_tc_recycle_frame_loop_0081
 14560                                  .L_tc_recycle_frame_done_0081:
 14561 0000A25E 498D6308                	lea rsp, [r11 + 8]
 14562 0000A262 5D                      	pop rbp
 14563 0000A263 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14564 0000A266 E9AE010000              	jmp .L_if_end_0049
 14565                                  .L_if_else_0049:
 14566                                  	; preparing a non-tail-call
 14567 0000A26B 488B4528                	mov rax, PARAM(1)	; param b
 14568 0000A26F 50                      	push rax
 14569 0000A270 6A01                    	push 1	; arg count
 14570 0000A272 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 14571 0000A27A 803805                  	cmp byte [rax], T_undefined
 14572 0000A27D 0F84DBBC0000            	je L_error_fvar_undefined
 14573 0000A283 803804                  	cmp byte [rax], T_closure
 14574 0000A286 0F8556BD0000            	jne L_error_non_closure
 14575 0000A28C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14576 0000A28F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14577 0000A292 483D[02000000]          	cmp rax, sob_boolean_false
 14578 0000A298 7469                    	je .L_if_else_0048
 14579                                  	; Setting up for a tail-call
 14580 0000A29A 488B4520                	mov rax, PARAM(0)	; param a
 14581 0000A29E 50                      	push rax
 14582 0000A29F 488B4528                	mov rax, PARAM(1)	; param b
 14583 0000A2A3 50                      	push rax
 14584 0000A2A4 6A02                    	push 2
 14585 0000A2A6 488B4510                	mov rax, ENV
 14586 0000A2AA 488B00                  	mov rax, qword [rax + 8 * 0]
 14587 0000A2AD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14588 0000A2B1 803804                  	cmp byte [rax], T_closure
 14589 0000A2B4 0F8528BD0000            	jne L_error_non_closure
 14590 0000A2BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14591 0000A2BD 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14592 0000A2C1 4C8B4D00                	mov r9, qword [rbp]
 14593 0000A2C5 4150                    	push r8
 14594 0000A2C7 4151                    	push r9
 14595 0000A2C9 41BA06000000            	mov r10, 2 + 4
 14596 0000A2CF 4C8B5D18                	mov r11, COUNT
 14597 0000A2D3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14598 0000A2D8 4C8D65F8                	lea r12, [rbp - 8]
 14599                                  .L_tc_recycle_frame_loop_0082:
 14600 0000A2DC 4983FA00                	cmp r10, 0
 14601 0000A2E0 7414                    	je .L_tc_recycle_frame_done_0082
 14602 0000A2E2 4D8B2C24                	mov r13, qword [r12]
 14603 0000A2E6 4D892B                  	mov qword [r11], r13
 14604 0000A2E9 49FFCA                  	dec r10
 14605 0000A2EC 4983EB08                	sub r11, 8
 14606 0000A2F0 4983EC08                	sub r12, 8
 14607 0000A2F4 EBE6                    	jmp .L_tc_recycle_frame_loop_0082
 14608                                  .L_tc_recycle_frame_done_0082:
 14609 0000A2F6 498D6308                	lea rsp, [r11 + 8]
 14610 0000A2FA 5D                      	pop rbp
 14611 0000A2FB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14612 0000A2FE E916010000              	jmp .L_if_end_0048
 14613                                  .L_if_else_0048:
 14614                                  	; preparing a non-tail-call
 14615 0000A303 488B4528                	mov rax, PARAM(1)	; param b
 14616 0000A307 50                      	push rax
 14617 0000A308 6A01                    	push 1	; arg count
 14618 0000A30A 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 14619 0000A312 803805                  	cmp byte [rax], T_undefined
 14620 0000A315 0F8443BC0000            	je L_error_fvar_undefined
 14621 0000A31B 803804                  	cmp byte [rax], T_closure
 14622 0000A31E 0F85BEBC0000            	jne L_error_non_closure
 14623 0000A324 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14624 0000A327 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14625 0000A32A 483D[02000000]          	cmp rax, sob_boolean_false
 14626 0000A330 0F8489000000            	je .L_if_else_0047
 14627                                  	; Setting up for a tail-call
 14628                                  	; preparing a non-tail-call
 14629 0000A336 488B4520                	mov rax, PARAM(0)	; param a
 14630 0000A33A 50                      	push rax
 14631 0000A33B 6A01                    	push 1	; arg count
 14632 0000A33D 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 14633 0000A345 803805                  	cmp byte [rax], T_undefined
 14634 0000A348 0F8410BC0000            	je L_error_fvar_undefined
 14635 0000A34E 803804                  	cmp byte [rax], T_closure
 14636 0000A351 0F858BBC0000            	jne L_error_non_closure
 14637 0000A357 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14638 0000A35A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14639 0000A35D 50                      	push rax
 14640 0000A35E 488B4528                	mov rax, PARAM(1)	; param b
 14641 0000A362 50                      	push rax
 14642 0000A363 6A02                    	push 2
 14643 0000A365 488B4510                	mov rax, ENV
 14644 0000A369 488B00                  	mov rax, qword [rax + 8 * 0]
 14645 0000A36C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14646 0000A370 803804                  	cmp byte [rax], T_closure
 14647 0000A373 0F8569BC0000            	jne L_error_non_closure
 14648 0000A379 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14649 0000A37C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14650 0000A380 4C8B4D00                	mov r9, qword [rbp]
 14651 0000A384 4150                    	push r8
 14652 0000A386 4151                    	push r9
 14653 0000A388 41BA06000000            	mov r10, 2 + 4
 14654 0000A38E 4C8B5D18                	mov r11, COUNT
 14655 0000A392 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14656 0000A397 4C8D65F8                	lea r12, [rbp - 8]
 14657                                  .L_tc_recycle_frame_loop_0083:
 14658 0000A39B 4983FA00                	cmp r10, 0
 14659 0000A39F 7414                    	je .L_tc_recycle_frame_done_0083
 14660 0000A3A1 4D8B2C24                	mov r13, qword [r12]
 14661 0000A3A5 4D892B                  	mov qword [r11], r13
 14662 0000A3A8 49FFCA                  	dec r10
 14663 0000A3AB 4983EB08                	sub r11, 8
 14664 0000A3AF 4983EC08                	sub r12, 8
 14665 0000A3B3 EBE6                    	jmp .L_tc_recycle_frame_loop_0083
 14666                                  .L_tc_recycle_frame_done_0083:
 14667 0000A3B5 498D6308                	lea rsp, [r11 + 8]
 14668 0000A3B9 5D                      	pop rbp
 14669 0000A3BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14670 0000A3BD EB5A                    	jmp .L_if_end_0047
 14671                                  .L_if_else_0047:
 14672                                  	; Setting up for a tail-call
 14673 0000A3BF 6A00                    	push 0
 14674 0000A3C1 488B4510                	mov rax, ENV
 14675 0000A3C5 488B4008                	mov rax, qword [rax + 8 * 1]
 14676 0000A3C9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14677 0000A3CC 803804                  	cmp byte [rax], T_closure
 14678 0000A3CF 0F850DBC0000            	jne L_error_non_closure
 14679 0000A3D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14680 0000A3D8 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14681 0000A3DC 4C8B4D00                	mov r9, qword [rbp]
 14682 0000A3E0 4150                    	push r8
 14683 0000A3E2 4151                    	push r9
 14684 0000A3E4 41BA04000000            	mov r10, 0 + 4
 14685 0000A3EA 4C8B5D18                	mov r11, COUNT
 14686 0000A3EE 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14687 0000A3F3 4C8D65F8                	lea r12, [rbp - 8]
 14688                                  .L_tc_recycle_frame_loop_0084:
 14689 0000A3F7 4983FA00                	cmp r10, 0
 14690 0000A3FB 7414                    	je .L_tc_recycle_frame_done_0084
 14691 0000A3FD 4D8B2C24                	mov r13, qword [r12]
 14692 0000A401 4D892B                  	mov qword [r11], r13
 14693 0000A404 49FFCA                  	dec r10
 14694 0000A407 4983EB08                	sub r11, 8
 14695 0000A40B 4983EC08                	sub r12, 8
 14696 0000A40F EBE6                    	jmp .L_tc_recycle_frame_loop_0084
 14697                                  .L_tc_recycle_frame_done_0084:
 14698 0000A411 498D6308                	lea rsp, [r11 + 8]
 14699 0000A415 5D                      	pop rbp
 14700 0000A416 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14701                                  .L_if_end_0047:
 14702                                  .L_if_end_0048:
 14703                                  .L_if_end_0049:
 14704 0000A419 E9FC020000              	jmp .L_if_end_004e
 14705                                  .L_if_else_004e:
 14706                                  	; preparing a non-tail-call
 14707 0000A41E 488B4520                	mov rax, PARAM(0)	; param a
 14708 0000A422 50                      	push rax
 14709 0000A423 6A01                    	push 1	; arg count
 14710 0000A425 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 14711 0000A42D 803805                  	cmp byte [rax], T_undefined
 14712 0000A430 0F8428BB0000            	je L_error_fvar_undefined
 14713 0000A436 803804                  	cmp byte [rax], T_closure
 14714 0000A439 0F85A3BB0000            	jne L_error_non_closure
 14715 0000A43F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14716 0000A442 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14717 0000A445 483D[02000000]          	cmp rax, sob_boolean_false
 14718 0000A44B 0F846F020000            	je .L_if_else_004d
 14719                                  	; preparing a non-tail-call
 14720 0000A451 488B4528                	mov rax, PARAM(1)	; param b
 14721 0000A455 50                      	push rax
 14722 0000A456 6A01                    	push 1	; arg count
 14723 0000A458 488B0425[0D140000]      	mov rax, qword [free_var_92]	; free var integer?
 14724 0000A460 803805                  	cmp byte [rax], T_undefined
 14725 0000A463 0F84F5BA0000            	je L_error_fvar_undefined
 14726 0000A469 803804                  	cmp byte [rax], T_closure
 14727 0000A46C 0F8570BB0000            	jne L_error_non_closure
 14728 0000A472 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14729 0000A475 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14730 0000A478 483D[02000000]          	cmp rax, sob_boolean_false
 14731 0000A47E 0F848C000000            	je .L_if_else_004c
 14732                                  	; Setting up for a tail-call
 14733 0000A484 488B4520                	mov rax, PARAM(0)	; param a
 14734 0000A488 50                      	push rax
 14735                                  	; preparing a non-tail-call
 14736 0000A489 488B4528                	mov rax, PARAM(1)	; param b
 14737 0000A48D 50                      	push rax
 14738 0000A48E 6A01                    	push 1	; arg count
 14739 0000A490 488B0425[FC130000]      	mov rax, qword [free_var_91]	; free var integer->real
 14740 0000A498 803805                  	cmp byte [rax], T_undefined
 14741 0000A49B 0F84BDBA0000            	je L_error_fvar_undefined
 14742 0000A4A1 803804                  	cmp byte [rax], T_closure
 14743 0000A4A4 0F8538BB0000            	jne L_error_non_closure
 14744 0000A4AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14745 0000A4AD FF5009                  	call SOB_CLOSURE_CODE(rax)
 14746 0000A4B0 50                      	push rax
 14747 0000A4B1 6A02                    	push 2
 14748 0000A4B3 488B4510                	mov rax, ENV
 14749 0000A4B7 488B00                  	mov rax, qword [rax + 8 * 0]
 14750 0000A4BA 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14751 0000A4BE 803804                  	cmp byte [rax], T_closure
 14752 0000A4C1 0F851BBB0000            	jne L_error_non_closure
 14753 0000A4C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14754 0000A4CA 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14755 0000A4CE 4C8B4D00                	mov r9, qword [rbp]
 14756 0000A4D2 4150                    	push r8
 14757 0000A4D4 4151                    	push r9
 14758 0000A4D6 41BA06000000            	mov r10, 2 + 4
 14759 0000A4DC 4C8B5D18                	mov r11, COUNT
 14760 0000A4E0 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14761 0000A4E5 4C8D65F8                	lea r12, [rbp - 8]
 14762                                  .L_tc_recycle_frame_loop_0085:
 14763 0000A4E9 4983FA00                	cmp r10, 0
 14764 0000A4ED 7414                    	je .L_tc_recycle_frame_done_0085
 14765 0000A4EF 4D8B2C24                	mov r13, qword [r12]
 14766 0000A4F3 4D892B                  	mov qword [r11], r13
 14767 0000A4F6 49FFCA                  	dec r10
 14768 0000A4F9 4983EB08                	sub r11, 8
 14769 0000A4FD 4983EC08                	sub r12, 8
 14770 0000A501 EBE6                    	jmp .L_tc_recycle_frame_loop_0085
 14771                                  .L_tc_recycle_frame_done_0085:
 14772 0000A503 498D6308                	lea rsp, [r11 + 8]
 14773 0000A507 5D                      	pop rbp
 14774 0000A508 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14775 0000A50B E9AE010000              	jmp .L_if_end_004c
 14776                                  .L_if_else_004c:
 14777                                  	; preparing a non-tail-call
 14778 0000A510 488B4528                	mov rax, PARAM(1)	; param b
 14779 0000A514 50                      	push rax
 14780 0000A515 6A01                    	push 1	; arg count
 14781 0000A517 488B0425[DA130000]      	mov rax, qword [free_var_89]	; free var fraction?
 14782 0000A51F 803805                  	cmp byte [rax], T_undefined
 14783 0000A522 0F8436BA0000            	je L_error_fvar_undefined
 14784 0000A528 803804                  	cmp byte [rax], T_closure
 14785 0000A52B 0F85B1BA0000            	jne L_error_non_closure
 14786 0000A531 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14787 0000A534 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14788 0000A537 483D[02000000]          	cmp rax, sob_boolean_false
 14789 0000A53D 0F848C000000            	je .L_if_else_004b
 14790                                  	; Setting up for a tail-call
 14791 0000A543 488B4520                	mov rax, PARAM(0)	; param a
 14792 0000A547 50                      	push rax
 14793                                  	; preparing a non-tail-call
 14794 0000A548 488B4528                	mov rax, PARAM(1)	; param b
 14795 0000A54C 50                      	push rax
 14796 0000A54D 6A01                    	push 1	; arg count
 14797 0000A54F 488B0425[C9130000]      	mov rax, qword [free_var_88]	; free var fraction->real
 14798 0000A557 803805                  	cmp byte [rax], T_undefined
 14799 0000A55A 0F84FEB90000            	je L_error_fvar_undefined
 14800 0000A560 803804                  	cmp byte [rax], T_closure
 14801 0000A563 0F8579BA0000            	jne L_error_non_closure
 14802 0000A569 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14803 0000A56C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14804 0000A56F 50                      	push rax
 14805 0000A570 6A02                    	push 2
 14806 0000A572 488B4510                	mov rax, ENV
 14807 0000A576 488B00                  	mov rax, qword [rax + 8 * 0]
 14808 0000A579 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14809 0000A57D 803804                  	cmp byte [rax], T_closure
 14810 0000A580 0F855CBA0000            	jne L_error_non_closure
 14811 0000A586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14812 0000A589 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14813 0000A58D 4C8B4D00                	mov r9, qword [rbp]
 14814 0000A591 4150                    	push r8
 14815 0000A593 4151                    	push r9
 14816 0000A595 41BA06000000            	mov r10, 2 + 4
 14817 0000A59B 4C8B5D18                	mov r11, COUNT
 14818 0000A59F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14819 0000A5A4 4C8D65F8                	lea r12, [rbp - 8]
 14820                                  .L_tc_recycle_frame_loop_0086:
 14821 0000A5A8 4983FA00                	cmp r10, 0
 14822 0000A5AC 7414                    	je .L_tc_recycle_frame_done_0086
 14823 0000A5AE 4D8B2C24                	mov r13, qword [r12]
 14824 0000A5B2 4D892B                  	mov qword [r11], r13
 14825 0000A5B5 49FFCA                  	dec r10
 14826 0000A5B8 4983EB08                	sub r11, 8
 14827 0000A5BC 4983EC08                	sub r12, 8
 14828 0000A5C0 EBE6                    	jmp .L_tc_recycle_frame_loop_0086
 14829                                  .L_tc_recycle_frame_done_0086:
 14830 0000A5C2 498D6308                	lea rsp, [r11 + 8]
 14831 0000A5C6 5D                      	pop rbp
 14832 0000A5C7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14833 0000A5CA E9EF000000              	jmp .L_if_end_004b
 14834                                  .L_if_else_004b:
 14835                                  	; preparing a non-tail-call
 14836 0000A5CF 488B4528                	mov rax, PARAM(1)	; param b
 14837 0000A5D3 50                      	push rax
 14838 0000A5D4 6A01                    	push 1	; arg count
 14839 0000A5D6 488B0425[B6150000]      	mov rax, qword [free_var_117]	; free var real?
 14840 0000A5DE 803805                  	cmp byte [rax], T_undefined
 14841 0000A5E1 0F8477B90000            	je L_error_fvar_undefined
 14842 0000A5E7 803804                  	cmp byte [rax], T_closure
 14843 0000A5EA 0F85F2B90000            	jne L_error_non_closure
 14844 0000A5F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14845 0000A5F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14846 0000A5F6 483D[02000000]          	cmp rax, sob_boolean_false
 14847 0000A5FC 7466                    	je .L_if_else_004a
 14848                                  	; Setting up for a tail-call
 14849 0000A5FE 488B4520                	mov rax, PARAM(0)	; param a
 14850 0000A602 50                      	push rax
 14851 0000A603 488B4528                	mov rax, PARAM(1)	; param b
 14852 0000A607 50                      	push rax
 14853 0000A608 6A02                    	push 2
 14854 0000A60A 488B4510                	mov rax, ENV
 14855 0000A60E 488B00                  	mov rax, qword [rax + 8 * 0]
 14856 0000A611 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14857 0000A615 803804                  	cmp byte [rax], T_closure
 14858 0000A618 0F85C4B90000            	jne L_error_non_closure
 14859 0000A61E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14860 0000A621 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14861 0000A625 4C8B4D00                	mov r9, qword [rbp]
 14862 0000A629 4150                    	push r8
 14863 0000A62B 4151                    	push r9
 14864 0000A62D 41BA06000000            	mov r10, 2 + 4
 14865 0000A633 4C8B5D18                	mov r11, COUNT
 14866 0000A637 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14867 0000A63C 4C8D65F8                	lea r12, [rbp - 8]
 14868                                  .L_tc_recycle_frame_loop_0087:
 14869 0000A640 4983FA00                	cmp r10, 0
 14870 0000A644 7414                    	je .L_tc_recycle_frame_done_0087
 14871 0000A646 4D8B2C24                	mov r13, qword [r12]
 14872 0000A64A 4D892B                  	mov qword [r11], r13
 14873 0000A64D 49FFCA                  	dec r10
 14874 0000A650 4983EB08                	sub r11, 8
 14875 0000A654 4983EC08                	sub r12, 8
 14876 0000A658 EBE6                    	jmp .L_tc_recycle_frame_loop_0087
 14877                                  .L_tc_recycle_frame_done_0087:
 14878 0000A65A 498D6308                	lea rsp, [r11 + 8]
 14879 0000A65E 5D                      	pop rbp
 14880 0000A65F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14881 0000A662 EB5A                    	jmp .L_if_end_004a
 14882                                  .L_if_else_004a:
 14883                                  	; Setting up for a tail-call
 14884 0000A664 6A00                    	push 0
 14885 0000A666 488B4510                	mov rax, ENV
 14886 0000A66A 488B4008                	mov rax, qword [rax + 8 * 1]
 14887 0000A66E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14888 0000A671 803804                  	cmp byte [rax], T_closure
 14889 0000A674 0F8568B90000            	jne L_error_non_closure
 14890 0000A67A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14891 0000A67D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14892 0000A681 4C8B4D00                	mov r9, qword [rbp]
 14893 0000A685 4150                    	push r8
 14894 0000A687 4151                    	push r9
 14895 0000A689 41BA04000000            	mov r10, 0 + 4
 14896 0000A68F 4C8B5D18                	mov r11, COUNT
 14897 0000A693 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14898 0000A698 4C8D65F8                	lea r12, [rbp - 8]
 14899                                  .L_tc_recycle_frame_loop_0088:
 14900 0000A69C 4983FA00                	cmp r10, 0
 14901 0000A6A0 7414                    	je .L_tc_recycle_frame_done_0088
 14902 0000A6A2 4D8B2C24                	mov r13, qword [r12]
 14903 0000A6A6 4D892B                  	mov qword [r11], r13
 14904 0000A6A9 49FFCA                  	dec r10
 14905 0000A6AC 4983EB08                	sub r11, 8
 14906 0000A6B0 4983EC08                	sub r12, 8
 14907 0000A6B4 EBE6                    	jmp .L_tc_recycle_frame_loop_0088
 14908                                  .L_tc_recycle_frame_done_0088:
 14909 0000A6B6 498D6308                	lea rsp, [r11 + 8]
 14910 0000A6BA 5D                      	pop rbp
 14911 0000A6BB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14912                                  .L_if_end_004a:
 14913                                  .L_if_end_004b:
 14914                                  .L_if_end_004c:
 14915 0000A6BE EB5A                    	jmp .L_if_end_004d
 14916                                  .L_if_else_004d:
 14917                                  	; Setting up for a tail-call
 14918 0000A6C0 6A00                    	push 0
 14919 0000A6C2 488B4510                	mov rax, ENV
 14920 0000A6C6 488B4008                	mov rax, qword [rax + 8 * 1]
 14921 0000A6CA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14922 0000A6CD 803804                  	cmp byte [rax], T_closure
 14923 0000A6D0 0F850CB90000            	jne L_error_non_closure
 14924 0000A6D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14925 0000A6D9 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 14926 0000A6DD 4C8B4D00                	mov r9, qword [rbp]
 14927 0000A6E1 4150                    	push r8
 14928 0000A6E3 4151                    	push r9
 14929 0000A6E5 41BA04000000            	mov r10, 0 + 4
 14930 0000A6EB 4C8B5D18                	mov r11, COUNT
 14931 0000A6EF 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 14932 0000A6F4 4C8D65F8                	lea r12, [rbp - 8]
 14933                                  .L_tc_recycle_frame_loop_0089:
 14934 0000A6F8 4983FA00                	cmp r10, 0
 14935 0000A6FC 7414                    	je .L_tc_recycle_frame_done_0089
 14936 0000A6FE 4D8B2C24                	mov r13, qword [r12]
 14937 0000A702 4D892B                  	mov qword [r11], r13
 14938 0000A705 49FFCA                  	dec r10
 14939 0000A708 4983EB08                	sub r11, 8
 14940 0000A70C 4983EC08                	sub r12, 8
 14941 0000A710 EBE6                    	jmp .L_tc_recycle_frame_loop_0089
 14942                                  .L_tc_recycle_frame_done_0089:
 14943 0000A712 498D6308                	lea rsp, [r11 + 8]
 14944 0000A716 5D                      	pop rbp
 14945 0000A717 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14946                                  .L_if_end_004d:
 14947                                  .L_if_end_004e:
 14948                                  .L_if_end_004f:
 14949 0000A71A C9                      	leave
 14950 0000A71B C22000                  	ret AND_KILL_FRAME(2)
 14951                                  .L_lambda_simple_end_0050:	; new closure is in rax
 14952 0000A71E C9                      	leave
 14953 0000A71F C22800                  	ret AND_KILL_FRAME(3)
 14954                                  .L_lambda_simple_end_004f:	; new closure is in rax
 14955 0000A722 50                      	push rax
 14956 0000A723 6A01                    	push 1
 14957 0000A725 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14958 0000A72A E85CB90000              	call malloc
 14959 0000A72F 50                      	push rax
 14960 0000A730 BF08000000              	mov rdi, 8 * 1	; new rib
 14961 0000A735 E851B90000              	call malloc
 14962 0000A73A 50                      	push rax
 14963 0000A73B BF10000000              	mov rdi, 8 * 2	; extended env
 14964 0000A740 E846B90000              	call malloc
 14965 0000A745 488B7D10                	mov rdi, ENV
 14966 0000A749 BE00000000              	mov rsi, 0
 14967 0000A74E BA01000000              	mov rdx, 1
 14968                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 14969 0000A753 4883FE01                	cmp rsi, 1
 14970 0000A757 7410                    	je .L_lambda_simple_env_end_0051
 14971 0000A759 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14972 0000A75D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14973 0000A761 48FFC6                  	inc rsi
 14974 0000A764 48FFC2                  	inc rdx
 14975 0000A767 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 14976                                  .L_lambda_simple_env_end_0051:
 14977 0000A769 5B                      	pop rbx
 14978 0000A76A BE00000000              	mov rsi, 0
 14979                                  .L_lambda_simple_params_loop_0051:	; copy params
 14980 0000A76F 4883FE01                	cmp rsi, 1
 14981 0000A773 740E                    	je .L_lambda_simple_params_end_0051
 14982 0000A775 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14983 0000A77A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14984 0000A77E 48FFC6                  	inc rsi
 14985 0000A781 EBEC                    	jmp .L_lambda_simple_params_loop_0051
 14986                                  .L_lambda_simple_params_end_0051:
 14987 0000A783 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14988 0000A786 4889C3                  	mov rbx, rax
 14989 0000A789 58                      	pop rax
 14990 0000A78A C60004                  	mov byte [rax], T_closure
 14991 0000A78D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14992 0000A791 48C74009[9EA70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 14993 0000A799 E99A100000              	jmp .L_lambda_simple_end_0051
 14994                                  .L_lambda_simple_code_0051:	; lambda-simple body
 14995 0000A79E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14996 0000A7A4 740B                    	je .L_lambda_simple_arity_check_ok_0051
 14997 0000A7A6 FF742410                	push qword [rsp + 8 * 2]
 14998 0000A7AA 6A01                    	push 1
 14999 0000A7AC E993B80000              	jmp L_error_incorrect_arity_simple
 15000                                  .L_lambda_simple_arity_check_ok_0051:
 15001 0000A7B1 C8000000                	enter 0, 0
 15002                                  	; Setting up for a tail-call
 15003                                  	; preparing a non-tail-call
 15004 0000A7B5 488B0425[450F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 15005 0000A7BD 803805                  	cmp byte [rax], T_undefined
 15006 0000A7C0 0F8498B70000            	je L_error_fvar_undefined
 15007 0000A7C6 50                      	push rax
 15008 0000A7C7 488B0425[340F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 15009 0000A7CF 803805                  	cmp byte [rax], T_undefined
 15010 0000A7D2 0F8486B70000            	je L_error_fvar_undefined
 15011 0000A7D8 50                      	push rax
 15012 0000A7D9 488B0425[560F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 15013 0000A7E1 803805                  	cmp byte [rax], T_undefined
 15014 0000A7E4 0F8474B70000            	je L_error_fvar_undefined
 15015 0000A7EA 50                      	push rax
 15016 0000A7EB 6A03                    	push 3	; arg count
 15017 0000A7ED 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 15018 0000A7F1 803804                  	cmp byte [rax], T_closure
 15019 0000A7F4 0F85E8B70000            	jne L_error_non_closure
 15020 0000A7FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 15021 0000A7FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 15022 0000A800 50                      	push rax
 15023 0000A801 6A01                    	push 1
 15024 0000A803 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15025 0000A808 E87EB80000              	call malloc
 15026 0000A80D 50                      	push rax
 15027 0000A80E BF08000000              	mov rdi, 8 * 1	; new rib
 15028 0000A813 E873B80000              	call malloc
 15029 0000A818 50                      	push rax
 15030 0000A819 BF18000000              	mov rdi, 8 * 3	; extended env
 15031 0000A81E E868B80000              	call malloc
 15032 0000A823 488B7D10                	mov rdi, ENV
 15033 0000A827 BE00000000              	mov rsi, 0
 15034 0000A82C BA01000000              	mov rdx, 1
 15035                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15036 0000A831 4883FE02                	cmp rsi, 2
 15037 0000A835 7410                    	je .L_lambda_simple_env_end_0052
 15038 0000A837 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15039 0000A83B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15040 0000A83F 48FFC6                  	inc rsi
 15041 0000A842 48FFC2                  	inc rdx
 15042 0000A845 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15043                                  .L_lambda_simple_env_end_0052:
 15044 0000A847 5B                      	pop rbx
 15045 0000A848 BE00000000              	mov rsi, 0
 15046                                  .L_lambda_simple_params_loop_0052:	; copy params
 15047 0000A84D 4883FE01                	cmp rsi, 1
 15048 0000A851 740E                    	je .L_lambda_simple_params_end_0052
 15049 0000A853 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15050 0000A858 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15051 0000A85C 48FFC6                  	inc rsi
 15052 0000A85F EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15053                                  .L_lambda_simple_params_end_0052:
 15054 0000A861 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15055 0000A864 4889C3                  	mov rbx, rax
 15056 0000A867 58                      	pop rax
 15057 0000A868 C60004                  	mov byte [rax], T_closure
 15058 0000A86B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15059 0000A86F 48C74009[7CA80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15060 0000A877 E96B0F0000              	jmp .L_lambda_simple_end_0052
 15061                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15062 0000A87C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15063 0000A882 740B                    	je .L_lambda_simple_arity_check_ok_0052
 15064 0000A884 FF742410                	push qword [rsp + 8 * 2]
 15065 0000A888 6A01                    	push 1
 15066 0000A88A E9B5B70000              	jmp L_error_incorrect_arity_simple
 15067                                  .L_lambda_simple_arity_check_ok_0052:
 15068 0000A88F C8000000                	enter 0, 0
 15069                                  	; Setting up for a tail-call
 15070                                  	; preparing a non-tail-call
 15071 0000A893 488B0425[120F0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 15072 0000A89B 803805                  	cmp byte [rax], T_undefined
 15073 0000A89E 0F84BAB60000            	je L_error_fvar_undefined
 15074 0000A8A4 50                      	push rax
 15075 0000A8A5 488B0425[010F0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 15076 0000A8AD 803805                  	cmp byte [rax], T_undefined
 15077 0000A8B0 0F84A8B60000            	je L_error_fvar_undefined
 15078 0000A8B6 50                      	push rax
 15079 0000A8B7 488B0425[230F0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 15080 0000A8BF 803805                  	cmp byte [rax], T_undefined
 15081 0000A8C2 0F8496B60000            	je L_error_fvar_undefined
 15082 0000A8C8 50                      	push rax
 15083 0000A8C9 6A03                    	push 3	; arg count
 15084 0000A8CB 488B4510                	mov rax, ENV
 15085 0000A8CF 488B00                  	mov rax, qword [rax + 8 * 0]
 15086 0000A8D2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 15087 0000A8D5 803804                  	cmp byte [rax], T_closure
 15088 0000A8D8 0F8504B70000            	jne L_error_non_closure
 15089 0000A8DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15090 0000A8E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15091 0000A8E4 50                      	push rax
 15092 0000A8E5 6A01                    	push 1
 15093 0000A8E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15094 0000A8EC E89AB70000              	call malloc
 15095 0000A8F1 50                      	push rax
 15096 0000A8F2 BF08000000              	mov rdi, 8 * 1	; new rib
 15097 0000A8F7 E88FB70000              	call malloc
 15098 0000A8FC 50                      	push rax
 15099 0000A8FD BF20000000              	mov rdi, 8 * 4	; extended env
 15100 0000A902 E884B70000              	call malloc
 15101 0000A907 488B7D10                	mov rdi, ENV
 15102 0000A90B BE00000000              	mov rsi, 0
 15103 0000A910 BA01000000              	mov rdx, 1
 15104                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15105 0000A915 4883FE03                	cmp rsi, 3
 15106 0000A919 7410                    	je .L_lambda_simple_env_end_0053
 15107 0000A91B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15108 0000A91F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15109 0000A923 48FFC6                  	inc rsi
 15110 0000A926 48FFC2                  	inc rdx
 15111 0000A929 EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15112                                  .L_lambda_simple_env_end_0053:
 15113 0000A92B 5B                      	pop rbx
 15114 0000A92C BE00000000              	mov rsi, 0
 15115                                  .L_lambda_simple_params_loop_0053:	; copy params
 15116 0000A931 4883FE01                	cmp rsi, 1
 15117 0000A935 740E                    	je .L_lambda_simple_params_end_0053
 15118 0000A937 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15119 0000A93C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15120 0000A940 48FFC6                  	inc rsi
 15121 0000A943 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15122                                  .L_lambda_simple_params_end_0053:
 15123 0000A945 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15124 0000A948 4889C3                  	mov rbx, rax
 15125 0000A94B 58                      	pop rax
 15126 0000A94C C60004                  	mov byte [rax], T_closure
 15127 0000A94F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15128 0000A953 48C74009[60A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15129 0000A95B E9360E0000              	jmp .L_lambda_simple_end_0053
 15130                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15131 0000A960 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15132 0000A966 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15133 0000A968 FF742410                	push qword [rsp + 8 * 2]
 15134 0000A96C 6A01                    	push 1
 15135 0000A96E E9D1B60000              	jmp L_error_incorrect_arity_simple
 15136                                  .L_lambda_simple_arity_check_ok_0053:
 15137 0000A973 C8000000                	enter 0, 0
 15138                                  	; Setting up for a tail-call
 15139 0000A977 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15140 0000A97C E80AB70000              	call malloc
 15141 0000A981 50                      	push rax
 15142 0000A982 BF08000000              	mov rdi, 8 * 1	; new rib
 15143 0000A987 E8FFB60000              	call malloc
 15144 0000A98C 50                      	push rax
 15145 0000A98D BF28000000              	mov rdi, 8 * 5	; extended env
 15146 0000A992 E8F4B60000              	call malloc
 15147 0000A997 488B7D10                	mov rdi, ENV
 15148 0000A99B BE00000000              	mov rsi, 0
 15149 0000A9A0 BA01000000              	mov rdx, 1
 15150                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15151 0000A9A5 4883FE04                	cmp rsi, 4
 15152 0000A9A9 7410                    	je .L_lambda_simple_env_end_0054
 15153 0000A9AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15154 0000A9AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15155 0000A9B3 48FFC6                  	inc rsi
 15156 0000A9B6 48FFC2                  	inc rdx
 15157 0000A9B9 EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15158                                  .L_lambda_simple_env_end_0054:
 15159 0000A9BB 5B                      	pop rbx
 15160 0000A9BC BE00000000              	mov rsi, 0
 15161                                  .L_lambda_simple_params_loop_0054:	; copy params
 15162 0000A9C1 4883FE01                	cmp rsi, 1
 15163 0000A9C5 740E                    	je .L_lambda_simple_params_end_0054
 15164 0000A9C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15165 0000A9CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15166 0000A9D0 48FFC6                  	inc rsi
 15167 0000A9D3 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15168                                  .L_lambda_simple_params_end_0054:
 15169 0000A9D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15170 0000A9D8 4889C3                  	mov rbx, rax
 15171 0000A9DB 58                      	pop rax
 15172 0000A9DC C60004                  	mov byte [rax], T_closure
 15173 0000A9DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15174 0000A9E3 48C74009[F0A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15175 0000A9EB E9A2000000              	jmp .L_lambda_simple_end_0054
 15176                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15177 0000A9F0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15178 0000A9F6 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15179 0000A9F8 FF742410                	push qword [rsp + 8 * 2]
 15180 0000A9FC 6A02                    	push 2
 15181 0000A9FE E941B60000              	jmp L_error_incorrect_arity_simple
 15182                                  .L_lambda_simple_arity_check_ok_0054:
 15183 0000AA03 C8000000                	enter 0, 0
 15184                                  	; Setting up for a tail-call
 15185                                  	; preparing a non-tail-call
 15186 0000AA07 488B4528                	mov rax, PARAM(1)	; param b
 15187 0000AA0B 50                      	push rax
 15188 0000AA0C 488B4520                	mov rax, PARAM(0)	; param a
 15189 0000AA10 50                      	push rax
 15190 0000AA11 6A02                    	push 2	; arg count
 15191 0000AA13 488B4510                	mov rax, ENV
 15192 0000AA17 488B4008                	mov rax, qword [rax + 8 * 1]
 15193 0000AA1B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15194 0000AA1E 803804                  	cmp byte [rax], T_closure
 15195 0000AA21 0F85BBB50000            	jne L_error_non_closure
 15196 0000AA27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15197 0000AA2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15198 0000AA2D 50                      	push rax
 15199 0000AA2E 6A01                    	push 1
 15200 0000AA30 488B0425[0C150000]      	mov rax, qword [free_var_107]	; free var not
 15201 0000AA38 803805                  	cmp byte [rax], T_undefined
 15202 0000AA3B 0F841DB50000            	je L_error_fvar_undefined
 15203 0000AA41 803804                  	cmp byte [rax], T_closure
 15204 0000AA44 0F8598B50000            	jne L_error_non_closure
 15205 0000AA4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15206 0000AA4D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 15207 0000AA51 4C8B4D00                	mov r9, qword [rbp]
 15208 0000AA55 4150                    	push r8
 15209 0000AA57 4151                    	push r9
 15210 0000AA59 41BA05000000            	mov r10, 1 + 4
 15211 0000AA5F 4C8B5D18                	mov r11, COUNT
 15212 0000AA63 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 15213 0000AA68 4C8D65F8                	lea r12, [rbp - 8]
 15214                                  .L_tc_recycle_frame_loop_008a:
 15215 0000AA6C 4983FA00                	cmp r10, 0
 15216 0000AA70 7414                    	je .L_tc_recycle_frame_done_008a
 15217 0000AA72 4D8B2C24                	mov r13, qword [r12]
 15218 0000AA76 4D892B                  	mov qword [r11], r13
 15219 0000AA79 49FFCA                  	dec r10
 15220 0000AA7C 4983EB08                	sub r11, 8
 15221 0000AA80 4983EC08                	sub r12, 8
 15222 0000AA84 EBE6                    	jmp .L_tc_recycle_frame_loop_008a
 15223                                  .L_tc_recycle_frame_done_008a:
 15224 0000AA86 498D6308                	lea rsp, [r11 + 8]
 15225 0000AA8A 5D                      	pop rbp
 15226 0000AA8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15227 0000AA8E C9                      	leave
 15228 0000AA8F C22000                  	ret AND_KILL_FRAME(2)
 15229                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15230 0000AA92 50                      	push rax
 15231 0000AA93 6A01                    	push 1
 15232 0000AA95 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15233 0000AA9A E8ECB50000              	call malloc
 15234 0000AA9F 50                      	push rax
 15235 0000AAA0 BF08000000              	mov rdi, 8 * 1	; new rib
 15236 0000AAA5 E8E1B50000              	call malloc
 15237 0000AAAA 50                      	push rax
 15238 0000AAAB BF28000000              	mov rdi, 8 * 5	; extended env
 15239 0000AAB0 E8D6B50000              	call malloc
 15240 0000AAB5 488B7D10                	mov rdi, ENV
 15241 0000AAB9 BE00000000              	mov rsi, 0
 15242 0000AABE BA01000000              	mov rdx, 1
 15243                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15244 0000AAC3 4883FE04                	cmp rsi, 4
 15245 0000AAC7 7410                    	je .L_lambda_simple_env_end_0055
 15246 0000AAC9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15247 0000AACD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15248 0000AAD1 48FFC6                  	inc rsi
 15249 0000AAD4 48FFC2                  	inc rdx
 15250 0000AAD7 EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15251                                  .L_lambda_simple_env_end_0055:
 15252 0000AAD9 5B                      	pop rbx
 15253 0000AADA BE00000000              	mov rsi, 0
 15254                                  .L_lambda_simple_params_loop_0055:	; copy params
 15255 0000AADF 4883FE01                	cmp rsi, 1
 15256 0000AAE3 740E                    	je .L_lambda_simple_params_end_0055
 15257 0000AAE5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15258 0000AAEA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15259 0000AAEE 48FFC6                  	inc rsi
 15260 0000AAF1 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15261                                  .L_lambda_simple_params_end_0055:
 15262 0000AAF3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15263 0000AAF6 4889C3                  	mov rbx, rax
 15264 0000AAF9 58                      	pop rax
 15265 0000AAFA C60004                  	mov byte [rax], T_closure
 15266 0000AAFD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15267 0000AB01 48C74009[0EAB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15268 0000AB09 E9370C0000              	jmp .L_lambda_simple_end_0055
 15269                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15270 0000AB0E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15271 0000AB14 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15272 0000AB16 FF742410                	push qword [rsp + 8 * 2]
 15273 0000AB1A 6A01                    	push 1
 15274 0000AB1C E923B50000              	jmp L_error_incorrect_arity_simple
 15275                                  .L_lambda_simple_arity_check_ok_0055:
 15276 0000AB21 C8000000                	enter 0, 0
 15277                                  	; Setting up for a tail-call
 15278 0000AB25 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15279 0000AB2A E85CB50000              	call malloc
 15280 0000AB2F 50                      	push rax
 15281 0000AB30 BF08000000              	mov rdi, 8 * 1	; new rib
 15282 0000AB35 E851B50000              	call malloc
 15283 0000AB3A 50                      	push rax
 15284 0000AB3B BF30000000              	mov rdi, 8 * 6	; extended env
 15285 0000AB40 E846B50000              	call malloc
 15286 0000AB45 488B7D10                	mov rdi, ENV
 15287 0000AB49 BE00000000              	mov rsi, 0
 15288 0000AB4E BA01000000              	mov rdx, 1
 15289                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15290 0000AB53 4883FE05                	cmp rsi, 5
 15291 0000AB57 7410                    	je .L_lambda_simple_env_end_0056
 15292 0000AB59 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15293 0000AB5D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15294 0000AB61 48FFC6                  	inc rsi
 15295 0000AB64 48FFC2                  	inc rdx
 15296 0000AB67 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15297                                  .L_lambda_simple_env_end_0056:
 15298 0000AB69 5B                      	pop rbx
 15299 0000AB6A BE00000000              	mov rsi, 0
 15300                                  .L_lambda_simple_params_loop_0056:	; copy params
 15301 0000AB6F 4883FE01                	cmp rsi, 1
 15302 0000AB73 740E                    	je .L_lambda_simple_params_end_0056
 15303 0000AB75 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15304 0000AB7A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15305 0000AB7E 48FFC6                  	inc rsi
 15306 0000AB81 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15307                                  .L_lambda_simple_params_end_0056:
 15308 0000AB83 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15309 0000AB86 4889C3                  	mov rbx, rax
 15310 0000AB89 58                      	pop rax
 15311 0000AB8A C60004                  	mov byte [rax], T_closure
 15312 0000AB8D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15313 0000AB91 48C74009[9EAB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15314 0000AB99 E97F000000              	jmp .L_lambda_simple_end_0056
 15315                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15316 0000AB9E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15317 0000ABA4 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15318 0000ABA6 FF742410                	push qword [rsp + 8 * 2]
 15319 0000ABAA 6A02                    	push 2
 15320 0000ABAC E993B40000              	jmp L_error_incorrect_arity_simple
 15321                                  .L_lambda_simple_arity_check_ok_0056:
 15322 0000ABB1 C8000000                	enter 0, 0
 15323                                  	; Setting up for a tail-call
 15324 0000ABB5 488B4528                	mov rax, PARAM(1)	; param b
 15325 0000ABB9 50                      	push rax
 15326 0000ABBA 488B4520                	mov rax, PARAM(0)	; param a
 15327 0000ABBE 50                      	push rax
 15328 0000ABBF 6A02                    	push 2
 15329 0000ABC1 488B4510                	mov rax, ENV
 15330 0000ABC5 488B4010                	mov rax, qword [rax + 8 * 2]
 15331 0000ABC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15332 0000ABCC 803804                  	cmp byte [rax], T_closure
 15333 0000ABCF 0F850DB40000            	jne L_error_non_closure
 15334 0000ABD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15335 0000ABD8 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 15336 0000ABDC 4C8B4D00                	mov r9, qword [rbp]
 15337 0000ABE0 4150                    	push r8
 15338 0000ABE2 4151                    	push r9
 15339 0000ABE4 41BA06000000            	mov r10, 2 + 4
 15340 0000ABEA 4C8B5D18                	mov r11, COUNT
 15341 0000ABEE 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 15342 0000ABF3 4C8D65F8                	lea r12, [rbp - 8]
 15343                                  .L_tc_recycle_frame_loop_008b:
 15344 0000ABF7 4983FA00                	cmp r10, 0
 15345 0000ABFB 7414                    	je .L_tc_recycle_frame_done_008b
 15346 0000ABFD 4D8B2C24                	mov r13, qword [r12]
 15347 0000AC01 4D892B                  	mov qword [r11], r13
 15348 0000AC04 49FFCA                  	dec r10
 15349 0000AC07 4983EB08                	sub r11, 8
 15350 0000AC0B 4983EC08                	sub r12, 8
 15351 0000AC0F EBE6                    	jmp .L_tc_recycle_frame_loop_008b
 15352                                  .L_tc_recycle_frame_done_008b:
 15353 0000AC11 498D6308                	lea rsp, [r11 + 8]
 15354 0000AC15 5D                      	pop rbp
 15355 0000AC16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15356 0000AC19 C9                      	leave
 15357 0000AC1A C22000                  	ret AND_KILL_FRAME(2)
 15358                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15359 0000AC1D 50                      	push rax
 15360 0000AC1E 6A01                    	push 1
 15361 0000AC20 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15362 0000AC25 E861B40000              	call malloc
 15363 0000AC2A 50                      	push rax
 15364 0000AC2B BF08000000              	mov rdi, 8 * 1	; new rib
 15365 0000AC30 E856B40000              	call malloc
 15366 0000AC35 50                      	push rax
 15367 0000AC36 BF30000000              	mov rdi, 8 * 6	; extended env
 15368 0000AC3B E84BB40000              	call malloc
 15369 0000AC40 488B7D10                	mov rdi, ENV
 15370 0000AC44 BE00000000              	mov rsi, 0
 15371 0000AC49 BA01000000              	mov rdx, 1
 15372                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15373 0000AC4E 4883FE05                	cmp rsi, 5
 15374 0000AC52 7410                    	je .L_lambda_simple_env_end_0057
 15375 0000AC54 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15376 0000AC58 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15377 0000AC5C 48FFC6                  	inc rsi
 15378 0000AC5F 48FFC2                  	inc rdx
 15379 0000AC62 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15380                                  .L_lambda_simple_env_end_0057:
 15381 0000AC64 5B                      	pop rbx
 15382 0000AC65 BE00000000              	mov rsi, 0
 15383                                  .L_lambda_simple_params_loop_0057:	; copy params
 15384 0000AC6A 4883FE01                	cmp rsi, 1
 15385 0000AC6E 740E                    	je .L_lambda_simple_params_end_0057
 15386 0000AC70 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15387 0000AC75 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15388 0000AC79 48FFC6                  	inc rsi
 15389 0000AC7C EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15390                                  .L_lambda_simple_params_end_0057:
 15391 0000AC7E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15392 0000AC81 4889C3                  	mov rbx, rax
 15393 0000AC84 58                      	pop rax
 15394 0000AC85 C60004                  	mov byte [rax], T_closure
 15395 0000AC88 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15396 0000AC8C 48C74009[99AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15397 0000AC94 E95B0A0000              	jmp .L_lambda_simple_end_0057
 15398                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15399 0000AC99 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15400 0000AC9F 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15401 0000ACA1 FF742410                	push qword [rsp + 8 * 2]
 15402 0000ACA5 6A01                    	push 1
 15403 0000ACA7 E998B30000              	jmp L_error_incorrect_arity_simple
 15404                                  .L_lambda_simple_arity_check_ok_0057:
 15405 0000ACAC C8000000                	enter 0, 0
 15406                                  	; Setting up for a tail-call
 15407 0000ACB0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15408 0000ACB5 E8D1B30000              	call malloc
 15409 0000ACBA 50                      	push rax
 15410 0000ACBB BF08000000              	mov rdi, 8 * 1	; new rib
 15411 0000ACC0 E8C6B30000              	call malloc
 15412 0000ACC5 50                      	push rax
 15413 0000ACC6 BF38000000              	mov rdi, 8 * 7	; extended env
 15414 0000ACCB E8BBB30000              	call malloc
 15415 0000ACD0 488B7D10                	mov rdi, ENV
 15416 0000ACD4 BE00000000              	mov rsi, 0
 15417 0000ACD9 BA01000000              	mov rdx, 1
 15418                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 15419 0000ACDE 4883FE06                	cmp rsi, 6
 15420 0000ACE2 7410                    	je .L_lambda_simple_env_end_0058
 15421 0000ACE4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15422 0000ACE8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15423 0000ACEC 48FFC6                  	inc rsi
 15424 0000ACEF 48FFC2                  	inc rdx
 15425 0000ACF2 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 15426                                  .L_lambda_simple_env_end_0058:
 15427 0000ACF4 5B                      	pop rbx
 15428 0000ACF5 BE00000000              	mov rsi, 0
 15429                                  .L_lambda_simple_params_loop_0058:	; copy params
 15430 0000ACFA 4883FE01                	cmp rsi, 1
 15431 0000ACFE 740E                    	je .L_lambda_simple_params_end_0058
 15432 0000AD00 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15433 0000AD05 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15434 0000AD09 48FFC6                  	inc rsi
 15435 0000AD0C EBEC                    	jmp .L_lambda_simple_params_loop_0058
 15436                                  .L_lambda_simple_params_end_0058:
 15437 0000AD0E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15438 0000AD11 4889C3                  	mov rbx, rax
 15439 0000AD14 58                      	pop rax
 15440 0000AD15 C60004                  	mov byte [rax], T_closure
 15441 0000AD18 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15442 0000AD1C 48C74009[29AD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 15443 0000AD24 E9A1000000              	jmp .L_lambda_simple_end_0058
 15444                                  .L_lambda_simple_code_0058:	; lambda-simple body
 15445 0000AD29 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15446 0000AD2F 740B                    	je .L_lambda_simple_arity_check_ok_0058
 15447 0000AD31 FF742410                	push qword [rsp + 8 * 2]
 15448 0000AD35 6A02                    	push 2
 15449 0000AD37 E908B30000              	jmp L_error_incorrect_arity_simple
 15450                                  .L_lambda_simple_arity_check_ok_0058:
 15451 0000AD3C C8000000                	enter 0, 0
 15452                                  	; Setting up for a tail-call
 15453                                  	; preparing a non-tail-call
 15454 0000AD40 488B4528                	mov rax, PARAM(1)	; param b
 15455 0000AD44 50                      	push rax
 15456 0000AD45 488B4520                	mov rax, PARAM(0)	; param a
 15457 0000AD49 50                      	push rax
 15458 0000AD4A 6A02                    	push 2	; arg count
 15459 0000AD4C 488B4510                	mov rax, ENV
 15460 0000AD50 488B00                  	mov rax, qword [rax + 8 * 0]
 15461 0000AD53 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15462 0000AD56 803804                  	cmp byte [rax], T_closure
 15463 0000AD59 0F8583B20000            	jne L_error_non_closure
 15464 0000AD5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15465 0000AD62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15466 0000AD65 50                      	push rax
 15467 0000AD66 6A01                    	push 1
 15468 0000AD68 488B0425[0C150000]      	mov rax, qword [free_var_107]	; free var not
 15469 0000AD70 803805                  	cmp byte [rax], T_undefined
 15470 0000AD73 0F84E5B10000            	je L_error_fvar_undefined
 15471 0000AD79 803804                  	cmp byte [rax], T_closure
 15472 0000AD7C 0F8560B20000            	jne L_error_non_closure
 15473 0000AD82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15474 0000AD85 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 15475 0000AD89 4C8B4D00                	mov r9, qword [rbp]
 15476 0000AD8D 4150                    	push r8
 15477 0000AD8F 4151                    	push r9
 15478 0000AD91 41BA05000000            	mov r10, 1 + 4
 15479 0000AD97 4C8B5D18                	mov r11, COUNT
 15480 0000AD9B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 15481 0000ADA0 4C8D65F8                	lea r12, [rbp - 8]
 15482                                  .L_tc_recycle_frame_loop_008c:
 15483 0000ADA4 4983FA00                	cmp r10, 0
 15484 0000ADA8 7414                    	je .L_tc_recycle_frame_done_008c
 15485 0000ADAA 4D8B2C24                	mov r13, qword [r12]
 15486 0000ADAE 4D892B                  	mov qword [r11], r13
 15487 0000ADB1 49FFCA                  	dec r10
 15488 0000ADB4 4983EB08                	sub r11, 8
 15489 0000ADB8 4983EC08                	sub r12, 8
 15490 0000ADBC EBE6                    	jmp .L_tc_recycle_frame_loop_008c
 15491                                  .L_tc_recycle_frame_done_008c:
 15492 0000ADBE 498D6308                	lea rsp, [r11 + 8]
 15493 0000ADC2 5D                      	pop rbp
 15494 0000ADC3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15495 0000ADC6 C9                      	leave
 15496 0000ADC7 C22000                  	ret AND_KILL_FRAME(2)
 15497                                  .L_lambda_simple_end_0058:	; new closure is in rax
 15498 0000ADCA 50                      	push rax
 15499 0000ADCB 6A01                    	push 1
 15500 0000ADCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15501 0000ADD2 E8B4B20000              	call malloc
 15502 0000ADD7 50                      	push rax
 15503 0000ADD8 BF08000000              	mov rdi, 8 * 1	; new rib
 15504 0000ADDD E8A9B20000              	call malloc
 15505 0000ADE2 50                      	push rax
 15506 0000ADE3 BF38000000              	mov rdi, 8 * 7	; extended env
 15507 0000ADE8 E89EB20000              	call malloc
 15508 0000ADED 488B7D10                	mov rdi, ENV
 15509 0000ADF1 BE00000000              	mov rsi, 0
 15510 0000ADF6 BA01000000              	mov rdx, 1
 15511                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 15512 0000ADFB 4883FE06                	cmp rsi, 6
 15513 0000ADFF 7410                    	je .L_lambda_simple_env_end_0059
 15514 0000AE01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15515 0000AE05 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15516 0000AE09 48FFC6                  	inc rsi
 15517 0000AE0C 48FFC2                  	inc rdx
 15518 0000AE0F EBEA                    	jmp .L_lambda_simple_env_loop_0059
 15519                                  .L_lambda_simple_env_end_0059:
 15520 0000AE11 5B                      	pop rbx
 15521 0000AE12 BE00000000              	mov rsi, 0
 15522                                  .L_lambda_simple_params_loop_0059:	; copy params
 15523 0000AE17 4883FE01                	cmp rsi, 1
 15524 0000AE1B 740E                    	je .L_lambda_simple_params_end_0059
 15525 0000AE1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15526 0000AE22 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15527 0000AE26 48FFC6                  	inc rsi
 15528 0000AE29 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 15529                                  .L_lambda_simple_params_end_0059:
 15530 0000AE2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15531 0000AE2E 4889C3                  	mov rbx, rax
 15532 0000AE31 58                      	pop rax
 15533 0000AE32 C60004                  	mov byte [rax], T_closure
 15534 0000AE35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15535 0000AE39 48C74009[46AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 15536 0000AE41 E95D080000              	jmp .L_lambda_simple_end_0059
 15537                                  .L_lambda_simple_code_0059:	; lambda-simple body
 15538 0000AE46 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15539 0000AE4C 740B                    	je .L_lambda_simple_arity_check_ok_0059
 15540 0000AE4E FF742410                	push qword [rsp + 8 * 2]
 15541 0000AE52 6A01                    	push 1
 15542 0000AE54 E9EBB10000              	jmp L_error_incorrect_arity_simple
 15543                                  .L_lambda_simple_arity_check_ok_0059:
 15544 0000AE59 C8000000                	enter 0, 0
 15545                                  	; Setting up for a tail-call
 15546 0000AE5D 6A00                    	push 0
 15547 0000AE5F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15548 0000AE64 E822B20000              	call malloc
 15549 0000AE69 50                      	push rax
 15550 0000AE6A BF08000000              	mov rdi, 8 * 1	; new rib
 15551 0000AE6F E817B20000              	call malloc
 15552 0000AE74 50                      	push rax
 15553 0000AE75 BF40000000              	mov rdi, 8 * 8	; extended env
 15554 0000AE7A E80CB20000              	call malloc
 15555 0000AE7F 488B7D10                	mov rdi, ENV
 15556 0000AE83 BE00000000              	mov rsi, 0
 15557 0000AE88 BA01000000              	mov rdx, 1
 15558                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 15559 0000AE8D 4883FE07                	cmp rsi, 7
 15560 0000AE91 7410                    	je .L_lambda_simple_env_end_005a
 15561 0000AE93 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15562 0000AE97 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15563 0000AE9B 48FFC6                  	inc rsi
 15564 0000AE9E 48FFC2                  	inc rdx
 15565 0000AEA1 EBEA                    	jmp .L_lambda_simple_env_loop_005a
 15566                                  .L_lambda_simple_env_end_005a:
 15567 0000AEA3 5B                      	pop rbx
 15568 0000AEA4 BE00000000              	mov rsi, 0
 15569                                  .L_lambda_simple_params_loop_005a:	; copy params
 15570 0000AEA9 4883FE01                	cmp rsi, 1
 15571 0000AEAD 740E                    	je .L_lambda_simple_params_end_005a
 15572 0000AEAF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15573 0000AEB4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15574 0000AEB8 48FFC6                  	inc rsi
 15575 0000AEBB EBEC                    	jmp .L_lambda_simple_params_loop_005a
 15576                                  .L_lambda_simple_params_end_005a:
 15577 0000AEBD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15578 0000AEC0 4889C3                  	mov rbx, rax
 15579 0000AEC3 58                      	pop rax
 15580 0000AEC4 C60004                  	mov byte [rax], T_closure
 15581 0000AEC7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15582 0000AECB 48C74009[D8AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 15583 0000AED3 E97A070000              	jmp .L_lambda_simple_end_005a
 15584                                  .L_lambda_simple_code_005a:	; lambda-simple body
 15585 0000AED8 48837C241000            	cmp qword [rsp + 8 * 2], 0
 15586 0000AEDE 740B                    	je .L_lambda_simple_arity_check_ok_005a
 15587 0000AEE0 FF742410                	push qword [rsp + 8 * 2]
 15588 0000AEE4 6A00                    	push 0
 15589 0000AEE6 E959B10000              	jmp L_error_incorrect_arity_simple
 15590                                  .L_lambda_simple_arity_check_ok_005a:
 15591 0000AEEB C8000000                	enter 0, 0
 15592                                  	; Setting up for a tail-call
 15593 0000AEEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15594 0000AEF4 E892B10000              	call malloc
 15595 0000AEF9 50                      	push rax
 15596 0000AEFA BF00000000              	mov rdi, 8 * 0	; new rib
 15597 0000AEFF E887B10000              	call malloc
 15598 0000AF04 50                      	push rax
 15599 0000AF05 BF48000000              	mov rdi, 8 * 9	; extended env
 15600 0000AF0A E87CB10000              	call malloc
 15601 0000AF0F 488B7D10                	mov rdi, ENV
 15602 0000AF13 BE00000000              	mov rsi, 0
 15603 0000AF18 BA01000000              	mov rdx, 1
 15604                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 15605 0000AF1D 4883FE08                	cmp rsi, 8
 15606 0000AF21 7410                    	je .L_lambda_simple_env_end_005b
 15607 0000AF23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15608 0000AF27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15609 0000AF2B 48FFC6                  	inc rsi
 15610 0000AF2E 48FFC2                  	inc rdx
 15611 0000AF31 EBEA                    	jmp .L_lambda_simple_env_loop_005b
 15612                                  .L_lambda_simple_env_end_005b:
 15613 0000AF33 5B                      	pop rbx
 15614 0000AF34 BE00000000              	mov rsi, 0
 15615                                  .L_lambda_simple_params_loop_005b:	; copy params
 15616 0000AF39 4883FE00                	cmp rsi, 0
 15617 0000AF3D 740E                    	je .L_lambda_simple_params_end_005b
 15618 0000AF3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15619 0000AF44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15620 0000AF48 48FFC6                  	inc rsi
 15621 0000AF4B EBEC                    	jmp .L_lambda_simple_params_loop_005b
 15622                                  .L_lambda_simple_params_end_005b:
 15623 0000AF4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15624 0000AF50 4889C3                  	mov rbx, rax
 15625 0000AF53 58                      	pop rax
 15626 0000AF54 C60004                  	mov byte [rax], T_closure
 15627 0000AF57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15628 0000AF5B 48C74009[68AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 15629 0000AF63 E903050000              	jmp .L_lambda_simple_end_005b
 15630                                  .L_lambda_simple_code_005b:	; lambda-simple body
 15631 0000AF68 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15632 0000AF6E 740B                    	je .L_lambda_simple_arity_check_ok_005b
 15633 0000AF70 FF742410                	push qword [rsp + 8 * 2]
 15634 0000AF74 6A01                    	push 1
 15635 0000AF76 E9C9B00000              	jmp L_error_incorrect_arity_simple
 15636                                  .L_lambda_simple_arity_check_ok_005b:
 15637 0000AF7B C8000000                	enter 0, 0
 15638                                  	; Setting up for a tail-call
 15639 0000AF7F 48B8-                   	mov rax, L_constants + 1993
 15639 0000AF81 [C907000000000000] 
 15640 0000AF89 50                      	push rax
 15641 0000AF8A 6A01                    	push 1
 15642 0000AF8C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15643 0000AF91 E8F5B00000              	call malloc
 15644 0000AF96 50                      	push rax
 15645 0000AF97 BF08000000              	mov rdi, 8 * 1	; new rib
 15646 0000AF9C E8EAB00000              	call malloc
 15647 0000AFA1 50                      	push rax
 15648 0000AFA2 BF50000000              	mov rdi, 8 * 10	; extended env
 15649 0000AFA7 E8DFB00000              	call malloc
 15650 0000AFAC 488B7D10                	mov rdi, ENV
 15651 0000AFB0 BE00000000              	mov rsi, 0
 15652 0000AFB5 BA01000000              	mov rdx, 1
 15653                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 15654 0000AFBA 4883FE09                	cmp rsi, 9
 15655 0000AFBE 7410                    	je .L_lambda_simple_env_end_005c
 15656 0000AFC0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15657 0000AFC4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15658 0000AFC8 48FFC6                  	inc rsi
 15659 0000AFCB 48FFC2                  	inc rdx
 15660 0000AFCE EBEA                    	jmp .L_lambda_simple_env_loop_005c
 15661                                  .L_lambda_simple_env_end_005c:
 15662 0000AFD0 5B                      	pop rbx
 15663 0000AFD1 BE00000000              	mov rsi, 0
 15664                                  .L_lambda_simple_params_loop_005c:	; copy params
 15665 0000AFD6 4883FE01                	cmp rsi, 1
 15666 0000AFDA 740E                    	je .L_lambda_simple_params_end_005c
 15667 0000AFDC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15668 0000AFE1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15669 0000AFE5 48FFC6                  	inc rsi
 15670 0000AFE8 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 15671                                  .L_lambda_simple_params_end_005c:
 15672 0000AFEA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15673 0000AFED 4889C3                  	mov rbx, rax
 15674 0000AFF0 58                      	pop rax
 15675 0000AFF1 C60004                  	mov byte [rax], T_closure
 15676 0000AFF4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15677 0000AFF8 48C74009[05B00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 15678 0000B000 E915040000              	jmp .L_lambda_simple_end_005c
 15679                                  .L_lambda_simple_code_005c:	; lambda-simple body
 15680 0000B005 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15681 0000B00B 740B                    	je .L_lambda_simple_arity_check_ok_005c
 15682 0000B00D FF742410                	push qword [rsp + 8 * 2]
 15683 0000B011 6A01                    	push 1
 15684 0000B013 E92CB00000              	jmp L_error_incorrect_arity_simple
 15685                                  .L_lambda_simple_arity_check_ok_005c:
 15686 0000B018 C8000000                	enter 0, 0
 15687 0000B01C BF08000000              	mov rdi, 8 * 1
 15688 0000B021 E865B00000              	call malloc
 15689 0000B026 488B5D20                	mov rbx, PARAM(0)
 15690 0000B02A 488918                  	mov qword [rax], rbx
 15691 0000B02D 48894520                	mov PARAM(0), rax
 15692 0000B031 48B8-                   	mov rax, sob_void
 15692 0000B033 [0000000000000000] 
 15693                                  
 15694                                  	; preparing a non-tail-call
 15695 0000B03B 6A00                    	push 0	; arg count
 15696 0000B03D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15697 0000B042 E844B00000              	call malloc
 15698 0000B047 50                      	push rax
 15699 0000B048 BF08000000              	mov rdi, 8 * 1	; new rib
 15700 0000B04D E839B00000              	call malloc
 15701 0000B052 50                      	push rax
 15702 0000B053 BF58000000              	mov rdi, 8 * 11	; extended env
 15703 0000B058 E82EB00000              	call malloc
 15704 0000B05D 488B7D10                	mov rdi, ENV
 15705 0000B061 BE00000000              	mov rsi, 0
 15706 0000B066 BA01000000              	mov rdx, 1
 15707                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 15708 0000B06B 4883FE0A                	cmp rsi, 10
 15709 0000B06F 7410                    	je .L_lambda_simple_env_end_005d
 15710 0000B071 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15711 0000B075 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15712 0000B079 48FFC6                  	inc rsi
 15713 0000B07C 48FFC2                  	inc rdx
 15714 0000B07F EBEA                    	jmp .L_lambda_simple_env_loop_005d
 15715                                  .L_lambda_simple_env_end_005d:
 15716 0000B081 5B                      	pop rbx
 15717 0000B082 BE00000000              	mov rsi, 0
 15718                                  .L_lambda_simple_params_loop_005d:	; copy params
 15719 0000B087 4883FE01                	cmp rsi, 1
 15720 0000B08B 740E                    	je .L_lambda_simple_params_end_005d
 15721 0000B08D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15722 0000B092 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15723 0000B096 48FFC6                  	inc rsi
 15724 0000B099 EBEC                    	jmp .L_lambda_simple_params_loop_005d
 15725                                  .L_lambda_simple_params_end_005d:
 15726 0000B09B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15727 0000B09E 4889C3                  	mov rbx, rax
 15728 0000B0A1 58                      	pop rax
 15729 0000B0A2 C60004                  	mov byte [rax], T_closure
 15730 0000B0A5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15731 0000B0A9 48C74009[B6B00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 15732 0000B0B1 E95B010000              	jmp .L_lambda_simple_end_005d
 15733                                  .L_lambda_simple_code_005d:	; lambda-simple body
 15734 0000B0B6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15735 0000B0BC 740B                    	je .L_lambda_simple_arity_check_ok_005d
 15736 0000B0BE FF742410                	push qword [rsp + 8 * 2]
 15737 0000B0C2 6A02                    	push 2
 15738 0000B0C4 E97BAF0000              	jmp L_error_incorrect_arity_simple
 15739                                  .L_lambda_simple_arity_check_ok_005d:
 15740 0000B0C9 C8000000                	enter 0, 0
 15741                                  	; preparing a non-tail-call
 15742 0000B0CD 488B4528                	mov rax, PARAM(1)	; param s
 15743 0000B0D1 50                      	push rax
 15744 0000B0D2 6A01                    	push 1	; arg count
 15745 0000B0D4 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 15746 0000B0DC 803805                  	cmp byte [rax], T_undefined
 15747 0000B0DF 0F8479AE0000            	je L_error_fvar_undefined
 15748 0000B0E5 803804                  	cmp byte [rax], T_closure
 15749 0000B0E8 0F85F4AE0000            	jne L_error_non_closure
 15750 0000B0EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15751 0000B0F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15752 0000B0F4 483D[02000000]          	cmp rax, sob_boolean_false
 15753 0000B0FA 0F850D010000            	jne .L_or_end_0006
 15754                                  
 15755                                  	; preparing a non-tail-call
 15756                                  	; preparing a non-tail-call
 15757 0000B100 488B4528                	mov rax, PARAM(1)	; param s
 15758 0000B104 50                      	push rax
 15759 0000B105 6A01                    	push 1	; arg count
 15760 0000B107 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 15761 0000B10F 803805                  	cmp byte [rax], T_undefined
 15762 0000B112 0F8446AE0000            	je L_error_fvar_undefined
 15763 0000B118 803804                  	cmp byte [rax], T_closure
 15764 0000B11B 0F85C1AE0000            	jne L_error_non_closure
 15765 0000B121 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15766 0000B124 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15767 0000B127 50                      	push rax
 15768 0000B128 488B4520                	mov rax, PARAM(0)	; param a
 15769 0000B12C 50                      	push rax
 15770 0000B12D 6A02                    	push 2	; arg count
 15771 0000B12F 488B4510                	mov rax, ENV
 15772 0000B133 488B4008                	mov rax, qword [rax + 8 * 1]
 15773 0000B137 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15774 0000B13A 803804                  	cmp byte [rax], T_closure
 15775 0000B13D 0F859FAE0000            	jne L_error_non_closure
 15776 0000B143 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15777 0000B146 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15778 0000B149 483D[02000000]          	cmp rax, sob_boolean_false
 15779 0000B14F 0F84AE000000            	je .L_if_else_0050
 15780                                  	; Setting up for a tail-call
 15781                                  	; preparing a non-tail-call
 15782 0000B155 488B4528                	mov rax, PARAM(1)	; param s
 15783 0000B159 50                      	push rax
 15784 0000B15A 6A01                    	push 1	; arg count
 15785 0000B15C 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 15786 0000B164 803805                  	cmp byte [rax], T_undefined
 15787 0000B167 0F84F1AD0000            	je L_error_fvar_undefined
 15788 0000B16D 803804                  	cmp byte [rax], T_closure
 15789 0000B170 0F856CAE0000            	jne L_error_non_closure
 15790 0000B176 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15791 0000B179 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15792 0000B17C 50                      	push rax
 15793                                  	; preparing a non-tail-call
 15794 0000B17D 488B4528                	mov rax, PARAM(1)	; param s
 15795 0000B181 50                      	push rax
 15796 0000B182 6A01                    	push 1	; arg count
 15797 0000B184 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 15798 0000B18C 803805                  	cmp byte [rax], T_undefined
 15799 0000B18F 0F84C9AD0000            	je L_error_fvar_undefined
 15800 0000B195 803804                  	cmp byte [rax], T_closure
 15801 0000B198 0F8544AE0000            	jne L_error_non_closure
 15802 0000B19E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15803 0000B1A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15804 0000B1A4 50                      	push rax
 15805 0000B1A5 6A02                    	push 2
 15806 0000B1A7 488B4510                	mov rax, ENV
 15807 0000B1AB 488B00                  	mov rax, qword [rax + 8 * 0]
 15808 0000B1AE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15809 0000B1B1 488B00                  	mov rax, qword [rax]
 15810 0000B1B4 803804                  	cmp byte [rax], T_closure
 15811 0000B1B7 0F8525AE0000            	jne L_error_non_closure
 15812 0000B1BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15813 0000B1C0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 15814 0000B1C4 4C8B4D00                	mov r9, qword [rbp]
 15815 0000B1C8 4150                    	push r8
 15816 0000B1CA 4151                    	push r9
 15817 0000B1CC 41BA06000000            	mov r10, 2 + 4
 15818 0000B1D2 4C8B5D18                	mov r11, COUNT
 15819 0000B1D6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 15820 0000B1DB 4C8D65F8                	lea r12, [rbp - 8]
 15821                                  .L_tc_recycle_frame_loop_008d:
 15822 0000B1DF 4983FA00                	cmp r10, 0
 15823 0000B1E3 7414                    	je .L_tc_recycle_frame_done_008d
 15824 0000B1E5 4D8B2C24                	mov r13, qword [r12]
 15825 0000B1E9 4D892B                  	mov qword [r11], r13
 15826 0000B1EC 49FFCA                  	dec r10
 15827 0000B1EF 4983EB08                	sub r11, 8
 15828 0000B1F3 4983EC08                	sub r12, 8
 15829 0000B1F7 EBE6                    	jmp .L_tc_recycle_frame_loop_008d
 15830                                  .L_tc_recycle_frame_done_008d:
 15831 0000B1F9 498D6308                	lea rsp, [r11 + 8]
 15832 0000B1FD 5D                      	pop rbp
 15833 0000B1FE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15834 0000B201 EB0A                    	jmp .L_if_end_0050
 15835                                  .L_if_else_0050:
 15836 0000B203 48B8-                   	mov rax, L_constants + 2
 15836 0000B205 [0200000000000000] 
 15837                                  .L_if_end_0050:
 15838                                  .L_or_end_0006:
 15839 0000B20D C9                      	leave
 15840 0000B20E C22000                  	ret AND_KILL_FRAME(2)
 15841                                  .L_lambda_simple_end_005d:	; new closure is in rax
 15842 0000B211 803804                  	cmp byte [rax], T_closure
 15843 0000B214 0F85C8AD0000            	jne L_error_non_closure
 15844 0000B21A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15845 0000B21D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15846 0000B220 50                      	push rax
 15847 0000B221 488B4520                	mov rax, PARAM(0)	; param run
 15848 0000B225 8F00                    	pop qword [rax]
 15849 0000B227 48B8-                   	mov rax, sob_void
 15849 0000B229 [0000000000000000] 
 15850                                  
 15851 0000B231 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15852 0000B236 E850AE0000              	call malloc
 15853 0000B23B 50                      	push rax
 15854 0000B23C BF08000000              	mov rdi, 8 * 1	; new rib
 15855 0000B241 E845AE0000              	call malloc
 15856 0000B246 50                      	push rax
 15857 0000B247 BF58000000              	mov rdi, 8 * 11	; extended env
 15858 0000B24C E83AAE0000              	call malloc
 15859 0000B251 488B7D10                	mov rdi, ENV
 15860 0000B255 BE00000000              	mov rsi, 0
 15861 0000B25A BA01000000              	mov rdx, 1
 15862                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 15863 0000B25F 4883FE0A                	cmp rsi, 10
 15864 0000B263 7410                    	je .L_lambda_opt_env_end_000e
 15865 0000B265 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15866 0000B269 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15867 0000B26D 48FFC6                  	inc rsi
 15868 0000B270 48FFC2                  	inc rdx
 15869 0000B273 EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15870                                  .L_lambda_opt_env_end_000e:
 15871 0000B275 5B                      	pop rbx
 15872 0000B276 BE00000000              	mov rsi, 0
 15873                                  .L_lambda_opt_params_loop_000e:	; copy params
 15874 0000B27B 4883FE01                	cmp rsi, 1
 15875 0000B27F 740E                    	je .L_lambda_opt_params_end_000e
 15876 0000B281 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15877 0000B286 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15878 0000B28A 48FFC6                  	inc rsi
 15879 0000B28D EBEC                    	jmp .L_lambda_opt_params_loop_000e
 15880                                  .L_lambda_opt_params_end_000e:
 15881 0000B28F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15882 0000B292 4889C3                  	mov rbx, rax
 15883 0000B295 58                      	pop rax
 15884 0000B296 C60004                  	mov byte [rax], T_closure
 15885 0000B299 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15886 0000B29D 48C74009[AAB20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15887 0000B2A5 E96C010000              	jmp .L_lambda_opt_end_000e
 15888                                  .L_lambda_opt_code_000e:
 15889 0000B2AA 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 15890 0000B2AF 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 15891 0000B2B3 7407                    	je .L_lambda_opt_arity_check_exact_000e	; Jump if arity matches
 15892 0000B2B5 7F4C                    	jg .L_lambda_opt_arity_check_more_000e	; Jump if more arguments passed
 15893 0000B2B7 E99CAD0000              	jmp L_error_incorrect_arity_opt
 15894                                  .L_lambda_opt_arity_check_exact_000e:
 15895 0000B2BC 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 15896 0000B2BF 4983C603                	add r14, 3 ; add 3 first stack values
 15897 0000B2C3 41BF00000000            	mov r15, 0 ; r15 = index
 15898 0000B2C9 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 15899 0000B2CD 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 15900 0000B2D5 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15901                                  .L_lambda_opt_stack_shrink_loop_000e:
 15902 0000B2D7 4983FE00                	cmp r14, 0
 15903 0000B2DB 7E11                    	jle .L_make_lambda_opt_exact_finish_000e
 15904 0000B2DD 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 15905 0000B2E2 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 15906 0000B2E6 49FFCE                  	dec r14 ; next loop value
 15907 0000B2E9 49FFC7                  	inc r15 ; update i
 15908 0000B2EC EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15909                                  .L_make_lambda_opt_exact_finish_000e:
 15910 0000B2EE 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 15911 0000B2F6 49FFC2                  	inc r10
 15912 0000B2F9 4C89542410              	mov qword [rsp + 8 * 2], r10
 15913 0000B2FE E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000e
 15914                                  .L_lambda_opt_arity_check_more_000e:
 15915 0000B303 4D89D6                  	mov r14, r10 ; r14 = num args
 15916 0000B306 4D89D7                  	mov r15, r10 ; r15 = num args
 15917 0000B309 41B901000000            	mov r9, 1; r9 = number of params 
 15918 0000B30F 4D29CE                  	sub r14, r9 ; r14 = extra args
 15919 0000B312 4D01F1                  	add r9, r14 ; r9 = num args
 15920 0000B315 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 15920 0000B317 [0100000000000000] 
 15921 0000B31F EB00                    	jmp .L_make_lambda_opt_arg_list_000e
 15922                                  .L_make_lambda_opt_arg_list_000e:
 15923 0000B321 4983FE00                	cmp r14, 0
 15924 0000B325 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000e
 15925 0000B327 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 15926 0000B32C 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 15927 0000B32F 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 15928 0000B335 E851AD0000              	call malloc                         ; Allocate memory, result in rax
 15929 0000B33A C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 15930 0000B33D 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 15931 0000B341 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 15932 0000B345 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 15933 0000B348 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 15934 0000B34B 49FFC9                  	dec r9                              ; args index minus 1
 15935 0000B34E 49FFCE                  	dec r14                             ; next iteration
 15936 0000B351 EBCE                    	jmp .L_make_lambda_opt_arg_list_000e
 15937                                  .L_make_lambda_opt_stack_fixed_000e:
 15938 0000B353 4D89FE                  	mov r14, r15 ; r14 = num args
 15939 0000B356 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 15940 0000B359 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 15941 0000B35D 41BA01000000            	mov r10, 1; r10 = num of params
 15942 0000B363 4D29D6                  	sub r14, r10 ; r14 = extra args
 15943 0000B366 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 15944 0000B369 49FFCE                  	dec r14 ; how much we need to change stack wise?
 15945 0000B36C 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 15946 0000B371 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000e
 15947                                  .L_lambda_opt_stack_shrink_loop_more_000e:
 15948 0000B373 4983F800                	cmp r8, 0
 15949 0000B377 7E15                    	jle .L_make_lambda_opt_more_finish_000e
 15950 0000B379 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 15951 0000B37D 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 15952 0000B381 4D8D26                  	lea r12, [r14]
 15953 0000B384 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 15954 0000B389 49FFC8                  	dec r8 ; next iteration
 15955 0000B38C EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000e
 15956                                  .L_make_lambda_opt_more_finish_000e:
 15957 0000B38E 4D89F8                  	mov r8, r15 ; num of args
 15958 0000B391 41BA01000000            	mov r10, 1
 15959 0000B397 4D29D0                  	sub r8, r10 ; num of new args
 15960 0000B39A 49FFC0                  	inc r8
 15961 0000B39D 4C89442420              	mov qword [rsp + 8 * 4], r8
 15962 0000B3A2 4883C410                	add rsp, 8 * 2  ; 
 15963 0000B3A6 EB00                    	jmp .L_lambda_opt_stack_adjusted_000e
 15964                                  .L_lambda_opt_stack_adjusted_000e:
 15965 0000B3A8 C8000000                	enter 0, 0
 15966                                  	; Setting up for a tail-call
 15967 0000B3AC 488B4520                	mov rax, PARAM(0)	; param a
 15968 0000B3B0 50                      	push rax
 15969 0000B3B1 488B4528                	mov rax, PARAM(1)	; param s
 15970 0000B3B5 50                      	push rax
 15971 0000B3B6 6A02                    	push 2
 15972 0000B3B8 488B4510                	mov rax, ENV
 15973 0000B3BC 488B00                  	mov rax, qword [rax + 8 * 0]
 15974 0000B3BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15975 0000B3C2 488B00                  	mov rax, qword [rax]
 15976 0000B3C5 803804                  	cmp byte [rax], T_closure
 15977 0000B3C8 0F8514AC0000            	jne L_error_non_closure
 15978 0000B3CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15979 0000B3D1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 15980 0000B3D5 4C8B4D00                	mov r9, qword [rbp]
 15981 0000B3D9 4150                    	push r8
 15982 0000B3DB 4151                    	push r9
 15983 0000B3DD 41BA06000000            	mov r10, 2 + 4
 15984 0000B3E3 4C8B5D18                	mov r11, COUNT
 15985 0000B3E7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 15986 0000B3EC 4C8D65F8                	lea r12, [rbp - 8]
 15987                                  .L_tc_recycle_frame_loop_008e:
 15988 0000B3F0 4983FA00                	cmp r10, 0
 15989 0000B3F4 7414                    	je .L_tc_recycle_frame_done_008e
 15990 0000B3F6 4D8B2C24                	mov r13, qword [r12]
 15991 0000B3FA 4D892B                  	mov qword [r11], r13
 15992 0000B3FD 49FFCA                  	dec r10
 15993 0000B400 4983EB08                	sub r11, 8
 15994 0000B404 4983EC08                	sub r12, 8
 15995 0000B408 EBE6                    	jmp .L_tc_recycle_frame_loop_008e
 15996                                  .L_tc_recycle_frame_done_008e:
 15997 0000B40A 498D6308                	lea rsp, [r11 + 8]
 15998 0000B40E 5D                      	pop rbp
 15999 0000B40F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16000 0000B412 C9                      	leave
 16001 0000B413 C21800                  	ret AND_KILL_FRAME(1)
 16002                                  .L_lambda_opt_end_000e:	; new closure is in rax
 16003 0000B416 C9                      	leave
 16004 0000B417 C21800                  	ret AND_KILL_FRAME(1)
 16005                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16006 0000B41A 803804                  	cmp byte [rax], T_closure
 16007 0000B41D 0F85BFAB0000            	jne L_error_non_closure
 16008 0000B423 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16009 0000B426 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16010 0000B42A 4C8B4D00                	mov r9, qword [rbp]
 16011 0000B42E 4150                    	push r8
 16012 0000B430 4151                    	push r9
 16013 0000B432 41BA05000000            	mov r10, 1 + 4
 16014 0000B438 4C8B5D18                	mov r11, COUNT
 16015 0000B43C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16016 0000B441 4C8D65F8                	lea r12, [rbp - 8]
 16017                                  .L_tc_recycle_frame_loop_008f:
 16018 0000B445 4983FA00                	cmp r10, 0
 16019 0000B449 7414                    	je .L_tc_recycle_frame_done_008f
 16020 0000B44B 4D8B2C24                	mov r13, qword [r12]
 16021 0000B44F 4D892B                  	mov qword [r11], r13
 16022 0000B452 49FFCA                  	dec r10
 16023 0000B455 4983EB08                	sub r11, 8
 16024 0000B459 4983EC08                	sub r12, 8
 16025 0000B45D EBE6                    	jmp .L_tc_recycle_frame_loop_008f
 16026                                  .L_tc_recycle_frame_done_008f:
 16027 0000B45F 498D6308                	lea rsp, [r11 + 8]
 16028 0000B463 5D                      	pop rbp
 16029 0000B464 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16030 0000B467 C9                      	leave
 16031 0000B468 C21800                  	ret AND_KILL_FRAME(1)
 16032                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16033 0000B46B 50                      	push rax
 16034 0000B46C 6A01                    	push 1
 16035 0000B46E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16036 0000B473 E813AC0000              	call malloc
 16037 0000B478 50                      	push rax
 16038 0000B479 BF00000000              	mov rdi, 8 * 0	; new rib
 16039 0000B47E E808AC0000              	call malloc
 16040 0000B483 50                      	push rax
 16041 0000B484 BF48000000              	mov rdi, 8 * 9	; extended env
 16042 0000B489 E8FDAB0000              	call malloc
 16043 0000B48E 488B7D10                	mov rdi, ENV
 16044 0000B492 BE00000000              	mov rsi, 0
 16045 0000B497 BA01000000              	mov rdx, 1
 16046                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16047 0000B49C 4883FE08                	cmp rsi, 8
 16048 0000B4A0 7410                    	je .L_lambda_simple_env_end_005e
 16049 0000B4A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16050 0000B4A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16051 0000B4AA 48FFC6                  	inc rsi
 16052 0000B4AD 48FFC2                  	inc rdx
 16053 0000B4B0 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 16054                                  .L_lambda_simple_env_end_005e:
 16055 0000B4B2 5B                      	pop rbx
 16056 0000B4B3 BE00000000              	mov rsi, 0
 16057                                  .L_lambda_simple_params_loop_005e:	; copy params
 16058 0000B4B8 4883FE00                	cmp rsi, 0
 16059 0000B4BC 740E                    	je .L_lambda_simple_params_end_005e
 16060 0000B4BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16061 0000B4C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16062 0000B4C7 48FFC6                  	inc rsi
 16063 0000B4CA EBEC                    	jmp .L_lambda_simple_params_loop_005e
 16064                                  .L_lambda_simple_params_end_005e:
 16065 0000B4CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16066 0000B4CF 4889C3                  	mov rbx, rax
 16067 0000B4D2 58                      	pop rax
 16068 0000B4D3 C60004                  	mov byte [rax], T_closure
 16069 0000B4D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16070 0000B4DA 48C74009[E7B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 16071 0000B4E2 E91A010000              	jmp .L_lambda_simple_end_005e
 16072                                  .L_lambda_simple_code_005e:	; lambda-simple body
 16073 0000B4E7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16074 0000B4ED 740B                    	je .L_lambda_simple_arity_check_ok_005e
 16075 0000B4EF FF742410                	push qword [rsp + 8 * 2]
 16076 0000B4F3 6A01                    	push 1
 16077 0000B4F5 E94AAB0000              	jmp L_error_incorrect_arity_simple
 16078                                  .L_lambda_simple_arity_check_ok_005e:
 16079 0000B4FA C8000000                	enter 0, 0
 16080                                  	; preparing a non-tail-call
 16081 0000B4FE 488B4510                	mov rax, ENV
 16082 0000B502 488B4028                	mov rax, qword [rax + 8 * 5]
 16083 0000B506 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 16084 0000B509 50                      	push rax
 16085 0000B50A 6A01                    	push 1	; arg count
 16086 0000B50C 488B4520                	mov rax, PARAM(0)	; param make-run
 16087 0000B510 803804                  	cmp byte [rax], T_closure
 16088 0000B513 0F85C9AA0000            	jne L_error_non_closure
 16089 0000B519 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16090 0000B51C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16091 0000B51F 48890425[350E0000]      	mov qword [free_var_4], rax
 16092 0000B527 48B8-                   	mov rax, sob_void
 16092 0000B529 [0000000000000000] 
 16093                                  
 16094                                  	; preparing a non-tail-call
 16095 0000B531 488B4510                	mov rax, ENV
 16096 0000B535 488B4008                	mov rax, qword [rax + 8 * 1]
 16097 0000B539 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 16098 0000B53C 50                      	push rax
 16099 0000B53D 6A01                    	push 1	; arg count
 16100 0000B53F 488B4520                	mov rax, PARAM(0)	; param make-run
 16101 0000B543 803804                  	cmp byte [rax], T_closure
 16102 0000B546 0F8596AA0000            	jne L_error_non_closure
 16103 0000B54C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16104 0000B54F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16105 0000B552 48890425[460E0000]      	mov qword [free_var_5], rax
 16106 0000B55A 48B8-                   	mov rax, sob_void
 16106 0000B55C [0000000000000000] 
 16107                                  
 16108                                  	; preparing a non-tail-call
 16109 0000B564 488B4510                	mov rax, ENV
 16110 0000B568 488B4010                	mov rax, qword [rax + 8 * 2]
 16111 0000B56C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 16112 0000B56F 50                      	push rax
 16113 0000B570 6A01                    	push 1	; arg count
 16114 0000B572 488B4520                	mov rax, PARAM(0)	; param make-run
 16115 0000B576 803804                  	cmp byte [rax], T_closure
 16116 0000B579 0F8563AA0000            	jne L_error_non_closure
 16117 0000B57F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16118 0000B582 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16119 0000B585 48890425[680E0000]      	mov qword [free_var_7], rax
 16120 0000B58D 48B8-                   	mov rax, sob_void
 16120 0000B58F [0000000000000000] 
 16121                                  
 16122                                  	; preparing a non-tail-call
 16123 0000B597 488B4510                	mov rax, ENV
 16124 0000B59B 488B4018                	mov rax, qword [rax + 8 * 3]
 16125 0000B59F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 16126 0000B5A2 50                      	push rax
 16127 0000B5A3 6A01                    	push 1	; arg count
 16128 0000B5A5 488B4520                	mov rax, PARAM(0)	; param make-run
 16129 0000B5A9 803804                  	cmp byte [rax], T_closure
 16130 0000B5AC 0F8530AA0000            	jne L_error_non_closure
 16131 0000B5B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16132 0000B5B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16133 0000B5B8 48890425[790E0000]      	mov qword [free_var_8], rax
 16134 0000B5C0 48B8-                   	mov rax, sob_void
 16134 0000B5C2 [0000000000000000] 
 16135                                  
 16136                                  	; preparing a non-tail-call
 16137 0000B5CA 488B4510                	mov rax, ENV
 16138 0000B5CE 488B4020                	mov rax, qword [rax + 8 * 4]
 16139 0000B5D2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 16140 0000B5D5 50                      	push rax
 16141 0000B5D6 6A01                    	push 1	; arg count
 16142 0000B5D8 488B4520                	mov rax, PARAM(0)	; param make-run
 16143 0000B5DC 803804                  	cmp byte [rax], T_closure
 16144 0000B5DF 0F85FDA90000            	jne L_error_non_closure
 16145 0000B5E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16146 0000B5E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16147 0000B5EB 48890425[570E0000]      	mov qword [free_var_6], rax
 16148 0000B5F3 48B8-                   	mov rax, sob_void
 16148 0000B5F5 [0000000000000000] 
 16149 0000B5FD C9                      	leave
 16150 0000B5FE C21800                  	ret AND_KILL_FRAME(1)
 16151                                  .L_lambda_simple_end_005e:	; new closure is in rax
 16152 0000B601 803804                  	cmp byte [rax], T_closure
 16153 0000B604 0F85D8A90000            	jne L_error_non_closure
 16154 0000B60A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16155 0000B60D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16156 0000B611 4C8B4D00                	mov r9, qword [rbp]
 16157 0000B615 4150                    	push r8
 16158 0000B617 4151                    	push r9
 16159 0000B619 41BA05000000            	mov r10, 1 + 4
 16160 0000B61F 4C8B5D18                	mov r11, COUNT
 16161 0000B623 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16162 0000B628 4C8D65F8                	lea r12, [rbp - 8]
 16163                                  .L_tc_recycle_frame_loop_0090:
 16164 0000B62C 4983FA00                	cmp r10, 0
 16165 0000B630 7414                    	je .L_tc_recycle_frame_done_0090
 16166 0000B632 4D8B2C24                	mov r13, qword [r12]
 16167 0000B636 4D892B                  	mov qword [r11], r13
 16168 0000B639 49FFCA                  	dec r10
 16169 0000B63C 4983EB08                	sub r11, 8
 16170 0000B640 4983EC08                	sub r12, 8
 16171 0000B644 EBE6                    	jmp .L_tc_recycle_frame_loop_0090
 16172                                  .L_tc_recycle_frame_done_0090:
 16173 0000B646 498D6308                	lea rsp, [r11 + 8]
 16174 0000B64A 5D                      	pop rbp
 16175 0000B64B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16176 0000B64E C9                      	leave
 16177 0000B64F C21000                  	ret AND_KILL_FRAME(0)
 16178                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16179 0000B652 803804                  	cmp byte [rax], T_closure
 16180 0000B655 0F8587A90000            	jne L_error_non_closure
 16181 0000B65B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16182 0000B65E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16183 0000B662 4C8B4D00                	mov r9, qword [rbp]
 16184 0000B666 4150                    	push r8
 16185 0000B668 4151                    	push r9
 16186 0000B66A 41BA04000000            	mov r10, 0 + 4
 16187 0000B670 4C8B5D18                	mov r11, COUNT
 16188 0000B674 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16189 0000B679 4C8D65F8                	lea r12, [rbp - 8]
 16190                                  .L_tc_recycle_frame_loop_0091:
 16191 0000B67D 4983FA00                	cmp r10, 0
 16192 0000B681 7414                    	je .L_tc_recycle_frame_done_0091
 16193 0000B683 4D8B2C24                	mov r13, qword [r12]
 16194 0000B687 4D892B                  	mov qword [r11], r13
 16195 0000B68A 49FFCA                  	dec r10
 16196 0000B68D 4983EB08                	sub r11, 8
 16197 0000B691 4983EC08                	sub r12, 8
 16198 0000B695 EBE6                    	jmp .L_tc_recycle_frame_loop_0091
 16199                                  .L_tc_recycle_frame_done_0091:
 16200 0000B697 498D6308                	lea rsp, [r11 + 8]
 16201 0000B69B 5D                      	pop rbp
 16202 0000B69C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16203 0000B69F C9                      	leave
 16204 0000B6A0 C21800                  	ret AND_KILL_FRAME(1)
 16205                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16206 0000B6A3 803804                  	cmp byte [rax], T_closure
 16207 0000B6A6 0F8536A90000            	jne L_error_non_closure
 16208 0000B6AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16209 0000B6AF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16210 0000B6B3 4C8B4D00                	mov r9, qword [rbp]
 16211 0000B6B7 4150                    	push r8
 16212 0000B6B9 4151                    	push r9
 16213 0000B6BB 41BA05000000            	mov r10, 1 + 4
 16214 0000B6C1 4C8B5D18                	mov r11, COUNT
 16215 0000B6C5 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16216 0000B6CA 4C8D65F8                	lea r12, [rbp - 8]
 16217                                  .L_tc_recycle_frame_loop_0092:
 16218 0000B6CE 4983FA00                	cmp r10, 0
 16219 0000B6D2 7414                    	je .L_tc_recycle_frame_done_0092
 16220 0000B6D4 4D8B2C24                	mov r13, qword [r12]
 16221 0000B6D8 4D892B                  	mov qword [r11], r13
 16222 0000B6DB 49FFCA                  	dec r10
 16223 0000B6DE 4983EB08                	sub r11, 8
 16224 0000B6E2 4983EC08                	sub r12, 8
 16225 0000B6E6 EBE6                    	jmp .L_tc_recycle_frame_loop_0092
 16226                                  .L_tc_recycle_frame_done_0092:
 16227 0000B6E8 498D6308                	lea rsp, [r11 + 8]
 16228 0000B6EC 5D                      	pop rbp
 16229 0000B6ED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16230 0000B6F0 C9                      	leave
 16231 0000B6F1 C21800                  	ret AND_KILL_FRAME(1)
 16232                                  .L_lambda_simple_end_0057:	; new closure is in rax
 16233 0000B6F4 803804                  	cmp byte [rax], T_closure
 16234 0000B6F7 0F85E5A80000            	jne L_error_non_closure
 16235 0000B6FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 16236 0000B700 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16237 0000B704 4C8B4D00                	mov r9, qword [rbp]
 16238 0000B708 4150                    	push r8
 16239 0000B70A 4151                    	push r9
 16240 0000B70C 41BA05000000            	mov r10, 1 + 4
 16241 0000B712 4C8B5D18                	mov r11, COUNT
 16242 0000B716 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16243 0000B71B 4C8D65F8                	lea r12, [rbp - 8]
 16244                                  .L_tc_recycle_frame_loop_0093:
 16245 0000B71F 4983FA00                	cmp r10, 0
 16246 0000B723 7414                    	je .L_tc_recycle_frame_done_0093
 16247 0000B725 4D8B2C24                	mov r13, qword [r12]
 16248 0000B729 4D892B                  	mov qword [r11], r13
 16249 0000B72C 49FFCA                  	dec r10
 16250 0000B72F 4983EB08                	sub r11, 8
 16251 0000B733 4983EC08                	sub r12, 8
 16252 0000B737 EBE6                    	jmp .L_tc_recycle_frame_loop_0093
 16253                                  .L_tc_recycle_frame_done_0093:
 16254 0000B739 498D6308                	lea rsp, [r11 + 8]
 16255 0000B73D 5D                      	pop rbp
 16256 0000B73E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16257 0000B741 C9                      	leave
 16258 0000B742 C21800                  	ret AND_KILL_FRAME(1)
 16259                                  .L_lambda_simple_end_0055:	; new closure is in rax
 16260 0000B745 803804                  	cmp byte [rax], T_closure
 16261 0000B748 0F8594A80000            	jne L_error_non_closure
 16262 0000B74E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16263 0000B751 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16264 0000B755 4C8B4D00                	mov r9, qword [rbp]
 16265 0000B759 4150                    	push r8
 16266 0000B75B 4151                    	push r9
 16267 0000B75D 41BA05000000            	mov r10, 1 + 4
 16268 0000B763 4C8B5D18                	mov r11, COUNT
 16269 0000B767 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16270 0000B76C 4C8D65F8                	lea r12, [rbp - 8]
 16271                                  .L_tc_recycle_frame_loop_0094:
 16272 0000B770 4983FA00                	cmp r10, 0
 16273 0000B774 7414                    	je .L_tc_recycle_frame_done_0094
 16274 0000B776 4D8B2C24                	mov r13, qword [r12]
 16275 0000B77A 4D892B                  	mov qword [r11], r13
 16276 0000B77D 49FFCA                  	dec r10
 16277 0000B780 4983EB08                	sub r11, 8
 16278 0000B784 4983EC08                	sub r12, 8
 16279 0000B788 EBE6                    	jmp .L_tc_recycle_frame_loop_0094
 16280                                  .L_tc_recycle_frame_done_0094:
 16281 0000B78A 498D6308                	lea rsp, [r11 + 8]
 16282 0000B78E 5D                      	pop rbp
 16283 0000B78F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16284 0000B792 C9                      	leave
 16285 0000B793 C21800                  	ret AND_KILL_FRAME(1)
 16286                                  .L_lambda_simple_end_0053:	; new closure is in rax
 16287 0000B796 803804                  	cmp byte [rax], T_closure
 16288 0000B799 0F8543A80000            	jne L_error_non_closure
 16289 0000B79F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16290 0000B7A2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16291 0000B7A6 4C8B4D00                	mov r9, qword [rbp]
 16292 0000B7AA 4150                    	push r8
 16293 0000B7AC 4151                    	push r9
 16294 0000B7AE 41BA05000000            	mov r10, 1 + 4
 16295 0000B7B4 4C8B5D18                	mov r11, COUNT
 16296 0000B7B8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16297 0000B7BD 4C8D65F8                	lea r12, [rbp - 8]
 16298                                  .L_tc_recycle_frame_loop_0095:
 16299 0000B7C1 4983FA00                	cmp r10, 0
 16300 0000B7C5 7414                    	je .L_tc_recycle_frame_done_0095
 16301 0000B7C7 4D8B2C24                	mov r13, qword [r12]
 16302 0000B7CB 4D892B                  	mov qword [r11], r13
 16303 0000B7CE 49FFCA                  	dec r10
 16304 0000B7D1 4983EB08                	sub r11, 8
 16305 0000B7D5 4983EC08                	sub r12, 8
 16306 0000B7D9 EBE6                    	jmp .L_tc_recycle_frame_loop_0095
 16307                                  .L_tc_recycle_frame_done_0095:
 16308 0000B7DB 498D6308                	lea rsp, [r11 + 8]
 16309 0000B7DF 5D                      	pop rbp
 16310 0000B7E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16311 0000B7E3 C9                      	leave
 16312 0000B7E4 C21800                  	ret AND_KILL_FRAME(1)
 16313                                  .L_lambda_simple_end_0052:	; new closure is in rax
 16314 0000B7E7 803804                  	cmp byte [rax], T_closure
 16315 0000B7EA 0F85F2A70000            	jne L_error_non_closure
 16316 0000B7F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16317 0000B7F3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16318 0000B7F7 4C8B4D00                	mov r9, qword [rbp]
 16319 0000B7FB 4150                    	push r8
 16320 0000B7FD 4151                    	push r9
 16321 0000B7FF 41BA05000000            	mov r10, 1 + 4
 16322 0000B805 4C8B5D18                	mov r11, COUNT
 16323 0000B809 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16324 0000B80E 4C8D65F8                	lea r12, [rbp - 8]
 16325                                  .L_tc_recycle_frame_loop_0096:
 16326 0000B812 4983FA00                	cmp r10, 0
 16327 0000B816 7414                    	je .L_tc_recycle_frame_done_0096
 16328 0000B818 4D8B2C24                	mov r13, qword [r12]
 16329 0000B81C 4D892B                  	mov qword [r11], r13
 16330 0000B81F 49FFCA                  	dec r10
 16331 0000B822 4983EB08                	sub r11, 8
 16332 0000B826 4983EC08                	sub r12, 8
 16333 0000B82A EBE6                    	jmp .L_tc_recycle_frame_loop_0096
 16334                                  .L_tc_recycle_frame_done_0096:
 16335 0000B82C 498D6308                	lea rsp, [r11 + 8]
 16336 0000B830 5D                      	pop rbp
 16337 0000B831 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16338 0000B834 C9                      	leave
 16339 0000B835 C21800                  	ret AND_KILL_FRAME(1)
 16340                                  .L_lambda_simple_end_0051:	; new closure is in rax
 16341 0000B838 803804                  	cmp byte [rax], T_closure
 16342 0000B83B 0F85A1A70000            	jne L_error_non_closure
 16343 0000B841 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16344 0000B844 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16345 0000B848 4C8B4D00                	mov r9, qword [rbp]
 16346 0000B84C 4150                    	push r8
 16347 0000B84E 4151                    	push r9
 16348 0000B850 41BA05000000            	mov r10, 1 + 4
 16349 0000B856 4C8B5D18                	mov r11, COUNT
 16350 0000B85A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16351 0000B85F 4C8D65F8                	lea r12, [rbp - 8]
 16352                                  .L_tc_recycle_frame_loop_0097:
 16353 0000B863 4983FA00                	cmp r10, 0
 16354 0000B867 7414                    	je .L_tc_recycle_frame_done_0097
 16355 0000B869 4D8B2C24                	mov r13, qword [r12]
 16356 0000B86D 4D892B                  	mov qword [r11], r13
 16357 0000B870 49FFCA                  	dec r10
 16358 0000B873 4983EB08                	sub r11, 8
 16359 0000B877 4983EC08                	sub r12, 8
 16360 0000B87B EBE6                    	jmp .L_tc_recycle_frame_loop_0097
 16361                                  .L_tc_recycle_frame_done_0097:
 16362 0000B87D 498D6308                	lea rsp, [r11 + 8]
 16363 0000B881 5D                      	pop rbp
 16364 0000B882 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16365 0000B885 C9                      	leave
 16366 0000B886 C21800                  	ret AND_KILL_FRAME(1)
 16367                                  .L_lambda_simple_end_004e:	; new closure is in rax
 16368 0000B889 803804                  	cmp byte [rax], T_closure
 16369 0000B88C 0F8550A70000            	jne L_error_non_closure
 16370 0000B892 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16371 0000B895 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16372                                  
 16373 0000B898 4889C7                  	mov rdi, rax
 16374 0000B89B E840AA0000              	call print_sexpr_if_not_void
 16375 0000B8A0 48B8-                   	mov rax, L_constants + 0
 16375 0000B8A2 [0000000000000000] 
 16376 0000B8AA 48890425[EC120000]      	mov qword [free_var_75], rax
 16377 0000B8B2 48B8-                   	mov rax, sob_void
 16377 0000B8B4 [0000000000000000] 
 16378                                  
 16379 0000B8BC 4889C7                  	mov rdi, rax
 16380 0000B8BF E81CAA0000              	call print_sexpr_if_not_void
 16381 0000B8C4 48B8-                   	mov rax, L_constants + 0
 16381 0000B8C6 [0000000000000000] 
 16382 0000B8CE 48890425[DB120000]      	mov qword [free_var_74], rax
 16383 0000B8D6 48B8-                   	mov rax, sob_void
 16383 0000B8D8 [0000000000000000] 
 16384                                  
 16385 0000B8E0 4889C7                  	mov rdi, rax
 16386 0000B8E3 E8F8A90000              	call print_sexpr_if_not_void
 16387 0000B8E8 48B8-                   	mov rax, L_constants + 0
 16387 0000B8EA [0000000000000000] 
 16388 0000B8F2 48890425[FD120000]      	mov qword [free_var_76], rax
 16389 0000B8FA 48B8-                   	mov rax, sob_void
 16389 0000B8FC [0000000000000000] 
 16390                                  
 16391 0000B904 4889C7                  	mov rdi, rax
 16392 0000B907 E8D4A90000              	call print_sexpr_if_not_void
 16393 0000B90C 48B8-                   	mov rax, L_constants + 0
 16393 0000B90E [0000000000000000] 
 16394 0000B916 48890425[1F130000]      	mov qword [free_var_78], rax
 16395 0000B91E 48B8-                   	mov rax, sob_void
 16395 0000B920 [0000000000000000] 
 16396                                  
 16397 0000B928 4889C7                  	mov rdi, rax
 16398 0000B92B E8B0A90000              	call print_sexpr_if_not_void
 16399 0000B930 48B8-                   	mov rax, L_constants + 0
 16399 0000B932 [0000000000000000] 
 16400 0000B93A 48890425[0E130000]      	mov qword [free_var_77], rax
 16401 0000B942 48B8-                   	mov rax, sob_void
 16401 0000B944 [0000000000000000] 
 16402                                  
 16403 0000B94C 4889C7                  	mov rdi, rax
 16404 0000B94F E88CA90000              	call print_sexpr_if_not_void
 16405                                  	; preparing a non-tail-call
 16406 0000B954 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16407 0000B959 E82DA70000              	call malloc
 16408 0000B95E 50                      	push rax
 16409 0000B95F BF00000000              	mov rdi, 8 * 0	; new rib
 16410 0000B964 E822A70000              	call malloc
 16411 0000B969 50                      	push rax
 16412 0000B96A BF08000000              	mov rdi, 8 * 1	; extended env
 16413 0000B96F E817A70000              	call malloc
 16414 0000B974 488B7D10                	mov rdi, ENV
 16415 0000B978 BE00000000              	mov rsi, 0
 16416 0000B97D BA01000000              	mov rdx, 1
 16417                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 16418 0000B982 4883FE00                	cmp rsi, 0
 16419 0000B986 7410                    	je .L_lambda_simple_env_end_005f
 16420 0000B988 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16421 0000B98C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16422 0000B990 48FFC6                  	inc rsi
 16423 0000B993 48FFC2                  	inc rdx
 16424 0000B996 EBEA                    	jmp .L_lambda_simple_env_loop_005f
 16425                                  .L_lambda_simple_env_end_005f:
 16426 0000B998 5B                      	pop rbx
 16427 0000B999 BE00000000              	mov rsi, 0
 16428                                  .L_lambda_simple_params_loop_005f:	; copy params
 16429 0000B99E 4883FE00                	cmp rsi, 0
 16430 0000B9A2 740E                    	je .L_lambda_simple_params_end_005f
 16431 0000B9A4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16432 0000B9A9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16433 0000B9AD 48FFC6                  	inc rsi
 16434 0000B9B0 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 16435                                  .L_lambda_simple_params_end_005f:
 16436 0000B9B2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16437 0000B9B5 4889C3                  	mov rbx, rax
 16438 0000B9B8 58                      	pop rax
 16439 0000B9B9 C60004                  	mov byte [rax], T_closure
 16440 0000B9BC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16441 0000B9C0 48C74009[CDB90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 16442 0000B9C8 E93F020000              	jmp .L_lambda_simple_end_005f
 16443                                  .L_lambda_simple_code_005f:	; lambda-simple body
 16444 0000B9CD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16445 0000B9D3 740B                    	je .L_lambda_simple_arity_check_ok_005f
 16446 0000B9D5 FF742410                	push qword [rsp + 8 * 2]
 16447 0000B9D9 6A01                    	push 1
 16448 0000B9DB E964A60000              	jmp L_error_incorrect_arity_simple
 16449                                  .L_lambda_simple_arity_check_ok_005f:
 16450 0000B9E0 C8000000                	enter 0, 0
 16451 0000B9E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16452 0000B9E9 E89DA60000              	call malloc
 16453 0000B9EE 50                      	push rax
 16454 0000B9EF BF08000000              	mov rdi, 8 * 1	; new rib
 16455 0000B9F4 E892A60000              	call malloc
 16456 0000B9F9 50                      	push rax
 16457 0000B9FA BF10000000              	mov rdi, 8 * 2	; extended env
 16458 0000B9FF E887A60000              	call malloc
 16459 0000BA04 488B7D10                	mov rdi, ENV
 16460 0000BA08 BE00000000              	mov rsi, 0
 16461 0000BA0D BA01000000              	mov rdx, 1
 16462                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 16463 0000BA12 4883FE01                	cmp rsi, 1
 16464 0000BA16 7410                    	je .L_lambda_opt_env_end_000f
 16465 0000BA18 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16466 0000BA1C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16467 0000BA20 48FFC6                  	inc rsi
 16468 0000BA23 48FFC2                  	inc rdx
 16469 0000BA26 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16470                                  .L_lambda_opt_env_end_000f:
 16471 0000BA28 5B                      	pop rbx
 16472 0000BA29 BE00000000              	mov rsi, 0
 16473                                  .L_lambda_opt_params_loop_000f:	; copy params
 16474 0000BA2E 4883FE01                	cmp rsi, 1
 16475 0000BA32 740E                    	je .L_lambda_opt_params_end_000f
 16476 0000BA34 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16477 0000BA39 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16478 0000BA3D 48FFC6                  	inc rsi
 16479 0000BA40 EBEC                    	jmp .L_lambda_opt_params_loop_000f
 16480                                  .L_lambda_opt_params_end_000f:
 16481 0000BA42 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16482 0000BA45 4889C3                  	mov rbx, rax
 16483 0000BA48 58                      	pop rax
 16484 0000BA49 C60004                  	mov byte [rax], T_closure
 16485 0000BA4C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16486 0000BA50 48C74009[5DBA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16487 0000BA58 E9AB010000              	jmp .L_lambda_opt_end_000f
 16488                                  .L_lambda_opt_code_000f:
 16489 0000BA5D 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 16490 0000BA62 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 16491 0000BA66 7407                    	je .L_lambda_opt_arity_check_exact_000f	; Jump if arity matches
 16492 0000BA68 7F4C                    	jg .L_lambda_opt_arity_check_more_000f	; Jump if more arguments passed
 16493 0000BA6A E9E9A50000              	jmp L_error_incorrect_arity_opt
 16494                                  .L_lambda_opt_arity_check_exact_000f:
 16495 0000BA6F 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 16496 0000BA72 4983C603                	add r14, 3 ; add 3 first stack values
 16497 0000BA76 41BF00000000            	mov r15, 0 ; r15 = index
 16498 0000BA7C 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 16499 0000BA80 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 16500 0000BA88 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16501                                  .L_lambda_opt_stack_shrink_loop_000f:
 16502 0000BA8A 4983FE00                	cmp r14, 0
 16503 0000BA8E 7E11                    	jle .L_make_lambda_opt_exact_finish_000f
 16504 0000BA90 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 16505 0000BA95 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 16506 0000BA99 49FFCE                  	dec r14 ; next loop value
 16507 0000BA9C 49FFC7                  	inc r15 ; update i
 16508 0000BA9F EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16509                                  .L_make_lambda_opt_exact_finish_000f:
 16510 0000BAA1 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 16511 0000BAA9 49FFC2                  	inc r10
 16512 0000BAAC 4C89542410              	mov qword [rsp + 8 * 2], r10
 16513 0000BAB1 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_000f
 16514                                  .L_lambda_opt_arity_check_more_000f:
 16515 0000BAB6 4D89D6                  	mov r14, r10 ; r14 = num args
 16516 0000BAB9 4D89D7                  	mov r15, r10 ; r15 = num args
 16517 0000BABC 41B900000000            	mov r9, 0; r9 = number of params 
 16518 0000BAC2 4D29CE                  	sub r14, r9 ; r14 = extra args
 16519 0000BAC5 4D01F1                  	add r9, r14 ; r9 = num args
 16520 0000BAC8 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 16520 0000BACA [0100000000000000] 
 16521 0000BAD2 EB00                    	jmp .L_make_lambda_opt_arg_list_000f
 16522                                  .L_make_lambda_opt_arg_list_000f:
 16523 0000BAD4 4983FE00                	cmp r14, 0
 16524 0000BAD8 7E2C                    	jle .L_make_lambda_opt_stack_fixed_000f
 16525 0000BADA 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 16526 0000BADF 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 16527 0000BAE2 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 16528 0000BAE8 E89EA50000              	call malloc                         ; Allocate memory, result in rax
 16529 0000BAED C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 16530 0000BAF0 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 16531 0000BAF4 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 16532 0000BAF8 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 16533 0000BAFB 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 16534 0000BAFE 49FFC9                  	dec r9                              ; args index minus 1
 16535 0000BB01 49FFCE                  	dec r14                             ; next iteration
 16536 0000BB04 EBCE                    	jmp .L_make_lambda_opt_arg_list_000f
 16537                                  .L_make_lambda_opt_stack_fixed_000f:
 16538 0000BB06 4D89FE                  	mov r14, r15 ; r14 = num args
 16539 0000BB09 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 16540 0000BB0C 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 16541 0000BB10 41BA00000000            	mov r10, 0; r10 = num of params
 16542 0000BB16 4D29D6                  	sub r14, r10 ; r14 = extra args
 16543 0000BB19 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 16544 0000BB1C 49FFCE                  	dec r14 ; how much we need to change stack wise?
 16545 0000BB1F 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 16546 0000BB24 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000f
 16547                                  .L_lambda_opt_stack_shrink_loop_more_000f:
 16548 0000BB26 4983F800                	cmp r8, 0
 16549 0000BB2A 7E15                    	jle .L_make_lambda_opt_more_finish_000f
 16550 0000BB2C 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 16551 0000BB30 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 16552 0000BB34 4D8D26                  	lea r12, [r14]
 16553 0000BB37 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 16554 0000BB3C 49FFC8                  	dec r8 ; next iteration
 16555 0000BB3F EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000f
 16556                                  .L_make_lambda_opt_more_finish_000f:
 16557 0000BB41 4D89F8                  	mov r8, r15 ; num of args
 16558 0000BB44 41BA00000000            	mov r10, 0
 16559 0000BB4A 4D29D0                  	sub r8, r10 ; num of new args
 16560 0000BB4D 49FFC0                  	inc r8
 16561 0000BB50 4C89442420              	mov qword [rsp + 8 * 4], r8
 16562 0000BB55 4883C410                	add rsp, 8 * 2  ; 
 16563 0000BB59 EB00                    	jmp .L_lambda_opt_stack_adjusted_000f
 16564                                  .L_lambda_opt_stack_adjusted_000f:
 16565 0000BB5B C8000000                	enter 0, 0
 16566                                  	; Setting up for a tail-call
 16567 0000BB5F 488B4510                	mov rax, ENV
 16568 0000BB63 488B00                  	mov rax, qword [rax + 8 * 0]
 16569 0000BB66 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16570 0000BB69 50                      	push rax
 16571                                  	; preparing a non-tail-call
 16572 0000BB6A 488B4520                	mov rax, PARAM(0)	; param s
 16573 0000BB6E 50                      	push rax
 16574 0000BB6F 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 16575 0000BB77 803805                  	cmp byte [rax], T_undefined
 16576 0000BB7A 0F84DEA30000            	je L_error_fvar_undefined
 16577 0000BB80 50                      	push rax
 16578 0000BB81 6A02                    	push 2	; arg count
 16579 0000BB83 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
 16580 0000BB8B 803805                  	cmp byte [rax], T_undefined
 16581 0000BB8E 0F84CAA30000            	je L_error_fvar_undefined
 16582 0000BB94 803804                  	cmp byte [rax], T_closure
 16583 0000BB97 0F8545A40000            	jne L_error_non_closure
 16584 0000BB9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16585 0000BBA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16586 0000BBA3 50                      	push rax
 16587 0000BBA4 6A02                    	push 2
 16588 0000BBA6 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
 16589 0000BBAE 803805                  	cmp byte [rax], T_undefined
 16590 0000BBB1 0F84A7A30000            	je L_error_fvar_undefined
 16591 0000BBB7 803804                  	cmp byte [rax], T_closure
 16592 0000BBBA 0F8522A40000            	jne L_error_non_closure
 16593 0000BBC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16594 0000BBC3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16595 0000BBC7 4C8B4D00                	mov r9, qword [rbp]
 16596 0000BBCB 4150                    	push r8
 16597 0000BBCD 4151                    	push r9
 16598 0000BBCF 41BA06000000            	mov r10, 2 + 4
 16599 0000BBD5 4C8B5D18                	mov r11, COUNT
 16600 0000BBD9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16601 0000BBDE 4C8D65F8                	lea r12, [rbp - 8]
 16602                                  .L_tc_recycle_frame_loop_0098:
 16603 0000BBE2 4983FA00                	cmp r10, 0
 16604 0000BBE6 7414                    	je .L_tc_recycle_frame_done_0098
 16605 0000BBE8 4D8B2C24                	mov r13, qword [r12]
 16606 0000BBEC 4D892B                  	mov qword [r11], r13
 16607 0000BBEF 49FFCA                  	dec r10
 16608 0000BBF2 4983EB08                	sub r11, 8
 16609 0000BBF6 4983EC08                	sub r12, 8
 16610 0000BBFA EBE6                    	jmp .L_tc_recycle_frame_loop_0098
 16611                                  .L_tc_recycle_frame_done_0098:
 16612 0000BBFC 498D6308                	lea rsp, [r11 + 8]
 16613 0000BC00 5D                      	pop rbp
 16614 0000BC01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16615 0000BC04 C9                      	leave
 16616 0000BC05 C21000                  	ret AND_KILL_FRAME(0)
 16617                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16618 0000BC08 C9                      	leave
 16619 0000BC09 C21800                  	ret AND_KILL_FRAME(1)
 16620                                  .L_lambda_simple_end_005f:	; new closure is in rax
 16621 0000BC0C 50                      	push rax
 16622 0000BC0D 6A01                    	push 1	; arg count
 16623 0000BC0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16624 0000BC14 E872A40000              	call malloc
 16625 0000BC19 50                      	push rax
 16626 0000BC1A BF00000000              	mov rdi, 8 * 0	; new rib
 16627 0000BC1F E867A40000              	call malloc
 16628 0000BC24 50                      	push rax
 16629 0000BC25 BF08000000              	mov rdi, 8 * 1	; extended env
 16630 0000BC2A E85CA40000              	call malloc
 16631 0000BC2F 488B7D10                	mov rdi, ENV
 16632 0000BC33 BE00000000              	mov rsi, 0
 16633 0000BC38 BA01000000              	mov rdx, 1
 16634                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 16635 0000BC3D 4883FE00                	cmp rsi, 0
 16636 0000BC41 7410                    	je .L_lambda_simple_env_end_0060
 16637 0000BC43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16638 0000BC47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16639 0000BC4B 48FFC6                  	inc rsi
 16640 0000BC4E 48FFC2                  	inc rdx
 16641 0000BC51 EBEA                    	jmp .L_lambda_simple_env_loop_0060
 16642                                  .L_lambda_simple_env_end_0060:
 16643 0000BC53 5B                      	pop rbx
 16644 0000BC54 BE00000000              	mov rsi, 0
 16645                                  .L_lambda_simple_params_loop_0060:	; copy params
 16646 0000BC59 4883FE00                	cmp rsi, 0
 16647 0000BC5D 740E                    	je .L_lambda_simple_params_end_0060
 16648 0000BC5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16649 0000BC64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16650 0000BC68 48FFC6                  	inc rsi
 16651 0000BC6B EBEC                    	jmp .L_lambda_simple_params_loop_0060
 16652                                  .L_lambda_simple_params_end_0060:
 16653 0000BC6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16654 0000BC70 4889C3                  	mov rbx, rax
 16655 0000BC73 58                      	pop rax
 16656 0000BC74 C60004                  	mov byte [rax], T_closure
 16657 0000BC77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16658 0000BC7B 48C74009[88BC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 16659 0000BC83 E938010000              	jmp .L_lambda_simple_end_0060
 16660                                  .L_lambda_simple_code_0060:	; lambda-simple body
 16661 0000BC88 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16662 0000BC8E 740B                    	je .L_lambda_simple_arity_check_ok_0060
 16663 0000BC90 FF742410                	push qword [rsp + 8 * 2]
 16664 0000BC94 6A01                    	push 1
 16665 0000BC96 E9A9A30000              	jmp L_error_incorrect_arity_simple
 16666                                  .L_lambda_simple_arity_check_ok_0060:
 16667 0000BC9B C8000000                	enter 0, 0
 16668                                  	; preparing a non-tail-call
 16669 0000BC9F 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 16670 0000BCA7 803805                  	cmp byte [rax], T_undefined
 16671 0000BCAA 0F84AEA20000            	je L_error_fvar_undefined
 16672 0000BCB0 50                      	push rax
 16673 0000BCB1 6A01                    	push 1	; arg count
 16674 0000BCB3 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16675 0000BCB7 803804                  	cmp byte [rax], T_closure
 16676 0000BCBA 0F8522A30000            	jne L_error_non_closure
 16677 0000BCC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16678 0000BCC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16679 0000BCC6 48890425[EC120000]      	mov qword [free_var_75], rax
 16680 0000BCCE 48B8-                   	mov rax, sob_void
 16680 0000BCD0 [0000000000000000] 
 16681                                  
 16682                                  	; preparing a non-tail-call
 16683 0000BCD8 488B0425[460E0000]      	mov rax, qword [free_var_5]	; free var <=
 16684 0000BCE0 803805                  	cmp byte [rax], T_undefined
 16685 0000BCE3 0F8475A20000            	je L_error_fvar_undefined
 16686 0000BCE9 50                      	push rax
 16687 0000BCEA 6A01                    	push 1	; arg count
 16688 0000BCEC 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16689 0000BCF0 803804                  	cmp byte [rax], T_closure
 16690 0000BCF3 0F85E9A20000            	jne L_error_non_closure
 16691 0000BCF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16692 0000BCFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 16693 0000BCFF 48890425[DB120000]      	mov qword [free_var_74], rax
 16694 0000BD07 48B8-                   	mov rax, sob_void
 16694 0000BD09 [0000000000000000] 
 16695                                  
 16696                                  	; preparing a non-tail-call
 16697 0000BD11 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 16698 0000BD19 803805                  	cmp byte [rax], T_undefined
 16699 0000BD1C 0F843CA20000            	je L_error_fvar_undefined
 16700 0000BD22 50                      	push rax
 16701 0000BD23 6A01                    	push 1	; arg count
 16702 0000BD25 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16703 0000BD29 803804                  	cmp byte [rax], T_closure
 16704 0000BD2C 0F85B0A20000            	jne L_error_non_closure
 16705 0000BD32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16706 0000BD35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16707 0000BD38 48890425[FD120000]      	mov qword [free_var_76], rax
 16708 0000BD40 48B8-                   	mov rax, sob_void
 16708 0000BD42 [0000000000000000] 
 16709                                  
 16710                                  	; preparing a non-tail-call
 16711 0000BD4A 488B0425[680E0000]      	mov rax, qword [free_var_7]	; free var >
 16712 0000BD52 803805                  	cmp byte [rax], T_undefined
 16713 0000BD55 0F8403A20000            	je L_error_fvar_undefined
 16714 0000BD5B 50                      	push rax
 16715 0000BD5C 6A01                    	push 1	; arg count
 16716 0000BD5E 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16717 0000BD62 803804                  	cmp byte [rax], T_closure
 16718 0000BD65 0F8577A20000            	jne L_error_non_closure
 16719 0000BD6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16720 0000BD6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16721 0000BD71 48890425[1F130000]      	mov qword [free_var_78], rax
 16722 0000BD79 48B8-                   	mov rax, sob_void
 16722 0000BD7B [0000000000000000] 
 16723                                  
 16724                                  	; preparing a non-tail-call
 16725 0000BD83 488B0425[790E0000]      	mov rax, qword [free_var_8]	; free var >=
 16726 0000BD8B 803805                  	cmp byte [rax], T_undefined
 16727 0000BD8E 0F84CAA10000            	je L_error_fvar_undefined
 16728 0000BD94 50                      	push rax
 16729 0000BD95 6A01                    	push 1	; arg count
 16730 0000BD97 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16731 0000BD9B 803804                  	cmp byte [rax], T_closure
 16732 0000BD9E 0F853EA20000            	jne L_error_non_closure
 16733 0000BDA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16734 0000BDA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16735 0000BDAA 48890425[0E130000]      	mov qword [free_var_77], rax
 16736 0000BDB2 48B8-                   	mov rax, sob_void
 16736 0000BDB4 [0000000000000000] 
 16737 0000BDBC C9                      	leave
 16738 0000BDBD C21800                  	ret AND_KILL_FRAME(1)
 16739                                  .L_lambda_simple_end_0060:	; new closure is in rax
 16740 0000BDC0 803804                  	cmp byte [rax], T_closure
 16741 0000BDC3 0F8519A20000            	jne L_error_non_closure
 16742 0000BDC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16743 0000BDCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 16744                                  
 16745 0000BDCF 4889C7                  	mov rdi, rax
 16746 0000BDD2 E809A50000              	call print_sexpr_if_not_void
 16747 0000BDD7 48B8-                   	mov rax, L_constants + 0
 16747 0000BDD9 [0000000000000000] 
 16748 0000BDE1 48890425[B9120000]      	mov qword [free_var_72], rax
 16749 0000BDE9 48B8-                   	mov rax, sob_void
 16749 0000BDEB [0000000000000000] 
 16750                                  
 16751 0000BDF3 4889C7                  	mov rdi, rax
 16752 0000BDF6 E8E5A40000              	call print_sexpr_if_not_void
 16753 0000BDFB 48B8-                   	mov rax, L_constants + 0
 16753 0000BDFD [0000000000000000] 
 16754 0000BE05 48890425[CA120000]      	mov qword [free_var_73], rax
 16755 0000BE0D 48B8-                   	mov rax, sob_void
 16755 0000BE0F [0000000000000000] 
 16756                                  
 16757 0000BE17 4889C7                  	mov rdi, rax
 16758 0000BE1A E8C1A40000              	call print_sexpr_if_not_void
 16759                                  	; preparing a non-tail-call
 16760                                  	; preparing a non-tail-call
 16761                                  	; preparing a non-tail-call
 16762 0000BE1F 48B8-                   	mov rax, L_constants + 2583
 16762 0000BE21 [170A000000000000] 
 16763 0000BE29 50                      	push rax
 16764 0000BE2A 6A01                    	push 1	; arg count
 16765 0000BE2C 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 16766 0000BE34 803805                  	cmp byte [rax], T_undefined
 16767 0000BE37 0F8421A10000            	je L_error_fvar_undefined
 16768 0000BE3D 803804                  	cmp byte [rax], T_closure
 16769 0000BE40 0F859CA10000            	jne L_error_non_closure
 16770 0000BE46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16771 0000BE49 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16772 0000BE4C 50                      	push rax
 16773                                  	; preparing a non-tail-call
 16774 0000BE4D 48B8-                   	mov rax, L_constants + 2587
 16774 0000BE4F [1B0A000000000000] 
 16775 0000BE57 50                      	push rax
 16776 0000BE58 6A01                    	push 1	; arg count
 16777 0000BE5A 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 16778 0000BE62 803805                  	cmp byte [rax], T_undefined
 16779 0000BE65 0F84F3A00000            	je L_error_fvar_undefined
 16780 0000BE6B 803804                  	cmp byte [rax], T_closure
 16781 0000BE6E 0F856EA10000            	jne L_error_non_closure
 16782 0000BE74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16783 0000BE77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16784 0000BE7A 50                      	push rax
 16785 0000BE7B 6A02                    	push 2	; arg count
 16786 0000BE7D 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 16787 0000BE85 803805                  	cmp byte [rax], T_undefined
 16788 0000BE88 0F84D0A00000            	je L_error_fvar_undefined
 16789 0000BE8E 803804                  	cmp byte [rax], T_closure
 16790 0000BE91 0F854BA10000            	jne L_error_non_closure
 16791 0000BE97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16792 0000BE9A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16793 0000BE9D 50                      	push rax
 16794 0000BE9E 6A01                    	push 1	; arg count
 16795 0000BEA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16796 0000BEA5 E8E1A10000              	call malloc
 16797 0000BEAA 50                      	push rax
 16798 0000BEAB BF00000000              	mov rdi, 8 * 0	; new rib
 16799 0000BEB0 E8D6A10000              	call malloc
 16800 0000BEB5 50                      	push rax
 16801 0000BEB6 BF08000000              	mov rdi, 8 * 1	; extended env
 16802 0000BEBB E8CBA10000              	call malloc
 16803 0000BEC0 488B7D10                	mov rdi, ENV
 16804 0000BEC4 BE00000000              	mov rsi, 0
 16805 0000BEC9 BA01000000              	mov rdx, 1
 16806                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 16807 0000BECE 4883FE00                	cmp rsi, 0
 16808 0000BED2 7410                    	je .L_lambda_simple_env_end_0061
 16809 0000BED4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16810 0000BED8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16811 0000BEDC 48FFC6                  	inc rsi
 16812 0000BEDF 48FFC2                  	inc rdx
 16813 0000BEE2 EBEA                    	jmp .L_lambda_simple_env_loop_0061
 16814                                  .L_lambda_simple_env_end_0061:
 16815 0000BEE4 5B                      	pop rbx
 16816 0000BEE5 BE00000000              	mov rsi, 0
 16817                                  .L_lambda_simple_params_loop_0061:	; copy params
 16818 0000BEEA 4883FE00                	cmp rsi, 0
 16819 0000BEEE 740E                    	je .L_lambda_simple_params_end_0061
 16820 0000BEF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16821 0000BEF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16822 0000BEF9 48FFC6                  	inc rsi
 16823 0000BEFC EBEC                    	jmp .L_lambda_simple_params_loop_0061
 16824                                  .L_lambda_simple_params_end_0061:
 16825 0000BEFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16826 0000BF01 4889C3                  	mov rbx, rax
 16827 0000BF04 58                      	pop rax
 16828 0000BF05 C60004                  	mov byte [rax], T_closure
 16829 0000BF08 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16830 0000BF0C 48C74009[19BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 16831 0000BF14 E971030000              	jmp .L_lambda_simple_end_0061
 16832                                  .L_lambda_simple_code_0061:	; lambda-simple body
 16833 0000BF19 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16834 0000BF1F 740B                    	je .L_lambda_simple_arity_check_ok_0061
 16835 0000BF21 FF742410                	push qword [rsp + 8 * 2]
 16836 0000BF25 6A01                    	push 1
 16837 0000BF27 E918A10000              	jmp L_error_incorrect_arity_simple
 16838                                  .L_lambda_simple_arity_check_ok_0061:
 16839 0000BF2C C8000000                	enter 0, 0
 16840 0000BF30 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16841 0000BF35 E851A10000              	call malloc
 16842 0000BF3A 50                      	push rax
 16843 0000BF3B BF08000000              	mov rdi, 8 * 1	; new rib
 16844 0000BF40 E846A10000              	call malloc
 16845 0000BF45 50                      	push rax
 16846 0000BF46 BF10000000              	mov rdi, 8 * 2	; extended env
 16847 0000BF4B E83BA10000              	call malloc
 16848 0000BF50 488B7D10                	mov rdi, ENV
 16849 0000BF54 BE00000000              	mov rsi, 0
 16850 0000BF59 BA01000000              	mov rdx, 1
 16851                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 16852 0000BF5E 4883FE01                	cmp rsi, 1
 16853 0000BF62 7410                    	je .L_lambda_simple_env_end_0062
 16854 0000BF64 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16855 0000BF68 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16856 0000BF6C 48FFC6                  	inc rsi
 16857 0000BF6F 48FFC2                  	inc rdx
 16858 0000BF72 EBEA                    	jmp .L_lambda_simple_env_loop_0062
 16859                                  .L_lambda_simple_env_end_0062:
 16860 0000BF74 5B                      	pop rbx
 16861 0000BF75 BE00000000              	mov rsi, 0
 16862                                  .L_lambda_simple_params_loop_0062:	; copy params
 16863 0000BF7A 4883FE01                	cmp rsi, 1
 16864 0000BF7E 740E                    	je .L_lambda_simple_params_end_0062
 16865 0000BF80 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16866 0000BF85 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16867 0000BF89 48FFC6                  	inc rsi
 16868 0000BF8C EBEC                    	jmp .L_lambda_simple_params_loop_0062
 16869                                  .L_lambda_simple_params_end_0062:
 16870 0000BF8E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16871 0000BF91 4889C3                  	mov rbx, rax
 16872 0000BF94 58                      	pop rax
 16873 0000BF95 C60004                  	mov byte [rax], T_closure
 16874 0000BF98 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16875 0000BF9C 48C74009[A9BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 16876 0000BFA4 E920010000              	jmp .L_lambda_simple_end_0062
 16877                                  .L_lambda_simple_code_0062:	; lambda-simple body
 16878 0000BFA9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16879 0000BFAF 740B                    	je .L_lambda_simple_arity_check_ok_0062
 16880 0000BFB1 FF742410                	push qword [rsp + 8 * 2]
 16881 0000BFB5 6A01                    	push 1
 16882 0000BFB7 E988A00000              	jmp L_error_incorrect_arity_simple
 16883                                  .L_lambda_simple_arity_check_ok_0062:
 16884 0000BFBC C8000000                	enter 0, 0
 16885                                  	; preparing a non-tail-call
 16886 0000BFC0 48B8-                   	mov rax, L_constants + 2585
 16886 0000BFC2 [190A000000000000] 
 16887 0000BFCA 50                      	push rax
 16888 0000BFCB 488B4520                	mov rax, PARAM(0)	; param ch
 16889 0000BFCF 50                      	push rax
 16890 0000BFD0 48B8-                   	mov rax, L_constants + 2583
 16890 0000BFD2 [170A000000000000] 
 16891 0000BFDA 50                      	push rax
 16892 0000BFDB 6A03                    	push 3	; arg count
 16893 0000BFDD 488B0425[DB120000]      	mov rax, qword [free_var_74]	; free var char<=?
 16894 0000BFE5 803805                  	cmp byte [rax], T_undefined
 16895 0000BFE8 0F84709F0000            	je L_error_fvar_undefined
 16896 0000BFEE 803804                  	cmp byte [rax], T_closure
 16897 0000BFF1 0F85EB9F0000            	jne L_error_non_closure
 16898 0000BFF7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16899 0000BFFA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16900 0000BFFD 483D[02000000]          	cmp rax, sob_boolean_false
 16901 0000C003 0F84B8000000            	je .L_if_else_0051
 16902                                  	; Setting up for a tail-call
 16903                                  	; preparing a non-tail-call
 16904 0000C009 488B4510                	mov rax, ENV
 16905 0000C00D 488B00                  	mov rax, qword [rax + 8 * 0]
 16906 0000C010 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16907 0000C013 50                      	push rax
 16908                                  	; preparing a non-tail-call
 16909 0000C014 488B4520                	mov rax, PARAM(0)	; param ch
 16910 0000C018 50                      	push rax
 16911 0000C019 6A01                    	push 1	; arg count
 16912 0000C01B 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 16913 0000C023 803805                  	cmp byte [rax], T_undefined
 16914 0000C026 0F84329F0000            	je L_error_fvar_undefined
 16915 0000C02C 803804                  	cmp byte [rax], T_closure
 16916 0000C02F 0F85AD9F0000            	jne L_error_non_closure
 16917 0000C035 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16918 0000C038 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16919 0000C03B 50                      	push rax
 16920 0000C03C 6A02                    	push 2	; arg count
 16921 0000C03E 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 16922 0000C046 803805                  	cmp byte [rax], T_undefined
 16923 0000C049 0F840F9F0000            	je L_error_fvar_undefined
 16924 0000C04F 803804                  	cmp byte [rax], T_closure
 16925 0000C052 0F858A9F0000            	jne L_error_non_closure
 16926 0000C058 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16927 0000C05B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16928 0000C05E 50                      	push rax
 16929 0000C05F 6A01                    	push 1
 16930 0000C061 488B0425[EB130000]      	mov rax, qword [free_var_90]	; free var integer->char
 16931 0000C069 803805                  	cmp byte [rax], T_undefined
 16932 0000C06C 0F84EC9E0000            	je L_error_fvar_undefined
 16933 0000C072 803804                  	cmp byte [rax], T_closure
 16934 0000C075 0F85679F0000            	jne L_error_non_closure
 16935 0000C07B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16936 0000C07E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 16937 0000C082 4C8B4D00                	mov r9, qword [rbp]
 16938 0000C086 4150                    	push r8
 16939 0000C088 4151                    	push r9
 16940 0000C08A 41BA05000000            	mov r10, 1 + 4
 16941 0000C090 4C8B5D18                	mov r11, COUNT
 16942 0000C094 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 16943 0000C099 4C8D65F8                	lea r12, [rbp - 8]
 16944                                  .L_tc_recycle_frame_loop_0099:
 16945 0000C09D 4983FA00                	cmp r10, 0
 16946 0000C0A1 7414                    	je .L_tc_recycle_frame_done_0099
 16947 0000C0A3 4D8B2C24                	mov r13, qword [r12]
 16948 0000C0A7 4D892B                  	mov qword [r11], r13
 16949 0000C0AA 49FFCA                  	dec r10
 16950 0000C0AD 4983EB08                	sub r11, 8
 16951 0000C0B1 4983EC08                	sub r12, 8
 16952 0000C0B5 EBE6                    	jmp .L_tc_recycle_frame_loop_0099
 16953                                  .L_tc_recycle_frame_done_0099:
 16954 0000C0B7 498D6308                	lea rsp, [r11 + 8]
 16955 0000C0BB 5D                      	pop rbp
 16956 0000C0BC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16957 0000C0BF EB04                    	jmp .L_if_end_0051
 16958                                  .L_if_else_0051:
 16959 0000C0C1 488B4520                	mov rax, PARAM(0)	; param ch
 16960                                  .L_if_end_0051:
 16961 0000C0C5 C9                      	leave
 16962 0000C0C6 C21800                  	ret AND_KILL_FRAME(1)
 16963                                  .L_lambda_simple_end_0062:	; new closure is in rax
 16964 0000C0C9 48890425[B9120000]      	mov qword [free_var_72], rax
 16965 0000C0D1 48B8-                   	mov rax, sob_void
 16965 0000C0D3 [0000000000000000] 
 16966                                  
 16967 0000C0DB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16968 0000C0E0 E8A69F0000              	call malloc
 16969 0000C0E5 50                      	push rax
 16970 0000C0E6 BF08000000              	mov rdi, 8 * 1	; new rib
 16971 0000C0EB E89B9F0000              	call malloc
 16972 0000C0F0 50                      	push rax
 16973 0000C0F1 BF10000000              	mov rdi, 8 * 2	; extended env
 16974 0000C0F6 E8909F0000              	call malloc
 16975 0000C0FB 488B7D10                	mov rdi, ENV
 16976 0000C0FF BE00000000              	mov rsi, 0
 16977 0000C104 BA01000000              	mov rdx, 1
 16978                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 16979 0000C109 4883FE01                	cmp rsi, 1
 16980 0000C10D 7410                    	je .L_lambda_simple_env_end_0063
 16981 0000C10F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16982 0000C113 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16983 0000C117 48FFC6                  	inc rsi
 16984 0000C11A 48FFC2                  	inc rdx
 16985 0000C11D EBEA                    	jmp .L_lambda_simple_env_loop_0063
 16986                                  .L_lambda_simple_env_end_0063:
 16987 0000C11F 5B                      	pop rbx
 16988 0000C120 BE00000000              	mov rsi, 0
 16989                                  .L_lambda_simple_params_loop_0063:	; copy params
 16990 0000C125 4883FE01                	cmp rsi, 1
 16991 0000C129 740E                    	je .L_lambda_simple_params_end_0063
 16992 0000C12B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16993 0000C130 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16994 0000C134 48FFC6                  	inc rsi
 16995 0000C137 EBEC                    	jmp .L_lambda_simple_params_loop_0063
 16996                                  .L_lambda_simple_params_end_0063:
 16997 0000C139 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16998 0000C13C 4889C3                  	mov rbx, rax
 16999 0000C13F 58                      	pop rax
 17000 0000C140 C60004                  	mov byte [rax], T_closure
 17001 0000C143 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17002 0000C147 48C74009[54C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17003 0000C14F E920010000              	jmp .L_lambda_simple_end_0063
 17004                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17005 0000C154 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17006 0000C15A 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17007 0000C15C FF742410                	push qword [rsp + 8 * 2]
 17008 0000C160 6A01                    	push 1
 17009 0000C162 E9DD9E0000              	jmp L_error_incorrect_arity_simple
 17010                                  .L_lambda_simple_arity_check_ok_0063:
 17011 0000C167 C8000000                	enter 0, 0
 17012                                  	; preparing a non-tail-call
 17013 0000C16B 48B8-                   	mov rax, L_constants + 2589
 17013 0000C16D [1D0A000000000000] 
 17014 0000C175 50                      	push rax
 17015 0000C176 488B4520                	mov rax, PARAM(0)	; param ch
 17016 0000C17A 50                      	push rax
 17017 0000C17B 48B8-                   	mov rax, L_constants + 2587
 17017 0000C17D [1B0A000000000000] 
 17018 0000C185 50                      	push rax
 17019 0000C186 6A03                    	push 3	; arg count
 17020 0000C188 488B0425[DB120000]      	mov rax, qword [free_var_74]	; free var char<=?
 17021 0000C190 803805                  	cmp byte [rax], T_undefined
 17022 0000C193 0F84C59D0000            	je L_error_fvar_undefined
 17023 0000C199 803804                  	cmp byte [rax], T_closure
 17024 0000C19C 0F85409E0000            	jne L_error_non_closure
 17025 0000C1A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17026 0000C1A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17027 0000C1A8 483D[02000000]          	cmp rax, sob_boolean_false
 17028 0000C1AE 0F84B8000000            	je .L_if_else_0052
 17029                                  	; Setting up for a tail-call
 17030                                  	; preparing a non-tail-call
 17031 0000C1B4 488B4510                	mov rax, ENV
 17032 0000C1B8 488B00                  	mov rax, qword [rax + 8 * 0]
 17033 0000C1BB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17034 0000C1BE 50                      	push rax
 17035                                  	; preparing a non-tail-call
 17036 0000C1BF 488B4520                	mov rax, PARAM(0)	; param ch
 17037 0000C1C3 50                      	push rax
 17038 0000C1C4 6A01                    	push 1	; arg count
 17039 0000C1C6 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 17040 0000C1CE 803805                  	cmp byte [rax], T_undefined
 17041 0000C1D1 0F84879D0000            	je L_error_fvar_undefined
 17042 0000C1D7 803804                  	cmp byte [rax], T_closure
 17043 0000C1DA 0F85029E0000            	jne L_error_non_closure
 17044 0000C1E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17045 0000C1E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17046 0000C1E6 50                      	push rax
 17047 0000C1E7 6A02                    	push 2	; arg count
 17048 0000C1E9 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 17049 0000C1F1 803805                  	cmp byte [rax], T_undefined
 17050 0000C1F4 0F84649D0000            	je L_error_fvar_undefined
 17051 0000C1FA 803804                  	cmp byte [rax], T_closure
 17052 0000C1FD 0F85DF9D0000            	jne L_error_non_closure
 17053 0000C203 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17054 0000C206 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17055 0000C209 50                      	push rax
 17056 0000C20A 6A01                    	push 1
 17057 0000C20C 488B0425[EB130000]      	mov rax, qword [free_var_90]	; free var integer->char
 17058 0000C214 803805                  	cmp byte [rax], T_undefined
 17059 0000C217 0F84419D0000            	je L_error_fvar_undefined
 17060 0000C21D 803804                  	cmp byte [rax], T_closure
 17061 0000C220 0F85BC9D0000            	jne L_error_non_closure
 17062 0000C226 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17063 0000C229 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 17064 0000C22D 4C8B4D00                	mov r9, qword [rbp]
 17065 0000C231 4150                    	push r8
 17066 0000C233 4151                    	push r9
 17067 0000C235 41BA05000000            	mov r10, 1 + 4
 17068 0000C23B 4C8B5D18                	mov r11, COUNT
 17069 0000C23F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 17070 0000C244 4C8D65F8                	lea r12, [rbp - 8]
 17071                                  .L_tc_recycle_frame_loop_009a:
 17072 0000C248 4983FA00                	cmp r10, 0
 17073 0000C24C 7414                    	je .L_tc_recycle_frame_done_009a
 17074 0000C24E 4D8B2C24                	mov r13, qword [r12]
 17075 0000C252 4D892B                  	mov qword [r11], r13
 17076 0000C255 49FFCA                  	dec r10
 17077 0000C258 4983EB08                	sub r11, 8
 17078 0000C25C 4983EC08                	sub r12, 8
 17079 0000C260 EBE6                    	jmp .L_tc_recycle_frame_loop_009a
 17080                                  .L_tc_recycle_frame_done_009a:
 17081 0000C262 498D6308                	lea rsp, [r11 + 8]
 17082 0000C266 5D                      	pop rbp
 17083 0000C267 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17084 0000C26A EB04                    	jmp .L_if_end_0052
 17085                                  .L_if_else_0052:
 17086 0000C26C 488B4520                	mov rax, PARAM(0)	; param ch
 17087                                  .L_if_end_0052:
 17088 0000C270 C9                      	leave
 17089 0000C271 C21800                  	ret AND_KILL_FRAME(1)
 17090                                  .L_lambda_simple_end_0063:	; new closure is in rax
 17091 0000C274 48890425[CA120000]      	mov qword [free_var_73], rax
 17092 0000C27C 48B8-                   	mov rax, sob_void
 17092 0000C27E [0000000000000000] 
 17093 0000C286 C9                      	leave
 17094 0000C287 C21800                  	ret AND_KILL_FRAME(1)
 17095                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17096 0000C28A 803804                  	cmp byte [rax], T_closure
 17097 0000C28D 0F854F9D0000            	jne L_error_non_closure
 17098 0000C293 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17099 0000C296 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17100                                  
 17101 0000C299 4889C7                  	mov rdi, rax
 17102 0000C29C E83FA00000              	call print_sexpr_if_not_void
 17103 0000C2A1 48B8-                   	mov rax, L_constants + 0
 17103 0000C2A3 [0000000000000000] 
 17104 0000C2AB 48890425[75120000]      	mov qword [free_var_68], rax
 17105 0000C2B3 48B8-                   	mov rax, sob_void
 17105 0000C2B5 [0000000000000000] 
 17106                                  
 17107 0000C2BD 4889C7                  	mov rdi, rax
 17108 0000C2C0 E81BA00000              	call print_sexpr_if_not_void
 17109 0000C2C5 48B8-                   	mov rax, L_constants + 0
 17109 0000C2C7 [0000000000000000] 
 17110 0000C2CF 48890425[64120000]      	mov qword [free_var_67], rax
 17111 0000C2D7 48B8-                   	mov rax, sob_void
 17111 0000C2D9 [0000000000000000] 
 17112                                  
 17113 0000C2E1 4889C7                  	mov rdi, rax
 17114 0000C2E4 E8F79F0000              	call print_sexpr_if_not_void
 17115 0000C2E9 48B8-                   	mov rax, L_constants + 0
 17115 0000C2EB [0000000000000000] 
 17116 0000C2F3 48890425[86120000]      	mov qword [free_var_69], rax
 17117 0000C2FB 48B8-                   	mov rax, sob_void
 17117 0000C2FD [0000000000000000] 
 17118                                  
 17119 0000C305 4889C7                  	mov rdi, rax
 17120 0000C308 E8D39F0000              	call print_sexpr_if_not_void
 17121 0000C30D 48B8-                   	mov rax, L_constants + 0
 17121 0000C30F [0000000000000000] 
 17122 0000C317 48890425[A8120000]      	mov qword [free_var_71], rax
 17123 0000C31F 48B8-                   	mov rax, sob_void
 17123 0000C321 [0000000000000000] 
 17124                                  
 17125 0000C329 4889C7                  	mov rdi, rax
 17126 0000C32C E8AF9F0000              	call print_sexpr_if_not_void
 17127 0000C331 48B8-                   	mov rax, L_constants + 0
 17127 0000C333 [0000000000000000] 
 17128 0000C33B 48890425[97120000]      	mov qword [free_var_70], rax
 17129 0000C343 48B8-                   	mov rax, sob_void
 17129 0000C345 [0000000000000000] 
 17130                                  
 17131 0000C34D 4889C7                  	mov rdi, rax
 17132 0000C350 E88B9F0000              	call print_sexpr_if_not_void
 17133                                  	; preparing a non-tail-call
 17134 0000C355 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17135 0000C35A E82C9D0000              	call malloc
 17136 0000C35F 50                      	push rax
 17137 0000C360 BF00000000              	mov rdi, 8 * 0	; new rib
 17138 0000C365 E8219D0000              	call malloc
 17139 0000C36A 50                      	push rax
 17140 0000C36B BF08000000              	mov rdi, 8 * 1	; extended env
 17141 0000C370 E8169D0000              	call malloc
 17142 0000C375 488B7D10                	mov rdi, ENV
 17143 0000C379 BE00000000              	mov rsi, 0
 17144 0000C37E BA01000000              	mov rdx, 1
 17145                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17146 0000C383 4883FE00                	cmp rsi, 0
 17147 0000C387 7410                    	je .L_lambda_simple_env_end_0064
 17148 0000C389 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17149 0000C38D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17150 0000C391 48FFC6                  	inc rsi
 17151 0000C394 48FFC2                  	inc rdx
 17152 0000C397 EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17153                                  .L_lambda_simple_env_end_0064:
 17154 0000C399 5B                      	pop rbx
 17155 0000C39A BE00000000              	mov rsi, 0
 17156                                  .L_lambda_simple_params_loop_0064:	; copy params
 17157 0000C39F 4883FE00                	cmp rsi, 0
 17158 0000C3A3 740E                    	je .L_lambda_simple_params_end_0064
 17159 0000C3A5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17160 0000C3AA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17161 0000C3AE 48FFC6                  	inc rsi
 17162 0000C3B1 EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17163                                  .L_lambda_simple_params_end_0064:
 17164 0000C3B3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17165 0000C3B6 4889C3                  	mov rbx, rax
 17166 0000C3B9 58                      	pop rax
 17167 0000C3BA C60004                  	mov byte [rax], T_closure
 17168 0000C3BD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17169 0000C3C1 48C74009[CEC30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17170 0000C3C9 E94A030000              	jmp .L_lambda_simple_end_0064
 17171                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17172 0000C3CE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17173 0000C3D4 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17174 0000C3D6 FF742410                	push qword [rsp + 8 * 2]
 17175 0000C3DA 6A01                    	push 1
 17176 0000C3DC E9639C0000              	jmp L_error_incorrect_arity_simple
 17177                                  .L_lambda_simple_arity_check_ok_0064:
 17178 0000C3E1 C8000000                	enter 0, 0
 17179 0000C3E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17180 0000C3EA E89C9C0000              	call malloc
 17181 0000C3EF 50                      	push rax
 17182 0000C3F0 BF08000000              	mov rdi, 8 * 1	; new rib
 17183 0000C3F5 E8919C0000              	call malloc
 17184 0000C3FA 50                      	push rax
 17185 0000C3FB BF10000000              	mov rdi, 8 * 2	; extended env
 17186 0000C400 E8869C0000              	call malloc
 17187 0000C405 488B7D10                	mov rdi, ENV
 17188 0000C409 BE00000000              	mov rsi, 0
 17189 0000C40E BA01000000              	mov rdx, 1
 17190                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 17191 0000C413 4883FE01                	cmp rsi, 1
 17192 0000C417 7410                    	je .L_lambda_opt_env_end_0010
 17193 0000C419 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17194 0000C41D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17195 0000C421 48FFC6                  	inc rsi
 17196 0000C424 48FFC2                  	inc rdx
 17197 0000C427 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 17198                                  .L_lambda_opt_env_end_0010:
 17199 0000C429 5B                      	pop rbx
 17200 0000C42A BE00000000              	mov rsi, 0
 17201                                  .L_lambda_opt_params_loop_0010:	; copy params
 17202 0000C42F 4883FE01                	cmp rsi, 1
 17203 0000C433 740E                    	je .L_lambda_opt_params_end_0010
 17204 0000C435 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17205 0000C43A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17206 0000C43E 48FFC6                  	inc rsi
 17207 0000C441 EBEC                    	jmp .L_lambda_opt_params_loop_0010
 17208                                  .L_lambda_opt_params_end_0010:
 17209 0000C443 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17210 0000C446 4889C3                  	mov rbx, rax
 17211 0000C449 58                      	pop rax
 17212 0000C44A C60004                  	mov byte [rax], T_closure
 17213 0000C44D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17214 0000C451 48C74009[5EC40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 17215 0000C459 E9B6020000              	jmp .L_lambda_opt_end_0010
 17216                                  .L_lambda_opt_code_0010:
 17217 0000C45E 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 17218 0000C463 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 17219 0000C467 7407                    	je .L_lambda_opt_arity_check_exact_0010	; Jump if arity matches
 17220 0000C469 7F4C                    	jg .L_lambda_opt_arity_check_more_0010	; Jump if more arguments passed
 17221 0000C46B E9E89B0000              	jmp L_error_incorrect_arity_opt
 17222                                  .L_lambda_opt_arity_check_exact_0010:
 17223 0000C470 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 17224 0000C473 4983C603                	add r14, 3 ; add 3 first stack values
 17225 0000C477 41BF00000000            	mov r15, 0 ; r15 = index
 17226 0000C47D 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 17227 0000C481 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 17228 0000C489 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 17229                                  .L_lambda_opt_stack_shrink_loop_0010:
 17230 0000C48B 4983FE00                	cmp r14, 0
 17231 0000C48F 7E11                    	jle .L_make_lambda_opt_exact_finish_0010
 17232 0000C491 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 17233 0000C496 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 17234 0000C49A 49FFCE                  	dec r14 ; next loop value
 17235 0000C49D 49FFC7                  	inc r15 ; update i
 17236 0000C4A0 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 17237                                  .L_make_lambda_opt_exact_finish_0010:
 17238 0000C4A2 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 17239 0000C4AA 49FFC2                  	inc r10
 17240 0000C4AD 4C89542410              	mov qword [rsp + 8 * 2], r10
 17241 0000C4B2 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0010
 17242                                  .L_lambda_opt_arity_check_more_0010:
 17243 0000C4B7 4D89D6                  	mov r14, r10 ; r14 = num args
 17244 0000C4BA 4D89D7                  	mov r15, r10 ; r15 = num args
 17245 0000C4BD 41B900000000            	mov r9, 0; r9 = number of params 
 17246 0000C4C3 4D29CE                  	sub r14, r9 ; r14 = extra args
 17247 0000C4C6 4D01F1                  	add r9, r14 ; r9 = num args
 17248 0000C4C9 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 17248 0000C4CB [0100000000000000] 
 17249 0000C4D3 EB00                    	jmp .L_make_lambda_opt_arg_list_0010
 17250                                  .L_make_lambda_opt_arg_list_0010:
 17251 0000C4D5 4983FE00                	cmp r14, 0
 17252 0000C4D9 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0010
 17253 0000C4DB 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 17254 0000C4E0 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 17255 0000C4E3 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 17256 0000C4E9 E89D9B0000              	call malloc                         ; Allocate memory, result in rax
 17257 0000C4EE C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 17258 0000C4F1 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 17259 0000C4F5 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 17260 0000C4F9 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 17261 0000C4FC 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 17262 0000C4FF 49FFC9                  	dec r9                              ; args index minus 1
 17263 0000C502 49FFCE                  	dec r14                             ; next iteration
 17264 0000C505 EBCE                    	jmp .L_make_lambda_opt_arg_list_0010
 17265                                  .L_make_lambda_opt_stack_fixed_0010:
 17266 0000C507 4D89FE                  	mov r14, r15 ; r14 = num args
 17267 0000C50A 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 17268 0000C50D 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 17269 0000C511 41BA00000000            	mov r10, 0; r10 = num of params
 17270 0000C517 4D29D6                  	sub r14, r10 ; r14 = extra args
 17271 0000C51A 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 17272 0000C51D 49FFCE                  	dec r14 ; how much we need to change stack wise?
 17273 0000C520 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 17274 0000C525 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0010
 17275                                  .L_lambda_opt_stack_shrink_loop_more_0010:
 17276 0000C527 4983F800                	cmp r8, 0
 17277 0000C52B 7E15                    	jle .L_make_lambda_opt_more_finish_0010
 17278 0000C52D 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 17279 0000C531 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 17280 0000C535 4D8D26                  	lea r12, [r14]
 17281 0000C538 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 17282 0000C53D 49FFC8                  	dec r8 ; next iteration
 17283 0000C540 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0010
 17284                                  .L_make_lambda_opt_more_finish_0010:
 17285 0000C542 4D89F8                  	mov r8, r15 ; num of args
 17286 0000C545 41BA00000000            	mov r10, 0
 17287 0000C54B 4D29D0                  	sub r8, r10 ; num of new args
 17288 0000C54E 49FFC0                  	inc r8
 17289 0000C551 4C89442420              	mov qword [rsp + 8 * 4], r8
 17290 0000C556 4883C410                	add rsp, 8 * 2  ; 
 17291 0000C55A EB00                    	jmp .L_lambda_opt_stack_adjusted_0010
 17292                                  .L_lambda_opt_stack_adjusted_0010:
 17293 0000C55C C8000000                	enter 0, 0
 17294                                  	; Setting up for a tail-call
 17295 0000C560 488B4510                	mov rax, ENV
 17296 0000C564 488B00                  	mov rax, qword [rax + 8 * 0]
 17297 0000C567 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17298 0000C56A 50                      	push rax
 17299                                  	; preparing a non-tail-call
 17300 0000C56B 488B4520                	mov rax, PARAM(0)	; param s
 17301 0000C56F 50                      	push rax
 17302 0000C570 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17303 0000C575 E8119B0000              	call malloc
 17304 0000C57A 50                      	push rax
 17305 0000C57B BF00000000              	mov rdi, 8 * 0	; new rib
 17306 0000C580 E8069B0000              	call malloc
 17307 0000C585 50                      	push rax
 17308 0000C586 BF18000000              	mov rdi, 8 * 3	; extended env
 17309 0000C58B E8FB9A0000              	call malloc
 17310 0000C590 488B7D10                	mov rdi, ENV
 17311 0000C594 BE00000000              	mov rsi, 0
 17312 0000C599 BA01000000              	mov rdx, 1
 17313                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17314 0000C59E 4883FE02                	cmp rsi, 2
 17315 0000C5A2 7410                    	je .L_lambda_simple_env_end_0065
 17316 0000C5A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17317 0000C5A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17318 0000C5AC 48FFC6                  	inc rsi
 17319 0000C5AF 48FFC2                  	inc rdx
 17320 0000C5B2 EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17321                                  .L_lambda_simple_env_end_0065:
 17322 0000C5B4 5B                      	pop rbx
 17323 0000C5B5 BE00000000              	mov rsi, 0
 17324                                  .L_lambda_simple_params_loop_0065:	; copy params
 17325 0000C5BA 4883FE00                	cmp rsi, 0
 17326 0000C5BE 740E                    	je .L_lambda_simple_params_end_0065
 17327 0000C5C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17328 0000C5C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17329 0000C5C9 48FFC6                  	inc rsi
 17330 0000C5CC EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17331                                  .L_lambda_simple_params_end_0065:
 17332 0000C5CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17333 0000C5D1 4889C3                  	mov rbx, rax
 17334 0000C5D4 58                      	pop rax
 17335 0000C5D5 C60004                  	mov byte [rax], T_closure
 17336 0000C5D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17337 0000C5DC 48C74009[E9C50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17338 0000C5E4 E9A3000000              	jmp .L_lambda_simple_end_0065
 17339                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17340 0000C5E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17341 0000C5EF 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17342 0000C5F1 FF742410                	push qword [rsp + 8 * 2]
 17343 0000C5F5 6A01                    	push 1
 17344 0000C5F7 E9489A0000              	jmp L_error_incorrect_arity_simple
 17345                                  .L_lambda_simple_arity_check_ok_0065:
 17346 0000C5FC C8000000                	enter 0, 0
 17347                                  	; Setting up for a tail-call
 17348                                  	; preparing a non-tail-call
 17349 0000C600 488B4520                	mov rax, PARAM(0)	; param ch
 17350 0000C604 50                      	push rax
 17351 0000C605 6A01                    	push 1	; arg count
 17352 0000C607 488B0425[B9120000]      	mov rax, qword [free_var_72]	; free var char-downcase
 17353 0000C60F 803805                  	cmp byte [rax], T_undefined
 17354 0000C612 0F8446990000            	je L_error_fvar_undefined
 17355 0000C618 803804                  	cmp byte [rax], T_closure
 17356 0000C61B 0F85C1990000            	jne L_error_non_closure
 17357 0000C621 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17358 0000C624 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17359 0000C627 50                      	push rax
 17360 0000C628 6A01                    	push 1
 17361 0000C62A 488B0425[53120000]      	mov rax, qword [free_var_66]	; free var char->integer
 17362 0000C632 803805                  	cmp byte [rax], T_undefined
 17363 0000C635 0F8423990000            	je L_error_fvar_undefined
 17364 0000C63B 803804                  	cmp byte [rax], T_closure
 17365 0000C63E 0F859E990000            	jne L_error_non_closure
 17366 0000C644 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17367 0000C647 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 17368 0000C64B 4C8B4D00                	mov r9, qword [rbp]
 17369 0000C64F 4150                    	push r8
 17370 0000C651 4151                    	push r9
 17371 0000C653 41BA05000000            	mov r10, 1 + 4
 17372 0000C659 4C8B5D18                	mov r11, COUNT
 17373 0000C65D 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 17374 0000C662 4C8D65F8                	lea r12, [rbp - 8]
 17375                                  .L_tc_recycle_frame_loop_009b:
 17376 0000C666 4983FA00                	cmp r10, 0
 17377 0000C66A 7414                    	je .L_tc_recycle_frame_done_009b
 17378 0000C66C 4D8B2C24                	mov r13, qword [r12]
 17379 0000C670 4D892B                  	mov qword [r11], r13
 17380 0000C673 49FFCA                  	dec r10
 17381 0000C676 4983EB08                	sub r11, 8
 17382 0000C67A 4983EC08                	sub r12, 8
 17383 0000C67E EBE6                    	jmp .L_tc_recycle_frame_loop_009b
 17384                                  .L_tc_recycle_frame_done_009b:
 17385 0000C680 498D6308                	lea rsp, [r11 + 8]
 17386 0000C684 5D                      	pop rbp
 17387 0000C685 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17388 0000C688 C9                      	leave
 17389 0000C689 C21800                  	ret AND_KILL_FRAME(1)
 17390                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17391 0000C68C 50                      	push rax
 17392 0000C68D 6A02                    	push 2	; arg count
 17393 0000C68F 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
 17394 0000C697 803805                  	cmp byte [rax], T_undefined
 17395 0000C69A 0F84BE980000            	je L_error_fvar_undefined
 17396 0000C6A0 803804                  	cmp byte [rax], T_closure
 17397 0000C6A3 0F8539990000            	jne L_error_non_closure
 17398 0000C6A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17399 0000C6AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17400 0000C6AF 50                      	push rax
 17401 0000C6B0 6A02                    	push 2
 17402 0000C6B2 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
 17403 0000C6BA 803805                  	cmp byte [rax], T_undefined
 17404 0000C6BD 0F849B980000            	je L_error_fvar_undefined
 17405 0000C6C3 803804                  	cmp byte [rax], T_closure
 17406 0000C6C6 0F8516990000            	jne L_error_non_closure
 17407 0000C6CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17408 0000C6CF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 17409 0000C6D3 4C8B4D00                	mov r9, qword [rbp]
 17410 0000C6D7 4150                    	push r8
 17411 0000C6D9 4151                    	push r9
 17412 0000C6DB 41BA06000000            	mov r10, 2 + 4
 17413 0000C6E1 4C8B5D18                	mov r11, COUNT
 17414 0000C6E5 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 17415 0000C6EA 4C8D65F8                	lea r12, [rbp - 8]
 17416                                  .L_tc_recycle_frame_loop_009c:
 17417 0000C6EE 4983FA00                	cmp r10, 0
 17418 0000C6F2 7414                    	je .L_tc_recycle_frame_done_009c
 17419 0000C6F4 4D8B2C24                	mov r13, qword [r12]
 17420 0000C6F8 4D892B                  	mov qword [r11], r13
 17421 0000C6FB 49FFCA                  	dec r10
 17422 0000C6FE 4983EB08                	sub r11, 8
 17423 0000C702 4983EC08                	sub r12, 8
 17424 0000C706 EBE6                    	jmp .L_tc_recycle_frame_loop_009c
 17425                                  .L_tc_recycle_frame_done_009c:
 17426 0000C708 498D6308                	lea rsp, [r11 + 8]
 17427 0000C70C 5D                      	pop rbp
 17428 0000C70D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17429 0000C710 C9                      	leave
 17430 0000C711 C21000                  	ret AND_KILL_FRAME(0)
 17431                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17432 0000C714 C9                      	leave
 17433 0000C715 C21800                  	ret AND_KILL_FRAME(1)
 17434                                  .L_lambda_simple_end_0064:	; new closure is in rax
 17435 0000C718 50                      	push rax
 17436 0000C719 6A01                    	push 1	; arg count
 17437 0000C71B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17438 0000C720 E866990000              	call malloc
 17439 0000C725 50                      	push rax
 17440 0000C726 BF00000000              	mov rdi, 8 * 0	; new rib
 17441 0000C72B E85B990000              	call malloc
 17442 0000C730 50                      	push rax
 17443 0000C731 BF08000000              	mov rdi, 8 * 1	; extended env
 17444 0000C736 E850990000              	call malloc
 17445 0000C73B 488B7D10                	mov rdi, ENV
 17446 0000C73F BE00000000              	mov rsi, 0
 17447 0000C744 BA01000000              	mov rdx, 1
 17448                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17449 0000C749 4883FE00                	cmp rsi, 0
 17450 0000C74D 7410                    	je .L_lambda_simple_env_end_0066
 17451 0000C74F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17452 0000C753 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17453 0000C757 48FFC6                  	inc rsi
 17454 0000C75A 48FFC2                  	inc rdx
 17455 0000C75D EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17456                                  .L_lambda_simple_env_end_0066:
 17457 0000C75F 5B                      	pop rbx
 17458 0000C760 BE00000000              	mov rsi, 0
 17459                                  .L_lambda_simple_params_loop_0066:	; copy params
 17460 0000C765 4883FE00                	cmp rsi, 0
 17461 0000C769 740E                    	je .L_lambda_simple_params_end_0066
 17462 0000C76B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17463 0000C770 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17464 0000C774 48FFC6                  	inc rsi
 17465 0000C777 EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17466                                  .L_lambda_simple_params_end_0066:
 17467 0000C779 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17468 0000C77C 4889C3                  	mov rbx, rax
 17469 0000C77F 58                      	pop rax
 17470 0000C780 C60004                  	mov byte [rax], T_closure
 17471 0000C783 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17472 0000C787 48C74009[94C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17473 0000C78F E938010000              	jmp .L_lambda_simple_end_0066
 17474                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17475 0000C794 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17476 0000C79A 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17477 0000C79C FF742410                	push qword [rsp + 8 * 2]
 17478 0000C7A0 6A01                    	push 1
 17479 0000C7A2 E99D980000              	jmp L_error_incorrect_arity_simple
 17480                                  .L_lambda_simple_arity_check_ok_0066:
 17481 0000C7A7 C8000000                	enter 0, 0
 17482                                  	; preparing a non-tail-call
 17483 0000C7AB 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 17484 0000C7B3 803805                  	cmp byte [rax], T_undefined
 17485 0000C7B6 0F84A2970000            	je L_error_fvar_undefined
 17486 0000C7BC 50                      	push rax
 17487 0000C7BD 6A01                    	push 1	; arg count
 17488 0000C7BF 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17489 0000C7C3 803804                  	cmp byte [rax], T_closure
 17490 0000C7C6 0F8516980000            	jne L_error_non_closure
 17491 0000C7CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17492 0000C7CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 17493 0000C7D2 48890425[75120000]      	mov qword [free_var_68], rax
 17494 0000C7DA 48B8-                   	mov rax, sob_void
 17494 0000C7DC [0000000000000000] 
 17495                                  
 17496                                  	; preparing a non-tail-call
 17497 0000C7E4 488B0425[460E0000]      	mov rax, qword [free_var_5]	; free var <=
 17498 0000C7EC 803805                  	cmp byte [rax], T_undefined
 17499 0000C7EF 0F8469970000            	je L_error_fvar_undefined
 17500 0000C7F5 50                      	push rax
 17501 0000C7F6 6A01                    	push 1	; arg count
 17502 0000C7F8 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17503 0000C7FC 803804                  	cmp byte [rax], T_closure
 17504 0000C7FF 0F85DD970000            	jne L_error_non_closure
 17505 0000C805 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17506 0000C808 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17507 0000C80B 48890425[64120000]      	mov qword [free_var_67], rax
 17508 0000C813 48B8-                   	mov rax, sob_void
 17508 0000C815 [0000000000000000] 
 17509                                  
 17510                                  	; preparing a non-tail-call
 17511 0000C81D 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 17512 0000C825 803805                  	cmp byte [rax], T_undefined
 17513 0000C828 0F8430970000            	je L_error_fvar_undefined
 17514 0000C82E 50                      	push rax
 17515 0000C82F 6A01                    	push 1	; arg count
 17516 0000C831 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17517 0000C835 803804                  	cmp byte [rax], T_closure
 17518 0000C838 0F85A4970000            	jne L_error_non_closure
 17519 0000C83E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17520 0000C841 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17521 0000C844 48890425[86120000]      	mov qword [free_var_69], rax
 17522 0000C84C 48B8-                   	mov rax, sob_void
 17522 0000C84E [0000000000000000] 
 17523                                  
 17524                                  	; preparing a non-tail-call
 17525 0000C856 488B0425[680E0000]      	mov rax, qword [free_var_7]	; free var >
 17526 0000C85E 803805                  	cmp byte [rax], T_undefined
 17527 0000C861 0F84F7960000            	je L_error_fvar_undefined
 17528 0000C867 50                      	push rax
 17529 0000C868 6A01                    	push 1	; arg count
 17530 0000C86A 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17531 0000C86E 803804                  	cmp byte [rax], T_closure
 17532 0000C871 0F856B970000            	jne L_error_non_closure
 17533 0000C877 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17534 0000C87A FF5009                  	call SOB_CLOSURE_CODE(rax)
 17535 0000C87D 48890425[A8120000]      	mov qword [free_var_71], rax
 17536 0000C885 48B8-                   	mov rax, sob_void
 17536 0000C887 [0000000000000000] 
 17537                                  
 17538                                  	; preparing a non-tail-call
 17539 0000C88F 488B0425[790E0000]      	mov rax, qword [free_var_8]	; free var >=
 17540 0000C897 803805                  	cmp byte [rax], T_undefined
 17541 0000C89A 0F84BE960000            	je L_error_fvar_undefined
 17542 0000C8A0 50                      	push rax
 17543 0000C8A1 6A01                    	push 1	; arg count
 17544 0000C8A3 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17545 0000C8A7 803804                  	cmp byte [rax], T_closure
 17546 0000C8AA 0F8532970000            	jne L_error_non_closure
 17547 0000C8B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17548 0000C8B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17549 0000C8B6 48890425[97120000]      	mov qword [free_var_70], rax
 17550 0000C8BE 48B8-                   	mov rax, sob_void
 17550 0000C8C0 [0000000000000000] 
 17551 0000C8C8 C9                      	leave
 17552 0000C8C9 C21800                  	ret AND_KILL_FRAME(1)
 17553                                  .L_lambda_simple_end_0066:	; new closure is in rax
 17554 0000C8CC 803804                  	cmp byte [rax], T_closure
 17555 0000C8CF 0F850D970000            	jne L_error_non_closure
 17556 0000C8D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17557 0000C8D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17558                                  
 17559 0000C8DB 4889C7                  	mov rdi, rax
 17560 0000C8DE E8FD990000              	call print_sexpr_if_not_void
 17561 0000C8E3 48B8-                   	mov rax, L_constants + 0
 17561 0000C8E5 [0000000000000000] 
 17562 0000C8ED 48890425[71160000]      	mov qword [free_var_128], rax
 17563 0000C8F5 48B8-                   	mov rax, sob_void
 17563 0000C8F7 [0000000000000000] 
 17564                                  
 17565 0000C8FF 4889C7                  	mov rdi, rax
 17566 0000C902 E8D9990000              	call print_sexpr_if_not_void
 17567 0000C907 48B8-                   	mov rax, L_constants + 0
 17567 0000C909 [0000000000000000] 
 17568 0000C911 48890425[D7160000]      	mov qword [free_var_134], rax
 17569 0000C919 48B8-                   	mov rax, sob_void
 17569 0000C91B [0000000000000000] 
 17570                                  
 17571 0000C923 4889C7                  	mov rdi, rax
 17572 0000C926 E8B5990000              	call print_sexpr_if_not_void
 17573                                  	; preparing a non-tail-call
 17574 0000C92B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17575 0000C930 E856970000              	call malloc
 17576 0000C935 50                      	push rax
 17577 0000C936 BF00000000              	mov rdi, 8 * 0	; new rib
 17578 0000C93B E84B970000              	call malloc
 17579 0000C940 50                      	push rax
 17580 0000C941 BF08000000              	mov rdi, 8 * 1	; extended env
 17581 0000C946 E840970000              	call malloc
 17582 0000C94B 488B7D10                	mov rdi, ENV
 17583 0000C94F BE00000000              	mov rsi, 0
 17584 0000C954 BA01000000              	mov rdx, 1
 17585                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17586 0000C959 4883FE00                	cmp rsi, 0
 17587 0000C95D 7410                    	je .L_lambda_simple_env_end_0067
 17588 0000C95F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17589 0000C963 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17590 0000C967 48FFC6                  	inc rsi
 17591 0000C96A 48FFC2                  	inc rdx
 17592 0000C96D EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17593                                  .L_lambda_simple_env_end_0067:
 17594 0000C96F 5B                      	pop rbx
 17595 0000C970 BE00000000              	mov rsi, 0
 17596                                  .L_lambda_simple_params_loop_0067:	; copy params
 17597 0000C975 4883FE00                	cmp rsi, 0
 17598 0000C979 740E                    	je .L_lambda_simple_params_end_0067
 17599 0000C97B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17600 0000C980 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17601 0000C984 48FFC6                  	inc rsi
 17602 0000C987 EBEC                    	jmp .L_lambda_simple_params_loop_0067
 17603                                  .L_lambda_simple_params_end_0067:
 17604 0000C989 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17605 0000C98C 4889C3                  	mov rbx, rax
 17606 0000C98F 58                      	pop rax
 17607 0000C990 C60004                  	mov byte [rax], T_closure
 17608 0000C993 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17609 0000C997 48C74009[A4C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 17610 0000C99F E965010000              	jmp .L_lambda_simple_end_0067
 17611                                  .L_lambda_simple_code_0067:	; lambda-simple body
 17612 0000C9A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17613 0000C9AA 740B                    	je .L_lambda_simple_arity_check_ok_0067
 17614 0000C9AC FF742410                	push qword [rsp + 8 * 2]
 17615 0000C9B0 6A01                    	push 1
 17616 0000C9B2 E98D960000              	jmp L_error_incorrect_arity_simple
 17617                                  .L_lambda_simple_arity_check_ok_0067:
 17618 0000C9B7 C8000000                	enter 0, 0
 17619 0000C9BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17620 0000C9C0 E8C6960000              	call malloc
 17621 0000C9C5 50                      	push rax
 17622 0000C9C6 BF08000000              	mov rdi, 8 * 1	; new rib
 17623 0000C9CB E8BB960000              	call malloc
 17624 0000C9D0 50                      	push rax
 17625 0000C9D1 BF10000000              	mov rdi, 8 * 2	; extended env
 17626 0000C9D6 E8B0960000              	call malloc
 17627 0000C9DB 488B7D10                	mov rdi, ENV
 17628 0000C9DF BE00000000              	mov rsi, 0
 17629 0000C9E4 BA01000000              	mov rdx, 1
 17630                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 17631 0000C9E9 4883FE01                	cmp rsi, 1
 17632 0000C9ED 7410                    	je .L_lambda_simple_env_end_0068
 17633 0000C9EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17634 0000C9F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17635 0000C9F7 48FFC6                  	inc rsi
 17636 0000C9FA 48FFC2                  	inc rdx
 17637 0000C9FD EBEA                    	jmp .L_lambda_simple_env_loop_0068
 17638                                  .L_lambda_simple_env_end_0068:
 17639 0000C9FF 5B                      	pop rbx
 17640 0000CA00 BE00000000              	mov rsi, 0
 17641                                  .L_lambda_simple_params_loop_0068:	; copy params
 17642 0000CA05 4883FE01                	cmp rsi, 1
 17643 0000CA09 740E                    	je .L_lambda_simple_params_end_0068
 17644 0000CA0B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17645 0000CA10 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17646 0000CA14 48FFC6                  	inc rsi
 17647 0000CA17 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 17648                                  .L_lambda_simple_params_end_0068:
 17649 0000CA19 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17650 0000CA1C 4889C3                  	mov rbx, rax
 17651 0000CA1F 58                      	pop rax
 17652 0000CA20 C60004                  	mov byte [rax], T_closure
 17653 0000CA23 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17654 0000CA27 48C74009[34CA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 17655 0000CA2F E9D1000000              	jmp .L_lambda_simple_end_0068
 17656                                  .L_lambda_simple_code_0068:	; lambda-simple body
 17657 0000CA34 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17658 0000CA3A 740B                    	je .L_lambda_simple_arity_check_ok_0068
 17659 0000CA3C FF742410                	push qword [rsp + 8 * 2]
 17660 0000CA40 6A01                    	push 1
 17661 0000CA42 E9FD950000              	jmp L_error_incorrect_arity_simple
 17662                                  .L_lambda_simple_arity_check_ok_0068:
 17663 0000CA47 C8000000                	enter 0, 0
 17664                                  	; Setting up for a tail-call
 17665                                  	; preparing a non-tail-call
 17666                                  	; preparing a non-tail-call
 17667 0000CA4B 488B4520                	mov rax, PARAM(0)	; param str
 17668 0000CA4F 50                      	push rax
 17669 0000CA50 6A01                    	push 1	; arg count
 17670 0000CA52 488B0425[FA150000]      	mov rax, qword [free_var_121]	; free var string->list
 17671 0000CA5A 803805                  	cmp byte [rax], T_undefined
 17672 0000CA5D 0F84FB940000            	je L_error_fvar_undefined
 17673 0000CA63 803804                  	cmp byte [rax], T_closure
 17674 0000CA66 0F8576950000            	jne L_error_non_closure
 17675 0000CA6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 17676 0000CA6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 17677 0000CA72 50                      	push rax
 17678 0000CA73 488B4510                	mov rax, ENV
 17679 0000CA77 488B00                  	mov rax, qword [rax + 8 * 0]
 17680 0000CA7A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17681 0000CA7D 50                      	push rax
 17682 0000CA7E 6A02                    	push 2	; arg count
 17683 0000CA80 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
 17684 0000CA88 803805                  	cmp byte [rax], T_undefined
 17685 0000CA8B 0F84CD940000            	je L_error_fvar_undefined
 17686 0000CA91 803804                  	cmp byte [rax], T_closure
 17687 0000CA94 0F8548950000            	jne L_error_non_closure
 17688 0000CA9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17689 0000CA9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17690 0000CAA0 50                      	push rax
 17691 0000CAA1 6A01                    	push 1
 17692 0000CAA3 488B0425[40140000]      	mov rax, qword [free_var_95]	; free var list->string
 17693 0000CAAB 803805                  	cmp byte [rax], T_undefined
 17694 0000CAAE 0F84AA940000            	je L_error_fvar_undefined
 17695 0000CAB4 803804                  	cmp byte [rax], T_closure
 17696 0000CAB7 0F8525950000            	jne L_error_non_closure
 17697 0000CABD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17698 0000CAC0 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 17699 0000CAC4 4C8B4D00                	mov r9, qword [rbp]
 17700 0000CAC8 4150                    	push r8
 17701 0000CACA 4151                    	push r9
 17702 0000CACC 41BA05000000            	mov r10, 1 + 4
 17703 0000CAD2 4C8B5D18                	mov r11, COUNT
 17704 0000CAD6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 17705 0000CADB 4C8D65F8                	lea r12, [rbp - 8]
 17706                                  .L_tc_recycle_frame_loop_009d:
 17707 0000CADF 4983FA00                	cmp r10, 0
 17708 0000CAE3 7414                    	je .L_tc_recycle_frame_done_009d
 17709 0000CAE5 4D8B2C24                	mov r13, qword [r12]
 17710 0000CAE9 4D892B                  	mov qword [r11], r13
 17711 0000CAEC 49FFCA                  	dec r10
 17712 0000CAEF 4983EB08                	sub r11, 8
 17713 0000CAF3 4983EC08                	sub r12, 8
 17714 0000CAF7 EBE6                    	jmp .L_tc_recycle_frame_loop_009d
 17715                                  .L_tc_recycle_frame_done_009d:
 17716 0000CAF9 498D6308                	lea rsp, [r11 + 8]
 17717 0000CAFD 5D                      	pop rbp
 17718 0000CAFE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17719 0000CB01 C9                      	leave
 17720 0000CB02 C21800                  	ret AND_KILL_FRAME(1)
 17721                                  .L_lambda_simple_end_0068:	; new closure is in rax
 17722 0000CB05 C9                      	leave
 17723 0000CB06 C21800                  	ret AND_KILL_FRAME(1)
 17724                                  .L_lambda_simple_end_0067:	; new closure is in rax
 17725 0000CB09 50                      	push rax
 17726 0000CB0A 6A01                    	push 1	; arg count
 17727 0000CB0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17728 0000CB11 E875950000              	call malloc
 17729 0000CB16 50                      	push rax
 17730 0000CB17 BF00000000              	mov rdi, 8 * 0	; new rib
 17731 0000CB1C E86A950000              	call malloc
 17732 0000CB21 50                      	push rax
 17733 0000CB22 BF08000000              	mov rdi, 8 * 1	; extended env
 17734 0000CB27 E85F950000              	call malloc
 17735 0000CB2C 488B7D10                	mov rdi, ENV
 17736 0000CB30 BE00000000              	mov rsi, 0
 17737 0000CB35 BA01000000              	mov rdx, 1
 17738                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 17739 0000CB3A 4883FE00                	cmp rsi, 0
 17740 0000CB3E 7410                    	je .L_lambda_simple_env_end_0069
 17741 0000CB40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17742 0000CB44 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17743 0000CB48 48FFC6                  	inc rsi
 17744 0000CB4B 48FFC2                  	inc rdx
 17745 0000CB4E EBEA                    	jmp .L_lambda_simple_env_loop_0069
 17746                                  .L_lambda_simple_env_end_0069:
 17747 0000CB50 5B                      	pop rbx
 17748 0000CB51 BE00000000              	mov rsi, 0
 17749                                  .L_lambda_simple_params_loop_0069:	; copy params
 17750 0000CB56 4883FE00                	cmp rsi, 0
 17751 0000CB5A 740E                    	je .L_lambda_simple_params_end_0069
 17752 0000CB5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17753 0000CB61 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17754 0000CB65 48FFC6                  	inc rsi
 17755 0000CB68 EBEC                    	jmp .L_lambda_simple_params_loop_0069
 17756                                  .L_lambda_simple_params_end_0069:
 17757 0000CB6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17758 0000CB6D 4889C3                  	mov rbx, rax
 17759 0000CB70 58                      	pop rax
 17760 0000CB71 C60004                  	mov byte [rax], T_closure
 17761 0000CB74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17762 0000CB78 48C74009[85CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 17763 0000CB80 E98D000000              	jmp .L_lambda_simple_end_0069
 17764                                  .L_lambda_simple_code_0069:	; lambda-simple body
 17765 0000CB85 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17766 0000CB8B 740B                    	je .L_lambda_simple_arity_check_ok_0069
 17767 0000CB8D FF742410                	push qword [rsp + 8 * 2]
 17768 0000CB91 6A01                    	push 1
 17769 0000CB93 E9AC940000              	jmp L_error_incorrect_arity_simple
 17770                                  .L_lambda_simple_arity_check_ok_0069:
 17771 0000CB98 C8000000                	enter 0, 0
 17772                                  	; preparing a non-tail-call
 17773 0000CB9C 488B0425[B9120000]      	mov rax, qword [free_var_72]	; free var char-downcase
 17774 0000CBA4 803805                  	cmp byte [rax], T_undefined
 17775 0000CBA7 0F84B1930000            	je L_error_fvar_undefined
 17776 0000CBAD 50                      	push rax
 17777 0000CBAE 6A01                    	push 1	; arg count
 17778 0000CBB0 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17779 0000CBB4 803804                  	cmp byte [rax], T_closure
 17780 0000CBB7 0F8525940000            	jne L_error_non_closure
 17781 0000CBBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17782 0000CBC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17783 0000CBC3 48890425[71160000]      	mov qword [free_var_128], rax
 17784 0000CBCB 48B8-                   	mov rax, sob_void
 17784 0000CBCD [0000000000000000] 
 17785                                  
 17786                                  	; preparing a non-tail-call
 17787 0000CBD5 488B0425[CA120000]      	mov rax, qword [free_var_73]	; free var char-upcase
 17788 0000CBDD 803805                  	cmp byte [rax], T_undefined
 17789 0000CBE0 0F8478930000            	je L_error_fvar_undefined
 17790 0000CBE6 50                      	push rax
 17791 0000CBE7 6A01                    	push 1	; arg count
 17792 0000CBE9 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17793 0000CBED 803804                  	cmp byte [rax], T_closure
 17794 0000CBF0 0F85EC930000            	jne L_error_non_closure
 17795 0000CBF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17796 0000CBF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17797 0000CBFC 48890425[D7160000]      	mov qword [free_var_134], rax
 17798 0000CC04 48B8-                   	mov rax, sob_void
 17798 0000CC06 [0000000000000000] 
 17799 0000CC0E C9                      	leave
 17800 0000CC0F C21800                  	ret AND_KILL_FRAME(1)
 17801                                  .L_lambda_simple_end_0069:	; new closure is in rax
 17802 0000CC12 803804                  	cmp byte [rax], T_closure
 17803 0000CC15 0F85C7930000            	jne L_error_non_closure
 17804 0000CC1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17805 0000CC1E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17806                                  
 17807 0000CC21 4889C7                  	mov rdi, rax
 17808 0000CC24 E8B7960000              	call print_sexpr_if_not_void
 17809 0000CC29 48B8-                   	mov rax, L_constants + 0
 17809 0000CC2B [0000000000000000] 
 17810 0000CC33 48890425[F9160000]      	mov qword [free_var_136], rax
 17811 0000CC3B 48B8-                   	mov rax, sob_void
 17811 0000CC3D [0000000000000000] 
 17812                                  
 17813 0000CC45 4889C7                  	mov rdi, rax
 17814 0000CC48 E893960000              	call print_sexpr_if_not_void
 17815 0000CC4D 48B8-                   	mov rax, L_constants + 0
 17815 0000CC4F [0000000000000000] 
 17816 0000CC57 48890425[E8160000]      	mov qword [free_var_135], rax
 17817 0000CC5F 48B8-                   	mov rax, sob_void
 17817 0000CC61 [0000000000000000] 
 17818                                  
 17819 0000CC69 4889C7                  	mov rdi, rax
 17820 0000CC6C E86F960000              	call print_sexpr_if_not_void
 17821 0000CC71 48B8-                   	mov rax, L_constants + 0
 17821 0000CC73 [0000000000000000] 
 17822 0000CC7B 48890425[0A170000]      	mov qword [free_var_137], rax
 17823 0000CC83 48B8-                   	mov rax, sob_void
 17823 0000CC85 [0000000000000000] 
 17824                                  
 17825 0000CC8D 4889C7                  	mov rdi, rax
 17826 0000CC90 E84B960000              	call print_sexpr_if_not_void
 17827 0000CC95 48B8-                   	mov rax, L_constants + 0
 17827 0000CC97 [0000000000000000] 
 17828 0000CC9F 48890425[1B170000]      	mov qword [free_var_138], rax
 17829 0000CCA7 48B8-                   	mov rax, sob_void
 17829 0000CCA9 [0000000000000000] 
 17830                                  
 17831 0000CCB1 4889C7                  	mov rdi, rax
 17832 0000CCB4 E827960000              	call print_sexpr_if_not_void
 17833 0000CCB9 48B8-                   	mov rax, L_constants + 0
 17833 0000CCBB [0000000000000000] 
 17834 0000CCC3 48890425[2C170000]      	mov qword [free_var_139], rax
 17835 0000CCCB 48B8-                   	mov rax, sob_void
 17835 0000CCCD [0000000000000000] 
 17836                                  
 17837 0000CCD5 4889C7                  	mov rdi, rax
 17838 0000CCD8 E803960000              	call print_sexpr_if_not_void
 17839 0000CCDD 48B8-                   	mov rax, L_constants + 0
 17839 0000CCDF [0000000000000000] 
 17840 0000CCE7 48890425[2D160000]      	mov qword [free_var_124], rax
 17841 0000CCEF 48B8-                   	mov rax, sob_void
 17841 0000CCF1 [0000000000000000] 
 17842                                  
 17843 0000CCF9 4889C7                  	mov rdi, rax
 17844 0000CCFC E8DF950000              	call print_sexpr_if_not_void
 17845 0000CD01 48B8-                   	mov rax, L_constants + 0
 17845 0000CD03 [0000000000000000] 
 17846 0000CD0B 48890425[1C160000]      	mov qword [free_var_123], rax
 17847 0000CD13 48B8-                   	mov rax, sob_void
 17847 0000CD15 [0000000000000000] 
 17848                                  
 17849 0000CD1D 4889C7                  	mov rdi, rax
 17850 0000CD20 E8BB950000              	call print_sexpr_if_not_void
 17851 0000CD25 48B8-                   	mov rax, L_constants + 0
 17851 0000CD27 [0000000000000000] 
 17852 0000CD2F 48890425[3E160000]      	mov qword [free_var_125], rax
 17853 0000CD37 48B8-                   	mov rax, sob_void
 17853 0000CD39 [0000000000000000] 
 17854                                  
 17855 0000CD41 4889C7                  	mov rdi, rax
 17856 0000CD44 E897950000              	call print_sexpr_if_not_void
 17857 0000CD49 48B8-                   	mov rax, L_constants + 0
 17857 0000CD4B [0000000000000000] 
 17858 0000CD53 48890425[4F160000]      	mov qword [free_var_126], rax
 17859 0000CD5B 48B8-                   	mov rax, sob_void
 17859 0000CD5D [0000000000000000] 
 17860                                  
 17861 0000CD65 4889C7                  	mov rdi, rax
 17862 0000CD68 E873950000              	call print_sexpr_if_not_void
 17863 0000CD6D 48B8-                   	mov rax, L_constants + 0
 17863 0000CD6F [0000000000000000] 
 17864 0000CD77 48890425[60160000]      	mov qword [free_var_127], rax
 17865 0000CD7F 48B8-                   	mov rax, sob_void
 17865 0000CD81 [0000000000000000] 
 17866                                  
 17867 0000CD89 4889C7                  	mov rdi, rax
 17868 0000CD8C E84F950000              	call print_sexpr_if_not_void
 17869                                  	; preparing a non-tail-call
 17870 0000CD91 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17871 0000CD96 E8F0920000              	call malloc
 17872 0000CD9B 50                      	push rax
 17873 0000CD9C BF00000000              	mov rdi, 8 * 0	; new rib
 17874 0000CDA1 E8E5920000              	call malloc
 17875 0000CDA6 50                      	push rax
 17876 0000CDA7 BF08000000              	mov rdi, 8 * 1	; extended env
 17877 0000CDAC E8DA920000              	call malloc
 17878 0000CDB1 488B7D10                	mov rdi, ENV
 17879 0000CDB5 BE00000000              	mov rsi, 0
 17880 0000CDBA BA01000000              	mov rdx, 1
 17881                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 17882 0000CDBF 4883FE00                	cmp rsi, 0
 17883 0000CDC3 7410                    	je .L_lambda_simple_env_end_006a
 17884 0000CDC5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17885 0000CDC9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17886 0000CDCD 48FFC6                  	inc rsi
 17887 0000CDD0 48FFC2                  	inc rdx
 17888 0000CDD3 EBEA                    	jmp .L_lambda_simple_env_loop_006a
 17889                                  .L_lambda_simple_env_end_006a:
 17890 0000CDD5 5B                      	pop rbx
 17891 0000CDD6 BE00000000              	mov rsi, 0
 17892                                  .L_lambda_simple_params_loop_006a:	; copy params
 17893 0000CDDB 4883FE00                	cmp rsi, 0
 17894 0000CDDF 740E                    	je .L_lambda_simple_params_end_006a
 17895 0000CDE1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17896 0000CDE6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17897 0000CDEA 48FFC6                  	inc rsi
 17898 0000CDED EBEC                    	jmp .L_lambda_simple_params_loop_006a
 17899                                  .L_lambda_simple_params_end_006a:
 17900 0000CDEF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17901 0000CDF2 4889C3                  	mov rbx, rax
 17902 0000CDF5 58                      	pop rax
 17903 0000CDF6 C60004                  	mov byte [rax], T_closure
 17904 0000CDF9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17905 0000CDFD 48C74009[0ACE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 17906 0000CE05 E9F20C0000              	jmp .L_lambda_simple_end_006a
 17907                                  .L_lambda_simple_code_006a:	; lambda-simple body
 17908 0000CE0A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17909 0000CE10 740B                    	je .L_lambda_simple_arity_check_ok_006a
 17910 0000CE12 FF742410                	push qword [rsp + 8 * 2]
 17911 0000CE16 6A02                    	push 2
 17912 0000CE18 E927920000              	jmp L_error_incorrect_arity_simple
 17913                                  .L_lambda_simple_arity_check_ok_006a:
 17914 0000CE1D C8000000                	enter 0, 0
 17915                                  	; Setting up for a tail-call
 17916 0000CE21 48B8-                   	mov rax, L_constants + 1993
 17916 0000CE23 [C907000000000000] 
 17917 0000CE2B 50                      	push rax
 17918 0000CE2C 6A01                    	push 1
 17919 0000CE2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17920 0000CE33 E853920000              	call malloc
 17921 0000CE38 50                      	push rax
 17922 0000CE39 BF10000000              	mov rdi, 8 * 2	; new rib
 17923 0000CE3E E848920000              	call malloc
 17924 0000CE43 50                      	push rax
 17925 0000CE44 BF10000000              	mov rdi, 8 * 2	; extended env
 17926 0000CE49 E83D920000              	call malloc
 17927 0000CE4E 488B7D10                	mov rdi, ENV
 17928 0000CE52 BE00000000              	mov rsi, 0
 17929 0000CE57 BA01000000              	mov rdx, 1
 17930                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 17931 0000CE5C 4883FE01                	cmp rsi, 1
 17932 0000CE60 7410                    	je .L_lambda_simple_env_end_006b
 17933 0000CE62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17934 0000CE66 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17935 0000CE6A 48FFC6                  	inc rsi
 17936 0000CE6D 48FFC2                  	inc rdx
 17937 0000CE70 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 17938                                  .L_lambda_simple_env_end_006b:
 17939 0000CE72 5B                      	pop rbx
 17940 0000CE73 BE00000000              	mov rsi, 0
 17941                                  .L_lambda_simple_params_loop_006b:	; copy params
 17942 0000CE78 4883FE02                	cmp rsi, 2
 17943 0000CE7C 740E                    	je .L_lambda_simple_params_end_006b
 17944 0000CE7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17945 0000CE83 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17946 0000CE87 48FFC6                  	inc rsi
 17947 0000CE8A EBEC                    	jmp .L_lambda_simple_params_loop_006b
 17948                                  .L_lambda_simple_params_end_006b:
 17949 0000CE8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17950 0000CE8F 4889C3                  	mov rbx, rax
 17951 0000CE92 58                      	pop rax
 17952 0000CE93 C60004                  	mov byte [rax], T_closure
 17953 0000CE96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17954 0000CE9A 48C74009[A7CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 17955 0000CEA2 E9040C0000              	jmp .L_lambda_simple_end_006b
 17956                                  .L_lambda_simple_code_006b:	; lambda-simple body
 17957 0000CEA7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17958 0000CEAD 740B                    	je .L_lambda_simple_arity_check_ok_006b
 17959 0000CEAF FF742410                	push qword [rsp + 8 * 2]
 17960 0000CEB3 6A01                    	push 1
 17961 0000CEB5 E98A910000              	jmp L_error_incorrect_arity_simple
 17962                                  .L_lambda_simple_arity_check_ok_006b:
 17963 0000CEBA C8000000                	enter 0, 0
 17964 0000CEBE BF08000000              	mov rdi, 8 * 1
 17965 0000CEC3 E8C3910000              	call malloc
 17966 0000CEC8 488B5D20                	mov rbx, PARAM(0)
 17967 0000CECC 488918                  	mov qword [rax], rbx
 17968 0000CECF 48894520                	mov PARAM(0), rax
 17969 0000CED3 48B8-                   	mov rax, sob_void
 17969 0000CED5 [0000000000000000] 
 17970                                  
 17971                                  	; preparing a non-tail-call
 17972 0000CEDD 6A00                    	push 0	; arg count
 17973 0000CEDF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17974 0000CEE4 E8A2910000              	call malloc
 17975 0000CEE9 50                      	push rax
 17976 0000CEEA BF08000000              	mov rdi, 8 * 1	; new rib
 17977 0000CEEF E897910000              	call malloc
 17978 0000CEF4 50                      	push rax
 17979 0000CEF5 BF18000000              	mov rdi, 8 * 3	; extended env
 17980 0000CEFA E88C910000              	call malloc
 17981 0000CEFF 488B7D10                	mov rdi, ENV
 17982 0000CF03 BE00000000              	mov rsi, 0
 17983 0000CF08 BA01000000              	mov rdx, 1
 17984                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 17985 0000CF0D 4883FE02                	cmp rsi, 2
 17986 0000CF11 7410                    	je .L_lambda_simple_env_end_006c
 17987 0000CF13 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17988 0000CF17 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17989 0000CF1B 48FFC6                  	inc rsi
 17990 0000CF1E 48FFC2                  	inc rdx
 17991 0000CF21 EBEA                    	jmp .L_lambda_simple_env_loop_006c
 17992                                  .L_lambda_simple_env_end_006c:
 17993 0000CF23 5B                      	pop rbx
 17994 0000CF24 BE00000000              	mov rsi, 0
 17995                                  .L_lambda_simple_params_loop_006c:	; copy params
 17996 0000CF29 4883FE01                	cmp rsi, 1
 17997 0000CF2D 740E                    	je .L_lambda_simple_params_end_006c
 17998 0000CF2F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17999 0000CF34 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18000 0000CF38 48FFC6                  	inc rsi
 18001 0000CF3B EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18002                                  .L_lambda_simple_params_end_006c:
 18003 0000CF3D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18004 0000CF40 4889C3                  	mov rbx, rax
 18005 0000CF43 58                      	pop rax
 18006 0000CF44 C60004                  	mov byte [rax], T_closure
 18007 0000CF47 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18008 0000CF4B 48C74009[58CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18009 0000CF53 E98B020000              	jmp .L_lambda_simple_end_006c
 18010                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18011 0000CF58 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18012 0000CF5E 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18013 0000CF60 FF742410                	push qword [rsp + 8 * 2]
 18014 0000CF64 6A05                    	push 5
 18015 0000CF66 E9D9900000              	jmp L_error_incorrect_arity_simple
 18016                                  .L_lambda_simple_arity_check_ok_006c:
 18017 0000CF6B C8000000                	enter 0, 0
 18018                                  	; preparing a non-tail-call
 18019 0000CF6F 488B4530                	mov rax, PARAM(2)	; param len1
 18020 0000CF73 50                      	push rax
 18021 0000CF74 488B4520                	mov rax, PARAM(0)	; param i
 18022 0000CF78 50                      	push rax
 18023 0000CF79 6A02                    	push 2	; arg count
 18024 0000CF7B 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 18025 0000CF83 803805                  	cmp byte [rax], T_undefined
 18026 0000CF86 0F84D28F0000            	je L_error_fvar_undefined
 18027 0000CF8C 803804                  	cmp byte [rax], T_closure
 18028 0000CF8F 0F854D900000            	jne L_error_non_closure
 18029 0000CF95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18030 0000CF98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18031 0000CF9B 483D[02000000]          	cmp rax, sob_boolean_false
 18032 0000CFA1 742E                    	je .L_if_else_0053
 18033                                  	; preparing a non-tail-call
 18034 0000CFA3 488B4540                	mov rax, PARAM(4)	; param len2
 18035 0000CFA7 50                      	push rax
 18036 0000CFA8 488B4530                	mov rax, PARAM(2)	; param len1
 18037 0000CFAC 50                      	push rax
 18038 0000CFAD 6A02                    	push 2	; arg count
 18039 0000CFAF 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 18040 0000CFB7 803805                  	cmp byte [rax], T_undefined
 18041 0000CFBA 0F849E8F0000            	je L_error_fvar_undefined
 18042 0000CFC0 803804                  	cmp byte [rax], T_closure
 18043 0000CFC3 0F8519900000            	jne L_error_non_closure
 18044 0000CFC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18045 0000CFCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18046 0000CFCF EB0A                    	jmp .L_if_end_0053
 18047                                  .L_if_else_0053:
 18048 0000CFD1 48B8-                   	mov rax, L_constants + 2
 18048 0000CFD3 [0200000000000000] 
 18049                                  .L_if_end_0053:
 18050 0000CFDB 483D[02000000]          	cmp rax, sob_boolean_false
 18051 0000CFE1 0F85F8010000            	jne .L_or_end_0007
 18052                                  
 18053                                  	; preparing a non-tail-call
 18054 0000CFE7 488B4530                	mov rax, PARAM(2)	; param len1
 18055 0000CFEB 50                      	push rax
 18056 0000CFEC 488B4520                	mov rax, PARAM(0)	; param i
 18057 0000CFF0 50                      	push rax
 18058 0000CFF1 6A02                    	push 2	; arg count
 18059 0000CFF3 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 18060 0000CFFB 803805                  	cmp byte [rax], T_undefined
 18061 0000CFFE 0F845A8F0000            	je L_error_fvar_undefined
 18062 0000D004 803804                  	cmp byte [rax], T_closure
 18063 0000D007 0F85D58F0000            	jne L_error_non_closure
 18064 0000D00D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18065 0000D010 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18066 0000D013 483D[02000000]          	cmp rax, sob_boolean_false
 18067 0000D019 0F84B6010000            	je .L_if_else_0055
 18068                                  	; preparing a non-tail-call
 18069                                  	; preparing a non-tail-call
 18070 0000D01F 488B4520                	mov rax, PARAM(0)	; param i
 18071 0000D023 50                      	push rax
 18072 0000D024 488B4538                	mov rax, PARAM(3)	; param str2
 18073 0000D028 50                      	push rax
 18074 0000D029 6A02                    	push 2	; arg count
 18075 0000D02B 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 18076 0000D033 803805                  	cmp byte [rax], T_undefined
 18077 0000D036 0F84228F0000            	je L_error_fvar_undefined
 18078 0000D03C 803804                  	cmp byte [rax], T_closure
 18079 0000D03F 0F859D8F0000            	jne L_error_non_closure
 18080 0000D045 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18081 0000D048 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18082 0000D04B 50                      	push rax
 18083                                  	; preparing a non-tail-call
 18084 0000D04C 488B4520                	mov rax, PARAM(0)	; param i
 18085 0000D050 50                      	push rax
 18086 0000D051 488B4528                	mov rax, PARAM(1)	; param str1
 18087 0000D055 50                      	push rax
 18088 0000D056 6A02                    	push 2	; arg count
 18089 0000D058 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 18090 0000D060 803805                  	cmp byte [rax], T_undefined
 18091 0000D063 0F84F58E0000            	je L_error_fvar_undefined
 18092 0000D069 803804                  	cmp byte [rax], T_closure
 18093 0000D06C 0F85708F0000            	jne L_error_non_closure
 18094 0000D072 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18095 0000D075 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18096 0000D078 50                      	push rax
 18097 0000D079 6A02                    	push 2	; arg count
 18098 0000D07B 488B4510                	mov rax, ENV
 18099 0000D07F 488B4008                	mov rax, qword [rax + 8 * 1]
 18100 0000D083 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18101 0000D086 803804                  	cmp byte [rax], T_closure
 18102 0000D089 0F85538F0000            	jne L_error_non_closure
 18103 0000D08F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18104 0000D092 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18105 0000D095 483D[02000000]          	cmp rax, sob_boolean_false
 18106 0000D09B 0F8532010000            	jne .L_or_end_0008
 18107                                  
 18108                                  	; preparing a non-tail-call
 18109                                  	; preparing a non-tail-call
 18110 0000D0A1 488B4520                	mov rax, PARAM(0)	; param i
 18111 0000D0A5 50                      	push rax
 18112 0000D0A6 488B4538                	mov rax, PARAM(3)	; param str2
 18113 0000D0AA 50                      	push rax
 18114 0000D0AB 6A02                    	push 2	; arg count
 18115 0000D0AD 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 18116 0000D0B5 803805                  	cmp byte [rax], T_undefined
 18117 0000D0B8 0F84A08E0000            	je L_error_fvar_undefined
 18118 0000D0BE 803804                  	cmp byte [rax], T_closure
 18119 0000D0C1 0F851B8F0000            	jne L_error_non_closure
 18120 0000D0C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18121 0000D0CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 18122 0000D0CD 50                      	push rax
 18123                                  	; preparing a non-tail-call
 18124 0000D0CE 488B4520                	mov rax, PARAM(0)	; param i
 18125 0000D0D2 50                      	push rax
 18126 0000D0D3 488B4528                	mov rax, PARAM(1)	; param str1
 18127 0000D0D7 50                      	push rax
 18128 0000D0D8 6A02                    	push 2	; arg count
 18129 0000D0DA 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 18130 0000D0E2 803805                  	cmp byte [rax], T_undefined
 18131 0000D0E5 0F84738E0000            	je L_error_fvar_undefined
 18132 0000D0EB 803804                  	cmp byte [rax], T_closure
 18133 0000D0EE 0F85EE8E0000            	jne L_error_non_closure
 18134 0000D0F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18135 0000D0F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18136 0000D0FA 50                      	push rax
 18137 0000D0FB 6A02                    	push 2	; arg count
 18138 0000D0FD 488B4510                	mov rax, ENV
 18139 0000D101 488B4008                	mov rax, qword [rax + 8 * 1]
 18140 0000D105 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18141 0000D109 803804                  	cmp byte [rax], T_closure
 18142 0000D10C 0F85D08E0000            	jne L_error_non_closure
 18143 0000D112 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18144 0000D115 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18145 0000D118 483D[02000000]          	cmp rax, sob_boolean_false
 18146 0000D11E 0F84A5000000            	je .L_if_else_0054
 18147                                  	; Setting up for a tail-call
 18148                                  	; preparing a non-tail-call
 18149 0000D124 48B8-                   	mov rax, L_constants + 2284
 18149 0000D126 [EC08000000000000] 
 18150 0000D12E 50                      	push rax
 18151 0000D12F 488B4520                	mov rax, PARAM(0)	; param i
 18152 0000D133 50                      	push rax
 18153 0000D134 6A02                    	push 2	; arg count
 18154 0000D136 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 18155 0000D13E 803805                  	cmp byte [rax], T_undefined
 18156 0000D141 0F84178E0000            	je L_error_fvar_undefined
 18157 0000D147 803804                  	cmp byte [rax], T_closure
 18158 0000D14A 0F85928E0000            	jne L_error_non_closure
 18159 0000D150 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18160 0000D153 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18161 0000D156 50                      	push rax
 18162 0000D157 488B4528                	mov rax, PARAM(1)	; param str1
 18163 0000D15B 50                      	push rax
 18164 0000D15C 488B4530                	mov rax, PARAM(2)	; param len1
 18165 0000D160 50                      	push rax
 18166 0000D161 488B4538                	mov rax, PARAM(3)	; param str2
 18167 0000D165 50                      	push rax
 18168 0000D166 488B4540                	mov rax, PARAM(4)	; param len2
 18169 0000D16A 50                      	push rax
 18170 0000D16B 6A05                    	push 5
 18171 0000D16D 488B4510                	mov rax, ENV
 18172 0000D171 488B00                  	mov rax, qword [rax + 8 * 0]
 18173 0000D174 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18174 0000D177 488B00                  	mov rax, qword [rax]
 18175 0000D17A 803804                  	cmp byte [rax], T_closure
 18176 0000D17D 0F855F8E0000            	jne L_error_non_closure
 18177 0000D183 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18178 0000D186 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18179 0000D18A 4C8B4D00                	mov r9, qword [rbp]
 18180 0000D18E 4150                    	push r8
 18181 0000D190 4151                    	push r9
 18182 0000D192 41BA09000000            	mov r10, 5 + 4
 18183 0000D198 4C8B5D18                	mov r11, COUNT
 18184 0000D19C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18185 0000D1A1 4C8D65F8                	lea r12, [rbp - 8]
 18186                                  .L_tc_recycle_frame_loop_009e:
 18187 0000D1A5 4983FA00                	cmp r10, 0
 18188 0000D1A9 7414                    	je .L_tc_recycle_frame_done_009e
 18189 0000D1AB 4D8B2C24                	mov r13, qword [r12]
 18190 0000D1AF 4D892B                  	mov qword [r11], r13
 18191 0000D1B2 49FFCA                  	dec r10
 18192 0000D1B5 4983EB08                	sub r11, 8
 18193 0000D1B9 4983EC08                	sub r12, 8
 18194 0000D1BD EBE6                    	jmp .L_tc_recycle_frame_loop_009e
 18195                                  .L_tc_recycle_frame_done_009e:
 18196 0000D1BF 498D6308                	lea rsp, [r11 + 8]
 18197 0000D1C3 5D                      	pop rbp
 18198 0000D1C4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18199 0000D1C7 EB0A                    	jmp .L_if_end_0054
 18200                                  .L_if_else_0054:
 18201 0000D1C9 48B8-                   	mov rax, L_constants + 2
 18201 0000D1CB [0200000000000000] 
 18202                                  .L_if_end_0054:
 18203                                  .L_or_end_0008:
 18204 0000D1D3 EB0A                    	jmp .L_if_end_0055
 18205                                  .L_if_else_0055:
 18206 0000D1D5 48B8-                   	mov rax, L_constants + 2
 18206 0000D1D7 [0200000000000000] 
 18207                                  .L_if_end_0055:
 18208                                  .L_or_end_0007:
 18209 0000D1DF C9                      	leave
 18210 0000D1E0 C23800                  	ret AND_KILL_FRAME(5)
 18211                                  .L_lambda_simple_end_006c:	; new closure is in rax
 18212 0000D1E3 803804                  	cmp byte [rax], T_closure
 18213 0000D1E6 0F85F68D0000            	jne L_error_non_closure
 18214 0000D1EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18215 0000D1EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 18216 0000D1F2 50                      	push rax
 18217 0000D1F3 488B4520                	mov rax, PARAM(0)	; param run
 18218 0000D1F7 8F00                    	pop qword [rax]
 18219 0000D1F9 48B8-                   	mov rax, sob_void
 18219 0000D1FB [0000000000000000] 
 18220                                  
 18221                                  	; preparing a non-tail-call
 18222 0000D203 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18223 0000D208 E87E8E0000              	call malloc
 18224 0000D20D 50                      	push rax
 18225 0000D20E BF08000000              	mov rdi, 8 * 1	; new rib
 18226 0000D213 E8738E0000              	call malloc
 18227 0000D218 50                      	push rax
 18228 0000D219 BF18000000              	mov rdi, 8 * 3	; extended env
 18229 0000D21E E8688E0000              	call malloc
 18230 0000D223 488B7D10                	mov rdi, ENV
 18231 0000D227 BE00000000              	mov rsi, 0
 18232 0000D22C BA01000000              	mov rdx, 1
 18233                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18234 0000D231 4883FE02                	cmp rsi, 2
 18235 0000D235 7410                    	je .L_lambda_simple_env_end_006d
 18236 0000D237 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18237 0000D23B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18238 0000D23F 48FFC6                  	inc rsi
 18239 0000D242 48FFC2                  	inc rdx
 18240 0000D245 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18241                                  .L_lambda_simple_env_end_006d:
 18242 0000D247 5B                      	pop rbx
 18243 0000D248 BE00000000              	mov rsi, 0
 18244                                  .L_lambda_simple_params_loop_006d:	; copy params
 18245 0000D24D 4883FE01                	cmp rsi, 1
 18246 0000D251 740E                    	je .L_lambda_simple_params_end_006d
 18247 0000D253 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18248 0000D258 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18249 0000D25C 48FFC6                  	inc rsi
 18250 0000D25F EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18251                                  .L_lambda_simple_params_end_006d:
 18252 0000D261 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18253 0000D264 4889C3                  	mov rbx, rax
 18254 0000D267 58                      	pop rax
 18255 0000D268 C60004                  	mov byte [rax], T_closure
 18256 0000D26B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18257 0000D26F 48C74009[7CD20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18258 0000D277 E99D020000              	jmp .L_lambda_simple_end_006d
 18259                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18260 0000D27C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18261 0000D282 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18262 0000D284 FF742410                	push qword [rsp + 8 * 2]
 18263 0000D288 6A02                    	push 2
 18264 0000D28A E9B58D0000              	jmp L_error_incorrect_arity_simple
 18265                                  .L_lambda_simple_arity_check_ok_006d:
 18266 0000D28F C8000000                	enter 0, 0
 18267                                  	; Setting up for a tail-call
 18268                                  	; preparing a non-tail-call
 18269 0000D293 488B4520                	mov rax, PARAM(0)	; param str1
 18270 0000D297 50                      	push rax
 18271 0000D298 6A01                    	push 1	; arg count
 18272 0000D29A 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 18273 0000D2A2 803805                  	cmp byte [rax], T_undefined
 18274 0000D2A5 0F84B38C0000            	je L_error_fvar_undefined
 18275 0000D2AB 803804                  	cmp byte [rax], T_closure
 18276 0000D2AE 0F852E8D0000            	jne L_error_non_closure
 18277 0000D2B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18278 0000D2B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18279 0000D2BA 50                      	push rax
 18280                                  	; preparing a non-tail-call
 18281 0000D2BB 488B4528                	mov rax, PARAM(1)	; param str2
 18282 0000D2BF 50                      	push rax
 18283 0000D2C0 6A01                    	push 1	; arg count
 18284 0000D2C2 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 18285 0000D2CA 803805                  	cmp byte [rax], T_undefined
 18286 0000D2CD 0F848B8C0000            	je L_error_fvar_undefined
 18287 0000D2D3 803804                  	cmp byte [rax], T_closure
 18288 0000D2D6 0F85068D0000            	jne L_error_non_closure
 18289 0000D2DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18290 0000D2DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 18291 0000D2E2 50                      	push rax
 18292 0000D2E3 6A02                    	push 2
 18293 0000D2E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18294 0000D2EA E89C8D0000              	call malloc
 18295 0000D2EF 50                      	push rax
 18296 0000D2F0 BF10000000              	mov rdi, 8 * 2	; new rib
 18297 0000D2F5 E8918D0000              	call malloc
 18298 0000D2FA 50                      	push rax
 18299 0000D2FB BF20000000              	mov rdi, 8 * 4	; extended env
 18300 0000D300 E8868D0000              	call malloc
 18301 0000D305 488B7D10                	mov rdi, ENV
 18302 0000D309 BE00000000              	mov rsi, 0
 18303 0000D30E BA01000000              	mov rdx, 1
 18304                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18305 0000D313 4883FE03                	cmp rsi, 3
 18306 0000D317 7410                    	je .L_lambda_simple_env_end_006e
 18307 0000D319 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18308 0000D31D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18309 0000D321 48FFC6                  	inc rsi
 18310 0000D324 48FFC2                  	inc rdx
 18311 0000D327 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18312                                  .L_lambda_simple_env_end_006e:
 18313 0000D329 5B                      	pop rbx
 18314 0000D32A BE00000000              	mov rsi, 0
 18315                                  .L_lambda_simple_params_loop_006e:	; copy params
 18316 0000D32F 4883FE02                	cmp rsi, 2
 18317 0000D333 740E                    	je .L_lambda_simple_params_end_006e
 18318 0000D335 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18319 0000D33A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18320 0000D33E 48FFC6                  	inc rsi
 18321 0000D341 EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18322                                  .L_lambda_simple_params_end_006e:
 18323 0000D343 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18324 0000D346 4889C3                  	mov rbx, rax
 18325 0000D349 58                      	pop rax
 18326 0000D34A C60004                  	mov byte [rax], T_closure
 18327 0000D34D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18328 0000D351 48C74009[5ED30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18329 0000D359 E96A010000              	jmp .L_lambda_simple_end_006e
 18330                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18331 0000D35E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18332 0000D364 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18333 0000D366 FF742410                	push qword [rsp + 8 * 2]
 18334 0000D36A 6A02                    	push 2
 18335 0000D36C E9D38C0000              	jmp L_error_incorrect_arity_simple
 18336                                  .L_lambda_simple_arity_check_ok_006e:
 18337 0000D371 C8000000                	enter 0, 0
 18338                                  	; preparing a non-tail-call
 18339 0000D375 488B4528                	mov rax, PARAM(1)	; param len2
 18340 0000D379 50                      	push rax
 18341 0000D37A 488B4520                	mov rax, PARAM(0)	; param len1
 18342 0000D37E 50                      	push rax
 18343 0000D37F 6A02                    	push 2	; arg count
 18344 0000D381 488B0425[460E0000]      	mov rax, qword [free_var_5]	; free var <=
 18345 0000D389 803805                  	cmp byte [rax], T_undefined
 18346 0000D38C 0F84CC8B0000            	je L_error_fvar_undefined
 18347 0000D392 803804                  	cmp byte [rax], T_closure
 18348 0000D395 0F85478C0000            	jne L_error_non_closure
 18349 0000D39B FF7001                  	push SOB_CLOSURE_ENV(rax)
 18350 0000D39E FF5009                  	call SOB_CLOSURE_CODE(rax)
 18351 0000D3A1 483D[02000000]          	cmp rax, sob_boolean_false
 18352 0000D3A7 0F848E000000            	je .L_if_else_0056
 18353                                  	; Setting up for a tail-call
 18354 0000D3AD 48B8-                   	mov rax, L_constants + 2149
 18354 0000D3AF [6508000000000000] 
 18355 0000D3B7 50                      	push rax
 18356 0000D3B8 488B4510                	mov rax, ENV
 18357 0000D3BC 488B00                  	mov rax, qword [rax + 8 * 0]
 18358 0000D3BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18359 0000D3C2 50                      	push rax
 18360 0000D3C3 488B4520                	mov rax, PARAM(0)	; param len1
 18361 0000D3C7 50                      	push rax
 18362 0000D3C8 488B4510                	mov rax, ENV
 18363 0000D3CC 488B00                  	mov rax, qword [rax + 8 * 0]
 18364 0000D3CF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18365 0000D3D3 50                      	push rax
 18366 0000D3D4 488B4528                	mov rax, PARAM(1)	; param len2
 18367 0000D3D8 50                      	push rax
 18368 0000D3D9 6A05                    	push 5
 18369 0000D3DB 488B4510                	mov rax, ENV
 18370 0000D3DF 488B4008                	mov rax, qword [rax + 8 * 1]
 18371 0000D3E3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18372 0000D3E6 488B00                  	mov rax, qword [rax]
 18373 0000D3E9 803804                  	cmp byte [rax], T_closure
 18374 0000D3EC 0F85F08B0000            	jne L_error_non_closure
 18375 0000D3F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18376 0000D3F5 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18377 0000D3F9 4C8B4D00                	mov r9, qword [rbp]
 18378 0000D3FD 4150                    	push r8
 18379 0000D3FF 4151                    	push r9
 18380 0000D401 41BA09000000            	mov r10, 5 + 4
 18381 0000D407 4C8B5D18                	mov r11, COUNT
 18382 0000D40B 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18383 0000D410 4C8D65F8                	lea r12, [rbp - 8]
 18384                                  .L_tc_recycle_frame_loop_009f:
 18385 0000D414 4983FA00                	cmp r10, 0
 18386 0000D418 7414                    	je .L_tc_recycle_frame_done_009f
 18387 0000D41A 4D8B2C24                	mov r13, qword [r12]
 18388 0000D41E 4D892B                  	mov qword [r11], r13
 18389 0000D421 49FFCA                  	dec r10
 18390 0000D424 4983EB08                	sub r11, 8
 18391 0000D428 4983EC08                	sub r12, 8
 18392 0000D42C EBE6                    	jmp .L_tc_recycle_frame_loop_009f
 18393                                  .L_tc_recycle_frame_done_009f:
 18394 0000D42E 498D6308                	lea rsp, [r11 + 8]
 18395 0000D432 5D                      	pop rbp
 18396 0000D433 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18397 0000D436 E989000000              	jmp .L_if_end_0056
 18398                                  .L_if_else_0056:
 18399                                  	; Setting up for a tail-call
 18400 0000D43B 48B8-                   	mov rax, L_constants + 2149
 18400 0000D43D [6508000000000000] 
 18401 0000D445 50                      	push rax
 18402 0000D446 488B4510                	mov rax, ENV
 18403 0000D44A 488B00                  	mov rax, qword [rax + 8 * 0]
 18404 0000D44D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18405 0000D451 50                      	push rax
 18406 0000D452 488B4528                	mov rax, PARAM(1)	; param len2
 18407 0000D456 50                      	push rax
 18408 0000D457 488B4510                	mov rax, ENV
 18409 0000D45B 488B00                  	mov rax, qword [rax + 8 * 0]
 18410 0000D45E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18411 0000D461 50                      	push rax
 18412 0000D462 488B4520                	mov rax, PARAM(0)	; param len1
 18413 0000D466 50                      	push rax
 18414 0000D467 6A05                    	push 5
 18415 0000D469 488B4510                	mov rax, ENV
 18416 0000D46D 488B4008                	mov rax, qword [rax + 8 * 1]
 18417 0000D471 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18418 0000D474 488B00                  	mov rax, qword [rax]
 18419 0000D477 803804                  	cmp byte [rax], T_closure
 18420 0000D47A 0F85628B0000            	jne L_error_non_closure
 18421 0000D480 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18422 0000D483 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18423 0000D487 4C8B4D00                	mov r9, qword [rbp]
 18424 0000D48B 4150                    	push r8
 18425 0000D48D 4151                    	push r9
 18426 0000D48F 41BA09000000            	mov r10, 5 + 4
 18427 0000D495 4C8B5D18                	mov r11, COUNT
 18428 0000D499 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18429 0000D49E 4C8D65F8                	lea r12, [rbp - 8]
 18430                                  .L_tc_recycle_frame_loop_00a0:
 18431 0000D4A2 4983FA00                	cmp r10, 0
 18432 0000D4A6 7414                    	je .L_tc_recycle_frame_done_00a0
 18433 0000D4A8 4D8B2C24                	mov r13, qword [r12]
 18434 0000D4AC 4D892B                  	mov qword [r11], r13
 18435 0000D4AF 49FFCA                  	dec r10
 18436 0000D4B2 4983EB08                	sub r11, 8
 18437 0000D4B6 4983EC08                	sub r12, 8
 18438 0000D4BA EBE6                    	jmp .L_tc_recycle_frame_loop_00a0
 18439                                  .L_tc_recycle_frame_done_00a0:
 18440 0000D4BC 498D6308                	lea rsp, [r11 + 8]
 18441 0000D4C0 5D                      	pop rbp
 18442 0000D4C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18443                                  .L_if_end_0056:
 18444 0000D4C4 C9                      	leave
 18445 0000D4C5 C22000                  	ret AND_KILL_FRAME(2)
 18446                                  .L_lambda_simple_end_006e:	; new closure is in rax
 18447 0000D4C8 803804                  	cmp byte [rax], T_closure
 18448 0000D4CB 0F85118B0000            	jne L_error_non_closure
 18449 0000D4D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18450 0000D4D4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18451 0000D4D8 4C8B4D00                	mov r9, qword [rbp]
 18452 0000D4DC 4150                    	push r8
 18453 0000D4DE 4151                    	push r9
 18454 0000D4E0 41BA06000000            	mov r10, 2 + 4
 18455 0000D4E6 4C8B5D18                	mov r11, COUNT
 18456 0000D4EA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18457 0000D4EF 4C8D65F8                	lea r12, [rbp - 8]
 18458                                  .L_tc_recycle_frame_loop_00a1:
 18459 0000D4F3 4983FA00                	cmp r10, 0
 18460 0000D4F7 7414                    	je .L_tc_recycle_frame_done_00a1
 18461 0000D4F9 4D8B2C24                	mov r13, qword [r12]
 18462 0000D4FD 4D892B                  	mov qword [r11], r13
 18463 0000D500 49FFCA                  	dec r10
 18464 0000D503 4983EB08                	sub r11, 8
 18465 0000D507 4983EC08                	sub r12, 8
 18466 0000D50B EBE6                    	jmp .L_tc_recycle_frame_loop_00a1
 18467                                  .L_tc_recycle_frame_done_00a1:
 18468 0000D50D 498D6308                	lea rsp, [r11 + 8]
 18469 0000D511 5D                      	pop rbp
 18470 0000D512 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18471 0000D515 C9                      	leave
 18472 0000D516 C22000                  	ret AND_KILL_FRAME(2)
 18473                                  .L_lambda_simple_end_006d:	; new closure is in rax
 18474 0000D519 50                      	push rax
 18475 0000D51A 6A01                    	push 1	; arg count
 18476 0000D51C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18477 0000D521 E8658B0000              	call malloc
 18478 0000D526 50                      	push rax
 18479 0000D527 BF08000000              	mov rdi, 8 * 1	; new rib
 18480 0000D52C E85A8B0000              	call malloc
 18481 0000D531 50                      	push rax
 18482 0000D532 BF18000000              	mov rdi, 8 * 3	; extended env
 18483 0000D537 E84F8B0000              	call malloc
 18484 0000D53C 488B7D10                	mov rdi, ENV
 18485 0000D540 BE00000000              	mov rsi, 0
 18486 0000D545 BA01000000              	mov rdx, 1
 18487                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 18488 0000D54A 4883FE02                	cmp rsi, 2
 18489 0000D54E 7410                    	je .L_lambda_simple_env_end_006f
 18490 0000D550 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18491 0000D554 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18492 0000D558 48FFC6                  	inc rsi
 18493 0000D55B 48FFC2                  	inc rdx
 18494 0000D55E EBEA                    	jmp .L_lambda_simple_env_loop_006f
 18495                                  .L_lambda_simple_env_end_006f:
 18496 0000D560 5B                      	pop rbx
 18497 0000D561 BE00000000              	mov rsi, 0
 18498                                  .L_lambda_simple_params_loop_006f:	; copy params
 18499 0000D566 4883FE01                	cmp rsi, 1
 18500 0000D56A 740E                    	je .L_lambda_simple_params_end_006f
 18501 0000D56C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18502 0000D571 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18503 0000D575 48FFC6                  	inc rsi
 18504 0000D578 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 18505                                  .L_lambda_simple_params_end_006f:
 18506 0000D57A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18507 0000D57D 4889C3                  	mov rbx, rax
 18508 0000D580 58                      	pop rax
 18509 0000D581 C60004                  	mov byte [rax], T_closure
 18510 0000D584 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18511 0000D588 48C74009[95D50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 18512 0000D590 E903050000              	jmp .L_lambda_simple_end_006f
 18513                                  .L_lambda_simple_code_006f:	; lambda-simple body
 18514 0000D595 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18515 0000D59B 740B                    	je .L_lambda_simple_arity_check_ok_006f
 18516 0000D59D FF742410                	push qword [rsp + 8 * 2]
 18517 0000D5A1 6A01                    	push 1
 18518 0000D5A3 E99C8A0000              	jmp L_error_incorrect_arity_simple
 18519                                  .L_lambda_simple_arity_check_ok_006f:
 18520 0000D5A8 C8000000                	enter 0, 0
 18521                                  	; Setting up for a tail-call
 18522 0000D5AC 48B8-                   	mov rax, L_constants + 1993
 18522 0000D5AE [C907000000000000] 
 18523 0000D5B6 50                      	push rax
 18524 0000D5B7 6A01                    	push 1
 18525 0000D5B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18526 0000D5BE E8C88A0000              	call malloc
 18527 0000D5C3 50                      	push rax
 18528 0000D5C4 BF08000000              	mov rdi, 8 * 1	; new rib
 18529 0000D5C9 E8BD8A0000              	call malloc
 18530 0000D5CE 50                      	push rax
 18531 0000D5CF BF20000000              	mov rdi, 8 * 4	; extended env
 18532 0000D5D4 E8B28A0000              	call malloc
 18533 0000D5D9 488B7D10                	mov rdi, ENV
 18534 0000D5DD BE00000000              	mov rsi, 0
 18535 0000D5E2 BA01000000              	mov rdx, 1
 18536                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 18537 0000D5E7 4883FE03                	cmp rsi, 3
 18538 0000D5EB 7410                    	je .L_lambda_simple_env_end_0070
 18539 0000D5ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18540 0000D5F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18541 0000D5F5 48FFC6                  	inc rsi
 18542 0000D5F8 48FFC2                  	inc rdx
 18543 0000D5FB EBEA                    	jmp .L_lambda_simple_env_loop_0070
 18544                                  .L_lambda_simple_env_end_0070:
 18545 0000D5FD 5B                      	pop rbx
 18546 0000D5FE BE00000000              	mov rsi, 0
 18547                                  .L_lambda_simple_params_loop_0070:	; copy params
 18548 0000D603 4883FE01                	cmp rsi, 1
 18549 0000D607 740E                    	je .L_lambda_simple_params_end_0070
 18550 0000D609 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18551 0000D60E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18552 0000D612 48FFC6                  	inc rsi
 18553 0000D615 EBEC                    	jmp .L_lambda_simple_params_loop_0070
 18554                                  .L_lambda_simple_params_end_0070:
 18555 0000D617 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18556 0000D61A 4889C3                  	mov rbx, rax
 18557 0000D61D 58                      	pop rax
 18558 0000D61E C60004                  	mov byte [rax], T_closure
 18559 0000D621 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18560 0000D625 48C74009[32D60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 18561 0000D62D E915040000              	jmp .L_lambda_simple_end_0070
 18562                                  .L_lambda_simple_code_0070:	; lambda-simple body
 18563 0000D632 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18564 0000D638 740B                    	je .L_lambda_simple_arity_check_ok_0070
 18565 0000D63A FF742410                	push qword [rsp + 8 * 2]
 18566 0000D63E 6A01                    	push 1
 18567 0000D640 E9FF890000              	jmp L_error_incorrect_arity_simple
 18568                                  .L_lambda_simple_arity_check_ok_0070:
 18569 0000D645 C8000000                	enter 0, 0
 18570 0000D649 BF08000000              	mov rdi, 8 * 1
 18571 0000D64E E8388A0000              	call malloc
 18572 0000D653 488B5D20                	mov rbx, PARAM(0)
 18573 0000D657 488918                  	mov qword [rax], rbx
 18574 0000D65A 48894520                	mov PARAM(0), rax
 18575 0000D65E 48B8-                   	mov rax, sob_void
 18575 0000D660 [0000000000000000] 
 18576                                  
 18577                                  	; preparing a non-tail-call
 18578 0000D668 6A00                    	push 0	; arg count
 18579 0000D66A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18580 0000D66F E8178A0000              	call malloc
 18581 0000D674 50                      	push rax
 18582 0000D675 BF08000000              	mov rdi, 8 * 1	; new rib
 18583 0000D67A E80C8A0000              	call malloc
 18584 0000D67F 50                      	push rax
 18585 0000D680 BF28000000              	mov rdi, 8 * 5	; extended env
 18586 0000D685 E8018A0000              	call malloc
 18587 0000D68A 488B7D10                	mov rdi, ENV
 18588 0000D68E BE00000000              	mov rsi, 0
 18589 0000D693 BA01000000              	mov rdx, 1
 18590                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 18591 0000D698 4883FE04                	cmp rsi, 4
 18592 0000D69C 7410                    	je .L_lambda_simple_env_end_0071
 18593 0000D69E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18594 0000D6A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18595 0000D6A6 48FFC6                  	inc rsi
 18596 0000D6A9 48FFC2                  	inc rdx
 18597 0000D6AC EBEA                    	jmp .L_lambda_simple_env_loop_0071
 18598                                  .L_lambda_simple_env_end_0071:
 18599 0000D6AE 5B                      	pop rbx
 18600 0000D6AF BE00000000              	mov rsi, 0
 18601                                  .L_lambda_simple_params_loop_0071:	; copy params
 18602 0000D6B4 4883FE01                	cmp rsi, 1
 18603 0000D6B8 740E                    	je .L_lambda_simple_params_end_0071
 18604 0000D6BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18605 0000D6BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18606 0000D6C3 48FFC6                  	inc rsi
 18607 0000D6C6 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 18608                                  .L_lambda_simple_params_end_0071:
 18609 0000D6C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18610 0000D6CB 4889C3                  	mov rbx, rax
 18611 0000D6CE 58                      	pop rax
 18612 0000D6CF C60004                  	mov byte [rax], T_closure
 18613 0000D6D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18614 0000D6D6 48C74009[E3D60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 18615 0000D6DE E95B010000              	jmp .L_lambda_simple_end_0071
 18616                                  .L_lambda_simple_code_0071:	; lambda-simple body
 18617 0000D6E3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18618 0000D6E9 740B                    	je .L_lambda_simple_arity_check_ok_0071
 18619 0000D6EB FF742410                	push qword [rsp + 8 * 2]
 18620 0000D6EF 6A02                    	push 2
 18621 0000D6F1 E94E890000              	jmp L_error_incorrect_arity_simple
 18622                                  .L_lambda_simple_arity_check_ok_0071:
 18623 0000D6F6 C8000000                	enter 0, 0
 18624                                  	; preparing a non-tail-call
 18625 0000D6FA 488B4528                	mov rax, PARAM(1)	; param strs
 18626 0000D6FE 50                      	push rax
 18627 0000D6FF 6A01                    	push 1	; arg count
 18628 0000D701 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 18629 0000D709 803805                  	cmp byte [rax], T_undefined
 18630 0000D70C 0F844C880000            	je L_error_fvar_undefined
 18631 0000D712 803804                  	cmp byte [rax], T_closure
 18632 0000D715 0F85C7880000            	jne L_error_non_closure
 18633 0000D71B FF7001                  	push SOB_CLOSURE_ENV(rax)
 18634 0000D71E FF5009                  	call SOB_CLOSURE_CODE(rax)
 18635 0000D721 483D[02000000]          	cmp rax, sob_boolean_false
 18636 0000D727 0F850D010000            	jne .L_or_end_0009
 18637                                  
 18638                                  	; preparing a non-tail-call
 18639                                  	; preparing a non-tail-call
 18640 0000D72D 488B4528                	mov rax, PARAM(1)	; param strs
 18641 0000D731 50                      	push rax
 18642 0000D732 6A01                    	push 1	; arg count
 18643 0000D734 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 18644 0000D73C 803805                  	cmp byte [rax], T_undefined
 18645 0000D73F 0F8419880000            	je L_error_fvar_undefined
 18646 0000D745 803804                  	cmp byte [rax], T_closure
 18647 0000D748 0F8594880000            	jne L_error_non_closure
 18648 0000D74E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18649 0000D751 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18650 0000D754 50                      	push rax
 18651 0000D755 488B4520                	mov rax, PARAM(0)	; param str
 18652 0000D759 50                      	push rax
 18653 0000D75A 6A02                    	push 2	; arg count
 18654 0000D75C 488B4510                	mov rax, ENV
 18655 0000D760 488B4008                	mov rax, qword [rax + 8 * 1]
 18656 0000D764 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18657 0000D767 803804                  	cmp byte [rax], T_closure
 18658 0000D76A 0F8572880000            	jne L_error_non_closure
 18659 0000D770 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18660 0000D773 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18661 0000D776 483D[02000000]          	cmp rax, sob_boolean_false
 18662 0000D77C 0F84AE000000            	je .L_if_else_0057
 18663                                  	; Setting up for a tail-call
 18664                                  	; preparing a non-tail-call
 18665 0000D782 488B4528                	mov rax, PARAM(1)	; param strs
 18666 0000D786 50                      	push rax
 18667 0000D787 6A01                    	push 1	; arg count
 18668 0000D789 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 18669 0000D791 803805                  	cmp byte [rax], T_undefined
 18670 0000D794 0F84C4870000            	je L_error_fvar_undefined
 18671 0000D79A 803804                  	cmp byte [rax], T_closure
 18672 0000D79D 0F853F880000            	jne L_error_non_closure
 18673 0000D7A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18674 0000D7A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18675 0000D7A9 50                      	push rax
 18676                                  	; preparing a non-tail-call
 18677 0000D7AA 488B4528                	mov rax, PARAM(1)	; param strs
 18678 0000D7AE 50                      	push rax
 18679 0000D7AF 6A01                    	push 1	; arg count
 18680 0000D7B1 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 18681 0000D7B9 803805                  	cmp byte [rax], T_undefined
 18682 0000D7BC 0F849C870000            	je L_error_fvar_undefined
 18683 0000D7C2 803804                  	cmp byte [rax], T_closure
 18684 0000D7C5 0F8517880000            	jne L_error_non_closure
 18685 0000D7CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18686 0000D7CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 18687 0000D7D1 50                      	push rax
 18688 0000D7D2 6A02                    	push 2
 18689 0000D7D4 488B4510                	mov rax, ENV
 18690 0000D7D8 488B00                  	mov rax, qword [rax + 8 * 0]
 18691 0000D7DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18692 0000D7DE 488B00                  	mov rax, qword [rax]
 18693 0000D7E1 803804                  	cmp byte [rax], T_closure
 18694 0000D7E4 0F85F8870000            	jne L_error_non_closure
 18695 0000D7EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 18696 0000D7ED 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18697 0000D7F1 4C8B4D00                	mov r9, qword [rbp]
 18698 0000D7F5 4150                    	push r8
 18699 0000D7F7 4151                    	push r9
 18700 0000D7F9 41BA06000000            	mov r10, 2 + 4
 18701 0000D7FF 4C8B5D18                	mov r11, COUNT
 18702 0000D803 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18703 0000D808 4C8D65F8                	lea r12, [rbp - 8]
 18704                                  .L_tc_recycle_frame_loop_00a2:
 18705 0000D80C 4983FA00                	cmp r10, 0
 18706 0000D810 7414                    	je .L_tc_recycle_frame_done_00a2
 18707 0000D812 4D8B2C24                	mov r13, qword [r12]
 18708 0000D816 4D892B                  	mov qword [r11], r13
 18709 0000D819 49FFCA                  	dec r10
 18710 0000D81C 4983EB08                	sub r11, 8
 18711 0000D820 4983EC08                	sub r12, 8
 18712 0000D824 EBE6                    	jmp .L_tc_recycle_frame_loop_00a2
 18713                                  .L_tc_recycle_frame_done_00a2:
 18714 0000D826 498D6308                	lea rsp, [r11 + 8]
 18715 0000D82A 5D                      	pop rbp
 18716 0000D82B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18717 0000D82E EB0A                    	jmp .L_if_end_0057
 18718                                  .L_if_else_0057:
 18719 0000D830 48B8-                   	mov rax, L_constants + 2
 18719 0000D832 [0200000000000000] 
 18720                                  .L_if_end_0057:
 18721                                  .L_or_end_0009:
 18722 0000D83A C9                      	leave
 18723 0000D83B C22000                  	ret AND_KILL_FRAME(2)
 18724                                  .L_lambda_simple_end_0071:	; new closure is in rax
 18725 0000D83E 803804                  	cmp byte [rax], T_closure
 18726 0000D841 0F859B870000            	jne L_error_non_closure
 18727 0000D847 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18728 0000D84A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18729 0000D84D 50                      	push rax
 18730 0000D84E 488B4520                	mov rax, PARAM(0)	; param run
 18731 0000D852 8F00                    	pop qword [rax]
 18732 0000D854 48B8-                   	mov rax, sob_void
 18732 0000D856 [0000000000000000] 
 18733                                  
 18734 0000D85E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18735 0000D863 E823880000              	call malloc
 18736 0000D868 50                      	push rax
 18737 0000D869 BF08000000              	mov rdi, 8 * 1	; new rib
 18738 0000D86E E818880000              	call malloc
 18739 0000D873 50                      	push rax
 18740 0000D874 BF28000000              	mov rdi, 8 * 5	; extended env
 18741 0000D879 E80D880000              	call malloc
 18742 0000D87E 488B7D10                	mov rdi, ENV
 18743 0000D882 BE00000000              	mov rsi, 0
 18744 0000D887 BA01000000              	mov rdx, 1
 18745                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 18746 0000D88C 4883FE04                	cmp rsi, 4
 18747 0000D890 7410                    	je .L_lambda_opt_env_end_0011
 18748 0000D892 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18749 0000D896 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18750 0000D89A 48FFC6                  	inc rsi
 18751 0000D89D 48FFC2                  	inc rdx
 18752 0000D8A0 EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18753                                  .L_lambda_opt_env_end_0011:
 18754 0000D8A2 5B                      	pop rbx
 18755 0000D8A3 BE00000000              	mov rsi, 0
 18756                                  .L_lambda_opt_params_loop_0011:	; copy params
 18757 0000D8A8 4883FE01                	cmp rsi, 1
 18758 0000D8AC 740E                    	je .L_lambda_opt_params_end_0011
 18759 0000D8AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18760 0000D8B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18761 0000D8B7 48FFC6                  	inc rsi
 18762 0000D8BA EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18763                                  .L_lambda_opt_params_end_0011:
 18764 0000D8BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18765 0000D8BF 4889C3                  	mov rbx, rax
 18766 0000D8C2 58                      	pop rax
 18767 0000D8C3 C60004                  	mov byte [rax], T_closure
 18768 0000D8C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18769 0000D8CA 48C74009[D7D80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18770 0000D8D2 E96C010000              	jmp .L_lambda_opt_end_0011
 18771                                  .L_lambda_opt_code_0011:
 18772 0000D8D7 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 18773 0000D8DC 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 18774 0000D8E0 7407                    	je .L_lambda_opt_arity_check_exact_0011	; Jump if arity matches
 18775 0000D8E2 7F4C                    	jg .L_lambda_opt_arity_check_more_0011	; Jump if more arguments passed
 18776 0000D8E4 E96F870000              	jmp L_error_incorrect_arity_opt
 18777                                  .L_lambda_opt_arity_check_exact_0011:
 18778 0000D8E9 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 18779 0000D8EC 4983C603                	add r14, 3 ; add 3 first stack values
 18780 0000D8F0 41BF00000000            	mov r15, 0 ; r15 = index
 18781 0000D8F6 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 18782 0000D8FA 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 18783 0000D902 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18784                                  .L_lambda_opt_stack_shrink_loop_0011:
 18785 0000D904 4983FE00                	cmp r14, 0
 18786 0000D908 7E11                    	jle .L_make_lambda_opt_exact_finish_0011
 18787 0000D90A 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 18788 0000D90F 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 18789 0000D913 49FFCE                  	dec r14 ; next loop value
 18790 0000D916 49FFC7                  	inc r15 ; update i
 18791 0000D919 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18792                                  .L_make_lambda_opt_exact_finish_0011:
 18793 0000D91B 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 18794 0000D923 49FFC2                  	inc r10
 18795 0000D926 4C89542410              	mov qword [rsp + 8 * 2], r10
 18796 0000D92B E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0011
 18797                                  .L_lambda_opt_arity_check_more_0011:
 18798 0000D930 4D89D6                  	mov r14, r10 ; r14 = num args
 18799 0000D933 4D89D7                  	mov r15, r10 ; r15 = num args
 18800 0000D936 41B901000000            	mov r9, 1; r9 = number of params 
 18801 0000D93C 4D29CE                  	sub r14, r9 ; r14 = extra args
 18802 0000D93F 4D01F1                  	add r9, r14 ; r9 = num args
 18803 0000D942 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 18803 0000D944 [0100000000000000] 
 18804 0000D94C EB00                    	jmp .L_make_lambda_opt_arg_list_0011
 18805                                  .L_make_lambda_opt_arg_list_0011:
 18806 0000D94E 4983FE00                	cmp r14, 0
 18807 0000D952 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0011
 18808 0000D954 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 18809 0000D959 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 18810 0000D95C 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 18811 0000D962 E824870000              	call malloc                         ; Allocate memory, result in rax
 18812 0000D967 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 18813 0000D96A 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 18814 0000D96E 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 18815 0000D972 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 18816 0000D975 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 18817 0000D978 49FFC9                  	dec r9                              ; args index minus 1
 18818 0000D97B 49FFCE                  	dec r14                             ; next iteration
 18819 0000D97E EBCE                    	jmp .L_make_lambda_opt_arg_list_0011
 18820                                  .L_make_lambda_opt_stack_fixed_0011:
 18821 0000D980 4D89FE                  	mov r14, r15 ; r14 = num args
 18822 0000D983 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 18823 0000D986 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 18824 0000D98A 41BA01000000            	mov r10, 1; r10 = num of params
 18825 0000D990 4D29D6                  	sub r14, r10 ; r14 = extra args
 18826 0000D993 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 18827 0000D996 49FFCE                  	dec r14 ; how much we need to change stack wise?
 18828 0000D999 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 18829 0000D99E EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0011
 18830                                  .L_lambda_opt_stack_shrink_loop_more_0011:
 18831 0000D9A0 4983F800                	cmp r8, 0
 18832 0000D9A4 7E15                    	jle .L_make_lambda_opt_more_finish_0011
 18833 0000D9A6 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 18834 0000D9AA 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 18835 0000D9AE 4D8D26                  	lea r12, [r14]
 18836 0000D9B1 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 18837 0000D9B6 49FFC8                  	dec r8 ; next iteration
 18838 0000D9B9 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0011
 18839                                  .L_make_lambda_opt_more_finish_0011:
 18840 0000D9BB 4D89F8                  	mov r8, r15 ; num of args
 18841 0000D9BE 41BA01000000            	mov r10, 1
 18842 0000D9C4 4D29D0                  	sub r8, r10 ; num of new args
 18843 0000D9C7 49FFC0                  	inc r8
 18844 0000D9CA 4C89442420              	mov qword [rsp + 8 * 4], r8
 18845 0000D9CF 4883C410                	add rsp, 8 * 2  ; 
 18846 0000D9D3 EB00                    	jmp .L_lambda_opt_stack_adjusted_0011
 18847                                  .L_lambda_opt_stack_adjusted_0011:
 18848 0000D9D5 C8000000                	enter 0, 0
 18849                                  	; Setting up for a tail-call
 18850 0000D9D9 488B4520                	mov rax, PARAM(0)	; param str
 18851 0000D9DD 50                      	push rax
 18852 0000D9DE 488B4528                	mov rax, PARAM(1)	; param strs
 18853 0000D9E2 50                      	push rax
 18854 0000D9E3 6A02                    	push 2
 18855 0000D9E5 488B4510                	mov rax, ENV
 18856 0000D9E9 488B00                  	mov rax, qword [rax + 8 * 0]
 18857 0000D9EC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18858 0000D9EF 488B00                  	mov rax, qword [rax]
 18859 0000D9F2 803804                  	cmp byte [rax], T_closure
 18860 0000D9F5 0F85E7850000            	jne L_error_non_closure
 18861 0000D9FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18862 0000D9FE 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18863 0000DA02 4C8B4D00                	mov r9, qword [rbp]
 18864 0000DA06 4150                    	push r8
 18865 0000DA08 4151                    	push r9
 18866 0000DA0A 41BA06000000            	mov r10, 2 + 4
 18867 0000DA10 4C8B5D18                	mov r11, COUNT
 18868 0000DA14 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18869 0000DA19 4C8D65F8                	lea r12, [rbp - 8]
 18870                                  .L_tc_recycle_frame_loop_00a3:
 18871 0000DA1D 4983FA00                	cmp r10, 0
 18872 0000DA21 7414                    	je .L_tc_recycle_frame_done_00a3
 18873 0000DA23 4D8B2C24                	mov r13, qword [r12]
 18874 0000DA27 4D892B                  	mov qword [r11], r13
 18875 0000DA2A 49FFCA                  	dec r10
 18876 0000DA2D 4983EB08                	sub r11, 8
 18877 0000DA31 4983EC08                	sub r12, 8
 18878 0000DA35 EBE6                    	jmp .L_tc_recycle_frame_loop_00a3
 18879                                  .L_tc_recycle_frame_done_00a3:
 18880 0000DA37 498D6308                	lea rsp, [r11 + 8]
 18881 0000DA3B 5D                      	pop rbp
 18882 0000DA3C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18883 0000DA3F C9                      	leave
 18884 0000DA40 C21800                  	ret AND_KILL_FRAME(1)
 18885                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18886 0000DA43 C9                      	leave
 18887 0000DA44 C21800                  	ret AND_KILL_FRAME(1)
 18888                                  .L_lambda_simple_end_0070:	; new closure is in rax
 18889 0000DA47 803804                  	cmp byte [rax], T_closure
 18890 0000DA4A 0F8592850000            	jne L_error_non_closure
 18891 0000DA50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18892 0000DA53 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18893 0000DA57 4C8B4D00                	mov r9, qword [rbp]
 18894 0000DA5B 4150                    	push r8
 18895 0000DA5D 4151                    	push r9
 18896 0000DA5F 41BA05000000            	mov r10, 1 + 4
 18897 0000DA65 4C8B5D18                	mov r11, COUNT
 18898 0000DA69 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18899 0000DA6E 4C8D65F8                	lea r12, [rbp - 8]
 18900                                  .L_tc_recycle_frame_loop_00a4:
 18901 0000DA72 4983FA00                	cmp r10, 0
 18902 0000DA76 7414                    	je .L_tc_recycle_frame_done_00a4
 18903 0000DA78 4D8B2C24                	mov r13, qword [r12]
 18904 0000DA7C 4D892B                  	mov qword [r11], r13
 18905 0000DA7F 49FFCA                  	dec r10
 18906 0000DA82 4983EB08                	sub r11, 8
 18907 0000DA86 4983EC08                	sub r12, 8
 18908 0000DA8A EBE6                    	jmp .L_tc_recycle_frame_loop_00a4
 18909                                  .L_tc_recycle_frame_done_00a4:
 18910 0000DA8C 498D6308                	lea rsp, [r11 + 8]
 18911 0000DA90 5D                      	pop rbp
 18912 0000DA91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18913 0000DA94 C9                      	leave
 18914 0000DA95 C21800                  	ret AND_KILL_FRAME(1)
 18915                                  .L_lambda_simple_end_006f:	; new closure is in rax
 18916 0000DA98 803804                  	cmp byte [rax], T_closure
 18917 0000DA9B 0F8541850000            	jne L_error_non_closure
 18918 0000DAA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18919 0000DAA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18920 0000DAA7 C9                      	leave
 18921 0000DAA8 C21800                  	ret AND_KILL_FRAME(1)
 18922                                  .L_lambda_simple_end_006b:	; new closure is in rax
 18923 0000DAAB 803804                  	cmp byte [rax], T_closure
 18924 0000DAAE 0F852E850000            	jne L_error_non_closure
 18925 0000DAB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18926 0000DAB7 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 18927 0000DABB 4C8B4D00                	mov r9, qword [rbp]
 18928 0000DABF 4150                    	push r8
 18929 0000DAC1 4151                    	push r9
 18930 0000DAC3 41BA05000000            	mov r10, 1 + 4
 18931 0000DAC9 4C8B5D18                	mov r11, COUNT
 18932 0000DACD 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 18933 0000DAD2 4C8D65F8                	lea r12, [rbp - 8]
 18934                                  .L_tc_recycle_frame_loop_00a5:
 18935 0000DAD6 4983FA00                	cmp r10, 0
 18936 0000DADA 7414                    	je .L_tc_recycle_frame_done_00a5
 18937 0000DADC 4D8B2C24                	mov r13, qword [r12]
 18938 0000DAE0 4D892B                  	mov qword [r11], r13
 18939 0000DAE3 49FFCA                  	dec r10
 18940 0000DAE6 4983EB08                	sub r11, 8
 18941 0000DAEA 4983EC08                	sub r12, 8
 18942 0000DAEE EBE6                    	jmp .L_tc_recycle_frame_loop_00a5
 18943                                  .L_tc_recycle_frame_done_00a5:
 18944 0000DAF0 498D6308                	lea rsp, [r11 + 8]
 18945 0000DAF4 5D                      	pop rbp
 18946 0000DAF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18947 0000DAF8 C9                      	leave
 18948 0000DAF9 C22000                  	ret AND_KILL_FRAME(2)
 18949                                  .L_lambda_simple_end_006a:	; new closure is in rax
 18950 0000DAFC 50                      	push rax
 18951 0000DAFD 6A01                    	push 1	; arg count
 18952 0000DAFF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18953 0000DB04 E882850000              	call malloc
 18954 0000DB09 50                      	push rax
 18955 0000DB0A BF00000000              	mov rdi, 8 * 0	; new rib
 18956 0000DB0F E877850000              	call malloc
 18957 0000DB14 50                      	push rax
 18958 0000DB15 BF08000000              	mov rdi, 8 * 1	; extended env
 18959 0000DB1A E86C850000              	call malloc
 18960 0000DB1F 488B7D10                	mov rdi, ENV
 18961 0000DB23 BE00000000              	mov rsi, 0
 18962 0000DB28 BA01000000              	mov rdx, 1
 18963                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 18964 0000DB2D 4883FE00                	cmp rsi, 0
 18965 0000DB31 7410                    	je .L_lambda_simple_env_end_0072
 18966 0000DB33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18967 0000DB37 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18968 0000DB3B 48FFC6                  	inc rsi
 18969 0000DB3E 48FFC2                  	inc rdx
 18970 0000DB41 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 18971                                  .L_lambda_simple_env_end_0072:
 18972 0000DB43 5B                      	pop rbx
 18973 0000DB44 BE00000000              	mov rsi, 0
 18974                                  .L_lambda_simple_params_loop_0072:	; copy params
 18975 0000DB49 4883FE00                	cmp rsi, 0
 18976 0000DB4D 740E                    	je .L_lambda_simple_params_end_0072
 18977 0000DB4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18978 0000DB54 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18979 0000DB58 48FFC6                  	inc rsi
 18980 0000DB5B EBEC                    	jmp .L_lambda_simple_params_loop_0072
 18981                                  .L_lambda_simple_params_end_0072:
 18982 0000DB5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18983 0000DB60 4889C3                  	mov rbx, rax
 18984 0000DB63 58                      	pop rax
 18985 0000DB64 C60004                  	mov byte [rax], T_closure
 18986 0000DB67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18987 0000DB6B 48C74009[78DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 18988 0000DB73 E947010000              	jmp .L_lambda_simple_end_0072
 18989                                  .L_lambda_simple_code_0072:	; lambda-simple body
 18990 0000DB78 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18991 0000DB7E 740B                    	je .L_lambda_simple_arity_check_ok_0072
 18992 0000DB80 FF742410                	push qword [rsp + 8 * 2]
 18993 0000DB84 6A01                    	push 1
 18994 0000DB86 E9B9840000              	jmp L_error_incorrect_arity_simple
 18995                                  .L_lambda_simple_arity_check_ok_0072:
 18996 0000DB8B C8000000                	enter 0, 0
 18997                                  	; preparing a non-tail-call
 18998 0000DB8F 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 18999 0000DB97 803805                  	cmp byte [rax], T_undefined
 19000 0000DB9A 0F84BE830000            	je L_error_fvar_undefined
 19001 0000DBA0 50                      	push rax
 19002 0000DBA1 488B0425[EC120000]      	mov rax, qword [free_var_75]	; free var char<?
 19003 0000DBA9 803805                  	cmp byte [rax], T_undefined
 19004 0000DBAC 0F84AC830000            	je L_error_fvar_undefined
 19005 0000DBB2 50                      	push rax
 19006 0000DBB3 6A02                    	push 2	; arg count
 19007 0000DBB5 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19008 0000DBB9 803804                  	cmp byte [rax], T_closure
 19009 0000DBBC 0F8520840000            	jne L_error_non_closure
 19010 0000DBC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19011 0000DBC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19012 0000DBC8 48890425[F9160000]      	mov qword [free_var_136], rax
 19013 0000DBD0 48B8-                   	mov rax, sob_void
 19013 0000DBD2 [0000000000000000] 
 19014                                  
 19015                                  	; preparing a non-tail-call
 19016 0000DBDA 488B0425[86120000]      	mov rax, qword [free_var_69]	; free var char-ci=?
 19017 0000DBE2 803805                  	cmp byte [rax], T_undefined
 19018 0000DBE5 0F8473830000            	je L_error_fvar_undefined
 19019 0000DBEB 50                      	push rax
 19020 0000DBEC 488B0425[75120000]      	mov rax, qword [free_var_68]	; free var char-ci<?
 19021 0000DBF4 803805                  	cmp byte [rax], T_undefined
 19022 0000DBF7 0F8461830000            	je L_error_fvar_undefined
 19023 0000DBFD 50                      	push rax
 19024 0000DBFE 6A02                    	push 2	; arg count
 19025 0000DC00 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19026 0000DC04 803804                  	cmp byte [rax], T_closure
 19027 0000DC07 0F85D5830000            	jne L_error_non_closure
 19028 0000DC0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19029 0000DC10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19030 0000DC13 48890425[2D160000]      	mov qword [free_var_124], rax
 19031 0000DC1B 48B8-                   	mov rax, sob_void
 19031 0000DC1D [0000000000000000] 
 19032                                  
 19033                                  	; preparing a non-tail-call
 19034 0000DC25 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 19035 0000DC2D 803805                  	cmp byte [rax], T_undefined
 19036 0000DC30 0F8428830000            	je L_error_fvar_undefined
 19037 0000DC36 50                      	push rax
 19038 0000DC37 488B0425[1F130000]      	mov rax, qword [free_var_78]	; free var char>?
 19039 0000DC3F 803805                  	cmp byte [rax], T_undefined
 19040 0000DC42 0F8416830000            	je L_error_fvar_undefined
 19041 0000DC48 50                      	push rax
 19042 0000DC49 6A02                    	push 2	; arg count
 19043 0000DC4B 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19044 0000DC4F 803804                  	cmp byte [rax], T_closure
 19045 0000DC52 0F858A830000            	jne L_error_non_closure
 19046 0000DC58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19047 0000DC5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19048 0000DC5E 48890425[2C170000]      	mov qword [free_var_139], rax
 19049 0000DC66 48B8-                   	mov rax, sob_void
 19049 0000DC68 [0000000000000000] 
 19050                                  
 19051                                  	; preparing a non-tail-call
 19052 0000DC70 488B0425[86120000]      	mov rax, qword [free_var_69]	; free var char-ci=?
 19053 0000DC78 803805                  	cmp byte [rax], T_undefined
 19054 0000DC7B 0F84DD820000            	je L_error_fvar_undefined
 19055 0000DC81 50                      	push rax
 19056 0000DC82 488B0425[A8120000]      	mov rax, qword [free_var_71]	; free var char-ci>?
 19057 0000DC8A 803805                  	cmp byte [rax], T_undefined
 19058 0000DC8D 0F84CB820000            	je L_error_fvar_undefined
 19059 0000DC93 50                      	push rax
 19060 0000DC94 6A02                    	push 2	; arg count
 19061 0000DC96 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19062 0000DC9A 803804                  	cmp byte [rax], T_closure
 19063 0000DC9D 0F853F830000            	jne L_error_non_closure
 19064 0000DCA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19065 0000DCA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19066 0000DCA9 48890425[60160000]      	mov qword [free_var_127], rax
 19067 0000DCB1 48B8-                   	mov rax, sob_void
 19067 0000DCB3 [0000000000000000] 
 19068 0000DCBB C9                      	leave
 19069 0000DCBC C21800                  	ret AND_KILL_FRAME(1)
 19070                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19071 0000DCBF 803804                  	cmp byte [rax], T_closure
 19072 0000DCC2 0F851A830000            	jne L_error_non_closure
 19073 0000DCC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19074 0000DCCB FF5009                  	call SOB_CLOSURE_CODE(rax)
 19075                                  
 19076 0000DCCE 4889C7                  	mov rdi, rax
 19077 0000DCD1 E80A860000              	call print_sexpr_if_not_void
 19078                                  	; preparing a non-tail-call
 19079 0000DCD6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19080 0000DCDB E8AB830000              	call malloc
 19081 0000DCE0 50                      	push rax
 19082 0000DCE1 BF00000000              	mov rdi, 8 * 0	; new rib
 19083 0000DCE6 E8A0830000              	call malloc
 19084 0000DCEB 50                      	push rax
 19085 0000DCEC BF08000000              	mov rdi, 8 * 1	; extended env
 19086 0000DCF1 E895830000              	call malloc
 19087 0000DCF6 488B7D10                	mov rdi, ENV
 19088 0000DCFA BE00000000              	mov rsi, 0
 19089 0000DCFF BA01000000              	mov rdx, 1
 19090                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19091 0000DD04 4883FE00                	cmp rsi, 0
 19092 0000DD08 7410                    	je .L_lambda_simple_env_end_0073
 19093 0000DD0A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19094 0000DD0E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19095 0000DD12 48FFC6                  	inc rsi
 19096 0000DD15 48FFC2                  	inc rdx
 19097 0000DD18 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19098                                  .L_lambda_simple_env_end_0073:
 19099 0000DD1A 5B                      	pop rbx
 19100 0000DD1B BE00000000              	mov rsi, 0
 19101                                  .L_lambda_simple_params_loop_0073:	; copy params
 19102 0000DD20 4883FE00                	cmp rsi, 0
 19103 0000DD24 740E                    	je .L_lambda_simple_params_end_0073
 19104 0000DD26 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19105 0000DD2B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19106 0000DD2F 48FFC6                  	inc rsi
 19107 0000DD32 EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19108                                  .L_lambda_simple_params_end_0073:
 19109 0000DD34 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19110 0000DD37 4889C3                  	mov rbx, rax
 19111 0000DD3A 58                      	pop rax
 19112 0000DD3B C60004                  	mov byte [rax], T_closure
 19113 0000DD3E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19114 0000DD42 48C74009[4FDD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19115 0000DD4A E9B20C0000              	jmp .L_lambda_simple_end_0073
 19116                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19117 0000DD4F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19118 0000DD55 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19119 0000DD57 FF742410                	push qword [rsp + 8 * 2]
 19120 0000DD5B 6A02                    	push 2
 19121 0000DD5D E9E2820000              	jmp L_error_incorrect_arity_simple
 19122                                  .L_lambda_simple_arity_check_ok_0073:
 19123 0000DD62 C8000000                	enter 0, 0
 19124                                  	; Setting up for a tail-call
 19125 0000DD66 48B8-                   	mov rax, L_constants + 1993
 19125 0000DD68 [C907000000000000] 
 19126 0000DD70 50                      	push rax
 19127 0000DD71 6A01                    	push 1
 19128 0000DD73 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19129 0000DD78 E80E830000              	call malloc
 19130 0000DD7D 50                      	push rax
 19131 0000DD7E BF10000000              	mov rdi, 8 * 2	; new rib
 19132 0000DD83 E803830000              	call malloc
 19133 0000DD88 50                      	push rax
 19134 0000DD89 BF10000000              	mov rdi, 8 * 2	; extended env
 19135 0000DD8E E8F8820000              	call malloc
 19136 0000DD93 488B7D10                	mov rdi, ENV
 19137 0000DD97 BE00000000              	mov rsi, 0
 19138 0000DD9C BA01000000              	mov rdx, 1
 19139                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19140 0000DDA1 4883FE01                	cmp rsi, 1
 19141 0000DDA5 7410                    	je .L_lambda_simple_env_end_0074
 19142 0000DDA7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19143 0000DDAB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19144 0000DDAF 48FFC6                  	inc rsi
 19145 0000DDB2 48FFC2                  	inc rdx
 19146 0000DDB5 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19147                                  .L_lambda_simple_env_end_0074:
 19148 0000DDB7 5B                      	pop rbx
 19149 0000DDB8 BE00000000              	mov rsi, 0
 19150                                  .L_lambda_simple_params_loop_0074:	; copy params
 19151 0000DDBD 4883FE02                	cmp rsi, 2
 19152 0000DDC1 740E                    	je .L_lambda_simple_params_end_0074
 19153 0000DDC3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19154 0000DDC8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19155 0000DDCC 48FFC6                  	inc rsi
 19156 0000DDCF EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19157                                  .L_lambda_simple_params_end_0074:
 19158 0000DDD1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19159 0000DDD4 4889C3                  	mov rbx, rax
 19160 0000DDD7 58                      	pop rax
 19161 0000DDD8 C60004                  	mov byte [rax], T_closure
 19162 0000DDDB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19163 0000DDDF 48C74009[ECDD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19164 0000DDE7 E9C40B0000              	jmp .L_lambda_simple_end_0074
 19165                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19166 0000DDEC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19167 0000DDF2 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19168 0000DDF4 FF742410                	push qword [rsp + 8 * 2]
 19169 0000DDF8 6A01                    	push 1
 19170 0000DDFA E945820000              	jmp L_error_incorrect_arity_simple
 19171                                  .L_lambda_simple_arity_check_ok_0074:
 19172 0000DDFF C8000000                	enter 0, 0
 19173 0000DE03 BF08000000              	mov rdi, 8 * 1
 19174 0000DE08 E87E820000              	call malloc
 19175 0000DE0D 488B5D20                	mov rbx, PARAM(0)
 19176 0000DE11 488918                  	mov qword [rax], rbx
 19177 0000DE14 48894520                	mov PARAM(0), rax
 19178 0000DE18 48B8-                   	mov rax, sob_void
 19178 0000DE1A [0000000000000000] 
 19179                                  
 19180                                  	; preparing a non-tail-call
 19181 0000DE22 6A00                    	push 0	; arg count
 19182 0000DE24 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19183 0000DE29 E85D820000              	call malloc
 19184 0000DE2E 50                      	push rax
 19185 0000DE2F BF08000000              	mov rdi, 8 * 1	; new rib
 19186 0000DE34 E852820000              	call malloc
 19187 0000DE39 50                      	push rax
 19188 0000DE3A BF18000000              	mov rdi, 8 * 3	; extended env
 19189 0000DE3F E847820000              	call malloc
 19190 0000DE44 488B7D10                	mov rdi, ENV
 19191 0000DE48 BE00000000              	mov rsi, 0
 19192 0000DE4D BA01000000              	mov rdx, 1
 19193                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 19194 0000DE52 4883FE02                	cmp rsi, 2
 19195 0000DE56 7410                    	je .L_lambda_simple_env_end_0075
 19196 0000DE58 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19197 0000DE5C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19198 0000DE60 48FFC6                  	inc rsi
 19199 0000DE63 48FFC2                  	inc rdx
 19200 0000DE66 EBEA                    	jmp .L_lambda_simple_env_loop_0075
 19201                                  .L_lambda_simple_env_end_0075:
 19202 0000DE68 5B                      	pop rbx
 19203 0000DE69 BE00000000              	mov rsi, 0
 19204                                  .L_lambda_simple_params_loop_0075:	; copy params
 19205 0000DE6E 4883FE01                	cmp rsi, 1
 19206 0000DE72 740E                    	je .L_lambda_simple_params_end_0075
 19207 0000DE74 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19208 0000DE79 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19209 0000DE7D 48FFC6                  	inc rsi
 19210 0000DE80 EBEC                    	jmp .L_lambda_simple_params_loop_0075
 19211                                  .L_lambda_simple_params_end_0075:
 19212 0000DE82 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19213 0000DE85 4889C3                  	mov rbx, rax
 19214 0000DE88 58                      	pop rax
 19215 0000DE89 C60004                  	mov byte [rax], T_closure
 19216 0000DE8C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19217 0000DE90 48C74009[9DDE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 19218 0000DE98 E94B020000              	jmp .L_lambda_simple_end_0075
 19219                                  .L_lambda_simple_code_0075:	; lambda-simple body
 19220 0000DE9D 48837C241005            	cmp qword [rsp + 8 * 2], 5
 19221 0000DEA3 740B                    	je .L_lambda_simple_arity_check_ok_0075
 19222 0000DEA5 FF742410                	push qword [rsp + 8 * 2]
 19223 0000DEA9 6A05                    	push 5
 19224 0000DEAB E994810000              	jmp L_error_incorrect_arity_simple
 19225                                  .L_lambda_simple_arity_check_ok_0075:
 19226 0000DEB0 C8000000                	enter 0, 0
 19227                                  	; preparing a non-tail-call
 19228 0000DEB4 488B4530                	mov rax, PARAM(2)	; param len1
 19229 0000DEB8 50                      	push rax
 19230 0000DEB9 488B4520                	mov rax, PARAM(0)	; param i
 19231 0000DEBD 50                      	push rax
 19232 0000DEBE 6A02                    	push 2	; arg count
 19233 0000DEC0 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 19234 0000DEC8 803805                  	cmp byte [rax], T_undefined
 19235 0000DECB 0F848D800000            	je L_error_fvar_undefined
 19236 0000DED1 803804                  	cmp byte [rax], T_closure
 19237 0000DED4 0F8508810000            	jne L_error_non_closure
 19238 0000DEDA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19239 0000DEDD FF5009                  	call SOB_CLOSURE_CODE(rax)
 19240 0000DEE0 483D[02000000]          	cmp rax, sob_boolean_false
 19241 0000DEE6 0F85F8010000            	jne .L_or_end_000a
 19242                                  
 19243                                  	; preparing a non-tail-call
 19244                                  	; preparing a non-tail-call
 19245 0000DEEC 488B4520                	mov rax, PARAM(0)	; param i
 19246 0000DEF0 50                      	push rax
 19247 0000DEF1 488B4538                	mov rax, PARAM(3)	; param str2
 19248 0000DEF5 50                      	push rax
 19249 0000DEF6 6A02                    	push 2	; arg count
 19250 0000DEF8 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 19251 0000DF00 803805                  	cmp byte [rax], T_undefined
 19252 0000DF03 0F8455800000            	je L_error_fvar_undefined
 19253 0000DF09 803804                  	cmp byte [rax], T_closure
 19254 0000DF0C 0F85D0800000            	jne L_error_non_closure
 19255 0000DF12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19256 0000DF15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19257 0000DF18 50                      	push rax
 19258                                  	; preparing a non-tail-call
 19259 0000DF19 488B4520                	mov rax, PARAM(0)	; param i
 19260 0000DF1D 50                      	push rax
 19261 0000DF1E 488B4528                	mov rax, PARAM(1)	; param str1
 19262 0000DF22 50                      	push rax
 19263 0000DF23 6A02                    	push 2	; arg count
 19264 0000DF25 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 19265 0000DF2D 803805                  	cmp byte [rax], T_undefined
 19266 0000DF30 0F8428800000            	je L_error_fvar_undefined
 19267 0000DF36 803804                  	cmp byte [rax], T_closure
 19268 0000DF39 0F85A3800000            	jne L_error_non_closure
 19269 0000DF3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19270 0000DF42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19271 0000DF45 50                      	push rax
 19272 0000DF46 6A02                    	push 2	; arg count
 19273 0000DF48 488B4510                	mov rax, ENV
 19274 0000DF4C 488B4008                	mov rax, qword [rax + 8 * 1]
 19275 0000DF50 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 19276 0000DF53 803804                  	cmp byte [rax], T_closure
 19277 0000DF56 0F8586800000            	jne L_error_non_closure
 19278 0000DF5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 19279 0000DF5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 19280 0000DF62 483D[02000000]          	cmp rax, sob_boolean_false
 19281 0000DF68 0F8576010000            	jne .L_or_end_000a
 19282                                  
 19283                                  	; preparing a non-tail-call
 19284 0000DF6E 488B4530                	mov rax, PARAM(2)	; param len1
 19285 0000DF72 50                      	push rax
 19286 0000DF73 488B4520                	mov rax, PARAM(0)	; param i
 19287 0000DF77 50                      	push rax
 19288 0000DF78 6A02                    	push 2	; arg count
 19289 0000DF7A 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 19290 0000DF82 803805                  	cmp byte [rax], T_undefined
 19291 0000DF85 0F84D37F0000            	je L_error_fvar_undefined
 19292 0000DF8B 803804                  	cmp byte [rax], T_closure
 19293 0000DF8E 0F854E800000            	jne L_error_non_closure
 19294 0000DF94 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19295 0000DF97 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19296 0000DF9A 483D[02000000]          	cmp rax, sob_boolean_false
 19297 0000DFA0 0F8434010000            	je .L_if_else_0059
 19298                                  	; preparing a non-tail-call
 19299                                  	; preparing a non-tail-call
 19300 0000DFA6 488B4520                	mov rax, PARAM(0)	; param i
 19301 0000DFAA 50                      	push rax
 19302 0000DFAB 488B4538                	mov rax, PARAM(3)	; param str2
 19303 0000DFAF 50                      	push rax
 19304 0000DFB0 6A02                    	push 2	; arg count
 19305 0000DFB2 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 19306 0000DFBA 803805                  	cmp byte [rax], T_undefined
 19307 0000DFBD 0F849B7F0000            	je L_error_fvar_undefined
 19308 0000DFC3 803804                  	cmp byte [rax], T_closure
 19309 0000DFC6 0F8516800000            	jne L_error_non_closure
 19310 0000DFCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 19311 0000DFCF FF5009                  	call SOB_CLOSURE_CODE(rax)
 19312 0000DFD2 50                      	push rax
 19313                                  	; preparing a non-tail-call
 19314 0000DFD3 488B4520                	mov rax, PARAM(0)	; param i
 19315 0000DFD7 50                      	push rax
 19316 0000DFD8 488B4528                	mov rax, PARAM(1)	; param str1
 19317 0000DFDC 50                      	push rax
 19318 0000DFDD 6A02                    	push 2	; arg count
 19319 0000DFDF 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 19320 0000DFE7 803805                  	cmp byte [rax], T_undefined
 19321 0000DFEA 0F846E7F0000            	je L_error_fvar_undefined
 19322 0000DFF0 803804                  	cmp byte [rax], T_closure
 19323 0000DFF3 0F85E97F0000            	jne L_error_non_closure
 19324 0000DFF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19325 0000DFFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19326 0000DFFF 50                      	push rax
 19327 0000E000 6A02                    	push 2	; arg count
 19328 0000E002 488B4510                	mov rax, ENV
 19329 0000E006 488B4008                	mov rax, qword [rax + 8 * 1]
 19330 0000E00A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19331 0000E00E 803804                  	cmp byte [rax], T_closure
 19332 0000E011 0F85CB7F0000            	jne L_error_non_closure
 19333 0000E017 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19334 0000E01A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19335 0000E01D 483D[02000000]          	cmp rax, sob_boolean_false
 19336 0000E023 0F84A5000000            	je .L_if_else_0058
 19337                                  	; Setting up for a tail-call
 19338                                  	; preparing a non-tail-call
 19339 0000E029 48B8-                   	mov rax, L_constants + 2284
 19339 0000E02B [EC08000000000000] 
 19340 0000E033 50                      	push rax
 19341 0000E034 488B4520                	mov rax, PARAM(0)	; param i
 19342 0000E038 50                      	push rax
 19343 0000E039 6A02                    	push 2	; arg count
 19344 0000E03B 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 19345 0000E043 803805                  	cmp byte [rax], T_undefined
 19346 0000E046 0F84127F0000            	je L_error_fvar_undefined
 19347 0000E04C 803804                  	cmp byte [rax], T_closure
 19348 0000E04F 0F858D7F0000            	jne L_error_non_closure
 19349 0000E055 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19350 0000E058 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19351 0000E05B 50                      	push rax
 19352 0000E05C 488B4528                	mov rax, PARAM(1)	; param str1
 19353 0000E060 50                      	push rax
 19354 0000E061 488B4530                	mov rax, PARAM(2)	; param len1
 19355 0000E065 50                      	push rax
 19356 0000E066 488B4538                	mov rax, PARAM(3)	; param str2
 19357 0000E06A 50                      	push rax
 19358 0000E06B 488B4540                	mov rax, PARAM(4)	; param len2
 19359 0000E06F 50                      	push rax
 19360 0000E070 6A05                    	push 5
 19361 0000E072 488B4510                	mov rax, ENV
 19362 0000E076 488B00                  	mov rax, qword [rax + 8 * 0]
 19363 0000E079 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19364 0000E07C 488B00                  	mov rax, qword [rax]
 19365 0000E07F 803804                  	cmp byte [rax], T_closure
 19366 0000E082 0F855A7F0000            	jne L_error_non_closure
 19367 0000E088 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19368 0000E08B 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 19369 0000E08F 4C8B4D00                	mov r9, qword [rbp]
 19370 0000E093 4150                    	push r8
 19371 0000E095 4151                    	push r9
 19372 0000E097 41BA09000000            	mov r10, 5 + 4
 19373 0000E09D 4C8B5D18                	mov r11, COUNT
 19374 0000E0A1 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 19375 0000E0A6 4C8D65F8                	lea r12, [rbp - 8]
 19376                                  .L_tc_recycle_frame_loop_00a6:
 19377 0000E0AA 4983FA00                	cmp r10, 0
 19378 0000E0AE 7414                    	je .L_tc_recycle_frame_done_00a6
 19379 0000E0B0 4D8B2C24                	mov r13, qword [r12]
 19380 0000E0B4 4D892B                  	mov qword [r11], r13
 19381 0000E0B7 49FFCA                  	dec r10
 19382 0000E0BA 4983EB08                	sub r11, 8
 19383 0000E0BE 4983EC08                	sub r12, 8
 19384 0000E0C2 EBE6                    	jmp .L_tc_recycle_frame_loop_00a6
 19385                                  .L_tc_recycle_frame_done_00a6:
 19386 0000E0C4 498D6308                	lea rsp, [r11 + 8]
 19387 0000E0C8 5D                      	pop rbp
 19388 0000E0C9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19389 0000E0CC EB0A                    	jmp .L_if_end_0058
 19390                                  .L_if_else_0058:
 19391 0000E0CE 48B8-                   	mov rax, L_constants + 2
 19391 0000E0D0 [0200000000000000] 
 19392                                  .L_if_end_0058:
 19393 0000E0D8 EB0A                    	jmp .L_if_end_0059
 19394                                  .L_if_else_0059:
 19395 0000E0DA 48B8-                   	mov rax, L_constants + 2
 19395 0000E0DC [0200000000000000] 
 19396                                  .L_if_end_0059:
 19397                                  .L_or_end_000a:
 19398 0000E0E4 C9                      	leave
 19399 0000E0E5 C23800                  	ret AND_KILL_FRAME(5)
 19400                                  .L_lambda_simple_end_0075:	; new closure is in rax
 19401 0000E0E8 803804                  	cmp byte [rax], T_closure
 19402 0000E0EB 0F85F17E0000            	jne L_error_non_closure
 19403 0000E0F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19404 0000E0F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19405 0000E0F7 50                      	push rax
 19406 0000E0F8 488B4520                	mov rax, PARAM(0)	; param run
 19407 0000E0FC 8F00                    	pop qword [rax]
 19408 0000E0FE 48B8-                   	mov rax, sob_void
 19408 0000E100 [0000000000000000] 
 19409                                  
 19410                                  	; preparing a non-tail-call
 19411 0000E108 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19412 0000E10D E8797F0000              	call malloc
 19413 0000E112 50                      	push rax
 19414 0000E113 BF08000000              	mov rdi, 8 * 1	; new rib
 19415 0000E118 E86E7F0000              	call malloc
 19416 0000E11D 50                      	push rax
 19417 0000E11E BF18000000              	mov rdi, 8 * 3	; extended env
 19418 0000E123 E8637F0000              	call malloc
 19419 0000E128 488B7D10                	mov rdi, ENV
 19420 0000E12C BE00000000              	mov rsi, 0
 19421 0000E131 BA01000000              	mov rdx, 1
 19422                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 19423 0000E136 4883FE02                	cmp rsi, 2
 19424 0000E13A 7410                    	je .L_lambda_simple_env_end_0076
 19425 0000E13C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19426 0000E140 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19427 0000E144 48FFC6                  	inc rsi
 19428 0000E147 48FFC2                  	inc rdx
 19429 0000E14A EBEA                    	jmp .L_lambda_simple_env_loop_0076
 19430                                  .L_lambda_simple_env_end_0076:
 19431 0000E14C 5B                      	pop rbx
 19432 0000E14D BE00000000              	mov rsi, 0
 19433                                  .L_lambda_simple_params_loop_0076:	; copy params
 19434 0000E152 4883FE01                	cmp rsi, 1
 19435 0000E156 740E                    	je .L_lambda_simple_params_end_0076
 19436 0000E158 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19437 0000E15D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19438 0000E161 48FFC6                  	inc rsi
 19439 0000E164 EBEC                    	jmp .L_lambda_simple_params_loop_0076
 19440                                  .L_lambda_simple_params_end_0076:
 19441 0000E166 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19442 0000E169 4889C3                  	mov rbx, rax
 19443 0000E16C 58                      	pop rax
 19444 0000E16D C60004                  	mov byte [rax], T_closure
 19445 0000E170 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19446 0000E174 48C74009[81E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 19447 0000E17C E99D020000              	jmp .L_lambda_simple_end_0076
 19448                                  .L_lambda_simple_code_0076:	; lambda-simple body
 19449 0000E181 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19450 0000E187 740B                    	je .L_lambda_simple_arity_check_ok_0076
 19451 0000E189 FF742410                	push qword [rsp + 8 * 2]
 19452 0000E18D 6A02                    	push 2
 19453 0000E18F E9B07E0000              	jmp L_error_incorrect_arity_simple
 19454                                  .L_lambda_simple_arity_check_ok_0076:
 19455 0000E194 C8000000                	enter 0, 0
 19456                                  	; Setting up for a tail-call
 19457                                  	; preparing a non-tail-call
 19458 0000E198 488B4520                	mov rax, PARAM(0)	; param str1
 19459 0000E19C 50                      	push rax
 19460 0000E19D 6A01                    	push 1	; arg count
 19461 0000E19F 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 19462 0000E1A7 803805                  	cmp byte [rax], T_undefined
 19463 0000E1AA 0F84AE7D0000            	je L_error_fvar_undefined
 19464 0000E1B0 803804                  	cmp byte [rax], T_closure
 19465 0000E1B3 0F85297E0000            	jne L_error_non_closure
 19466 0000E1B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19467 0000E1BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19468 0000E1BF 50                      	push rax
 19469                                  	; preparing a non-tail-call
 19470 0000E1C0 488B4528                	mov rax, PARAM(1)	; param str2
 19471 0000E1C4 50                      	push rax
 19472 0000E1C5 6A01                    	push 1	; arg count
 19473 0000E1C7 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 19474 0000E1CF 803805                  	cmp byte [rax], T_undefined
 19475 0000E1D2 0F84867D0000            	je L_error_fvar_undefined
 19476 0000E1D8 803804                  	cmp byte [rax], T_closure
 19477 0000E1DB 0F85017E0000            	jne L_error_non_closure
 19478 0000E1E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19479 0000E1E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19480 0000E1E7 50                      	push rax
 19481 0000E1E8 6A02                    	push 2
 19482 0000E1EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19483 0000E1EF E8977E0000              	call malloc
 19484 0000E1F4 50                      	push rax
 19485 0000E1F5 BF10000000              	mov rdi, 8 * 2	; new rib
 19486 0000E1FA E88C7E0000              	call malloc
 19487 0000E1FF 50                      	push rax
 19488 0000E200 BF20000000              	mov rdi, 8 * 4	; extended env
 19489 0000E205 E8817E0000              	call malloc
 19490 0000E20A 488B7D10                	mov rdi, ENV
 19491 0000E20E BE00000000              	mov rsi, 0
 19492 0000E213 BA01000000              	mov rdx, 1
 19493                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 19494 0000E218 4883FE03                	cmp rsi, 3
 19495 0000E21C 7410                    	je .L_lambda_simple_env_end_0077
 19496 0000E21E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19497 0000E222 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19498 0000E226 48FFC6                  	inc rsi
 19499 0000E229 48FFC2                  	inc rdx
 19500 0000E22C EBEA                    	jmp .L_lambda_simple_env_loop_0077
 19501                                  .L_lambda_simple_env_end_0077:
 19502 0000E22E 5B                      	pop rbx
 19503 0000E22F BE00000000              	mov rsi, 0
 19504                                  .L_lambda_simple_params_loop_0077:	; copy params
 19505 0000E234 4883FE02                	cmp rsi, 2
 19506 0000E238 740E                    	je .L_lambda_simple_params_end_0077
 19507 0000E23A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19508 0000E23F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19509 0000E243 48FFC6                  	inc rsi
 19510 0000E246 EBEC                    	jmp .L_lambda_simple_params_loop_0077
 19511                                  .L_lambda_simple_params_end_0077:
 19512 0000E248 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19513 0000E24B 4889C3                  	mov rbx, rax
 19514 0000E24E 58                      	pop rax
 19515 0000E24F C60004                  	mov byte [rax], T_closure
 19516 0000E252 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19517 0000E256 48C74009[63E20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 19518 0000E25E E96A010000              	jmp .L_lambda_simple_end_0077
 19519                                  .L_lambda_simple_code_0077:	; lambda-simple body
 19520 0000E263 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19521 0000E269 740B                    	je .L_lambda_simple_arity_check_ok_0077
 19522 0000E26B FF742410                	push qword [rsp + 8 * 2]
 19523 0000E26F 6A02                    	push 2
 19524 0000E271 E9CE7D0000              	jmp L_error_incorrect_arity_simple
 19525                                  .L_lambda_simple_arity_check_ok_0077:
 19526 0000E276 C8000000                	enter 0, 0
 19527                                  	; preparing a non-tail-call
 19528 0000E27A 488B4528                	mov rax, PARAM(1)	; param len2
 19529 0000E27E 50                      	push rax
 19530 0000E27F 488B4520                	mov rax, PARAM(0)	; param len1
 19531 0000E283 50                      	push rax
 19532 0000E284 6A02                    	push 2	; arg count
 19533 0000E286 488B0425[460E0000]      	mov rax, qword [free_var_5]	; free var <=
 19534 0000E28E 803805                  	cmp byte [rax], T_undefined
 19535 0000E291 0F84C77C0000            	je L_error_fvar_undefined
 19536 0000E297 803804                  	cmp byte [rax], T_closure
 19537 0000E29A 0F85427D0000            	jne L_error_non_closure
 19538 0000E2A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19539 0000E2A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19540 0000E2A6 483D[02000000]          	cmp rax, sob_boolean_false
 19541 0000E2AC 0F848E000000            	je .L_if_else_005a
 19542                                  	; Setting up for a tail-call
 19543 0000E2B2 48B8-                   	mov rax, L_constants + 2149
 19543 0000E2B4 [6508000000000000] 
 19544 0000E2BC 50                      	push rax
 19545 0000E2BD 488B4510                	mov rax, ENV
 19546 0000E2C1 488B00                  	mov rax, qword [rax + 8 * 0]
 19547 0000E2C4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19548 0000E2C7 50                      	push rax
 19549 0000E2C8 488B4520                	mov rax, PARAM(0)	; param len1
 19550 0000E2CC 50                      	push rax
 19551 0000E2CD 488B4510                	mov rax, ENV
 19552 0000E2D1 488B00                  	mov rax, qword [rax + 8 * 0]
 19553 0000E2D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19554 0000E2D8 50                      	push rax
 19555 0000E2D9 488B4528                	mov rax, PARAM(1)	; param len2
 19556 0000E2DD 50                      	push rax
 19557 0000E2DE 6A05                    	push 5
 19558 0000E2E0 488B4510                	mov rax, ENV
 19559 0000E2E4 488B4008                	mov rax, qword [rax + 8 * 1]
 19560 0000E2E8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19561 0000E2EB 488B00                  	mov rax, qword [rax]
 19562 0000E2EE 803804                  	cmp byte [rax], T_closure
 19563 0000E2F1 0F85EB7C0000            	jne L_error_non_closure
 19564 0000E2F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19565 0000E2FA 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 19566 0000E2FE 4C8B4D00                	mov r9, qword [rbp]
 19567 0000E302 4150                    	push r8
 19568 0000E304 4151                    	push r9
 19569 0000E306 41BA09000000            	mov r10, 5 + 4
 19570 0000E30C 4C8B5D18                	mov r11, COUNT
 19571 0000E310 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 19572 0000E315 4C8D65F8                	lea r12, [rbp - 8]
 19573                                  .L_tc_recycle_frame_loop_00a7:
 19574 0000E319 4983FA00                	cmp r10, 0
 19575 0000E31D 7414                    	je .L_tc_recycle_frame_done_00a7
 19576 0000E31F 4D8B2C24                	mov r13, qword [r12]
 19577 0000E323 4D892B                  	mov qword [r11], r13
 19578 0000E326 49FFCA                  	dec r10
 19579 0000E329 4983EB08                	sub r11, 8
 19580 0000E32D 4983EC08                	sub r12, 8
 19581 0000E331 EBE6                    	jmp .L_tc_recycle_frame_loop_00a7
 19582                                  .L_tc_recycle_frame_done_00a7:
 19583 0000E333 498D6308                	lea rsp, [r11 + 8]
 19584 0000E337 5D                      	pop rbp
 19585 0000E338 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19586 0000E33B E989000000              	jmp .L_if_end_005a
 19587                                  .L_if_else_005a:
 19588                                  	; Setting up for a tail-call
 19589 0000E340 48B8-                   	mov rax, L_constants + 2149
 19589 0000E342 [6508000000000000] 
 19590 0000E34A 50                      	push rax
 19591 0000E34B 488B4510                	mov rax, ENV
 19592 0000E34F 488B00                  	mov rax, qword [rax + 8 * 0]
 19593 0000E352 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19594 0000E356 50                      	push rax
 19595 0000E357 488B4528                	mov rax, PARAM(1)	; param len2
 19596 0000E35B 50                      	push rax
 19597 0000E35C 488B4510                	mov rax, ENV
 19598 0000E360 488B00                  	mov rax, qword [rax + 8 * 0]
 19599 0000E363 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19600 0000E366 50                      	push rax
 19601 0000E367 488B4520                	mov rax, PARAM(0)	; param len1
 19602 0000E36B 50                      	push rax
 19603 0000E36C 6A05                    	push 5
 19604 0000E36E 488B4510                	mov rax, ENV
 19605 0000E372 488B4008                	mov rax, qword [rax + 8 * 1]
 19606 0000E376 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19607 0000E379 488B00                  	mov rax, qword [rax]
 19608 0000E37C 803804                  	cmp byte [rax], T_closure
 19609 0000E37F 0F855D7C0000            	jne L_error_non_closure
 19610 0000E385 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19611 0000E388 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 19612 0000E38C 4C8B4D00                	mov r9, qword [rbp]
 19613 0000E390 4150                    	push r8
 19614 0000E392 4151                    	push r9
 19615 0000E394 41BA09000000            	mov r10, 5 + 4
 19616 0000E39A 4C8B5D18                	mov r11, COUNT
 19617 0000E39E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 19618 0000E3A3 4C8D65F8                	lea r12, [rbp - 8]
 19619                                  .L_tc_recycle_frame_loop_00a8:
 19620 0000E3A7 4983FA00                	cmp r10, 0
 19621 0000E3AB 7414                    	je .L_tc_recycle_frame_done_00a8
 19622 0000E3AD 4D8B2C24                	mov r13, qword [r12]
 19623 0000E3B1 4D892B                  	mov qword [r11], r13
 19624 0000E3B4 49FFCA                  	dec r10
 19625 0000E3B7 4983EB08                	sub r11, 8
 19626 0000E3BB 4983EC08                	sub r12, 8
 19627 0000E3BF EBE6                    	jmp .L_tc_recycle_frame_loop_00a8
 19628                                  .L_tc_recycle_frame_done_00a8:
 19629 0000E3C1 498D6308                	lea rsp, [r11 + 8]
 19630 0000E3C5 5D                      	pop rbp
 19631 0000E3C6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19632                                  .L_if_end_005a:
 19633 0000E3C9 C9                      	leave
 19634 0000E3CA C22000                  	ret AND_KILL_FRAME(2)
 19635                                  .L_lambda_simple_end_0077:	; new closure is in rax
 19636 0000E3CD 803804                  	cmp byte [rax], T_closure
 19637 0000E3D0 0F850C7C0000            	jne L_error_non_closure
 19638 0000E3D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19639 0000E3D9 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 19640 0000E3DD 4C8B4D00                	mov r9, qword [rbp]
 19641 0000E3E1 4150                    	push r8
 19642 0000E3E3 4151                    	push r9
 19643 0000E3E5 41BA06000000            	mov r10, 2 + 4
 19644 0000E3EB 4C8B5D18                	mov r11, COUNT
 19645 0000E3EF 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 19646 0000E3F4 4C8D65F8                	lea r12, [rbp - 8]
 19647                                  .L_tc_recycle_frame_loop_00a9:
 19648 0000E3F8 4983FA00                	cmp r10, 0
 19649 0000E3FC 7414                    	je .L_tc_recycle_frame_done_00a9
 19650 0000E3FE 4D8B2C24                	mov r13, qword [r12]
 19651 0000E402 4D892B                  	mov qword [r11], r13
 19652 0000E405 49FFCA                  	dec r10
 19653 0000E408 4983EB08                	sub r11, 8
 19654 0000E40C 4983EC08                	sub r12, 8
 19655 0000E410 EBE6                    	jmp .L_tc_recycle_frame_loop_00a9
 19656                                  .L_tc_recycle_frame_done_00a9:
 19657 0000E412 498D6308                	lea rsp, [r11 + 8]
 19658 0000E416 5D                      	pop rbp
 19659 0000E417 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19660 0000E41A C9                      	leave
 19661 0000E41B C22000                  	ret AND_KILL_FRAME(2)
 19662                                  .L_lambda_simple_end_0076:	; new closure is in rax
 19663 0000E41E 50                      	push rax
 19664 0000E41F 6A01                    	push 1	; arg count
 19665 0000E421 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19666 0000E426 E8607C0000              	call malloc
 19667 0000E42B 50                      	push rax
 19668 0000E42C BF08000000              	mov rdi, 8 * 1	; new rib
 19669 0000E431 E8557C0000              	call malloc
 19670 0000E436 50                      	push rax
 19671 0000E437 BF18000000              	mov rdi, 8 * 3	; extended env
 19672 0000E43C E84A7C0000              	call malloc
 19673 0000E441 488B7D10                	mov rdi, ENV
 19674 0000E445 BE00000000              	mov rsi, 0
 19675 0000E44A BA01000000              	mov rdx, 1
 19676                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 19677 0000E44F 4883FE02                	cmp rsi, 2
 19678 0000E453 7410                    	je .L_lambda_simple_env_end_0078
 19679 0000E455 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19680 0000E459 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19681 0000E45D 48FFC6                  	inc rsi
 19682 0000E460 48FFC2                  	inc rdx
 19683 0000E463 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 19684                                  .L_lambda_simple_env_end_0078:
 19685 0000E465 5B                      	pop rbx
 19686 0000E466 BE00000000              	mov rsi, 0
 19687                                  .L_lambda_simple_params_loop_0078:	; copy params
 19688 0000E46B 4883FE01                	cmp rsi, 1
 19689 0000E46F 740E                    	je .L_lambda_simple_params_end_0078
 19690 0000E471 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19691 0000E476 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19692 0000E47A 48FFC6                  	inc rsi
 19693 0000E47D EBEC                    	jmp .L_lambda_simple_params_loop_0078
 19694                                  .L_lambda_simple_params_end_0078:
 19695 0000E47F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19696 0000E482 4889C3                  	mov rbx, rax
 19697 0000E485 58                      	pop rax
 19698 0000E486 C60004                  	mov byte [rax], T_closure
 19699 0000E489 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19700 0000E48D 48C74009[9AE40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 19701 0000E495 E903050000              	jmp .L_lambda_simple_end_0078
 19702                                  .L_lambda_simple_code_0078:	; lambda-simple body
 19703 0000E49A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19704 0000E4A0 740B                    	je .L_lambda_simple_arity_check_ok_0078
 19705 0000E4A2 FF742410                	push qword [rsp + 8 * 2]
 19706 0000E4A6 6A01                    	push 1
 19707 0000E4A8 E9977B0000              	jmp L_error_incorrect_arity_simple
 19708                                  .L_lambda_simple_arity_check_ok_0078:
 19709 0000E4AD C8000000                	enter 0, 0
 19710                                  	; Setting up for a tail-call
 19711 0000E4B1 48B8-                   	mov rax, L_constants + 1993
 19711 0000E4B3 [C907000000000000] 
 19712 0000E4BB 50                      	push rax
 19713 0000E4BC 6A01                    	push 1
 19714 0000E4BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19715 0000E4C3 E8C37B0000              	call malloc
 19716 0000E4C8 50                      	push rax
 19717 0000E4C9 BF08000000              	mov rdi, 8 * 1	; new rib
 19718 0000E4CE E8B87B0000              	call malloc
 19719 0000E4D3 50                      	push rax
 19720 0000E4D4 BF20000000              	mov rdi, 8 * 4	; extended env
 19721 0000E4D9 E8AD7B0000              	call malloc
 19722 0000E4DE 488B7D10                	mov rdi, ENV
 19723 0000E4E2 BE00000000              	mov rsi, 0
 19724 0000E4E7 BA01000000              	mov rdx, 1
 19725                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 19726 0000E4EC 4883FE03                	cmp rsi, 3
 19727 0000E4F0 7410                    	je .L_lambda_simple_env_end_0079
 19728 0000E4F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19729 0000E4F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19730 0000E4FA 48FFC6                  	inc rsi
 19731 0000E4FD 48FFC2                  	inc rdx
 19732 0000E500 EBEA                    	jmp .L_lambda_simple_env_loop_0079
 19733                                  .L_lambda_simple_env_end_0079:
 19734 0000E502 5B                      	pop rbx
 19735 0000E503 BE00000000              	mov rsi, 0
 19736                                  .L_lambda_simple_params_loop_0079:	; copy params
 19737 0000E508 4883FE01                	cmp rsi, 1
 19738 0000E50C 740E                    	je .L_lambda_simple_params_end_0079
 19739 0000E50E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19740 0000E513 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19741 0000E517 48FFC6                  	inc rsi
 19742 0000E51A EBEC                    	jmp .L_lambda_simple_params_loop_0079
 19743                                  .L_lambda_simple_params_end_0079:
 19744 0000E51C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19745 0000E51F 4889C3                  	mov rbx, rax
 19746 0000E522 58                      	pop rax
 19747 0000E523 C60004                  	mov byte [rax], T_closure
 19748 0000E526 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19749 0000E52A 48C74009[37E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 19750 0000E532 E915040000              	jmp .L_lambda_simple_end_0079
 19751                                  .L_lambda_simple_code_0079:	; lambda-simple body
 19752 0000E537 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19753 0000E53D 740B                    	je .L_lambda_simple_arity_check_ok_0079
 19754 0000E53F FF742410                	push qword [rsp + 8 * 2]
 19755 0000E543 6A01                    	push 1
 19756 0000E545 E9FA7A0000              	jmp L_error_incorrect_arity_simple
 19757                                  .L_lambda_simple_arity_check_ok_0079:
 19758 0000E54A C8000000                	enter 0, 0
 19759 0000E54E BF08000000              	mov rdi, 8 * 1
 19760 0000E553 E8337B0000              	call malloc
 19761 0000E558 488B5D20                	mov rbx, PARAM(0)
 19762 0000E55C 488918                  	mov qword [rax], rbx
 19763 0000E55F 48894520                	mov PARAM(0), rax
 19764 0000E563 48B8-                   	mov rax, sob_void
 19764 0000E565 [0000000000000000] 
 19765                                  
 19766                                  	; preparing a non-tail-call
 19767 0000E56D 6A00                    	push 0	; arg count
 19768 0000E56F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19769 0000E574 E8127B0000              	call malloc
 19770 0000E579 50                      	push rax
 19771 0000E57A BF08000000              	mov rdi, 8 * 1	; new rib
 19772 0000E57F E8077B0000              	call malloc
 19773 0000E584 50                      	push rax
 19774 0000E585 BF28000000              	mov rdi, 8 * 5	; extended env
 19775 0000E58A E8FC7A0000              	call malloc
 19776 0000E58F 488B7D10                	mov rdi, ENV
 19777 0000E593 BE00000000              	mov rsi, 0
 19778 0000E598 BA01000000              	mov rdx, 1
 19779                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 19780 0000E59D 4883FE04                	cmp rsi, 4
 19781 0000E5A1 7410                    	je .L_lambda_simple_env_end_007a
 19782 0000E5A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19783 0000E5A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19784 0000E5AB 48FFC6                  	inc rsi
 19785 0000E5AE 48FFC2                  	inc rdx
 19786 0000E5B1 EBEA                    	jmp .L_lambda_simple_env_loop_007a
 19787                                  .L_lambda_simple_env_end_007a:
 19788 0000E5B3 5B                      	pop rbx
 19789 0000E5B4 BE00000000              	mov rsi, 0
 19790                                  .L_lambda_simple_params_loop_007a:	; copy params
 19791 0000E5B9 4883FE01                	cmp rsi, 1
 19792 0000E5BD 740E                    	je .L_lambda_simple_params_end_007a
 19793 0000E5BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19794 0000E5C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19795 0000E5C8 48FFC6                  	inc rsi
 19796 0000E5CB EBEC                    	jmp .L_lambda_simple_params_loop_007a
 19797                                  .L_lambda_simple_params_end_007a:
 19798 0000E5CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19799 0000E5D0 4889C3                  	mov rbx, rax
 19800 0000E5D3 58                      	pop rax
 19801 0000E5D4 C60004                  	mov byte [rax], T_closure
 19802 0000E5D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19803 0000E5DB 48C74009[E8E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 19804 0000E5E3 E95B010000              	jmp .L_lambda_simple_end_007a
 19805                                  .L_lambda_simple_code_007a:	; lambda-simple body
 19806 0000E5E8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19807 0000E5EE 740B                    	je .L_lambda_simple_arity_check_ok_007a
 19808 0000E5F0 FF742410                	push qword [rsp + 8 * 2]
 19809 0000E5F4 6A02                    	push 2
 19810 0000E5F6 E9497A0000              	jmp L_error_incorrect_arity_simple
 19811                                  .L_lambda_simple_arity_check_ok_007a:
 19812 0000E5FB C8000000                	enter 0, 0
 19813                                  	; preparing a non-tail-call
 19814 0000E5FF 488B4528                	mov rax, PARAM(1)	; param strs
 19815 0000E603 50                      	push rax
 19816 0000E604 6A01                    	push 1	; arg count
 19817 0000E606 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 19818 0000E60E 803805                  	cmp byte [rax], T_undefined
 19819 0000E611 0F8447790000            	je L_error_fvar_undefined
 19820 0000E617 803804                  	cmp byte [rax], T_closure
 19821 0000E61A 0F85C2790000            	jne L_error_non_closure
 19822 0000E620 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19823 0000E623 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19824 0000E626 483D[02000000]          	cmp rax, sob_boolean_false
 19825 0000E62C 0F850D010000            	jne .L_or_end_000b
 19826                                  
 19827                                  	; preparing a non-tail-call
 19828                                  	; preparing a non-tail-call
 19829 0000E632 488B4528                	mov rax, PARAM(1)	; param strs
 19830 0000E636 50                      	push rax
 19831 0000E637 6A01                    	push 1	; arg count
 19832 0000E639 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 19833 0000E641 803805                  	cmp byte [rax], T_undefined
 19834 0000E644 0F8414790000            	je L_error_fvar_undefined
 19835 0000E64A 803804                  	cmp byte [rax], T_closure
 19836 0000E64D 0F858F790000            	jne L_error_non_closure
 19837 0000E653 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19838 0000E656 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19839 0000E659 50                      	push rax
 19840 0000E65A 488B4520                	mov rax, PARAM(0)	; param str
 19841 0000E65E 50                      	push rax
 19842 0000E65F 6A02                    	push 2	; arg count
 19843 0000E661 488B4510                	mov rax, ENV
 19844 0000E665 488B4008                	mov rax, qword [rax + 8 * 1]
 19845 0000E669 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19846 0000E66C 803804                  	cmp byte [rax], T_closure
 19847 0000E66F 0F856D790000            	jne L_error_non_closure
 19848 0000E675 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19849 0000E678 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19850 0000E67B 483D[02000000]          	cmp rax, sob_boolean_false
 19851 0000E681 0F84AE000000            	je .L_if_else_005b
 19852                                  	; Setting up for a tail-call
 19853                                  	; preparing a non-tail-call
 19854 0000E687 488B4528                	mov rax, PARAM(1)	; param strs
 19855 0000E68B 50                      	push rax
 19856 0000E68C 6A01                    	push 1	; arg count
 19857 0000E68E 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 19858 0000E696 803805                  	cmp byte [rax], T_undefined
 19859 0000E699 0F84BF780000            	je L_error_fvar_undefined
 19860 0000E69F 803804                  	cmp byte [rax], T_closure
 19861 0000E6A2 0F853A790000            	jne L_error_non_closure
 19862 0000E6A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19863 0000E6AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 19864 0000E6AE 50                      	push rax
 19865                                  	; preparing a non-tail-call
 19866 0000E6AF 488B4528                	mov rax, PARAM(1)	; param strs
 19867 0000E6B3 50                      	push rax
 19868 0000E6B4 6A01                    	push 1	; arg count
 19869 0000E6B6 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 19870 0000E6BE 803805                  	cmp byte [rax], T_undefined
 19871 0000E6C1 0F8497780000            	je L_error_fvar_undefined
 19872 0000E6C7 803804                  	cmp byte [rax], T_closure
 19873 0000E6CA 0F8512790000            	jne L_error_non_closure
 19874 0000E6D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19875 0000E6D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19876 0000E6D6 50                      	push rax
 19877 0000E6D7 6A02                    	push 2
 19878 0000E6D9 488B4510                	mov rax, ENV
 19879 0000E6DD 488B00                  	mov rax, qword [rax + 8 * 0]
 19880 0000E6E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19881 0000E6E3 488B00                  	mov rax, qword [rax]
 19882 0000E6E6 803804                  	cmp byte [rax], T_closure
 19883 0000E6E9 0F85F3780000            	jne L_error_non_closure
 19884 0000E6EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19885 0000E6F2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 19886 0000E6F6 4C8B4D00                	mov r9, qword [rbp]
 19887 0000E6FA 4150                    	push r8
 19888 0000E6FC 4151                    	push r9
 19889 0000E6FE 41BA06000000            	mov r10, 2 + 4
 19890 0000E704 4C8B5D18                	mov r11, COUNT
 19891 0000E708 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 19892 0000E70D 4C8D65F8                	lea r12, [rbp - 8]
 19893                                  .L_tc_recycle_frame_loop_00aa:
 19894 0000E711 4983FA00                	cmp r10, 0
 19895 0000E715 7414                    	je .L_tc_recycle_frame_done_00aa
 19896 0000E717 4D8B2C24                	mov r13, qword [r12]
 19897 0000E71B 4D892B                  	mov qword [r11], r13
 19898 0000E71E 49FFCA                  	dec r10
 19899 0000E721 4983EB08                	sub r11, 8
 19900 0000E725 4983EC08                	sub r12, 8
 19901 0000E729 EBE6                    	jmp .L_tc_recycle_frame_loop_00aa
 19902                                  .L_tc_recycle_frame_done_00aa:
 19903 0000E72B 498D6308                	lea rsp, [r11 + 8]
 19904 0000E72F 5D                      	pop rbp
 19905 0000E730 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19906 0000E733 EB0A                    	jmp .L_if_end_005b
 19907                                  .L_if_else_005b:
 19908 0000E735 48B8-                   	mov rax, L_constants + 2
 19908 0000E737 [0200000000000000] 
 19909                                  .L_if_end_005b:
 19910                                  .L_or_end_000b:
 19911 0000E73F C9                      	leave
 19912 0000E740 C22000                  	ret AND_KILL_FRAME(2)
 19913                                  .L_lambda_simple_end_007a:	; new closure is in rax
 19914 0000E743 803804                  	cmp byte [rax], T_closure
 19915 0000E746 0F8596780000            	jne L_error_non_closure
 19916 0000E74C FF7001                  	push SOB_CLOSURE_ENV(rax)
 19917 0000E74F FF5009                  	call SOB_CLOSURE_CODE(rax)
 19918 0000E752 50                      	push rax
 19919 0000E753 488B4520                	mov rax, PARAM(0)	; param run
 19920 0000E757 8F00                    	pop qword [rax]
 19921 0000E759 48B8-                   	mov rax, sob_void
 19921 0000E75B [0000000000000000] 
 19922                                  
 19923 0000E763 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19924 0000E768 E81E790000              	call malloc
 19925 0000E76D 50                      	push rax
 19926 0000E76E BF08000000              	mov rdi, 8 * 1	; new rib
 19927 0000E773 E813790000              	call malloc
 19928 0000E778 50                      	push rax
 19929 0000E779 BF28000000              	mov rdi, 8 * 5	; extended env
 19930 0000E77E E808790000              	call malloc
 19931 0000E783 488B7D10                	mov rdi, ENV
 19932 0000E787 BE00000000              	mov rsi, 0
 19933 0000E78C BA01000000              	mov rdx, 1
 19934                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 19935 0000E791 4883FE04                	cmp rsi, 4
 19936 0000E795 7410                    	je .L_lambda_opt_env_end_0012
 19937 0000E797 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19938 0000E79B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19939 0000E79F 48FFC6                  	inc rsi
 19940 0000E7A2 48FFC2                  	inc rdx
 19941 0000E7A5 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19942                                  .L_lambda_opt_env_end_0012:
 19943 0000E7A7 5B                      	pop rbx
 19944 0000E7A8 BE00000000              	mov rsi, 0
 19945                                  .L_lambda_opt_params_loop_0012:	; copy params
 19946 0000E7AD 4883FE01                	cmp rsi, 1
 19947 0000E7B1 740E                    	je .L_lambda_opt_params_end_0012
 19948 0000E7B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19949 0000E7B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19950 0000E7BC 48FFC6                  	inc rsi
 19951 0000E7BF EBEC                    	jmp .L_lambda_opt_params_loop_0012
 19952                                  .L_lambda_opt_params_end_0012:
 19953 0000E7C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19954 0000E7C4 4889C3                  	mov rbx, rax
 19955 0000E7C7 58                      	pop rax
 19956 0000E7C8 C60004                  	mov byte [rax], T_closure
 19957 0000E7CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19958 0000E7CF 48C74009[DCE70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19959 0000E7D7 E96C010000              	jmp .L_lambda_opt_end_0012
 19960                                  .L_lambda_opt_code_0012:
 19961 0000E7DC 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 19962 0000E7E1 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 19963 0000E7E5 7407                    	je .L_lambda_opt_arity_check_exact_0012	; Jump if arity matches
 19964 0000E7E7 7F4C                    	jg .L_lambda_opt_arity_check_more_0012	; Jump if more arguments passed
 19965 0000E7E9 E96A780000              	jmp L_error_incorrect_arity_opt
 19966                                  .L_lambda_opt_arity_check_exact_0012:
 19967 0000E7EE 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 19968 0000E7F1 4983C603                	add r14, 3 ; add 3 first stack values
 19969 0000E7F5 41BF00000000            	mov r15, 0 ; r15 = index
 19970 0000E7FB 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 19971 0000E7FF 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 19972 0000E807 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19973                                  .L_lambda_opt_stack_shrink_loop_0012:
 19974 0000E809 4983FE00                	cmp r14, 0
 19975 0000E80D 7E11                    	jle .L_make_lambda_opt_exact_finish_0012
 19976 0000E80F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 19977 0000E814 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 19978 0000E818 49FFCE                  	dec r14 ; next loop value
 19979 0000E81B 49FFC7                  	inc r15 ; update i
 19980 0000E81E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19981                                  .L_make_lambda_opt_exact_finish_0012:
 19982 0000E820 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 19983 0000E828 49FFC2                  	inc r10
 19984 0000E82B 4C89542410              	mov qword [rsp + 8 * 2], r10
 19985 0000E830 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0012
 19986                                  .L_lambda_opt_arity_check_more_0012:
 19987 0000E835 4D89D6                  	mov r14, r10 ; r14 = num args
 19988 0000E838 4D89D7                  	mov r15, r10 ; r15 = num args
 19989 0000E83B 41B901000000            	mov r9, 1; r9 = number of params 
 19990 0000E841 4D29CE                  	sub r14, r9 ; r14 = extra args
 19991 0000E844 4D01F1                  	add r9, r14 ; r9 = num args
 19992 0000E847 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 19992 0000E849 [0100000000000000] 
 19993 0000E851 EB00                    	jmp .L_make_lambda_opt_arg_list_0012
 19994                                  .L_make_lambda_opt_arg_list_0012:
 19995 0000E853 4983FE00                	cmp r14, 0
 19996 0000E857 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0012
 19997 0000E859 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 19998 0000E85E 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 19999 0000E861 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 20000 0000E867 E81F780000              	call malloc                         ; Allocate memory, result in rax
 20001 0000E86C C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 20002 0000E86F 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 20003 0000E873 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 20004 0000E877 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 20005 0000E87A 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 20006 0000E87D 49FFC9                  	dec r9                              ; args index minus 1
 20007 0000E880 49FFCE                  	dec r14                             ; next iteration
 20008 0000E883 EBCE                    	jmp .L_make_lambda_opt_arg_list_0012
 20009                                  .L_make_lambda_opt_stack_fixed_0012:
 20010 0000E885 4D89FE                  	mov r14, r15 ; r14 = num args
 20011 0000E888 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 20012 0000E88B 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 20013 0000E88F 41BA01000000            	mov r10, 1; r10 = num of params
 20014 0000E895 4D29D6                  	sub r14, r10 ; r14 = extra args
 20015 0000E898 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 20016 0000E89B 49FFCE                  	dec r14 ; how much we need to change stack wise?
 20017 0000E89E 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 20018 0000E8A3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0012
 20019                                  .L_lambda_opt_stack_shrink_loop_more_0012:
 20020 0000E8A5 4983F800                	cmp r8, 0
 20021 0000E8A9 7E15                    	jle .L_make_lambda_opt_more_finish_0012
 20022 0000E8AB 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 20023 0000E8AF 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 20024 0000E8B3 4D8D26                  	lea r12, [r14]
 20025 0000E8B6 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 20026 0000E8BB 49FFC8                  	dec r8 ; next iteration
 20027 0000E8BE EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0012
 20028                                  .L_make_lambda_opt_more_finish_0012:
 20029 0000E8C0 4D89F8                  	mov r8, r15 ; num of args
 20030 0000E8C3 41BA01000000            	mov r10, 1
 20031 0000E8C9 4D29D0                  	sub r8, r10 ; num of new args
 20032 0000E8CC 49FFC0                  	inc r8
 20033 0000E8CF 4C89442420              	mov qword [rsp + 8 * 4], r8
 20034 0000E8D4 4883C410                	add rsp, 8 * 2  ; 
 20035 0000E8D8 EB00                    	jmp .L_lambda_opt_stack_adjusted_0012
 20036                                  .L_lambda_opt_stack_adjusted_0012:
 20037 0000E8DA C8000000                	enter 0, 0
 20038                                  	; Setting up for a tail-call
 20039 0000E8DE 488B4520                	mov rax, PARAM(0)	; param str
 20040 0000E8E2 50                      	push rax
 20041 0000E8E3 488B4528                	mov rax, PARAM(1)	; param strs
 20042 0000E8E7 50                      	push rax
 20043 0000E8E8 6A02                    	push 2
 20044 0000E8EA 488B4510                	mov rax, ENV
 20045 0000E8EE 488B00                  	mov rax, qword [rax + 8 * 0]
 20046 0000E8F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20047 0000E8F4 488B00                  	mov rax, qword [rax]
 20048 0000E8F7 803804                  	cmp byte [rax], T_closure
 20049 0000E8FA 0F85E2760000            	jne L_error_non_closure
 20050 0000E900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20051 0000E903 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20052 0000E907 4C8B4D00                	mov r9, qword [rbp]
 20053 0000E90B 4150                    	push r8
 20054 0000E90D 4151                    	push r9
 20055 0000E90F 41BA06000000            	mov r10, 2 + 4
 20056 0000E915 4C8B5D18                	mov r11, COUNT
 20057 0000E919 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20058 0000E91E 4C8D65F8                	lea r12, [rbp - 8]
 20059                                  .L_tc_recycle_frame_loop_00ab:
 20060 0000E922 4983FA00                	cmp r10, 0
 20061 0000E926 7414                    	je .L_tc_recycle_frame_done_00ab
 20062 0000E928 4D8B2C24                	mov r13, qword [r12]
 20063 0000E92C 4D892B                  	mov qword [r11], r13
 20064 0000E92F 49FFCA                  	dec r10
 20065 0000E932 4983EB08                	sub r11, 8
 20066 0000E936 4983EC08                	sub r12, 8
 20067 0000E93A EBE6                    	jmp .L_tc_recycle_frame_loop_00ab
 20068                                  .L_tc_recycle_frame_done_00ab:
 20069 0000E93C 498D6308                	lea rsp, [r11 + 8]
 20070 0000E940 5D                      	pop rbp
 20071 0000E941 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20072 0000E944 C9                      	leave
 20073 0000E945 C21800                  	ret AND_KILL_FRAME(1)
 20074                                  .L_lambda_opt_end_0012:	; new closure is in rax
 20075 0000E948 C9                      	leave
 20076 0000E949 C21800                  	ret AND_KILL_FRAME(1)
 20077                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20078 0000E94C 803804                  	cmp byte [rax], T_closure
 20079 0000E94F 0F858D760000            	jne L_error_non_closure
 20080 0000E955 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20081 0000E958 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20082 0000E95C 4C8B4D00                	mov r9, qword [rbp]
 20083 0000E960 4150                    	push r8
 20084 0000E962 4151                    	push r9
 20085 0000E964 41BA05000000            	mov r10, 1 + 4
 20086 0000E96A 4C8B5D18                	mov r11, COUNT
 20087 0000E96E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20088 0000E973 4C8D65F8                	lea r12, [rbp - 8]
 20089                                  .L_tc_recycle_frame_loop_00ac:
 20090 0000E977 4983FA00                	cmp r10, 0
 20091 0000E97B 7414                    	je .L_tc_recycle_frame_done_00ac
 20092 0000E97D 4D8B2C24                	mov r13, qword [r12]
 20093 0000E981 4D892B                  	mov qword [r11], r13
 20094 0000E984 49FFCA                  	dec r10
 20095 0000E987 4983EB08                	sub r11, 8
 20096 0000E98B 4983EC08                	sub r12, 8
 20097 0000E98F EBE6                    	jmp .L_tc_recycle_frame_loop_00ac
 20098                                  .L_tc_recycle_frame_done_00ac:
 20099 0000E991 498D6308                	lea rsp, [r11 + 8]
 20100 0000E995 5D                      	pop rbp
 20101 0000E996 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20102 0000E999 C9                      	leave
 20103 0000E99A C21800                  	ret AND_KILL_FRAME(1)
 20104                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20105 0000E99D 803804                  	cmp byte [rax], T_closure
 20106 0000E9A0 0F853C760000            	jne L_error_non_closure
 20107 0000E9A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20108 0000E9A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20109 0000E9AC C9                      	leave
 20110 0000E9AD C21800                  	ret AND_KILL_FRAME(1)
 20111                                  .L_lambda_simple_end_0074:	; new closure is in rax
 20112 0000E9B0 803804                  	cmp byte [rax], T_closure
 20113 0000E9B3 0F8529760000            	jne L_error_non_closure
 20114 0000E9B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20115 0000E9BC 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20116 0000E9C0 4C8B4D00                	mov r9, qword [rbp]
 20117 0000E9C4 4150                    	push r8
 20118 0000E9C6 4151                    	push r9
 20119 0000E9C8 41BA05000000            	mov r10, 1 + 4
 20120 0000E9CE 4C8B5D18                	mov r11, COUNT
 20121 0000E9D2 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20122 0000E9D7 4C8D65F8                	lea r12, [rbp - 8]
 20123                                  .L_tc_recycle_frame_loop_00ad:
 20124 0000E9DB 4983FA00                	cmp r10, 0
 20125 0000E9DF 7414                    	je .L_tc_recycle_frame_done_00ad
 20126 0000E9E1 4D8B2C24                	mov r13, qword [r12]
 20127 0000E9E5 4D892B                  	mov qword [r11], r13
 20128 0000E9E8 49FFCA                  	dec r10
 20129 0000E9EB 4983EB08                	sub r11, 8
 20130 0000E9EF 4983EC08                	sub r12, 8
 20131 0000E9F3 EBE6                    	jmp .L_tc_recycle_frame_loop_00ad
 20132                                  .L_tc_recycle_frame_done_00ad:
 20133 0000E9F5 498D6308                	lea rsp, [r11 + 8]
 20134 0000E9F9 5D                      	pop rbp
 20135 0000E9FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20136 0000E9FD C9                      	leave
 20137 0000E9FE C22000                  	ret AND_KILL_FRAME(2)
 20138                                  .L_lambda_simple_end_0073:	; new closure is in rax
 20139 0000EA01 50                      	push rax
 20140 0000EA02 6A01                    	push 1	; arg count
 20141 0000EA04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20142 0000EA09 E87D760000              	call malloc
 20143 0000EA0E 50                      	push rax
 20144 0000EA0F BF00000000              	mov rdi, 8 * 0	; new rib
 20145 0000EA14 E872760000              	call malloc
 20146 0000EA19 50                      	push rax
 20147 0000EA1A BF08000000              	mov rdi, 8 * 1	; extended env
 20148 0000EA1F E867760000              	call malloc
 20149 0000EA24 488B7D10                	mov rdi, ENV
 20150 0000EA28 BE00000000              	mov rsi, 0
 20151 0000EA2D BA01000000              	mov rdx, 1
 20152                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20153 0000EA32 4883FE00                	cmp rsi, 0
 20154 0000EA36 7410                    	je .L_lambda_simple_env_end_007b
 20155 0000EA38 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20156 0000EA3C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20157 0000EA40 48FFC6                  	inc rsi
 20158 0000EA43 48FFC2                  	inc rdx
 20159 0000EA46 EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20160                                  .L_lambda_simple_env_end_007b:
 20161 0000EA48 5B                      	pop rbx
 20162 0000EA49 BE00000000              	mov rsi, 0
 20163                                  .L_lambda_simple_params_loop_007b:	; copy params
 20164 0000EA4E 4883FE00                	cmp rsi, 0
 20165 0000EA52 740E                    	je .L_lambda_simple_params_end_007b
 20166 0000EA54 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20167 0000EA59 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20168 0000EA5D 48FFC6                  	inc rsi
 20169 0000EA60 EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20170                                  .L_lambda_simple_params_end_007b:
 20171 0000EA62 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20172 0000EA65 4889C3                  	mov rbx, rax
 20173 0000EA68 58                      	pop rax
 20174 0000EA69 C60004                  	mov byte [rax], T_closure
 20175 0000EA6C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20176 0000EA70 48C74009[7DEA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20177 0000EA78 E947010000              	jmp .L_lambda_simple_end_007b
 20178                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20179 0000EA7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20180 0000EA83 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20181 0000EA85 FF742410                	push qword [rsp + 8 * 2]
 20182 0000EA89 6A01                    	push 1
 20183 0000EA8B E9B4750000              	jmp L_error_incorrect_arity_simple
 20184                                  .L_lambda_simple_arity_check_ok_007b:
 20185 0000EA90 C8000000                	enter 0, 0
 20186                                  	; preparing a non-tail-call
 20187 0000EA94 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 20188 0000EA9C 803805                  	cmp byte [rax], T_undefined
 20189 0000EA9F 0F84B9740000            	je L_error_fvar_undefined
 20190 0000EAA5 50                      	push rax
 20191 0000EAA6 488B0425[EC120000]      	mov rax, qword [free_var_75]	; free var char<?
 20192 0000EAAE 803805                  	cmp byte [rax], T_undefined
 20193 0000EAB1 0F84A7740000            	je L_error_fvar_undefined
 20194 0000EAB7 50                      	push rax
 20195 0000EAB8 6A02                    	push 2	; arg count
 20196 0000EABA 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20197 0000EABE 803804                  	cmp byte [rax], T_closure
 20198 0000EAC1 0F851B750000            	jne L_error_non_closure
 20199 0000EAC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20200 0000EACA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20201 0000EACD 48890425[E8160000]      	mov qword [free_var_135], rax
 20202 0000EAD5 48B8-                   	mov rax, sob_void
 20202 0000EAD7 [0000000000000000] 
 20203                                  
 20204                                  	; preparing a non-tail-call
 20205 0000EADF 488B0425[86120000]      	mov rax, qword [free_var_69]	; free var char-ci=?
 20206 0000EAE7 803805                  	cmp byte [rax], T_undefined
 20207 0000EAEA 0F846E740000            	je L_error_fvar_undefined
 20208 0000EAF0 50                      	push rax
 20209 0000EAF1 488B0425[75120000]      	mov rax, qword [free_var_68]	; free var char-ci<?
 20210 0000EAF9 803805                  	cmp byte [rax], T_undefined
 20211 0000EAFC 0F845C740000            	je L_error_fvar_undefined
 20212 0000EB02 50                      	push rax
 20213 0000EB03 6A02                    	push 2	; arg count
 20214 0000EB05 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20215 0000EB09 803804                  	cmp byte [rax], T_closure
 20216 0000EB0C 0F85D0740000            	jne L_error_non_closure
 20217 0000EB12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20218 0000EB15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20219 0000EB18 48890425[1C160000]      	mov qword [free_var_123], rax
 20220 0000EB20 48B8-                   	mov rax, sob_void
 20220 0000EB22 [0000000000000000] 
 20221                                  
 20222                                  	; preparing a non-tail-call
 20223 0000EB2A 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 20224 0000EB32 803805                  	cmp byte [rax], T_undefined
 20225 0000EB35 0F8423740000            	je L_error_fvar_undefined
 20226 0000EB3B 50                      	push rax
 20227 0000EB3C 488B0425[1F130000]      	mov rax, qword [free_var_78]	; free var char>?
 20228 0000EB44 803805                  	cmp byte [rax], T_undefined
 20229 0000EB47 0F8411740000            	je L_error_fvar_undefined
 20230 0000EB4D 50                      	push rax
 20231 0000EB4E 6A02                    	push 2	; arg count
 20232 0000EB50 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20233 0000EB54 803804                  	cmp byte [rax], T_closure
 20234 0000EB57 0F8585740000            	jne L_error_non_closure
 20235 0000EB5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20236 0000EB60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20237 0000EB63 48890425[1B170000]      	mov qword [free_var_138], rax
 20238 0000EB6B 48B8-                   	mov rax, sob_void
 20238 0000EB6D [0000000000000000] 
 20239                                  
 20240                                  	; preparing a non-tail-call
 20241 0000EB75 488B0425[86120000]      	mov rax, qword [free_var_69]	; free var char-ci=?
 20242 0000EB7D 803805                  	cmp byte [rax], T_undefined
 20243 0000EB80 0F84D8730000            	je L_error_fvar_undefined
 20244 0000EB86 50                      	push rax
 20245 0000EB87 488B0425[A8120000]      	mov rax, qword [free_var_71]	; free var char-ci>?
 20246 0000EB8F 803805                  	cmp byte [rax], T_undefined
 20247 0000EB92 0F84C6730000            	je L_error_fvar_undefined
 20248 0000EB98 50                      	push rax
 20249 0000EB99 6A02                    	push 2	; arg count
 20250 0000EB9B 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20251 0000EB9F 803804                  	cmp byte [rax], T_closure
 20252 0000EBA2 0F853A740000            	jne L_error_non_closure
 20253 0000EBA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20254 0000EBAB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20255 0000EBAE 48890425[4F160000]      	mov qword [free_var_126], rax
 20256 0000EBB6 48B8-                   	mov rax, sob_void
 20256 0000EBB8 [0000000000000000] 
 20257 0000EBC0 C9                      	leave
 20258 0000EBC1 C21800                  	ret AND_KILL_FRAME(1)
 20259                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20260 0000EBC4 803804                  	cmp byte [rax], T_closure
 20261 0000EBC7 0F8515740000            	jne L_error_non_closure
 20262 0000EBCD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20263 0000EBD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20264                                  
 20265 0000EBD3 4889C7                  	mov rdi, rax
 20266 0000EBD6 E805770000              	call print_sexpr_if_not_void
 20267                                  	; preparing a non-tail-call
 20268 0000EBDB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20269 0000EBE0 E8A6740000              	call malloc
 20270 0000EBE5 50                      	push rax
 20271 0000EBE6 BF00000000              	mov rdi, 8 * 0	; new rib
 20272 0000EBEB E89B740000              	call malloc
 20273 0000EBF0 50                      	push rax
 20274 0000EBF1 BF08000000              	mov rdi, 8 * 1	; extended env
 20275 0000EBF6 E890740000              	call malloc
 20276 0000EBFB 488B7D10                	mov rdi, ENV
 20277 0000EBFF BE00000000              	mov rsi, 0
 20278 0000EC04 BA01000000              	mov rdx, 1
 20279                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20280 0000EC09 4883FE00                	cmp rsi, 0
 20281 0000EC0D 7410                    	je .L_lambda_simple_env_end_007c
 20282 0000EC0F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20283 0000EC13 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20284 0000EC17 48FFC6                  	inc rsi
 20285 0000EC1A 48FFC2                  	inc rdx
 20286 0000EC1D EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20287                                  .L_lambda_simple_env_end_007c:
 20288 0000EC1F 5B                      	pop rbx
 20289 0000EC20 BE00000000              	mov rsi, 0
 20290                                  .L_lambda_simple_params_loop_007c:	; copy params
 20291 0000EC25 4883FE00                	cmp rsi, 0
 20292 0000EC29 740E                    	je .L_lambda_simple_params_end_007c
 20293 0000EC2B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20294 0000EC30 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20295 0000EC34 48FFC6                  	inc rsi
 20296 0000EC37 EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20297                                  .L_lambda_simple_params_end_007c:
 20298 0000EC39 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20299 0000EC3C 4889C3                  	mov rbx, rax
 20300 0000EC3F 58                      	pop rax
 20301 0000EC40 C60004                  	mov byte [rax], T_closure
 20302 0000EC43 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20303 0000EC47 48C74009[54EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20304 0000EC4F E9A30B0000              	jmp .L_lambda_simple_end_007c
 20305                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20306 0000EC54 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20307 0000EC5A 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20308 0000EC5C FF742410                	push qword [rsp + 8 * 2]
 20309 0000EC60 6A01                    	push 1
 20310 0000EC62 E9DD730000              	jmp L_error_incorrect_arity_simple
 20311                                  .L_lambda_simple_arity_check_ok_007c:
 20312 0000EC67 C8000000                	enter 0, 0
 20313                                  	; Setting up for a tail-call
 20314 0000EC6B 48B8-                   	mov rax, L_constants + 1993
 20314 0000EC6D [C907000000000000] 
 20315 0000EC75 50                      	push rax
 20316 0000EC76 6A01                    	push 1
 20317 0000EC78 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20318 0000EC7D E809740000              	call malloc
 20319 0000EC82 50                      	push rax
 20320 0000EC83 BF08000000              	mov rdi, 8 * 1	; new rib
 20321 0000EC88 E8FE730000              	call malloc
 20322 0000EC8D 50                      	push rax
 20323 0000EC8E BF10000000              	mov rdi, 8 * 2	; extended env
 20324 0000EC93 E8F3730000              	call malloc
 20325 0000EC98 488B7D10                	mov rdi, ENV
 20326 0000EC9C BE00000000              	mov rsi, 0
 20327 0000ECA1 BA01000000              	mov rdx, 1
 20328                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 20329 0000ECA6 4883FE01                	cmp rsi, 1
 20330 0000ECAA 7410                    	je .L_lambda_simple_env_end_007d
 20331 0000ECAC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20332 0000ECB0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20333 0000ECB4 48FFC6                  	inc rsi
 20334 0000ECB7 48FFC2                  	inc rdx
 20335 0000ECBA EBEA                    	jmp .L_lambda_simple_env_loop_007d
 20336                                  .L_lambda_simple_env_end_007d:
 20337 0000ECBC 5B                      	pop rbx
 20338 0000ECBD BE00000000              	mov rsi, 0
 20339                                  .L_lambda_simple_params_loop_007d:	; copy params
 20340 0000ECC2 4883FE01                	cmp rsi, 1
 20341 0000ECC6 740E                    	je .L_lambda_simple_params_end_007d
 20342 0000ECC8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20343 0000ECCD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20344 0000ECD1 48FFC6                  	inc rsi
 20345 0000ECD4 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 20346                                  .L_lambda_simple_params_end_007d:
 20347 0000ECD6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20348 0000ECD9 4889C3                  	mov rbx, rax
 20349 0000ECDC 58                      	pop rax
 20350 0000ECDD C60004                  	mov byte [rax], T_closure
 20351 0000ECE0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20352 0000ECE4 48C74009[F1EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 20353 0000ECEC E9B50A0000              	jmp .L_lambda_simple_end_007d
 20354                                  .L_lambda_simple_code_007d:	; lambda-simple body
 20355 0000ECF1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20356 0000ECF7 740B                    	je .L_lambda_simple_arity_check_ok_007d
 20357 0000ECF9 FF742410                	push qword [rsp + 8 * 2]
 20358 0000ECFD 6A01                    	push 1
 20359 0000ECFF E940730000              	jmp L_error_incorrect_arity_simple
 20360                                  .L_lambda_simple_arity_check_ok_007d:
 20361 0000ED04 C8000000                	enter 0, 0
 20362 0000ED08 BF08000000              	mov rdi, 8 * 1
 20363 0000ED0D E879730000              	call malloc
 20364 0000ED12 488B5D20                	mov rbx, PARAM(0)
 20365 0000ED16 488918                  	mov qword [rax], rbx
 20366 0000ED19 48894520                	mov PARAM(0), rax
 20367 0000ED1D 48B8-                   	mov rax, sob_void
 20367 0000ED1F [0000000000000000] 
 20368                                  
 20369                                  	; preparing a non-tail-call
 20370 0000ED27 6A00                    	push 0	; arg count
 20371 0000ED29 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20372 0000ED2E E858730000              	call malloc
 20373 0000ED33 50                      	push rax
 20374 0000ED34 BF08000000              	mov rdi, 8 * 1	; new rib
 20375 0000ED39 E84D730000              	call malloc
 20376 0000ED3E 50                      	push rax
 20377 0000ED3F BF18000000              	mov rdi, 8 * 3	; extended env
 20378 0000ED44 E842730000              	call malloc
 20379 0000ED49 488B7D10                	mov rdi, ENV
 20380 0000ED4D BE00000000              	mov rsi, 0
 20381 0000ED52 BA01000000              	mov rdx, 1
 20382                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 20383 0000ED57 4883FE02                	cmp rsi, 2
 20384 0000ED5B 7410                    	je .L_lambda_simple_env_end_007e
 20385 0000ED5D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20386 0000ED61 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20387 0000ED65 48FFC6                  	inc rsi
 20388 0000ED68 48FFC2                  	inc rdx
 20389 0000ED6B EBEA                    	jmp .L_lambda_simple_env_loop_007e
 20390                                  .L_lambda_simple_env_end_007e:
 20391 0000ED6D 5B                      	pop rbx
 20392 0000ED6E BE00000000              	mov rsi, 0
 20393                                  .L_lambda_simple_params_loop_007e:	; copy params
 20394 0000ED73 4883FE01                	cmp rsi, 1
 20395 0000ED77 740E                    	je .L_lambda_simple_params_end_007e
 20396 0000ED79 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20397 0000ED7E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20398 0000ED82 48FFC6                  	inc rsi
 20399 0000ED85 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 20400                                  .L_lambda_simple_params_end_007e:
 20401 0000ED87 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20402 0000ED8A 4889C3                  	mov rbx, rax
 20403 0000ED8D 58                      	pop rax
 20404 0000ED8E C60004                  	mov byte [rax], T_closure
 20405 0000ED91 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20406 0000ED95 48C74009[A2ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 20407 0000ED9D E9C3010000              	jmp .L_lambda_simple_end_007e
 20408                                  .L_lambda_simple_code_007e:	; lambda-simple body
 20409 0000EDA2 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20410 0000EDA8 740B                    	je .L_lambda_simple_arity_check_ok_007e
 20411 0000EDAA FF742410                	push qword [rsp + 8 * 2]
 20412 0000EDAE 6A04                    	push 4
 20413 0000EDB0 E98F720000              	jmp L_error_incorrect_arity_simple
 20414                                  .L_lambda_simple_arity_check_ok_007e:
 20415 0000EDB5 C8000000                	enter 0, 0
 20416                                  	; preparing a non-tail-call
 20417 0000EDB9 488B4538                	mov rax, PARAM(3)	; param len
 20418 0000EDBD 50                      	push rax
 20419 0000EDBE 488B4520                	mov rax, PARAM(0)	; param i
 20420 0000EDC2 50                      	push rax
 20421 0000EDC3 6A02                    	push 2	; arg count
 20422 0000EDC5 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 20423 0000EDCD 803805                  	cmp byte [rax], T_undefined
 20424 0000EDD0 0F8488710000            	je L_error_fvar_undefined
 20425 0000EDD6 803804                  	cmp byte [rax], T_closure
 20426 0000EDD9 0F8503720000            	jne L_error_non_closure
 20427 0000EDDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20428 0000EDE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20429 0000EDE5 483D[02000000]          	cmp rax, sob_boolean_false
 20430 0000EDEB 0F8570010000            	jne .L_or_end_000c
 20431                                  
 20432                                  	; preparing a non-tail-call
 20433 0000EDF1 488B4538                	mov rax, PARAM(3)	; param len
 20434 0000EDF5 50                      	push rax
 20435 0000EDF6 488B4520                	mov rax, PARAM(0)	; param i
 20436 0000EDFA 50                      	push rax
 20437 0000EDFB 6A02                    	push 2	; arg count
 20438 0000EDFD 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 20439 0000EE05 803805                  	cmp byte [rax], T_undefined
 20440 0000EE08 0F8450710000            	je L_error_fvar_undefined
 20441 0000EE0E 803804                  	cmp byte [rax], T_closure
 20442 0000EE11 0F85CB710000            	jne L_error_non_closure
 20443 0000EE17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20444 0000EE1A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20445 0000EE1D 483D[02000000]          	cmp rax, sob_boolean_false
 20446 0000EE23 0F842E010000            	je .L_if_else_005d
 20447                                  	; preparing a non-tail-call
 20448                                  	; preparing a non-tail-call
 20449 0000EE29 488B4520                	mov rax, PARAM(0)	; param i
 20450 0000EE2D 50                      	push rax
 20451 0000EE2E 488B4530                	mov rax, PARAM(2)	; param str2
 20452 0000EE32 50                      	push rax
 20453 0000EE33 6A02                    	push 2	; arg count
 20454 0000EE35 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 20455 0000EE3D 803805                  	cmp byte [rax], T_undefined
 20456 0000EE40 0F8418710000            	je L_error_fvar_undefined
 20457 0000EE46 803804                  	cmp byte [rax], T_closure
 20458 0000EE49 0F8593710000            	jne L_error_non_closure
 20459 0000EE4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20460 0000EE52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20461 0000EE55 50                      	push rax
 20462                                  	; preparing a non-tail-call
 20463 0000EE56 488B4520                	mov rax, PARAM(0)	; param i
 20464 0000EE5A 50                      	push rax
 20465 0000EE5B 488B4528                	mov rax, PARAM(1)	; param str1
 20466 0000EE5F 50                      	push rax
 20467 0000EE60 6A02                    	push 2	; arg count
 20468 0000EE62 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 20469 0000EE6A 803805                  	cmp byte [rax], T_undefined
 20470 0000EE6D 0F84EB700000            	je L_error_fvar_undefined
 20471 0000EE73 803804                  	cmp byte [rax], T_closure
 20472 0000EE76 0F8566710000            	jne L_error_non_closure
 20473 0000EE7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20474 0000EE7F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20475 0000EE82 50                      	push rax
 20476 0000EE83 6A02                    	push 2	; arg count
 20477 0000EE85 488B4510                	mov rax, ENV
 20478 0000EE89 488B4008                	mov rax, qword [rax + 8 * 1]
 20479 0000EE8D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20480 0000EE90 803804                  	cmp byte [rax], T_closure
 20481 0000EE93 0F8549710000            	jne L_error_non_closure
 20482 0000EE99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20483 0000EE9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20484 0000EE9F 483D[02000000]          	cmp rax, sob_boolean_false
 20485 0000EEA5 0F84A0000000            	je .L_if_else_005c
 20486                                  	; Setting up for a tail-call
 20487                                  	; preparing a non-tail-call
 20488 0000EEAB 48B8-                   	mov rax, L_constants + 2284
 20488 0000EEAD [EC08000000000000] 
 20489 0000EEB5 50                      	push rax
 20490 0000EEB6 488B4520                	mov rax, PARAM(0)	; param i
 20491 0000EEBA 50                      	push rax
 20492 0000EEBB 6A02                    	push 2	; arg count
 20493 0000EEBD 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 20494 0000EEC5 803805                  	cmp byte [rax], T_undefined
 20495 0000EEC8 0F8490700000            	je L_error_fvar_undefined
 20496 0000EECE 803804                  	cmp byte [rax], T_closure
 20497 0000EED1 0F850B710000            	jne L_error_non_closure
 20498 0000EED7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20499 0000EEDA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20500 0000EEDD 50                      	push rax
 20501 0000EEDE 488B4528                	mov rax, PARAM(1)	; param str1
 20502 0000EEE2 50                      	push rax
 20503 0000EEE3 488B4530                	mov rax, PARAM(2)	; param str2
 20504 0000EEE7 50                      	push rax
 20505 0000EEE8 488B4538                	mov rax, PARAM(3)	; param len
 20506 0000EEEC 50                      	push rax
 20507 0000EEED 6A04                    	push 4
 20508 0000EEEF 488B4510                	mov rax, ENV
 20509 0000EEF3 488B00                  	mov rax, qword [rax + 8 * 0]
 20510 0000EEF6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20511 0000EEF9 488B00                  	mov rax, qword [rax]
 20512 0000EEFC 803804                  	cmp byte [rax], T_closure
 20513 0000EEFF 0F85DD700000            	jne L_error_non_closure
 20514 0000EF05 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20515 0000EF08 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20516 0000EF0C 4C8B4D00                	mov r9, qword [rbp]
 20517 0000EF10 4150                    	push r8
 20518 0000EF12 4151                    	push r9
 20519 0000EF14 41BA08000000            	mov r10, 4 + 4
 20520 0000EF1A 4C8B5D18                	mov r11, COUNT
 20521 0000EF1E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20522 0000EF23 4C8D65F8                	lea r12, [rbp - 8]
 20523                                  .L_tc_recycle_frame_loop_00ae:
 20524 0000EF27 4983FA00                	cmp r10, 0
 20525 0000EF2B 7414                    	je .L_tc_recycle_frame_done_00ae
 20526 0000EF2D 4D8B2C24                	mov r13, qword [r12]
 20527 0000EF31 4D892B                  	mov qword [r11], r13
 20528 0000EF34 49FFCA                  	dec r10
 20529 0000EF37 4983EB08                	sub r11, 8
 20530 0000EF3B 4983EC08                	sub r12, 8
 20531 0000EF3F EBE6                    	jmp .L_tc_recycle_frame_loop_00ae
 20532                                  .L_tc_recycle_frame_done_00ae:
 20533 0000EF41 498D6308                	lea rsp, [r11 + 8]
 20534 0000EF45 5D                      	pop rbp
 20535 0000EF46 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20536 0000EF49 EB0A                    	jmp .L_if_end_005c
 20537                                  .L_if_else_005c:
 20538 0000EF4B 48B8-                   	mov rax, L_constants + 2
 20538 0000EF4D [0200000000000000] 
 20539                                  .L_if_end_005c:
 20540 0000EF55 EB0A                    	jmp .L_if_end_005d
 20541                                  .L_if_else_005d:
 20542 0000EF57 48B8-                   	mov rax, L_constants + 2
 20542 0000EF59 [0200000000000000] 
 20543                                  .L_if_end_005d:
 20544                                  .L_or_end_000c:
 20545 0000EF61 C9                      	leave
 20546 0000EF62 C23000                  	ret AND_KILL_FRAME(4)
 20547                                  .L_lambda_simple_end_007e:	; new closure is in rax
 20548 0000EF65 803804                  	cmp byte [rax], T_closure
 20549 0000EF68 0F8574700000            	jne L_error_non_closure
 20550 0000EF6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20551 0000EF71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20552 0000EF74 50                      	push rax
 20553 0000EF75 488B4520                	mov rax, PARAM(0)	; param run
 20554 0000EF79 8F00                    	pop qword [rax]
 20555 0000EF7B 48B8-                   	mov rax, sob_void
 20555 0000EF7D [0000000000000000] 
 20556                                  
 20557                                  	; preparing a non-tail-call
 20558 0000EF85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20559 0000EF8A E8FC700000              	call malloc
 20560 0000EF8F 50                      	push rax
 20561 0000EF90 BF08000000              	mov rdi, 8 * 1	; new rib
 20562 0000EF95 E8F1700000              	call malloc
 20563 0000EF9A 50                      	push rax
 20564 0000EF9B BF18000000              	mov rdi, 8 * 3	; extended env
 20565 0000EFA0 E8E6700000              	call malloc
 20566 0000EFA5 488B7D10                	mov rdi, ENV
 20567 0000EFA9 BE00000000              	mov rsi, 0
 20568 0000EFAE BA01000000              	mov rdx, 1
 20569                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 20570 0000EFB3 4883FE02                	cmp rsi, 2
 20571 0000EFB7 7410                    	je .L_lambda_simple_env_end_007f
 20572 0000EFB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20573 0000EFBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20574 0000EFC1 48FFC6                  	inc rsi
 20575 0000EFC4 48FFC2                  	inc rdx
 20576 0000EFC7 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 20577                                  .L_lambda_simple_env_end_007f:
 20578 0000EFC9 5B                      	pop rbx
 20579 0000EFCA BE00000000              	mov rsi, 0
 20580                                  .L_lambda_simple_params_loop_007f:	; copy params
 20581 0000EFCF 4883FE01                	cmp rsi, 1
 20582 0000EFD3 740E                    	je .L_lambda_simple_params_end_007f
 20583 0000EFD5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20584 0000EFDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20585 0000EFDE 48FFC6                  	inc rsi
 20586 0000EFE1 EBEC                    	jmp .L_lambda_simple_params_loop_007f
 20587                                  .L_lambda_simple_params_end_007f:
 20588 0000EFE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20589 0000EFE6 4889C3                  	mov rbx, rax
 20590 0000EFE9 58                      	pop rax
 20591 0000EFEA C60004                  	mov byte [rax], T_closure
 20592 0000EFED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20593 0000EFF1 48C74009[FEEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 20594 0000EFF9 E916020000              	jmp .L_lambda_simple_end_007f
 20595                                  .L_lambda_simple_code_007f:	; lambda-simple body
 20596 0000EFFE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20597 0000F004 740B                    	je .L_lambda_simple_arity_check_ok_007f
 20598 0000F006 FF742410                	push qword [rsp + 8 * 2]
 20599 0000F00A 6A02                    	push 2
 20600 0000F00C E933700000              	jmp L_error_incorrect_arity_simple
 20601                                  .L_lambda_simple_arity_check_ok_007f:
 20602 0000F011 C8000000                	enter 0, 0
 20603                                  	; Setting up for a tail-call
 20604                                  	; preparing a non-tail-call
 20605 0000F015 488B4520                	mov rax, PARAM(0)	; param str1
 20606 0000F019 50                      	push rax
 20607 0000F01A 6A01                    	push 1	; arg count
 20608 0000F01C 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 20609 0000F024 803805                  	cmp byte [rax], T_undefined
 20610 0000F027 0F84316F0000            	je L_error_fvar_undefined
 20611 0000F02D 803804                  	cmp byte [rax], T_closure
 20612 0000F030 0F85AC6F0000            	jne L_error_non_closure
 20613 0000F036 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20614 0000F039 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20615 0000F03C 50                      	push rax
 20616                                  	; preparing a non-tail-call
 20617 0000F03D 488B4528                	mov rax, PARAM(1)	; param str2
 20618 0000F041 50                      	push rax
 20619 0000F042 6A01                    	push 1	; arg count
 20620 0000F044 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 20621 0000F04C 803805                  	cmp byte [rax], T_undefined
 20622 0000F04F 0F84096F0000            	je L_error_fvar_undefined
 20623 0000F055 803804                  	cmp byte [rax], T_closure
 20624 0000F058 0F85846F0000            	jne L_error_non_closure
 20625 0000F05E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20626 0000F061 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20627 0000F064 50                      	push rax
 20628 0000F065 6A02                    	push 2
 20629 0000F067 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20630 0000F06C E81A700000              	call malloc
 20631 0000F071 50                      	push rax
 20632 0000F072 BF10000000              	mov rdi, 8 * 2	; new rib
 20633 0000F077 E80F700000              	call malloc
 20634 0000F07C 50                      	push rax
 20635 0000F07D BF20000000              	mov rdi, 8 * 4	; extended env
 20636 0000F082 E804700000              	call malloc
 20637 0000F087 488B7D10                	mov rdi, ENV
 20638 0000F08B BE00000000              	mov rsi, 0
 20639 0000F090 BA01000000              	mov rdx, 1
 20640                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 20641 0000F095 4883FE03                	cmp rsi, 3
 20642 0000F099 7410                    	je .L_lambda_simple_env_end_0080
 20643 0000F09B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20644 0000F09F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20645 0000F0A3 48FFC6                  	inc rsi
 20646 0000F0A6 48FFC2                  	inc rdx
 20647 0000F0A9 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 20648                                  .L_lambda_simple_env_end_0080:
 20649 0000F0AB 5B                      	pop rbx
 20650 0000F0AC BE00000000              	mov rsi, 0
 20651                                  .L_lambda_simple_params_loop_0080:	; copy params
 20652 0000F0B1 4883FE02                	cmp rsi, 2
 20653 0000F0B5 740E                    	je .L_lambda_simple_params_end_0080
 20654 0000F0B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20655 0000F0BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20656 0000F0C0 48FFC6                  	inc rsi
 20657 0000F0C3 EBEC                    	jmp .L_lambda_simple_params_loop_0080
 20658                                  .L_lambda_simple_params_end_0080:
 20659 0000F0C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20660 0000F0C8 4889C3                  	mov rbx, rax
 20661 0000F0CB 58                      	pop rax
 20662 0000F0CC C60004                  	mov byte [rax], T_closure
 20663 0000F0CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20664 0000F0D3 48C74009[E0F00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 20665 0000F0DB E9E3000000              	jmp .L_lambda_simple_end_0080
 20666                                  .L_lambda_simple_code_0080:	; lambda-simple body
 20667 0000F0E0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20668 0000F0E6 740B                    	je .L_lambda_simple_arity_check_ok_0080
 20669 0000F0E8 FF742410                	push qword [rsp + 8 * 2]
 20670 0000F0EC 6A02                    	push 2
 20671 0000F0EE E9516F0000              	jmp L_error_incorrect_arity_simple
 20672                                  .L_lambda_simple_arity_check_ok_0080:
 20673 0000F0F3 C8000000                	enter 0, 0
 20674                                  	; preparing a non-tail-call
 20675 0000F0F7 488B4528                	mov rax, PARAM(1)	; param len2
 20676 0000F0FB 50                      	push rax
 20677 0000F0FC 488B4520                	mov rax, PARAM(0)	; param len1
 20678 0000F100 50                      	push rax
 20679 0000F101 6A02                    	push 2	; arg count
 20680 0000F103 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 20681 0000F10B 803805                  	cmp byte [rax], T_undefined
 20682 0000F10E 0F844A6E0000            	je L_error_fvar_undefined
 20683 0000F114 803804                  	cmp byte [rax], T_closure
 20684 0000F117 0F85C56E0000            	jne L_error_non_closure
 20685 0000F11D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20686 0000F120 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20687 0000F123 483D[02000000]          	cmp rax, sob_boolean_false
 20688 0000F129 0F8486000000            	je .L_if_else_005e
 20689                                  	; Setting up for a tail-call
 20690 0000F12F 48B8-                   	mov rax, L_constants + 2149
 20690 0000F131 [6508000000000000] 
 20691 0000F139 50                      	push rax
 20692 0000F13A 488B4510                	mov rax, ENV
 20693 0000F13E 488B00                  	mov rax, qword [rax + 8 * 0]
 20694 0000F141 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20695 0000F144 50                      	push rax
 20696 0000F145 488B4510                	mov rax, ENV
 20697 0000F149 488B00                  	mov rax, qword [rax + 8 * 0]
 20698 0000F14C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20699 0000F150 50                      	push rax
 20700 0000F151 488B4520                	mov rax, PARAM(0)	; param len1
 20701 0000F155 50                      	push rax
 20702 0000F156 6A04                    	push 4
 20703 0000F158 488B4510                	mov rax, ENV
 20704 0000F15C 488B4008                	mov rax, qword [rax + 8 * 1]
 20705 0000F160 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20706 0000F163 488B00                  	mov rax, qword [rax]
 20707 0000F166 803804                  	cmp byte [rax], T_closure
 20708 0000F169 0F85736E0000            	jne L_error_non_closure
 20709 0000F16F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20710 0000F172 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20711 0000F176 4C8B4D00                	mov r9, qword [rbp]
 20712 0000F17A 4150                    	push r8
 20713 0000F17C 4151                    	push r9
 20714 0000F17E 41BA08000000            	mov r10, 4 + 4
 20715 0000F184 4C8B5D18                	mov r11, COUNT
 20716 0000F188 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20717 0000F18D 4C8D65F8                	lea r12, [rbp - 8]
 20718                                  .L_tc_recycle_frame_loop_00af:
 20719 0000F191 4983FA00                	cmp r10, 0
 20720 0000F195 7414                    	je .L_tc_recycle_frame_done_00af
 20721 0000F197 4D8B2C24                	mov r13, qword [r12]
 20722 0000F19B 4D892B                  	mov qword [r11], r13
 20723 0000F19E 49FFCA                  	dec r10
 20724 0000F1A1 4983EB08                	sub r11, 8
 20725 0000F1A5 4983EC08                	sub r12, 8
 20726 0000F1A9 EBE6                    	jmp .L_tc_recycle_frame_loop_00af
 20727                                  .L_tc_recycle_frame_done_00af:
 20728 0000F1AB 498D6308                	lea rsp, [r11 + 8]
 20729 0000F1AF 5D                      	pop rbp
 20730 0000F1B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20731 0000F1B3 EB0A                    	jmp .L_if_end_005e
 20732                                  .L_if_else_005e:
 20733 0000F1B5 48B8-                   	mov rax, L_constants + 2
 20733 0000F1B7 [0200000000000000] 
 20734                                  .L_if_end_005e:
 20735 0000F1BF C9                      	leave
 20736 0000F1C0 C22000                  	ret AND_KILL_FRAME(2)
 20737                                  .L_lambda_simple_end_0080:	; new closure is in rax
 20738 0000F1C3 803804                  	cmp byte [rax], T_closure
 20739 0000F1C6 0F85166E0000            	jne L_error_non_closure
 20740 0000F1CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 20741 0000F1CF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20742 0000F1D3 4C8B4D00                	mov r9, qword [rbp]
 20743 0000F1D7 4150                    	push r8
 20744 0000F1D9 4151                    	push r9
 20745 0000F1DB 41BA06000000            	mov r10, 2 + 4
 20746 0000F1E1 4C8B5D18                	mov r11, COUNT
 20747 0000F1E5 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20748 0000F1EA 4C8D65F8                	lea r12, [rbp - 8]
 20749                                  .L_tc_recycle_frame_loop_00b0:
 20750 0000F1EE 4983FA00                	cmp r10, 0
 20751 0000F1F2 7414                    	je .L_tc_recycle_frame_done_00b0
 20752 0000F1F4 4D8B2C24                	mov r13, qword [r12]
 20753 0000F1F8 4D892B                  	mov qword [r11], r13
 20754 0000F1FB 49FFCA                  	dec r10
 20755 0000F1FE 4983EB08                	sub r11, 8
 20756 0000F202 4983EC08                	sub r12, 8
 20757 0000F206 EBE6                    	jmp .L_tc_recycle_frame_loop_00b0
 20758                                  .L_tc_recycle_frame_done_00b0:
 20759 0000F208 498D6308                	lea rsp, [r11 + 8]
 20760 0000F20C 5D                      	pop rbp
 20761 0000F20D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20762 0000F210 C9                      	leave
 20763 0000F211 C22000                  	ret AND_KILL_FRAME(2)
 20764                                  .L_lambda_simple_end_007f:	; new closure is in rax
 20765 0000F214 50                      	push rax
 20766 0000F215 6A01                    	push 1	; arg count
 20767 0000F217 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20768 0000F21C E86A6E0000              	call malloc
 20769 0000F221 50                      	push rax
 20770 0000F222 BF08000000              	mov rdi, 8 * 1	; new rib
 20771 0000F227 E85F6E0000              	call malloc
 20772 0000F22C 50                      	push rax
 20773 0000F22D BF18000000              	mov rdi, 8 * 3	; extended env
 20774 0000F232 E8546E0000              	call malloc
 20775 0000F237 488B7D10                	mov rdi, ENV
 20776 0000F23B BE00000000              	mov rsi, 0
 20777 0000F240 BA01000000              	mov rdx, 1
 20778                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 20779 0000F245 4883FE02                	cmp rsi, 2
 20780 0000F249 7410                    	je .L_lambda_simple_env_end_0081
 20781 0000F24B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20782 0000F24F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20783 0000F253 48FFC6                  	inc rsi
 20784 0000F256 48FFC2                  	inc rdx
 20785 0000F259 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 20786                                  .L_lambda_simple_env_end_0081:
 20787 0000F25B 5B                      	pop rbx
 20788 0000F25C BE00000000              	mov rsi, 0
 20789                                  .L_lambda_simple_params_loop_0081:	; copy params
 20790 0000F261 4883FE01                	cmp rsi, 1
 20791 0000F265 740E                    	je .L_lambda_simple_params_end_0081
 20792 0000F267 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20793 0000F26C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20794 0000F270 48FFC6                  	inc rsi
 20795 0000F273 EBEC                    	jmp .L_lambda_simple_params_loop_0081
 20796                                  .L_lambda_simple_params_end_0081:
 20797 0000F275 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20798 0000F278 4889C3                  	mov rbx, rax
 20799 0000F27B 58                      	pop rax
 20800 0000F27C C60004                  	mov byte [rax], T_closure
 20801 0000F27F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20802 0000F283 48C74009[90F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 20803 0000F28B E903050000              	jmp .L_lambda_simple_end_0081
 20804                                  .L_lambda_simple_code_0081:	; lambda-simple body
 20805 0000F290 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20806 0000F296 740B                    	je .L_lambda_simple_arity_check_ok_0081
 20807 0000F298 FF742410                	push qword [rsp + 8 * 2]
 20808 0000F29C 6A01                    	push 1
 20809 0000F29E E9A16D0000              	jmp L_error_incorrect_arity_simple
 20810                                  .L_lambda_simple_arity_check_ok_0081:
 20811 0000F2A3 C8000000                	enter 0, 0
 20812                                  	; Setting up for a tail-call
 20813 0000F2A7 48B8-                   	mov rax, L_constants + 1993
 20813 0000F2A9 [C907000000000000] 
 20814 0000F2B1 50                      	push rax
 20815 0000F2B2 6A01                    	push 1
 20816 0000F2B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20817 0000F2B9 E8CD6D0000              	call malloc
 20818 0000F2BE 50                      	push rax
 20819 0000F2BF BF08000000              	mov rdi, 8 * 1	; new rib
 20820 0000F2C4 E8C26D0000              	call malloc
 20821 0000F2C9 50                      	push rax
 20822 0000F2CA BF20000000              	mov rdi, 8 * 4	; extended env
 20823 0000F2CF E8B76D0000              	call malloc
 20824 0000F2D4 488B7D10                	mov rdi, ENV
 20825 0000F2D8 BE00000000              	mov rsi, 0
 20826 0000F2DD BA01000000              	mov rdx, 1
 20827                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 20828 0000F2E2 4883FE03                	cmp rsi, 3
 20829 0000F2E6 7410                    	je .L_lambda_simple_env_end_0082
 20830 0000F2E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20831 0000F2EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20832 0000F2F0 48FFC6                  	inc rsi
 20833 0000F2F3 48FFC2                  	inc rdx
 20834 0000F2F6 EBEA                    	jmp .L_lambda_simple_env_loop_0082
 20835                                  .L_lambda_simple_env_end_0082:
 20836 0000F2F8 5B                      	pop rbx
 20837 0000F2F9 BE00000000              	mov rsi, 0
 20838                                  .L_lambda_simple_params_loop_0082:	; copy params
 20839 0000F2FE 4883FE01                	cmp rsi, 1
 20840 0000F302 740E                    	je .L_lambda_simple_params_end_0082
 20841 0000F304 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20842 0000F309 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20843 0000F30D 48FFC6                  	inc rsi
 20844 0000F310 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 20845                                  .L_lambda_simple_params_end_0082:
 20846 0000F312 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20847 0000F315 4889C3                  	mov rbx, rax
 20848 0000F318 58                      	pop rax
 20849 0000F319 C60004                  	mov byte [rax], T_closure
 20850 0000F31C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20851 0000F320 48C74009[2DF30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 20852 0000F328 E915040000              	jmp .L_lambda_simple_end_0082
 20853                                  .L_lambda_simple_code_0082:	; lambda-simple body
 20854 0000F32D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20855 0000F333 740B                    	je .L_lambda_simple_arity_check_ok_0082
 20856 0000F335 FF742410                	push qword [rsp + 8 * 2]
 20857 0000F339 6A01                    	push 1
 20858 0000F33B E9046D0000              	jmp L_error_incorrect_arity_simple
 20859                                  .L_lambda_simple_arity_check_ok_0082:
 20860 0000F340 C8000000                	enter 0, 0
 20861 0000F344 BF08000000              	mov rdi, 8 * 1
 20862 0000F349 E83D6D0000              	call malloc
 20863 0000F34E 488B5D20                	mov rbx, PARAM(0)
 20864 0000F352 488918                  	mov qword [rax], rbx
 20865 0000F355 48894520                	mov PARAM(0), rax
 20866 0000F359 48B8-                   	mov rax, sob_void
 20866 0000F35B [0000000000000000] 
 20867                                  
 20868                                  	; preparing a non-tail-call
 20869 0000F363 6A00                    	push 0	; arg count
 20870 0000F365 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20871 0000F36A E81C6D0000              	call malloc
 20872 0000F36F 50                      	push rax
 20873 0000F370 BF08000000              	mov rdi, 8 * 1	; new rib
 20874 0000F375 E8116D0000              	call malloc
 20875 0000F37A 50                      	push rax
 20876 0000F37B BF28000000              	mov rdi, 8 * 5	; extended env
 20877 0000F380 E8066D0000              	call malloc
 20878 0000F385 488B7D10                	mov rdi, ENV
 20879 0000F389 BE00000000              	mov rsi, 0
 20880 0000F38E BA01000000              	mov rdx, 1
 20881                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 20882 0000F393 4883FE04                	cmp rsi, 4
 20883 0000F397 7410                    	je .L_lambda_simple_env_end_0083
 20884 0000F399 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20885 0000F39D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20886 0000F3A1 48FFC6                  	inc rsi
 20887 0000F3A4 48FFC2                  	inc rdx
 20888 0000F3A7 EBEA                    	jmp .L_lambda_simple_env_loop_0083
 20889                                  .L_lambda_simple_env_end_0083:
 20890 0000F3A9 5B                      	pop rbx
 20891 0000F3AA BE00000000              	mov rsi, 0
 20892                                  .L_lambda_simple_params_loop_0083:	; copy params
 20893 0000F3AF 4883FE01                	cmp rsi, 1
 20894 0000F3B3 740E                    	je .L_lambda_simple_params_end_0083
 20895 0000F3B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20896 0000F3BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20897 0000F3BE 48FFC6                  	inc rsi
 20898 0000F3C1 EBEC                    	jmp .L_lambda_simple_params_loop_0083
 20899                                  .L_lambda_simple_params_end_0083:
 20900 0000F3C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20901 0000F3C6 4889C3                  	mov rbx, rax
 20902 0000F3C9 58                      	pop rax
 20903 0000F3CA C60004                  	mov byte [rax], T_closure
 20904 0000F3CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20905 0000F3D1 48C74009[DEF30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 20906 0000F3D9 E95B010000              	jmp .L_lambda_simple_end_0083
 20907                                  .L_lambda_simple_code_0083:	; lambda-simple body
 20908 0000F3DE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20909 0000F3E4 740B                    	je .L_lambda_simple_arity_check_ok_0083
 20910 0000F3E6 FF742410                	push qword [rsp + 8 * 2]
 20911 0000F3EA 6A02                    	push 2
 20912 0000F3EC E9536C0000              	jmp L_error_incorrect_arity_simple
 20913                                  .L_lambda_simple_arity_check_ok_0083:
 20914 0000F3F1 C8000000                	enter 0, 0
 20915                                  	; preparing a non-tail-call
 20916 0000F3F5 488B4528                	mov rax, PARAM(1)	; param strs
 20917 0000F3F9 50                      	push rax
 20918 0000F3FA 6A01                    	push 1	; arg count
 20919 0000F3FC 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 20920 0000F404 803805                  	cmp byte [rax], T_undefined
 20921 0000F407 0F84516B0000            	je L_error_fvar_undefined
 20922 0000F40D 803804                  	cmp byte [rax], T_closure
 20923 0000F410 0F85CC6B0000            	jne L_error_non_closure
 20924 0000F416 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20925 0000F419 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20926 0000F41C 483D[02000000]          	cmp rax, sob_boolean_false
 20927 0000F422 0F850D010000            	jne .L_or_end_000d
 20928                                  
 20929                                  	; preparing a non-tail-call
 20930                                  	; preparing a non-tail-call
 20931 0000F428 488B4528                	mov rax, PARAM(1)	; param strs
 20932 0000F42C 50                      	push rax
 20933 0000F42D 6A01                    	push 1	; arg count
 20934 0000F42F 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 20935 0000F437 803805                  	cmp byte [rax], T_undefined
 20936 0000F43A 0F841E6B0000            	je L_error_fvar_undefined
 20937 0000F440 803804                  	cmp byte [rax], T_closure
 20938 0000F443 0F85996B0000            	jne L_error_non_closure
 20939 0000F449 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20940 0000F44C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20941 0000F44F 50                      	push rax
 20942 0000F450 488B4520                	mov rax, PARAM(0)	; param str
 20943 0000F454 50                      	push rax
 20944 0000F455 6A02                    	push 2	; arg count
 20945 0000F457 488B4510                	mov rax, ENV
 20946 0000F45B 488B4008                	mov rax, qword [rax + 8 * 1]
 20947 0000F45F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20948 0000F462 803804                  	cmp byte [rax], T_closure
 20949 0000F465 0F85776B0000            	jne L_error_non_closure
 20950 0000F46B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20951 0000F46E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20952 0000F471 483D[02000000]          	cmp rax, sob_boolean_false
 20953 0000F477 0F84AE000000            	je .L_if_else_005f
 20954                                  	; Setting up for a tail-call
 20955                                  	; preparing a non-tail-call
 20956 0000F47D 488B4528                	mov rax, PARAM(1)	; param strs
 20957 0000F481 50                      	push rax
 20958 0000F482 6A01                    	push 1	; arg count
 20959 0000F484 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 20960 0000F48C 803805                  	cmp byte [rax], T_undefined
 20961 0000F48F 0F84C96A0000            	je L_error_fvar_undefined
 20962 0000F495 803804                  	cmp byte [rax], T_closure
 20963 0000F498 0F85446B0000            	jne L_error_non_closure
 20964 0000F49E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20965 0000F4A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20966 0000F4A4 50                      	push rax
 20967                                  	; preparing a non-tail-call
 20968 0000F4A5 488B4528                	mov rax, PARAM(1)	; param strs
 20969 0000F4A9 50                      	push rax
 20970 0000F4AA 6A01                    	push 1	; arg count
 20971 0000F4AC 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 20972 0000F4B4 803805                  	cmp byte [rax], T_undefined
 20973 0000F4B7 0F84A16A0000            	je L_error_fvar_undefined
 20974 0000F4BD 803804                  	cmp byte [rax], T_closure
 20975 0000F4C0 0F851C6B0000            	jne L_error_non_closure
 20976 0000F4C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20977 0000F4C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20978 0000F4CC 50                      	push rax
 20979 0000F4CD 6A02                    	push 2
 20980 0000F4CF 488B4510                	mov rax, ENV
 20981 0000F4D3 488B00                  	mov rax, qword [rax + 8 * 0]
 20982 0000F4D6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20983 0000F4D9 488B00                  	mov rax, qword [rax]
 20984 0000F4DC 803804                  	cmp byte [rax], T_closure
 20985 0000F4DF 0F85FD6A0000            	jne L_error_non_closure
 20986 0000F4E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20987 0000F4E8 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 20988 0000F4EC 4C8B4D00                	mov r9, qword [rbp]
 20989 0000F4F0 4150                    	push r8
 20990 0000F4F2 4151                    	push r9
 20991 0000F4F4 41BA06000000            	mov r10, 2 + 4
 20992 0000F4FA 4C8B5D18                	mov r11, COUNT
 20993 0000F4FE 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 20994 0000F503 4C8D65F8                	lea r12, [rbp - 8]
 20995                                  .L_tc_recycle_frame_loop_00b1:
 20996 0000F507 4983FA00                	cmp r10, 0
 20997 0000F50B 7414                    	je .L_tc_recycle_frame_done_00b1
 20998 0000F50D 4D8B2C24                	mov r13, qword [r12]
 20999 0000F511 4D892B                  	mov qword [r11], r13
 21000 0000F514 49FFCA                  	dec r10
 21001 0000F517 4983EB08                	sub r11, 8
 21002 0000F51B 4983EC08                	sub r12, 8
 21003 0000F51F EBE6                    	jmp .L_tc_recycle_frame_loop_00b1
 21004                                  .L_tc_recycle_frame_done_00b1:
 21005 0000F521 498D6308                	lea rsp, [r11 + 8]
 21006 0000F525 5D                      	pop rbp
 21007 0000F526 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21008 0000F529 EB0A                    	jmp .L_if_end_005f
 21009                                  .L_if_else_005f:
 21010 0000F52B 48B8-                   	mov rax, L_constants + 2
 21010 0000F52D [0200000000000000] 
 21011                                  .L_if_end_005f:
 21012                                  .L_or_end_000d:
 21013 0000F535 C9                      	leave
 21014 0000F536 C22000                  	ret AND_KILL_FRAME(2)
 21015                                  .L_lambda_simple_end_0083:	; new closure is in rax
 21016 0000F539 803804                  	cmp byte [rax], T_closure
 21017 0000F53C 0F85A06A0000            	jne L_error_non_closure
 21018 0000F542 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21019 0000F545 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21020 0000F548 50                      	push rax
 21021 0000F549 488B4520                	mov rax, PARAM(0)	; param run
 21022 0000F54D 8F00                    	pop qword [rax]
 21023 0000F54F 48B8-                   	mov rax, sob_void
 21023 0000F551 [0000000000000000] 
 21024                                  
 21025 0000F559 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21026 0000F55E E8286B0000              	call malloc
 21027 0000F563 50                      	push rax
 21028 0000F564 BF08000000              	mov rdi, 8 * 1	; new rib
 21029 0000F569 E81D6B0000              	call malloc
 21030 0000F56E 50                      	push rax
 21031 0000F56F BF28000000              	mov rdi, 8 * 5	; extended env
 21032 0000F574 E8126B0000              	call malloc
 21033 0000F579 488B7D10                	mov rdi, ENV
 21034 0000F57D BE00000000              	mov rsi, 0
 21035 0000F582 BA01000000              	mov rdx, 1
 21036                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 21037 0000F587 4883FE04                	cmp rsi, 4
 21038 0000F58B 7410                    	je .L_lambda_opt_env_end_0013
 21039 0000F58D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21040 0000F591 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21041 0000F595 48FFC6                  	inc rsi
 21042 0000F598 48FFC2                  	inc rdx
 21043 0000F59B EBEA                    	jmp .L_lambda_opt_env_loop_0013
 21044                                  .L_lambda_opt_env_end_0013:
 21045 0000F59D 5B                      	pop rbx
 21046 0000F59E BE00000000              	mov rsi, 0
 21047                                  .L_lambda_opt_params_loop_0013:	; copy params
 21048 0000F5A3 4883FE01                	cmp rsi, 1
 21049 0000F5A7 740E                    	je .L_lambda_opt_params_end_0013
 21050 0000F5A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21051 0000F5AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21052 0000F5B2 48FFC6                  	inc rsi
 21053 0000F5B5 EBEC                    	jmp .L_lambda_opt_params_loop_0013
 21054                                  .L_lambda_opt_params_end_0013:
 21055 0000F5B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21056 0000F5BA 4889C3                  	mov rbx, rax
 21057 0000F5BD 58                      	pop rax
 21058 0000F5BE C60004                  	mov byte [rax], T_closure
 21059 0000F5C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21060 0000F5C5 48C74009[D2F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 21061 0000F5CD E96C010000              	jmp .L_lambda_opt_end_0013
 21062                                  .L_lambda_opt_code_0013:
 21063 0000F5D2 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 21064 0000F5D7 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 21065 0000F5DB 7407                    	je .L_lambda_opt_arity_check_exact_0013	; Jump if arity matches
 21066 0000F5DD 7F4C                    	jg .L_lambda_opt_arity_check_more_0013	; Jump if more arguments passed
 21067 0000F5DF E9746A0000              	jmp L_error_incorrect_arity_opt
 21068                                  .L_lambda_opt_arity_check_exact_0013:
 21069 0000F5E4 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 21070 0000F5E7 4983C603                	add r14, 3 ; add 3 first stack values
 21071 0000F5EB 41BF00000000            	mov r15, 0 ; r15 = index
 21072 0000F5F1 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 21073 0000F5F5 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 21074 0000F5FD EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 21075                                  .L_lambda_opt_stack_shrink_loop_0013:
 21076 0000F5FF 4983FE00                	cmp r14, 0
 21077 0000F603 7E11                    	jle .L_make_lambda_opt_exact_finish_0013
 21078 0000F605 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 21079 0000F60A 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 21080 0000F60E 49FFCE                  	dec r14 ; next loop value
 21081 0000F611 49FFC7                  	inc r15 ; update i
 21082 0000F614 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 21083                                  .L_make_lambda_opt_exact_finish_0013:
 21084 0000F616 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 21085 0000F61E 49FFC2                  	inc r10
 21086 0000F621 4C89542410              	mov qword [rsp + 8 * 2], r10
 21087 0000F626 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0013
 21088                                  .L_lambda_opt_arity_check_more_0013:
 21089 0000F62B 4D89D6                  	mov r14, r10 ; r14 = num args
 21090 0000F62E 4D89D7                  	mov r15, r10 ; r15 = num args
 21091 0000F631 41B901000000            	mov r9, 1; r9 = number of params 
 21092 0000F637 4D29CE                  	sub r14, r9 ; r14 = extra args
 21093 0000F63A 4D01F1                  	add r9, r14 ; r9 = num args
 21094 0000F63D 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 21094 0000F63F [0100000000000000] 
 21095 0000F647 EB00                    	jmp .L_make_lambda_opt_arg_list_0013
 21096                                  .L_make_lambda_opt_arg_list_0013:
 21097 0000F649 4983FE00                	cmp r14, 0
 21098 0000F64D 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0013
 21099 0000F64F 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 21100 0000F654 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 21101 0000F657 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 21102 0000F65D E8296A0000              	call malloc                         ; Allocate memory, result in rax
 21103 0000F662 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 21104 0000F665 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 21105 0000F669 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 21106 0000F66D 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 21107 0000F670 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 21108 0000F673 49FFC9                  	dec r9                              ; args index minus 1
 21109 0000F676 49FFCE                  	dec r14                             ; next iteration
 21110 0000F679 EBCE                    	jmp .L_make_lambda_opt_arg_list_0013
 21111                                  .L_make_lambda_opt_stack_fixed_0013:
 21112 0000F67B 4D89FE                  	mov r14, r15 ; r14 = num args
 21113 0000F67E 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 21114 0000F681 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 21115 0000F685 41BA01000000            	mov r10, 1; r10 = num of params
 21116 0000F68B 4D29D6                  	sub r14, r10 ; r14 = extra args
 21117 0000F68E 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 21118 0000F691 49FFCE                  	dec r14 ; how much we need to change stack wise?
 21119 0000F694 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 21120 0000F699 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0013
 21121                                  .L_lambda_opt_stack_shrink_loop_more_0013:
 21122 0000F69B 4983F800                	cmp r8, 0
 21123 0000F69F 7E15                    	jle .L_make_lambda_opt_more_finish_0013
 21124 0000F6A1 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 21125 0000F6A5 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 21126 0000F6A9 4D8D26                  	lea r12, [r14]
 21127 0000F6AC 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 21128 0000F6B1 49FFC8                  	dec r8 ; next iteration
 21129 0000F6B4 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0013
 21130                                  .L_make_lambda_opt_more_finish_0013:
 21131 0000F6B6 4D89F8                  	mov r8, r15 ; num of args
 21132 0000F6B9 41BA01000000            	mov r10, 1
 21133 0000F6BF 4D29D0                  	sub r8, r10 ; num of new args
 21134 0000F6C2 49FFC0                  	inc r8
 21135 0000F6C5 4C89442420              	mov qword [rsp + 8 * 4], r8
 21136 0000F6CA 4883C410                	add rsp, 8 * 2  ; 
 21137 0000F6CE EB00                    	jmp .L_lambda_opt_stack_adjusted_0013
 21138                                  .L_lambda_opt_stack_adjusted_0013:
 21139 0000F6D0 C8000000                	enter 0, 0
 21140                                  	; Setting up for a tail-call
 21141 0000F6D4 488B4520                	mov rax, PARAM(0)	; param str
 21142 0000F6D8 50                      	push rax
 21143 0000F6D9 488B4528                	mov rax, PARAM(1)	; param strs
 21144 0000F6DD 50                      	push rax
 21145 0000F6DE 6A02                    	push 2
 21146 0000F6E0 488B4510                	mov rax, ENV
 21147 0000F6E4 488B00                  	mov rax, qword [rax + 8 * 0]
 21148 0000F6E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21149 0000F6EA 488B00                  	mov rax, qword [rax]
 21150 0000F6ED 803804                  	cmp byte [rax], T_closure
 21151 0000F6F0 0F85EC680000            	jne L_error_non_closure
 21152 0000F6F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21153 0000F6F9 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21154 0000F6FD 4C8B4D00                	mov r9, qword [rbp]
 21155 0000F701 4150                    	push r8
 21156 0000F703 4151                    	push r9
 21157 0000F705 41BA06000000            	mov r10, 2 + 4
 21158 0000F70B 4C8B5D18                	mov r11, COUNT
 21159 0000F70F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21160 0000F714 4C8D65F8                	lea r12, [rbp - 8]
 21161                                  .L_tc_recycle_frame_loop_00b2:
 21162 0000F718 4983FA00                	cmp r10, 0
 21163 0000F71C 7414                    	je .L_tc_recycle_frame_done_00b2
 21164 0000F71E 4D8B2C24                	mov r13, qword [r12]
 21165 0000F722 4D892B                  	mov qword [r11], r13
 21166 0000F725 49FFCA                  	dec r10
 21167 0000F728 4983EB08                	sub r11, 8
 21168 0000F72C 4983EC08                	sub r12, 8
 21169 0000F730 EBE6                    	jmp .L_tc_recycle_frame_loop_00b2
 21170                                  .L_tc_recycle_frame_done_00b2:
 21171 0000F732 498D6308                	lea rsp, [r11 + 8]
 21172 0000F736 5D                      	pop rbp
 21173 0000F737 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21174 0000F73A C9                      	leave
 21175 0000F73B C21800                  	ret AND_KILL_FRAME(1)
 21176                                  .L_lambda_opt_end_0013:	; new closure is in rax
 21177 0000F73E C9                      	leave
 21178 0000F73F C21800                  	ret AND_KILL_FRAME(1)
 21179                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21180 0000F742 803804                  	cmp byte [rax], T_closure
 21181 0000F745 0F8597680000            	jne L_error_non_closure
 21182 0000F74B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21183 0000F74E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21184 0000F752 4C8B4D00                	mov r9, qword [rbp]
 21185 0000F756 4150                    	push r8
 21186 0000F758 4151                    	push r9
 21187 0000F75A 41BA05000000            	mov r10, 1 + 4
 21188 0000F760 4C8B5D18                	mov r11, COUNT
 21189 0000F764 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21190 0000F769 4C8D65F8                	lea r12, [rbp - 8]
 21191                                  .L_tc_recycle_frame_loop_00b3:
 21192 0000F76D 4983FA00                	cmp r10, 0
 21193 0000F771 7414                    	je .L_tc_recycle_frame_done_00b3
 21194 0000F773 4D8B2C24                	mov r13, qword [r12]
 21195 0000F777 4D892B                  	mov qword [r11], r13
 21196 0000F77A 49FFCA                  	dec r10
 21197 0000F77D 4983EB08                	sub r11, 8
 21198 0000F781 4983EC08                	sub r12, 8
 21199 0000F785 EBE6                    	jmp .L_tc_recycle_frame_loop_00b3
 21200                                  .L_tc_recycle_frame_done_00b3:
 21201 0000F787 498D6308                	lea rsp, [r11 + 8]
 21202 0000F78B 5D                      	pop rbp
 21203 0000F78C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21204 0000F78F C9                      	leave
 21205 0000F790 C21800                  	ret AND_KILL_FRAME(1)
 21206                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21207 0000F793 803804                  	cmp byte [rax], T_closure
 21208 0000F796 0F8546680000            	jne L_error_non_closure
 21209 0000F79C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21210 0000F79F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21211 0000F7A2 C9                      	leave
 21212 0000F7A3 C21800                  	ret AND_KILL_FRAME(1)
 21213                                  .L_lambda_simple_end_007d:	; new closure is in rax
 21214 0000F7A6 803804                  	cmp byte [rax], T_closure
 21215 0000F7A9 0F8533680000            	jne L_error_non_closure
 21216 0000F7AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21217 0000F7B2 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21218 0000F7B6 4C8B4D00                	mov r9, qword [rbp]
 21219 0000F7BA 4150                    	push r8
 21220 0000F7BC 4151                    	push r9
 21221 0000F7BE 41BA05000000            	mov r10, 1 + 4
 21222 0000F7C4 4C8B5D18                	mov r11, COUNT
 21223 0000F7C8 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21224 0000F7CD 4C8D65F8                	lea r12, [rbp - 8]
 21225                                  .L_tc_recycle_frame_loop_00b4:
 21226 0000F7D1 4983FA00                	cmp r10, 0
 21227 0000F7D5 7414                    	je .L_tc_recycle_frame_done_00b4
 21228 0000F7D7 4D8B2C24                	mov r13, qword [r12]
 21229 0000F7DB 4D892B                  	mov qword [r11], r13
 21230 0000F7DE 49FFCA                  	dec r10
 21231 0000F7E1 4983EB08                	sub r11, 8
 21232 0000F7E5 4983EC08                	sub r12, 8
 21233 0000F7E9 EBE6                    	jmp .L_tc_recycle_frame_loop_00b4
 21234                                  .L_tc_recycle_frame_done_00b4:
 21235 0000F7EB 498D6308                	lea rsp, [r11 + 8]
 21236 0000F7EF 5D                      	pop rbp
 21237 0000F7F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21238 0000F7F3 C9                      	leave
 21239 0000F7F4 C21800                  	ret AND_KILL_FRAME(1)
 21240                                  .L_lambda_simple_end_007c:	; new closure is in rax
 21241 0000F7F7 50                      	push rax
 21242 0000F7F8 6A01                    	push 1	; arg count
 21243 0000F7FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21244 0000F7FF E887680000              	call malloc
 21245 0000F804 50                      	push rax
 21246 0000F805 BF00000000              	mov rdi, 8 * 0	; new rib
 21247 0000F80A E87C680000              	call malloc
 21248 0000F80F 50                      	push rax
 21249 0000F810 BF08000000              	mov rdi, 8 * 1	; extended env
 21250 0000F815 E871680000              	call malloc
 21251 0000F81A 488B7D10                	mov rdi, ENV
 21252 0000F81E BE00000000              	mov rsi, 0
 21253 0000F823 BA01000000              	mov rdx, 1
 21254                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 21255 0000F828 4883FE00                	cmp rsi, 0
 21256 0000F82C 7410                    	je .L_lambda_simple_env_end_0084
 21257 0000F82E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21258 0000F832 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21259 0000F836 48FFC6                  	inc rsi
 21260 0000F839 48FFC2                  	inc rdx
 21261 0000F83C EBEA                    	jmp .L_lambda_simple_env_loop_0084
 21262                                  .L_lambda_simple_env_end_0084:
 21263 0000F83E 5B                      	pop rbx
 21264 0000F83F BE00000000              	mov rsi, 0
 21265                                  .L_lambda_simple_params_loop_0084:	; copy params
 21266 0000F844 4883FE00                	cmp rsi, 0
 21267 0000F848 740E                    	je .L_lambda_simple_params_end_0084
 21268 0000F84A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21269 0000F84F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21270 0000F853 48FFC6                  	inc rsi
 21271 0000F856 EBEC                    	jmp .L_lambda_simple_params_loop_0084
 21272                                  .L_lambda_simple_params_end_0084:
 21273 0000F858 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21274 0000F85B 4889C3                  	mov rbx, rax
 21275 0000F85E 58                      	pop rax
 21276 0000F85F C60004                  	mov byte [rax], T_closure
 21277 0000F862 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21278 0000F866 48C74009[73F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 21279 0000F86E E98D000000              	jmp .L_lambda_simple_end_0084
 21280                                  .L_lambda_simple_code_0084:	; lambda-simple body
 21281 0000F873 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21282 0000F879 740B                    	je .L_lambda_simple_arity_check_ok_0084
 21283 0000F87B FF742410                	push qword [rsp + 8 * 2]
 21284 0000F87F 6A01                    	push 1
 21285 0000F881 E9BE670000              	jmp L_error_incorrect_arity_simple
 21286                                  .L_lambda_simple_arity_check_ok_0084:
 21287 0000F886 C8000000                	enter 0, 0
 21288                                  	; preparing a non-tail-call
 21289 0000F88A 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 21290 0000F892 803805                  	cmp byte [rax], T_undefined
 21291 0000F895 0F84C3660000            	je L_error_fvar_undefined
 21292 0000F89B 50                      	push rax
 21293 0000F89C 6A01                    	push 1	; arg count
 21294 0000F89E 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21295 0000F8A2 803804                  	cmp byte [rax], T_closure
 21296 0000F8A5 0F8537670000            	jne L_error_non_closure
 21297 0000F8AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21298 0000F8AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21299 0000F8B1 48890425[0A170000]      	mov qword [free_var_137], rax
 21300 0000F8B9 48B8-                   	mov rax, sob_void
 21300 0000F8BB [0000000000000000] 
 21301                                  
 21302                                  	; preparing a non-tail-call
 21303 0000F8C3 488B0425[86120000]      	mov rax, qword [free_var_69]	; free var char-ci=?
 21304 0000F8CB 803805                  	cmp byte [rax], T_undefined
 21305 0000F8CE 0F848A660000            	je L_error_fvar_undefined
 21306 0000F8D4 50                      	push rax
 21307 0000F8D5 6A01                    	push 1	; arg count
 21308 0000F8D7 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21309 0000F8DB 803804                  	cmp byte [rax], T_closure
 21310 0000F8DE 0F85FE660000            	jne L_error_non_closure
 21311 0000F8E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21312 0000F8E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21313 0000F8EA 48890425[3E160000]      	mov qword [free_var_125], rax
 21314 0000F8F2 48B8-                   	mov rax, sob_void
 21314 0000F8F4 [0000000000000000] 
 21315 0000F8FC C9                      	leave
 21316 0000F8FD C21800                  	ret AND_KILL_FRAME(1)
 21317                                  .L_lambda_simple_end_0084:	; new closure is in rax
 21318 0000F900 803804                  	cmp byte [rax], T_closure
 21319 0000F903 0F85D9660000            	jne L_error_non_closure
 21320 0000F909 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21321 0000F90C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21322                                  
 21323 0000F90F 4889C7                  	mov rdi, rax
 21324 0000F912 E8C9690000              	call print_sexpr_if_not_void
 21325 0000F917 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21326 0000F91C E86A670000              	call malloc
 21327 0000F921 50                      	push rax
 21328 0000F922 BF00000000              	mov rdi, 8 * 0	; new rib
 21329 0000F927 E85F670000              	call malloc
 21330 0000F92C 50                      	push rax
 21331 0000F92D BF08000000              	mov rdi, 8 * 1	; extended env
 21332 0000F932 E854670000              	call malloc
 21333 0000F937 488B7D10                	mov rdi, ENV
 21334 0000F93B BE00000000              	mov rsi, 0
 21335 0000F940 BA01000000              	mov rdx, 1
 21336                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 21337 0000F945 4883FE00                	cmp rsi, 0
 21338 0000F949 7410                    	je .L_lambda_simple_env_end_0085
 21339 0000F94B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21340 0000F94F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21341 0000F953 48FFC6                  	inc rsi
 21342 0000F956 48FFC2                  	inc rdx
 21343 0000F959 EBEA                    	jmp .L_lambda_simple_env_loop_0085
 21344                                  .L_lambda_simple_env_end_0085:
 21345 0000F95B 5B                      	pop rbx
 21346 0000F95C BE00000000              	mov rsi, 0
 21347                                  .L_lambda_simple_params_loop_0085:	; copy params
 21348 0000F961 4883FE00                	cmp rsi, 0
 21349 0000F965 740E                    	je .L_lambda_simple_params_end_0085
 21350 0000F967 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21351 0000F96C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21352 0000F970 48FFC6                  	inc rsi
 21353 0000F973 EBEC                    	jmp .L_lambda_simple_params_loop_0085
 21354                                  .L_lambda_simple_params_end_0085:
 21355 0000F975 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21356 0000F978 4889C3                  	mov rbx, rax
 21357 0000F97B 58                      	pop rax
 21358 0000F97C C60004                  	mov byte [rax], T_closure
 21359 0000F97F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21360 0000F983 48C74009[90F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 21361 0000F98B E915010000              	jmp .L_lambda_simple_end_0085
 21362                                  .L_lambda_simple_code_0085:	; lambda-simple body
 21363 0000F990 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21364 0000F996 740B                    	je .L_lambda_simple_arity_check_ok_0085
 21365 0000F998 FF742410                	push qword [rsp + 8 * 2]
 21366 0000F99C 6A01                    	push 1
 21367 0000F99E E9A1660000              	jmp L_error_incorrect_arity_simple
 21368                                  .L_lambda_simple_arity_check_ok_0085:
 21369 0000F9A3 C8000000                	enter 0, 0
 21370                                  	; preparing a non-tail-call
 21371 0000F9A7 488B4520                	mov rax, PARAM(0)	; param e
 21372 0000F9AB 50                      	push rax
 21373 0000F9AC 6A01                    	push 1	; arg count
 21374 0000F9AE 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 21375 0000F9B6 803805                  	cmp byte [rax], T_undefined
 21376 0000F9B9 0F849F650000            	je L_error_fvar_undefined
 21377 0000F9BF 803804                  	cmp byte [rax], T_closure
 21378 0000F9C2 0F851A660000            	jne L_error_non_closure
 21379 0000F9C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21380 0000F9CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 21381 0000F9CE 483D[02000000]          	cmp rax, sob_boolean_false
 21382 0000F9D4 0F85C7000000            	jne .L_or_end_000e
 21383                                  
 21384                                  	; preparing a non-tail-call
 21385 0000F9DA 488B4520                	mov rax, PARAM(0)	; param e
 21386 0000F9DE 50                      	push rax
 21387 0000F9DF 6A01                    	push 1	; arg count
 21388 0000F9E1 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
 21389 0000F9E9 803805                  	cmp byte [rax], T_undefined
 21390 0000F9EC 0F846C650000            	je L_error_fvar_undefined
 21391 0000F9F2 803804                  	cmp byte [rax], T_closure
 21392 0000F9F5 0F85E7650000            	jne L_error_non_closure
 21393 0000F9FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21394 0000F9FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21395 0000FA01 483D[02000000]          	cmp rax, sob_boolean_false
 21396 0000FA07 0F848A000000            	je .L_if_else_0060
 21397                                  	; Setting up for a tail-call
 21398                                  	; preparing a non-tail-call
 21399 0000FA0D 488B4520                	mov rax, PARAM(0)	; param e
 21400 0000FA11 50                      	push rax
 21401 0000FA12 6A01                    	push 1	; arg count
 21402 0000FA14 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 21403 0000FA1C 803805                  	cmp byte [rax], T_undefined
 21404 0000FA1F 0F8439650000            	je L_error_fvar_undefined
 21405 0000FA25 803804                  	cmp byte [rax], T_closure
 21406 0000FA28 0F85B4650000            	jne L_error_non_closure
 21407 0000FA2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21408 0000FA31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21409 0000FA34 50                      	push rax
 21410 0000FA35 6A01                    	push 1
 21411 0000FA37 488B0425[62140000]      	mov rax, qword [free_var_97]	; free var list?
 21412 0000FA3F 803805                  	cmp byte [rax], T_undefined
 21413 0000FA42 0F8416650000            	je L_error_fvar_undefined
 21414 0000FA48 803804                  	cmp byte [rax], T_closure
 21415 0000FA4B 0F8591650000            	jne L_error_non_closure
 21416 0000FA51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21417 0000FA54 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21418 0000FA58 4C8B4D00                	mov r9, qword [rbp]
 21419 0000FA5C 4150                    	push r8
 21420 0000FA5E 4151                    	push r9
 21421 0000FA60 41BA05000000            	mov r10, 1 + 4
 21422 0000FA66 4C8B5D18                	mov r11, COUNT
 21423 0000FA6A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21424 0000FA6F 4C8D65F8                	lea r12, [rbp - 8]
 21425                                  .L_tc_recycle_frame_loop_00b5:
 21426 0000FA73 4983FA00                	cmp r10, 0
 21427 0000FA77 7414                    	je .L_tc_recycle_frame_done_00b5
 21428 0000FA79 4D8B2C24                	mov r13, qword [r12]
 21429 0000FA7D 4D892B                  	mov qword [r11], r13
 21430 0000FA80 49FFCA                  	dec r10
 21431 0000FA83 4983EB08                	sub r11, 8
 21432 0000FA87 4983EC08                	sub r12, 8
 21433 0000FA8B EBE6                    	jmp .L_tc_recycle_frame_loop_00b5
 21434                                  .L_tc_recycle_frame_done_00b5:
 21435 0000FA8D 498D6308                	lea rsp, [r11 + 8]
 21436 0000FA91 5D                      	pop rbp
 21437 0000FA92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21438 0000FA95 EB0A                    	jmp .L_if_end_0060
 21439                                  .L_if_else_0060:
 21440 0000FA97 48B8-                   	mov rax, L_constants + 2
 21440 0000FA99 [0200000000000000] 
 21441                                  .L_if_end_0060:
 21442                                  .L_or_end_000e:
 21443 0000FAA1 C9                      	leave
 21444 0000FAA2 C21800                  	ret AND_KILL_FRAME(1)
 21445                                  .L_lambda_simple_end_0085:	; new closure is in rax
 21446 0000FAA5 48890425[62140000]      	mov qword [free_var_97], rax
 21447 0000FAAD 48B8-                   	mov rax, sob_void
 21447 0000FAAF [0000000000000000] 
 21448                                  
 21449 0000FAB7 4889C7                  	mov rdi, rax
 21450 0000FABA E821680000              	call print_sexpr_if_not_void
 21451                                  	; preparing a non-tail-call
 21452 0000FABF 488B0425[B7140000]      	mov rax, qword [free_var_102]	; free var make-vector
 21453 0000FAC7 803805                  	cmp byte [rax], T_undefined
 21454 0000FACA 0F848E640000            	je L_error_fvar_undefined
 21455 0000FAD0 50                      	push rax
 21456 0000FAD1 6A01                    	push 1	; arg count
 21457 0000FAD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21458 0000FAD8 E8AE650000              	call malloc
 21459 0000FADD 50                      	push rax
 21460 0000FADE BF00000000              	mov rdi, 8 * 0	; new rib
 21461 0000FAE3 E8A3650000              	call malloc
 21462 0000FAE8 50                      	push rax
 21463 0000FAE9 BF08000000              	mov rdi, 8 * 1	; extended env
 21464 0000FAEE E898650000              	call malloc
 21465 0000FAF3 488B7D10                	mov rdi, ENV
 21466 0000FAF7 BE00000000              	mov rsi, 0
 21467 0000FAFC BA01000000              	mov rdx, 1
 21468                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 21469 0000FB01 4883FE00                	cmp rsi, 0
 21470 0000FB05 7410                    	je .L_lambda_simple_env_end_0086
 21471 0000FB07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21472 0000FB0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21473 0000FB0F 48FFC6                  	inc rsi
 21474 0000FB12 48FFC2                  	inc rdx
 21475 0000FB15 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 21476                                  .L_lambda_simple_env_end_0086:
 21477 0000FB17 5B                      	pop rbx
 21478 0000FB18 BE00000000              	mov rsi, 0
 21479                                  .L_lambda_simple_params_loop_0086:	; copy params
 21480 0000FB1D 4883FE00                	cmp rsi, 0
 21481 0000FB21 740E                    	je .L_lambda_simple_params_end_0086
 21482 0000FB23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21483 0000FB28 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21484 0000FB2C 48FFC6                  	inc rsi
 21485 0000FB2F EBEC                    	jmp .L_lambda_simple_params_loop_0086
 21486                                  .L_lambda_simple_params_end_0086:
 21487 0000FB31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21488 0000FB34 4889C3                  	mov rbx, rax
 21489 0000FB37 58                      	pop rax
 21490 0000FB38 C60004                  	mov byte [rax], T_closure
 21491 0000FB3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21492 0000FB3F 48C74009[4CFB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 21493 0000FB47 E914040000              	jmp .L_lambda_simple_end_0086
 21494                                  .L_lambda_simple_code_0086:	; lambda-simple body
 21495 0000FB4C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21496 0000FB52 740B                    	je .L_lambda_simple_arity_check_ok_0086
 21497 0000FB54 FF742410                	push qword [rsp + 8 * 2]
 21498 0000FB58 6A01                    	push 1
 21499 0000FB5A E9E5640000              	jmp L_error_incorrect_arity_simple
 21500                                  .L_lambda_simple_arity_check_ok_0086:
 21501 0000FB5F C8000000                	enter 0, 0
 21502 0000FB63 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21503 0000FB68 E81E650000              	call malloc
 21504 0000FB6D 50                      	push rax
 21505 0000FB6E BF08000000              	mov rdi, 8 * 1	; new rib
 21506 0000FB73 E813650000              	call malloc
 21507 0000FB78 50                      	push rax
 21508 0000FB79 BF10000000              	mov rdi, 8 * 2	; extended env
 21509 0000FB7E E808650000              	call malloc
 21510 0000FB83 488B7D10                	mov rdi, ENV
 21511 0000FB87 BE00000000              	mov rsi, 0
 21512 0000FB8C BA01000000              	mov rdx, 1
 21513                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 21514 0000FB91 4883FE01                	cmp rsi, 1
 21515 0000FB95 7410                    	je .L_lambda_opt_env_end_0014
 21516 0000FB97 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21517 0000FB9B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21518 0000FB9F 48FFC6                  	inc rsi
 21519 0000FBA2 48FFC2                  	inc rdx
 21520 0000FBA5 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 21521                                  .L_lambda_opt_env_end_0014:
 21522 0000FBA7 5B                      	pop rbx
 21523 0000FBA8 BE00000000              	mov rsi, 0
 21524                                  .L_lambda_opt_params_loop_0014:	; copy params
 21525 0000FBAD 4883FE01                	cmp rsi, 1
 21526 0000FBB1 740E                    	je .L_lambda_opt_params_end_0014
 21527 0000FBB3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21528 0000FBB8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21529 0000FBBC 48FFC6                  	inc rsi
 21530 0000FBBF EBEC                    	jmp .L_lambda_opt_params_loop_0014
 21531                                  .L_lambda_opt_params_end_0014:
 21532 0000FBC1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21533 0000FBC4 4889C3                  	mov rbx, rax
 21534 0000FBC7 58                      	pop rax
 21535 0000FBC8 C60004                  	mov byte [rax], T_closure
 21536 0000FBCB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21537 0000FBCF 48C74009[DCFB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 21538 0000FBD7 E980030000              	jmp .L_lambda_opt_end_0014
 21539                                  .L_lambda_opt_code_0014:
 21540 0000FBDC 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 21541 0000FBE1 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 21542 0000FBE5 7407                    	je .L_lambda_opt_arity_check_exact_0014	; Jump if arity matches
 21543 0000FBE7 7F4C                    	jg .L_lambda_opt_arity_check_more_0014	; Jump if more arguments passed
 21544 0000FBE9 E96A640000              	jmp L_error_incorrect_arity_opt
 21545                                  .L_lambda_opt_arity_check_exact_0014:
 21546 0000FBEE 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 21547 0000FBF1 4983C603                	add r14, 3 ; add 3 first stack values
 21548 0000FBF5 41BF00000000            	mov r15, 0 ; r15 = index
 21549 0000FBFB 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 21550 0000FBFF 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 21551 0000FC07 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21552                                  .L_lambda_opt_stack_shrink_loop_0014:
 21553 0000FC09 4983FE00                	cmp r14, 0
 21554 0000FC0D 7E11                    	jle .L_make_lambda_opt_exact_finish_0014
 21555 0000FC0F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 21556 0000FC14 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 21557 0000FC18 49FFCE                  	dec r14 ; next loop value
 21558 0000FC1B 49FFC7                  	inc r15 ; update i
 21559 0000FC1E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21560                                  .L_make_lambda_opt_exact_finish_0014:
 21561 0000FC20 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 21562 0000FC28 49FFC2                  	inc r10
 21563 0000FC2B 4C89542410              	mov qword [rsp + 8 * 2], r10
 21564 0000FC30 E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0014
 21565                                  .L_lambda_opt_arity_check_more_0014:
 21566 0000FC35 4D89D6                  	mov r14, r10 ; r14 = num args
 21567 0000FC38 4D89D7                  	mov r15, r10 ; r15 = num args
 21568 0000FC3B 41B901000000            	mov r9, 1; r9 = number of params 
 21569 0000FC41 4D29CE                  	sub r14, r9 ; r14 = extra args
 21570 0000FC44 4D01F1                  	add r9, r14 ; r9 = num args
 21571 0000FC47 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 21571 0000FC49 [0100000000000000] 
 21572 0000FC51 EB00                    	jmp .L_make_lambda_opt_arg_list_0014
 21573                                  .L_make_lambda_opt_arg_list_0014:
 21574 0000FC53 4983FE00                	cmp r14, 0
 21575 0000FC57 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0014
 21576 0000FC59 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 21577 0000FC5E 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 21578 0000FC61 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 21579 0000FC67 E81F640000              	call malloc                         ; Allocate memory, result in rax
 21580 0000FC6C C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 21581 0000FC6F 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 21582 0000FC73 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 21583 0000FC77 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 21584 0000FC7A 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 21585 0000FC7D 49FFC9                  	dec r9                              ; args index minus 1
 21586 0000FC80 49FFCE                  	dec r14                             ; next iteration
 21587 0000FC83 EBCE                    	jmp .L_make_lambda_opt_arg_list_0014
 21588                                  .L_make_lambda_opt_stack_fixed_0014:
 21589 0000FC85 4D89FE                  	mov r14, r15 ; r14 = num args
 21590 0000FC88 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 21591 0000FC8B 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 21592 0000FC8F 41BA01000000            	mov r10, 1; r10 = num of params
 21593 0000FC95 4D29D6                  	sub r14, r10 ; r14 = extra args
 21594 0000FC98 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 21595 0000FC9B 49FFCE                  	dec r14 ; how much we need to change stack wise?
 21596 0000FC9E 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 21597 0000FCA3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0014
 21598                                  .L_lambda_opt_stack_shrink_loop_more_0014:
 21599 0000FCA5 4983F800                	cmp r8, 0
 21600 0000FCA9 7E15                    	jle .L_make_lambda_opt_more_finish_0014
 21601 0000FCAB 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 21602 0000FCAF 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 21603 0000FCB3 4D8D26                  	lea r12, [r14]
 21604 0000FCB6 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 21605 0000FCBB 49FFC8                  	dec r8 ; next iteration
 21606 0000FCBE EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0014
 21607                                  .L_make_lambda_opt_more_finish_0014:
 21608 0000FCC0 4D89F8                  	mov r8, r15 ; num of args
 21609 0000FCC3 41BA01000000            	mov r10, 1
 21610 0000FCC9 4D29D0                  	sub r8, r10 ; num of new args
 21611 0000FCCC 49FFC0                  	inc r8
 21612 0000FCCF 4C89442420              	mov qword [rsp + 8 * 4], r8
 21613 0000FCD4 4883C410                	add rsp, 8 * 2  ; 
 21614 0000FCD8 EB00                    	jmp .L_lambda_opt_stack_adjusted_0014
 21615                                  .L_lambda_opt_stack_adjusted_0014:
 21616 0000FCDA C8000000                	enter 0, 0
 21617                                  	; Setting up for a tail-call
 21618                                  	; preparing a non-tail-call
 21619 0000FCDE 488B4528                	mov rax, PARAM(1)	; param xs
 21620 0000FCE2 50                      	push rax
 21621 0000FCE3 6A01                    	push 1	; arg count
 21622 0000FCE5 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 21623 0000FCED 803805                  	cmp byte [rax], T_undefined
 21624 0000FCF0 0F8468620000            	je L_error_fvar_undefined
 21625 0000FCF6 803804                  	cmp byte [rax], T_closure
 21626 0000FCF9 0F85E3620000            	jne L_error_non_closure
 21627 0000FCFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21628 0000FD02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21629 0000FD05 483D[02000000]          	cmp rax, sob_boolean_false
 21630 0000FD0B 740F                    	je .L_if_else_0063
 21631 0000FD0D 48B8-                   	mov rax, L_constants + 0
 21631 0000FD0F [0000000000000000] 
 21632 0000FD17 E9EE000000              	jmp .L_if_end_0063
 21633                                  .L_if_else_0063:
 21634                                  	; preparing a non-tail-call
 21635 0000FD1C 488B4528                	mov rax, PARAM(1)	; param xs
 21636 0000FD20 50                      	push rax
 21637 0000FD21 6A01                    	push 1	; arg count
 21638 0000FD23 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
 21639 0000FD2B 803805                  	cmp byte [rax], T_undefined
 21640 0000FD2E 0F842A620000            	je L_error_fvar_undefined
 21641 0000FD34 803804                  	cmp byte [rax], T_closure
 21642 0000FD37 0F85A5620000            	jne L_error_non_closure
 21643 0000FD3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21644 0000FD40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21645 0000FD43 483D[02000000]          	cmp rax, sob_boolean_false
 21646 0000FD49 744C                    	je .L_if_else_0061
 21647                                  	; preparing a non-tail-call
 21648                                  	; preparing a non-tail-call
 21649 0000FD4B 488B4528                	mov rax, PARAM(1)	; param xs
 21650 0000FD4F 50                      	push rax
 21651 0000FD50 6A01                    	push 1	; arg count
 21652 0000FD52 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 21653 0000FD5A 803805                  	cmp byte [rax], T_undefined
 21654 0000FD5D 0F84FB610000            	je L_error_fvar_undefined
 21655 0000FD63 803804                  	cmp byte [rax], T_closure
 21656 0000FD66 0F8576620000            	jne L_error_non_closure
 21657 0000FD6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21658 0000FD6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21659 0000FD72 50                      	push rax
 21660 0000FD73 6A01                    	push 1	; arg count
 21661 0000FD75 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 21662 0000FD7D 803805                  	cmp byte [rax], T_undefined
 21663 0000FD80 0F84D8610000            	je L_error_fvar_undefined
 21664 0000FD86 803804                  	cmp byte [rax], T_closure
 21665 0000FD89 0F8553620000            	jne L_error_non_closure
 21666 0000FD8F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21667 0000FD92 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21668 0000FD95 EB0A                    	jmp .L_if_end_0061
 21669                                  .L_if_else_0061:
 21670 0000FD97 48B8-                   	mov rax, L_constants + 2
 21670 0000FD99 [0200000000000000] 
 21671                                  .L_if_end_0061:
 21672 0000FDA1 483D[02000000]          	cmp rax, sob_boolean_false
 21673 0000FDA7 7429                    	je .L_if_else_0062
 21674                                  	; preparing a non-tail-call
 21675 0000FDA9 488B4528                	mov rax, PARAM(1)	; param xs
 21676 0000FDAD 50                      	push rax
 21677 0000FDAE 6A01                    	push 1	; arg count
 21678 0000FDB0 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 21679 0000FDB8 803805                  	cmp byte [rax], T_undefined
 21680 0000FDBB 0F849D610000            	je L_error_fvar_undefined
 21681 0000FDC1 803804                  	cmp byte [rax], T_closure
 21682 0000FDC4 0F8518620000            	jne L_error_non_closure
 21683 0000FDCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 21684 0000FDCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 21685 0000FDD0 EB38                    	jmp .L_if_end_0062
 21686                                  .L_if_else_0062:
 21687                                  	; preparing a non-tail-call
 21688 0000FDD2 48B8-                   	mov rax, L_constants + 2969
 21688 0000FDD4 [990B000000000000] 
 21689 0000FDDC 50                      	push rax
 21690 0000FDDD 48B8-                   	mov rax, L_constants + 2960
 21690 0000FDDF [900B000000000000] 
 21691 0000FDE7 50                      	push rax
 21692 0000FDE8 6A02                    	push 2	; arg count
 21693 0000FDEA 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 21694 0000FDF2 803805                  	cmp byte [rax], T_undefined
 21695 0000FDF5 0F8463610000            	je L_error_fvar_undefined
 21696 0000FDFB 803804                  	cmp byte [rax], T_closure
 21697 0000FDFE 0F85DE610000            	jne L_error_non_closure
 21698 0000FE04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21699 0000FE07 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21700                                  .L_if_end_0062:
 21701                                  .L_if_end_0063:
 21702 0000FE0A 50                      	push rax
 21703 0000FE0B 6A01                    	push 1
 21704 0000FE0D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21705 0000FE12 E874620000              	call malloc
 21706 0000FE17 50                      	push rax
 21707 0000FE18 BF08000000              	mov rdi, 8 * 1	; new rib
 21708 0000FE1D E869620000              	call malloc
 21709 0000FE22 50                      	push rax
 21710 0000FE23 BF18000000              	mov rdi, 8 * 3	; extended env
 21711 0000FE28 E85E620000              	call malloc
 21712 0000FE2D 488B7D10                	mov rdi, ENV
 21713 0000FE31 BE00000000              	mov rsi, 0
 21714 0000FE36 BA01000000              	mov rdx, 1
 21715                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 21716 0000FE3B 4883FE02                	cmp rsi, 2
 21717 0000FE3F 7410                    	je .L_lambda_simple_env_end_0087
 21718 0000FE41 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21719 0000FE45 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21720 0000FE49 48FFC6                  	inc rsi
 21721 0000FE4C 48FFC2                  	inc rdx
 21722 0000FE4F EBEA                    	jmp .L_lambda_simple_env_loop_0087
 21723                                  .L_lambda_simple_env_end_0087:
 21724 0000FE51 5B                      	pop rbx
 21725 0000FE52 BE00000000              	mov rsi, 0
 21726                                  .L_lambda_simple_params_loop_0087:	; copy params
 21727 0000FE57 4883FE01                	cmp rsi, 1
 21728 0000FE5B 740E                    	je .L_lambda_simple_params_end_0087
 21729 0000FE5D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21730 0000FE62 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21731 0000FE66 48FFC6                  	inc rsi
 21732 0000FE69 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 21733                                  .L_lambda_simple_params_end_0087:
 21734 0000FE6B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21735 0000FE6E 4889C3                  	mov rbx, rax
 21736 0000FE71 58                      	pop rax
 21737 0000FE72 C60004                  	mov byte [rax], T_closure
 21738 0000FE75 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21739 0000FE79 48C74009[86FE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 21740 0000FE81 E985000000              	jmp .L_lambda_simple_end_0087
 21741                                  .L_lambda_simple_code_0087:	; lambda-simple body
 21742 0000FE86 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21743 0000FE8C 740B                    	je .L_lambda_simple_arity_check_ok_0087
 21744 0000FE8E FF742410                	push qword [rsp + 8 * 2]
 21745 0000FE92 6A01                    	push 1
 21746 0000FE94 E9AB610000              	jmp L_error_incorrect_arity_simple
 21747                                  .L_lambda_simple_arity_check_ok_0087:
 21748 0000FE99 C8000000                	enter 0, 0
 21749                                  	; Setting up for a tail-call
 21750 0000FE9D 488B4510                	mov rax, ENV
 21751 0000FEA1 488B00                  	mov rax, qword [rax + 8 * 0]
 21752 0000FEA4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21753 0000FEA7 50                      	push rax
 21754 0000FEA8 488B4520                	mov rax, PARAM(0)	; param x
 21755 0000FEAC 50                      	push rax
 21756 0000FEAD 6A02                    	push 2
 21757 0000FEAF 488B4510                	mov rax, ENV
 21758 0000FEB3 488B4008                	mov rax, qword [rax + 8 * 1]
 21759 0000FEB7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21760 0000FEBA 803804                  	cmp byte [rax], T_closure
 21761 0000FEBD 0F851F610000            	jne L_error_non_closure
 21762 0000FEC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21763 0000FEC6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21764 0000FECA 4C8B4D00                	mov r9, qword [rbp]
 21765 0000FECE 4150                    	push r8
 21766 0000FED0 4151                    	push r9
 21767 0000FED2 41BA06000000            	mov r10, 2 + 4
 21768 0000FED8 4C8B5D18                	mov r11, COUNT
 21769 0000FEDC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21770 0000FEE1 4C8D65F8                	lea r12, [rbp - 8]
 21771                                  .L_tc_recycle_frame_loop_00b6:
 21772 0000FEE5 4983FA00                	cmp r10, 0
 21773 0000FEE9 7414                    	je .L_tc_recycle_frame_done_00b6
 21774 0000FEEB 4D8B2C24                	mov r13, qword [r12]
 21775 0000FEEF 4D892B                  	mov qword [r11], r13
 21776 0000FEF2 49FFCA                  	dec r10
 21777 0000FEF5 4983EB08                	sub r11, 8
 21778 0000FEF9 4983EC08                	sub r12, 8
 21779 0000FEFD EBE6                    	jmp .L_tc_recycle_frame_loop_00b6
 21780                                  .L_tc_recycle_frame_done_00b6:
 21781 0000FEFF 498D6308                	lea rsp, [r11 + 8]
 21782 0000FF03 5D                      	pop rbp
 21783 0000FF04 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21784 0000FF07 C9                      	leave
 21785 0000FF08 C21800                  	ret AND_KILL_FRAME(1)
 21786                                  .L_lambda_simple_end_0087:	; new closure is in rax
 21787 0000FF0B 803804                  	cmp byte [rax], T_closure
 21788 0000FF0E 0F85CE600000            	jne L_error_non_closure
 21789 0000FF14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21790 0000FF17 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 21791 0000FF1B 4C8B4D00                	mov r9, qword [rbp]
 21792 0000FF1F 4150                    	push r8
 21793 0000FF21 4151                    	push r9
 21794 0000FF23 41BA05000000            	mov r10, 1 + 4
 21795 0000FF29 4C8B5D18                	mov r11, COUNT
 21796 0000FF2D 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 21797 0000FF32 4C8D65F8                	lea r12, [rbp - 8]
 21798                                  .L_tc_recycle_frame_loop_00b7:
 21799 0000FF36 4983FA00                	cmp r10, 0
 21800 0000FF3A 7414                    	je .L_tc_recycle_frame_done_00b7
 21801 0000FF3C 4D8B2C24                	mov r13, qword [r12]
 21802 0000FF40 4D892B                  	mov qword [r11], r13
 21803 0000FF43 49FFCA                  	dec r10
 21804 0000FF46 4983EB08                	sub r11, 8
 21805 0000FF4A 4983EC08                	sub r12, 8
 21806 0000FF4E EBE6                    	jmp .L_tc_recycle_frame_loop_00b7
 21807                                  .L_tc_recycle_frame_done_00b7:
 21808 0000FF50 498D6308                	lea rsp, [r11 + 8]
 21809 0000FF54 5D                      	pop rbp
 21810 0000FF55 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21811 0000FF58 C9                      	leave
 21812 0000FF59 C21800                  	ret AND_KILL_FRAME(1)
 21813                                  .L_lambda_opt_end_0014:	; new closure is in rax
 21814 0000FF5C C9                      	leave
 21815 0000FF5D C21800                  	ret AND_KILL_FRAME(1)
 21816                                  .L_lambda_simple_end_0086:	; new closure is in rax
 21817 0000FF60 803804                  	cmp byte [rax], T_closure
 21818 0000FF63 0F8579600000            	jne L_error_non_closure
 21819 0000FF69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21820 0000FF6C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21821 0000FF6F 48890425[B7140000]      	mov qword [free_var_102], rax
 21822 0000FF77 48B8-                   	mov rax, sob_void
 21822 0000FF79 [0000000000000000] 
 21823                                  
 21824 0000FF81 4889C7                  	mov rdi, rax
 21825 0000FF84 E857630000              	call print_sexpr_if_not_void
 21826                                  	; preparing a non-tail-call
 21827 0000FF89 488B0425[95140000]      	mov rax, qword [free_var_100]	; free var make-string
 21828 0000FF91 803805                  	cmp byte [rax], T_undefined
 21829 0000FF94 0F84C45F0000            	je L_error_fvar_undefined
 21830 0000FF9A 50                      	push rax
 21831 0000FF9B 6A01                    	push 1	; arg count
 21832 0000FF9D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21833 0000FFA2 E8E4600000              	call malloc
 21834 0000FFA7 50                      	push rax
 21835 0000FFA8 BF00000000              	mov rdi, 8 * 0	; new rib
 21836 0000FFAD E8D9600000              	call malloc
 21837 0000FFB2 50                      	push rax
 21838 0000FFB3 BF08000000              	mov rdi, 8 * 1	; extended env
 21839 0000FFB8 E8CE600000              	call malloc
 21840 0000FFBD 488B7D10                	mov rdi, ENV
 21841 0000FFC1 BE00000000              	mov rsi, 0
 21842 0000FFC6 BA01000000              	mov rdx, 1
 21843                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 21844 0000FFCB 4883FE00                	cmp rsi, 0
 21845 0000FFCF 7410                    	je .L_lambda_simple_env_end_0088
 21846 0000FFD1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21847 0000FFD5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21848 0000FFD9 48FFC6                  	inc rsi
 21849 0000FFDC 48FFC2                  	inc rdx
 21850 0000FFDF EBEA                    	jmp .L_lambda_simple_env_loop_0088
 21851                                  .L_lambda_simple_env_end_0088:
 21852 0000FFE1 5B                      	pop rbx
 21853 0000FFE2 BE00000000              	mov rsi, 0
 21854                                  .L_lambda_simple_params_loop_0088:	; copy params
 21855 0000FFE7 4883FE00                	cmp rsi, 0
 21856 0000FFEB 740E                    	je .L_lambda_simple_params_end_0088
 21857 0000FFED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21858 0000FFF2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21859 0000FFF6 48FFC6                  	inc rsi
 21860 0000FFF9 EBEC                    	jmp .L_lambda_simple_params_loop_0088
 21861                                  .L_lambda_simple_params_end_0088:
 21862 0000FFFB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21863 0000FFFE 4889C3                  	mov rbx, rax
 21864 00010001 58                      	pop rax
 21865 00010002 C60004                  	mov byte [rax], T_closure
 21866 00010005 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21867 00010009 48C74009[16000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 21868 00010011 E914040000              	jmp .L_lambda_simple_end_0088
 21869                                  .L_lambda_simple_code_0088:	; lambda-simple body
 21870 00010016 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21871 0001001C 740B                    	je .L_lambda_simple_arity_check_ok_0088
 21872 0001001E FF742410                	push qword [rsp + 8 * 2]
 21873 00010022 6A01                    	push 1
 21874 00010024 E91B600000              	jmp L_error_incorrect_arity_simple
 21875                                  .L_lambda_simple_arity_check_ok_0088:
 21876 00010029 C8000000                	enter 0, 0
 21877 0001002D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21878 00010032 E854600000              	call malloc
 21879 00010037 50                      	push rax
 21880 00010038 BF08000000              	mov rdi, 8 * 1	; new rib
 21881 0001003D E849600000              	call malloc
 21882 00010042 50                      	push rax
 21883 00010043 BF10000000              	mov rdi, 8 * 2	; extended env
 21884 00010048 E83E600000              	call malloc
 21885 0001004D 488B7D10                	mov rdi, ENV
 21886 00010051 BE00000000              	mov rsi, 0
 21887 00010056 BA01000000              	mov rdx, 1
 21888                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 21889 0001005B 4883FE01                	cmp rsi, 1
 21890 0001005F 7410                    	je .L_lambda_opt_env_end_0015
 21891 00010061 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21892 00010065 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21893 00010069 48FFC6                  	inc rsi
 21894 0001006C 48FFC2                  	inc rdx
 21895 0001006F EBEA                    	jmp .L_lambda_opt_env_loop_0015
 21896                                  .L_lambda_opt_env_end_0015:
 21897 00010071 5B                      	pop rbx
 21898 00010072 BE00000000              	mov rsi, 0
 21899                                  .L_lambda_opt_params_loop_0015:	; copy params
 21900 00010077 4883FE01                	cmp rsi, 1
 21901 0001007B 740E                    	je .L_lambda_opt_params_end_0015
 21902 0001007D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21903 00010082 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21904 00010086 48FFC6                  	inc rsi
 21905 00010089 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 21906                                  .L_lambda_opt_params_end_0015:
 21907 0001008B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21908 0001008E 4889C3                  	mov rbx, rax
 21909 00010091 58                      	pop rax
 21910 00010092 C60004                  	mov byte [rax], T_closure
 21911 00010095 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21912 00010099 48C74009[A6000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 21913 000100A1 E980030000              	jmp .L_lambda_opt_end_0015
 21914                                  .L_lambda_opt_code_0015:
 21915 000100A6 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 21916 000100AB 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 21917 000100AF 7407                    	je .L_lambda_opt_arity_check_exact_0015	; Jump if arity matches
 21918 000100B1 7F4C                    	jg .L_lambda_opt_arity_check_more_0015	; Jump if more arguments passed
 21919 000100B3 E9A05F0000              	jmp L_error_incorrect_arity_opt
 21920                                  .L_lambda_opt_arity_check_exact_0015:
 21921 000100B8 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 21922 000100BB 4983C603                	add r14, 3 ; add 3 first stack values
 21923 000100BF 41BF00000000            	mov r15, 0 ; r15 = index
 21924 000100C5 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 21925 000100C9 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 21926 000100D1 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21927                                  .L_lambda_opt_stack_shrink_loop_0015:
 21928 000100D3 4983FE00                	cmp r14, 0
 21929 000100D7 7E11                    	jle .L_make_lambda_opt_exact_finish_0015
 21930 000100D9 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 21931 000100DE 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 21932 000100E2 49FFCE                  	dec r14 ; next loop value
 21933 000100E5 49FFC7                  	inc r15 ; update i
 21934 000100E8 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21935                                  .L_make_lambda_opt_exact_finish_0015:
 21936 000100EA 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 21937 000100F2 49FFC2                  	inc r10
 21938 000100F5 4C89542410              	mov qword [rsp + 8 * 2], r10
 21939 000100FA E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0015
 21940                                  .L_lambda_opt_arity_check_more_0015:
 21941 000100FF 4D89D6                  	mov r14, r10 ; r14 = num args
 21942 00010102 4D89D7                  	mov r15, r10 ; r15 = num args
 21943 00010105 41B901000000            	mov r9, 1; r9 = number of params 
 21944 0001010B 4D29CE                  	sub r14, r9 ; r14 = extra args
 21945 0001010E 4D01F1                  	add r9, r14 ; r9 = num args
 21946 00010111 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 21946 00010113 [0100000000000000] 
 21947 0001011B EB00                    	jmp .L_make_lambda_opt_arg_list_0015
 21948                                  .L_make_lambda_opt_arg_list_0015:
 21949 0001011D 4983FE00                	cmp r14, 0
 21950 00010121 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0015
 21951 00010123 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 21952 00010128 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 21953 0001012B 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 21954 00010131 E8555F0000              	call malloc                         ; Allocate memory, result in rax
 21955 00010136 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 21956 00010139 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 21957 0001013D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 21958 00010141 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 21959 00010144 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 21960 00010147 49FFC9                  	dec r9                              ; args index minus 1
 21961 0001014A 49FFCE                  	dec r14                             ; next iteration
 21962 0001014D EBCE                    	jmp .L_make_lambda_opt_arg_list_0015
 21963                                  .L_make_lambda_opt_stack_fixed_0015:
 21964 0001014F 4D89FE                  	mov r14, r15 ; r14 = num args
 21965 00010152 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 21966 00010155 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 21967 00010159 41BA01000000            	mov r10, 1; r10 = num of params
 21968 0001015F 4D29D6                  	sub r14, r10 ; r14 = extra args
 21969 00010162 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 21970 00010165 49FFCE                  	dec r14 ; how much we need to change stack wise?
 21971 00010168 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 21972 0001016D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0015
 21973                                  .L_lambda_opt_stack_shrink_loop_more_0015:
 21974 0001016F 4983F800                	cmp r8, 0
 21975 00010173 7E15                    	jle .L_make_lambda_opt_more_finish_0015
 21976 00010175 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 21977 00010179 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 21978 0001017D 4D8D26                  	lea r12, [r14]
 21979 00010180 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 21980 00010185 49FFC8                  	dec r8 ; next iteration
 21981 00010188 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0015
 21982                                  .L_make_lambda_opt_more_finish_0015:
 21983 0001018A 4D89F8                  	mov r8, r15 ; num of args
 21984 0001018D 41BA01000000            	mov r10, 1
 21985 00010193 4D29D0                  	sub r8, r10 ; num of new args
 21986 00010196 49FFC0                  	inc r8
 21987 00010199 4C89442420              	mov qword [rsp + 8 * 4], r8
 21988 0001019E 4883C410                	add rsp, 8 * 2  ; 
 21989 000101A2 EB00                    	jmp .L_lambda_opt_stack_adjusted_0015
 21990                                  .L_lambda_opt_stack_adjusted_0015:
 21991 000101A4 C8000000                	enter 0, 0
 21992                                  	; Setting up for a tail-call
 21993                                  	; preparing a non-tail-call
 21994 000101A8 488B4528                	mov rax, PARAM(1)	; param chs
 21995 000101AC 50                      	push rax
 21996 000101AD 6A01                    	push 1	; arg count
 21997 000101AF 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 21998 000101B7 803805                  	cmp byte [rax], T_undefined
 21999 000101BA 0F849E5D0000            	je L_error_fvar_undefined
 22000 000101C0 803804                  	cmp byte [rax], T_closure
 22001 000101C3 0F85195E0000            	jne L_error_non_closure
 22002 000101C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22003 000101CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22004 000101CF 483D[02000000]          	cmp rax, sob_boolean_false
 22005 000101D5 740F                    	je .L_if_else_0066
 22006 000101D7 48B8-                   	mov rax, L_constants + 4
 22006 000101D9 [0400000000000000] 
 22007 000101E1 E9EE000000              	jmp .L_if_end_0066
 22008                                  .L_if_else_0066:
 22009                                  	; preparing a non-tail-call
 22010 000101E6 488B4528                	mov rax, PARAM(1)	; param chs
 22011 000101EA 50                      	push rax
 22012 000101EB 6A01                    	push 1	; arg count
 22013 000101ED 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
 22014 000101F5 803805                  	cmp byte [rax], T_undefined
 22015 000101F8 0F84605D0000            	je L_error_fvar_undefined
 22016 000101FE 803804                  	cmp byte [rax], T_closure
 22017 00010201 0F85DB5D0000            	jne L_error_non_closure
 22018 00010207 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22019 0001020A FF5009                  	call SOB_CLOSURE_CODE(rax)
 22020 0001020D 483D[02000000]          	cmp rax, sob_boolean_false
 22021 00010213 744C                    	je .L_if_else_0064
 22022                                  	; preparing a non-tail-call
 22023                                  	; preparing a non-tail-call
 22024 00010215 488B4528                	mov rax, PARAM(1)	; param chs
 22025 00010219 50                      	push rax
 22026 0001021A 6A01                    	push 1	; arg count
 22027 0001021C 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 22028 00010224 803805                  	cmp byte [rax], T_undefined
 22029 00010227 0F84315D0000            	je L_error_fvar_undefined
 22030 0001022D 803804                  	cmp byte [rax], T_closure
 22031 00010230 0F85AC5D0000            	jne L_error_non_closure
 22032 00010236 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22033 00010239 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22034 0001023C 50                      	push rax
 22035 0001023D 6A01                    	push 1	; arg count
 22036 0001023F 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 22037 00010247 803805                  	cmp byte [rax], T_undefined
 22038 0001024A 0F840E5D0000            	je L_error_fvar_undefined
 22039 00010250 803804                  	cmp byte [rax], T_closure
 22040 00010253 0F85895D0000            	jne L_error_non_closure
 22041 00010259 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22042 0001025C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22043 0001025F EB0A                    	jmp .L_if_end_0064
 22044                                  .L_if_else_0064:
 22045 00010261 48B8-                   	mov rax, L_constants + 2
 22045 00010263 [0200000000000000] 
 22046                                  .L_if_end_0064:
 22047 0001026B 483D[02000000]          	cmp rax, sob_boolean_false
 22048 00010271 7429                    	je .L_if_else_0065
 22049                                  	; preparing a non-tail-call
 22050 00010273 488B4528                	mov rax, PARAM(1)	; param chs
 22051 00010277 50                      	push rax
 22052 00010278 6A01                    	push 1	; arg count
 22053 0001027A 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 22054 00010282 803805                  	cmp byte [rax], T_undefined
 22055 00010285 0F84D35C0000            	je L_error_fvar_undefined
 22056 0001028B 803804                  	cmp byte [rax], T_closure
 22057 0001028E 0F854E5D0000            	jne L_error_non_closure
 22058 00010294 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22059 00010297 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22060 0001029A EB38                    	jmp .L_if_end_0065
 22061                                  .L_if_else_0065:
 22062                                  	; preparing a non-tail-call
 22063 0001029C 48B8-                   	mov rax, L_constants + 3030
 22063 0001029E [D60B000000000000] 
 22064 000102A6 50                      	push rax
 22065 000102A7 48B8-                   	mov rax, L_constants + 3021
 22065 000102A9 [CD0B000000000000] 
 22066 000102B1 50                      	push rax
 22067 000102B2 6A02                    	push 2	; arg count
 22068 000102B4 488B0425[74130000]      	mov rax, qword [free_var_83]	; free var error
 22069 000102BC 803805                  	cmp byte [rax], T_undefined
 22070 000102BF 0F84995C0000            	je L_error_fvar_undefined
 22071 000102C5 803804                  	cmp byte [rax], T_closure
 22072 000102C8 0F85145D0000            	jne L_error_non_closure
 22073 000102CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22074 000102D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22075                                  .L_if_end_0065:
 22076                                  .L_if_end_0066:
 22077 000102D4 50                      	push rax
 22078 000102D5 6A01                    	push 1
 22079 000102D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22080 000102DC E8AA5D0000              	call malloc
 22081 000102E1 50                      	push rax
 22082 000102E2 BF08000000              	mov rdi, 8 * 1	; new rib
 22083 000102E7 E89F5D0000              	call malloc
 22084 000102EC 50                      	push rax
 22085 000102ED BF18000000              	mov rdi, 8 * 3	; extended env
 22086 000102F2 E8945D0000              	call malloc
 22087 000102F7 488B7D10                	mov rdi, ENV
 22088 000102FB BE00000000              	mov rsi, 0
 22089 00010300 BA01000000              	mov rdx, 1
 22090                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22091 00010305 4883FE02                	cmp rsi, 2
 22092 00010309 7410                    	je .L_lambda_simple_env_end_0089
 22093 0001030B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22094 0001030F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22095 00010313 48FFC6                  	inc rsi
 22096 00010316 48FFC2                  	inc rdx
 22097 00010319 EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22098                                  .L_lambda_simple_env_end_0089:
 22099 0001031B 5B                      	pop rbx
 22100 0001031C BE00000000              	mov rsi, 0
 22101                                  .L_lambda_simple_params_loop_0089:	; copy params
 22102 00010321 4883FE01                	cmp rsi, 1
 22103 00010325 740E                    	je .L_lambda_simple_params_end_0089
 22104 00010327 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22105 0001032C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22106 00010330 48FFC6                  	inc rsi
 22107 00010333 EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22108                                  .L_lambda_simple_params_end_0089:
 22109 00010335 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22110 00010338 4889C3                  	mov rbx, rax
 22111 0001033B 58                      	pop rax
 22112 0001033C C60004                  	mov byte [rax], T_closure
 22113 0001033F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22114 00010343 48C74009[50030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22115 0001034B E985000000              	jmp .L_lambda_simple_end_0089
 22116                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22117 00010350 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22118 00010356 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22119 00010358 FF742410                	push qword [rsp + 8 * 2]
 22120 0001035C 6A01                    	push 1
 22121 0001035E E9E15C0000              	jmp L_error_incorrect_arity_simple
 22122                                  .L_lambda_simple_arity_check_ok_0089:
 22123 00010363 C8000000                	enter 0, 0
 22124                                  	; Setting up for a tail-call
 22125 00010367 488B4510                	mov rax, ENV
 22126 0001036B 488B00                  	mov rax, qword [rax + 8 * 0]
 22127 0001036E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22128 00010371 50                      	push rax
 22129 00010372 488B4520                	mov rax, PARAM(0)	; param ch
 22130 00010376 50                      	push rax
 22131 00010377 6A02                    	push 2
 22132 00010379 488B4510                	mov rax, ENV
 22133 0001037D 488B4008                	mov rax, qword [rax + 8 * 1]
 22134 00010381 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 22135 00010384 803804                  	cmp byte [rax], T_closure
 22136 00010387 0F85555C0000            	jne L_error_non_closure
 22137 0001038D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22138 00010390 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22139 00010394 4C8B4D00                	mov r9, qword [rbp]
 22140 00010398 4150                    	push r8
 22141 0001039A 4151                    	push r9
 22142 0001039C 41BA06000000            	mov r10, 2 + 4
 22143 000103A2 4C8B5D18                	mov r11, COUNT
 22144 000103A6 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22145 000103AB 4C8D65F8                	lea r12, [rbp - 8]
 22146                                  .L_tc_recycle_frame_loop_00b8:
 22147 000103AF 4983FA00                	cmp r10, 0
 22148 000103B3 7414                    	je .L_tc_recycle_frame_done_00b8
 22149 000103B5 4D8B2C24                	mov r13, qword [r12]
 22150 000103B9 4D892B                  	mov qword [r11], r13
 22151 000103BC 49FFCA                  	dec r10
 22152 000103BF 4983EB08                	sub r11, 8
 22153 000103C3 4983EC08                	sub r12, 8
 22154 000103C7 EBE6                    	jmp .L_tc_recycle_frame_loop_00b8
 22155                                  .L_tc_recycle_frame_done_00b8:
 22156 000103C9 498D6308                	lea rsp, [r11 + 8]
 22157 000103CD 5D                      	pop rbp
 22158 000103CE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22159 000103D1 C9                      	leave
 22160 000103D2 C21800                  	ret AND_KILL_FRAME(1)
 22161                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22162 000103D5 803804                  	cmp byte [rax], T_closure
 22163 000103D8 0F85045C0000            	jne L_error_non_closure
 22164 000103DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22165 000103E1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22166 000103E5 4C8B4D00                	mov r9, qword [rbp]
 22167 000103E9 4150                    	push r8
 22168 000103EB 4151                    	push r9
 22169 000103ED 41BA05000000            	mov r10, 1 + 4
 22170 000103F3 4C8B5D18                	mov r11, COUNT
 22171 000103F7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22172 000103FC 4C8D65F8                	lea r12, [rbp - 8]
 22173                                  .L_tc_recycle_frame_loop_00b9:
 22174 00010400 4983FA00                	cmp r10, 0
 22175 00010404 7414                    	je .L_tc_recycle_frame_done_00b9
 22176 00010406 4D8B2C24                	mov r13, qword [r12]
 22177 0001040A 4D892B                  	mov qword [r11], r13
 22178 0001040D 49FFCA                  	dec r10
 22179 00010410 4983EB08                	sub r11, 8
 22180 00010414 4983EC08                	sub r12, 8
 22181 00010418 EBE6                    	jmp .L_tc_recycle_frame_loop_00b9
 22182                                  .L_tc_recycle_frame_done_00b9:
 22183 0001041A 498D6308                	lea rsp, [r11 + 8]
 22184 0001041E 5D                      	pop rbp
 22185 0001041F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22186 00010422 C9                      	leave
 22187 00010423 C21800                  	ret AND_KILL_FRAME(1)
 22188                                  .L_lambda_opt_end_0015:	; new closure is in rax
 22189 00010426 C9                      	leave
 22190 00010427 C21800                  	ret AND_KILL_FRAME(1)
 22191                                  .L_lambda_simple_end_0088:	; new closure is in rax
 22192 0001042A 803804                  	cmp byte [rax], T_closure
 22193 0001042D 0F85AF5B0000            	jne L_error_non_closure
 22194 00010433 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22195 00010436 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22196 00010439 48890425[95140000]      	mov qword [free_var_100], rax
 22197 00010441 48B8-                   	mov rax, sob_void
 22197 00010443 [0000000000000000] 
 22198                                  
 22199 0001044B 4889C7                  	mov rdi, rax
 22200 0001044E E88D5E0000              	call print_sexpr_if_not_void
 22201                                  	; preparing a non-tail-call
 22202 00010453 48B8-                   	mov rax, L_constants + 1993
 22202 00010455 [C907000000000000] 
 22203 0001045D 50                      	push rax
 22204 0001045E 6A01                    	push 1	; arg count
 22205 00010460 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22206 00010465 E8215C0000              	call malloc
 22207 0001046A 50                      	push rax
 22208 0001046B BF00000000              	mov rdi, 8 * 0	; new rib
 22209 00010470 E8165C0000              	call malloc
 22210 00010475 50                      	push rax
 22211 00010476 BF08000000              	mov rdi, 8 * 1	; extended env
 22212 0001047B E80B5C0000              	call malloc
 22213 00010480 488B7D10                	mov rdi, ENV
 22214 00010484 BE00000000              	mov rsi, 0
 22215 00010489 BA01000000              	mov rdx, 1
 22216                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22217 0001048E 4883FE00                	cmp rsi, 0
 22218 00010492 7410                    	je .L_lambda_simple_env_end_008a
 22219 00010494 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22220 00010498 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22221 0001049C 48FFC6                  	inc rsi
 22222 0001049F 48FFC2                  	inc rdx
 22223 000104A2 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22224                                  .L_lambda_simple_env_end_008a:
 22225 000104A4 5B                      	pop rbx
 22226 000104A5 BE00000000              	mov rsi, 0
 22227                                  .L_lambda_simple_params_loop_008a:	; copy params
 22228 000104AA 4883FE00                	cmp rsi, 0
 22229 000104AE 740E                    	je .L_lambda_simple_params_end_008a
 22230 000104B0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22231 000104B5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22232 000104B9 48FFC6                  	inc rsi
 22233 000104BC EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22234                                  .L_lambda_simple_params_end_008a:
 22235 000104BE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22236 000104C1 4889C3                  	mov rbx, rax
 22237 000104C4 58                      	pop rax
 22238 000104C5 C60004                  	mov byte [rax], T_closure
 22239 000104C8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22240 000104CC 48C74009[D9040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22241 000104D4 E956040000              	jmp .L_lambda_simple_end_008a
 22242                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22243 000104D9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22244 000104DF 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22245 000104E1 FF742410                	push qword [rsp + 8 * 2]
 22246 000104E5 6A01                    	push 1
 22247 000104E7 E9585B0000              	jmp L_error_incorrect_arity_simple
 22248                                  .L_lambda_simple_arity_check_ok_008a:
 22249 000104EC C8000000                	enter 0, 0
 22250 000104F0 BF08000000              	mov rdi, 8 * 1
 22251 000104F5 E8915B0000              	call malloc
 22252 000104FA 488B5D20                	mov rbx, PARAM(0)
 22253 000104FE 488918                  	mov qword [rax], rbx
 22254 00010501 48894520                	mov PARAM(0), rax
 22255 00010505 48B8-                   	mov rax, sob_void
 22255 00010507 [0000000000000000] 
 22256                                  
 22257                                  	; preparing a non-tail-call
 22258 0001050F 6A00                    	push 0	; arg count
 22259 00010511 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22260 00010516 E8705B0000              	call malloc
 22261 0001051B 50                      	push rax
 22262 0001051C BF08000000              	mov rdi, 8 * 1	; new rib
 22263 00010521 E8655B0000              	call malloc
 22264 00010526 50                      	push rax
 22265 00010527 BF10000000              	mov rdi, 8 * 2	; extended env
 22266 0001052C E85A5B0000              	call malloc
 22267 00010531 488B7D10                	mov rdi, ENV
 22268 00010535 BE00000000              	mov rsi, 0
 22269 0001053A BA01000000              	mov rdx, 1
 22270                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22271 0001053F 4883FE01                	cmp rsi, 1
 22272 00010543 7410                    	je .L_lambda_simple_env_end_008b
 22273 00010545 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22274 00010549 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22275 0001054D 48FFC6                  	inc rsi
 22276 00010550 48FFC2                  	inc rdx
 22277 00010553 EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22278                                  .L_lambda_simple_env_end_008b:
 22279 00010555 5B                      	pop rbx
 22280 00010556 BE00000000              	mov rsi, 0
 22281                                  .L_lambda_simple_params_loop_008b:	; copy params
 22282 0001055B 4883FE01                	cmp rsi, 1
 22283 0001055F 740E                    	je .L_lambda_simple_params_end_008b
 22284 00010561 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22285 00010566 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22286 0001056A 48FFC6                  	inc rsi
 22287 0001056D EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22288                                  .L_lambda_simple_params_end_008b:
 22289 0001056F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22290 00010572 4889C3                  	mov rbx, rax
 22291 00010575 58                      	pop rax
 22292 00010576 C60004                  	mov byte [rax], T_closure
 22293 00010579 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22294 0001057D 48C74009[8A050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22295 00010585 E981020000              	jmp .L_lambda_simple_end_008b
 22296                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22297 0001058A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22298 00010590 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22299 00010592 FF742410                	push qword [rsp + 8 * 2]
 22300 00010596 6A02                    	push 2
 22301 00010598 E9A75A0000              	jmp L_error_incorrect_arity_simple
 22302                                  .L_lambda_simple_arity_check_ok_008b:
 22303 0001059D C8000000                	enter 0, 0
 22304                                  	; preparing a non-tail-call
 22305 000105A1 488B4520                	mov rax, PARAM(0)	; param s
 22306 000105A5 50                      	push rax
 22307 000105A6 6A01                    	push 1	; arg count
 22308 000105A8 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 22309 000105B0 803805                  	cmp byte [rax], T_undefined
 22310 000105B3 0F84A5590000            	je L_error_fvar_undefined
 22311 000105B9 803804                  	cmp byte [rax], T_closure
 22312 000105BC 0F85205A0000            	jne L_error_non_closure
 22313 000105C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22314 000105C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22315 000105C8 483D[02000000]          	cmp rax, sob_boolean_false
 22316 000105CE 7475                    	je .L_if_else_0067
 22317                                  	; Setting up for a tail-call
 22318 000105D0 488B4528                	mov rax, PARAM(1)	; param i
 22319 000105D4 50                      	push rax
 22320 000105D5 48B8-                   	mov rax, L_constants + 0
 22320 000105D7 [0000000000000000] 
 22321 000105DF 50                      	push rax
 22322 000105E0 6A02                    	push 2
 22323 000105E2 488B0425[B7140000]      	mov rax, qword [free_var_102]	; free var make-vector
 22324 000105EA 803805                  	cmp byte [rax], T_undefined
 22325 000105ED 0F846B590000            	je L_error_fvar_undefined
 22326 000105F3 803804                  	cmp byte [rax], T_closure
 22327 000105F6 0F85E6590000            	jne L_error_non_closure
 22328 000105FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22329 000105FF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22330 00010603 4C8B4D00                	mov r9, qword [rbp]
 22331 00010607 4150                    	push r8
 22332 00010609 4151                    	push r9
 22333 0001060B 41BA06000000            	mov r10, 2 + 4
 22334 00010611 4C8B5D18                	mov r11, COUNT
 22335 00010615 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22336 0001061A 4C8D65F8                	lea r12, [rbp - 8]
 22337                                  .L_tc_recycle_frame_loop_00ba:
 22338 0001061E 4983FA00                	cmp r10, 0
 22339 00010622 7414                    	je .L_tc_recycle_frame_done_00ba
 22340 00010624 4D8B2C24                	mov r13, qword [r12]
 22341 00010628 4D892B                  	mov qword [r11], r13
 22342 0001062B 49FFCA                  	dec r10
 22343 0001062E 4983EB08                	sub r11, 8
 22344 00010632 4983EC08                	sub r12, 8
 22345 00010636 EBE6                    	jmp .L_tc_recycle_frame_loop_00ba
 22346                                  .L_tc_recycle_frame_done_00ba:
 22347 00010638 498D6308                	lea rsp, [r11 + 8]
 22348 0001063C 5D                      	pop rbp
 22349 0001063D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22350 00010640 E9C2010000              	jmp .L_if_end_0067
 22351                                  .L_if_else_0067:
 22352                                  	; Setting up for a tail-call
 22353                                  	; preparing a non-tail-call
 22354                                  	; preparing a non-tail-call
 22355 00010645 48B8-                   	mov rax, L_constants + 2284
 22355 00010647 [EC08000000000000] 
 22356 0001064F 50                      	push rax
 22357 00010650 488B4528                	mov rax, PARAM(1)	; param i
 22358 00010654 50                      	push rax
 22359 00010655 6A02                    	push 2	; arg count
 22360 00010657 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 22361 0001065F 803805                  	cmp byte [rax], T_undefined
 22362 00010662 0F84F6580000            	je L_error_fvar_undefined
 22363 00010668 803804                  	cmp byte [rax], T_closure
 22364 0001066B 0F8571590000            	jne L_error_non_closure
 22365 00010671 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22366 00010674 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22367 00010677 50                      	push rax
 22368                                  	; preparing a non-tail-call
 22369 00010678 488B4520                	mov rax, PARAM(0)	; param s
 22370 0001067C 50                      	push rax
 22371 0001067D 6A01                    	push 1	; arg count
 22372 0001067F 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 22373 00010687 803805                  	cmp byte [rax], T_undefined
 22374 0001068A 0F84CE580000            	je L_error_fvar_undefined
 22375 00010690 803804                  	cmp byte [rax], T_closure
 22376 00010693 0F8549590000            	jne L_error_non_closure
 22377 00010699 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22378 0001069C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22379 0001069F 50                      	push rax
 22380 000106A0 6A02                    	push 2	; arg count
 22381 000106A2 488B4510                	mov rax, ENV
 22382 000106A6 488B00                  	mov rax, qword [rax + 8 * 0]
 22383 000106A9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22384 000106AC 488B00                  	mov rax, qword [rax]
 22385 000106AF 803804                  	cmp byte [rax], T_closure
 22386 000106B2 0F852A590000            	jne L_error_non_closure
 22387 000106B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22388 000106BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 22389 000106BE 50                      	push rax
 22390 000106BF 6A01                    	push 1
 22391 000106C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22392 000106C6 E8C0590000              	call malloc
 22393 000106CB 50                      	push rax
 22394 000106CC BF10000000              	mov rdi, 8 * 2	; new rib
 22395 000106D1 E8B5590000              	call malloc
 22396 000106D6 50                      	push rax
 22397 000106D7 BF18000000              	mov rdi, 8 * 3	; extended env
 22398 000106DC E8AA590000              	call malloc
 22399 000106E1 488B7D10                	mov rdi, ENV
 22400 000106E5 BE00000000              	mov rsi, 0
 22401 000106EA BA01000000              	mov rdx, 1
 22402                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22403 000106EF 4883FE02                	cmp rsi, 2
 22404 000106F3 7410                    	je .L_lambda_simple_env_end_008c
 22405 000106F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22406 000106F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22407 000106FD 48FFC6                  	inc rsi
 22408 00010700 48FFC2                  	inc rdx
 22409 00010703 EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22410                                  .L_lambda_simple_env_end_008c:
 22411 00010705 5B                      	pop rbx
 22412 00010706 BE00000000              	mov rsi, 0
 22413                                  .L_lambda_simple_params_loop_008c:	; copy params
 22414 0001070B 4883FE02                	cmp rsi, 2
 22415 0001070F 740E                    	je .L_lambda_simple_params_end_008c
 22416 00010711 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22417 00010716 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22418 0001071A 48FFC6                  	inc rsi
 22419 0001071D EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22420                                  .L_lambda_simple_params_end_008c:
 22421 0001071F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22422 00010722 4889C3                  	mov rbx, rax
 22423 00010725 58                      	pop rax
 22424 00010726 C60004                  	mov byte [rax], T_closure
 22425 00010729 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22426 0001072D 48C74009[3A070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22427 00010735 E980000000              	jmp .L_lambda_simple_end_008c
 22428                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22429 0001073A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22430 00010740 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22431 00010742 FF742410                	push qword [rsp + 8 * 2]
 22432 00010746 6A01                    	push 1
 22433 00010748 E9F7580000              	jmp L_error_incorrect_arity_simple
 22434                                  .L_lambda_simple_arity_check_ok_008c:
 22435 0001074D C8000000                	enter 0, 0
 22436                                  	; preparing a non-tail-call
 22437                                  	; preparing a non-tail-call
 22438 00010751 488B4510                	mov rax, ENV
 22439 00010755 488B00                  	mov rax, qword [rax + 8 * 0]
 22440 00010758 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22441 0001075B 50                      	push rax
 22442 0001075C 6A01                    	push 1	; arg count
 22443 0001075E 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 22444 00010766 803805                  	cmp byte [rax], T_undefined
 22445 00010769 0F84EF570000            	je L_error_fvar_undefined
 22446 0001076F 803804                  	cmp byte [rax], T_closure
 22447 00010772 0F856A580000            	jne L_error_non_closure
 22448 00010778 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22449 0001077B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22450 0001077E 50                      	push rax
 22451 0001077F 488B4510                	mov rax, ENV
 22452 00010783 488B00                  	mov rax, qword [rax + 8 * 0]
 22453 00010786 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22454 0001078A 50                      	push rax
 22455 0001078B 488B4520                	mov rax, PARAM(0)	; param v
 22456 0001078F 50                      	push rax
 22457 00010790 6A03                    	push 3	; arg count
 22458 00010792 488B0425[D6170000]      	mov rax, qword [free_var_149]	; free var vector-set!
 22459 0001079A 803805                  	cmp byte [rax], T_undefined
 22460 0001079D 0F84BB570000            	je L_error_fvar_undefined
 22461 000107A3 803804                  	cmp byte [rax], T_closure
 22462 000107A6 0F8536580000            	jne L_error_non_closure
 22463 000107AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22464 000107AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22465                                  
 22466 000107B2 488B4520                	mov rax, PARAM(0)	; param v
 22467 000107B6 C9                      	leave
 22468 000107B7 C21800                  	ret AND_KILL_FRAME(1)
 22469                                  .L_lambda_simple_end_008c:	; new closure is in rax
 22470 000107BA 803804                  	cmp byte [rax], T_closure
 22471 000107BD 0F851F580000            	jne L_error_non_closure
 22472 000107C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22473 000107C6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22474 000107CA 4C8B4D00                	mov r9, qword [rbp]
 22475 000107CE 4150                    	push r8
 22476 000107D0 4151                    	push r9
 22477 000107D2 41BA05000000            	mov r10, 1 + 4
 22478 000107D8 4C8B5D18                	mov r11, COUNT
 22479 000107DC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22480 000107E1 4C8D65F8                	lea r12, [rbp - 8]
 22481                                  .L_tc_recycle_frame_loop_00bb:
 22482 000107E5 4983FA00                	cmp r10, 0
 22483 000107E9 7414                    	je .L_tc_recycle_frame_done_00bb
 22484 000107EB 4D8B2C24                	mov r13, qword [r12]
 22485 000107EF 4D892B                  	mov qword [r11], r13
 22486 000107F2 49FFCA                  	dec r10
 22487 000107F5 4983EB08                	sub r11, 8
 22488 000107F9 4983EC08                	sub r12, 8
 22489 000107FD EBE6                    	jmp .L_tc_recycle_frame_loop_00bb
 22490                                  .L_tc_recycle_frame_done_00bb:
 22491 000107FF 498D6308                	lea rsp, [r11 + 8]
 22492 00010803 5D                      	pop rbp
 22493 00010804 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22494                                  .L_if_end_0067:
 22495 00010807 C9                      	leave
 22496 00010808 C22000                  	ret AND_KILL_FRAME(2)
 22497                                  .L_lambda_simple_end_008b:	; new closure is in rax
 22498 0001080B 803804                  	cmp byte [rax], T_closure
 22499 0001080E 0F85CE570000            	jne L_error_non_closure
 22500 00010814 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22501 00010817 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22502 0001081A 50                      	push rax
 22503 0001081B 488B4520                	mov rax, PARAM(0)	; param run
 22504 0001081F 8F00                    	pop qword [rax]
 22505 00010821 48B8-                   	mov rax, sob_void
 22505 00010823 [0000000000000000] 
 22506                                  
 22507 0001082B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22508 00010830 E856580000              	call malloc
 22509 00010835 50                      	push rax
 22510 00010836 BF08000000              	mov rdi, 8 * 1	; new rib
 22511 0001083B E84B580000              	call malloc
 22512 00010840 50                      	push rax
 22513 00010841 BF10000000              	mov rdi, 8 * 2	; extended env
 22514 00010846 E840580000              	call malloc
 22515 0001084B 488B7D10                	mov rdi, ENV
 22516 0001084F BE00000000              	mov rsi, 0
 22517 00010854 BA01000000              	mov rdx, 1
 22518                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 22519 00010859 4883FE01                	cmp rsi, 1
 22520 0001085D 7410                    	je .L_lambda_simple_env_end_008d
 22521 0001085F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22522 00010863 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22523 00010867 48FFC6                  	inc rsi
 22524 0001086A 48FFC2                  	inc rdx
 22525 0001086D EBEA                    	jmp .L_lambda_simple_env_loop_008d
 22526                                  .L_lambda_simple_env_end_008d:
 22527 0001086F 5B                      	pop rbx
 22528 00010870 BE00000000              	mov rsi, 0
 22529                                  .L_lambda_simple_params_loop_008d:	; copy params
 22530 00010875 4883FE01                	cmp rsi, 1
 22531 00010879 740E                    	je .L_lambda_simple_params_end_008d
 22532 0001087B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22533 00010880 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22534 00010884 48FFC6                  	inc rsi
 22535 00010887 EBEC                    	jmp .L_lambda_simple_params_loop_008d
 22536                                  .L_lambda_simple_params_end_008d:
 22537 00010889 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22538 0001088C 4889C3                  	mov rbx, rax
 22539 0001088F 58                      	pop rax
 22540 00010890 C60004                  	mov byte [rax], T_closure
 22541 00010893 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22542 00010897 48C74009[A4080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 22543 0001089F E987000000              	jmp .L_lambda_simple_end_008d
 22544                                  .L_lambda_simple_code_008d:	; lambda-simple body
 22545 000108A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22546 000108AA 740B                    	je .L_lambda_simple_arity_check_ok_008d
 22547 000108AC FF742410                	push qword [rsp + 8 * 2]
 22548 000108B0 6A01                    	push 1
 22549 000108B2 E98D570000              	jmp L_error_incorrect_arity_simple
 22550                                  .L_lambda_simple_arity_check_ok_008d:
 22551 000108B7 C8000000                	enter 0, 0
 22552                                  	; Setting up for a tail-call
 22553 000108BB 488B4520                	mov rax, PARAM(0)	; param s
 22554 000108BF 50                      	push rax
 22555 000108C0 48B8-                   	mov rax, L_constants + 2149
 22555 000108C2 [6508000000000000] 
 22556 000108CA 50                      	push rax
 22557 000108CB 6A02                    	push 2
 22558 000108CD 488B4510                	mov rax, ENV
 22559 000108D1 488B00                  	mov rax, qword [rax + 8 * 0]
 22560 000108D4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22561 000108D7 488B00                  	mov rax, qword [rax]
 22562 000108DA 803804                  	cmp byte [rax], T_closure
 22563 000108DD 0F85FF560000            	jne L_error_non_closure
 22564 000108E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22565 000108E6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22566 000108EA 4C8B4D00                	mov r9, qword [rbp]
 22567 000108EE 4150                    	push r8
 22568 000108F0 4151                    	push r9
 22569 000108F2 41BA06000000            	mov r10, 2 + 4
 22570 000108F8 4C8B5D18                	mov r11, COUNT
 22571 000108FC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22572 00010901 4C8D65F8                	lea r12, [rbp - 8]
 22573                                  .L_tc_recycle_frame_loop_00bc:
 22574 00010905 4983FA00                	cmp r10, 0
 22575 00010909 7414                    	je .L_tc_recycle_frame_done_00bc
 22576 0001090B 4D8B2C24                	mov r13, qword [r12]
 22577 0001090F 4D892B                  	mov qword [r11], r13
 22578 00010912 49FFCA                  	dec r10
 22579 00010915 4983EB08                	sub r11, 8
 22580 00010919 4983EC08                	sub r12, 8
 22581 0001091D EBE6                    	jmp .L_tc_recycle_frame_loop_00bc
 22582                                  .L_tc_recycle_frame_done_00bc:
 22583 0001091F 498D6308                	lea rsp, [r11 + 8]
 22584 00010923 5D                      	pop rbp
 22585 00010924 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22586 00010927 C9                      	leave
 22587 00010928 C21800                  	ret AND_KILL_FRAME(1)
 22588                                  .L_lambda_simple_end_008d:	; new closure is in rax
 22589 0001092B C9                      	leave
 22590 0001092C C21800                  	ret AND_KILL_FRAME(1)
 22591                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22592 0001092F 803804                  	cmp byte [rax], T_closure
 22593 00010932 0F85AA560000            	jne L_error_non_closure
 22594 00010938 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22595 0001093B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22596 0001093E 48890425[51140000]      	mov qword [free_var_96], rax
 22597 00010946 48B8-                   	mov rax, sob_void
 22597 00010948 [0000000000000000] 
 22598                                  
 22599 00010950 4889C7                  	mov rdi, rax
 22600 00010953 E888590000              	call print_sexpr_if_not_void
 22601                                  	; preparing a non-tail-call
 22602 00010958 48B8-                   	mov rax, L_constants + 1993
 22602 0001095A [C907000000000000] 
 22603 00010962 50                      	push rax
 22604 00010963 6A01                    	push 1	; arg count
 22605 00010965 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22606 0001096A E81C570000              	call malloc
 22607 0001096F 50                      	push rax
 22608 00010970 BF00000000              	mov rdi, 8 * 0	; new rib
 22609 00010975 E811570000              	call malloc
 22610 0001097A 50                      	push rax
 22611 0001097B BF08000000              	mov rdi, 8 * 1	; extended env
 22612 00010980 E806570000              	call malloc
 22613 00010985 488B7D10                	mov rdi, ENV
 22614 00010989 BE00000000              	mov rsi, 0
 22615 0001098E BA01000000              	mov rdx, 1
 22616                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 22617 00010993 4883FE00                	cmp rsi, 0
 22618 00010997 7410                    	je .L_lambda_simple_env_end_008e
 22619 00010999 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22620 0001099D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22621 000109A1 48FFC6                  	inc rsi
 22622 000109A4 48FFC2                  	inc rdx
 22623 000109A7 EBEA                    	jmp .L_lambda_simple_env_loop_008e
 22624                                  .L_lambda_simple_env_end_008e:
 22625 000109A9 5B                      	pop rbx
 22626 000109AA BE00000000              	mov rsi, 0
 22627                                  .L_lambda_simple_params_loop_008e:	; copy params
 22628 000109AF 4883FE00                	cmp rsi, 0
 22629 000109B3 740E                    	je .L_lambda_simple_params_end_008e
 22630 000109B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22631 000109BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22632 000109BE 48FFC6                  	inc rsi
 22633 000109C1 EBEC                    	jmp .L_lambda_simple_params_loop_008e
 22634                                  .L_lambda_simple_params_end_008e:
 22635 000109C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22636 000109C6 4889C3                  	mov rbx, rax
 22637 000109C9 58                      	pop rax
 22638 000109CA C60004                  	mov byte [rax], T_closure
 22639 000109CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22640 000109D1 48C74009[DE090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 22641 000109D9 E956040000              	jmp .L_lambda_simple_end_008e
 22642                                  .L_lambda_simple_code_008e:	; lambda-simple body
 22643 000109DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22644 000109E4 740B                    	je .L_lambda_simple_arity_check_ok_008e
 22645 000109E6 FF742410                	push qword [rsp + 8 * 2]
 22646 000109EA 6A01                    	push 1
 22647 000109EC E953560000              	jmp L_error_incorrect_arity_simple
 22648                                  .L_lambda_simple_arity_check_ok_008e:
 22649 000109F1 C8000000                	enter 0, 0
 22650 000109F5 BF08000000              	mov rdi, 8 * 1
 22651 000109FA E88C560000              	call malloc
 22652 000109FF 488B5D20                	mov rbx, PARAM(0)
 22653 00010A03 488918                  	mov qword [rax], rbx
 22654 00010A06 48894520                	mov PARAM(0), rax
 22655 00010A0A 48B8-                   	mov rax, sob_void
 22655 00010A0C [0000000000000000] 
 22656                                  
 22657                                  	; preparing a non-tail-call
 22658 00010A14 6A00                    	push 0	; arg count
 22659 00010A16 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22660 00010A1B E86B560000              	call malloc
 22661 00010A20 50                      	push rax
 22662 00010A21 BF08000000              	mov rdi, 8 * 1	; new rib
 22663 00010A26 E860560000              	call malloc
 22664 00010A2B 50                      	push rax
 22665 00010A2C BF10000000              	mov rdi, 8 * 2	; extended env
 22666 00010A31 E855560000              	call malloc
 22667 00010A36 488B7D10                	mov rdi, ENV
 22668 00010A3A BE00000000              	mov rsi, 0
 22669 00010A3F BA01000000              	mov rdx, 1
 22670                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 22671 00010A44 4883FE01                	cmp rsi, 1
 22672 00010A48 7410                    	je .L_lambda_simple_env_end_008f
 22673 00010A4A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22674 00010A4E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22675 00010A52 48FFC6                  	inc rsi
 22676 00010A55 48FFC2                  	inc rdx
 22677 00010A58 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 22678                                  .L_lambda_simple_env_end_008f:
 22679 00010A5A 5B                      	pop rbx
 22680 00010A5B BE00000000              	mov rsi, 0
 22681                                  .L_lambda_simple_params_loop_008f:	; copy params
 22682 00010A60 4883FE01                	cmp rsi, 1
 22683 00010A64 740E                    	je .L_lambda_simple_params_end_008f
 22684 00010A66 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22685 00010A6B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22686 00010A6F 48FFC6                  	inc rsi
 22687 00010A72 EBEC                    	jmp .L_lambda_simple_params_loop_008f
 22688                                  .L_lambda_simple_params_end_008f:
 22689 00010A74 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22690 00010A77 4889C3                  	mov rbx, rax
 22691 00010A7A 58                      	pop rax
 22692 00010A7B C60004                  	mov byte [rax], T_closure
 22693 00010A7E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22694 00010A82 48C74009[8F0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 22695 00010A8A E981020000              	jmp .L_lambda_simple_end_008f
 22696                                  .L_lambda_simple_code_008f:	; lambda-simple body
 22697 00010A8F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22698 00010A95 740B                    	je .L_lambda_simple_arity_check_ok_008f
 22699 00010A97 FF742410                	push qword [rsp + 8 * 2]
 22700 00010A9B 6A02                    	push 2
 22701 00010A9D E9A2550000              	jmp L_error_incorrect_arity_simple
 22702                                  .L_lambda_simple_arity_check_ok_008f:
 22703 00010AA2 C8000000                	enter 0, 0
 22704                                  	; preparing a non-tail-call
 22705 00010AA6 488B4520                	mov rax, PARAM(0)	; param s
 22706 00010AAA 50                      	push rax
 22707 00010AAB 6A01                    	push 1	; arg count
 22708 00010AAD 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 22709 00010AB5 803805                  	cmp byte [rax], T_undefined
 22710 00010AB8 0F84A0540000            	je L_error_fvar_undefined
 22711 00010ABE 803804                  	cmp byte [rax], T_closure
 22712 00010AC1 0F851B550000            	jne L_error_non_closure
 22713 00010AC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22714 00010ACA FF5009                  	call SOB_CLOSURE_CODE(rax)
 22715 00010ACD 483D[02000000]          	cmp rax, sob_boolean_false
 22716 00010AD3 7475                    	je .L_if_else_0068
 22717                                  	; Setting up for a tail-call
 22718 00010AD5 488B4528                	mov rax, PARAM(1)	; param i
 22719 00010AD9 50                      	push rax
 22720 00010ADA 48B8-                   	mov rax, L_constants + 4
 22720 00010ADC [0400000000000000] 
 22721 00010AE4 50                      	push rax
 22722 00010AE5 6A02                    	push 2
 22723 00010AE7 488B0425[95140000]      	mov rax, qword [free_var_100]	; free var make-string
 22724 00010AEF 803805                  	cmp byte [rax], T_undefined
 22725 00010AF2 0F8466540000            	je L_error_fvar_undefined
 22726 00010AF8 803804                  	cmp byte [rax], T_closure
 22727 00010AFB 0F85E1540000            	jne L_error_non_closure
 22728 00010B01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22729 00010B04 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22730 00010B08 4C8B4D00                	mov r9, qword [rbp]
 22731 00010B0C 4150                    	push r8
 22732 00010B0E 4151                    	push r9
 22733 00010B10 41BA06000000            	mov r10, 2 + 4
 22734 00010B16 4C8B5D18                	mov r11, COUNT
 22735 00010B1A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22736 00010B1F 4C8D65F8                	lea r12, [rbp - 8]
 22737                                  .L_tc_recycle_frame_loop_00bd:
 22738 00010B23 4983FA00                	cmp r10, 0
 22739 00010B27 7414                    	je .L_tc_recycle_frame_done_00bd
 22740 00010B29 4D8B2C24                	mov r13, qword [r12]
 22741 00010B2D 4D892B                  	mov qword [r11], r13
 22742 00010B30 49FFCA                  	dec r10
 22743 00010B33 4983EB08                	sub r11, 8
 22744 00010B37 4983EC08                	sub r12, 8
 22745 00010B3B EBE6                    	jmp .L_tc_recycle_frame_loop_00bd
 22746                                  .L_tc_recycle_frame_done_00bd:
 22747 00010B3D 498D6308                	lea rsp, [r11 + 8]
 22748 00010B41 5D                      	pop rbp
 22749 00010B42 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22750 00010B45 E9C2010000              	jmp .L_if_end_0068
 22751                                  .L_if_else_0068:
 22752                                  	; Setting up for a tail-call
 22753                                  	; preparing a non-tail-call
 22754                                  	; preparing a non-tail-call
 22755 00010B4A 48B8-                   	mov rax, L_constants + 2284
 22755 00010B4C [EC08000000000000] 
 22756 00010B54 50                      	push rax
 22757 00010B55 488B4528                	mov rax, PARAM(1)	; param i
 22758 00010B59 50                      	push rax
 22759 00010B5A 6A02                    	push 2	; arg count
 22760 00010B5C 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 22761 00010B64 803805                  	cmp byte [rax], T_undefined
 22762 00010B67 0F84F1530000            	je L_error_fvar_undefined
 22763 00010B6D 803804                  	cmp byte [rax], T_closure
 22764 00010B70 0F856C540000            	jne L_error_non_closure
 22765 00010B76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22766 00010B79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22767 00010B7C 50                      	push rax
 22768                                  	; preparing a non-tail-call
 22769 00010B7D 488B4520                	mov rax, PARAM(0)	; param s
 22770 00010B81 50                      	push rax
 22771 00010B82 6A01                    	push 1	; arg count
 22772 00010B84 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 22773 00010B8C 803805                  	cmp byte [rax], T_undefined
 22774 00010B8F 0F84C9530000            	je L_error_fvar_undefined
 22775 00010B95 803804                  	cmp byte [rax], T_closure
 22776 00010B98 0F8544540000            	jne L_error_non_closure
 22777 00010B9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22778 00010BA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22779 00010BA4 50                      	push rax
 22780 00010BA5 6A02                    	push 2	; arg count
 22781 00010BA7 488B4510                	mov rax, ENV
 22782 00010BAB 488B00                  	mov rax, qword [rax + 8 * 0]
 22783 00010BAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22784 00010BB1 488B00                  	mov rax, qword [rax]
 22785 00010BB4 803804                  	cmp byte [rax], T_closure
 22786 00010BB7 0F8525540000            	jne L_error_non_closure
 22787 00010BBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 22788 00010BC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22789 00010BC3 50                      	push rax
 22790 00010BC4 6A01                    	push 1
 22791 00010BC6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22792 00010BCB E8BB540000              	call malloc
 22793 00010BD0 50                      	push rax
 22794 00010BD1 BF10000000              	mov rdi, 8 * 2	; new rib
 22795 00010BD6 E8B0540000              	call malloc
 22796 00010BDB 50                      	push rax
 22797 00010BDC BF18000000              	mov rdi, 8 * 3	; extended env
 22798 00010BE1 E8A5540000              	call malloc
 22799 00010BE6 488B7D10                	mov rdi, ENV
 22800 00010BEA BE00000000              	mov rsi, 0
 22801 00010BEF BA01000000              	mov rdx, 1
 22802                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 22803 00010BF4 4883FE02                	cmp rsi, 2
 22804 00010BF8 7410                    	je .L_lambda_simple_env_end_0090
 22805 00010BFA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22806 00010BFE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22807 00010C02 48FFC6                  	inc rsi
 22808 00010C05 48FFC2                  	inc rdx
 22809 00010C08 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 22810                                  .L_lambda_simple_env_end_0090:
 22811 00010C0A 5B                      	pop rbx
 22812 00010C0B BE00000000              	mov rsi, 0
 22813                                  .L_lambda_simple_params_loop_0090:	; copy params
 22814 00010C10 4883FE02                	cmp rsi, 2
 22815 00010C14 740E                    	je .L_lambda_simple_params_end_0090
 22816 00010C16 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22817 00010C1B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22818 00010C1F 48FFC6                  	inc rsi
 22819 00010C22 EBEC                    	jmp .L_lambda_simple_params_loop_0090
 22820                                  .L_lambda_simple_params_end_0090:
 22821 00010C24 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22822 00010C27 4889C3                  	mov rbx, rax
 22823 00010C2A 58                      	pop rax
 22824 00010C2B C60004                  	mov byte [rax], T_closure
 22825 00010C2E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22826 00010C32 48C74009[3F0C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 22827 00010C3A E980000000              	jmp .L_lambda_simple_end_0090
 22828                                  .L_lambda_simple_code_0090:	; lambda-simple body
 22829 00010C3F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22830 00010C45 740B                    	je .L_lambda_simple_arity_check_ok_0090
 22831 00010C47 FF742410                	push qword [rsp + 8 * 2]
 22832 00010C4B 6A01                    	push 1
 22833 00010C4D E9F2530000              	jmp L_error_incorrect_arity_simple
 22834                                  .L_lambda_simple_arity_check_ok_0090:
 22835 00010C52 C8000000                	enter 0, 0
 22836                                  	; preparing a non-tail-call
 22837                                  	; preparing a non-tail-call
 22838 00010C56 488B4510                	mov rax, ENV
 22839 00010C5A 488B00                  	mov rax, qword [rax + 8 * 0]
 22840 00010C5D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22841 00010C60 50                      	push rax
 22842 00010C61 6A01                    	push 1	; arg count
 22843 00010C63 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 22844 00010C6B 803805                  	cmp byte [rax], T_undefined
 22845 00010C6E 0F84EA520000            	je L_error_fvar_undefined
 22846 00010C74 803804                  	cmp byte [rax], T_closure
 22847 00010C77 0F8565530000            	jne L_error_non_closure
 22848 00010C7D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22849 00010C80 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22850 00010C83 50                      	push rax
 22851 00010C84 488B4510                	mov rax, ENV
 22852 00010C88 488B00                  	mov rax, qword [rax + 8 * 0]
 22853 00010C8B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22854 00010C8F 50                      	push rax
 22855 00010C90 488B4520                	mov rax, PARAM(0)	; param str
 22856 00010C94 50                      	push rax
 22857 00010C95 6A03                    	push 3	; arg count
 22858 00010C97 488B0425[C6160000]      	mov rax, qword [free_var_133]	; free var string-set!
 22859 00010C9F 803805                  	cmp byte [rax], T_undefined
 22860 00010CA2 0F84B6520000            	je L_error_fvar_undefined
 22861 00010CA8 803804                  	cmp byte [rax], T_closure
 22862 00010CAB 0F8531530000            	jne L_error_non_closure
 22863 00010CB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22864 00010CB4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22865                                  
 22866 00010CB7 488B4520                	mov rax, PARAM(0)	; param str
 22867 00010CBB C9                      	leave
 22868 00010CBC C21800                  	ret AND_KILL_FRAME(1)
 22869                                  .L_lambda_simple_end_0090:	; new closure is in rax
 22870 00010CBF 803804                  	cmp byte [rax], T_closure
 22871 00010CC2 0F851A530000            	jne L_error_non_closure
 22872 00010CC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22873 00010CCB 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22874 00010CCF 4C8B4D00                	mov r9, qword [rbp]
 22875 00010CD3 4150                    	push r8
 22876 00010CD5 4151                    	push r9
 22877 00010CD7 41BA05000000            	mov r10, 1 + 4
 22878 00010CDD 4C8B5D18                	mov r11, COUNT
 22879 00010CE1 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22880 00010CE6 4C8D65F8                	lea r12, [rbp - 8]
 22881                                  .L_tc_recycle_frame_loop_00be:
 22882 00010CEA 4983FA00                	cmp r10, 0
 22883 00010CEE 7414                    	je .L_tc_recycle_frame_done_00be
 22884 00010CF0 4D8B2C24                	mov r13, qword [r12]
 22885 00010CF4 4D892B                  	mov qword [r11], r13
 22886 00010CF7 49FFCA                  	dec r10
 22887 00010CFA 4983EB08                	sub r11, 8
 22888 00010CFE 4983EC08                	sub r12, 8
 22889 00010D02 EBE6                    	jmp .L_tc_recycle_frame_loop_00be
 22890                                  .L_tc_recycle_frame_done_00be:
 22891 00010D04 498D6308                	lea rsp, [r11 + 8]
 22892 00010D08 5D                      	pop rbp
 22893 00010D09 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22894                                  .L_if_end_0068:
 22895 00010D0C C9                      	leave
 22896 00010D0D C22000                  	ret AND_KILL_FRAME(2)
 22897                                  .L_lambda_simple_end_008f:	; new closure is in rax
 22898 00010D10 803804                  	cmp byte [rax], T_closure
 22899 00010D13 0F85C9520000            	jne L_error_non_closure
 22900 00010D19 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22901 00010D1C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22902 00010D1F 50                      	push rax
 22903 00010D20 488B4520                	mov rax, PARAM(0)	; param run
 22904 00010D24 8F00                    	pop qword [rax]
 22905 00010D26 48B8-                   	mov rax, sob_void
 22905 00010D28 [0000000000000000] 
 22906                                  
 22907 00010D30 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22908 00010D35 E851530000              	call malloc
 22909 00010D3A 50                      	push rax
 22910 00010D3B BF08000000              	mov rdi, 8 * 1	; new rib
 22911 00010D40 E846530000              	call malloc
 22912 00010D45 50                      	push rax
 22913 00010D46 BF10000000              	mov rdi, 8 * 2	; extended env
 22914 00010D4B E83B530000              	call malloc
 22915 00010D50 488B7D10                	mov rdi, ENV
 22916 00010D54 BE00000000              	mov rsi, 0
 22917 00010D59 BA01000000              	mov rdx, 1
 22918                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 22919 00010D5E 4883FE01                	cmp rsi, 1
 22920 00010D62 7410                    	je .L_lambda_simple_env_end_0091
 22921 00010D64 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22922 00010D68 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22923 00010D6C 48FFC6                  	inc rsi
 22924 00010D6F 48FFC2                  	inc rdx
 22925 00010D72 EBEA                    	jmp .L_lambda_simple_env_loop_0091
 22926                                  .L_lambda_simple_env_end_0091:
 22927 00010D74 5B                      	pop rbx
 22928 00010D75 BE00000000              	mov rsi, 0
 22929                                  .L_lambda_simple_params_loop_0091:	; copy params
 22930 00010D7A 4883FE01                	cmp rsi, 1
 22931 00010D7E 740E                    	je .L_lambda_simple_params_end_0091
 22932 00010D80 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22933 00010D85 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22934 00010D89 48FFC6                  	inc rsi
 22935 00010D8C EBEC                    	jmp .L_lambda_simple_params_loop_0091
 22936                                  .L_lambda_simple_params_end_0091:
 22937 00010D8E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22938 00010D91 4889C3                  	mov rbx, rax
 22939 00010D94 58                      	pop rax
 22940 00010D95 C60004                  	mov byte [rax], T_closure
 22941 00010D98 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22942 00010D9C 48C74009[A90D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 22943 00010DA4 E987000000              	jmp .L_lambda_simple_end_0091
 22944                                  .L_lambda_simple_code_0091:	; lambda-simple body
 22945 00010DA9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22946 00010DAF 740B                    	je .L_lambda_simple_arity_check_ok_0091
 22947 00010DB1 FF742410                	push qword [rsp + 8 * 2]
 22948 00010DB5 6A01                    	push 1
 22949 00010DB7 E988520000              	jmp L_error_incorrect_arity_simple
 22950                                  .L_lambda_simple_arity_check_ok_0091:
 22951 00010DBC C8000000                	enter 0, 0
 22952                                  	; Setting up for a tail-call
 22953 00010DC0 488B4520                	mov rax, PARAM(0)	; param s
 22954 00010DC4 50                      	push rax
 22955 00010DC5 48B8-                   	mov rax, L_constants + 2149
 22955 00010DC7 [6508000000000000] 
 22956 00010DCF 50                      	push rax
 22957 00010DD0 6A02                    	push 2
 22958 00010DD2 488B4510                	mov rax, ENV
 22959 00010DD6 488B00                  	mov rax, qword [rax + 8 * 0]
 22960 00010DD9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22961 00010DDC 488B00                  	mov rax, qword [rax]
 22962 00010DDF 803804                  	cmp byte [rax], T_closure
 22963 00010DE2 0F85FA510000            	jne L_error_non_closure
 22964 00010DE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22965 00010DEB 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 22966 00010DEF 4C8B4D00                	mov r9, qword [rbp]
 22967 00010DF3 4150                    	push r8
 22968 00010DF5 4151                    	push r9
 22969 00010DF7 41BA06000000            	mov r10, 2 + 4
 22970 00010DFD 4C8B5D18                	mov r11, COUNT
 22971 00010E01 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 22972 00010E06 4C8D65F8                	lea r12, [rbp - 8]
 22973                                  .L_tc_recycle_frame_loop_00bf:
 22974 00010E0A 4983FA00                	cmp r10, 0
 22975 00010E0E 7414                    	je .L_tc_recycle_frame_done_00bf
 22976 00010E10 4D8B2C24                	mov r13, qword [r12]
 22977 00010E14 4D892B                  	mov qword [r11], r13
 22978 00010E17 49FFCA                  	dec r10
 22979 00010E1A 4983EB08                	sub r11, 8
 22980 00010E1E 4983EC08                	sub r12, 8
 22981 00010E22 EBE6                    	jmp .L_tc_recycle_frame_loop_00bf
 22982                                  .L_tc_recycle_frame_done_00bf:
 22983 00010E24 498D6308                	lea rsp, [r11 + 8]
 22984 00010E28 5D                      	pop rbp
 22985 00010E29 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22986 00010E2C C9                      	leave
 22987 00010E2D C21800                  	ret AND_KILL_FRAME(1)
 22988                                  .L_lambda_simple_end_0091:	; new closure is in rax
 22989 00010E30 C9                      	leave
 22990 00010E31 C21800                  	ret AND_KILL_FRAME(1)
 22991                                  .L_lambda_simple_end_008e:	; new closure is in rax
 22992 00010E34 803804                  	cmp byte [rax], T_closure
 22993 00010E37 0F85A5510000            	jne L_error_non_closure
 22994 00010E3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22995 00010E40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22996 00010E43 48890425[40140000]      	mov qword [free_var_95], rax
 22997 00010E4B 48B8-                   	mov rax, sob_void
 22997 00010E4D [0000000000000000] 
 22998                                  
 22999 00010E55 4889C7                  	mov rdi, rax
 23000 00010E58 E883540000              	call print_sexpr_if_not_void
 23001 00010E5D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23002 00010E62 E824520000              	call malloc
 23003 00010E67 50                      	push rax
 23004 00010E68 BF00000000              	mov rdi, 8 * 0	; new rib
 23005 00010E6D E819520000              	call malloc
 23006 00010E72 50                      	push rax
 23007 00010E73 BF08000000              	mov rdi, 8 * 1	; extended env
 23008 00010E78 E80E520000              	call malloc
 23009 00010E7D 488B7D10                	mov rdi, ENV
 23010 00010E81 BE00000000              	mov rsi, 0
 23011 00010E86 BA01000000              	mov rdx, 1
 23012                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 23013 00010E8B 4883FE00                	cmp rsi, 0
 23014 00010E8F 7410                    	je .L_lambda_opt_env_end_0016
 23015 00010E91 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23016 00010E95 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23017 00010E99 48FFC6                  	inc rsi
 23018 00010E9C 48FFC2                  	inc rdx
 23019 00010E9F EBEA                    	jmp .L_lambda_opt_env_loop_0016
 23020                                  .L_lambda_opt_env_end_0016:
 23021 00010EA1 5B                      	pop rbx
 23022 00010EA2 BE00000000              	mov rsi, 0
 23023                                  .L_lambda_opt_params_loop_0016:	; copy params
 23024 00010EA7 4883FE00                	cmp rsi, 0
 23025 00010EAB 740E                    	je .L_lambda_opt_params_end_0016
 23026 00010EAD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23027 00010EB2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23028 00010EB6 48FFC6                  	inc rsi
 23029 00010EB9 EBEC                    	jmp .L_lambda_opt_params_loop_0016
 23030                                  .L_lambda_opt_params_end_0016:
 23031 00010EBB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23032 00010EBE 4889C3                  	mov rbx, rax
 23033 00010EC1 58                      	pop rax
 23034 00010EC2 C60004                  	mov byte [rax], T_closure
 23035 00010EC5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23036 00010EC9 48C74009[D60E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 23037 00010ED1 E96B010000              	jmp .L_lambda_opt_end_0016
 23038                                  .L_lambda_opt_code_0016:
 23039 00010ED6 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 23040 00010EDB 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 23041 00010EDF 7407                    	je .L_lambda_opt_arity_check_exact_0016	; Jump if arity matches
 23042 00010EE1 7F4C                    	jg .L_lambda_opt_arity_check_more_0016	; Jump if more arguments passed
 23043 00010EE3 E970510000              	jmp L_error_incorrect_arity_opt
 23044                                  .L_lambda_opt_arity_check_exact_0016:
 23045 00010EE8 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 23046 00010EEB 4983C603                	add r14, 3 ; add 3 first stack values
 23047 00010EEF 41BF00000000            	mov r15, 0 ; r15 = index
 23048 00010EF5 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 23049 00010EF9 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 23050 00010F01 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 23051                                  .L_lambda_opt_stack_shrink_loop_0016:
 23052 00010F03 4983FE00                	cmp r14, 0
 23053 00010F07 7E11                    	jle .L_make_lambda_opt_exact_finish_0016
 23054 00010F09 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 23055 00010F0E 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 23056 00010F12 49FFCE                  	dec r14 ; next loop value
 23057 00010F15 49FFC7                  	inc r15 ; update i
 23058 00010F18 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 23059                                  .L_make_lambda_opt_exact_finish_0016:
 23060 00010F1A 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 23061 00010F22 49FFC2                  	inc r10
 23062 00010F25 4C89542410              	mov qword [rsp + 8 * 2], r10
 23063 00010F2A E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0016
 23064                                  .L_lambda_opt_arity_check_more_0016:
 23065 00010F2F 4D89D6                  	mov r14, r10 ; r14 = num args
 23066 00010F32 4D89D7                  	mov r15, r10 ; r15 = num args
 23067 00010F35 41B900000000            	mov r9, 0; r9 = number of params 
 23068 00010F3B 4D29CE                  	sub r14, r9 ; r14 = extra args
 23069 00010F3E 4D01F1                  	add r9, r14 ; r9 = num args
 23070 00010F41 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 23070 00010F43 [0100000000000000] 
 23071 00010F4B EB00                    	jmp .L_make_lambda_opt_arg_list_0016
 23072                                  .L_make_lambda_opt_arg_list_0016:
 23073 00010F4D 4983FE00                	cmp r14, 0
 23074 00010F51 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0016
 23075 00010F53 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 23076 00010F58 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 23077 00010F5B 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 23078 00010F61 E825510000              	call malloc                         ; Allocate memory, result in rax
 23079 00010F66 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 23080 00010F69 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 23081 00010F6D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 23082 00010F71 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 23083 00010F74 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 23084 00010F77 49FFC9                  	dec r9                              ; args index minus 1
 23085 00010F7A 49FFCE                  	dec r14                             ; next iteration
 23086 00010F7D EBCE                    	jmp .L_make_lambda_opt_arg_list_0016
 23087                                  .L_make_lambda_opt_stack_fixed_0016:
 23088 00010F7F 4D89FE                  	mov r14, r15 ; r14 = num args
 23089 00010F82 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 23090 00010F85 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 23091 00010F89 41BA00000000            	mov r10, 0; r10 = num of params
 23092 00010F8F 4D29D6                  	sub r14, r10 ; r14 = extra args
 23093 00010F92 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 23094 00010F95 49FFCE                  	dec r14 ; how much we need to change stack wise?
 23095 00010F98 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 23096 00010F9D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0016
 23097                                  .L_lambda_opt_stack_shrink_loop_more_0016:
 23098 00010F9F 4983F800                	cmp r8, 0
 23099 00010FA3 7E15                    	jle .L_make_lambda_opt_more_finish_0016
 23100 00010FA5 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 23101 00010FA9 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 23102 00010FAD 4D8D26                  	lea r12, [r14]
 23103 00010FB0 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 23104 00010FB5 49FFC8                  	dec r8 ; next iteration
 23105 00010FB8 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0016
 23106                                  .L_make_lambda_opt_more_finish_0016:
 23107 00010FBA 4D89F8                  	mov r8, r15 ; num of args
 23108 00010FBD 41BA00000000            	mov r10, 0
 23109 00010FC3 4D29D0                  	sub r8, r10 ; num of new args
 23110 00010FC6 49FFC0                  	inc r8
 23111 00010FC9 4C89442420              	mov qword [rsp + 8 * 4], r8
 23112 00010FCE 4883C410                	add rsp, 8 * 2  ; 
 23113 00010FD2 EB00                    	jmp .L_lambda_opt_stack_adjusted_0016
 23114                                  .L_lambda_opt_stack_adjusted_0016:
 23115 00010FD4 C8000000                	enter 0, 0
 23116                                  	; Setting up for a tail-call
 23117 00010FD8 488B4520                	mov rax, PARAM(0)	; param s
 23118 00010FDC 50                      	push rax
 23119 00010FDD 6A01                    	push 1
 23120 00010FDF 488B0425[51140000]      	mov rax, qword [free_var_96]	; free var list->vector
 23121 00010FE7 803805                  	cmp byte [rax], T_undefined
 23122 00010FEA 0F846E4F0000            	je L_error_fvar_undefined
 23123 00010FF0 803804                  	cmp byte [rax], T_closure
 23124 00010FF3 0F85E94F0000            	jne L_error_non_closure
 23125 00010FF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23126 00010FFC 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23127 00011000 4C8B4D00                	mov r9, qword [rbp]
 23128 00011004 4150                    	push r8
 23129 00011006 4151                    	push r9
 23130 00011008 41BA05000000            	mov r10, 1 + 4
 23131 0001100E 4C8B5D18                	mov r11, COUNT
 23132 00011012 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23133 00011017 4C8D65F8                	lea r12, [rbp - 8]
 23134                                  .L_tc_recycle_frame_loop_00c0:
 23135 0001101B 4983FA00                	cmp r10, 0
 23136 0001101F 7414                    	je .L_tc_recycle_frame_done_00c0
 23137 00011021 4D8B2C24                	mov r13, qword [r12]
 23138 00011025 4D892B                  	mov qword [r11], r13
 23139 00011028 49FFCA                  	dec r10
 23140 0001102B 4983EB08                	sub r11, 8
 23141 0001102F 4983EC08                	sub r12, 8
 23142 00011033 EBE6                    	jmp .L_tc_recycle_frame_loop_00c0
 23143                                  .L_tc_recycle_frame_done_00c0:
 23144 00011035 498D6308                	lea rsp, [r11 + 8]
 23145 00011039 5D                      	pop rbp
 23146 0001103A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23147 0001103D C9                      	leave
 23148 0001103E C21000                  	ret AND_KILL_FRAME(0)
 23149                                  .L_lambda_opt_end_0016:	; new closure is in rax
 23150 00011041 48890425[5F170000]      	mov qword [free_var_142], rax
 23151 00011049 48B8-                   	mov rax, sob_void
 23151 0001104B [0000000000000000] 
 23152                                  
 23153 00011053 4889C7                  	mov rdi, rax
 23154 00011056 E885520000              	call print_sexpr_if_not_void
 23155                                  	; preparing a non-tail-call
 23156 0001105B 48B8-                   	mov rax, L_constants + 1993
 23156 0001105D [C907000000000000] 
 23157 00011065 50                      	push rax
 23158 00011066 6A01                    	push 1	; arg count
 23159 00011068 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23160 0001106D E819500000              	call malloc
 23161 00011072 50                      	push rax
 23162 00011073 BF00000000              	mov rdi, 8 * 0	; new rib
 23163 00011078 E80E500000              	call malloc
 23164 0001107D 50                      	push rax
 23165 0001107E BF08000000              	mov rdi, 8 * 1	; extended env
 23166 00011083 E803500000              	call malloc
 23167 00011088 488B7D10                	mov rdi, ENV
 23168 0001108C BE00000000              	mov rsi, 0
 23169 00011091 BA01000000              	mov rdx, 1
 23170                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23171 00011096 4883FE00                	cmp rsi, 0
 23172 0001109A 7410                    	je .L_lambda_simple_env_end_0092
 23173 0001109C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23174 000110A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23175 000110A4 48FFC6                  	inc rsi
 23176 000110A7 48FFC2                  	inc rdx
 23177 000110AA EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23178                                  .L_lambda_simple_env_end_0092:
 23179 000110AC 5B                      	pop rbx
 23180 000110AD BE00000000              	mov rsi, 0
 23181                                  .L_lambda_simple_params_loop_0092:	; copy params
 23182 000110B2 4883FE00                	cmp rsi, 0
 23183 000110B6 740E                    	je .L_lambda_simple_params_end_0092
 23184 000110B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23185 000110BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23186 000110C1 48FFC6                  	inc rsi
 23187 000110C4 EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23188                                  .L_lambda_simple_params_end_0092:
 23189 000110C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23190 000110C9 4889C3                  	mov rbx, rax
 23191 000110CC 58                      	pop rax
 23192 000110CD C60004                  	mov byte [rax], T_closure
 23193 000110D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23194 000110D4 48C74009[E1100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23195 000110DC E945030000              	jmp .L_lambda_simple_end_0092
 23196                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23197 000110E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23198 000110E7 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23199 000110E9 FF742410                	push qword [rsp + 8 * 2]
 23200 000110ED 6A01                    	push 1
 23201 000110EF E9504F0000              	jmp L_error_incorrect_arity_simple
 23202                                  .L_lambda_simple_arity_check_ok_0092:
 23203 000110F4 C8000000                	enter 0, 0
 23204 000110F8 BF08000000              	mov rdi, 8 * 1
 23205 000110FD E8894F0000              	call malloc
 23206 00011102 488B5D20                	mov rbx, PARAM(0)
 23207 00011106 488918                  	mov qword [rax], rbx
 23208 00011109 48894520                	mov PARAM(0), rax
 23209 0001110D 48B8-                   	mov rax, sob_void
 23209 0001110F [0000000000000000] 
 23210                                  
 23211                                  	; preparing a non-tail-call
 23212 00011117 6A00                    	push 0	; arg count
 23213 00011119 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23214 0001111E E8684F0000              	call malloc
 23215 00011123 50                      	push rax
 23216 00011124 BF08000000              	mov rdi, 8 * 1	; new rib
 23217 00011129 E85D4F0000              	call malloc
 23218 0001112E 50                      	push rax
 23219 0001112F BF10000000              	mov rdi, 8 * 2	; extended env
 23220 00011134 E8524F0000              	call malloc
 23221 00011139 488B7D10                	mov rdi, ENV
 23222 0001113D BE00000000              	mov rsi, 0
 23223 00011142 BA01000000              	mov rdx, 1
 23224                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23225 00011147 4883FE01                	cmp rsi, 1
 23226 0001114B 7410                    	je .L_lambda_simple_env_end_0093
 23227 0001114D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23228 00011151 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23229 00011155 48FFC6                  	inc rsi
 23230 00011158 48FFC2                  	inc rdx
 23231 0001115B EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23232                                  .L_lambda_simple_env_end_0093:
 23233 0001115D 5B                      	pop rbx
 23234 0001115E BE00000000              	mov rsi, 0
 23235                                  .L_lambda_simple_params_loop_0093:	; copy params
 23236 00011163 4883FE01                	cmp rsi, 1
 23237 00011167 740E                    	je .L_lambda_simple_params_end_0093
 23238 00011169 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23239 0001116E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23240 00011172 48FFC6                  	inc rsi
 23241 00011175 EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23242                                  .L_lambda_simple_params_end_0093:
 23243 00011177 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23244 0001117A 4889C3                  	mov rbx, rax
 23245 0001117D 58                      	pop rax
 23246 0001117E C60004                  	mov byte [rax], T_closure
 23247 00011181 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23248 00011185 48C74009[92110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23249 0001118D E948010000              	jmp .L_lambda_simple_end_0093
 23250                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23251 00011192 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23252 00011198 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23253 0001119A FF742410                	push qword [rsp + 8 * 2]
 23254 0001119E 6A03                    	push 3
 23255 000111A0 E99F4E0000              	jmp L_error_incorrect_arity_simple
 23256                                  .L_lambda_simple_arity_check_ok_0093:
 23257 000111A5 C8000000                	enter 0, 0
 23258                                  	; preparing a non-tail-call
 23259 000111A9 488B4530                	mov rax, PARAM(2)	; param n
 23260 000111AD 50                      	push rax
 23261 000111AE 488B4528                	mov rax, PARAM(1)	; param i
 23262 000111B2 50                      	push rax
 23263 000111B3 6A02                    	push 2	; arg count
 23264 000111B5 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 23265 000111BD 803805                  	cmp byte [rax], T_undefined
 23266 000111C0 0F84984D0000            	je L_error_fvar_undefined
 23267 000111C6 803804                  	cmp byte [rax], T_closure
 23268 000111C9 0F85134E0000            	jne L_error_non_closure
 23269 000111CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23270 000111D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23271 000111D5 483D[02000000]          	cmp rax, sob_boolean_false
 23272 000111DB 0F84EB000000            	je .L_if_else_0069
 23273                                  	; Setting up for a tail-call
 23274                                  	; preparing a non-tail-call
 23275 000111E1 488B4528                	mov rax, PARAM(1)	; param i
 23276 000111E5 50                      	push rax
 23277 000111E6 488B4520                	mov rax, PARAM(0)	; param str
 23278 000111EA 50                      	push rax
 23279 000111EB 6A02                    	push 2	; arg count
 23280 000111ED 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 23281 000111F5 803805                  	cmp byte [rax], T_undefined
 23282 000111F8 0F84604D0000            	je L_error_fvar_undefined
 23283 000111FE 803804                  	cmp byte [rax], T_closure
 23284 00011201 0F85DB4D0000            	jne L_error_non_closure
 23285 00011207 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23286 0001120A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23287 0001120D 50                      	push rax
 23288                                  	; preparing a non-tail-call
 23289 0001120E 488B4530                	mov rax, PARAM(2)	; param n
 23290 00011212 50                      	push rax
 23291                                  	; preparing a non-tail-call
 23292 00011213 48B8-                   	mov rax, L_constants + 2284
 23292 00011215 [EC08000000000000] 
 23293 0001121D 50                      	push rax
 23294 0001121E 488B4528                	mov rax, PARAM(1)	; param i
 23295 00011222 50                      	push rax
 23296 00011223 6A02                    	push 2	; arg count
 23297 00011225 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 23298 0001122D 803805                  	cmp byte [rax], T_undefined
 23299 00011230 0F84284D0000            	je L_error_fvar_undefined
 23300 00011236 803804                  	cmp byte [rax], T_closure
 23301 00011239 0F85A34D0000            	jne L_error_non_closure
 23302 0001123F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23303 00011242 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23304 00011245 50                      	push rax
 23305 00011246 488B4520                	mov rax, PARAM(0)	; param str
 23306 0001124A 50                      	push rax
 23307 0001124B 6A03                    	push 3	; arg count
 23308 0001124D 488B4510                	mov rax, ENV
 23309 00011251 488B00                  	mov rax, qword [rax + 8 * 0]
 23310 00011254 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23311 00011257 488B00                  	mov rax, qword [rax]
 23312 0001125A 803804                  	cmp byte [rax], T_closure
 23313 0001125D 0F857F4D0000            	jne L_error_non_closure
 23314 00011263 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23315 00011266 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23316 00011269 50                      	push rax
 23317 0001126A 6A02                    	push 2
 23318 0001126C 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
 23319 00011274 803805                  	cmp byte [rax], T_undefined
 23320 00011277 0F84E14C0000            	je L_error_fvar_undefined
 23321 0001127D 803804                  	cmp byte [rax], T_closure
 23322 00011280 0F855C4D0000            	jne L_error_non_closure
 23323 00011286 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23324 00011289 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23325 0001128D 4C8B4D00                	mov r9, qword [rbp]
 23326 00011291 4150                    	push r8
 23327 00011293 4151                    	push r9
 23328 00011295 41BA06000000            	mov r10, 2 + 4
 23329 0001129B 4C8B5D18                	mov r11, COUNT
 23330 0001129F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23331 000112A4 4C8D65F8                	lea r12, [rbp - 8]
 23332                                  .L_tc_recycle_frame_loop_00c1:
 23333 000112A8 4983FA00                	cmp r10, 0
 23334 000112AC 7414                    	je .L_tc_recycle_frame_done_00c1
 23335 000112AE 4D8B2C24                	mov r13, qword [r12]
 23336 000112B2 4D892B                  	mov qword [r11], r13
 23337 000112B5 49FFCA                  	dec r10
 23338 000112B8 4983EB08                	sub r11, 8
 23339 000112BC 4983EC08                	sub r12, 8
 23340 000112C0 EBE6                    	jmp .L_tc_recycle_frame_loop_00c1
 23341                                  .L_tc_recycle_frame_done_00c1:
 23342 000112C2 498D6308                	lea rsp, [r11 + 8]
 23343 000112C6 5D                      	pop rbp
 23344 000112C7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23345 000112CA EB0A                    	jmp .L_if_end_0069
 23346                                  .L_if_else_0069:
 23347 000112CC 48B8-                   	mov rax, L_constants + 1
 23347 000112CE [0100000000000000] 
 23348                                  .L_if_end_0069:
 23349 000112D6 C9                      	leave
 23350 000112D7 C22800                  	ret AND_KILL_FRAME(3)
 23351                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23352 000112DA 803804                  	cmp byte [rax], T_closure
 23353 000112DD 0F85FF4C0000            	jne L_error_non_closure
 23354 000112E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23355 000112E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23356 000112E9 50                      	push rax
 23357 000112EA 488B4520                	mov rax, PARAM(0)	; param run
 23358 000112EE 8F00                    	pop qword [rax]
 23359 000112F0 48B8-                   	mov rax, sob_void
 23359 000112F2 [0000000000000000] 
 23360                                  
 23361 000112FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23362 000112FF E8874D0000              	call malloc
 23363 00011304 50                      	push rax
 23364 00011305 BF08000000              	mov rdi, 8 * 1	; new rib
 23365 0001130A E87C4D0000              	call malloc
 23366 0001130F 50                      	push rax
 23367 00011310 BF10000000              	mov rdi, 8 * 2	; extended env
 23368 00011315 E8714D0000              	call malloc
 23369 0001131A 488B7D10                	mov rdi, ENV
 23370 0001131E BE00000000              	mov rsi, 0
 23371 00011323 BA01000000              	mov rdx, 1
 23372                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23373 00011328 4883FE01                	cmp rsi, 1
 23374 0001132C 7410                    	je .L_lambda_simple_env_end_0094
 23375 0001132E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23376 00011332 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23377 00011336 48FFC6                  	inc rsi
 23378 00011339 48FFC2                  	inc rdx
 23379 0001133C EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23380                                  .L_lambda_simple_env_end_0094:
 23381 0001133E 5B                      	pop rbx
 23382 0001133F BE00000000              	mov rsi, 0
 23383                                  .L_lambda_simple_params_loop_0094:	; copy params
 23384 00011344 4883FE01                	cmp rsi, 1
 23385 00011348 740E                    	je .L_lambda_simple_params_end_0094
 23386 0001134A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23387 0001134F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23388 00011353 48FFC6                  	inc rsi
 23389 00011356 EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23390                                  .L_lambda_simple_params_end_0094:
 23391 00011358 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23392 0001135B 4889C3                  	mov rbx, rax
 23393 0001135E 58                      	pop rax
 23394 0001135F C60004                  	mov byte [rax], T_closure
 23395 00011362 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23396 00011366 48C74009[73130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23397 0001136E E9AF000000              	jmp .L_lambda_simple_end_0094
 23398                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23399 00011373 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23400 00011379 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23401 0001137B FF742410                	push qword [rsp + 8 * 2]
 23402 0001137F 6A01                    	push 1
 23403 00011381 E9BE4C0000              	jmp L_error_incorrect_arity_simple
 23404                                  .L_lambda_simple_arity_check_ok_0094:
 23405 00011386 C8000000                	enter 0, 0
 23406                                  	; Setting up for a tail-call
 23407 0001138A 488B4520                	mov rax, PARAM(0)	; param str
 23408 0001138E 50                      	push rax
 23409 0001138F 48B8-                   	mov rax, L_constants + 2149
 23409 00011391 [6508000000000000] 
 23410 00011399 50                      	push rax
 23411                                  	; preparing a non-tail-call
 23412 0001139A 488B4520                	mov rax, PARAM(0)	; param str
 23413 0001139E 50                      	push rax
 23414 0001139F 6A01                    	push 1	; arg count
 23415 000113A1 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 23416 000113A9 803805                  	cmp byte [rax], T_undefined
 23417 000113AC 0F84AC4B0000            	je L_error_fvar_undefined
 23418 000113B2 803804                  	cmp byte [rax], T_closure
 23419 000113B5 0F85274C0000            	jne L_error_non_closure
 23420 000113BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23421 000113BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23422 000113C1 50                      	push rax
 23423 000113C2 6A03                    	push 3
 23424 000113C4 488B4510                	mov rax, ENV
 23425 000113C8 488B00                  	mov rax, qword [rax + 8 * 0]
 23426 000113CB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23427 000113CE 488B00                  	mov rax, qword [rax]
 23428 000113D1 803804                  	cmp byte [rax], T_closure
 23429 000113D4 0F85084C0000            	jne L_error_non_closure
 23430 000113DA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23431 000113DD 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23432 000113E1 4C8B4D00                	mov r9, qword [rbp]
 23433 000113E5 4150                    	push r8
 23434 000113E7 4151                    	push r9
 23435 000113E9 41BA07000000            	mov r10, 3 + 4
 23436 000113EF 4C8B5D18                	mov r11, COUNT
 23437 000113F3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23438 000113F8 4C8D65F8                	lea r12, [rbp - 8]
 23439                                  .L_tc_recycle_frame_loop_00c2:
 23440 000113FC 4983FA00                	cmp r10, 0
 23441 00011400 7414                    	je .L_tc_recycle_frame_done_00c2
 23442 00011402 4D8B2C24                	mov r13, qword [r12]
 23443 00011406 4D892B                  	mov qword [r11], r13
 23444 00011409 49FFCA                  	dec r10
 23445 0001140C 4983EB08                	sub r11, 8
 23446 00011410 4983EC08                	sub r12, 8
 23447 00011414 EBE6                    	jmp .L_tc_recycle_frame_loop_00c2
 23448                                  .L_tc_recycle_frame_done_00c2:
 23449 00011416 498D6308                	lea rsp, [r11 + 8]
 23450 0001141A 5D                      	pop rbp
 23451 0001141B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23452 0001141E C9                      	leave
 23453 0001141F C21800                  	ret AND_KILL_FRAME(1)
 23454                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23455 00011422 C9                      	leave
 23456 00011423 C21800                  	ret AND_KILL_FRAME(1)
 23457                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23458 00011426 803804                  	cmp byte [rax], T_closure
 23459 00011429 0F85B34B0000            	jne L_error_non_closure
 23460 0001142F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23461 00011432 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23462 00011435 48890425[FA150000]      	mov qword [free_var_121], rax
 23463 0001143D 48B8-                   	mov rax, sob_void
 23463 0001143F [0000000000000000] 
 23464                                  
 23465 00011447 4889C7                  	mov rdi, rax
 23466 0001144A E8914E0000              	call print_sexpr_if_not_void
 23467                                  	; preparing a non-tail-call
 23468 0001144F 48B8-                   	mov rax, L_constants + 1993
 23468 00011451 [C907000000000000] 
 23469 00011459 50                      	push rax
 23470 0001145A 6A01                    	push 1	; arg count
 23471 0001145C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23472 00011461 E8254C0000              	call malloc
 23473 00011466 50                      	push rax
 23474 00011467 BF00000000              	mov rdi, 8 * 0	; new rib
 23475 0001146C E81A4C0000              	call malloc
 23476 00011471 50                      	push rax
 23477 00011472 BF08000000              	mov rdi, 8 * 1	; extended env
 23478 00011477 E80F4C0000              	call malloc
 23479 0001147C 488B7D10                	mov rdi, ENV
 23480 00011480 BE00000000              	mov rsi, 0
 23481 00011485 BA01000000              	mov rdx, 1
 23482                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23483 0001148A 4883FE00                	cmp rsi, 0
 23484 0001148E 7410                    	je .L_lambda_simple_env_end_0095
 23485 00011490 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23486 00011494 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23487 00011498 48FFC6                  	inc rsi
 23488 0001149B 48FFC2                  	inc rdx
 23489 0001149E EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23490                                  .L_lambda_simple_env_end_0095:
 23491 000114A0 5B                      	pop rbx
 23492 000114A1 BE00000000              	mov rsi, 0
 23493                                  .L_lambda_simple_params_loop_0095:	; copy params
 23494 000114A6 4883FE00                	cmp rsi, 0
 23495 000114AA 740E                    	je .L_lambda_simple_params_end_0095
 23496 000114AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23497 000114B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23498 000114B5 48FFC6                  	inc rsi
 23499 000114B8 EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23500                                  .L_lambda_simple_params_end_0095:
 23501 000114BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23502 000114BD 4889C3                  	mov rbx, rax
 23503 000114C0 58                      	pop rax
 23504 000114C1 C60004                  	mov byte [rax], T_closure
 23505 000114C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23506 000114C8 48C74009[D5140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23507 000114D0 E945030000              	jmp .L_lambda_simple_end_0095
 23508                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23509 000114D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23510 000114DB 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23511 000114DD FF742410                	push qword [rsp + 8 * 2]
 23512 000114E1 6A01                    	push 1
 23513 000114E3 E95C4B0000              	jmp L_error_incorrect_arity_simple
 23514                                  .L_lambda_simple_arity_check_ok_0095:
 23515 000114E8 C8000000                	enter 0, 0
 23516 000114EC BF08000000              	mov rdi, 8 * 1
 23517 000114F1 E8954B0000              	call malloc
 23518 000114F6 488B5D20                	mov rbx, PARAM(0)
 23519 000114FA 488918                  	mov qword [rax], rbx
 23520 000114FD 48894520                	mov PARAM(0), rax
 23521 00011501 48B8-                   	mov rax, sob_void
 23521 00011503 [0000000000000000] 
 23522                                  
 23523                                  	; preparing a non-tail-call
 23524 0001150B 6A00                    	push 0	; arg count
 23525 0001150D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23526 00011512 E8744B0000              	call malloc
 23527 00011517 50                      	push rax
 23528 00011518 BF08000000              	mov rdi, 8 * 1	; new rib
 23529 0001151D E8694B0000              	call malloc
 23530 00011522 50                      	push rax
 23531 00011523 BF10000000              	mov rdi, 8 * 2	; extended env
 23532 00011528 E85E4B0000              	call malloc
 23533 0001152D 488B7D10                	mov rdi, ENV
 23534 00011531 BE00000000              	mov rsi, 0
 23535 00011536 BA01000000              	mov rdx, 1
 23536                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23537 0001153B 4883FE01                	cmp rsi, 1
 23538 0001153F 7410                    	je .L_lambda_simple_env_end_0096
 23539 00011541 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23540 00011545 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23541 00011549 48FFC6                  	inc rsi
 23542 0001154C 48FFC2                  	inc rdx
 23543 0001154F EBEA                    	jmp .L_lambda_simple_env_loop_0096
 23544                                  .L_lambda_simple_env_end_0096:
 23545 00011551 5B                      	pop rbx
 23546 00011552 BE00000000              	mov rsi, 0
 23547                                  .L_lambda_simple_params_loop_0096:	; copy params
 23548 00011557 4883FE01                	cmp rsi, 1
 23549 0001155B 740E                    	je .L_lambda_simple_params_end_0096
 23550 0001155D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23551 00011562 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23552 00011566 48FFC6                  	inc rsi
 23553 00011569 EBEC                    	jmp .L_lambda_simple_params_loop_0096
 23554                                  .L_lambda_simple_params_end_0096:
 23555 0001156B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23556 0001156E 4889C3                  	mov rbx, rax
 23557 00011571 58                      	pop rax
 23558 00011572 C60004                  	mov byte [rax], T_closure
 23559 00011575 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23560 00011579 48C74009[86150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 23561 00011581 E948010000              	jmp .L_lambda_simple_end_0096
 23562                                  .L_lambda_simple_code_0096:	; lambda-simple body
 23563 00011586 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23564 0001158C 740B                    	je .L_lambda_simple_arity_check_ok_0096
 23565 0001158E FF742410                	push qword [rsp + 8 * 2]
 23566 00011592 6A03                    	push 3
 23567 00011594 E9AB4A0000              	jmp L_error_incorrect_arity_simple
 23568                                  .L_lambda_simple_arity_check_ok_0096:
 23569 00011599 C8000000                	enter 0, 0
 23570                                  	; preparing a non-tail-call
 23571 0001159D 488B4530                	mov rax, PARAM(2)	; param n
 23572 000115A1 50                      	push rax
 23573 000115A2 488B4528                	mov rax, PARAM(1)	; param i
 23574 000115A6 50                      	push rax
 23575 000115A7 6A02                    	push 2	; arg count
 23576 000115A9 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 23577 000115B1 803805                  	cmp byte [rax], T_undefined
 23578 000115B4 0F84A4490000            	je L_error_fvar_undefined
 23579 000115BA 803804                  	cmp byte [rax], T_closure
 23580 000115BD 0F851F4A0000            	jne L_error_non_closure
 23581 000115C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23582 000115C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23583 000115C9 483D[02000000]          	cmp rax, sob_boolean_false
 23584 000115CF 0F84EB000000            	je .L_if_else_006a
 23585                                  	; Setting up for a tail-call
 23586                                  	; preparing a non-tail-call
 23587 000115D5 488B4528                	mov rax, PARAM(1)	; param i
 23588 000115D9 50                      	push rax
 23589 000115DA 488B4520                	mov rax, PARAM(0)	; param v
 23590 000115DE 50                      	push rax
 23591 000115DF 6A02                    	push 2	; arg count
 23592 000115E1 488B0425[A3170000]      	mov rax, qword [free_var_146]	; free var vector-ref
 23593 000115E9 803805                  	cmp byte [rax], T_undefined
 23594 000115EC 0F846C490000            	je L_error_fvar_undefined
 23595 000115F2 803804                  	cmp byte [rax], T_closure
 23596 000115F5 0F85E7490000            	jne L_error_non_closure
 23597 000115FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23598 000115FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23599 00011601 50                      	push rax
 23600                                  	; preparing a non-tail-call
 23601 00011602 488B4530                	mov rax, PARAM(2)	; param n
 23602 00011606 50                      	push rax
 23603                                  	; preparing a non-tail-call
 23604 00011607 48B8-                   	mov rax, L_constants + 2284
 23604 00011609 [EC08000000000000] 
 23605 00011611 50                      	push rax
 23606 00011612 488B4528                	mov rax, PARAM(1)	; param i
 23607 00011616 50                      	push rax
 23608 00011617 6A02                    	push 2	; arg count
 23609 00011619 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 23610 00011621 803805                  	cmp byte [rax], T_undefined
 23611 00011624 0F8434490000            	je L_error_fvar_undefined
 23612 0001162A 803804                  	cmp byte [rax], T_closure
 23613 0001162D 0F85AF490000            	jne L_error_non_closure
 23614 00011633 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23615 00011636 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23616 00011639 50                      	push rax
 23617 0001163A 488B4520                	mov rax, PARAM(0)	; param v
 23618 0001163E 50                      	push rax
 23619 0001163F 6A03                    	push 3	; arg count
 23620 00011641 488B4510                	mov rax, ENV
 23621 00011645 488B00                  	mov rax, qword [rax + 8 * 0]
 23622 00011648 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23623 0001164B 488B00                  	mov rax, qword [rax]
 23624 0001164E 803804                  	cmp byte [rax], T_closure
 23625 00011651 0F858B490000            	jne L_error_non_closure
 23626 00011657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23627 0001165A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23628 0001165D 50                      	push rax
 23629 0001165E 6A02                    	push 2
 23630 00011660 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
 23631 00011668 803805                  	cmp byte [rax], T_undefined
 23632 0001166B 0F84ED480000            	je L_error_fvar_undefined
 23633 00011671 803804                  	cmp byte [rax], T_closure
 23634 00011674 0F8568490000            	jne L_error_non_closure
 23635 0001167A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23636 0001167D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23637 00011681 4C8B4D00                	mov r9, qword [rbp]
 23638 00011685 4150                    	push r8
 23639 00011687 4151                    	push r9
 23640 00011689 41BA06000000            	mov r10, 2 + 4
 23641 0001168F 4C8B5D18                	mov r11, COUNT
 23642 00011693 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23643 00011698 4C8D65F8                	lea r12, [rbp - 8]
 23644                                  .L_tc_recycle_frame_loop_00c3:
 23645 0001169C 4983FA00                	cmp r10, 0
 23646 000116A0 7414                    	je .L_tc_recycle_frame_done_00c3
 23647 000116A2 4D8B2C24                	mov r13, qword [r12]
 23648 000116A6 4D892B                  	mov qword [r11], r13
 23649 000116A9 49FFCA                  	dec r10
 23650 000116AC 4983EB08                	sub r11, 8
 23651 000116B0 4983EC08                	sub r12, 8
 23652 000116B4 EBE6                    	jmp .L_tc_recycle_frame_loop_00c3
 23653                                  .L_tc_recycle_frame_done_00c3:
 23654 000116B6 498D6308                	lea rsp, [r11 + 8]
 23655 000116BA 5D                      	pop rbp
 23656 000116BB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23657 000116BE EB0A                    	jmp .L_if_end_006a
 23658                                  .L_if_else_006a:
 23659 000116C0 48B8-                   	mov rax, L_constants + 1
 23659 000116C2 [0100000000000000] 
 23660                                  .L_if_end_006a:
 23661 000116CA C9                      	leave
 23662 000116CB C22800                  	ret AND_KILL_FRAME(3)
 23663                                  .L_lambda_simple_end_0096:	; new closure is in rax
 23664 000116CE 803804                  	cmp byte [rax], T_closure
 23665 000116D1 0F850B490000            	jne L_error_non_closure
 23666 000116D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23667 000116DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 23668 000116DD 50                      	push rax
 23669 000116DE 488B4520                	mov rax, PARAM(0)	; param run
 23670 000116E2 8F00                    	pop qword [rax]
 23671 000116E4 48B8-                   	mov rax, sob_void
 23671 000116E6 [0000000000000000] 
 23672                                  
 23673 000116EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23674 000116F3 E893490000              	call malloc
 23675 000116F8 50                      	push rax
 23676 000116F9 BF08000000              	mov rdi, 8 * 1	; new rib
 23677 000116FE E888490000              	call malloc
 23678 00011703 50                      	push rax
 23679 00011704 BF10000000              	mov rdi, 8 * 2	; extended env
 23680 00011709 E87D490000              	call malloc
 23681 0001170E 488B7D10                	mov rdi, ENV
 23682 00011712 BE00000000              	mov rsi, 0
 23683 00011717 BA01000000              	mov rdx, 1
 23684                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 23685 0001171C 4883FE01                	cmp rsi, 1
 23686 00011720 7410                    	je .L_lambda_simple_env_end_0097
 23687 00011722 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23688 00011726 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23689 0001172A 48FFC6                  	inc rsi
 23690 0001172D 48FFC2                  	inc rdx
 23691 00011730 EBEA                    	jmp .L_lambda_simple_env_loop_0097
 23692                                  .L_lambda_simple_env_end_0097:
 23693 00011732 5B                      	pop rbx
 23694 00011733 BE00000000              	mov rsi, 0
 23695                                  .L_lambda_simple_params_loop_0097:	; copy params
 23696 00011738 4883FE01                	cmp rsi, 1
 23697 0001173C 740E                    	je .L_lambda_simple_params_end_0097
 23698 0001173E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23699 00011743 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23700 00011747 48FFC6                  	inc rsi
 23701 0001174A EBEC                    	jmp .L_lambda_simple_params_loop_0097
 23702                                  .L_lambda_simple_params_end_0097:
 23703 0001174C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23704 0001174F 4889C3                  	mov rbx, rax
 23705 00011752 58                      	pop rax
 23706 00011753 C60004                  	mov byte [rax], T_closure
 23707 00011756 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23708 0001175A 48C74009[67170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 23709 00011762 E9AF000000              	jmp .L_lambda_simple_end_0097
 23710                                  .L_lambda_simple_code_0097:	; lambda-simple body
 23711 00011767 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23712 0001176D 740B                    	je .L_lambda_simple_arity_check_ok_0097
 23713 0001176F FF742410                	push qword [rsp + 8 * 2]
 23714 00011773 6A01                    	push 1
 23715 00011775 E9CA480000              	jmp L_error_incorrect_arity_simple
 23716                                  .L_lambda_simple_arity_check_ok_0097:
 23717 0001177A C8000000                	enter 0, 0
 23718                                  	; Setting up for a tail-call
 23719 0001177E 488B4520                	mov rax, PARAM(0)	; param v
 23720 00011782 50                      	push rax
 23721 00011783 48B8-                   	mov rax, L_constants + 2149
 23721 00011785 [6508000000000000] 
 23722 0001178D 50                      	push rax
 23723                                  	; preparing a non-tail-call
 23724 0001178E 488B4520                	mov rax, PARAM(0)	; param v
 23725 00011792 50                      	push rax
 23726 00011793 6A01                    	push 1	; arg count
 23727 00011795 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 23728 0001179D 803805                  	cmp byte [rax], T_undefined
 23729 000117A0 0F84B8470000            	je L_error_fvar_undefined
 23730 000117A6 803804                  	cmp byte [rax], T_closure
 23731 000117A9 0F8533480000            	jne L_error_non_closure
 23732 000117AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23733 000117B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23734 000117B5 50                      	push rax
 23735 000117B6 6A03                    	push 3
 23736 000117B8 488B4510                	mov rax, ENV
 23737 000117BC 488B00                  	mov rax, qword [rax + 8 * 0]
 23738 000117BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23739 000117C2 488B00                  	mov rax, qword [rax]
 23740 000117C5 803804                  	cmp byte [rax], T_closure
 23741 000117C8 0F8514480000            	jne L_error_non_closure
 23742 000117CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23743 000117D1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23744 000117D5 4C8B4D00                	mov r9, qword [rbp]
 23745 000117D9 4150                    	push r8
 23746 000117DB 4151                    	push r9
 23747 000117DD 41BA07000000            	mov r10, 3 + 4
 23748 000117E3 4C8B5D18                	mov r11, COUNT
 23749 000117E7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23750 000117EC 4C8D65F8                	lea r12, [rbp - 8]
 23751                                  .L_tc_recycle_frame_loop_00c4:
 23752 000117F0 4983FA00                	cmp r10, 0
 23753 000117F4 7414                    	je .L_tc_recycle_frame_done_00c4
 23754 000117F6 4D8B2C24                	mov r13, qword [r12]
 23755 000117FA 4D892B                  	mov qword [r11], r13
 23756 000117FD 49FFCA                  	dec r10
 23757 00011800 4983EB08                	sub r11, 8
 23758 00011804 4983EC08                	sub r12, 8
 23759 00011808 EBE6                    	jmp .L_tc_recycle_frame_loop_00c4
 23760                                  .L_tc_recycle_frame_done_00c4:
 23761 0001180A 498D6308                	lea rsp, [r11 + 8]
 23762 0001180E 5D                      	pop rbp
 23763 0001180F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23764 00011812 C9                      	leave
 23765 00011813 C21800                  	ret AND_KILL_FRAME(1)
 23766                                  .L_lambda_simple_end_0097:	; new closure is in rax
 23767 00011816 C9                      	leave
 23768 00011817 C21800                  	ret AND_KILL_FRAME(1)
 23769                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23770 0001181A 803804                  	cmp byte [rax], T_closure
 23771 0001181D 0F85BF470000            	jne L_error_non_closure
 23772 00011823 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23773 00011826 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23774 00011829 48890425[70170000]      	mov qword [free_var_143], rax
 23775 00011831 48B8-                   	mov rax, sob_void
 23775 00011833 [0000000000000000] 
 23776                                  
 23777 0001183B 4889C7                  	mov rdi, rax
 23778 0001183E E89D4A0000              	call print_sexpr_if_not_void
 23779 00011843 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23780 00011848 E83E480000              	call malloc
 23781 0001184D 50                      	push rax
 23782 0001184E BF00000000              	mov rdi, 8 * 0	; new rib
 23783 00011853 E833480000              	call malloc
 23784 00011858 50                      	push rax
 23785 00011859 BF08000000              	mov rdi, 8 * 1	; extended env
 23786 0001185E E828480000              	call malloc
 23787 00011863 488B7D10                	mov rdi, ENV
 23788 00011867 BE00000000              	mov rsi, 0
 23789 0001186C BA01000000              	mov rdx, 1
 23790                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 23791 00011871 4883FE00                	cmp rsi, 0
 23792 00011875 7410                    	je .L_lambda_simple_env_end_0098
 23793 00011877 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23794 0001187B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23795 0001187F 48FFC6                  	inc rsi
 23796 00011882 48FFC2                  	inc rdx
 23797 00011885 EBEA                    	jmp .L_lambda_simple_env_loop_0098
 23798                                  .L_lambda_simple_env_end_0098:
 23799 00011887 5B                      	pop rbx
 23800 00011888 BE00000000              	mov rsi, 0
 23801                                  .L_lambda_simple_params_loop_0098:	; copy params
 23802 0001188D 4883FE00                	cmp rsi, 0
 23803 00011891 740E                    	je .L_lambda_simple_params_end_0098
 23804 00011893 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23805 00011898 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23806 0001189C 48FFC6                  	inc rsi
 23807 0001189F EBEC                    	jmp .L_lambda_simple_params_loop_0098
 23808                                  .L_lambda_simple_params_end_0098:
 23809 000118A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23810 000118A4 4889C3                  	mov rbx, rax
 23811 000118A7 58                      	pop rax
 23812 000118A8 C60004                  	mov byte [rax], T_closure
 23813 000118AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23814 000118AF 48C74009[BC180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 23815 000118B7 E9A3000000              	jmp .L_lambda_simple_end_0098
 23816                                  .L_lambda_simple_code_0098:	; lambda-simple body
 23817 000118BC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23818 000118C2 740B                    	je .L_lambda_simple_arity_check_ok_0098
 23819 000118C4 FF742410                	push qword [rsp + 8 * 2]
 23820 000118C8 6A01                    	push 1
 23821 000118CA E975470000              	jmp L_error_incorrect_arity_simple
 23822                                  .L_lambda_simple_arity_check_ok_0098:
 23823 000118CF C8000000                	enter 0, 0
 23824                                  	; Setting up for a tail-call
 23825                                  	; preparing a non-tail-call
 23826 000118D3 6A00                    	push 0	; arg count
 23827 000118D5 488B0425[4E170000]      	mov rax, qword [free_var_141]	; free var trng
 23828 000118DD 803805                  	cmp byte [rax], T_undefined
 23829 000118E0 0F8478460000            	je L_error_fvar_undefined
 23830 000118E6 803804                  	cmp byte [rax], T_closure
 23831 000118E9 0F85F3460000            	jne L_error_non_closure
 23832 000118EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23833 000118F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23834 000118F5 50                      	push rax
 23835 000118F6 488B4520                	mov rax, PARAM(0)	; param n
 23836 000118FA 50                      	push rax
 23837 000118FB 6A02                    	push 2
 23838 000118FD 488B0425[C7150000]      	mov rax, qword [free_var_118]	; free var remainder
 23839 00011905 803805                  	cmp byte [rax], T_undefined
 23840 00011908 0F8450460000            	je L_error_fvar_undefined
 23841 0001190E 803804                  	cmp byte [rax], T_closure
 23842 00011911 0F85CB460000            	jne L_error_non_closure
 23843 00011917 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23844 0001191A 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23845 0001191E 4C8B4D00                	mov r9, qword [rbp]
 23846 00011922 4150                    	push r8
 23847 00011924 4151                    	push r9
 23848 00011926 41BA06000000            	mov r10, 2 + 4
 23849 0001192C 4C8B5D18                	mov r11, COUNT
 23850 00011930 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23851 00011935 4C8D65F8                	lea r12, [rbp - 8]
 23852                                  .L_tc_recycle_frame_loop_00c5:
 23853 00011939 4983FA00                	cmp r10, 0
 23854 0001193D 7414                    	je .L_tc_recycle_frame_done_00c5
 23855 0001193F 4D8B2C24                	mov r13, qword [r12]
 23856 00011943 4D892B                  	mov qword [r11], r13
 23857 00011946 49FFCA                  	dec r10
 23858 00011949 4983EB08                	sub r11, 8
 23859 0001194D 4983EC08                	sub r12, 8
 23860 00011951 EBE6                    	jmp .L_tc_recycle_frame_loop_00c5
 23861                                  .L_tc_recycle_frame_done_00c5:
 23862 00011953 498D6308                	lea rsp, [r11 + 8]
 23863 00011957 5D                      	pop rbp
 23864 00011958 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23865 0001195B C9                      	leave
 23866 0001195C C21800                  	ret AND_KILL_FRAME(1)
 23867                                  .L_lambda_simple_end_0098:	; new closure is in rax
 23868 0001195F 48890425[83150000]      	mov qword [free_var_114], rax
 23869 00011967 48B8-                   	mov rax, sob_void
 23869 00011969 [0000000000000000] 
 23870                                  
 23871 00011971 4889C7                  	mov rdi, rax
 23872 00011974 E867490000              	call print_sexpr_if_not_void
 23873 00011979 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23874 0001197E E808470000              	call malloc
 23875 00011983 50                      	push rax
 23876 00011984 BF00000000              	mov rdi, 8 * 0	; new rib
 23877 00011989 E8FD460000              	call malloc
 23878 0001198E 50                      	push rax
 23879 0001198F BF08000000              	mov rdi, 8 * 1	; extended env
 23880 00011994 E8F2460000              	call malloc
 23881 00011999 488B7D10                	mov rdi, ENV
 23882 0001199D BE00000000              	mov rsi, 0
 23883 000119A2 BA01000000              	mov rdx, 1
 23884                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 23885 000119A7 4883FE00                	cmp rsi, 0
 23886 000119AB 7410                    	je .L_lambda_simple_env_end_0099
 23887 000119AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23888 000119B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23889 000119B5 48FFC6                  	inc rsi
 23890 000119B8 48FFC2                  	inc rdx
 23891 000119BB EBEA                    	jmp .L_lambda_simple_env_loop_0099
 23892                                  .L_lambda_simple_env_end_0099:
 23893 000119BD 5B                      	pop rbx
 23894 000119BE BE00000000              	mov rsi, 0
 23895                                  .L_lambda_simple_params_loop_0099:	; copy params
 23896 000119C3 4883FE00                	cmp rsi, 0
 23897 000119C7 740E                    	je .L_lambda_simple_params_end_0099
 23898 000119C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23899 000119CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23900 000119D2 48FFC6                  	inc rsi
 23901 000119D5 EBEC                    	jmp .L_lambda_simple_params_loop_0099
 23902                                  .L_lambda_simple_params_end_0099:
 23903 000119D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23904 000119DA 4889C3                  	mov rbx, rax
 23905 000119DD 58                      	pop rax
 23906 000119DE C60004                  	mov byte [rax], T_closure
 23907 000119E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23908 000119E5 48C74009[F2190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 23909 000119ED E98B000000              	jmp .L_lambda_simple_end_0099
 23910                                  .L_lambda_simple_code_0099:	; lambda-simple body
 23911 000119F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23912 000119F8 740B                    	je .L_lambda_simple_arity_check_ok_0099
 23913 000119FA FF742410                	push qword [rsp + 8 * 2]
 23914 000119FE 6A01                    	push 1
 23915 00011A00 E93F460000              	jmp L_error_incorrect_arity_simple
 23916                                  .L_lambda_simple_arity_check_ok_0099:
 23917 00011A05 C8000000                	enter 0, 0
 23918                                  	; Setting up for a tail-call
 23919 00011A09 48B8-                   	mov rax, L_constants + 2149
 23919 00011A0B [6508000000000000] 
 23920 00011A13 50                      	push rax
 23921 00011A14 488B4520                	mov rax, PARAM(0)	; param x
 23922 00011A18 50                      	push rax
 23923 00011A19 6A02                    	push 2
 23924 00011A1B 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 23925 00011A23 803805                  	cmp byte [rax], T_undefined
 23926 00011A26 0F8432450000            	je L_error_fvar_undefined
 23927 00011A2C 803804                  	cmp byte [rax], T_closure
 23928 00011A2F 0F85AD450000            	jne L_error_non_closure
 23929 00011A35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23930 00011A38 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 23931 00011A3C 4C8B4D00                	mov r9, qword [rbp]
 23932 00011A40 4150                    	push r8
 23933 00011A42 4151                    	push r9
 23934 00011A44 41BA06000000            	mov r10, 2 + 4
 23935 00011A4A 4C8B5D18                	mov r11, COUNT
 23936 00011A4E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 23937 00011A53 4C8D65F8                	lea r12, [rbp - 8]
 23938                                  .L_tc_recycle_frame_loop_00c6:
 23939 00011A57 4983FA00                	cmp r10, 0
 23940 00011A5B 7414                    	je .L_tc_recycle_frame_done_00c6
 23941 00011A5D 4D8B2C24                	mov r13, qword [r12]
 23942 00011A61 4D892B                  	mov qword [r11], r13
 23943 00011A64 49FFCA                  	dec r10
 23944 00011A67 4983EB08                	sub r11, 8
 23945 00011A6B 4983EC08                	sub r12, 8
 23946 00011A6F EBE6                    	jmp .L_tc_recycle_frame_loop_00c6
 23947                                  .L_tc_recycle_frame_done_00c6:
 23948 00011A71 498D6308                	lea rsp, [r11 + 8]
 23949 00011A75 5D                      	pop rbp
 23950 00011A76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23951 00011A79 C9                      	leave
 23952 00011A7A C21800                  	ret AND_KILL_FRAME(1)
 23953                                  .L_lambda_simple_end_0099:	; new closure is in rax
 23954 00011A7D 48890425[72150000]      	mov qword [free_var_113], rax
 23955 00011A85 48B8-                   	mov rax, sob_void
 23955 00011A87 [0000000000000000] 
 23956                                  
 23957 00011A8F 4889C7                  	mov rdi, rax
 23958 00011A92 E849480000              	call print_sexpr_if_not_void
 23959 00011A97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23960 00011A9C E8EA450000              	call malloc
 23961 00011AA1 50                      	push rax
 23962 00011AA2 BF00000000              	mov rdi, 8 * 0	; new rib
 23963 00011AA7 E8DF450000              	call malloc
 23964 00011AAC 50                      	push rax
 23965 00011AAD BF08000000              	mov rdi, 8 * 1	; extended env
 23966 00011AB2 E8D4450000              	call malloc
 23967 00011AB7 488B7D10                	mov rdi, ENV
 23968 00011ABB BE00000000              	mov rsi, 0
 23969 00011AC0 BA01000000              	mov rdx, 1
 23970                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 23971 00011AC5 4883FE00                	cmp rsi, 0
 23972 00011AC9 7410                    	je .L_lambda_simple_env_end_009a
 23973 00011ACB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23974 00011ACF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23975 00011AD3 48FFC6                  	inc rsi
 23976 00011AD6 48FFC2                  	inc rdx
 23977 00011AD9 EBEA                    	jmp .L_lambda_simple_env_loop_009a
 23978                                  .L_lambda_simple_env_end_009a:
 23979 00011ADB 5B                      	pop rbx
 23980 00011ADC BE00000000              	mov rsi, 0
 23981                                  .L_lambda_simple_params_loop_009a:	; copy params
 23982 00011AE1 4883FE00                	cmp rsi, 0
 23983 00011AE5 740E                    	je .L_lambda_simple_params_end_009a
 23984 00011AE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23985 00011AEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23986 00011AF0 48FFC6                  	inc rsi
 23987 00011AF3 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 23988                                  .L_lambda_simple_params_end_009a:
 23989 00011AF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23990 00011AF8 4889C3                  	mov rbx, rax
 23991 00011AFB 58                      	pop rax
 23992 00011AFC C60004                  	mov byte [rax], T_closure
 23993 00011AFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23994 00011B03 48C74009[101B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 23995 00011B0B E98B000000              	jmp .L_lambda_simple_end_009a
 23996                                  .L_lambda_simple_code_009a:	; lambda-simple body
 23997 00011B10 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23998 00011B16 740B                    	je .L_lambda_simple_arity_check_ok_009a
 23999 00011B18 FF742410                	push qword [rsp + 8 * 2]
 24000 00011B1C 6A01                    	push 1
 24001 00011B1E E921450000              	jmp L_error_incorrect_arity_simple
 24002                                  .L_lambda_simple_arity_check_ok_009a:
 24003 00011B23 C8000000                	enter 0, 0
 24004                                  	; Setting up for a tail-call
 24005 00011B27 488B4520                	mov rax, PARAM(0)	; param x
 24006 00011B2B 50                      	push rax
 24007 00011B2C 48B8-                   	mov rax, L_constants + 2149
 24007 00011B2E [6508000000000000] 
 24008 00011B36 50                      	push rax
 24009 00011B37 6A02                    	push 2
 24010 00011B39 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 24011 00011B41 803805                  	cmp byte [rax], T_undefined
 24012 00011B44 0F8414440000            	je L_error_fvar_undefined
 24013 00011B4A 803804                  	cmp byte [rax], T_closure
 24014 00011B4D 0F858F440000            	jne L_error_non_closure
 24015 00011B53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24016 00011B56 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24017 00011B5A 4C8B4D00                	mov r9, qword [rbp]
 24018 00011B5E 4150                    	push r8
 24019 00011B60 4151                    	push r9
 24020 00011B62 41BA06000000            	mov r10, 2 + 4
 24021 00011B68 4C8B5D18                	mov r11, COUNT
 24022 00011B6C 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24023 00011B71 4C8D65F8                	lea r12, [rbp - 8]
 24024                                  .L_tc_recycle_frame_loop_00c7:
 24025 00011B75 4983FA00                	cmp r10, 0
 24026 00011B79 7414                    	je .L_tc_recycle_frame_done_00c7
 24027 00011B7B 4D8B2C24                	mov r13, qword [r12]
 24028 00011B7F 4D892B                  	mov qword [r11], r13
 24029 00011B82 49FFCA                  	dec r10
 24030 00011B85 4983EB08                	sub r11, 8
 24031 00011B89 4983EC08                	sub r12, 8
 24032 00011B8D EBE6                    	jmp .L_tc_recycle_frame_loop_00c7
 24033                                  .L_tc_recycle_frame_done_00c7:
 24034 00011B8F 498D6308                	lea rsp, [r11 + 8]
 24035 00011B93 5D                      	pop rbp
 24036 00011B94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24037 00011B97 C9                      	leave
 24038 00011B98 C21800                  	ret AND_KILL_FRAME(1)
 24039                                  .L_lambda_simple_end_009a:	; new closure is in rax
 24040 00011B9B 48890425[EA140000]      	mov qword [free_var_105], rax
 24041 00011BA3 48B8-                   	mov rax, sob_void
 24041 00011BA5 [0000000000000000] 
 24042                                  
 24043 00011BAD 4889C7                  	mov rdi, rax
 24044 00011BB0 E82B470000              	call print_sexpr_if_not_void
 24045 00011BB5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24046 00011BBA E8CC440000              	call malloc
 24047 00011BBF 50                      	push rax
 24048 00011BC0 BF00000000              	mov rdi, 8 * 0	; new rib
 24049 00011BC5 E8C1440000              	call malloc
 24050 00011BCA 50                      	push rax
 24051 00011BCB BF08000000              	mov rdi, 8 * 1	; extended env
 24052 00011BD0 E8B6440000              	call malloc
 24053 00011BD5 488B7D10                	mov rdi, ENV
 24054 00011BD9 BE00000000              	mov rsi, 0
 24055 00011BDE BA01000000              	mov rdx, 1
 24056                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 24057 00011BE3 4883FE00                	cmp rsi, 0
 24058 00011BE7 7410                    	je .L_lambda_simple_env_end_009b
 24059 00011BE9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24060 00011BED 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24061 00011BF1 48FFC6                  	inc rsi
 24062 00011BF4 48FFC2                  	inc rdx
 24063 00011BF7 EBEA                    	jmp .L_lambda_simple_env_loop_009b
 24064                                  .L_lambda_simple_env_end_009b:
 24065 00011BF9 5B                      	pop rbx
 24066 00011BFA BE00000000              	mov rsi, 0
 24067                                  .L_lambda_simple_params_loop_009b:	; copy params
 24068 00011BFF 4883FE00                	cmp rsi, 0
 24069 00011C03 740E                    	je .L_lambda_simple_params_end_009b
 24070 00011C05 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24071 00011C0A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24072 00011C0E 48FFC6                  	inc rsi
 24073 00011C11 EBEC                    	jmp .L_lambda_simple_params_loop_009b
 24074                                  .L_lambda_simple_params_end_009b:
 24075 00011C13 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24076 00011C16 4889C3                  	mov rbx, rax
 24077 00011C19 58                      	pop rax
 24078 00011C1A C60004                  	mov byte [rax], T_closure
 24079 00011C1D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24080 00011C21 48C74009[2E1C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 24081 00011C29 E9AE000000              	jmp .L_lambda_simple_end_009b
 24082                                  .L_lambda_simple_code_009b:	; lambda-simple body
 24083 00011C2E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24084 00011C34 740B                    	je .L_lambda_simple_arity_check_ok_009b
 24085 00011C36 FF742410                	push qword [rsp + 8 * 2]
 24086 00011C3A 6A01                    	push 1
 24087 00011C3C E903440000              	jmp L_error_incorrect_arity_simple
 24088                                  .L_lambda_simple_arity_check_ok_009b:
 24089 00011C41 C8000000                	enter 0, 0
 24090                                  	; Setting up for a tail-call
 24091                                  	; preparing a non-tail-call
 24092 00011C45 48B8-                   	mov rax, L_constants + 3204
 24092 00011C47 [840C000000000000] 
 24093 00011C4F 50                      	push rax
 24094 00011C50 488B4520                	mov rax, PARAM(0)	; param n
 24095 00011C54 50                      	push rax
 24096 00011C55 6A02                    	push 2	; arg count
 24097 00011C57 488B0425[C7150000]      	mov rax, qword [free_var_118]	; free var remainder
 24098 00011C5F 803805                  	cmp byte [rax], T_undefined
 24099 00011C62 0F84F6420000            	je L_error_fvar_undefined
 24100 00011C68 803804                  	cmp byte [rax], T_closure
 24101 00011C6B 0F8571430000            	jne L_error_non_closure
 24102 00011C71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24103 00011C74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24104 00011C77 50                      	push rax
 24105 00011C78 6A01                    	push 1
 24106 00011C7A 488B0425[1A180000]      	mov rax, qword [free_var_153]	; free var zero?
 24107 00011C82 803805                  	cmp byte [rax], T_undefined
 24108 00011C85 0F84D3420000            	je L_error_fvar_undefined
 24109 00011C8B 803804                  	cmp byte [rax], T_closure
 24110 00011C8E 0F854E430000            	jne L_error_non_closure
 24111 00011C94 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24112 00011C97 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24113 00011C9B 4C8B4D00                	mov r9, qword [rbp]
 24114 00011C9F 4150                    	push r8
 24115 00011CA1 4151                    	push r9
 24116 00011CA3 41BA05000000            	mov r10, 1 + 4
 24117 00011CA9 4C8B5D18                	mov r11, COUNT
 24118 00011CAD 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24119 00011CB2 4C8D65F8                	lea r12, [rbp - 8]
 24120                                  .L_tc_recycle_frame_loop_00c8:
 24121 00011CB6 4983FA00                	cmp r10, 0
 24122 00011CBA 7414                    	je .L_tc_recycle_frame_done_00c8
 24123 00011CBC 4D8B2C24                	mov r13, qword [r12]
 24124 00011CC0 4D892B                  	mov qword [r11], r13
 24125 00011CC3 49FFCA                  	dec r10
 24126 00011CC6 4983EB08                	sub r11, 8
 24127 00011CCA 4983EC08                	sub r12, 8
 24128 00011CCE EBE6                    	jmp .L_tc_recycle_frame_loop_00c8
 24129                                  .L_tc_recycle_frame_done_00c8:
 24130 00011CD0 498D6308                	lea rsp, [r11 + 8]
 24131 00011CD4 5D                      	pop rbp
 24132 00011CD5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24133 00011CD8 C9                      	leave
 24134 00011CD9 C21800                  	ret AND_KILL_FRAME(1)
 24135                                  .L_lambda_simple_end_009b:	; new closure is in rax
 24136 00011CDC 48890425[85130000]      	mov qword [free_var_84], rax
 24137 00011CE4 48B8-                   	mov rax, sob_void
 24137 00011CE6 [0000000000000000] 
 24138                                  
 24139 00011CEE 4889C7                  	mov rdi, rax
 24140 00011CF1 E8EA450000              	call print_sexpr_if_not_void
 24141 00011CF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24142 00011CFB E88B430000              	call malloc
 24143 00011D00 50                      	push rax
 24144 00011D01 BF00000000              	mov rdi, 8 * 0	; new rib
 24145 00011D06 E880430000              	call malloc
 24146 00011D0B 50                      	push rax
 24147 00011D0C BF08000000              	mov rdi, 8 * 1	; extended env
 24148 00011D11 E875430000              	call malloc
 24149 00011D16 488B7D10                	mov rdi, ENV
 24150 00011D1A BE00000000              	mov rsi, 0
 24151 00011D1F BA01000000              	mov rdx, 1
 24152                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 24153 00011D24 4883FE00                	cmp rsi, 0
 24154 00011D28 7410                    	je .L_lambda_simple_env_end_009c
 24155 00011D2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24156 00011D2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24157 00011D32 48FFC6                  	inc rsi
 24158 00011D35 48FFC2                  	inc rdx
 24159 00011D38 EBEA                    	jmp .L_lambda_simple_env_loop_009c
 24160                                  .L_lambda_simple_env_end_009c:
 24161 00011D3A 5B                      	pop rbx
 24162 00011D3B BE00000000              	mov rsi, 0
 24163                                  .L_lambda_simple_params_loop_009c:	; copy params
 24164 00011D40 4883FE00                	cmp rsi, 0
 24165 00011D44 740E                    	je .L_lambda_simple_params_end_009c
 24166 00011D46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24167 00011D4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24168 00011D4F 48FFC6                  	inc rsi
 24169 00011D52 EBEC                    	jmp .L_lambda_simple_params_loop_009c
 24170                                  .L_lambda_simple_params_end_009c:
 24171 00011D54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24172 00011D57 4889C3                  	mov rbx, rax
 24173 00011D5A 58                      	pop rax
 24174 00011D5B C60004                  	mov byte [rax], T_closure
 24175 00011D5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24176 00011D62 48C74009[6F1D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 24177 00011D6A E9A3000000              	jmp .L_lambda_simple_end_009c
 24178                                  .L_lambda_simple_code_009c:	; lambda-simple body
 24179 00011D6F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24180 00011D75 740B                    	je .L_lambda_simple_arity_check_ok_009c
 24181 00011D77 FF742410                	push qword [rsp + 8 * 2]
 24182 00011D7B 6A01                    	push 1
 24183 00011D7D E9C2420000              	jmp L_error_incorrect_arity_simple
 24184                                  .L_lambda_simple_arity_check_ok_009c:
 24185 00011D82 C8000000                	enter 0, 0
 24186                                  	; Setting up for a tail-call
 24187                                  	; preparing a non-tail-call
 24188 00011D86 488B4520                	mov rax, PARAM(0)	; param n
 24189 00011D8A 50                      	push rax
 24190 00011D8B 6A01                    	push 1	; arg count
 24191 00011D8D 488B0425[85130000]      	mov rax, qword [free_var_84]	; free var even?
 24192 00011D95 803805                  	cmp byte [rax], T_undefined
 24193 00011D98 0F84C0410000            	je L_error_fvar_undefined
 24194 00011D9E 803804                  	cmp byte [rax], T_closure
 24195 00011DA1 0F853B420000            	jne L_error_non_closure
 24196 00011DA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24197 00011DAA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24198 00011DAD 50                      	push rax
 24199 00011DAE 6A01                    	push 1
 24200 00011DB0 488B0425[0C150000]      	mov rax, qword [free_var_107]	; free var not
 24201 00011DB8 803805                  	cmp byte [rax], T_undefined
 24202 00011DBB 0F849D410000            	je L_error_fvar_undefined
 24203 00011DC1 803804                  	cmp byte [rax], T_closure
 24204 00011DC4 0F8518420000            	jne L_error_non_closure
 24205 00011DCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24206 00011DCD 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24207 00011DD1 4C8B4D00                	mov r9, qword [rbp]
 24208 00011DD5 4150                    	push r8
 24209 00011DD7 4151                    	push r9
 24210 00011DD9 41BA05000000            	mov r10, 1 + 4
 24211 00011DDF 4C8B5D18                	mov r11, COUNT
 24212 00011DE3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24213 00011DE8 4C8D65F8                	lea r12, [rbp - 8]
 24214                                  .L_tc_recycle_frame_loop_00c9:
 24215 00011DEC 4983FA00                	cmp r10, 0
 24216 00011DF0 7414                    	je .L_tc_recycle_frame_done_00c9
 24217 00011DF2 4D8B2C24                	mov r13, qword [r12]
 24218 00011DF6 4D892B                  	mov qword [r11], r13
 24219 00011DF9 49FFCA                  	dec r10
 24220 00011DFC 4983EB08                	sub r11, 8
 24221 00011E00 4983EC08                	sub r12, 8
 24222 00011E04 EBE6                    	jmp .L_tc_recycle_frame_loop_00c9
 24223                                  .L_tc_recycle_frame_done_00c9:
 24224 00011E06 498D6308                	lea rsp, [r11 + 8]
 24225 00011E0A 5D                      	pop rbp
 24226 00011E0B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24227 00011E0E C9                      	leave
 24228 00011E0F C21800                  	ret AND_KILL_FRAME(1)
 24229                                  .L_lambda_simple_end_009c:	; new closure is in rax
 24230 00011E12 48890425[3F150000]      	mov qword [free_var_110], rax
 24231 00011E1A 48B8-                   	mov rax, sob_void
 24231 00011E1C [0000000000000000] 
 24232                                  
 24233 00011E24 4889C7                  	mov rdi, rax
 24234 00011E27 E8B4440000              	call print_sexpr_if_not_void
 24235 00011E2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24236 00011E31 E855420000              	call malloc
 24237 00011E36 50                      	push rax
 24238 00011E37 BF00000000              	mov rdi, 8 * 0	; new rib
 24239 00011E3C E84A420000              	call malloc
 24240 00011E41 50                      	push rax
 24241 00011E42 BF08000000              	mov rdi, 8 * 1	; extended env
 24242 00011E47 E83F420000              	call malloc
 24243 00011E4C 488B7D10                	mov rdi, ENV
 24244 00011E50 BE00000000              	mov rsi, 0
 24245 00011E55 BA01000000              	mov rdx, 1
 24246                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 24247 00011E5A 4883FE00                	cmp rsi, 0
 24248 00011E5E 7410                    	je .L_lambda_simple_env_end_009d
 24249 00011E60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24250 00011E64 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24251 00011E68 48FFC6                  	inc rsi
 24252 00011E6B 48FFC2                  	inc rdx
 24253 00011E6E EBEA                    	jmp .L_lambda_simple_env_loop_009d
 24254                                  .L_lambda_simple_env_end_009d:
 24255 00011E70 5B                      	pop rbx
 24256 00011E71 BE00000000              	mov rsi, 0
 24257                                  .L_lambda_simple_params_loop_009d:	; copy params
 24258 00011E76 4883FE00                	cmp rsi, 0
 24259 00011E7A 740E                    	je .L_lambda_simple_params_end_009d
 24260 00011E7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24261 00011E81 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24262 00011E85 48FFC6                  	inc rsi
 24263 00011E88 EBEC                    	jmp .L_lambda_simple_params_loop_009d
 24264                                  .L_lambda_simple_params_end_009d:
 24265 00011E8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24266 00011E8D 4889C3                  	mov rbx, rax
 24267 00011E90 58                      	pop rax
 24268 00011E91 C60004                  	mov byte [rax], T_closure
 24269 00011E94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24270 00011E98 48C74009[A51E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 24271 00011EA0 E9B5000000              	jmp .L_lambda_simple_end_009d
 24272                                  .L_lambda_simple_code_009d:	; lambda-simple body
 24273 00011EA5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24274 00011EAB 740B                    	je .L_lambda_simple_arity_check_ok_009d
 24275 00011EAD FF742410                	push qword [rsp + 8 * 2]
 24276 00011EB1 6A01                    	push 1
 24277 00011EB3 E98C410000              	jmp L_error_incorrect_arity_simple
 24278                                  .L_lambda_simple_arity_check_ok_009d:
 24279 00011EB8 C8000000                	enter 0, 0
 24280                                  	; preparing a non-tail-call
 24281 00011EBC 488B4520                	mov rax, PARAM(0)	; param x
 24282 00011EC0 50                      	push rax
 24283 00011EC1 6A01                    	push 1	; arg count
 24284 00011EC3 488B0425[EA140000]      	mov rax, qword [free_var_105]	; free var negative?
 24285 00011ECB 803805                  	cmp byte [rax], T_undefined
 24286 00011ECE 0F848A400000            	je L_error_fvar_undefined
 24287 00011ED4 803804                  	cmp byte [rax], T_closure
 24288 00011ED7 0F8505410000            	jne L_error_non_closure
 24289 00011EDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24290 00011EE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24291 00011EE3 483D[02000000]          	cmp rax, sob_boolean_false
 24292 00011EE9 7467                    	je .L_if_else_006b
 24293                                  	; Setting up for a tail-call
 24294 00011EEB 488B4520                	mov rax, PARAM(0)	; param x
 24295 00011EEF 50                      	push rax
 24296 00011EF0 6A01                    	push 1
 24297 00011EF2 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 24298 00011EFA 803805                  	cmp byte [rax], T_undefined
 24299 00011EFD 0F845B400000            	je L_error_fvar_undefined
 24300 00011F03 803804                  	cmp byte [rax], T_closure
 24301 00011F06 0F85D6400000            	jne L_error_non_closure
 24302 00011F0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24303 00011F0F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24304 00011F13 4C8B4D00                	mov r9, qword [rbp]
 24305 00011F17 4150                    	push r8
 24306 00011F19 4151                    	push r9
 24307 00011F1B 41BA05000000            	mov r10, 1 + 4
 24308 00011F21 4C8B5D18                	mov r11, COUNT
 24309 00011F25 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24310 00011F2A 4C8D65F8                	lea r12, [rbp - 8]
 24311                                  .L_tc_recycle_frame_loop_00ca:
 24312 00011F2E 4983FA00                	cmp r10, 0
 24313 00011F32 7414                    	je .L_tc_recycle_frame_done_00ca
 24314 00011F34 4D8B2C24                	mov r13, qword [r12]
 24315 00011F38 4D892B                  	mov qword [r11], r13
 24316 00011F3B 49FFCA                  	dec r10
 24317 00011F3E 4983EB08                	sub r11, 8
 24318 00011F42 4983EC08                	sub r12, 8
 24319 00011F46 EBE6                    	jmp .L_tc_recycle_frame_loop_00ca
 24320                                  .L_tc_recycle_frame_done_00ca:
 24321 00011F48 498D6308                	lea rsp, [r11 + 8]
 24322 00011F4C 5D                      	pop rbp
 24323 00011F4D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24324 00011F50 EB04                    	jmp .L_if_end_006b
 24325                                  .L_if_else_006b:
 24326 00011F52 488B4520                	mov rax, PARAM(0)	; param x
 24327                                  .L_if_end_006b:
 24328 00011F56 C9                      	leave
 24329 00011F57 C21800                  	ret AND_KILL_FRAME(1)
 24330                                  .L_lambda_simple_end_009d:	; new closure is in rax
 24331 00011F5A 48890425[EF0F0000]      	mov qword [free_var_30], rax
 24332 00011F62 48B8-                   	mov rax, sob_void
 24332 00011F64 [0000000000000000] 
 24333                                  
 24334 00011F6C 4889C7                  	mov rdi, rax
 24335 00011F6F E86C430000              	call print_sexpr_if_not_void
 24336 00011F74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24337 00011F79 E80D410000              	call malloc
 24338 00011F7E 50                      	push rax
 24339 00011F7F BF00000000              	mov rdi, 8 * 0	; new rib
 24340 00011F84 E802410000              	call malloc
 24341 00011F89 50                      	push rax
 24342 00011F8A BF08000000              	mov rdi, 8 * 1	; extended env
 24343 00011F8F E8F7400000              	call malloc
 24344 00011F94 488B7D10                	mov rdi, ENV
 24345 00011F98 BE00000000              	mov rsi, 0
 24346 00011F9D BA01000000              	mov rdx, 1
 24347                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 24348 00011FA2 4883FE00                	cmp rsi, 0
 24349 00011FA6 7410                    	je .L_lambda_simple_env_end_009e
 24350 00011FA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24351 00011FAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24352 00011FB0 48FFC6                  	inc rsi
 24353 00011FB3 48FFC2                  	inc rdx
 24354 00011FB6 EBEA                    	jmp .L_lambda_simple_env_loop_009e
 24355                                  .L_lambda_simple_env_end_009e:
 24356 00011FB8 5B                      	pop rbx
 24357 00011FB9 BE00000000              	mov rsi, 0
 24358                                  .L_lambda_simple_params_loop_009e:	; copy params
 24359 00011FBE 4883FE00                	cmp rsi, 0
 24360 00011FC2 740E                    	je .L_lambda_simple_params_end_009e
 24361 00011FC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24362 00011FC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24363 00011FCD 48FFC6                  	inc rsi
 24364 00011FD0 EBEC                    	jmp .L_lambda_simple_params_loop_009e
 24365                                  .L_lambda_simple_params_end_009e:
 24366 00011FD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24367 00011FD5 4889C3                  	mov rbx, rax
 24368 00011FD8 58                      	pop rax
 24369 00011FD9 C60004                  	mov byte [rax], T_closure
 24370 00011FDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24371 00011FE0 48C74009[ED1F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 24372 00011FE8 E9F1060000              	jmp .L_lambda_simple_end_009e
 24373                                  .L_lambda_simple_code_009e:	; lambda-simple body
 24374 00011FED 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24375 00011FF3 740B                    	je .L_lambda_simple_arity_check_ok_009e
 24376 00011FF5 FF742410                	push qword [rsp + 8 * 2]
 24377 00011FF9 6A02                    	push 2
 24378 00011FFB E944400000              	jmp L_error_incorrect_arity_simple
 24379                                  .L_lambda_simple_arity_check_ok_009e:
 24380 00012000 C8000000                	enter 0, 0
 24381                                  	; preparing a non-tail-call
 24382 00012004 488B4520                	mov rax, PARAM(0)	; param e1
 24383 00012008 50                      	push rax
 24384 00012009 6A01                    	push 1	; arg count
 24385 0001200B 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
 24386 00012013 803805                  	cmp byte [rax], T_undefined
 24387 00012016 0F84423F0000            	je L_error_fvar_undefined
 24388 0001201C 803804                  	cmp byte [rax], T_closure
 24389 0001201F 0F85BD3F0000            	jne L_error_non_closure
 24390 00012025 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24391 00012028 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24392 0001202B 483D[02000000]          	cmp rax, sob_boolean_false
 24393 00012031 7429                    	je .L_if_else_006c
 24394                                  	; preparing a non-tail-call
 24395 00012033 488B4528                	mov rax, PARAM(1)	; param e2
 24396 00012037 50                      	push rax
 24397 00012038 6A01                    	push 1	; arg count
 24398 0001203A 488B0425[61150000]      	mov rax, qword [free_var_112]	; free var pair?
 24399 00012042 803805                  	cmp byte [rax], T_undefined
 24400 00012045 0F84133F0000            	je L_error_fvar_undefined
 24401 0001204B 803804                  	cmp byte [rax], T_closure
 24402 0001204E 0F858E3F0000            	jne L_error_non_closure
 24403 00012054 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24404 00012057 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24405 0001205A EB0A                    	jmp .L_if_end_006c
 24406                                  .L_if_else_006c:
 24407 0001205C 48B8-                   	mov rax, L_constants + 2
 24407 0001205E [0200000000000000] 
 24408                                  .L_if_end_006c:
 24409 00012066 483D[02000000]          	cmp rax, sob_boolean_false
 24410 0001206C 0F843F010000            	je .L_if_else_0078
 24411                                  	; preparing a non-tail-call
 24412                                  	; preparing a non-tail-call
 24413 00012072 488B4528                	mov rax, PARAM(1)	; param e2
 24414 00012076 50                      	push rax
 24415 00012077 6A01                    	push 1	; arg count
 24416 00012079 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 24417 00012081 803805                  	cmp byte [rax], T_undefined
 24418 00012084 0F84D43E0000            	je L_error_fvar_undefined
 24419 0001208A 803804                  	cmp byte [rax], T_closure
 24420 0001208D 0F854F3F0000            	jne L_error_non_closure
 24421 00012093 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24422 00012096 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24423 00012099 50                      	push rax
 24424                                  	; preparing a non-tail-call
 24425 0001209A 488B4520                	mov rax, PARAM(0)	; param e1
 24426 0001209E 50                      	push rax
 24427 0001209F 6A01                    	push 1	; arg count
 24428 000120A1 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 24429 000120A9 803805                  	cmp byte [rax], T_undefined
 24430 000120AC 0F84AC3E0000            	je L_error_fvar_undefined
 24431 000120B2 803804                  	cmp byte [rax], T_closure
 24432 000120B5 0F85273F0000            	jne L_error_non_closure
 24433 000120BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24434 000120BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24435 000120C1 50                      	push rax
 24436 000120C2 6A02                    	push 2	; arg count
 24437 000120C4 488B0425[63130000]      	mov rax, qword [free_var_82]	; free var equal?
 24438 000120CC 803805                  	cmp byte [rax], T_undefined
 24439 000120CF 0F84893E0000            	je L_error_fvar_undefined
 24440 000120D5 803804                  	cmp byte [rax], T_closure
 24441 000120D8 0F85043F0000            	jne L_error_non_closure
 24442 000120DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 24443 000120E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24444 000120E4 483D[02000000]          	cmp rax, sob_boolean_false
 24445 000120EA 0F84B2000000            	je .L_if_else_006d
 24446                                  	; Setting up for a tail-call
 24447                                  	; preparing a non-tail-call
 24448 000120F0 488B4520                	mov rax, PARAM(0)	; param e1
 24449 000120F4 50                      	push rax
 24450 000120F5 6A01                    	push 1	; arg count
 24451 000120F7 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 24452 000120FF 803805                  	cmp byte [rax], T_undefined
 24453 00012102 0F84563E0000            	je L_error_fvar_undefined
 24454 00012108 803804                  	cmp byte [rax], T_closure
 24455 0001210B 0F85D13E0000            	jne L_error_non_closure
 24456 00012111 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24457 00012114 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24458 00012117 50                      	push rax
 24459                                  	; preparing a non-tail-call
 24460 00012118 488B4528                	mov rax, PARAM(1)	; param e2
 24461 0001211C 50                      	push rax
 24462 0001211D 6A01                    	push 1	; arg count
 24463 0001211F 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 24464 00012127 803805                  	cmp byte [rax], T_undefined
 24465 0001212A 0F842E3E0000            	je L_error_fvar_undefined
 24466 00012130 803804                  	cmp byte [rax], T_closure
 24467 00012133 0F85A93E0000            	jne L_error_non_closure
 24468 00012139 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24469 0001213C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24470 0001213F 50                      	push rax
 24471 00012140 6A02                    	push 2
 24472 00012142 488B0425[63130000]      	mov rax, qword [free_var_82]	; free var equal?
 24473 0001214A 803805                  	cmp byte [rax], T_undefined
 24474 0001214D 0F840B3E0000            	je L_error_fvar_undefined
 24475 00012153 803804                  	cmp byte [rax], T_closure
 24476 00012156 0F85863E0000            	jne L_error_non_closure
 24477 0001215C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24478 0001215F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24479 00012163 4C8B4D00                	mov r9, qword [rbp]
 24480 00012167 4150                    	push r8
 24481 00012169 4151                    	push r9
 24482 0001216B 41BA06000000            	mov r10, 2 + 4
 24483 00012171 4C8B5D18                	mov r11, COUNT
 24484 00012175 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24485 0001217A 4C8D65F8                	lea r12, [rbp - 8]
 24486                                  .L_tc_recycle_frame_loop_00cb:
 24487 0001217E 4983FA00                	cmp r10, 0
 24488 00012182 7414                    	je .L_tc_recycle_frame_done_00cb
 24489 00012184 4D8B2C24                	mov r13, qword [r12]
 24490 00012188 4D892B                  	mov qword [r11], r13
 24491 0001218B 49FFCA                  	dec r10
 24492 0001218E 4983EB08                	sub r11, 8
 24493 00012192 4983EC08                	sub r12, 8
 24494 00012196 EBE6                    	jmp .L_tc_recycle_frame_loop_00cb
 24495                                  .L_tc_recycle_frame_done_00cb:
 24496 00012198 498D6308                	lea rsp, [r11 + 8]
 24497 0001219C 5D                      	pop rbp
 24498 0001219D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24499 000121A0 EB0A                    	jmp .L_if_end_006d
 24500                                  .L_if_else_006d:
 24501 000121A2 48B8-                   	mov rax, L_constants + 2
 24501 000121A4 [0200000000000000] 
 24502                                  .L_if_end_006d:
 24503 000121AC E929050000              	jmp .L_if_end_0078
 24504                                  .L_if_else_0078:
 24505                                  	; preparing a non-tail-call
 24506 000121B1 488B4520                	mov rax, PARAM(0)	; param e1
 24507 000121B5 50                      	push rax
 24508 000121B6 6A01                    	push 1	; arg count
 24509 000121B8 488B0425[E7170000]      	mov rax, qword [free_var_150]	; free var vector?
 24510 000121C0 803805                  	cmp byte [rax], T_undefined
 24511 000121C3 0F84953D0000            	je L_error_fvar_undefined
 24512 000121C9 803804                  	cmp byte [rax], T_closure
 24513 000121CC 0F85103E0000            	jne L_error_non_closure
 24514 000121D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24515 000121D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24516 000121D8 483D[02000000]          	cmp rax, sob_boolean_false
 24517 000121DE 0F84AF000000            	je .L_if_else_006f
 24518                                  	; preparing a non-tail-call
 24519 000121E4 488B4528                	mov rax, PARAM(1)	; param e2
 24520 000121E8 50                      	push rax
 24521 000121E9 6A01                    	push 1	; arg count
 24522 000121EB 488B0425[E7170000]      	mov rax, qword [free_var_150]	; free var vector?
 24523 000121F3 803805                  	cmp byte [rax], T_undefined
 24524 000121F6 0F84623D0000            	je L_error_fvar_undefined
 24525 000121FC 803804                  	cmp byte [rax], T_closure
 24526 000121FF 0F85DD3D0000            	jne L_error_non_closure
 24527 00012205 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24528 00012208 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24529 0001220B 483D[02000000]          	cmp rax, sob_boolean_false
 24530 00012211 7474                    	je .L_if_else_006e
 24531                                  	; preparing a non-tail-call
 24532                                  	; preparing a non-tail-call
 24533 00012213 488B4528                	mov rax, PARAM(1)	; param e2
 24534 00012217 50                      	push rax
 24535 00012218 6A01                    	push 1	; arg count
 24536 0001221A 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 24537 00012222 803805                  	cmp byte [rax], T_undefined
 24538 00012225 0F84333D0000            	je L_error_fvar_undefined
 24539 0001222B 803804                  	cmp byte [rax], T_closure
 24540 0001222E 0F85AE3D0000            	jne L_error_non_closure
 24541 00012234 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24542 00012237 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24543 0001223A 50                      	push rax
 24544                                  	; preparing a non-tail-call
 24545 0001223B 488B4520                	mov rax, PARAM(0)	; param e1
 24546 0001223F 50                      	push rax
 24547 00012240 6A01                    	push 1	; arg count
 24548 00012242 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 24549 0001224A 803805                  	cmp byte [rax], T_undefined
 24550 0001224D 0F840B3D0000            	je L_error_fvar_undefined
 24551 00012253 803804                  	cmp byte [rax], T_closure
 24552 00012256 0F85863D0000            	jne L_error_non_closure
 24553 0001225C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24554 0001225F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24555 00012262 50                      	push rax
 24556 00012263 6A02                    	push 2	; arg count
 24557 00012265 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 24558 0001226D 803805                  	cmp byte [rax], T_undefined
 24559 00012270 0F84E83C0000            	je L_error_fvar_undefined
 24560 00012276 803804                  	cmp byte [rax], T_closure
 24561 00012279 0F85633D0000            	jne L_error_non_closure
 24562 0001227F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24563 00012282 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24564 00012285 EB0A                    	jmp .L_if_end_006e
 24565                                  .L_if_else_006e:
 24566 00012287 48B8-                   	mov rax, L_constants + 2
 24566 00012289 [0200000000000000] 
 24567                                  .L_if_end_006e:
 24568 00012291 EB0A                    	jmp .L_if_end_006f
 24569                                  .L_if_else_006f:
 24570 00012293 48B8-                   	mov rax, L_constants + 2
 24570 00012295 [0200000000000000] 
 24571                                  .L_if_end_006f:
 24572 0001229D 483D[02000000]          	cmp rax, sob_boolean_false
 24573 000122A3 0F84B5000000            	je .L_if_else_0077
 24574                                  	; Setting up for a tail-call
 24575                                  	; preparing a non-tail-call
 24576 000122A9 488B4520                	mov rax, PARAM(0)	; param e1
 24577 000122AD 50                      	push rax
 24578 000122AE 6A01                    	push 1	; arg count
 24579 000122B0 488B0425[70170000]      	mov rax, qword [free_var_143]	; free var vector->list
 24580 000122B8 803805                  	cmp byte [rax], T_undefined
 24581 000122BB 0F849D3C0000            	je L_error_fvar_undefined
 24582 000122C1 803804                  	cmp byte [rax], T_closure
 24583 000122C4 0F85183D0000            	jne L_error_non_closure
 24584 000122CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24585 000122CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 24586 000122D0 50                      	push rax
 24587                                  	; preparing a non-tail-call
 24588 000122D1 488B4528                	mov rax, PARAM(1)	; param e2
 24589 000122D5 50                      	push rax
 24590 000122D6 6A01                    	push 1	; arg count
 24591 000122D8 488B0425[70170000]      	mov rax, qword [free_var_143]	; free var vector->list
 24592 000122E0 803805                  	cmp byte [rax], T_undefined
 24593 000122E3 0F84753C0000            	je L_error_fvar_undefined
 24594 000122E9 803804                  	cmp byte [rax], T_closure
 24595 000122EC 0F85F03C0000            	jne L_error_non_closure
 24596 000122F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24597 000122F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24598 000122F8 50                      	push rax
 24599 000122F9 6A02                    	push 2
 24600 000122FB 488B0425[63130000]      	mov rax, qword [free_var_82]	; free var equal?
 24601 00012303 803805                  	cmp byte [rax], T_undefined
 24602 00012306 0F84523C0000            	je L_error_fvar_undefined
 24603 0001230C 803804                  	cmp byte [rax], T_closure
 24604 0001230F 0F85CD3C0000            	jne L_error_non_closure
 24605 00012315 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24606 00012318 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24607 0001231C 4C8B4D00                	mov r9, qword [rbp]
 24608 00012320 4150                    	push r8
 24609 00012322 4151                    	push r9
 24610 00012324 41BA06000000            	mov r10, 2 + 4
 24611 0001232A 4C8B5D18                	mov r11, COUNT
 24612 0001232E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24613 00012333 4C8D65F8                	lea r12, [rbp - 8]
 24614                                  .L_tc_recycle_frame_loop_00cc:
 24615 00012337 4983FA00                	cmp r10, 0
 24616 0001233B 7414                    	je .L_tc_recycle_frame_done_00cc
 24617 0001233D 4D8B2C24                	mov r13, qword [r12]
 24618 00012341 4D892B                  	mov qword [r11], r13
 24619 00012344 49FFCA                  	dec r10
 24620 00012347 4983EB08                	sub r11, 8
 24621 0001234B 4983EC08                	sub r12, 8
 24622 0001234F EBE6                    	jmp .L_tc_recycle_frame_loop_00cc
 24623                                  .L_tc_recycle_frame_done_00cc:
 24624 00012351 498D6308                	lea rsp, [r11 + 8]
 24625 00012355 5D                      	pop rbp
 24626 00012356 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24627 00012359 E97C030000              	jmp .L_if_end_0077
 24628                                  .L_if_else_0077:
 24629                                  	; preparing a non-tail-call
 24630 0001235E 488B4520                	mov rax, PARAM(0)	; param e1
 24631 00012362 50                      	push rax
 24632 00012363 6A01                    	push 1	; arg count
 24633 00012365 488B0425[3D170000]      	mov rax, qword [free_var_140]	; free var string?
 24634 0001236D 803805                  	cmp byte [rax], T_undefined
 24635 00012370 0F84E83B0000            	je L_error_fvar_undefined
 24636 00012376 803804                  	cmp byte [rax], T_closure
 24637 00012379 0F85633C0000            	jne L_error_non_closure
 24638 0001237F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24639 00012382 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24640 00012385 483D[02000000]          	cmp rax, sob_boolean_false
 24641 0001238B 0F84AF000000            	je .L_if_else_0071
 24642                                  	; preparing a non-tail-call
 24643 00012391 488B4528                	mov rax, PARAM(1)	; param e2
 24644 00012395 50                      	push rax
 24645 00012396 6A01                    	push 1	; arg count
 24646 00012398 488B0425[3D170000]      	mov rax, qword [free_var_140]	; free var string?
 24647 000123A0 803805                  	cmp byte [rax], T_undefined
 24648 000123A3 0F84B53B0000            	je L_error_fvar_undefined
 24649 000123A9 803804                  	cmp byte [rax], T_closure
 24650 000123AC 0F85303C0000            	jne L_error_non_closure
 24651 000123B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24652 000123B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24653 000123B8 483D[02000000]          	cmp rax, sob_boolean_false
 24654 000123BE 7474                    	je .L_if_else_0070
 24655                                  	; preparing a non-tail-call
 24656                                  	; preparing a non-tail-call
 24657 000123C0 488B4528                	mov rax, PARAM(1)	; param e2
 24658 000123C4 50                      	push rax
 24659 000123C5 6A01                    	push 1	; arg count
 24660 000123C7 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 24661 000123CF 803805                  	cmp byte [rax], T_undefined
 24662 000123D2 0F84863B0000            	je L_error_fvar_undefined
 24663 000123D8 803804                  	cmp byte [rax], T_closure
 24664 000123DB 0F85013C0000            	jne L_error_non_closure
 24665 000123E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24666 000123E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24667 000123E7 50                      	push rax
 24668                                  	; preparing a non-tail-call
 24669 000123E8 488B4520                	mov rax, PARAM(0)	; param e1
 24670 000123EC 50                      	push rax
 24671 000123ED 6A01                    	push 1	; arg count
 24672 000123EF 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 24673 000123F7 803805                  	cmp byte [rax], T_undefined
 24674 000123FA 0F845E3B0000            	je L_error_fvar_undefined
 24675 00012400 803804                  	cmp byte [rax], T_closure
 24676 00012403 0F85D93B0000            	jne L_error_non_closure
 24677 00012409 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24678 0001240C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24679 0001240F 50                      	push rax
 24680 00012410 6A02                    	push 2	; arg count
 24681 00012412 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 24682 0001241A 803805                  	cmp byte [rax], T_undefined
 24683 0001241D 0F843B3B0000            	je L_error_fvar_undefined
 24684 00012423 803804                  	cmp byte [rax], T_closure
 24685 00012426 0F85B63B0000            	jne L_error_non_closure
 24686 0001242C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24687 0001242F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24688 00012432 EB0A                    	jmp .L_if_end_0070
 24689                                  .L_if_else_0070:
 24690 00012434 48B8-                   	mov rax, L_constants + 2
 24690 00012436 [0200000000000000] 
 24691                                  .L_if_end_0070:
 24692 0001243E EB0A                    	jmp .L_if_end_0071
 24693                                  .L_if_else_0071:
 24694 00012440 48B8-                   	mov rax, L_constants + 2
 24694 00012442 [0200000000000000] 
 24695                                  .L_if_end_0071:
 24696 0001244A 483D[02000000]          	cmp rax, sob_boolean_false
 24697 00012450 746F                    	je .L_if_else_0076
 24698                                  	; Setting up for a tail-call
 24699 00012452 488B4520                	mov rax, PARAM(0)	; param e1
 24700 00012456 50                      	push rax
 24701 00012457 488B4528                	mov rax, PARAM(1)	; param e2
 24702 0001245B 50                      	push rax
 24703 0001245C 6A02                    	push 2
 24704 0001245E 488B0425[0A170000]      	mov rax, qword [free_var_137]	; free var string=?
 24705 00012466 803805                  	cmp byte [rax], T_undefined
 24706 00012469 0F84EF3A0000            	je L_error_fvar_undefined
 24707 0001246F 803804                  	cmp byte [rax], T_closure
 24708 00012472 0F856A3B0000            	jne L_error_non_closure
 24709 00012478 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24710 0001247B 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24711 0001247F 4C8B4D00                	mov r9, qword [rbp]
 24712 00012483 4150                    	push r8
 24713 00012485 4151                    	push r9
 24714 00012487 41BA06000000            	mov r10, 2 + 4
 24715 0001248D 4C8B5D18                	mov r11, COUNT
 24716 00012491 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24717 00012496 4C8D65F8                	lea r12, [rbp - 8]
 24718                                  .L_tc_recycle_frame_loop_00cd:
 24719 0001249A 4983FA00                	cmp r10, 0
 24720 0001249E 7414                    	je .L_tc_recycle_frame_done_00cd
 24721 000124A0 4D8B2C24                	mov r13, qword [r12]
 24722 000124A4 4D892B                  	mov qword [r11], r13
 24723 000124A7 49FFCA                  	dec r10
 24724 000124AA 4983EB08                	sub r11, 8
 24725 000124AE 4983EC08                	sub r12, 8
 24726 000124B2 EBE6                    	jmp .L_tc_recycle_frame_loop_00cd
 24727                                  .L_tc_recycle_frame_done_00cd:
 24728 000124B4 498D6308                	lea rsp, [r11 + 8]
 24729 000124B8 5D                      	pop rbp
 24730 000124B9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24731 000124BC E919020000              	jmp .L_if_end_0076
 24732                                  .L_if_else_0076:
 24733                                  	; preparing a non-tail-call
 24734 000124C1 488B4520                	mov rax, PARAM(0)	; param e1
 24735 000124C5 50                      	push rax
 24736 000124C6 6A01                    	push 1	; arg count
 24737 000124C8 488B0425[2E150000]      	mov rax, qword [free_var_109]	; free var number?
 24738 000124D0 803805                  	cmp byte [rax], T_undefined
 24739 000124D3 0F84853A0000            	je L_error_fvar_undefined
 24740 000124D9 803804                  	cmp byte [rax], T_closure
 24741 000124DC 0F85003B0000            	jne L_error_non_closure
 24742 000124E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24743 000124E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24744 000124E8 483D[02000000]          	cmp rax, sob_boolean_false
 24745 000124EE 7429                    	je .L_if_else_0072
 24746                                  	; preparing a non-tail-call
 24747 000124F0 488B4528                	mov rax, PARAM(1)	; param e2
 24748 000124F4 50                      	push rax
 24749 000124F5 6A01                    	push 1	; arg count
 24750 000124F7 488B0425[2E150000]      	mov rax, qword [free_var_109]	; free var number?
 24751 000124FF 803805                  	cmp byte [rax], T_undefined
 24752 00012502 0F84563A0000            	je L_error_fvar_undefined
 24753 00012508 803804                  	cmp byte [rax], T_closure
 24754 0001250B 0F85D13A0000            	jne L_error_non_closure
 24755 00012511 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24756 00012514 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24757 00012517 EB0A                    	jmp .L_if_end_0072
 24758                                  .L_if_else_0072:
 24759 00012519 48B8-                   	mov rax, L_constants + 2
 24759 0001251B [0200000000000000] 
 24760                                  .L_if_end_0072:
 24761 00012523 483D[02000000]          	cmp rax, sob_boolean_false
 24762 00012529 746F                    	je .L_if_else_0075
 24763                                  	; Setting up for a tail-call
 24764 0001252B 488B4520                	mov rax, PARAM(0)	; param e1
 24765 0001252F 50                      	push rax
 24766 00012530 488B4528                	mov rax, PARAM(1)	; param e2
 24767 00012534 50                      	push rax
 24768 00012535 6A02                    	push 2
 24769 00012537 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 24770 0001253F 803805                  	cmp byte [rax], T_undefined
 24771 00012542 0F84163A0000            	je L_error_fvar_undefined
 24772 00012548 803804                  	cmp byte [rax], T_closure
 24773 0001254B 0F85913A0000            	jne L_error_non_closure
 24774 00012551 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24775 00012554 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24776 00012558 4C8B4D00                	mov r9, qword [rbp]
 24777 0001255C 4150                    	push r8
 24778 0001255E 4151                    	push r9
 24779 00012560 41BA06000000            	mov r10, 2 + 4
 24780 00012566 4C8B5D18                	mov r11, COUNT
 24781 0001256A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24782 0001256F 4C8D65F8                	lea r12, [rbp - 8]
 24783                                  .L_tc_recycle_frame_loop_00ce:
 24784 00012573 4983FA00                	cmp r10, 0
 24785 00012577 7414                    	je .L_tc_recycle_frame_done_00ce
 24786 00012579 4D8B2C24                	mov r13, qword [r12]
 24787 0001257D 4D892B                  	mov qword [r11], r13
 24788 00012580 49FFCA                  	dec r10
 24789 00012583 4983EB08                	sub r11, 8
 24790 00012587 4983EC08                	sub r12, 8
 24791 0001258B EBE6                    	jmp .L_tc_recycle_frame_loop_00ce
 24792                                  .L_tc_recycle_frame_done_00ce:
 24793 0001258D 498D6308                	lea rsp, [r11 + 8]
 24794 00012591 5D                      	pop rbp
 24795 00012592 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24796 00012595 E940010000              	jmp .L_if_end_0075
 24797                                  .L_if_else_0075:
 24798                                  	; preparing a non-tail-call
 24799 0001259A 488B4520                	mov rax, PARAM(0)	; param e1
 24800 0001259E 50                      	push rax
 24801 0001259F 6A01                    	push 1	; arg count
 24802 000125A1 488B0425[30130000]      	mov rax, qword [free_var_79]	; free var char?
 24803 000125A9 803805                  	cmp byte [rax], T_undefined
 24804 000125AC 0F84AC390000            	je L_error_fvar_undefined
 24805 000125B2 803804                  	cmp byte [rax], T_closure
 24806 000125B5 0F85273A0000            	jne L_error_non_closure
 24807 000125BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24808 000125BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24809 000125C1 483D[02000000]          	cmp rax, sob_boolean_false
 24810 000125C7 7429                    	je .L_if_else_0073
 24811                                  	; preparing a non-tail-call
 24812 000125C9 488B4528                	mov rax, PARAM(1)	; param e2
 24813 000125CD 50                      	push rax
 24814 000125CE 6A01                    	push 1	; arg count
 24815 000125D0 488B0425[30130000]      	mov rax, qword [free_var_79]	; free var char?
 24816 000125D8 803805                  	cmp byte [rax], T_undefined
 24817 000125DB 0F847D390000            	je L_error_fvar_undefined
 24818 000125E1 803804                  	cmp byte [rax], T_closure
 24819 000125E4 0F85F8390000            	jne L_error_non_closure
 24820 000125EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24821 000125ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 24822 000125F0 EB0A                    	jmp .L_if_end_0073
 24823                                  .L_if_else_0073:
 24824 000125F2 48B8-                   	mov rax, L_constants + 2
 24824 000125F4 [0200000000000000] 
 24825                                  .L_if_end_0073:
 24826 000125FC 483D[02000000]          	cmp rax, sob_boolean_false
 24827 00012602 746C                    	je .L_if_else_0074
 24828                                  	; Setting up for a tail-call
 24829 00012604 488B4520                	mov rax, PARAM(0)	; param e1
 24830 00012608 50                      	push rax
 24831 00012609 488B4528                	mov rax, PARAM(1)	; param e2
 24832 0001260D 50                      	push rax
 24833 0001260E 6A02                    	push 2
 24834 00012610 488B0425[FD120000]      	mov rax, qword [free_var_76]	; free var char=?
 24835 00012618 803805                  	cmp byte [rax], T_undefined
 24836 0001261B 0F843D390000            	je L_error_fvar_undefined
 24837 00012621 803804                  	cmp byte [rax], T_closure
 24838 00012624 0F85B8390000            	jne L_error_non_closure
 24839 0001262A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24840 0001262D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24841 00012631 4C8B4D00                	mov r9, qword [rbp]
 24842 00012635 4150                    	push r8
 24843 00012637 4151                    	push r9
 24844 00012639 41BA06000000            	mov r10, 2 + 4
 24845 0001263F 4C8B5D18                	mov r11, COUNT
 24846 00012643 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24847 00012648 4C8D65F8                	lea r12, [rbp - 8]
 24848                                  .L_tc_recycle_frame_loop_00cf:
 24849 0001264C 4983FA00                	cmp r10, 0
 24850 00012650 7414                    	je .L_tc_recycle_frame_done_00cf
 24851 00012652 4D8B2C24                	mov r13, qword [r12]
 24852 00012656 4D892B                  	mov qword [r11], r13
 24853 00012659 49FFCA                  	dec r10
 24854 0001265C 4983EB08                	sub r11, 8
 24855 00012660 4983EC08                	sub r12, 8
 24856 00012664 EBE6                    	jmp .L_tc_recycle_frame_loop_00cf
 24857                                  .L_tc_recycle_frame_done_00cf:
 24858 00012666 498D6308                	lea rsp, [r11 + 8]
 24859 0001266A 5D                      	pop rbp
 24860 0001266B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24861 0001266E EB6A                    	jmp .L_if_end_0074
 24862                                  .L_if_else_0074:
 24863                                  	; Setting up for a tail-call
 24864 00012670 488B4520                	mov rax, PARAM(0)	; param e1
 24865 00012674 50                      	push rax
 24866 00012675 488B4528                	mov rax, PARAM(1)	; param e2
 24867 00012679 50                      	push rax
 24868 0001267A 6A02                    	push 2
 24869 0001267C 488B0425[52130000]      	mov rax, qword [free_var_81]	; free var eq?
 24870 00012684 803805                  	cmp byte [rax], T_undefined
 24871 00012687 0F84D1380000            	je L_error_fvar_undefined
 24872 0001268D 803804                  	cmp byte [rax], T_closure
 24873 00012690 0F854C390000            	jne L_error_non_closure
 24874 00012696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24875 00012699 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 24876 0001269D 4C8B4D00                	mov r9, qword [rbp]
 24877 000126A1 4150                    	push r8
 24878 000126A3 4151                    	push r9
 24879 000126A5 41BA06000000            	mov r10, 2 + 4
 24880 000126AB 4C8B5D18                	mov r11, COUNT
 24881 000126AF 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 24882 000126B4 4C8D65F8                	lea r12, [rbp - 8]
 24883                                  .L_tc_recycle_frame_loop_00d0:
 24884 000126B8 4983FA00                	cmp r10, 0
 24885 000126BC 7414                    	je .L_tc_recycle_frame_done_00d0
 24886 000126BE 4D8B2C24                	mov r13, qword [r12]
 24887 000126C2 4D892B                  	mov qword [r11], r13
 24888 000126C5 49FFCA                  	dec r10
 24889 000126C8 4983EB08                	sub r11, 8
 24890 000126CC 4983EC08                	sub r12, 8
 24891 000126D0 EBE6                    	jmp .L_tc_recycle_frame_loop_00d0
 24892                                  .L_tc_recycle_frame_done_00d0:
 24893 000126D2 498D6308                	lea rsp, [r11 + 8]
 24894 000126D6 5D                      	pop rbp
 24895 000126D7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24896                                  .L_if_end_0074:
 24897                                  .L_if_end_0075:
 24898                                  .L_if_end_0076:
 24899                                  .L_if_end_0077:
 24900                                  .L_if_end_0078:
 24901 000126DA C9                      	leave
 24902 000126DB C22000                  	ret AND_KILL_FRAME(2)
 24903                                  .L_lambda_simple_end_009e:	; new closure is in rax
 24904 000126DE 48890425[63130000]      	mov qword [free_var_82], rax
 24905 000126E6 48B8-                   	mov rax, sob_void
 24905 000126E8 [0000000000000000] 
 24906                                  
 24907 000126F0 4889C7                  	mov rdi, rax
 24908 000126F3 E8E83B0000              	call print_sexpr_if_not_void
 24909 000126F8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24910 000126FD E889390000              	call malloc
 24911 00012702 50                      	push rax
 24912 00012703 BF00000000              	mov rdi, 8 * 0	; new rib
 24913 00012708 E87E390000              	call malloc
 24914 0001270D 50                      	push rax
 24915 0001270E BF08000000              	mov rdi, 8 * 1	; extended env
 24916 00012713 E873390000              	call malloc
 24917 00012718 488B7D10                	mov rdi, ENV
 24918 0001271C BE00000000              	mov rsi, 0
 24919 00012721 BA01000000              	mov rdx, 1
 24920                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 24921 00012726 4883FE00                	cmp rsi, 0
 24922 0001272A 7410                    	je .L_lambda_simple_env_end_009f
 24923 0001272C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24924 00012730 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24925 00012734 48FFC6                  	inc rsi
 24926 00012737 48FFC2                  	inc rdx
 24927 0001273A EBEA                    	jmp .L_lambda_simple_env_loop_009f
 24928                                  .L_lambda_simple_env_end_009f:
 24929 0001273C 5B                      	pop rbx
 24930 0001273D BE00000000              	mov rsi, 0
 24931                                  .L_lambda_simple_params_loop_009f:	; copy params
 24932 00012742 4883FE00                	cmp rsi, 0
 24933 00012746 740E                    	je .L_lambda_simple_params_end_009f
 24934 00012748 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24935 0001274D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24936 00012751 48FFC6                  	inc rsi
 24937 00012754 EBEC                    	jmp .L_lambda_simple_params_loop_009f
 24938                                  .L_lambda_simple_params_end_009f:
 24939 00012756 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24940 00012759 4889C3                  	mov rbx, rax
 24941 0001275C 58                      	pop rax
 24942 0001275D C60004                  	mov byte [rax], T_closure
 24943 00012760 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24944 00012764 48C74009[71270100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 24945 0001276C E9A7010000              	jmp .L_lambda_simple_end_009f
 24946                                  .L_lambda_simple_code_009f:	; lambda-simple body
 24947 00012771 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24948 00012777 740B                    	je .L_lambda_simple_arity_check_ok_009f
 24949 00012779 FF742410                	push qword [rsp + 8 * 2]
 24950 0001277D 6A02                    	push 2
 24951 0001277F E9C0380000              	jmp L_error_incorrect_arity_simple
 24952                                  .L_lambda_simple_arity_check_ok_009f:
 24953 00012784 C8000000                	enter 0, 0
 24954                                  	; preparing a non-tail-call
 24955 00012788 488B4528                	mov rax, PARAM(1)	; param s
 24956 0001278C 50                      	push rax
 24957 0001278D 6A01                    	push 1	; arg count
 24958 0001278F 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 24959 00012797 803805                  	cmp byte [rax], T_undefined
 24960 0001279A 0F84BE370000            	je L_error_fvar_undefined
 24961 000127A0 803804                  	cmp byte [rax], T_closure
 24962 000127A3 0F8539380000            	jne L_error_non_closure
 24963 000127A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24964 000127AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24965 000127AF 483D[02000000]          	cmp rax, sob_boolean_false
 24966 000127B5 740F                    	je .L_if_else_007a
 24967 000127B7 48B8-                   	mov rax, L_constants + 2
 24967 000127B9 [0200000000000000] 
 24968 000127C1 E94E010000              	jmp .L_if_end_007a
 24969                                  .L_if_else_007a:
 24970                                  	; preparing a non-tail-call
 24971 000127C6 488B4520                	mov rax, PARAM(0)	; param a
 24972 000127CA 50                      	push rax
 24973                                  	; preparing a non-tail-call
 24974 000127CB 488B4528                	mov rax, PARAM(1)	; param s
 24975 000127CF 50                      	push rax
 24976 000127D0 6A01                    	push 1	; arg count
 24977 000127D2 488B0425[BB100000]      	mov rax, qword [free_var_42]	; free var caar
 24978 000127DA 803805                  	cmp byte [rax], T_undefined
 24979 000127DD 0F847B370000            	je L_error_fvar_undefined
 24980 000127E3 803804                  	cmp byte [rax], T_closure
 24981 000127E6 0F85F6370000            	jne L_error_non_closure
 24982 000127EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24983 000127EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24984 000127F2 50                      	push rax
 24985 000127F3 6A02                    	push 2	; arg count
 24986 000127F5 488B0425[52130000]      	mov rax, qword [free_var_81]	; free var eq?
 24987 000127FD 803805                  	cmp byte [rax], T_undefined
 24988 00012800 0F8458370000            	je L_error_fvar_undefined
 24989 00012806 803804                  	cmp byte [rax], T_closure
 24990 00012809 0F85D3370000            	jne L_error_non_closure
 24991 0001280F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24992 00012812 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24993 00012815 483D[02000000]          	cmp rax, sob_boolean_false
 24994 0001281B 746A                    	je .L_if_else_0079
 24995                                  	; Setting up for a tail-call
 24996 0001281D 488B4528                	mov rax, PARAM(1)	; param s
 24997 00012821 50                      	push rax
 24998 00012822 6A01                    	push 1
 24999 00012824 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 25000 0001282C 803805                  	cmp byte [rax], T_undefined
 25001 0001282F 0F8429370000            	je L_error_fvar_undefined
 25002 00012835 803804                  	cmp byte [rax], T_closure
 25003 00012838 0F85A4370000            	jne L_error_non_closure
 25004 0001283E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25005 00012841 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 25006 00012845 4C8B4D00                	mov r9, qword [rbp]
 25007 00012849 4150                    	push r8
 25008 0001284B 4151                    	push r9
 25009 0001284D 41BA05000000            	mov r10, 1 + 4
 25010 00012853 4C8B5D18                	mov r11, COUNT
 25011 00012857 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 25012 0001285C 4C8D65F8                	lea r12, [rbp - 8]
 25013                                  .L_tc_recycle_frame_loop_00d1:
 25014 00012860 4983FA00                	cmp r10, 0
 25015 00012864 7414                    	je .L_tc_recycle_frame_done_00d1
 25016 00012866 4D8B2C24                	mov r13, qword [r12]
 25017 0001286A 4D892B                  	mov qword [r11], r13
 25018 0001286D 49FFCA                  	dec r10
 25019 00012870 4983EB08                	sub r11, 8
 25020 00012874 4983EC08                	sub r12, 8
 25021 00012878 EBE6                    	jmp .L_tc_recycle_frame_loop_00d1
 25022                                  .L_tc_recycle_frame_done_00d1:
 25023 0001287A 498D6308                	lea rsp, [r11 + 8]
 25024 0001287E 5D                      	pop rbp
 25025 0001287F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25026 00012882 E98D000000              	jmp .L_if_end_0079
 25027                                  .L_if_else_0079:
 25028                                  	; Setting up for a tail-call
 25029 00012887 488B4520                	mov rax, PARAM(0)	; param a
 25030 0001288B 50                      	push rax
 25031                                  	; preparing a non-tail-call
 25032 0001288C 488B4528                	mov rax, PARAM(1)	; param s
 25033 00012890 50                      	push rax
 25034 00012891 6A01                    	push 1	; arg count
 25035 00012893 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 25036 0001289B 803805                  	cmp byte [rax], T_undefined
 25037 0001289E 0F84BA360000            	je L_error_fvar_undefined
 25038 000128A4 803804                  	cmp byte [rax], T_closure
 25039 000128A7 0F8535370000            	jne L_error_non_closure
 25040 000128AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25041 000128B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25042 000128B3 50                      	push rax
 25043 000128B4 6A02                    	push 2
 25044 000128B6 488B0425[44100000]      	mov rax, qword [free_var_35]	; free var assoc
 25045 000128BE 803805                  	cmp byte [rax], T_undefined
 25046 000128C1 0F8497360000            	je L_error_fvar_undefined
 25047 000128C7 803804                  	cmp byte [rax], T_closure
 25048 000128CA 0F8512370000            	jne L_error_non_closure
 25049 000128D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25050 000128D3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 25051 000128D7 4C8B4D00                	mov r9, qword [rbp]
 25052 000128DB 4150                    	push r8
 25053 000128DD 4151                    	push r9
 25054 000128DF 41BA06000000            	mov r10, 2 + 4
 25055 000128E5 4C8B5D18                	mov r11, COUNT
 25056 000128E9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 25057 000128EE 4C8D65F8                	lea r12, [rbp - 8]
 25058                                  .L_tc_recycle_frame_loop_00d2:
 25059 000128F2 4983FA00                	cmp r10, 0
 25060 000128F6 7414                    	je .L_tc_recycle_frame_done_00d2
 25061 000128F8 4D8B2C24                	mov r13, qword [r12]
 25062 000128FC 4D892B                  	mov qword [r11], r13
 25063 000128FF 49FFCA                  	dec r10
 25064 00012902 4983EB08                	sub r11, 8
 25065 00012906 4983EC08                	sub r12, 8
 25066 0001290A EBE6                    	jmp .L_tc_recycle_frame_loop_00d2
 25067                                  .L_tc_recycle_frame_done_00d2:
 25068 0001290C 498D6308                	lea rsp, [r11 + 8]
 25069 00012910 5D                      	pop rbp
 25070 00012911 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25071                                  .L_if_end_0079:
 25072                                  .L_if_end_007a:
 25073 00012914 C9                      	leave
 25074 00012915 C22000                  	ret AND_KILL_FRAME(2)
 25075                                  .L_lambda_simple_end_009f:	; new closure is in rax
 25076 00012918 48890425[44100000]      	mov qword [free_var_35], rax
 25077 00012920 48B8-                   	mov rax, sob_void
 25077 00012922 [0000000000000000] 
 25078                                  
 25079 0001292A 4889C7                  	mov rdi, rax
 25080 0001292D E8AE390000              	call print_sexpr_if_not_void
 25081                                  	; preparing a non-tail-call
 25082 00012932 48B8-                   	mov rax, L_constants + 1993
 25082 00012934 [C907000000000000] 
 25083 0001293C 50                      	push rax
 25084 0001293D 6A01                    	push 1	; arg count
 25085 0001293F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25086 00012944 E842370000              	call malloc
 25087 00012949 50                      	push rax
 25088 0001294A BF00000000              	mov rdi, 8 * 0	; new rib
 25089 0001294F E837370000              	call malloc
 25090 00012954 50                      	push rax
 25091 00012955 BF08000000              	mov rdi, 8 * 1	; extended env
 25092 0001295A E82C370000              	call malloc
 25093 0001295F 488B7D10                	mov rdi, ENV
 25094 00012963 BE00000000              	mov rsi, 0
 25095 00012968 BA01000000              	mov rdx, 1
 25096                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 25097 0001296D 4883FE00                	cmp rsi, 0
 25098 00012971 7410                    	je .L_lambda_simple_env_end_00a0
 25099 00012973 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25100 00012977 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25101 0001297B 48FFC6                  	inc rsi
 25102 0001297E 48FFC2                  	inc rdx
 25103 00012981 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 25104                                  .L_lambda_simple_env_end_00a0:
 25105 00012983 5B                      	pop rbx
 25106 00012984 BE00000000              	mov rsi, 0
 25107                                  .L_lambda_simple_params_loop_00a0:	; copy params
 25108 00012989 4883FE00                	cmp rsi, 0
 25109 0001298D 740E                    	je .L_lambda_simple_params_end_00a0
 25110 0001298F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25111 00012994 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25112 00012998 48FFC6                  	inc rsi
 25113 0001299B EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 25114                                  .L_lambda_simple_params_end_00a0:
 25115 0001299D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25116 000129A0 4889C3                  	mov rbx, rax
 25117 000129A3 58                      	pop rax
 25118 000129A4 C60004                  	mov byte [rax], T_closure
 25119 000129A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25120 000129AB 48C74009[B8290100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 25121 000129B3 E97F080000              	jmp .L_lambda_simple_end_00a0
 25122                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 25123 000129B8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25124 000129BE 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 25125 000129C0 FF742410                	push qword [rsp + 8 * 2]
 25126 000129C4 6A01                    	push 1
 25127 000129C6 E979360000              	jmp L_error_incorrect_arity_simple
 25128                                  .L_lambda_simple_arity_check_ok_00a0:
 25129 000129CB C8000000                	enter 0, 0
 25130 000129CF BF08000000              	mov rdi, 8 * 1
 25131 000129D4 E8B2360000              	call malloc
 25132 000129D9 488B5D20                	mov rbx, PARAM(0)
 25133 000129DD 488918                  	mov qword [rax], rbx
 25134 000129E0 48894520                	mov PARAM(0), rax
 25135 000129E4 48B8-                   	mov rax, sob_void
 25135 000129E6 [0000000000000000] 
 25136                                  
 25137                                  	; preparing a non-tail-call
 25138 000129EE 6A00                    	push 0	; arg count
 25139 000129F0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25140 000129F5 E891360000              	call malloc
 25141 000129FA 50                      	push rax
 25142 000129FB BF08000000              	mov rdi, 8 * 1	; new rib
 25143 00012A00 E886360000              	call malloc
 25144 00012A05 50                      	push rax
 25145 00012A06 BF10000000              	mov rdi, 8 * 2	; extended env
 25146 00012A0B E87B360000              	call malloc
 25147 00012A10 488B7D10                	mov rdi, ENV
 25148 00012A14 BE00000000              	mov rsi, 0
 25149 00012A19 BA01000000              	mov rdx, 1
 25150                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 25151 00012A1E 4883FE01                	cmp rsi, 1
 25152 00012A22 7410                    	je .L_lambda_simple_env_end_00a1
 25153 00012A24 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25154 00012A28 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25155 00012A2C 48FFC6                  	inc rsi
 25156 00012A2F 48FFC2                  	inc rdx
 25157 00012A32 EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 25158                                  .L_lambda_simple_env_end_00a1:
 25159 00012A34 5B                      	pop rbx
 25160 00012A35 BE00000000              	mov rsi, 0
 25161                                  .L_lambda_simple_params_loop_00a1:	; copy params
 25162 00012A3A 4883FE01                	cmp rsi, 1
 25163 00012A3E 740E                    	je .L_lambda_simple_params_end_00a1
 25164 00012A40 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25165 00012A45 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25166 00012A49 48FFC6                  	inc rsi
 25167 00012A4C EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 25168                                  .L_lambda_simple_params_end_00a1:
 25169 00012A4E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25170 00012A51 4889C3                  	mov rbx, rax
 25171 00012A54 58                      	pop rax
 25172 00012A55 C60004                  	mov byte [rax], T_closure
 25173 00012A58 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25174 00012A5C 48C74009[692A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 25175 00012A64 E97D020000              	jmp .L_lambda_simple_end_00a1
 25176                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 25177 00012A69 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25178 00012A6F 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 25179 00012A71 FF742410                	push qword [rsp + 8 * 2]
 25180 00012A75 6A03                    	push 3
 25181 00012A77 E9C8350000              	jmp L_error_incorrect_arity_simple
 25182                                  .L_lambda_simple_arity_check_ok_00a1:
 25183 00012A7C C8000000                	enter 0, 0
 25184                                  	; preparing a non-tail-call
 25185 00012A80 488B4530                	mov rax, PARAM(2)	; param s
 25186 00012A84 50                      	push rax
 25187 00012A85 6A01                    	push 1	; arg count
 25188 00012A87 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 25189 00012A8F 803805                  	cmp byte [rax], T_undefined
 25190 00012A92 0F84C6340000            	je L_error_fvar_undefined
 25191 00012A98 803804                  	cmp byte [rax], T_closure
 25192 00012A9B 0F8541350000            	jne L_error_non_closure
 25193 00012AA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25194 00012AA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25195 00012AA7 483D[02000000]          	cmp rax, sob_boolean_false
 25196 00012AAD 7409                    	je .L_if_else_007b
 25197 00012AAF 488B4520                	mov rax, PARAM(0)	; param target
 25198 00012AB3 E92A020000              	jmp .L_if_end_007b
 25199                                  .L_if_else_007b:
 25200                                  	; Setting up for a tail-call
 25201                                  	; preparing a non-tail-call
 25202                                  	; preparing a non-tail-call
 25203                                  	; preparing a non-tail-call
 25204 00012AB8 488B4530                	mov rax, PARAM(2)	; param s
 25205 00012ABC 50                      	push rax
 25206 00012ABD 6A01                    	push 1	; arg count
 25207 00012ABF 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 25208 00012AC7 803805                  	cmp byte [rax], T_undefined
 25209 00012ACA 0F848E340000            	je L_error_fvar_undefined
 25210 00012AD0 803804                  	cmp byte [rax], T_closure
 25211 00012AD3 0F8509350000            	jne L_error_non_closure
 25212 00012AD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25213 00012ADC FF5009                  	call SOB_CLOSURE_CODE(rax)
 25214 00012ADF 50                      	push rax
 25215 00012AE0 6A01                    	push 1	; arg count
 25216 00012AE2 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 25217 00012AEA 803805                  	cmp byte [rax], T_undefined
 25218 00012AED 0F846B340000            	je L_error_fvar_undefined
 25219 00012AF3 803804                  	cmp byte [rax], T_closure
 25220 00012AF6 0F85E6340000            	jne L_error_non_closure
 25221 00012AFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25222 00012AFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25223 00012B02 50                      	push rax
 25224 00012B03 48B8-                   	mov rax, L_constants + 2149
 25224 00012B05 [6508000000000000] 
 25225 00012B0D 50                      	push rax
 25226                                  	; preparing a non-tail-call
 25227 00012B0E 488B4530                	mov rax, PARAM(2)	; param s
 25228 00012B12 50                      	push rax
 25229 00012B13 6A01                    	push 1	; arg count
 25230 00012B15 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 25231 00012B1D 803805                  	cmp byte [rax], T_undefined
 25232 00012B20 0F8438340000            	je L_error_fvar_undefined
 25233 00012B26 803804                  	cmp byte [rax], T_closure
 25234 00012B29 0F85B3340000            	jne L_error_non_closure
 25235 00012B2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25236 00012B32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25237 00012B35 50                      	push rax
 25238 00012B36 488B4528                	mov rax, PARAM(1)	; param i
 25239 00012B3A 50                      	push rax
 25240 00012B3B 488B4520                	mov rax, PARAM(0)	; param target
 25241 00012B3F 50                      	push rax
 25242 00012B40 6A05                    	push 5	; arg count
 25243 00012B42 488B0425[00100000]      	mov rax, qword [free_var_31]	; free var add
 25244 00012B4A 803805                  	cmp byte [rax], T_undefined
 25245 00012B4D 0F840B340000            	je L_error_fvar_undefined
 25246 00012B53 803804                  	cmp byte [rax], T_closure
 25247 00012B56 0F8586340000            	jne L_error_non_closure
 25248 00012B5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25249 00012B5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25250 00012B62 50                      	push rax
 25251 00012B63 6A01                    	push 1
 25252 00012B65 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25253 00012B6A E81C350000              	call malloc
 25254 00012B6F 50                      	push rax
 25255 00012B70 BF18000000              	mov rdi, 8 * 3	; new rib
 25256 00012B75 E811350000              	call malloc
 25257 00012B7A 50                      	push rax
 25258 00012B7B BF18000000              	mov rdi, 8 * 3	; extended env
 25259 00012B80 E806350000              	call malloc
 25260 00012B85 488B7D10                	mov rdi, ENV
 25261 00012B89 BE00000000              	mov rsi, 0
 25262 00012B8E BA01000000              	mov rdx, 1
 25263                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 25264 00012B93 4883FE02                	cmp rsi, 2
 25265 00012B97 7410                    	je .L_lambda_simple_env_end_00a2
 25266 00012B99 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25267 00012B9D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25268 00012BA1 48FFC6                  	inc rsi
 25269 00012BA4 48FFC2                  	inc rdx
 25270 00012BA7 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 25271                                  .L_lambda_simple_env_end_00a2:
 25272 00012BA9 5B                      	pop rbx
 25273 00012BAA BE00000000              	mov rsi, 0
 25274                                  .L_lambda_simple_params_loop_00a2:	; copy params
 25275 00012BAF 4883FE03                	cmp rsi, 3
 25276 00012BB3 740E                    	je .L_lambda_simple_params_end_00a2
 25277 00012BB5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25278 00012BBA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25279 00012BBE 48FFC6                  	inc rsi
 25280 00012BC1 EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 25281                                  .L_lambda_simple_params_end_00a2:
 25282 00012BC3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25283 00012BC6 4889C3                  	mov rbx, rax
 25284 00012BC9 58                      	pop rax
 25285 00012BCA C60004                  	mov byte [rax], T_closure
 25286 00012BCD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25287 00012BD1 48C74009[DE2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 25288 00012BD9 E9B7000000              	jmp .L_lambda_simple_end_00a2
 25289                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 25290 00012BDE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25291 00012BE4 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 25292 00012BE6 FF742410                	push qword [rsp + 8 * 2]
 25293 00012BEA 6A01                    	push 1
 25294 00012BEC E953340000              	jmp L_error_incorrect_arity_simple
 25295                                  .L_lambda_simple_arity_check_ok_00a2:
 25296 00012BF1 C8000000                	enter 0, 0
 25297                                  	; Setting up for a tail-call
 25298 00012BF5 488B4510                	mov rax, ENV
 25299 00012BF9 488B00                  	mov rax, qword [rax + 8 * 0]
 25300 00012BFC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25301 00012BFF 50                      	push rax
 25302 00012C00 488B4520                	mov rax, PARAM(0)	; param i
 25303 00012C04 50                      	push rax
 25304                                  	; preparing a non-tail-call
 25305 00012C05 488B4510                	mov rax, ENV
 25306 00012C09 488B00                  	mov rax, qword [rax + 8 * 0]
 25307 00012C0C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25308 00012C10 50                      	push rax
 25309 00012C11 6A01                    	push 1	; arg count
 25310 00012C13 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 25311 00012C1B 803805                  	cmp byte [rax], T_undefined
 25312 00012C1E 0F843A330000            	je L_error_fvar_undefined
 25313 00012C24 803804                  	cmp byte [rax], T_closure
 25314 00012C27 0F85B5330000            	jne L_error_non_closure
 25315 00012C2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25316 00012C30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25317 00012C33 50                      	push rax
 25318 00012C34 6A03                    	push 3
 25319 00012C36 488B4510                	mov rax, ENV
 25320 00012C3A 488B4008                	mov rax, qword [rax + 8 * 1]
 25321 00012C3E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25322 00012C41 488B00                  	mov rax, qword [rax]
 25323 00012C44 803804                  	cmp byte [rax], T_closure
 25324 00012C47 0F8595330000            	jne L_error_non_closure
 25325 00012C4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25326 00012C50 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 25327 00012C54 4C8B4D00                	mov r9, qword [rbp]
 25328 00012C58 4150                    	push r8
 25329 00012C5A 4151                    	push r9
 25330 00012C5C 41BA07000000            	mov r10, 3 + 4
 25331 00012C62 4C8B5D18                	mov r11, COUNT
 25332 00012C66 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 25333 00012C6B 4C8D65F8                	lea r12, [rbp - 8]
 25334                                  .L_tc_recycle_frame_loop_00d3:
 25335 00012C6F 4983FA00                	cmp r10, 0
 25336 00012C73 7414                    	je .L_tc_recycle_frame_done_00d3
 25337 00012C75 4D8B2C24                	mov r13, qword [r12]
 25338 00012C79 4D892B                  	mov qword [r11], r13
 25339 00012C7C 49FFCA                  	dec r10
 25340 00012C7F 4983EB08                	sub r11, 8
 25341 00012C83 4983EC08                	sub r12, 8
 25342 00012C87 EBE6                    	jmp .L_tc_recycle_frame_loop_00d3
 25343                                  .L_tc_recycle_frame_done_00d3:
 25344 00012C89 498D6308                	lea rsp, [r11 + 8]
 25345 00012C8D 5D                      	pop rbp
 25346 00012C8E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25347 00012C91 C9                      	leave
 25348 00012C92 C21800                  	ret AND_KILL_FRAME(1)
 25349                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 25350 00012C95 803804                  	cmp byte [rax], T_closure
 25351 00012C98 0F8544330000            	jne L_error_non_closure
 25352 00012C9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25353 00012CA1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 25354 00012CA5 4C8B4D00                	mov r9, qword [rbp]
 25355 00012CA9 4150                    	push r8
 25356 00012CAB 4151                    	push r9
 25357 00012CAD 41BA05000000            	mov r10, 1 + 4
 25358 00012CB3 4C8B5D18                	mov r11, COUNT
 25359 00012CB7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 25360 00012CBC 4C8D65F8                	lea r12, [rbp - 8]
 25361                                  .L_tc_recycle_frame_loop_00d4:
 25362 00012CC0 4983FA00                	cmp r10, 0
 25363 00012CC4 7414                    	je .L_tc_recycle_frame_done_00d4
 25364 00012CC6 4D8B2C24                	mov r13, qword [r12]
 25365 00012CCA 4D892B                  	mov qword [r11], r13
 25366 00012CCD 49FFCA                  	dec r10
 25367 00012CD0 4983EB08                	sub r11, 8
 25368 00012CD4 4983EC08                	sub r12, 8
 25369 00012CD8 EBE6                    	jmp .L_tc_recycle_frame_loop_00d4
 25370                                  .L_tc_recycle_frame_done_00d4:
 25371 00012CDA 498D6308                	lea rsp, [r11 + 8]
 25372 00012CDE 5D                      	pop rbp
 25373 00012CDF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25374                                  .L_if_end_007b:
 25375 00012CE2 C9                      	leave
 25376 00012CE3 C22800                  	ret AND_KILL_FRAME(3)
 25377                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 25378 00012CE6 803804                  	cmp byte [rax], T_closure
 25379 00012CE9 0F85F3320000            	jne L_error_non_closure
 25380 00012CEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25381 00012CF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25382 00012CF5 50                      	push rax
 25383 00012CF6 488B4520                	mov rax, PARAM(0)	; param run
 25384 00012CFA 8F00                    	pop qword [rax]
 25385 00012CFC 48B8-                   	mov rax, sob_void
 25385 00012CFE [0000000000000000] 
 25386                                  
 25387                                  	; preparing a non-tail-call
 25388 00012D06 48B8-                   	mov rax, L_constants + 1993
 25388 00012D08 [C907000000000000] 
 25389 00012D10 50                      	push rax
 25390 00012D11 6A01                    	push 1	; arg count
 25391 00012D13 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25392 00012D18 E86E330000              	call malloc
 25393 00012D1D 50                      	push rax
 25394 00012D1E BF08000000              	mov rdi, 8 * 1	; new rib
 25395 00012D23 E863330000              	call malloc
 25396 00012D28 50                      	push rax
 25397 00012D29 BF10000000              	mov rdi, 8 * 2	; extended env
 25398 00012D2E E858330000              	call malloc
 25399 00012D33 488B7D10                	mov rdi, ENV
 25400 00012D37 BE00000000              	mov rsi, 0
 25401 00012D3C BA01000000              	mov rdx, 1
 25402                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 25403 00012D41 4883FE01                	cmp rsi, 1
 25404 00012D45 7410                    	je .L_lambda_simple_env_end_00a3
 25405 00012D47 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25406 00012D4B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25407 00012D4F 48FFC6                  	inc rsi
 25408 00012D52 48FFC2                  	inc rdx
 25409 00012D55 EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 25410                                  .L_lambda_simple_env_end_00a3:
 25411 00012D57 5B                      	pop rbx
 25412 00012D58 BE00000000              	mov rsi, 0
 25413                                  .L_lambda_simple_params_loop_00a3:	; copy params
 25414 00012D5D 4883FE01                	cmp rsi, 1
 25415 00012D61 740E                    	je .L_lambda_simple_params_end_00a3
 25416 00012D63 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25417 00012D68 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25418 00012D6C 48FFC6                  	inc rsi
 25419 00012D6F EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 25420                                  .L_lambda_simple_params_end_00a3:
 25421 00012D71 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25422 00012D74 4889C3                  	mov rbx, rax
 25423 00012D77 58                      	pop rax
 25424 00012D78 C60004                  	mov byte [rax], T_closure
 25425 00012D7B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25426 00012D7F 48C74009[8C2D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 25427 00012D87 E998040000              	jmp .L_lambda_simple_end_00a3
 25428                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 25429 00012D8C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25430 00012D92 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 25431 00012D94 FF742410                	push qword [rsp + 8 * 2]
 25432 00012D98 6A01                    	push 1
 25433 00012D9A E9A5320000              	jmp L_error_incorrect_arity_simple
 25434                                  .L_lambda_simple_arity_check_ok_00a3:
 25435 00012D9F C8000000                	enter 0, 0
 25436 00012DA3 BF08000000              	mov rdi, 8 * 1
 25437 00012DA8 E8DE320000              	call malloc
 25438 00012DAD 488B5D20                	mov rbx, PARAM(0)
 25439 00012DB1 488918                  	mov qword [rax], rbx
 25440 00012DB4 48894520                	mov PARAM(0), rax
 25441 00012DB8 48B8-                   	mov rax, sob_void
 25441 00012DBA [0000000000000000] 
 25442                                  
 25443                                  	; preparing a non-tail-call
 25444 00012DC2 6A00                    	push 0	; arg count
 25445 00012DC4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25446 00012DC9 E8BD320000              	call malloc
 25447 00012DCE 50                      	push rax
 25448 00012DCF BF08000000              	mov rdi, 8 * 1	; new rib
 25449 00012DD4 E8B2320000              	call malloc
 25450 00012DD9 50                      	push rax
 25451 00012DDA BF18000000              	mov rdi, 8 * 3	; extended env
 25452 00012DDF E8A7320000              	call malloc
 25453 00012DE4 488B7D10                	mov rdi, ENV
 25454 00012DE8 BE00000000              	mov rsi, 0
 25455 00012DED BA01000000              	mov rdx, 1
 25456                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 25457 00012DF2 4883FE02                	cmp rsi, 2
 25458 00012DF6 7410                    	je .L_lambda_simple_env_end_00a4
 25459 00012DF8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25460 00012DFC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25461 00012E00 48FFC6                  	inc rsi
 25462 00012E03 48FFC2                  	inc rdx
 25463 00012E06 EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 25464                                  .L_lambda_simple_env_end_00a4:
 25465 00012E08 5B                      	pop rbx
 25466 00012E09 BE00000000              	mov rsi, 0
 25467                                  .L_lambda_simple_params_loop_00a4:	; copy params
 25468 00012E0E 4883FE01                	cmp rsi, 1
 25469 00012E12 740E                    	je .L_lambda_simple_params_end_00a4
 25470 00012E14 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25471 00012E19 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25472 00012E1D 48FFC6                  	inc rsi
 25473 00012E20 EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 25474                                  .L_lambda_simple_params_end_00a4:
 25475 00012E22 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25476 00012E25 4889C3                  	mov rbx, rax
 25477 00012E28 58                      	pop rax
 25478 00012E29 C60004                  	mov byte [rax], T_closure
 25479 00012E2C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25480 00012E30 48C74009[3D2E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 25481 00012E38 E945010000              	jmp .L_lambda_simple_end_00a4
 25482                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 25483 00012E3D 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25484 00012E43 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 25485 00012E45 FF742410                	push qword [rsp + 8 * 2]
 25486 00012E49 6A05                    	push 5
 25487 00012E4B E9F4310000              	jmp L_error_incorrect_arity_simple
 25488                                  .L_lambda_simple_arity_check_ok_00a4:
 25489 00012E50 C8000000                	enter 0, 0
 25490                                  	; preparing a non-tail-call
 25491 00012E54 488B4540                	mov rax, PARAM(4)	; param limit
 25492 00012E58 50                      	push rax
 25493 00012E59 488B4538                	mov rax, PARAM(3)	; param j
 25494 00012E5D 50                      	push rax
 25495 00012E5E 6A02                    	push 2	; arg count
 25496 00012E60 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 25497 00012E68 803805                  	cmp byte [rax], T_undefined
 25498 00012E6B 0F84ED300000            	je L_error_fvar_undefined
 25499 00012E71 803804                  	cmp byte [rax], T_closure
 25500 00012E74 0F8568310000            	jne L_error_non_closure
 25501 00012E7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25502 00012E7D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25503 00012E80 483D[02000000]          	cmp rax, sob_boolean_false
 25504 00012E86 0F84EE000000            	je .L_if_else_007c
 25505                                  	; preparing a non-tail-call
 25506                                  	; preparing a non-tail-call
 25507 00012E8C 488B4538                	mov rax, PARAM(3)	; param j
 25508 00012E90 50                      	push rax
 25509 00012E91 488B4530                	mov rax, PARAM(2)	; param str
 25510 00012E95 50                      	push rax
 25511 00012E96 6A02                    	push 2	; arg count
 25512 00012E98 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 25513 00012EA0 803805                  	cmp byte [rax], T_undefined
 25514 00012EA3 0F84B5300000            	je L_error_fvar_undefined
 25515 00012EA9 803804                  	cmp byte [rax], T_closure
 25516 00012EAC 0F8530310000            	jne L_error_non_closure
 25517 00012EB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25518 00012EB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25519 00012EB8 50                      	push rax
 25520 00012EB9 488B4528                	mov rax, PARAM(1)	; param i
 25521 00012EBD 50                      	push rax
 25522 00012EBE 488B4520                	mov rax, PARAM(0)	; param target
 25523 00012EC2 50                      	push rax
 25524 00012EC3 6A03                    	push 3	; arg count
 25525 00012EC5 488B0425[C6160000]      	mov rax, qword [free_var_133]	; free var string-set!
 25526 00012ECD 803805                  	cmp byte [rax], T_undefined
 25527 00012ED0 0F8488300000            	je L_error_fvar_undefined
 25528 00012ED6 803804                  	cmp byte [rax], T_closure
 25529 00012ED9 0F8503310000            	jne L_error_non_closure
 25530 00012EDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25531 00012EE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25532                                  
 25533                                  	; preparing a non-tail-call
 25534 00012EE5 488B4540                	mov rax, PARAM(4)	; param limit
 25535 00012EE9 50                      	push rax
 25536                                  	; preparing a non-tail-call
 25537 00012EEA 48B8-                   	mov rax, L_constants + 2284
 25537 00012EEC [EC08000000000000] 
 25538 00012EF4 50                      	push rax
 25539 00012EF5 488B4538                	mov rax, PARAM(3)	; param j
 25540 00012EF9 50                      	push rax
 25541 00012EFA 6A02                    	push 2	; arg count
 25542 00012EFC 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 25543 00012F04 803805                  	cmp byte [rax], T_undefined
 25544 00012F07 0F8451300000            	je L_error_fvar_undefined
 25545 00012F0D 803804                  	cmp byte [rax], T_closure
 25546 00012F10 0F85CC300000            	jne L_error_non_closure
 25547 00012F16 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25548 00012F19 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25549 00012F1C 50                      	push rax
 25550 00012F1D 488B4530                	mov rax, PARAM(2)	; param str
 25551 00012F21 50                      	push rax
 25552                                  	; preparing a non-tail-call
 25553 00012F22 48B8-                   	mov rax, L_constants + 2284
 25553 00012F24 [EC08000000000000] 
 25554 00012F2C 50                      	push rax
 25555 00012F2D 488B4528                	mov rax, PARAM(1)	; param i
 25556 00012F31 50                      	push rax
 25557 00012F32 6A02                    	push 2	; arg count
 25558 00012F34 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 25559 00012F3C 803805                  	cmp byte [rax], T_undefined
 25560 00012F3F 0F8419300000            	je L_error_fvar_undefined
 25561 00012F45 803804                  	cmp byte [rax], T_closure
 25562 00012F48 0F8594300000            	jne L_error_non_closure
 25563 00012F4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25564 00012F51 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25565 00012F54 50                      	push rax
 25566 00012F55 488B4520                	mov rax, PARAM(0)	; param target
 25567 00012F59 50                      	push rax
 25568 00012F5A 6A05                    	push 5	; arg count
 25569 00012F5C 488B4510                	mov rax, ENV
 25570 00012F60 488B00                  	mov rax, qword [rax + 8 * 0]
 25571 00012F63 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var add
 25572 00012F66 488B00                  	mov rax, qword [rax]
 25573 00012F69 803804                  	cmp byte [rax], T_closure
 25574 00012F6C 0F8570300000            	jne L_error_non_closure
 25575 00012F72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25576 00012F75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25577 00012F78 EB04                    	jmp .L_if_end_007c
 25578                                  .L_if_else_007c:
 25579 00012F7A 488B4528                	mov rax, PARAM(1)	; param i
 25580                                  .L_if_end_007c:
 25581 00012F7E C9                      	leave
 25582 00012F7F C23800                  	ret AND_KILL_FRAME(5)
 25583                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 25584 00012F82 803804                  	cmp byte [rax], T_closure
 25585 00012F85 0F8557300000            	jne L_error_non_closure
 25586 00012F8B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25587 00012F8E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25588 00012F91 50                      	push rax
 25589 00012F92 488B4520                	mov rax, PARAM(0)	; param add
 25590 00012F96 8F00                    	pop qword [rax]
 25591 00012F98 48B8-                   	mov rax, sob_void
 25591 00012F9A [0000000000000000] 
 25592                                  
 25593 00012FA2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25594 00012FA7 E8DF300000              	call malloc
 25595 00012FAC 50                      	push rax
 25596 00012FAD BF08000000              	mov rdi, 8 * 1	; new rib
 25597 00012FB2 E8D4300000              	call malloc
 25598 00012FB7 50                      	push rax
 25599 00012FB8 BF18000000              	mov rdi, 8 * 3	; extended env
 25600 00012FBD E8C9300000              	call malloc
 25601 00012FC2 488B7D10                	mov rdi, ENV
 25602 00012FC6 BE00000000              	mov rsi, 0
 25603 00012FCB BA01000000              	mov rdx, 1
 25604                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 25605 00012FD0 4883FE02                	cmp rsi, 2
 25606 00012FD4 7410                    	je .L_lambda_opt_env_end_0017
 25607 00012FD6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25608 00012FDA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25609 00012FDE 48FFC6                  	inc rsi
 25610 00012FE1 48FFC2                  	inc rdx
 25611 00012FE4 EBEA                    	jmp .L_lambda_opt_env_loop_0017
 25612                                  .L_lambda_opt_env_end_0017:
 25613 00012FE6 5B                      	pop rbx
 25614 00012FE7 BE00000000              	mov rsi, 0
 25615                                  .L_lambda_opt_params_loop_0017:	; copy params
 25616 00012FEC 4883FE01                	cmp rsi, 1
 25617 00012FF0 740E                    	je .L_lambda_opt_params_end_0017
 25618 00012FF2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25619 00012FF7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25620 00012FFB 48FFC6                  	inc rsi
 25621 00012FFE EBEC                    	jmp .L_lambda_opt_params_loop_0017
 25622                                  .L_lambda_opt_params_end_0017:
 25623 00013000 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25624 00013003 4889C3                  	mov rbx, rax
 25625 00013006 58                      	pop rax
 25626 00013007 C60004                  	mov byte [rax], T_closure
 25627 0001300A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25628 0001300E 48C74009[1B300100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 25629 00013016 E905020000              	jmp .L_lambda_opt_end_0017
 25630                                  .L_lambda_opt_code_0017:
 25631 0001301B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 25632 00013020 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 25633 00013024 7407                    	je .L_lambda_opt_arity_check_exact_0017	; Jump if arity matches
 25634 00013026 7F4C                    	jg .L_lambda_opt_arity_check_more_0017	; Jump if more arguments passed
 25635 00013028 E92B300000              	jmp L_error_incorrect_arity_opt
 25636                                  .L_lambda_opt_arity_check_exact_0017:
 25637 0001302D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 25638 00013030 4983C603                	add r14, 3 ; add 3 first stack values
 25639 00013034 41BF00000000            	mov r15, 0 ; r15 = index
 25640 0001303A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 25641 0001303E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 25642 00013046 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 25643                                  .L_lambda_opt_stack_shrink_loop_0017:
 25644 00013048 4983FE00                	cmp r14, 0
 25645 0001304C 7E11                    	jle .L_make_lambda_opt_exact_finish_0017
 25646 0001304E 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 25647 00013053 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 25648 00013057 49FFCE                  	dec r14 ; next loop value
 25649 0001305A 49FFC7                  	inc r15 ; update i
 25650 0001305D EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 25651                                  .L_make_lambda_opt_exact_finish_0017:
 25652 0001305F 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 25653 00013067 49FFC2                  	inc r10
 25654 0001306A 4C89542410              	mov qword [rsp + 8 * 2], r10
 25655 0001306F E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0017
 25656                                  .L_lambda_opt_arity_check_more_0017:
 25657 00013074 4D89D6                  	mov r14, r10 ; r14 = num args
 25658 00013077 4D89D7                  	mov r15, r10 ; r15 = num args
 25659 0001307A 41B900000000            	mov r9, 0; r9 = number of params 
 25660 00013080 4D29CE                  	sub r14, r9 ; r14 = extra args
 25661 00013083 4D01F1                  	add r9, r14 ; r9 = num args
 25662 00013086 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 25662 00013088 [0100000000000000] 
 25663 00013090 EB00                    	jmp .L_make_lambda_opt_arg_list_0017
 25664                                  .L_make_lambda_opt_arg_list_0017:
 25665 00013092 4983FE00                	cmp r14, 0
 25666 00013096 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0017
 25667 00013098 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 25668 0001309D 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 25669 000130A0 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 25670 000130A6 E8E02F0000              	call malloc                         ; Allocate memory, result in rax
 25671 000130AB C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 25672 000130AE 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 25673 000130B2 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 25674 000130B6 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 25675 000130B9 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 25676 000130BC 49FFC9                  	dec r9                              ; args index minus 1
 25677 000130BF 49FFCE                  	dec r14                             ; next iteration
 25678 000130C2 EBCE                    	jmp .L_make_lambda_opt_arg_list_0017
 25679                                  .L_make_lambda_opt_stack_fixed_0017:
 25680 000130C4 4D89FE                  	mov r14, r15 ; r14 = num args
 25681 000130C7 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 25682 000130CA 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 25683 000130CE 41BA00000000            	mov r10, 0; r10 = num of params
 25684 000130D4 4D29D6                  	sub r14, r10 ; r14 = extra args
 25685 000130D7 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 25686 000130DA 49FFCE                  	dec r14 ; how much we need to change stack wise?
 25687 000130DD 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 25688 000130E2 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0017
 25689                                  .L_lambda_opt_stack_shrink_loop_more_0017:
 25690 000130E4 4983F800                	cmp r8, 0
 25691 000130E8 7E15                    	jle .L_make_lambda_opt_more_finish_0017
 25692 000130EA 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 25693 000130EE 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 25694 000130F2 4D8D26                  	lea r12, [r14]
 25695 000130F5 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 25696 000130FA 49FFC8                  	dec r8 ; next iteration
 25697 000130FD EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0017
 25698                                  .L_make_lambda_opt_more_finish_0017:
 25699 000130FF 4D89F8                  	mov r8, r15 ; num of args
 25700 00013102 41BA00000000            	mov r10, 0
 25701 00013108 4D29D0                  	sub r8, r10 ; num of new args
 25702 0001310B 49FFC0                  	inc r8
 25703 0001310E 4C89442420              	mov qword [rsp + 8 * 4], r8
 25704 00013113 4883C410                	add rsp, 8 * 2  ; 
 25705 00013117 EB00                    	jmp .L_lambda_opt_stack_adjusted_0017
 25706                                  .L_lambda_opt_stack_adjusted_0017:
 25707 00013119 C8000000                	enter 0, 0
 25708                                  	; Setting up for a tail-call
 25709                                  	; preparing a non-tail-call
 25710                                  	; preparing a non-tail-call
 25711                                  	; preparing a non-tail-call
 25712 0001311D 488B4520                	mov rax, PARAM(0)	; param strings
 25713 00013121 50                      	push rax
 25714 00013122 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 25715 0001312A 803805                  	cmp byte [rax], T_undefined
 25716 0001312D 0F842B2E0000            	je L_error_fvar_undefined
 25717 00013133 50                      	push rax
 25718 00013134 6A02                    	push 2	; arg count
 25719 00013136 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
 25720 0001313E 803805                  	cmp byte [rax], T_undefined
 25721 00013141 0F84172E0000            	je L_error_fvar_undefined
 25722 00013147 803804                  	cmp byte [rax], T_closure
 25723 0001314A 0F85922E0000            	jne L_error_non_closure
 25724 00013150 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25725 00013153 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25726 00013156 50                      	push rax
 25727 00013157 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 25728 0001315F 803805                  	cmp byte [rax], T_undefined
 25729 00013162 0F84F62D0000            	je L_error_fvar_undefined
 25730 00013168 50                      	push rax
 25731 00013169 6A02                    	push 2	; arg count
 25732 0001316B 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
 25733 00013173 803805                  	cmp byte [rax], T_undefined
 25734 00013176 0F84E22D0000            	je L_error_fvar_undefined
 25735 0001317C 803804                  	cmp byte [rax], T_closure
 25736 0001317F 0F855D2E0000            	jne L_error_non_closure
 25737 00013185 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25738 00013188 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25739 0001318B 50                      	push rax
 25740 0001318C 6A01                    	push 1	; arg count
 25741 0001318E 488B0425[95140000]      	mov rax, qword [free_var_100]	; free var make-string
 25742 00013196 803805                  	cmp byte [rax], T_undefined
 25743 00013199 0F84BF2D0000            	je L_error_fvar_undefined
 25744 0001319F 803804                  	cmp byte [rax], T_closure
 25745 000131A2 0F853A2E0000            	jne L_error_non_closure
 25746 000131A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25747 000131AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25748 000131AE 50                      	push rax
 25749 000131AF 48B8-                   	mov rax, L_constants + 2149
 25749 000131B1 [6508000000000000] 
 25750 000131B9 50                      	push rax
 25751 000131BA 488B4520                	mov rax, PARAM(0)	; param strings
 25752 000131BE 50                      	push rax
 25753 000131BF 6A03                    	push 3
 25754 000131C1 488B4510                	mov rax, ENV
 25755 000131C5 488B4008                	mov rax, qword [rax + 8 * 1]
 25756 000131C9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25757 000131CC 488B00                  	mov rax, qword [rax]
 25758 000131CF 803804                  	cmp byte [rax], T_closure
 25759 000131D2 0F850A2E0000            	jne L_error_non_closure
 25760 000131D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25761 000131DB 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 25762 000131DF 4C8B4D00                	mov r9, qword [rbp]
 25763 000131E3 4150                    	push r8
 25764 000131E5 4151                    	push r9
 25765 000131E7 41BA07000000            	mov r10, 3 + 4
 25766 000131ED 4C8B5D18                	mov r11, COUNT
 25767 000131F1 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 25768 000131F6 4C8D65F8                	lea r12, [rbp - 8]
 25769                                  .L_tc_recycle_frame_loop_00d5:
 25770 000131FA 4983FA00                	cmp r10, 0
 25771 000131FE 7414                    	je .L_tc_recycle_frame_done_00d5
 25772 00013200 4D8B2C24                	mov r13, qword [r12]
 25773 00013204 4D892B                  	mov qword [r11], r13
 25774 00013207 49FFCA                  	dec r10
 25775 0001320A 4983EB08                	sub r11, 8
 25776 0001320E 4983EC08                	sub r12, 8
 25777 00013212 EBE6                    	jmp .L_tc_recycle_frame_loop_00d5
 25778                                  .L_tc_recycle_frame_done_00d5:
 25779 00013214 498D6308                	lea rsp, [r11 + 8]
 25780 00013218 5D                      	pop rbp
 25781 00013219 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25782 0001321C C9                      	leave
 25783 0001321D C21000                  	ret AND_KILL_FRAME(0)
 25784                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25785 00013220 C9                      	leave
 25786 00013221 C21800                  	ret AND_KILL_FRAME(1)
 25787                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 25788 00013224 803804                  	cmp byte [rax], T_closure
 25789 00013227 0F85B52D0000            	jne L_error_non_closure
 25790 0001322D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25791 00013230 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25792 00013233 C9                      	leave
 25793 00013234 C21800                  	ret AND_KILL_FRAME(1)
 25794                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 25795 00013237 803804                  	cmp byte [rax], T_closure
 25796 0001323A 0F85A22D0000            	jne L_error_non_closure
 25797 00013240 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25798 00013243 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25799 00013246 48890425[0B160000]      	mov qword [free_var_122], rax
 25800 0001324E 48B8-                   	mov rax, sob_void
 25800 00013250 [0000000000000000] 
 25801                                  
 25802 00013258 4889C7                  	mov rdi, rax
 25803 0001325B E880300000              	call print_sexpr_if_not_void
 25804                                  	; preparing a non-tail-call
 25805 00013260 48B8-                   	mov rax, L_constants + 1993
 25805 00013262 [C907000000000000] 
 25806 0001326A 50                      	push rax
 25807 0001326B 6A01                    	push 1	; arg count
 25808 0001326D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25809 00013272 E8142E0000              	call malloc
 25810 00013277 50                      	push rax
 25811 00013278 BF00000000              	mov rdi, 8 * 0	; new rib
 25812 0001327D E8092E0000              	call malloc
 25813 00013282 50                      	push rax
 25814 00013283 BF08000000              	mov rdi, 8 * 1	; extended env
 25815 00013288 E8FE2D0000              	call malloc
 25816 0001328D 488B7D10                	mov rdi, ENV
 25817 00013291 BE00000000              	mov rsi, 0
 25818 00013296 BA01000000              	mov rdx, 1
 25819                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 25820 0001329B 4883FE00                	cmp rsi, 0
 25821 0001329F 7410                    	je .L_lambda_simple_env_end_00a5
 25822 000132A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25823 000132A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25824 000132A9 48FFC6                  	inc rsi
 25825 000132AC 48FFC2                  	inc rdx
 25826 000132AF EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 25827                                  .L_lambda_simple_env_end_00a5:
 25828 000132B1 5B                      	pop rbx
 25829 000132B2 BE00000000              	mov rsi, 0
 25830                                  .L_lambda_simple_params_loop_00a5:	; copy params
 25831 000132B7 4883FE00                	cmp rsi, 0
 25832 000132BB 740E                    	je .L_lambda_simple_params_end_00a5
 25833 000132BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25834 000132C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25835 000132C6 48FFC6                  	inc rsi
 25836 000132C9 EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 25837                                  .L_lambda_simple_params_end_00a5:
 25838 000132CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25839 000132CE 4889C3                  	mov rbx, rax
 25840 000132D1 58                      	pop rax
 25841 000132D2 C60004                  	mov byte [rax], T_closure
 25842 000132D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25843 000132D9 48C74009[E6320100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 25844 000132E1 E97F080000              	jmp .L_lambda_simple_end_00a5
 25845                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 25846 000132E6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25847 000132EC 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 25848 000132EE FF742410                	push qword [rsp + 8 * 2]
 25849 000132F2 6A01                    	push 1
 25850 000132F4 E94B2D0000              	jmp L_error_incorrect_arity_simple
 25851                                  .L_lambda_simple_arity_check_ok_00a5:
 25852 000132F9 C8000000                	enter 0, 0
 25853 000132FD BF08000000              	mov rdi, 8 * 1
 25854 00013302 E8842D0000              	call malloc
 25855 00013307 488B5D20                	mov rbx, PARAM(0)
 25856 0001330B 488918                  	mov qword [rax], rbx
 25857 0001330E 48894520                	mov PARAM(0), rax
 25858 00013312 48B8-                   	mov rax, sob_void
 25858 00013314 [0000000000000000] 
 25859                                  
 25860                                  	; preparing a non-tail-call
 25861 0001331C 6A00                    	push 0	; arg count
 25862 0001331E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25863 00013323 E8632D0000              	call malloc
 25864 00013328 50                      	push rax
 25865 00013329 BF08000000              	mov rdi, 8 * 1	; new rib
 25866 0001332E E8582D0000              	call malloc
 25867 00013333 50                      	push rax
 25868 00013334 BF10000000              	mov rdi, 8 * 2	; extended env
 25869 00013339 E84D2D0000              	call malloc
 25870 0001333E 488B7D10                	mov rdi, ENV
 25871 00013342 BE00000000              	mov rsi, 0
 25872 00013347 BA01000000              	mov rdx, 1
 25873                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 25874 0001334C 4883FE01                	cmp rsi, 1
 25875 00013350 7410                    	je .L_lambda_simple_env_end_00a6
 25876 00013352 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25877 00013356 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25878 0001335A 48FFC6                  	inc rsi
 25879 0001335D 48FFC2                  	inc rdx
 25880 00013360 EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 25881                                  .L_lambda_simple_env_end_00a6:
 25882 00013362 5B                      	pop rbx
 25883 00013363 BE00000000              	mov rsi, 0
 25884                                  .L_lambda_simple_params_loop_00a6:	; copy params
 25885 00013368 4883FE01                	cmp rsi, 1
 25886 0001336C 740E                    	je .L_lambda_simple_params_end_00a6
 25887 0001336E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25888 00013373 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25889 00013377 48FFC6                  	inc rsi
 25890 0001337A EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 25891                                  .L_lambda_simple_params_end_00a6:
 25892 0001337C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25893 0001337F 4889C3                  	mov rbx, rax
 25894 00013382 58                      	pop rax
 25895 00013383 C60004                  	mov byte [rax], T_closure
 25896 00013386 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25897 0001338A 48C74009[97330100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 25898 00013392 E97D020000              	jmp .L_lambda_simple_end_00a6
 25899                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 25900 00013397 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25901 0001339D 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 25902 0001339F FF742410                	push qword [rsp + 8 * 2]
 25903 000133A3 6A03                    	push 3
 25904 000133A5 E99A2C0000              	jmp L_error_incorrect_arity_simple
 25905                                  .L_lambda_simple_arity_check_ok_00a6:
 25906 000133AA C8000000                	enter 0, 0
 25907                                  	; preparing a non-tail-call
 25908 000133AE 488B4530                	mov rax, PARAM(2)	; param s
 25909 000133B2 50                      	push rax
 25910 000133B3 6A01                    	push 1	; arg count
 25911 000133B5 488B0425[1D150000]      	mov rax, qword [free_var_108]	; free var null?
 25912 000133BD 803805                  	cmp byte [rax], T_undefined
 25913 000133C0 0F84982B0000            	je L_error_fvar_undefined
 25914 000133C6 803804                  	cmp byte [rax], T_closure
 25915 000133C9 0F85132C0000            	jne L_error_non_closure
 25916 000133CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25917 000133D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25918 000133D5 483D[02000000]          	cmp rax, sob_boolean_false
 25919 000133DB 7409                    	je .L_if_else_007d
 25920 000133DD 488B4520                	mov rax, PARAM(0)	; param target
 25921 000133E1 E92A020000              	jmp .L_if_end_007d
 25922                                  .L_if_else_007d:
 25923                                  	; Setting up for a tail-call
 25924                                  	; preparing a non-tail-call
 25925                                  	; preparing a non-tail-call
 25926                                  	; preparing a non-tail-call
 25927 000133E6 488B4530                	mov rax, PARAM(2)	; param s
 25928 000133EA 50                      	push rax
 25929 000133EB 6A01                    	push 1	; arg count
 25930 000133ED 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 25931 000133F5 803805                  	cmp byte [rax], T_undefined
 25932 000133F8 0F84602B0000            	je L_error_fvar_undefined
 25933 000133FE 803804                  	cmp byte [rax], T_closure
 25934 00013401 0F85DB2B0000            	jne L_error_non_closure
 25935 00013407 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25936 0001340A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25937 0001340D 50                      	push rax
 25938 0001340E 6A01                    	push 1	; arg count
 25939 00013410 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 25940 00013418 803805                  	cmp byte [rax], T_undefined
 25941 0001341B 0F843D2B0000            	je L_error_fvar_undefined
 25942 00013421 803804                  	cmp byte [rax], T_closure
 25943 00013424 0F85B82B0000            	jne L_error_non_closure
 25944 0001342A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25945 0001342D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25946 00013430 50                      	push rax
 25947 00013431 48B8-                   	mov rax, L_constants + 2149
 25947 00013433 [6508000000000000] 
 25948 0001343B 50                      	push rax
 25949                                  	; preparing a non-tail-call
 25950 0001343C 488B4530                	mov rax, PARAM(2)	; param s
 25951 00013440 50                      	push rax
 25952 00013441 6A01                    	push 1	; arg count
 25953 00013443 488B0425[43110000]      	mov rax, qword [free_var_50]	; free var car
 25954 0001344B 803805                  	cmp byte [rax], T_undefined
 25955 0001344E 0F840A2B0000            	je L_error_fvar_undefined
 25956 00013454 803804                  	cmp byte [rax], T_closure
 25957 00013457 0F85852B0000            	jne L_error_non_closure
 25958 0001345D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25959 00013460 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25960 00013463 50                      	push rax
 25961 00013464 488B4528                	mov rax, PARAM(1)	; param i
 25962 00013468 50                      	push rax
 25963 00013469 488B4520                	mov rax, PARAM(0)	; param target
 25964 0001346D 50                      	push rax
 25965 0001346E 6A05                    	push 5	; arg count
 25966 00013470 488B0425[00100000]      	mov rax, qword [free_var_31]	; free var add
 25967 00013478 803805                  	cmp byte [rax], T_undefined
 25968 0001347B 0F84DD2A0000            	je L_error_fvar_undefined
 25969 00013481 803804                  	cmp byte [rax], T_closure
 25970 00013484 0F85582B0000            	jne L_error_non_closure
 25971 0001348A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25972 0001348D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25973 00013490 50                      	push rax
 25974 00013491 6A01                    	push 1
 25975 00013493 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25976 00013498 E8EE2B0000              	call malloc
 25977 0001349D 50                      	push rax
 25978 0001349E BF18000000              	mov rdi, 8 * 3	; new rib
 25979 000134A3 E8E32B0000              	call malloc
 25980 000134A8 50                      	push rax
 25981 000134A9 BF18000000              	mov rdi, 8 * 3	; extended env
 25982 000134AE E8D82B0000              	call malloc
 25983 000134B3 488B7D10                	mov rdi, ENV
 25984 000134B7 BE00000000              	mov rsi, 0
 25985 000134BC BA01000000              	mov rdx, 1
 25986                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 25987 000134C1 4883FE02                	cmp rsi, 2
 25988 000134C5 7410                    	je .L_lambda_simple_env_end_00a7
 25989 000134C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25990 000134CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25991 000134CF 48FFC6                  	inc rsi
 25992 000134D2 48FFC2                  	inc rdx
 25993 000134D5 EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 25994                                  .L_lambda_simple_env_end_00a7:
 25995 000134D7 5B                      	pop rbx
 25996 000134D8 BE00000000              	mov rsi, 0
 25997                                  .L_lambda_simple_params_loop_00a7:	; copy params
 25998 000134DD 4883FE03                	cmp rsi, 3
 25999 000134E1 740E                    	je .L_lambda_simple_params_end_00a7
 26000 000134E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26001 000134E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26002 000134EC 48FFC6                  	inc rsi
 26003 000134EF EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26004                                  .L_lambda_simple_params_end_00a7:
 26005 000134F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26006 000134F4 4889C3                  	mov rbx, rax
 26007 000134F7 58                      	pop rax
 26008 000134F8 C60004                  	mov byte [rax], T_closure
 26009 000134FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26010 000134FF 48C74009[0C350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26011 00013507 E9B7000000              	jmp .L_lambda_simple_end_00a7
 26012                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26013 0001350C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26014 00013512 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26015 00013514 FF742410                	push qword [rsp + 8 * 2]
 26016 00013518 6A01                    	push 1
 26017 0001351A E9252B0000              	jmp L_error_incorrect_arity_simple
 26018                                  .L_lambda_simple_arity_check_ok_00a7:
 26019 0001351F C8000000                	enter 0, 0
 26020                                  	; Setting up for a tail-call
 26021 00013523 488B4510                	mov rax, ENV
 26022 00013527 488B00                  	mov rax, qword [rax + 8 * 0]
 26023 0001352A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 26024 0001352D 50                      	push rax
 26025 0001352E 488B4520                	mov rax, PARAM(0)	; param i
 26026 00013532 50                      	push rax
 26027                                  	; preparing a non-tail-call
 26028 00013533 488B4510                	mov rax, ENV
 26029 00013537 488B00                  	mov rax, qword [rax + 8 * 0]
 26030 0001353A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 26031 0001353E 50                      	push rax
 26032 0001353F 6A01                    	push 1	; arg count
 26033 00013541 488B0425[42120000]      	mov rax, qword [free_var_65]	; free var cdr
 26034 00013549 803805                  	cmp byte [rax], T_undefined
 26035 0001354C 0F840C2A0000            	je L_error_fvar_undefined
 26036 00013552 803804                  	cmp byte [rax], T_closure
 26037 00013555 0F85872A0000            	jne L_error_non_closure
 26038 0001355B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26039 0001355E FF5009                  	call SOB_CLOSURE_CODE(rax)
 26040 00013561 50                      	push rax
 26041 00013562 6A03                    	push 3
 26042 00013564 488B4510                	mov rax, ENV
 26043 00013568 488B4008                	mov rax, qword [rax + 8 * 1]
 26044 0001356C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26045 0001356F 488B00                  	mov rax, qword [rax]
 26046 00013572 803804                  	cmp byte [rax], T_closure
 26047 00013575 0F85672A0000            	jne L_error_non_closure
 26048 0001357B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26049 0001357E 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 26050 00013582 4C8B4D00                	mov r9, qword [rbp]
 26051 00013586 4150                    	push r8
 26052 00013588 4151                    	push r9
 26053 0001358A 41BA07000000            	mov r10, 3 + 4
 26054 00013590 4C8B5D18                	mov r11, COUNT
 26055 00013594 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 26056 00013599 4C8D65F8                	lea r12, [rbp - 8]
 26057                                  .L_tc_recycle_frame_loop_00d6:
 26058 0001359D 4983FA00                	cmp r10, 0
 26059 000135A1 7414                    	je .L_tc_recycle_frame_done_00d6
 26060 000135A3 4D8B2C24                	mov r13, qword [r12]
 26061 000135A7 4D892B                  	mov qword [r11], r13
 26062 000135AA 49FFCA                  	dec r10
 26063 000135AD 4983EB08                	sub r11, 8
 26064 000135B1 4983EC08                	sub r12, 8
 26065 000135B5 EBE6                    	jmp .L_tc_recycle_frame_loop_00d6
 26066                                  .L_tc_recycle_frame_done_00d6:
 26067 000135B7 498D6308                	lea rsp, [r11 + 8]
 26068 000135BB 5D                      	pop rbp
 26069 000135BC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26070 000135BF C9                      	leave
 26071 000135C0 C21800                  	ret AND_KILL_FRAME(1)
 26072                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26073 000135C3 803804                  	cmp byte [rax], T_closure
 26074 000135C6 0F85162A0000            	jne L_error_non_closure
 26075 000135CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26076 000135CF 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 26077 000135D3 4C8B4D00                	mov r9, qword [rbp]
 26078 000135D7 4150                    	push r8
 26079 000135D9 4151                    	push r9
 26080 000135DB 41BA05000000            	mov r10, 1 + 4
 26081 000135E1 4C8B5D18                	mov r11, COUNT
 26082 000135E5 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 26083 000135EA 4C8D65F8                	lea r12, [rbp - 8]
 26084                                  .L_tc_recycle_frame_loop_00d7:
 26085 000135EE 4983FA00                	cmp r10, 0
 26086 000135F2 7414                    	je .L_tc_recycle_frame_done_00d7
 26087 000135F4 4D8B2C24                	mov r13, qword [r12]
 26088 000135F8 4D892B                  	mov qword [r11], r13
 26089 000135FB 49FFCA                  	dec r10
 26090 000135FE 4983EB08                	sub r11, 8
 26091 00013602 4983EC08                	sub r12, 8
 26092 00013606 EBE6                    	jmp .L_tc_recycle_frame_loop_00d7
 26093                                  .L_tc_recycle_frame_done_00d7:
 26094 00013608 498D6308                	lea rsp, [r11 + 8]
 26095 0001360C 5D                      	pop rbp
 26096 0001360D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26097                                  .L_if_end_007d:
 26098 00013610 C9                      	leave
 26099 00013611 C22800                  	ret AND_KILL_FRAME(3)
 26100                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26101 00013614 803804                  	cmp byte [rax], T_closure
 26102 00013617 0F85C5290000            	jne L_error_non_closure
 26103 0001361D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26104 00013620 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26105 00013623 50                      	push rax
 26106 00013624 488B4520                	mov rax, PARAM(0)	; param run
 26107 00013628 8F00                    	pop qword [rax]
 26108 0001362A 48B8-                   	mov rax, sob_void
 26108 0001362C [0000000000000000] 
 26109                                  
 26110                                  	; preparing a non-tail-call
 26111 00013634 48B8-                   	mov rax, L_constants + 1993
 26111 00013636 [C907000000000000] 
 26112 0001363E 50                      	push rax
 26113 0001363F 6A01                    	push 1	; arg count
 26114 00013641 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26115 00013646 E8402A0000              	call malloc
 26116 0001364B 50                      	push rax
 26117 0001364C BF08000000              	mov rdi, 8 * 1	; new rib
 26118 00013651 E8352A0000              	call malloc
 26119 00013656 50                      	push rax
 26120 00013657 BF10000000              	mov rdi, 8 * 2	; extended env
 26121 0001365C E82A2A0000              	call malloc
 26122 00013661 488B7D10                	mov rdi, ENV
 26123 00013665 BE00000000              	mov rsi, 0
 26124 0001366A BA01000000              	mov rdx, 1
 26125                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26126 0001366F 4883FE01                	cmp rsi, 1
 26127 00013673 7410                    	je .L_lambda_simple_env_end_00a8
 26128 00013675 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26129 00013679 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26130 0001367D 48FFC6                  	inc rsi
 26131 00013680 48FFC2                  	inc rdx
 26132 00013683 EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 26133                                  .L_lambda_simple_env_end_00a8:
 26134 00013685 5B                      	pop rbx
 26135 00013686 BE00000000              	mov rsi, 0
 26136                                  .L_lambda_simple_params_loop_00a8:	; copy params
 26137 0001368B 4883FE01                	cmp rsi, 1
 26138 0001368F 740E                    	je .L_lambda_simple_params_end_00a8
 26139 00013691 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26140 00013696 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26141 0001369A 48FFC6                  	inc rsi
 26142 0001369D EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 26143                                  .L_lambda_simple_params_end_00a8:
 26144 0001369F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26145 000136A2 4889C3                  	mov rbx, rax
 26146 000136A5 58                      	pop rax
 26147 000136A6 C60004                  	mov byte [rax], T_closure
 26148 000136A9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26149 000136AD 48C74009[BA360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 26150 000136B5 E998040000              	jmp .L_lambda_simple_end_00a8
 26151                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 26152 000136BA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26153 000136C0 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 26154 000136C2 FF742410                	push qword [rsp + 8 * 2]
 26155 000136C6 6A01                    	push 1
 26156 000136C8 E977290000              	jmp L_error_incorrect_arity_simple
 26157                                  .L_lambda_simple_arity_check_ok_00a8:
 26158 000136CD C8000000                	enter 0, 0
 26159 000136D1 BF08000000              	mov rdi, 8 * 1
 26160 000136D6 E8B0290000              	call malloc
 26161 000136DB 488B5D20                	mov rbx, PARAM(0)
 26162 000136DF 488918                  	mov qword [rax], rbx
 26163 000136E2 48894520                	mov PARAM(0), rax
 26164 000136E6 48B8-                   	mov rax, sob_void
 26164 000136E8 [0000000000000000] 
 26165                                  
 26166                                  	; preparing a non-tail-call
 26167 000136F0 6A00                    	push 0	; arg count
 26168 000136F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26169 000136F7 E88F290000              	call malloc
 26170 000136FC 50                      	push rax
 26171 000136FD BF08000000              	mov rdi, 8 * 1	; new rib
 26172 00013702 E884290000              	call malloc
 26173 00013707 50                      	push rax
 26174 00013708 BF18000000              	mov rdi, 8 * 3	; extended env
 26175 0001370D E879290000              	call malloc
 26176 00013712 488B7D10                	mov rdi, ENV
 26177 00013716 BE00000000              	mov rsi, 0
 26178 0001371B BA01000000              	mov rdx, 1
 26179                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 26180 00013720 4883FE02                	cmp rsi, 2
 26181 00013724 7410                    	je .L_lambda_simple_env_end_00a9
 26182 00013726 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26183 0001372A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26184 0001372E 48FFC6                  	inc rsi
 26185 00013731 48FFC2                  	inc rdx
 26186 00013734 EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 26187                                  .L_lambda_simple_env_end_00a9:
 26188 00013736 5B                      	pop rbx
 26189 00013737 BE00000000              	mov rsi, 0
 26190                                  .L_lambda_simple_params_loop_00a9:	; copy params
 26191 0001373C 4883FE01                	cmp rsi, 1
 26192 00013740 740E                    	je .L_lambda_simple_params_end_00a9
 26193 00013742 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26194 00013747 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26195 0001374B 48FFC6                  	inc rsi
 26196 0001374E EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 26197                                  .L_lambda_simple_params_end_00a9:
 26198 00013750 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26199 00013753 4889C3                  	mov rbx, rax
 26200 00013756 58                      	pop rax
 26201 00013757 C60004                  	mov byte [rax], T_closure
 26202 0001375A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26203 0001375E 48C74009[6B370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 26204 00013766 E945010000              	jmp .L_lambda_simple_end_00a9
 26205                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 26206 0001376B 48837C241005            	cmp qword [rsp + 8 * 2], 5
 26207 00013771 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 26208 00013773 FF742410                	push qword [rsp + 8 * 2]
 26209 00013777 6A05                    	push 5
 26210 00013779 E9C6280000              	jmp L_error_incorrect_arity_simple
 26211                                  .L_lambda_simple_arity_check_ok_00a9:
 26212 0001377E C8000000                	enter 0, 0
 26213                                  	; preparing a non-tail-call
 26214 00013782 488B4540                	mov rax, PARAM(4)	; param limit
 26215 00013786 50                      	push rax
 26216 00013787 488B4538                	mov rax, PARAM(3)	; param j
 26217 0001378B 50                      	push rax
 26218 0001378C 6A02                    	push 2	; arg count
 26219 0001378E 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 26220 00013796 803805                  	cmp byte [rax], T_undefined
 26221 00013799 0F84BF270000            	je L_error_fvar_undefined
 26222 0001379F 803804                  	cmp byte [rax], T_closure
 26223 000137A2 0F853A280000            	jne L_error_non_closure
 26224 000137A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26225 000137AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 26226 000137AE 483D[02000000]          	cmp rax, sob_boolean_false
 26227 000137B4 0F84EE000000            	je .L_if_else_007e
 26228                                  	; preparing a non-tail-call
 26229                                  	; preparing a non-tail-call
 26230 000137BA 488B4538                	mov rax, PARAM(3)	; param j
 26231 000137BE 50                      	push rax
 26232 000137BF 488B4530                	mov rax, PARAM(2)	; param vec
 26233 000137C3 50                      	push rax
 26234 000137C4 6A02                    	push 2	; arg count
 26235 000137C6 488B0425[A3170000]      	mov rax, qword [free_var_146]	; free var vector-ref
 26236 000137CE 803805                  	cmp byte [rax], T_undefined
 26237 000137D1 0F8487270000            	je L_error_fvar_undefined
 26238 000137D7 803804                  	cmp byte [rax], T_closure
 26239 000137DA 0F8502280000            	jne L_error_non_closure
 26240 000137E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26241 000137E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26242 000137E6 50                      	push rax
 26243 000137E7 488B4528                	mov rax, PARAM(1)	; param i
 26244 000137EB 50                      	push rax
 26245 000137EC 488B4520                	mov rax, PARAM(0)	; param target
 26246 000137F0 50                      	push rax
 26247 000137F1 6A03                    	push 3	; arg count
 26248 000137F3 488B0425[D6170000]      	mov rax, qword [free_var_149]	; free var vector-set!
 26249 000137FB 803805                  	cmp byte [rax], T_undefined
 26250 000137FE 0F845A270000            	je L_error_fvar_undefined
 26251 00013804 803804                  	cmp byte [rax], T_closure
 26252 00013807 0F85D5270000            	jne L_error_non_closure
 26253 0001380D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26254 00013810 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26255                                  
 26256                                  	; preparing a non-tail-call
 26257 00013813 488B4540                	mov rax, PARAM(4)	; param limit
 26258 00013817 50                      	push rax
 26259                                  	; preparing a non-tail-call
 26260 00013818 48B8-                   	mov rax, L_constants + 2284
 26260 0001381A [EC08000000000000] 
 26261 00013822 50                      	push rax
 26262 00013823 488B4538                	mov rax, PARAM(3)	; param j
 26263 00013827 50                      	push rax
 26264 00013828 6A02                    	push 2	; arg count
 26265 0001382A 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 26266 00013832 803805                  	cmp byte [rax], T_undefined
 26267 00013835 0F8423270000            	je L_error_fvar_undefined
 26268 0001383B 803804                  	cmp byte [rax], T_closure
 26269 0001383E 0F859E270000            	jne L_error_non_closure
 26270 00013844 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26271 00013847 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26272 0001384A 50                      	push rax
 26273 0001384B 488B4530                	mov rax, PARAM(2)	; param vec
 26274 0001384F 50                      	push rax
 26275                                  	; preparing a non-tail-call
 26276 00013850 48B8-                   	mov rax, L_constants + 2284
 26276 00013852 [EC08000000000000] 
 26277 0001385A 50                      	push rax
 26278 0001385B 488B4528                	mov rax, PARAM(1)	; param i
 26279 0001385F 50                      	push rax
 26280 00013860 6A02                    	push 2	; arg count
 26281 00013862 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 26282 0001386A 803805                  	cmp byte [rax], T_undefined
 26283 0001386D 0F84EB260000            	je L_error_fvar_undefined
 26284 00013873 803804                  	cmp byte [rax], T_closure
 26285 00013876 0F8566270000            	jne L_error_non_closure
 26286 0001387C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26287 0001387F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26288 00013882 50                      	push rax
 26289 00013883 488B4520                	mov rax, PARAM(0)	; param target
 26290 00013887 50                      	push rax
 26291 00013888 6A05                    	push 5	; arg count
 26292 0001388A 488B4510                	mov rax, ENV
 26293 0001388E 488B00                  	mov rax, qword [rax + 8 * 0]
 26294 00013891 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var add
 26295 00013894 488B00                  	mov rax, qword [rax]
 26296 00013897 803804                  	cmp byte [rax], T_closure
 26297 0001389A 0F8542270000            	jne L_error_non_closure
 26298 000138A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26299 000138A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26300 000138A6 EB04                    	jmp .L_if_end_007e
 26301                                  .L_if_else_007e:
 26302 000138A8 488B4528                	mov rax, PARAM(1)	; param i
 26303                                  .L_if_end_007e:
 26304 000138AC C9                      	leave
 26305 000138AD C23800                  	ret AND_KILL_FRAME(5)
 26306                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 26307 000138B0 803804                  	cmp byte [rax], T_closure
 26308 000138B3 0F8529270000            	jne L_error_non_closure
 26309 000138B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26310 000138BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 26311 000138BF 50                      	push rax
 26312 000138C0 488B4520                	mov rax, PARAM(0)	; param add
 26313 000138C4 8F00                    	pop qword [rax]
 26314 000138C6 48B8-                   	mov rax, sob_void
 26314 000138C8 [0000000000000000] 
 26315                                  
 26316 000138D0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26317 000138D5 E8B1270000              	call malloc
 26318 000138DA 50                      	push rax
 26319 000138DB BF08000000              	mov rdi, 8 * 1	; new rib
 26320 000138E0 E8A6270000              	call malloc
 26321 000138E5 50                      	push rax
 26322 000138E6 BF18000000              	mov rdi, 8 * 3	; extended env
 26323 000138EB E89B270000              	call malloc
 26324 000138F0 488B7D10                	mov rdi, ENV
 26325 000138F4 BE00000000              	mov rsi, 0
 26326 000138F9 BA01000000              	mov rdx, 1
 26327                                  .L_lambda_opt_env_loop_0018:	; ext_env[i + 1] <-- env[i]
 26328 000138FE 4883FE02                	cmp rsi, 2
 26329 00013902 7410                    	je .L_lambda_opt_env_end_0018
 26330 00013904 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26331 00013908 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26332 0001390C 48FFC6                  	inc rsi
 26333 0001390F 48FFC2                  	inc rdx
 26334 00013912 EBEA                    	jmp .L_lambda_opt_env_loop_0018
 26335                                  .L_lambda_opt_env_end_0018:
 26336 00013914 5B                      	pop rbx
 26337 00013915 BE00000000              	mov rsi, 0
 26338                                  .L_lambda_opt_params_loop_0018:	; copy params
 26339 0001391A 4883FE01                	cmp rsi, 1
 26340 0001391E 740E                    	je .L_lambda_opt_params_end_0018
 26341 00013920 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26342 00013925 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26343 00013929 48FFC6                  	inc rsi
 26344 0001392C EBEC                    	jmp .L_lambda_opt_params_loop_0018
 26345                                  .L_lambda_opt_params_end_0018:
 26346 0001392E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26347 00013931 4889C3                  	mov rbx, rax
 26348 00013934 58                      	pop rax
 26349 00013935 C60004                  	mov byte [rax], T_closure
 26350 00013938 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26351 0001393C 48C74009[49390100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 26352 00013944 E905020000              	jmp .L_lambda_opt_end_0018
 26353                                  .L_lambda_opt_code_0018:
 26354 00013949 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 26355 0001394E 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 26356 00013952 7407                    	je .L_lambda_opt_arity_check_exact_0018	; Jump if arity matches
 26357 00013954 7F4C                    	jg .L_lambda_opt_arity_check_more_0018	; Jump if more arguments passed
 26358 00013956 E9FD260000              	jmp L_error_incorrect_arity_opt
 26359                                  .L_lambda_opt_arity_check_exact_0018:
 26360 0001395B 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 26361 0001395E 4983C603                	add r14, 3 ; add 3 first stack values
 26362 00013962 41BF00000000            	mov r15, 0 ; r15 = index
 26363 00013968 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 26364 0001396C 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 26365 00013974 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26366                                  .L_lambda_opt_stack_shrink_loop_0018:
 26367 00013976 4983FE00                	cmp r14, 0
 26368 0001397A 7E11                    	jle .L_make_lambda_opt_exact_finish_0018
 26369 0001397C 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 26370 00013981 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 26371 00013985 49FFCE                  	dec r14 ; next loop value
 26372 00013988 49FFC7                  	inc r15 ; update i
 26373 0001398B EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26374                                  .L_make_lambda_opt_exact_finish_0018:
 26375 0001398D 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 26376 00013995 49FFC2                  	inc r10
 26377 00013998 4C89542410              	mov qword [rsp + 8 * 2], r10
 26378 0001399D E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0018
 26379                                  .L_lambda_opt_arity_check_more_0018:
 26380 000139A2 4D89D6                  	mov r14, r10 ; r14 = num args
 26381 000139A5 4D89D7                  	mov r15, r10 ; r15 = num args
 26382 000139A8 41B900000000            	mov r9, 0; r9 = number of params 
 26383 000139AE 4D29CE                  	sub r14, r9 ; r14 = extra args
 26384 000139B1 4D01F1                  	add r9, r14 ; r9 = num args
 26385 000139B4 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 26385 000139B6 [0100000000000000] 
 26386 000139BE EB00                    	jmp .L_make_lambda_opt_arg_list_0018
 26387                                  .L_make_lambda_opt_arg_list_0018:
 26388 000139C0 4983FE00                	cmp r14, 0
 26389 000139C4 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0018
 26390 000139C6 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 26391 000139CB 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 26392 000139CE 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 26393 000139D4 E8B2260000              	call malloc                         ; Allocate memory, result in rax
 26394 000139D9 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 26395 000139DC 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 26396 000139E0 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 26397 000139E4 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 26398 000139E7 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 26399 000139EA 49FFC9                  	dec r9                              ; args index minus 1
 26400 000139ED 49FFCE                  	dec r14                             ; next iteration
 26401 000139F0 EBCE                    	jmp .L_make_lambda_opt_arg_list_0018
 26402                                  .L_make_lambda_opt_stack_fixed_0018:
 26403 000139F2 4D89FE                  	mov r14, r15 ; r14 = num args
 26404 000139F5 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 26405 000139F8 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 26406 000139FC 41BA00000000            	mov r10, 0; r10 = num of params
 26407 00013A02 4D29D6                  	sub r14, r10 ; r14 = extra args
 26408 00013A05 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 26409 00013A08 49FFCE                  	dec r14 ; how much we need to change stack wise?
 26410 00013A0B 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 26411 00013A10 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0018
 26412                                  .L_lambda_opt_stack_shrink_loop_more_0018:
 26413 00013A12 4983F800                	cmp r8, 0
 26414 00013A16 7E15                    	jle .L_make_lambda_opt_more_finish_0018
 26415 00013A18 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 26416 00013A1C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 26417 00013A20 4D8D26                  	lea r12, [r14]
 26418 00013A23 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 26419 00013A28 49FFC8                  	dec r8 ; next iteration
 26420 00013A2B EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0018
 26421                                  .L_make_lambda_opt_more_finish_0018:
 26422 00013A2D 4D89F8                  	mov r8, r15 ; num of args
 26423 00013A30 41BA00000000            	mov r10, 0
 26424 00013A36 4D29D0                  	sub r8, r10 ; num of new args
 26425 00013A39 49FFC0                  	inc r8
 26426 00013A3C 4C89442420              	mov qword [rsp + 8 * 4], r8
 26427 00013A41 4883C410                	add rsp, 8 * 2  ; 
 26428 00013A45 EB00                    	jmp .L_lambda_opt_stack_adjusted_0018
 26429                                  .L_lambda_opt_stack_adjusted_0018:
 26430 00013A47 C8000000                	enter 0, 0
 26431                                  	; Setting up for a tail-call
 26432                                  	; preparing a non-tail-call
 26433                                  	; preparing a non-tail-call
 26434                                  	; preparing a non-tail-call
 26435 00013A4B 488B4520                	mov rax, PARAM(0)	; param vectors
 26436 00013A4F 50                      	push rax
 26437 00013A50 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 26438 00013A58 803805                  	cmp byte [rax], T_undefined
 26439 00013A5B 0F84FD240000            	je L_error_fvar_undefined
 26440 00013A61 50                      	push rax
 26441 00013A62 6A02                    	push 2	; arg count
 26442 00013A64 488B0425[D9140000]      	mov rax, qword [free_var_104]	; free var map
 26443 00013A6C 803805                  	cmp byte [rax], T_undefined
 26444 00013A6F 0F84E9240000            	je L_error_fvar_undefined
 26445 00013A75 803804                  	cmp byte [rax], T_closure
 26446 00013A78 0F8564250000            	jne L_error_non_closure
 26447 00013A7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26448 00013A81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26449 00013A84 50                      	push rax
 26450 00013A85 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 26451 00013A8D 803805                  	cmp byte [rax], T_undefined
 26452 00013A90 0F84C8240000            	je L_error_fvar_undefined
 26453 00013A96 50                      	push rax
 26454 00013A97 6A02                    	push 2	; arg count
 26455 00013A99 488B0425[33100000]      	mov rax, qword [free_var_34]	; free var apply
 26456 00013AA1 803805                  	cmp byte [rax], T_undefined
 26457 00013AA4 0F84B4240000            	je L_error_fvar_undefined
 26458 00013AAA 803804                  	cmp byte [rax], T_closure
 26459 00013AAD 0F852F250000            	jne L_error_non_closure
 26460 00013AB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26461 00013AB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26462 00013AB9 50                      	push rax
 26463 00013ABA 6A01                    	push 1	; arg count
 26464 00013ABC 488B0425[B7140000]      	mov rax, qword [free_var_102]	; free var make-vector
 26465 00013AC4 803805                  	cmp byte [rax], T_undefined
 26466 00013AC7 0F8491240000            	je L_error_fvar_undefined
 26467 00013ACD 803804                  	cmp byte [rax], T_closure
 26468 00013AD0 0F850C250000            	jne L_error_non_closure
 26469 00013AD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26470 00013AD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26471 00013ADC 50                      	push rax
 26472 00013ADD 48B8-                   	mov rax, L_constants + 2149
 26472 00013ADF [6508000000000000] 
 26473 00013AE7 50                      	push rax
 26474 00013AE8 488B4520                	mov rax, PARAM(0)	; param vectors
 26475 00013AEC 50                      	push rax
 26476 00013AED 6A03                    	push 3
 26477 00013AEF 488B4510                	mov rax, ENV
 26478 00013AF3 488B4008                	mov rax, qword [rax + 8 * 1]
 26479 00013AF7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26480 00013AFA 488B00                  	mov rax, qword [rax]
 26481 00013AFD 803804                  	cmp byte [rax], T_closure
 26482 00013B00 0F85DC240000            	jne L_error_non_closure
 26483 00013B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26484 00013B09 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 26485 00013B0D 4C8B4D00                	mov r9, qword [rbp]
 26486 00013B11 4150                    	push r8
 26487 00013B13 4151                    	push r9
 26488 00013B15 41BA07000000            	mov r10, 3 + 4
 26489 00013B1B 4C8B5D18                	mov r11, COUNT
 26490 00013B1F 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 26491 00013B24 4C8D65F8                	lea r12, [rbp - 8]
 26492                                  .L_tc_recycle_frame_loop_00d8:
 26493 00013B28 4983FA00                	cmp r10, 0
 26494 00013B2C 7414                    	je .L_tc_recycle_frame_done_00d8
 26495 00013B2E 4D8B2C24                	mov r13, qword [r12]
 26496 00013B32 4D892B                  	mov qword [r11], r13
 26497 00013B35 49FFCA                  	dec r10
 26498 00013B38 4983EB08                	sub r11, 8
 26499 00013B3C 4983EC08                	sub r12, 8
 26500 00013B40 EBE6                    	jmp .L_tc_recycle_frame_loop_00d8
 26501                                  .L_tc_recycle_frame_done_00d8:
 26502 00013B42 498D6308                	lea rsp, [r11 + 8]
 26503 00013B46 5D                      	pop rbp
 26504 00013B47 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26505 00013B4A C9                      	leave
 26506 00013B4B C21000                  	ret AND_KILL_FRAME(0)
 26507                                  .L_lambda_opt_end_0018:	; new closure is in rax
 26508 00013B4E C9                      	leave
 26509 00013B4F C21800                  	ret AND_KILL_FRAME(1)
 26510                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 26511 00013B52 803804                  	cmp byte [rax], T_closure
 26512 00013B55 0F8587240000            	jne L_error_non_closure
 26513 00013B5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26514 00013B5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 26515 00013B61 C9                      	leave
 26516 00013B62 C21800                  	ret AND_KILL_FRAME(1)
 26517                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26518 00013B65 803804                  	cmp byte [rax], T_closure
 26519 00013B68 0F8574240000            	jne L_error_non_closure
 26520 00013B6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26521 00013B71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26522 00013B74 48890425[81170000]      	mov qword [free_var_144], rax
 26523 00013B7C 48B8-                   	mov rax, sob_void
 26523 00013B7E [0000000000000000] 
 26524                                  
 26525 00013B86 4889C7                  	mov rdi, rax
 26526 00013B89 E852270000              	call print_sexpr_if_not_void
 26527 00013B8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26528 00013B93 E8F3240000              	call malloc
 26529 00013B98 50                      	push rax
 26530 00013B99 BF00000000              	mov rdi, 8 * 0	; new rib
 26531 00013B9E E8E8240000              	call malloc
 26532 00013BA3 50                      	push rax
 26533 00013BA4 BF08000000              	mov rdi, 8 * 1	; extended env
 26534 00013BA9 E8DD240000              	call malloc
 26535 00013BAE 488B7D10                	mov rdi, ENV
 26536 00013BB2 BE00000000              	mov rsi, 0
 26537 00013BB7 BA01000000              	mov rdx, 1
 26538                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 26539 00013BBC 4883FE00                	cmp rsi, 0
 26540 00013BC0 7410                    	je .L_lambda_simple_env_end_00aa
 26541 00013BC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26542 00013BC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26543 00013BCA 48FFC6                  	inc rsi
 26544 00013BCD 48FFC2                  	inc rdx
 26545 00013BD0 EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 26546                                  .L_lambda_simple_env_end_00aa:
 26547 00013BD2 5B                      	pop rbx
 26548 00013BD3 BE00000000              	mov rsi, 0
 26549                                  .L_lambda_simple_params_loop_00aa:	; copy params
 26550 00013BD8 4883FE00                	cmp rsi, 0
 26551 00013BDC 740E                    	je .L_lambda_simple_params_end_00aa
 26552 00013BDE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26553 00013BE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26554 00013BE7 48FFC6                  	inc rsi
 26555 00013BEA EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 26556                                  .L_lambda_simple_params_end_00aa:
 26557 00013BEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26558 00013BEF 4889C3                  	mov rbx, rax
 26559 00013BF2 58                      	pop rax
 26560 00013BF3 C60004                  	mov byte [rax], T_closure
 26561 00013BF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26562 00013BFA 48C74009[073C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 26563 00013C02 E9C6000000              	jmp .L_lambda_simple_end_00aa
 26564                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 26565 00013C07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26566 00013C0D 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 26567 00013C0F FF742410                	push qword [rsp + 8 * 2]
 26568 00013C13 6A01                    	push 1
 26569 00013C15 E92A240000              	jmp L_error_incorrect_arity_simple
 26570                                  .L_lambda_simple_arity_check_ok_00aa:
 26571 00013C1A C8000000                	enter 0, 0
 26572                                  	; Setting up for a tail-call
 26573                                  	; preparing a non-tail-call
 26574                                  	; preparing a non-tail-call
 26575 00013C1E 488B4520                	mov rax, PARAM(0)	; param str
 26576 00013C22 50                      	push rax
 26577 00013C23 6A01                    	push 1	; arg count
 26578 00013C25 488B0425[FA150000]      	mov rax, qword [free_var_121]	; free var string->list
 26579 00013C2D 803805                  	cmp byte [rax], T_undefined
 26580 00013C30 0F8428230000            	je L_error_fvar_undefined
 26581 00013C36 803804                  	cmp byte [rax], T_closure
 26582 00013C39 0F85A3230000            	jne L_error_non_closure
 26583 00013C3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26584 00013C42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26585 00013C45 50                      	push rax
 26586 00013C46 6A01                    	push 1	; arg count
 26587 00013C48 488B0425[D8150000]      	mov rax, qword [free_var_119]	; free var reverse
 26588 00013C50 803805                  	cmp byte [rax], T_undefined
 26589 00013C53 0F8405230000            	je L_error_fvar_undefined
 26590 00013C59 803804                  	cmp byte [rax], T_closure
 26591 00013C5C 0F8580230000            	jne L_error_non_closure
 26592 00013C62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26593 00013C65 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26594 00013C68 50                      	push rax
 26595 00013C69 6A01                    	push 1
 26596 00013C6B 488B0425[40140000]      	mov rax, qword [free_var_95]	; free var list->string
 26597 00013C73 803805                  	cmp byte [rax], T_undefined
 26598 00013C76 0F84E2220000            	je L_error_fvar_undefined
 26599 00013C7C 803804                  	cmp byte [rax], T_closure
 26600 00013C7F 0F855D230000            	jne L_error_non_closure
 26601 00013C85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26602 00013C88 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 26603 00013C8C 4C8B4D00                	mov r9, qword [rbp]
 26604 00013C90 4150                    	push r8
 26605 00013C92 4151                    	push r9
 26606 00013C94 41BA05000000            	mov r10, 1 + 4
 26607 00013C9A 4C8B5D18                	mov r11, COUNT
 26608 00013C9E 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 26609 00013CA3 4C8D65F8                	lea r12, [rbp - 8]
 26610                                  .L_tc_recycle_frame_loop_00d9:
 26611 00013CA7 4983FA00                	cmp r10, 0
 26612 00013CAB 7414                    	je .L_tc_recycle_frame_done_00d9
 26613 00013CAD 4D8B2C24                	mov r13, qword [r12]
 26614 00013CB1 4D892B                  	mov qword [r11], r13
 26615 00013CB4 49FFCA                  	dec r10
 26616 00013CB7 4983EB08                	sub r11, 8
 26617 00013CBB 4983EC08                	sub r12, 8
 26618 00013CBF EBE6                    	jmp .L_tc_recycle_frame_loop_00d9
 26619                                  .L_tc_recycle_frame_done_00d9:
 26620 00013CC1 498D6308                	lea rsp, [r11 + 8]
 26621 00013CC5 5D                      	pop rbp
 26622 00013CC6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26623 00013CC9 C9                      	leave
 26624 00013CCA C21800                  	ret AND_KILL_FRAME(1)
 26625                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 26626 00013CCD 48890425[A4160000]      	mov qword [free_var_131], rax
 26627 00013CD5 48B8-                   	mov rax, sob_void
 26627 00013CD7 [0000000000000000] 
 26628                                  
 26629 00013CDF 4889C7                  	mov rdi, rax
 26630 00013CE2 E8F9250000              	call print_sexpr_if_not_void
 26631 00013CE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26632 00013CEC E89A230000              	call malloc
 26633 00013CF1 50                      	push rax
 26634 00013CF2 BF00000000              	mov rdi, 8 * 0	; new rib
 26635 00013CF7 E88F230000              	call malloc
 26636 00013CFC 50                      	push rax
 26637 00013CFD BF08000000              	mov rdi, 8 * 1	; extended env
 26638 00013D02 E884230000              	call malloc
 26639 00013D07 488B7D10                	mov rdi, ENV
 26640 00013D0B BE00000000              	mov rsi, 0
 26641 00013D10 BA01000000              	mov rdx, 1
 26642                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 26643 00013D15 4883FE00                	cmp rsi, 0
 26644 00013D19 7410                    	je .L_lambda_simple_env_end_00ab
 26645 00013D1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26646 00013D1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26647 00013D23 48FFC6                  	inc rsi
 26648 00013D26 48FFC2                  	inc rdx
 26649 00013D29 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 26650                                  .L_lambda_simple_env_end_00ab:
 26651 00013D2B 5B                      	pop rbx
 26652 00013D2C BE00000000              	mov rsi, 0
 26653                                  .L_lambda_simple_params_loop_00ab:	; copy params
 26654 00013D31 4883FE00                	cmp rsi, 0
 26655 00013D35 740E                    	je .L_lambda_simple_params_end_00ab
 26656 00013D37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26657 00013D3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26658 00013D40 48FFC6                  	inc rsi
 26659 00013D43 EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 26660                                  .L_lambda_simple_params_end_00ab:
 26661 00013D45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26662 00013D48 4889C3                  	mov rbx, rax
 26663 00013D4B 58                      	pop rax
 26664 00013D4C C60004                  	mov byte [rax], T_closure
 26665 00013D4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26666 00013D53 48C74009[603D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 26667 00013D5B E9C6000000              	jmp .L_lambda_simple_end_00ab
 26668                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 26669 00013D60 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26670 00013D66 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 26671 00013D68 FF742410                	push qword [rsp + 8 * 2]
 26672 00013D6C 6A01                    	push 1
 26673 00013D6E E9D1220000              	jmp L_error_incorrect_arity_simple
 26674                                  .L_lambda_simple_arity_check_ok_00ab:
 26675 00013D73 C8000000                	enter 0, 0
 26676                                  	; Setting up for a tail-call
 26677                                  	; preparing a non-tail-call
 26678                                  	; preparing a non-tail-call
 26679 00013D77 488B4520                	mov rax, PARAM(0)	; param vec
 26680 00013D7B 50                      	push rax
 26681 00013D7C 6A01                    	push 1	; arg count
 26682 00013D7E 488B0425[70170000]      	mov rax, qword [free_var_143]	; free var vector->list
 26683 00013D86 803805                  	cmp byte [rax], T_undefined
 26684 00013D89 0F84CF210000            	je L_error_fvar_undefined
 26685 00013D8F 803804                  	cmp byte [rax], T_closure
 26686 00013D92 0F854A220000            	jne L_error_non_closure
 26687 00013D98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26688 00013D9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 26689 00013D9E 50                      	push rax
 26690 00013D9F 6A01                    	push 1	; arg count
 26691 00013DA1 488B0425[D8150000]      	mov rax, qword [free_var_119]	; free var reverse
 26692 00013DA9 803805                  	cmp byte [rax], T_undefined
 26693 00013DAC 0F84AC210000            	je L_error_fvar_undefined
 26694 00013DB2 803804                  	cmp byte [rax], T_closure
 26695 00013DB5 0F8527220000            	jne L_error_non_closure
 26696 00013DBB FF7001                  	push SOB_CLOSURE_ENV(rax)
 26697 00013DBE FF5009                  	call SOB_CLOSURE_CODE(rax)
 26698 00013DC1 50                      	push rax
 26699 00013DC2 6A01                    	push 1
 26700 00013DC4 488B0425[51140000]      	mov rax, qword [free_var_96]	; free var list->vector
 26701 00013DCC 803805                  	cmp byte [rax], T_undefined
 26702 00013DCF 0F8489210000            	je L_error_fvar_undefined
 26703 00013DD5 803804                  	cmp byte [rax], T_closure
 26704 00013DD8 0F8504220000            	jne L_error_non_closure
 26705 00013DDE FF7001                  	push SOB_CLOSURE_ENV(rax)
 26706 00013DE1 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 26707 00013DE5 4C8B4D00                	mov r9, qword [rbp]
 26708 00013DE9 4150                    	push r8
 26709 00013DEB 4151                    	push r9
 26710 00013DED 41BA05000000            	mov r10, 1 + 4
 26711 00013DF3 4C8B5D18                	mov r11, COUNT
 26712 00013DF7 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 26713 00013DFC 4C8D65F8                	lea r12, [rbp - 8]
 26714                                  .L_tc_recycle_frame_loop_00da:
 26715 00013E00 4983FA00                	cmp r10, 0
 26716 00013E04 7414                    	je .L_tc_recycle_frame_done_00da
 26717 00013E06 4D8B2C24                	mov r13, qword [r12]
 26718 00013E0A 4D892B                  	mov qword [r11], r13
 26719 00013E0D 49FFCA                  	dec r10
 26720 00013E10 4983EB08                	sub r11, 8
 26721 00013E14 4983EC08                	sub r12, 8
 26722 00013E18 EBE6                    	jmp .L_tc_recycle_frame_loop_00da
 26723                                  .L_tc_recycle_frame_done_00da:
 26724 00013E1A 498D6308                	lea rsp, [r11 + 8]
 26725 00013E1E 5D                      	pop rbp
 26726 00013E1F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26727 00013E22 C9                      	leave
 26728 00013E23 C21800                  	ret AND_KILL_FRAME(1)
 26729                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 26730 00013E26 48890425[B4170000]      	mov qword [free_var_147], rax
 26731 00013E2E 48B8-                   	mov rax, sob_void
 26731 00013E30 [0000000000000000] 
 26732                                  
 26733 00013E38 4889C7                  	mov rdi, rax
 26734 00013E3B E8A0240000              	call print_sexpr_if_not_void
 26735                                  	; preparing a non-tail-call
 26736 00013E40 48B8-                   	mov rax, L_constants + 1993
 26736 00013E42 [C907000000000000] 
 26737 00013E4A 50                      	push rax
 26738 00013E4B 6A01                    	push 1	; arg count
 26739 00013E4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26740 00013E52 E834220000              	call malloc
 26741 00013E57 50                      	push rax
 26742 00013E58 BF00000000              	mov rdi, 8 * 0	; new rib
 26743 00013E5D E829220000              	call malloc
 26744 00013E62 50                      	push rax
 26745 00013E63 BF08000000              	mov rdi, 8 * 1	; extended env
 26746 00013E68 E81E220000              	call malloc
 26747 00013E6D 488B7D10                	mov rdi, ENV
 26748 00013E71 BE00000000              	mov rsi, 0
 26749 00013E76 BA01000000              	mov rdx, 1
 26750                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 26751 00013E7B 4883FE00                	cmp rsi, 0
 26752 00013E7F 7410                    	je .L_lambda_simple_env_end_00ac
 26753 00013E81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26754 00013E85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26755 00013E89 48FFC6                  	inc rsi
 26756 00013E8C 48FFC2                  	inc rdx
 26757 00013E8F EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 26758                                  .L_lambda_simple_env_end_00ac:
 26759 00013E91 5B                      	pop rbx
 26760 00013E92 BE00000000              	mov rsi, 0
 26761                                  .L_lambda_simple_params_loop_00ac:	; copy params
 26762 00013E97 4883FE00                	cmp rsi, 0
 26763 00013E9B 740E                    	je .L_lambda_simple_params_end_00ac
 26764 00013E9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26765 00013EA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26766 00013EA6 48FFC6                  	inc rsi
 26767 00013EA9 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 26768                                  .L_lambda_simple_params_end_00ac:
 26769 00013EAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26770 00013EAE 4889C3                  	mov rbx, rax
 26771 00013EB1 58                      	pop rax
 26772 00013EB2 C60004                  	mov byte [rax], T_closure
 26773 00013EB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26774 00013EB9 48C74009[C63E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 26775 00013EC1 E910060000              	jmp .L_lambda_simple_end_00ac
 26776                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 26777 00013EC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26778 00013ECC 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 26779 00013ECE FF742410                	push qword [rsp + 8 * 2]
 26780 00013ED2 6A01                    	push 1
 26781 00013ED4 E96B210000              	jmp L_error_incorrect_arity_simple
 26782                                  .L_lambda_simple_arity_check_ok_00ac:
 26783 00013ED9 C8000000                	enter 0, 0
 26784 00013EDD BF08000000              	mov rdi, 8 * 1
 26785 00013EE2 E8A4210000              	call malloc
 26786 00013EE7 488B5D20                	mov rbx, PARAM(0)
 26787 00013EEB 488918                  	mov qword [rax], rbx
 26788 00013EEE 48894520                	mov PARAM(0), rax
 26789 00013EF2 48B8-                   	mov rax, sob_void
 26789 00013EF4 [0000000000000000] 
 26790                                  
 26791                                  	; preparing a non-tail-call
 26792 00013EFC 6A00                    	push 0	; arg count
 26793 00013EFE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26794 00013F03 E883210000              	call malloc
 26795 00013F08 50                      	push rax
 26796 00013F09 BF08000000              	mov rdi, 8 * 1	; new rib
 26797 00013F0E E878210000              	call malloc
 26798 00013F13 50                      	push rax
 26799 00013F14 BF10000000              	mov rdi, 8 * 2	; extended env
 26800 00013F19 E86D210000              	call malloc
 26801 00013F1E 488B7D10                	mov rdi, ENV
 26802 00013F22 BE00000000              	mov rsi, 0
 26803 00013F27 BA01000000              	mov rdx, 1
 26804                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 26805 00013F2C 4883FE01                	cmp rsi, 1
 26806 00013F30 7410                    	je .L_lambda_simple_env_end_00ad
 26807 00013F32 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26808 00013F36 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26809 00013F3A 48FFC6                  	inc rsi
 26810 00013F3D 48FFC2                  	inc rdx
 26811 00013F40 EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 26812                                  .L_lambda_simple_env_end_00ad:
 26813 00013F42 5B                      	pop rbx
 26814 00013F43 BE00000000              	mov rsi, 0
 26815                                  .L_lambda_simple_params_loop_00ad:	; copy params
 26816 00013F48 4883FE01                	cmp rsi, 1
 26817 00013F4C 740E                    	je .L_lambda_simple_params_end_00ad
 26818 00013F4E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26819 00013F53 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26820 00013F57 48FFC6                  	inc rsi
 26821 00013F5A EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 26822                                  .L_lambda_simple_params_end_00ad:
 26823 00013F5C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26824 00013F5F 4889C3                  	mov rbx, rax
 26825 00013F62 58                      	pop rax
 26826 00013F63 C60004                  	mov byte [rax], T_closure
 26827 00013F66 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26828 00013F6A 48C74009[773F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 26829 00013F72 E9B8020000              	jmp .L_lambda_simple_end_00ad
 26830                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 26831 00013F77 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26832 00013F7D 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 26833 00013F7F FF742410                	push qword [rsp + 8 * 2]
 26834 00013F83 6A03                    	push 3
 26835 00013F85 E9BA200000              	jmp L_error_incorrect_arity_simple
 26836                                  .L_lambda_simple_arity_check_ok_00ad:
 26837 00013F8A C8000000                	enter 0, 0
 26838                                  	; preparing a non-tail-call
 26839 00013F8E 488B4530                	mov rax, PARAM(2)	; param j
 26840 00013F92 50                      	push rax
 26841 00013F93 488B4528                	mov rax, PARAM(1)	; param i
 26842 00013F97 50                      	push rax
 26843 00013F98 6A02                    	push 2	; arg count
 26844 00013F9A 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 26845 00013FA2 803805                  	cmp byte [rax], T_undefined
 26846 00013FA5 0F84B31F0000            	je L_error_fvar_undefined
 26847 00013FAB 803804                  	cmp byte [rax], T_closure
 26848 00013FAE 0F852E200000            	jne L_error_non_closure
 26849 00013FB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26850 00013FB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26851 00013FBA 483D[02000000]          	cmp rax, sob_boolean_false
 26852 00013FC0 0F8461020000            	je .L_if_else_007f
 26853                                  	; Setting up for a tail-call
 26854                                  	; preparing a non-tail-call
 26855 00013FC6 488B4528                	mov rax, PARAM(1)	; param i
 26856 00013FCA 50                      	push rax
 26857 00013FCB 488B4520                	mov rax, PARAM(0)	; param str
 26858 00013FCF 50                      	push rax
 26859 00013FD0 6A02                    	push 2	; arg count
 26860 00013FD2 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 26861 00013FDA 803805                  	cmp byte [rax], T_undefined
 26862 00013FDD 0F847B1F0000            	je L_error_fvar_undefined
 26863 00013FE3 803804                  	cmp byte [rax], T_closure
 26864 00013FE6 0F85F61F0000            	jne L_error_non_closure
 26865 00013FEC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26866 00013FEF FF5009                  	call SOB_CLOSURE_CODE(rax)
 26867 00013FF2 50                      	push rax
 26868 00013FF3 6A01                    	push 1
 26869 00013FF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26870 00013FFA E88C200000              	call malloc
 26871 00013FFF 50                      	push rax
 26872 00014000 BF18000000              	mov rdi, 8 * 3	; new rib
 26873 00014005 E881200000              	call malloc
 26874 0001400A 50                      	push rax
 26875 0001400B BF18000000              	mov rdi, 8 * 3	; extended env
 26876 00014010 E876200000              	call malloc
 26877 00014015 488B7D10                	mov rdi, ENV
 26878 00014019 BE00000000              	mov rsi, 0
 26879 0001401E BA01000000              	mov rdx, 1
 26880                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 26881 00014023 4883FE02                	cmp rsi, 2
 26882 00014027 7410                    	je .L_lambda_simple_env_end_00ae
 26883 00014029 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26884 0001402D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26885 00014031 48FFC6                  	inc rsi
 26886 00014034 48FFC2                  	inc rdx
 26887 00014037 EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 26888                                  .L_lambda_simple_env_end_00ae:
 26889 00014039 5B                      	pop rbx
 26890 0001403A BE00000000              	mov rsi, 0
 26891                                  .L_lambda_simple_params_loop_00ae:	; copy params
 26892 0001403F 4883FE03                	cmp rsi, 3
 26893 00014043 740E                    	je .L_lambda_simple_params_end_00ae
 26894 00014045 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26895 0001404A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26896 0001404E 48FFC6                  	inc rsi
 26897 00014051 EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 26898                                  .L_lambda_simple_params_end_00ae:
 26899 00014053 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26900 00014056 4889C3                  	mov rbx, rax
 26901 00014059 58                      	pop rax
 26902 0001405A C60004                  	mov byte [rax], T_closure
 26903 0001405D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26904 00014061 48C74009[6E400100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 26905 00014069 E96A010000              	jmp .L_lambda_simple_end_00ae
 26906                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 26907 0001406E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26908 00014074 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 26909 00014076 FF742410                	push qword [rsp + 8 * 2]
 26910 0001407A 6A01                    	push 1
 26911 0001407C E9C31F0000              	jmp L_error_incorrect_arity_simple
 26912                                  .L_lambda_simple_arity_check_ok_00ae:
 26913 00014081 C8000000                	enter 0, 0
 26914                                  	; preparing a non-tail-call
 26915                                  	; preparing a non-tail-call
 26916 00014085 488B4510                	mov rax, ENV
 26917 00014089 488B00                  	mov rax, qword [rax + 8 * 0]
 26918 0001408C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26919 00014090 50                      	push rax
 26920 00014091 488B4510                	mov rax, ENV
 26921 00014095 488B00                  	mov rax, qword [rax + 8 * 0]
 26922 00014098 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26923 0001409B 50                      	push rax
 26924 0001409C 6A02                    	push 2	; arg count
 26925 0001409E 488B0425[93160000]      	mov rax, qword [free_var_130]	; free var string-ref
 26926 000140A6 803805                  	cmp byte [rax], T_undefined
 26927 000140A9 0F84AF1E0000            	je L_error_fvar_undefined
 26928 000140AF 803804                  	cmp byte [rax], T_closure
 26929 000140B2 0F852A1F0000            	jne L_error_non_closure
 26930 000140B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26931 000140BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 26932 000140BE 50                      	push rax
 26933 000140BF 488B4510                	mov rax, ENV
 26934 000140C3 488B00                  	mov rax, qword [rax + 8 * 0]
 26935 000140C6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26936 000140CA 50                      	push rax
 26937 000140CB 488B4510                	mov rax, ENV
 26938 000140CF 488B00                  	mov rax, qword [rax + 8 * 0]
 26939 000140D2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26940 000140D5 50                      	push rax
 26941 000140D6 6A03                    	push 3	; arg count
 26942 000140D8 488B0425[C6160000]      	mov rax, qword [free_var_133]	; free var string-set!
 26943 000140E0 803805                  	cmp byte [rax], T_undefined
 26944 000140E3 0F84751E0000            	je L_error_fvar_undefined
 26945 000140E9 803804                  	cmp byte [rax], T_closure
 26946 000140EC 0F85F01E0000            	jne L_error_non_closure
 26947 000140F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26948 000140F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26949                                  
 26950                                  	; preparing a non-tail-call
 26951 000140F8 488B4520                	mov rax, PARAM(0)	; param ch
 26952 000140FC 50                      	push rax
 26953 000140FD 488B4510                	mov rax, ENV
 26954 00014101 488B00                  	mov rax, qword [rax + 8 * 0]
 26955 00014104 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26956 00014108 50                      	push rax
 26957 00014109 488B4510                	mov rax, ENV
 26958 0001410D 488B00                  	mov rax, qword [rax + 8 * 0]
 26959 00014110 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26960 00014113 50                      	push rax
 26961 00014114 6A03                    	push 3	; arg count
 26962 00014116 488B0425[C6160000]      	mov rax, qword [free_var_133]	; free var string-set!
 26963 0001411E 803805                  	cmp byte [rax], T_undefined
 26964 00014121 0F84371E0000            	je L_error_fvar_undefined
 26965 00014127 803804                  	cmp byte [rax], T_closure
 26966 0001412A 0F85B21E0000            	jne L_error_non_closure
 26967 00014130 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26968 00014133 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26969                                  
 26970                                  	; preparing a non-tail-call
 26971                                  	; preparing a non-tail-call
 26972 00014136 48B8-                   	mov rax, L_constants + 2284
 26972 00014138 [EC08000000000000] 
 26973 00014140 50                      	push rax
 26974 00014141 488B4510                	mov rax, ENV
 26975 00014145 488B00                  	mov rax, qword [rax + 8 * 0]
 26976 00014148 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26977 0001414C 50                      	push rax
 26978 0001414D 6A02                    	push 2	; arg count
 26979 0001414F 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 26980 00014157 803805                  	cmp byte [rax], T_undefined
 26981 0001415A 0F84FE1D0000            	je L_error_fvar_undefined
 26982 00014160 803804                  	cmp byte [rax], T_closure
 26983 00014163 0F85791E0000            	jne L_error_non_closure
 26984 00014169 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26985 0001416C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26986 0001416F 50                      	push rax
 26987                                  	; preparing a non-tail-call
 26988 00014170 48B8-                   	mov rax, L_constants + 2284
 26988 00014172 [EC08000000000000] 
 26989 0001417A 50                      	push rax
 26990 0001417B 488B4510                	mov rax, ENV
 26991 0001417F 488B00                  	mov rax, qword [rax + 8 * 0]
 26992 00014182 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26993 00014186 50                      	push rax
 26994 00014187 6A02                    	push 2	; arg count
 26995 00014189 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 26996 00014191 803805                  	cmp byte [rax], T_undefined
 26997 00014194 0F84C41D0000            	je L_error_fvar_undefined
 26998 0001419A 803804                  	cmp byte [rax], T_closure
 26999 0001419D 0F853F1E0000            	jne L_error_non_closure
 27000 000141A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27001 000141A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27002 000141A9 50                      	push rax
 27003 000141AA 488B4510                	mov rax, ENV
 27004 000141AE 488B00                  	mov rax, qword [rax + 8 * 0]
 27005 000141B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27006 000141B4 50                      	push rax
 27007 000141B5 6A03                    	push 3	; arg count
 27008 000141B7 488B4510                	mov rax, ENV
 27009 000141BB 488B4008                	mov rax, qword [rax + 8 * 1]
 27010 000141BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27011 000141C2 488B00                  	mov rax, qword [rax]
 27012 000141C5 803804                  	cmp byte [rax], T_closure
 27013 000141C8 0F85141E0000            	jne L_error_non_closure
 27014 000141CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 27015 000141D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27016 000141D4 C9                      	leave
 27017 000141D5 C21800                  	ret AND_KILL_FRAME(1)
 27018                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27019 000141D8 803804                  	cmp byte [rax], T_closure
 27020 000141DB 0F85011E0000            	jne L_error_non_closure
 27021 000141E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27022 000141E4 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27023 000141E8 4C8B4D00                	mov r9, qword [rbp]
 27024 000141EC 4150                    	push r8
 27025 000141EE 4151                    	push r9
 27026 000141F0 41BA05000000            	mov r10, 1 + 4
 27027 000141F6 4C8B5D18                	mov r11, COUNT
 27028 000141FA 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27029 000141FF 4C8D65F8                	lea r12, [rbp - 8]
 27030                                  .L_tc_recycle_frame_loop_00db:
 27031 00014203 4983FA00                	cmp r10, 0
 27032 00014207 7414                    	je .L_tc_recycle_frame_done_00db
 27033 00014209 4D8B2C24                	mov r13, qword [r12]
 27034 0001420D 4D892B                  	mov qword [r11], r13
 27035 00014210 49FFCA                  	dec r10
 27036 00014213 4983EB08                	sub r11, 8
 27037 00014217 4983EC08                	sub r12, 8
 27038 0001421B EBE6                    	jmp .L_tc_recycle_frame_loop_00db
 27039                                  .L_tc_recycle_frame_done_00db:
 27040 0001421D 498D6308                	lea rsp, [r11 + 8]
 27041 00014221 5D                      	pop rbp
 27042 00014222 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27043 00014225 EB04                    	jmp .L_if_end_007f
 27044                                  .L_if_else_007f:
 27045 00014227 488B4520                	mov rax, PARAM(0)	; param str
 27046                                  .L_if_end_007f:
 27047 0001422B C9                      	leave
 27048 0001422C C22800                  	ret AND_KILL_FRAME(3)
 27049                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27050 0001422F 803804                  	cmp byte [rax], T_closure
 27051 00014232 0F85AA1D0000            	jne L_error_non_closure
 27052 00014238 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27053 0001423B FF5009                  	call SOB_CLOSURE_CODE(rax)
 27054 0001423E 50                      	push rax
 27055 0001423F 488B4520                	mov rax, PARAM(0)	; param run
 27056 00014243 8F00                    	pop qword [rax]
 27057 00014245 48B8-                   	mov rax, sob_void
 27057 00014247 [0000000000000000] 
 27058                                  
 27059 0001424F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27060 00014254 E8321E0000              	call malloc
 27061 00014259 50                      	push rax
 27062 0001425A BF08000000              	mov rdi, 8 * 1	; new rib
 27063 0001425F E8271E0000              	call malloc
 27064 00014264 50                      	push rax
 27065 00014265 BF10000000              	mov rdi, 8 * 2	; extended env
 27066 0001426A E81C1E0000              	call malloc
 27067 0001426F 488B7D10                	mov rdi, ENV
 27068 00014273 BE00000000              	mov rsi, 0
 27069 00014278 BA01000000              	mov rdx, 1
 27070                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27071 0001427D 4883FE01                	cmp rsi, 1
 27072 00014281 7410                    	je .L_lambda_simple_env_end_00af
 27073 00014283 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27074 00014287 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27075 0001428B 48FFC6                  	inc rsi
 27076 0001428E 48FFC2                  	inc rdx
 27077 00014291 EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27078                                  .L_lambda_simple_env_end_00af:
 27079 00014293 5B                      	pop rbx
 27080 00014294 BE00000000              	mov rsi, 0
 27081                                  .L_lambda_simple_params_loop_00af:	; copy params
 27082 00014299 4883FE01                	cmp rsi, 1
 27083 0001429D 740E                    	je .L_lambda_simple_params_end_00af
 27084 0001429F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27085 000142A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27086 000142A8 48FFC6                  	inc rsi
 27087 000142AB EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27088                                  .L_lambda_simple_params_end_00af:
 27089 000142AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27090 000142B0 4889C3                  	mov rbx, rax
 27091 000142B3 58                      	pop rax
 27092 000142B4 C60004                  	mov byte [rax], T_closure
 27093 000142B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27094 000142BB 48C74009[C8420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27095 000142C3 E90A020000              	jmp .L_lambda_simple_end_00af
 27096                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27097 000142C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27098 000142CE 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27099 000142D0 FF742410                	push qword [rsp + 8 * 2]
 27100 000142D4 6A01                    	push 1
 27101 000142D6 E9691D0000              	jmp L_error_incorrect_arity_simple
 27102                                  .L_lambda_simple_arity_check_ok_00af:
 27103 000142DB C8000000                	enter 0, 0
 27104                                  	; Setting up for a tail-call
 27105                                  	; preparing a non-tail-call
 27106 000142DF 488B4520                	mov rax, PARAM(0)	; param str
 27107 000142E3 50                      	push rax
 27108 000142E4 6A01                    	push 1	; arg count
 27109 000142E6 488B0425[82160000]      	mov rax, qword [free_var_129]	; free var string-length
 27110 000142EE 803805                  	cmp byte [rax], T_undefined
 27111 000142F1 0F84671C0000            	je L_error_fvar_undefined
 27112 000142F7 803804                  	cmp byte [rax], T_closure
 27113 000142FA 0F85E21C0000            	jne L_error_non_closure
 27114 00014300 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27115 00014303 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27116 00014306 50                      	push rax
 27117 00014307 6A01                    	push 1
 27118 00014309 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27119 0001430E E8781D0000              	call malloc
 27120 00014313 50                      	push rax
 27121 00014314 BF08000000              	mov rdi, 8 * 1	; new rib
 27122 00014319 E86D1D0000              	call malloc
 27123 0001431E 50                      	push rax
 27124 0001431F BF18000000              	mov rdi, 8 * 3	; extended env
 27125 00014324 E8621D0000              	call malloc
 27126 00014329 488B7D10                	mov rdi, ENV
 27127 0001432D BE00000000              	mov rsi, 0
 27128 00014332 BA01000000              	mov rdx, 1
 27129                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27130 00014337 4883FE02                	cmp rsi, 2
 27131 0001433B 7410                    	je .L_lambda_simple_env_end_00b0
 27132 0001433D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27133 00014341 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27134 00014345 48FFC6                  	inc rsi
 27135 00014348 48FFC2                  	inc rdx
 27136 0001434B EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27137                                  .L_lambda_simple_env_end_00b0:
 27138 0001434D 5B                      	pop rbx
 27139 0001434E BE00000000              	mov rsi, 0
 27140                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27141 00014353 4883FE01                	cmp rsi, 1
 27142 00014357 740E                    	je .L_lambda_simple_params_end_00b0
 27143 00014359 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27144 0001435E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27145 00014362 48FFC6                  	inc rsi
 27146 00014365 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27147                                  .L_lambda_simple_params_end_00b0:
 27148 00014367 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27149 0001436A 4889C3                  	mov rbx, rax
 27150 0001436D 58                      	pop rax
 27151 0001436E C60004                  	mov byte [rax], T_closure
 27152 00014371 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27153 00014375 48C74009[82430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27154 0001437D E9FF000000              	jmp .L_lambda_simple_end_00b0
 27155                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27156 00014382 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27157 00014388 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27158 0001438A FF742410                	push qword [rsp + 8 * 2]
 27159 0001438E 6A01                    	push 1
 27160 00014390 E9AF1C0000              	jmp L_error_incorrect_arity_simple
 27161                                  .L_lambda_simple_arity_check_ok_00b0:
 27162 00014395 C8000000                	enter 0, 0
 27163                                  	; preparing a non-tail-call
 27164 00014399 488B4520                	mov rax, PARAM(0)	; param n
 27165 0001439D 50                      	push rax
 27166 0001439E 6A01                    	push 1	; arg count
 27167 000143A0 488B0425[1A180000]      	mov rax, qword [free_var_153]	; free var zero?
 27168 000143A8 803805                  	cmp byte [rax], T_undefined
 27169 000143AB 0F84AD1B0000            	je L_error_fvar_undefined
 27170 000143B1 803804                  	cmp byte [rax], T_closure
 27171 000143B4 0F85281C0000            	jne L_error_non_closure
 27172 000143BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 27173 000143BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 27174 000143C0 483D[02000000]          	cmp rax, sob_boolean_false
 27175 000143C6 740F                    	je .L_if_else_0080
 27176 000143C8 488B4510                	mov rax, ENV
 27177 000143CC 488B00                  	mov rax, qword [rax + 8 * 0]
 27178 000143CF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27179 000143D2 E9A6000000              	jmp .L_if_end_0080
 27180                                  .L_if_else_0080:
 27181                                  	; Setting up for a tail-call
 27182 000143D7 488B4510                	mov rax, ENV
 27183 000143DB 488B00                  	mov rax, qword [rax + 8 * 0]
 27184 000143DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27185 000143E1 50                      	push rax
 27186 000143E2 48B8-                   	mov rax, L_constants + 2149
 27186 000143E4 [6508000000000000] 
 27187 000143EC 50                      	push rax
 27188                                  	; preparing a non-tail-call
 27189 000143ED 48B8-                   	mov rax, L_constants + 2284
 27189 000143EF [EC08000000000000] 
 27190 000143F7 50                      	push rax
 27191 000143F8 488B4520                	mov rax, PARAM(0)	; param n
 27192 000143FC 50                      	push rax
 27193 000143FD 6A02                    	push 2	; arg count
 27194 000143FF 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 27195 00014407 803805                  	cmp byte [rax], T_undefined
 27196 0001440A 0F844E1B0000            	je L_error_fvar_undefined
 27197 00014410 803804                  	cmp byte [rax], T_closure
 27198 00014413 0F85C91B0000            	jne L_error_non_closure
 27199 00014419 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27200 0001441C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27201 0001441F 50                      	push rax
 27202 00014420 6A03                    	push 3
 27203 00014422 488B4510                	mov rax, ENV
 27204 00014426 488B4008                	mov rax, qword [rax + 8 * 1]
 27205 0001442A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27206 0001442D 488B00                  	mov rax, qword [rax]
 27207 00014430 803804                  	cmp byte [rax], T_closure
 27208 00014433 0F85A91B0000            	jne L_error_non_closure
 27209 00014439 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27210 0001443C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27211 00014440 4C8B4D00                	mov r9, qword [rbp]
 27212 00014444 4150                    	push r8
 27213 00014446 4151                    	push r9
 27214 00014448 41BA07000000            	mov r10, 3 + 4
 27215 0001444E 4C8B5D18                	mov r11, COUNT
 27216 00014452 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27217 00014457 4C8D65F8                	lea r12, [rbp - 8]
 27218                                  .L_tc_recycle_frame_loop_00dc:
 27219 0001445B 4983FA00                	cmp r10, 0
 27220 0001445F 7414                    	je .L_tc_recycle_frame_done_00dc
 27221 00014461 4D8B2C24                	mov r13, qword [r12]
 27222 00014465 4D892B                  	mov qword [r11], r13
 27223 00014468 49FFCA                  	dec r10
 27224 0001446B 4983EB08                	sub r11, 8
 27225 0001446F 4983EC08                	sub r12, 8
 27226 00014473 EBE6                    	jmp .L_tc_recycle_frame_loop_00dc
 27227                                  .L_tc_recycle_frame_done_00dc:
 27228 00014475 498D6308                	lea rsp, [r11 + 8]
 27229 00014479 5D                      	pop rbp
 27230 0001447A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27231                                  .L_if_end_0080:
 27232 0001447D C9                      	leave
 27233 0001447E C21800                  	ret AND_KILL_FRAME(1)
 27234                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 27235 00014481 803804                  	cmp byte [rax], T_closure
 27236 00014484 0F85581B0000            	jne L_error_non_closure
 27237 0001448A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27238 0001448D 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27239 00014491 4C8B4D00                	mov r9, qword [rbp]
 27240 00014495 4150                    	push r8
 27241 00014497 4151                    	push r9
 27242 00014499 41BA05000000            	mov r10, 1 + 4
 27243 0001449F 4C8B5D18                	mov r11, COUNT
 27244 000144A3 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27245 000144A8 4C8D65F8                	lea r12, [rbp - 8]
 27246                                  .L_tc_recycle_frame_loop_00dd:
 27247 000144AC 4983FA00                	cmp r10, 0
 27248 000144B0 7414                    	je .L_tc_recycle_frame_done_00dd
 27249 000144B2 4D8B2C24                	mov r13, qword [r12]
 27250 000144B6 4D892B                  	mov qword [r11], r13
 27251 000144B9 49FFCA                  	dec r10
 27252 000144BC 4983EB08                	sub r11, 8
 27253 000144C0 4983EC08                	sub r12, 8
 27254 000144C4 EBE6                    	jmp .L_tc_recycle_frame_loop_00dd
 27255                                  .L_tc_recycle_frame_done_00dd:
 27256 000144C6 498D6308                	lea rsp, [r11 + 8]
 27257 000144CA 5D                      	pop rbp
 27258 000144CB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27259 000144CE C9                      	leave
 27260 000144CF C21800                  	ret AND_KILL_FRAME(1)
 27261                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27262 000144D2 C9                      	leave
 27263 000144D3 C21800                  	ret AND_KILL_FRAME(1)
 27264                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 27265 000144D6 803804                  	cmp byte [rax], T_closure
 27266 000144D9 0F85031B0000            	jne L_error_non_closure
 27267 000144DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27268 000144E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27269 000144E5 48890425[B5160000]      	mov qword [free_var_132], rax
 27270 000144ED 48B8-                   	mov rax, sob_void
 27270 000144EF [0000000000000000] 
 27271                                  
 27272 000144F7 4889C7                  	mov rdi, rax
 27273 000144FA E8E11D0000              	call print_sexpr_if_not_void
 27274                                  	; preparing a non-tail-call
 27275 000144FF 48B8-                   	mov rax, L_constants + 1993
 27275 00014501 [C907000000000000] 
 27276 00014509 50                      	push rax
 27277 0001450A 6A01                    	push 1	; arg count
 27278 0001450C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27279 00014511 E8751B0000              	call malloc
 27280 00014516 50                      	push rax
 27281 00014517 BF00000000              	mov rdi, 8 * 0	; new rib
 27282 0001451C E86A1B0000              	call malloc
 27283 00014521 50                      	push rax
 27284 00014522 BF08000000              	mov rdi, 8 * 1	; extended env
 27285 00014527 E85F1B0000              	call malloc
 27286 0001452C 488B7D10                	mov rdi, ENV
 27287 00014530 BE00000000              	mov rsi, 0
 27288 00014535 BA01000000              	mov rdx, 1
 27289                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27290 0001453A 4883FE00                	cmp rsi, 0
 27291 0001453E 7410                    	je .L_lambda_simple_env_end_00b1
 27292 00014540 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27293 00014544 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27294 00014548 48FFC6                  	inc rsi
 27295 0001454B 48FFC2                  	inc rdx
 27296 0001454E EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27297                                  .L_lambda_simple_env_end_00b1:
 27298 00014550 5B                      	pop rbx
 27299 00014551 BE00000000              	mov rsi, 0
 27300                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27301 00014556 4883FE00                	cmp rsi, 0
 27302 0001455A 740E                    	je .L_lambda_simple_params_end_00b1
 27303 0001455C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27304 00014561 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27305 00014565 48FFC6                  	inc rsi
 27306 00014568 EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27307                                  .L_lambda_simple_params_end_00b1:
 27308 0001456A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27309 0001456D 4889C3                  	mov rbx, rax
 27310 00014570 58                      	pop rax
 27311 00014571 C60004                  	mov byte [rax], T_closure
 27312 00014574 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27313 00014578 48C74009[85450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27314 00014580 E910060000              	jmp .L_lambda_simple_end_00b1
 27315                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27316 00014585 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27317 0001458B 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27318 0001458D FF742410                	push qword [rsp + 8 * 2]
 27319 00014591 6A01                    	push 1
 27320 00014593 E9AC1A0000              	jmp L_error_incorrect_arity_simple
 27321                                  .L_lambda_simple_arity_check_ok_00b1:
 27322 00014598 C8000000                	enter 0, 0
 27323 0001459C BF08000000              	mov rdi, 8 * 1
 27324 000145A1 E8E51A0000              	call malloc
 27325 000145A6 488B5D20                	mov rbx, PARAM(0)
 27326 000145AA 488918                  	mov qword [rax], rbx
 27327 000145AD 48894520                	mov PARAM(0), rax
 27328 000145B1 48B8-                   	mov rax, sob_void
 27328 000145B3 [0000000000000000] 
 27329                                  
 27330                                  	; preparing a non-tail-call
 27331 000145BB 6A00                    	push 0	; arg count
 27332 000145BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27333 000145C2 E8C41A0000              	call malloc
 27334 000145C7 50                      	push rax
 27335 000145C8 BF08000000              	mov rdi, 8 * 1	; new rib
 27336 000145CD E8B91A0000              	call malloc
 27337 000145D2 50                      	push rax
 27338 000145D3 BF10000000              	mov rdi, 8 * 2	; extended env
 27339 000145D8 E8AE1A0000              	call malloc
 27340 000145DD 488B7D10                	mov rdi, ENV
 27341 000145E1 BE00000000              	mov rsi, 0
 27342 000145E6 BA01000000              	mov rdx, 1
 27343                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27344 000145EB 4883FE01                	cmp rsi, 1
 27345 000145EF 7410                    	je .L_lambda_simple_env_end_00b2
 27346 000145F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27347 000145F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27348 000145F9 48FFC6                  	inc rsi
 27349 000145FC 48FFC2                  	inc rdx
 27350 000145FF EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27351                                  .L_lambda_simple_env_end_00b2:
 27352 00014601 5B                      	pop rbx
 27353 00014602 BE00000000              	mov rsi, 0
 27354                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27355 00014607 4883FE01                	cmp rsi, 1
 27356 0001460B 740E                    	je .L_lambda_simple_params_end_00b2
 27357 0001460D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27358 00014612 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27359 00014616 48FFC6                  	inc rsi
 27360 00014619 EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27361                                  .L_lambda_simple_params_end_00b2:
 27362 0001461B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27363 0001461E 4889C3                  	mov rbx, rax
 27364 00014621 58                      	pop rax
 27365 00014622 C60004                  	mov byte [rax], T_closure
 27366 00014625 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27367 00014629 48C74009[36460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27368 00014631 E9B8020000              	jmp .L_lambda_simple_end_00b2
 27369                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 27370 00014636 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27371 0001463C 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 27372 0001463E FF742410                	push qword [rsp + 8 * 2]
 27373 00014642 6A03                    	push 3
 27374 00014644 E9FB190000              	jmp L_error_incorrect_arity_simple
 27375                                  .L_lambda_simple_arity_check_ok_00b2:
 27376 00014649 C8000000                	enter 0, 0
 27377                                  	; preparing a non-tail-call
 27378 0001464D 488B4530                	mov rax, PARAM(2)	; param j
 27379 00014651 50                      	push rax
 27380 00014652 488B4528                	mov rax, PARAM(1)	; param i
 27381 00014656 50                      	push rax
 27382 00014657 6A02                    	push 2	; arg count
 27383 00014659 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 27384 00014661 803805                  	cmp byte [rax], T_undefined
 27385 00014664 0F84F4180000            	je L_error_fvar_undefined
 27386 0001466A 803804                  	cmp byte [rax], T_closure
 27387 0001466D 0F856F190000            	jne L_error_non_closure
 27388 00014673 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27389 00014676 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27390 00014679 483D[02000000]          	cmp rax, sob_boolean_false
 27391 0001467F 0F8461020000            	je .L_if_else_0081
 27392                                  	; Setting up for a tail-call
 27393                                  	; preparing a non-tail-call
 27394 00014685 488B4528                	mov rax, PARAM(1)	; param i
 27395 00014689 50                      	push rax
 27396 0001468A 488B4520                	mov rax, PARAM(0)	; param vec
 27397 0001468E 50                      	push rax
 27398 0001468F 6A02                    	push 2	; arg count
 27399 00014691 488B0425[A3170000]      	mov rax, qword [free_var_146]	; free var vector-ref
 27400 00014699 803805                  	cmp byte [rax], T_undefined
 27401 0001469C 0F84BC180000            	je L_error_fvar_undefined
 27402 000146A2 803804                  	cmp byte [rax], T_closure
 27403 000146A5 0F8537190000            	jne L_error_non_closure
 27404 000146AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 27405 000146AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 27406 000146B1 50                      	push rax
 27407 000146B2 6A01                    	push 1
 27408 000146B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27409 000146B9 E8CD190000              	call malloc
 27410 000146BE 50                      	push rax
 27411 000146BF BF18000000              	mov rdi, 8 * 3	; new rib
 27412 000146C4 E8C2190000              	call malloc
 27413 000146C9 50                      	push rax
 27414 000146CA BF18000000              	mov rdi, 8 * 3	; extended env
 27415 000146CF E8B7190000              	call malloc
 27416 000146D4 488B7D10                	mov rdi, ENV
 27417 000146D8 BE00000000              	mov rsi, 0
 27418 000146DD BA01000000              	mov rdx, 1
 27419                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 27420 000146E2 4883FE02                	cmp rsi, 2
 27421 000146E6 7410                    	je .L_lambda_simple_env_end_00b3
 27422 000146E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27423 000146EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27424 000146F0 48FFC6                  	inc rsi
 27425 000146F3 48FFC2                  	inc rdx
 27426 000146F6 EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 27427                                  .L_lambda_simple_env_end_00b3:
 27428 000146F8 5B                      	pop rbx
 27429 000146F9 BE00000000              	mov rsi, 0
 27430                                  .L_lambda_simple_params_loop_00b3:	; copy params
 27431 000146FE 4883FE03                	cmp rsi, 3
 27432 00014702 740E                    	je .L_lambda_simple_params_end_00b3
 27433 00014704 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27434 00014709 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27435 0001470D 48FFC6                  	inc rsi
 27436 00014710 EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 27437                                  .L_lambda_simple_params_end_00b3:
 27438 00014712 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27439 00014715 4889C3                  	mov rbx, rax
 27440 00014718 58                      	pop rax
 27441 00014719 C60004                  	mov byte [rax], T_closure
 27442 0001471C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27443 00014720 48C74009[2D470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 27444 00014728 E96A010000              	jmp .L_lambda_simple_end_00b3
 27445                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 27446 0001472D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27447 00014733 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 27448 00014735 FF742410                	push qword [rsp + 8 * 2]
 27449 00014739 6A01                    	push 1
 27450 0001473B E904190000              	jmp L_error_incorrect_arity_simple
 27451                                  .L_lambda_simple_arity_check_ok_00b3:
 27452 00014740 C8000000                	enter 0, 0
 27453                                  	; preparing a non-tail-call
 27454                                  	; preparing a non-tail-call
 27455 00014744 488B4510                	mov rax, ENV
 27456 00014748 488B00                  	mov rax, qword [rax + 8 * 0]
 27457 0001474B 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27458 0001474F 50                      	push rax
 27459 00014750 488B4510                	mov rax, ENV
 27460 00014754 488B00                  	mov rax, qword [rax + 8 * 0]
 27461 00014757 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27462 0001475A 50                      	push rax
 27463 0001475B 6A02                    	push 2	; arg count
 27464 0001475D 488B0425[A3170000]      	mov rax, qword [free_var_146]	; free var vector-ref
 27465 00014765 803805                  	cmp byte [rax], T_undefined
 27466 00014768 0F84F0170000            	je L_error_fvar_undefined
 27467 0001476E 803804                  	cmp byte [rax], T_closure
 27468 00014771 0F856B180000            	jne L_error_non_closure
 27469 00014777 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27470 0001477A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27471 0001477D 50                      	push rax
 27472 0001477E 488B4510                	mov rax, ENV
 27473 00014782 488B00                  	mov rax, qword [rax + 8 * 0]
 27474 00014785 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27475 00014789 50                      	push rax
 27476 0001478A 488B4510                	mov rax, ENV
 27477 0001478E 488B00                  	mov rax, qword [rax + 8 * 0]
 27478 00014791 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27479 00014794 50                      	push rax
 27480 00014795 6A03                    	push 3	; arg count
 27481 00014797 488B0425[D6170000]      	mov rax, qword [free_var_149]	; free var vector-set!
 27482 0001479F 803805                  	cmp byte [rax], T_undefined
 27483 000147A2 0F84B6170000            	je L_error_fvar_undefined
 27484 000147A8 803804                  	cmp byte [rax], T_closure
 27485 000147AB 0F8531180000            	jne L_error_non_closure
 27486 000147B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27487 000147B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27488                                  
 27489                                  	; preparing a non-tail-call
 27490 000147B7 488B4520                	mov rax, PARAM(0)	; param ch
 27491 000147BB 50                      	push rax
 27492 000147BC 488B4510                	mov rax, ENV
 27493 000147C0 488B00                  	mov rax, qword [rax + 8 * 0]
 27494 000147C3 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27495 000147C7 50                      	push rax
 27496 000147C8 488B4510                	mov rax, ENV
 27497 000147CC 488B00                  	mov rax, qword [rax + 8 * 0]
 27498 000147CF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27499 000147D2 50                      	push rax
 27500 000147D3 6A03                    	push 3	; arg count
 27501 000147D5 488B0425[D6170000]      	mov rax, qword [free_var_149]	; free var vector-set!
 27502 000147DD 803805                  	cmp byte [rax], T_undefined
 27503 000147E0 0F8478170000            	je L_error_fvar_undefined
 27504 000147E6 803804                  	cmp byte [rax], T_closure
 27505 000147E9 0F85F3170000            	jne L_error_non_closure
 27506 000147EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27507 000147F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27508                                  
 27509                                  	; preparing a non-tail-call
 27510                                  	; preparing a non-tail-call
 27511 000147F5 48B8-                   	mov rax, L_constants + 2284
 27511 000147F7 [EC08000000000000] 
 27512 000147FF 50                      	push rax
 27513 00014800 488B4510                	mov rax, ENV
 27514 00014804 488B00                  	mov rax, qword [rax + 8 * 0]
 27515 00014807 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27516 0001480B 50                      	push rax
 27517 0001480C 6A02                    	push 2	; arg count
 27518 0001480E 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 27519 00014816 803805                  	cmp byte [rax], T_undefined
 27520 00014819 0F843F170000            	je L_error_fvar_undefined
 27521 0001481F 803804                  	cmp byte [rax], T_closure
 27522 00014822 0F85BA170000            	jne L_error_non_closure
 27523 00014828 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27524 0001482B FF5009                  	call SOB_CLOSURE_CODE(rax)
 27525 0001482E 50                      	push rax
 27526                                  	; preparing a non-tail-call
 27527 0001482F 48B8-                   	mov rax, L_constants + 2284
 27527 00014831 [EC08000000000000] 
 27528 00014839 50                      	push rax
 27529 0001483A 488B4510                	mov rax, ENV
 27530 0001483E 488B00                  	mov rax, qword [rax + 8 * 0]
 27531 00014841 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27532 00014845 50                      	push rax
 27533 00014846 6A02                    	push 2	; arg count
 27534 00014848 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 27535 00014850 803805                  	cmp byte [rax], T_undefined
 27536 00014853 0F8405170000            	je L_error_fvar_undefined
 27537 00014859 803804                  	cmp byte [rax], T_closure
 27538 0001485C 0F8580170000            	jne L_error_non_closure
 27539 00014862 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27540 00014865 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27541 00014868 50                      	push rax
 27542 00014869 488B4510                	mov rax, ENV
 27543 0001486D 488B00                  	mov rax, qword [rax + 8 * 0]
 27544 00014870 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27545 00014873 50                      	push rax
 27546 00014874 6A03                    	push 3	; arg count
 27547 00014876 488B4510                	mov rax, ENV
 27548 0001487A 488B4008                	mov rax, qword [rax + 8 * 1]
 27549 0001487E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27550 00014881 488B00                  	mov rax, qword [rax]
 27551 00014884 803804                  	cmp byte [rax], T_closure
 27552 00014887 0F8555170000            	jne L_error_non_closure
 27553 0001488D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27554 00014890 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27555 00014893 C9                      	leave
 27556 00014894 C21800                  	ret AND_KILL_FRAME(1)
 27557                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 27558 00014897 803804                  	cmp byte [rax], T_closure
 27559 0001489A 0F8542170000            	jne L_error_non_closure
 27560 000148A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27561 000148A3 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27562 000148A7 4C8B4D00                	mov r9, qword [rbp]
 27563 000148AB 4150                    	push r8
 27564 000148AD 4151                    	push r9
 27565 000148AF 41BA05000000            	mov r10, 1 + 4
 27566 000148B5 4C8B5D18                	mov r11, COUNT
 27567 000148B9 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27568 000148BE 4C8D65F8                	lea r12, [rbp - 8]
 27569                                  .L_tc_recycle_frame_loop_00de:
 27570 000148C2 4983FA00                	cmp r10, 0
 27571 000148C6 7414                    	je .L_tc_recycle_frame_done_00de
 27572 000148C8 4D8B2C24                	mov r13, qword [r12]
 27573 000148CC 4D892B                  	mov qword [r11], r13
 27574 000148CF 49FFCA                  	dec r10
 27575 000148D2 4983EB08                	sub r11, 8
 27576 000148D6 4983EC08                	sub r12, 8
 27577 000148DA EBE6                    	jmp .L_tc_recycle_frame_loop_00de
 27578                                  .L_tc_recycle_frame_done_00de:
 27579 000148DC 498D6308                	lea rsp, [r11 + 8]
 27580 000148E0 5D                      	pop rbp
 27581 000148E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27582 000148E4 EB04                    	jmp .L_if_end_0081
 27583                                  .L_if_else_0081:
 27584 000148E6 488B4520                	mov rax, PARAM(0)	; param vec
 27585                                  .L_if_end_0081:
 27586 000148EA C9                      	leave
 27587 000148EB C22800                  	ret AND_KILL_FRAME(3)
 27588                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 27589 000148EE 803804                  	cmp byte [rax], T_closure
 27590 000148F1 0F85EB160000            	jne L_error_non_closure
 27591 000148F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27592 000148FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27593 000148FD 50                      	push rax
 27594 000148FE 488B4520                	mov rax, PARAM(0)	; param run
 27595 00014902 8F00                    	pop qword [rax]
 27596 00014904 48B8-                   	mov rax, sob_void
 27596 00014906 [0000000000000000] 
 27597                                  
 27598 0001490E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27599 00014913 E873170000              	call malloc
 27600 00014918 50                      	push rax
 27601 00014919 BF08000000              	mov rdi, 8 * 1	; new rib
 27602 0001491E E868170000              	call malloc
 27603 00014923 50                      	push rax
 27604 00014924 BF10000000              	mov rdi, 8 * 2	; extended env
 27605 00014929 E85D170000              	call malloc
 27606 0001492E 488B7D10                	mov rdi, ENV
 27607 00014932 BE00000000              	mov rsi, 0
 27608 00014937 BA01000000              	mov rdx, 1
 27609                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 27610 0001493C 4883FE01                	cmp rsi, 1
 27611 00014940 7410                    	je .L_lambda_simple_env_end_00b4
 27612 00014942 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27613 00014946 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27614 0001494A 48FFC6                  	inc rsi
 27615 0001494D 48FFC2                  	inc rdx
 27616 00014950 EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 27617                                  .L_lambda_simple_env_end_00b4:
 27618 00014952 5B                      	pop rbx
 27619 00014953 BE00000000              	mov rsi, 0
 27620                                  .L_lambda_simple_params_loop_00b4:	; copy params
 27621 00014958 4883FE01                	cmp rsi, 1
 27622 0001495C 740E                    	je .L_lambda_simple_params_end_00b4
 27623 0001495E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27624 00014963 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27625 00014967 48FFC6                  	inc rsi
 27626 0001496A EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 27627                                  .L_lambda_simple_params_end_00b4:
 27628 0001496C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27629 0001496F 4889C3                  	mov rbx, rax
 27630 00014972 58                      	pop rax
 27631 00014973 C60004                  	mov byte [rax], T_closure
 27632 00014976 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27633 0001497A 48C74009[87490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 27634 00014982 E90A020000              	jmp .L_lambda_simple_end_00b4
 27635                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 27636 00014987 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27637 0001498D 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 27638 0001498F FF742410                	push qword [rsp + 8 * 2]
 27639 00014993 6A01                    	push 1
 27640 00014995 E9AA160000              	jmp L_error_incorrect_arity_simple
 27641                                  .L_lambda_simple_arity_check_ok_00b4:
 27642 0001499A C8000000                	enter 0, 0
 27643                                  	; Setting up for a tail-call
 27644                                  	; preparing a non-tail-call
 27645 0001499E 488B4520                	mov rax, PARAM(0)	; param vec
 27646 000149A2 50                      	push rax
 27647 000149A3 6A01                    	push 1	; arg count
 27648 000149A5 488B0425[92170000]      	mov rax, qword [free_var_145]	; free var vector-length
 27649 000149AD 803805                  	cmp byte [rax], T_undefined
 27650 000149B0 0F84A8150000            	je L_error_fvar_undefined
 27651 000149B6 803804                  	cmp byte [rax], T_closure
 27652 000149B9 0F8523160000            	jne L_error_non_closure
 27653 000149BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27654 000149C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27655 000149C5 50                      	push rax
 27656 000149C6 6A01                    	push 1
 27657 000149C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27658 000149CD E8B9160000              	call malloc
 27659 000149D2 50                      	push rax
 27660 000149D3 BF08000000              	mov rdi, 8 * 1	; new rib
 27661 000149D8 E8AE160000              	call malloc
 27662 000149DD 50                      	push rax
 27663 000149DE BF18000000              	mov rdi, 8 * 3	; extended env
 27664 000149E3 E8A3160000              	call malloc
 27665 000149E8 488B7D10                	mov rdi, ENV
 27666 000149EC BE00000000              	mov rsi, 0
 27667 000149F1 BA01000000              	mov rdx, 1
 27668                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 27669 000149F6 4883FE02                	cmp rsi, 2
 27670 000149FA 7410                    	je .L_lambda_simple_env_end_00b5
 27671 000149FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27672 00014A00 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27673 00014A04 48FFC6                  	inc rsi
 27674 00014A07 48FFC2                  	inc rdx
 27675 00014A0A EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 27676                                  .L_lambda_simple_env_end_00b5:
 27677 00014A0C 5B                      	pop rbx
 27678 00014A0D BE00000000              	mov rsi, 0
 27679                                  .L_lambda_simple_params_loop_00b5:	; copy params
 27680 00014A12 4883FE01                	cmp rsi, 1
 27681 00014A16 740E                    	je .L_lambda_simple_params_end_00b5
 27682 00014A18 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27683 00014A1D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27684 00014A21 48FFC6                  	inc rsi
 27685 00014A24 EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 27686                                  .L_lambda_simple_params_end_00b5:
 27687 00014A26 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27688 00014A29 4889C3                  	mov rbx, rax
 27689 00014A2C 58                      	pop rax
 27690 00014A2D C60004                  	mov byte [rax], T_closure
 27691 00014A30 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27692 00014A34 48C74009[414A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 27693 00014A3C E9FF000000              	jmp .L_lambda_simple_end_00b5
 27694                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 27695 00014A41 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27696 00014A47 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 27697 00014A49 FF742410                	push qword [rsp + 8 * 2]
 27698 00014A4D 6A01                    	push 1
 27699 00014A4F E9F0150000              	jmp L_error_incorrect_arity_simple
 27700                                  .L_lambda_simple_arity_check_ok_00b5:
 27701 00014A54 C8000000                	enter 0, 0
 27702                                  	; preparing a non-tail-call
 27703 00014A58 488B4520                	mov rax, PARAM(0)	; param n
 27704 00014A5C 50                      	push rax
 27705 00014A5D 6A01                    	push 1	; arg count
 27706 00014A5F 488B0425[1A180000]      	mov rax, qword [free_var_153]	; free var zero?
 27707 00014A67 803805                  	cmp byte [rax], T_undefined
 27708 00014A6A 0F84EE140000            	je L_error_fvar_undefined
 27709 00014A70 803804                  	cmp byte [rax], T_closure
 27710 00014A73 0F8569150000            	jne L_error_non_closure
 27711 00014A79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27712 00014A7C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27713 00014A7F 483D[02000000]          	cmp rax, sob_boolean_false
 27714 00014A85 740F                    	je .L_if_else_0082
 27715 00014A87 488B4510                	mov rax, ENV
 27716 00014A8B 488B00                  	mov rax, qword [rax + 8 * 0]
 27717 00014A8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27718 00014A91 E9A6000000              	jmp .L_if_end_0082
 27719                                  .L_if_else_0082:
 27720                                  	; Setting up for a tail-call
 27721 00014A96 488B4510                	mov rax, ENV
 27722 00014A9A 488B00                  	mov rax, qword [rax + 8 * 0]
 27723 00014A9D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27724 00014AA0 50                      	push rax
 27725 00014AA1 48B8-                   	mov rax, L_constants + 2149
 27725 00014AA3 [6508000000000000] 
 27726 00014AAB 50                      	push rax
 27727                                  	; preparing a non-tail-call
 27728 00014AAC 48B8-                   	mov rax, L_constants + 2284
 27728 00014AAE [EC08000000000000] 
 27729 00014AB6 50                      	push rax
 27730 00014AB7 488B4520                	mov rax, PARAM(0)	; param n
 27731 00014ABB 50                      	push rax
 27732 00014ABC 6A02                    	push 2	; arg count
 27733 00014ABE 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 27734 00014AC6 803805                  	cmp byte [rax], T_undefined
 27735 00014AC9 0F848F140000            	je L_error_fvar_undefined
 27736 00014ACF 803804                  	cmp byte [rax], T_closure
 27737 00014AD2 0F850A150000            	jne L_error_non_closure
 27738 00014AD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27739 00014ADB FF5009                  	call SOB_CLOSURE_CODE(rax)
 27740 00014ADE 50                      	push rax
 27741 00014ADF 6A03                    	push 3
 27742 00014AE1 488B4510                	mov rax, ENV
 27743 00014AE5 488B4008                	mov rax, qword [rax + 8 * 1]
 27744 00014AE9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27745 00014AEC 488B00                  	mov rax, qword [rax]
 27746 00014AEF 803804                  	cmp byte [rax], T_closure
 27747 00014AF2 0F85EA140000            	jne L_error_non_closure
 27748 00014AF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27749 00014AFB 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27750 00014AFF 4C8B4D00                	mov r9, qword [rbp]
 27751 00014B03 4150                    	push r8
 27752 00014B05 4151                    	push r9
 27753 00014B07 41BA07000000            	mov r10, 3 + 4
 27754 00014B0D 4C8B5D18                	mov r11, COUNT
 27755 00014B11 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27756 00014B16 4C8D65F8                	lea r12, [rbp - 8]
 27757                                  .L_tc_recycle_frame_loop_00df:
 27758 00014B1A 4983FA00                	cmp r10, 0
 27759 00014B1E 7414                    	je .L_tc_recycle_frame_done_00df
 27760 00014B20 4D8B2C24                	mov r13, qword [r12]
 27761 00014B24 4D892B                  	mov qword [r11], r13
 27762 00014B27 49FFCA                  	dec r10
 27763 00014B2A 4983EB08                	sub r11, 8
 27764 00014B2E 4983EC08                	sub r12, 8
 27765 00014B32 EBE6                    	jmp .L_tc_recycle_frame_loop_00df
 27766                                  .L_tc_recycle_frame_done_00df:
 27767 00014B34 498D6308                	lea rsp, [r11 + 8]
 27768 00014B38 5D                      	pop rbp
 27769 00014B39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27770                                  .L_if_end_0082:
 27771 00014B3C C9                      	leave
 27772 00014B3D C21800                  	ret AND_KILL_FRAME(1)
 27773                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 27774 00014B40 803804                  	cmp byte [rax], T_closure
 27775 00014B43 0F8599140000            	jne L_error_non_closure
 27776 00014B49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27777 00014B4C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 27778 00014B50 4C8B4D00                	mov r9, qword [rbp]
 27779 00014B54 4150                    	push r8
 27780 00014B56 4151                    	push r9
 27781 00014B58 41BA05000000            	mov r10, 1 + 4
 27782 00014B5E 4C8B5D18                	mov r11, COUNT
 27783 00014B62 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 27784 00014B67 4C8D65F8                	lea r12, [rbp - 8]
 27785                                  .L_tc_recycle_frame_loop_00e0:
 27786 00014B6B 4983FA00                	cmp r10, 0
 27787 00014B6F 7414                    	je .L_tc_recycle_frame_done_00e0
 27788 00014B71 4D8B2C24                	mov r13, qword [r12]
 27789 00014B75 4D892B                  	mov qword [r11], r13
 27790 00014B78 49FFCA                  	dec r10
 27791 00014B7B 4983EB08                	sub r11, 8
 27792 00014B7F 4983EC08                	sub r12, 8
 27793 00014B83 EBE6                    	jmp .L_tc_recycle_frame_loop_00e0
 27794                                  .L_tc_recycle_frame_done_00e0:
 27795 00014B85 498D6308                	lea rsp, [r11 + 8]
 27796 00014B89 5D                      	pop rbp
 27797 00014B8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27798 00014B8D C9                      	leave
 27799 00014B8E C21800                  	ret AND_KILL_FRAME(1)
 27800                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 27801 00014B91 C9                      	leave
 27802 00014B92 C21800                  	ret AND_KILL_FRAME(1)
 27803                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 27804 00014B95 803804                  	cmp byte [rax], T_closure
 27805 00014B98 0F8544140000            	jne L_error_non_closure
 27806 00014B9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27807 00014BA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27808 00014BA4 48890425[C5170000]      	mov qword [free_var_148], rax
 27809 00014BAC 48B8-                   	mov rax, sob_void
 27809 00014BAE [0000000000000000] 
 27810                                  
 27811 00014BB6 4889C7                  	mov rdi, rax
 27812 00014BB9 E822170000              	call print_sexpr_if_not_void
 27813 00014BBE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27814 00014BC3 E8C3140000              	call malloc
 27815 00014BC8 50                      	push rax
 27816 00014BC9 BF00000000              	mov rdi, 8 * 0	; new rib
 27817 00014BCE E8B8140000              	call malloc
 27818 00014BD3 50                      	push rax
 27819 00014BD4 BF08000000              	mov rdi, 8 * 1	; extended env
 27820 00014BD9 E8AD140000              	call malloc
 27821 00014BDE 488B7D10                	mov rdi, ENV
 27822 00014BE2 BE00000000              	mov rsi, 0
 27823 00014BE7 BA01000000              	mov rdx, 1
 27824                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 27825 00014BEC 4883FE00                	cmp rsi, 0
 27826 00014BF0 7410                    	je .L_lambda_simple_env_end_00b6
 27827 00014BF2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27828 00014BF6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27829 00014BFA 48FFC6                  	inc rsi
 27830 00014BFD 48FFC2                  	inc rdx
 27831 00014C00 EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 27832                                  .L_lambda_simple_env_end_00b6:
 27833 00014C02 5B                      	pop rbx
 27834 00014C03 BE00000000              	mov rsi, 0
 27835                                  .L_lambda_simple_params_loop_00b6:	; copy params
 27836 00014C08 4883FE00                	cmp rsi, 0
 27837 00014C0C 740E                    	je .L_lambda_simple_params_end_00b6
 27838 00014C0E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27839 00014C13 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27840 00014C17 48FFC6                  	inc rsi
 27841 00014C1A EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 27842                                  .L_lambda_simple_params_end_00b6:
 27843 00014C1C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27844 00014C1F 4889C3                  	mov rbx, rax
 27845 00014C22 58                      	pop rax
 27846 00014C23 C60004                  	mov byte [rax], T_closure
 27847 00014C26 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27848 00014C2A 48C74009[374C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 27849 00014C32 E921030000              	jmp .L_lambda_simple_end_00b6
 27850                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 27851 00014C37 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27852 00014C3D 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 27853 00014C3F FF742410                	push qword [rsp + 8 * 2]
 27854 00014C43 6A02                    	push 2
 27855 00014C45 E9FA130000              	jmp L_error_incorrect_arity_simple
 27856                                  .L_lambda_simple_arity_check_ok_00b6:
 27857 00014C4A C8000000                	enter 0, 0
 27858                                  	; Setting up for a tail-call
 27859 00014C4E 48B8-                   	mov rax, L_constants + 1993
 27859 00014C50 [C907000000000000] 
 27860 00014C58 50                      	push rax
 27861 00014C59 6A01                    	push 1
 27862 00014C5B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27863 00014C60 E826140000              	call malloc
 27864 00014C65 50                      	push rax
 27865 00014C66 BF10000000              	mov rdi, 8 * 2	; new rib
 27866 00014C6B E81B140000              	call malloc
 27867 00014C70 50                      	push rax
 27868 00014C71 BF10000000              	mov rdi, 8 * 2	; extended env
 27869 00014C76 E810140000              	call malloc
 27870 00014C7B 488B7D10                	mov rdi, ENV
 27871 00014C7F BE00000000              	mov rsi, 0
 27872 00014C84 BA01000000              	mov rdx, 1
 27873                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 27874 00014C89 4883FE01                	cmp rsi, 1
 27875 00014C8D 7410                    	je .L_lambda_simple_env_end_00b7
 27876 00014C8F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27877 00014C93 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27878 00014C97 48FFC6                  	inc rsi
 27879 00014C9A 48FFC2                  	inc rdx
 27880 00014C9D EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 27881                                  .L_lambda_simple_env_end_00b7:
 27882 00014C9F 5B                      	pop rbx
 27883 00014CA0 BE00000000              	mov rsi, 0
 27884                                  .L_lambda_simple_params_loop_00b7:	; copy params
 27885 00014CA5 4883FE02                	cmp rsi, 2
 27886 00014CA9 740E                    	je .L_lambda_simple_params_end_00b7
 27887 00014CAB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27888 00014CB0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27889 00014CB4 48FFC6                  	inc rsi
 27890 00014CB7 EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 27891                                  .L_lambda_simple_params_end_00b7:
 27892 00014CB9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27893 00014CBC 4889C3                  	mov rbx, rax
 27894 00014CBF 58                      	pop rax
 27895 00014CC0 C60004                  	mov byte [rax], T_closure
 27896 00014CC3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27897 00014CC7 48C74009[D44C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 27898 00014CCF E933020000              	jmp .L_lambda_simple_end_00b7
 27899                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 27900 00014CD4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27901 00014CDA 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 27902 00014CDC FF742410                	push qword [rsp + 8 * 2]
 27903 00014CE0 6A01                    	push 1
 27904 00014CE2 E95D130000              	jmp L_error_incorrect_arity_simple
 27905                                  .L_lambda_simple_arity_check_ok_00b7:
 27906 00014CE7 C8000000                	enter 0, 0
 27907 00014CEB BF08000000              	mov rdi, 8 * 1
 27908 00014CF0 E896130000              	call malloc
 27909 00014CF5 488B5D20                	mov rbx, PARAM(0)
 27910 00014CF9 488918                  	mov qword [rax], rbx
 27911 00014CFC 48894520                	mov PARAM(0), rax
 27912 00014D00 48B8-                   	mov rax, sob_void
 27912 00014D02 [0000000000000000] 
 27913                                  
 27914                                  	; preparing a non-tail-call
 27915 00014D0A 6A00                    	push 0	; arg count
 27916 00014D0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27917 00014D11 E875130000              	call malloc
 27918 00014D16 50                      	push rax
 27919 00014D17 BF08000000              	mov rdi, 8 * 1	; new rib
 27920 00014D1C E86A130000              	call malloc
 27921 00014D21 50                      	push rax
 27922 00014D22 BF18000000              	mov rdi, 8 * 3	; extended env
 27923 00014D27 E85F130000              	call malloc
 27924 00014D2C 488B7D10                	mov rdi, ENV
 27925 00014D30 BE00000000              	mov rsi, 0
 27926 00014D35 BA01000000              	mov rdx, 1
 27927                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 27928 00014D3A 4883FE02                	cmp rsi, 2
 27929 00014D3E 7410                    	je .L_lambda_simple_env_end_00b8
 27930 00014D40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27931 00014D44 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27932 00014D48 48FFC6                  	inc rsi
 27933 00014D4B 48FFC2                  	inc rdx
 27934 00014D4E EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 27935                                  .L_lambda_simple_env_end_00b8:
 27936 00014D50 5B                      	pop rbx
 27937 00014D51 BE00000000              	mov rsi, 0
 27938                                  .L_lambda_simple_params_loop_00b8:	; copy params
 27939 00014D56 4883FE01                	cmp rsi, 1
 27940 00014D5A 740E                    	je .L_lambda_simple_params_end_00b8
 27941 00014D5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27942 00014D61 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27943 00014D65 48FFC6                  	inc rsi
 27944 00014D68 EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 27945                                  .L_lambda_simple_params_end_00b8:
 27946 00014D6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27947 00014D6D 4889C3                  	mov rbx, rax
 27948 00014D70 58                      	pop rax
 27949 00014D71 C60004                  	mov byte [rax], T_closure
 27950 00014D74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27951 00014D78 48C74009[854D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 27952 00014D80 E93B010000              	jmp .L_lambda_simple_end_00b8
 27953                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 27954 00014D85 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27955 00014D8B 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 27956 00014D8D FF742410                	push qword [rsp + 8 * 2]
 27957 00014D91 6A01                    	push 1
 27958 00014D93 E9AC120000              	jmp L_error_incorrect_arity_simple
 27959                                  .L_lambda_simple_arity_check_ok_00b8:
 27960 00014D98 C8000000                	enter 0, 0
 27961                                  	; preparing a non-tail-call
 27962 00014D9C 488B4510                	mov rax, ENV
 27963 00014DA0 488B4008                	mov rax, qword [rax + 8 * 1]
 27964 00014DA4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27965 00014DA7 50                      	push rax
 27966 00014DA8 488B4520                	mov rax, PARAM(0)	; param i
 27967 00014DAC 50                      	push rax
 27968 00014DAD 6A02                    	push 2	; arg count
 27969 00014DAF 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 27970 00014DB7 803805                  	cmp byte [rax], T_undefined
 27971 00014DBA 0F849E110000            	je L_error_fvar_undefined
 27972 00014DC0 803804                  	cmp byte [rax], T_closure
 27973 00014DC3 0F8519120000            	jne L_error_non_closure
 27974 00014DC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27975 00014DCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27976 00014DCF 483D[02000000]          	cmp rax, sob_boolean_false
 27977 00014DD5 0F84D7000000            	je .L_if_else_0083
 27978                                  	; Setting up for a tail-call
 27979                                  	; preparing a non-tail-call
 27980 00014DDB 488B4520                	mov rax, PARAM(0)	; param i
 27981 00014DDF 50                      	push rax
 27982 00014DE0 6A01                    	push 1	; arg count
 27983 00014DE2 488B4510                	mov rax, ENV
 27984 00014DE6 488B4008                	mov rax, qword [rax + 8 * 1]
 27985 00014DEA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27986 00014DEE 803804                  	cmp byte [rax], T_closure
 27987 00014DF1 0F85EB110000            	jne L_error_non_closure
 27988 00014DF7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27989 00014DFA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27990 00014DFD 50                      	push rax
 27991                                  	; preparing a non-tail-call
 27992                                  	; preparing a non-tail-call
 27993 00014DFE 48B8-                   	mov rax, L_constants + 2284
 27993 00014E00 [EC08000000000000] 
 27994 00014E08 50                      	push rax
 27995 00014E09 488B4520                	mov rax, PARAM(0)	; param i
 27996 00014E0D 50                      	push rax
 27997 00014E0E 6A02                    	push 2	; arg count
 27998 00014E10 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 27999 00014E18 803805                  	cmp byte [rax], T_undefined
 28000 00014E1B 0F843D110000            	je L_error_fvar_undefined
 28001 00014E21 803804                  	cmp byte [rax], T_closure
 28002 00014E24 0F85B8110000            	jne L_error_non_closure
 28003 00014E2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28004 00014E2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28005 00014E30 50                      	push rax
 28006 00014E31 6A01                    	push 1	; arg count
 28007 00014E33 488B4510                	mov rax, ENV
 28008 00014E37 488B00                  	mov rax, qword [rax + 8 * 0]
 28009 00014E3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28010 00014E3D 488B00                  	mov rax, qword [rax]
 28011 00014E40 803804                  	cmp byte [rax], T_closure
 28012 00014E43 0F8599110000            	jne L_error_non_closure
 28013 00014E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28014 00014E4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28015 00014E4F 50                      	push rax
 28016 00014E50 6A02                    	push 2
 28017 00014E52 488B0425[41130000]      	mov rax, qword [free_var_80]	; free var cons
 28018 00014E5A 803805                  	cmp byte [rax], T_undefined
 28019 00014E5D 0F84FB100000            	je L_error_fvar_undefined
 28020 00014E63 803804                  	cmp byte [rax], T_closure
 28021 00014E66 0F8576110000            	jne L_error_non_closure
 28022 00014E6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28023 00014E6F 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28024 00014E73 4C8B4D00                	mov r9, qword [rbp]
 28025 00014E77 4150                    	push r8
 28026 00014E79 4151                    	push r9
 28027 00014E7B 41BA06000000            	mov r10, 2 + 4
 28028 00014E81 4C8B5D18                	mov r11, COUNT
 28029 00014E85 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28030 00014E8A 4C8D65F8                	lea r12, [rbp - 8]
 28031                                  .L_tc_recycle_frame_loop_00e1:
 28032 00014E8E 4983FA00                	cmp r10, 0
 28033 00014E92 7414                    	je .L_tc_recycle_frame_done_00e1
 28034 00014E94 4D8B2C24                	mov r13, qword [r12]
 28035 00014E98 4D892B                  	mov qword [r11], r13
 28036 00014E9B 49FFCA                  	dec r10
 28037 00014E9E 4983EB08                	sub r11, 8
 28038 00014EA2 4983EC08                	sub r12, 8
 28039 00014EA6 EBE6                    	jmp .L_tc_recycle_frame_loop_00e1
 28040                                  .L_tc_recycle_frame_done_00e1:
 28041 00014EA8 498D6308                	lea rsp, [r11 + 8]
 28042 00014EAC 5D                      	pop rbp
 28043 00014EAD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28044 00014EB0 EB0A                    	jmp .L_if_end_0083
 28045                                  .L_if_else_0083:
 28046 00014EB2 48B8-                   	mov rax, L_constants + 1
 28046 00014EB4 [0100000000000000] 
 28047                                  .L_if_end_0083:
 28048 00014EBC C9                      	leave
 28049 00014EBD C21800                  	ret AND_KILL_FRAME(1)
 28050                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28051 00014EC0 803804                  	cmp byte [rax], T_closure
 28052 00014EC3 0F8519110000            	jne L_error_non_closure
 28053 00014EC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28054 00014ECC FF5009                  	call SOB_CLOSURE_CODE(rax)
 28055 00014ECF 50                      	push rax
 28056 00014ED0 488B4520                	mov rax, PARAM(0)	; param run
 28057 00014ED4 8F00                    	pop qword [rax]
 28058 00014ED6 48B8-                   	mov rax, sob_void
 28058 00014ED8 [0000000000000000] 
 28059                                  
 28060                                  	; preparing a non-tail-call
 28061 00014EE0 48B8-                   	mov rax, L_constants + 2149
 28061 00014EE2 [6508000000000000] 
 28062 00014EEA 50                      	push rax
 28063 00014EEB 6A01                    	push 1	; arg count
 28064 00014EED 488B4520                	mov rax, PARAM(0)	; param run
 28065 00014EF1 488B00                  	mov rax, qword [rax]
 28066 00014EF4 803804                  	cmp byte [rax], T_closure
 28067 00014EF7 0F85E5100000            	jne L_error_non_closure
 28068 00014EFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 28069 00014F00 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28070 00014F03 C9                      	leave
 28071 00014F04 C21800                  	ret AND_KILL_FRAME(1)
 28072                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 28073 00014F07 803804                  	cmp byte [rax], T_closure
 28074 00014F0A 0F85D2100000            	jne L_error_non_closure
 28075 00014F10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28076 00014F13 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28077 00014F17 4C8B4D00                	mov r9, qword [rbp]
 28078 00014F1B 4150                    	push r8
 28079 00014F1D 4151                    	push r9
 28080 00014F1F 41BA05000000            	mov r10, 1 + 4
 28081 00014F25 4C8B5D18                	mov r11, COUNT
 28082 00014F29 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28083 00014F2E 4C8D65F8                	lea r12, [rbp - 8]
 28084                                  .L_tc_recycle_frame_loop_00e2:
 28085 00014F32 4983FA00                	cmp r10, 0
 28086 00014F36 7414                    	je .L_tc_recycle_frame_done_00e2
 28087 00014F38 4D8B2C24                	mov r13, qword [r12]
 28088 00014F3C 4D892B                  	mov qword [r11], r13
 28089 00014F3F 49FFCA                  	dec r10
 28090 00014F42 4983EB08                	sub r11, 8
 28091 00014F46 4983EC08                	sub r12, 8
 28092 00014F4A EBE6                    	jmp .L_tc_recycle_frame_loop_00e2
 28093                                  .L_tc_recycle_frame_done_00e2:
 28094 00014F4C 498D6308                	lea rsp, [r11 + 8]
 28095 00014F50 5D                      	pop rbp
 28096 00014F51 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28097 00014F54 C9                      	leave
 28098 00014F55 C22000                  	ret AND_KILL_FRAME(2)
 28099                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 28100 00014F58 48890425[84140000]      	mov qword [free_var_99], rax
 28101 00014F60 48B8-                   	mov rax, sob_void
 28101 00014F62 [0000000000000000] 
 28102                                  
 28103 00014F6A 4889C7                  	mov rdi, rax
 28104 00014F6D E86E130000              	call print_sexpr_if_not_void
 28105 00014F72 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28106 00014F77 E80F110000              	call malloc
 28107 00014F7C 50                      	push rax
 28108 00014F7D BF00000000              	mov rdi, 8 * 0	; new rib
 28109 00014F82 E804110000              	call malloc
 28110 00014F87 50                      	push rax
 28111 00014F88 BF08000000              	mov rdi, 8 * 1	; extended env
 28112 00014F8D E8F9100000              	call malloc
 28113 00014F92 488B7D10                	mov rdi, ENV
 28114 00014F96 BE00000000              	mov rsi, 0
 28115 00014F9B BA01000000              	mov rdx, 1
 28116                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28117 00014FA0 4883FE00                	cmp rsi, 0
 28118 00014FA4 7410                    	je .L_lambda_simple_env_end_00b9
 28119 00014FA6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28120 00014FAA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28121 00014FAE 48FFC6                  	inc rsi
 28122 00014FB1 48FFC2                  	inc rdx
 28123 00014FB4 EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28124                                  .L_lambda_simple_env_end_00b9:
 28125 00014FB6 5B                      	pop rbx
 28126 00014FB7 BE00000000              	mov rsi, 0
 28127                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28128 00014FBC 4883FE00                	cmp rsi, 0
 28129 00014FC0 740E                    	je .L_lambda_simple_params_end_00b9
 28130 00014FC2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28131 00014FC7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28132 00014FCB 48FFC6                  	inc rsi
 28133 00014FCE EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28134                                  .L_lambda_simple_params_end_00b9:
 28135 00014FD0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28136 00014FD3 4889C3                  	mov rbx, rax
 28137 00014FD6 58                      	pop rax
 28138 00014FD7 C60004                  	mov byte [rax], T_closure
 28139 00014FDA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28140 00014FDE 48C74009[EB4F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28141 00014FE6 E9FF030000              	jmp .L_lambda_simple_end_00b9
 28142                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28143 00014FEB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28144 00014FF1 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28145 00014FF3 FF742410                	push qword [rsp + 8 * 2]
 28146 00014FF7 6A02                    	push 2
 28147 00014FF9 E946100000              	jmp L_error_incorrect_arity_simple
 28148                                  .L_lambda_simple_arity_check_ok_00b9:
 28149 00014FFE C8000000                	enter 0, 0
 28150                                  	; Setting up for a tail-call
 28151                                  	; preparing a non-tail-call
 28152 00015002 488B4520                	mov rax, PARAM(0)	; param n
 28153 00015006 50                      	push rax
 28154 00015007 6A01                    	push 1	; arg count
 28155 00015009 488B0425[95140000]      	mov rax, qword [free_var_100]	; free var make-string
 28156 00015011 803805                  	cmp byte [rax], T_undefined
 28157 00015014 0F84440F0000            	je L_error_fvar_undefined
 28158 0001501A 803804                  	cmp byte [rax], T_closure
 28159 0001501D 0F85BF0F0000            	jne L_error_non_closure
 28160 00015023 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28161 00015026 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28162 00015029 50                      	push rax
 28163 0001502A 6A01                    	push 1
 28164 0001502C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28165 00015031 E855100000              	call malloc
 28166 00015036 50                      	push rax
 28167 00015037 BF10000000              	mov rdi, 8 * 2	; new rib
 28168 0001503C E84A100000              	call malloc
 28169 00015041 50                      	push rax
 28170 00015042 BF10000000              	mov rdi, 8 * 2	; extended env
 28171 00015047 E83F100000              	call malloc
 28172 0001504C 488B7D10                	mov rdi, ENV
 28173 00015050 BE00000000              	mov rsi, 0
 28174 00015055 BA01000000              	mov rdx, 1
 28175                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28176 0001505A 4883FE01                	cmp rsi, 1
 28177 0001505E 7410                    	je .L_lambda_simple_env_end_00ba
 28178 00015060 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28179 00015064 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28180 00015068 48FFC6                  	inc rsi
 28181 0001506B 48FFC2                  	inc rdx
 28182 0001506E EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 28183                                  .L_lambda_simple_env_end_00ba:
 28184 00015070 5B                      	pop rbx
 28185 00015071 BE00000000              	mov rsi, 0
 28186                                  .L_lambda_simple_params_loop_00ba:	; copy params
 28187 00015076 4883FE02                	cmp rsi, 2
 28188 0001507A 740E                    	je .L_lambda_simple_params_end_00ba
 28189 0001507C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28190 00015081 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28191 00015085 48FFC6                  	inc rsi
 28192 00015088 EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 28193                                  .L_lambda_simple_params_end_00ba:
 28194 0001508A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28195 0001508D 4889C3                  	mov rbx, rax
 28196 00015090 58                      	pop rax
 28197 00015091 C60004                  	mov byte [rax], T_closure
 28198 00015094 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28199 00015098 48C74009[A5500100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 28200 000150A0 E9F4020000              	jmp .L_lambda_simple_end_00ba
 28201                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 28202 000150A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28203 000150AB 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 28204 000150AD FF742410                	push qword [rsp + 8 * 2]
 28205 000150B1 6A01                    	push 1
 28206 000150B3 E98C0F0000              	jmp L_error_incorrect_arity_simple
 28207                                  .L_lambda_simple_arity_check_ok_00ba:
 28208 000150B8 C8000000                	enter 0, 0
 28209                                  	; Setting up for a tail-call
 28210 000150BC 48B8-                   	mov rax, L_constants + 1993
 28210 000150BE [C907000000000000] 
 28211 000150C6 50                      	push rax
 28212 000150C7 6A01                    	push 1
 28213 000150C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28214 000150CE E8B80F0000              	call malloc
 28215 000150D3 50                      	push rax
 28216 000150D4 BF08000000              	mov rdi, 8 * 1	; new rib
 28217 000150D9 E8AD0F0000              	call malloc
 28218 000150DE 50                      	push rax
 28219 000150DF BF18000000              	mov rdi, 8 * 3	; extended env
 28220 000150E4 E8A20F0000              	call malloc
 28221 000150E9 488B7D10                	mov rdi, ENV
 28222 000150ED BE00000000              	mov rsi, 0
 28223 000150F2 BA01000000              	mov rdx, 1
 28224                                  .L_lambda_simple_env_loop_00bb:	; ext_env[i + 1] <-- env[i]
 28225 000150F7 4883FE02                	cmp rsi, 2
 28226 000150FB 7410                    	je .L_lambda_simple_env_end_00bb
 28227 000150FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28228 00015101 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28229 00015105 48FFC6                  	inc rsi
 28230 00015108 48FFC2                  	inc rdx
 28231 0001510B EBEA                    	jmp .L_lambda_simple_env_loop_00bb
 28232                                  .L_lambda_simple_env_end_00bb:
 28233 0001510D 5B                      	pop rbx
 28234 0001510E BE00000000              	mov rsi, 0
 28235                                  .L_lambda_simple_params_loop_00bb:	; copy params
 28236 00015113 4883FE01                	cmp rsi, 1
 28237 00015117 740E                    	je .L_lambda_simple_params_end_00bb
 28238 00015119 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28239 0001511E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28240 00015122 48FFC6                  	inc rsi
 28241 00015125 EBEC                    	jmp .L_lambda_simple_params_loop_00bb
 28242                                  .L_lambda_simple_params_end_00bb:
 28243 00015127 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28244 0001512A 4889C3                  	mov rbx, rax
 28245 0001512D 58                      	pop rax
 28246 0001512E C60004                  	mov byte [rax], T_closure
 28247 00015131 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28248 00015135 48C74009[42510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bb
 28249 0001513D E906020000              	jmp .L_lambda_simple_end_00bb
 28250                                  .L_lambda_simple_code_00bb:	; lambda-simple body
 28251 00015142 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28252 00015148 740B                    	je .L_lambda_simple_arity_check_ok_00bb
 28253 0001514A FF742410                	push qword [rsp + 8 * 2]
 28254 0001514E 6A01                    	push 1
 28255 00015150 E9EF0E0000              	jmp L_error_incorrect_arity_simple
 28256                                  .L_lambda_simple_arity_check_ok_00bb:
 28257 00015155 C8000000                	enter 0, 0
 28258 00015159 BF08000000              	mov rdi, 8 * 1
 28259 0001515E E8280F0000              	call malloc
 28260 00015163 488B5D20                	mov rbx, PARAM(0)
 28261 00015167 488918                  	mov qword [rax], rbx
 28262 0001516A 48894520                	mov PARAM(0), rax
 28263 0001516E 48B8-                   	mov rax, sob_void
 28263 00015170 [0000000000000000] 
 28264                                  
 28265                                  	; preparing a non-tail-call
 28266 00015178 6A00                    	push 0	; arg count
 28267 0001517A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28268 0001517F E8070F0000              	call malloc
 28269 00015184 50                      	push rax
 28270 00015185 BF08000000              	mov rdi, 8 * 1	; new rib
 28271 0001518A E8FC0E0000              	call malloc
 28272 0001518F 50                      	push rax
 28273 00015190 BF20000000              	mov rdi, 8 * 4	; extended env
 28274 00015195 E8F10E0000              	call malloc
 28275 0001519A 488B7D10                	mov rdi, ENV
 28276 0001519E BE00000000              	mov rsi, 0
 28277 000151A3 BA01000000              	mov rdx, 1
 28278                                  .L_lambda_simple_env_loop_00bc:	; ext_env[i + 1] <-- env[i]
 28279 000151A8 4883FE03                	cmp rsi, 3
 28280 000151AC 7410                    	je .L_lambda_simple_env_end_00bc
 28281 000151AE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28282 000151B2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28283 000151B6 48FFC6                  	inc rsi
 28284 000151B9 48FFC2                  	inc rdx
 28285 000151BC EBEA                    	jmp .L_lambda_simple_env_loop_00bc
 28286                                  .L_lambda_simple_env_end_00bc:
 28287 000151BE 5B                      	pop rbx
 28288 000151BF BE00000000              	mov rsi, 0
 28289                                  .L_lambda_simple_params_loop_00bc:	; copy params
 28290 000151C4 4883FE01                	cmp rsi, 1
 28291 000151C8 740E                    	je .L_lambda_simple_params_end_00bc
 28292 000151CA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28293 000151CF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28294 000151D3 48FFC6                  	inc rsi
 28295 000151D6 EBEC                    	jmp .L_lambda_simple_params_loop_00bc
 28296                                  .L_lambda_simple_params_end_00bc:
 28297 000151D8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28298 000151DB 4889C3                  	mov rbx, rax
 28299 000151DE 58                      	pop rax
 28300 000151DF C60004                  	mov byte [rax], T_closure
 28301 000151E2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28302 000151E6 48C74009[F3510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bc
 28303 000151EE E90E010000              	jmp .L_lambda_simple_end_00bc
 28304                                  .L_lambda_simple_code_00bc:	; lambda-simple body
 28305 000151F3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28306 000151F9 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 28307 000151FB FF742410                	push qword [rsp + 8 * 2]
 28308 000151FF 6A01                    	push 1
 28309 00015201 E93E0E0000              	jmp L_error_incorrect_arity_simple
 28310                                  .L_lambda_simple_arity_check_ok_00bc:
 28311 00015206 C8000000                	enter 0, 0
 28312                                  	; preparing a non-tail-call
 28313 0001520A 488B4510                	mov rax, ENV
 28314 0001520E 488B4010                	mov rax, qword [rax + 8 * 2]
 28315 00015212 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28316 00015215 50                      	push rax
 28317 00015216 488B4520                	mov rax, PARAM(0)	; param i
 28318 0001521A 50                      	push rax
 28319 0001521B 6A02                    	push 2	; arg count
 28320 0001521D 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 28321 00015225 803805                  	cmp byte [rax], T_undefined
 28322 00015228 0F84300D0000            	je L_error_fvar_undefined
 28323 0001522E 803804                  	cmp byte [rax], T_closure
 28324 00015231 0F85AB0D0000            	jne L_error_non_closure
 28325 00015237 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28326 0001523A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28327 0001523D 483D[02000000]          	cmp rax, sob_boolean_false
 28328 00015243 0F84A9000000            	je .L_if_else_0084
 28329                                  	; preparing a non-tail-call
 28330                                  	; preparing a non-tail-call
 28331 00015249 488B4520                	mov rax, PARAM(0)	; param i
 28332 0001524D 50                      	push rax
 28333 0001524E 6A01                    	push 1	; arg count
 28334 00015250 488B4510                	mov rax, ENV
 28335 00015254 488B4010                	mov rax, qword [rax + 8 * 2]
 28336 00015258 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28337 0001525C 803804                  	cmp byte [rax], T_closure
 28338 0001525F 0F857D0D0000            	jne L_error_non_closure
 28339 00015265 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28340 00015268 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28341 0001526B 50                      	push rax
 28342 0001526C 488B4520                	mov rax, PARAM(0)	; param i
 28343 00015270 50                      	push rax
 28344 00015271 488B4510                	mov rax, ENV
 28345 00015275 488B4008                	mov rax, qword [rax + 8 * 1]
 28346 00015279 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28347 0001527C 50                      	push rax
 28348 0001527D 6A03                    	push 3	; arg count
 28349 0001527F 488B0425[C6160000]      	mov rax, qword [free_var_133]	; free var string-set!
 28350 00015287 803805                  	cmp byte [rax], T_undefined
 28351 0001528A 0F84CE0C0000            	je L_error_fvar_undefined
 28352 00015290 803804                  	cmp byte [rax], T_closure
 28353 00015293 0F85490D0000            	jne L_error_non_closure
 28354 00015299 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28355 0001529C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28356                                  
 28357                                  	; preparing a non-tail-call
 28358                                  	; preparing a non-tail-call
 28359 0001529F 48B8-                   	mov rax, L_constants + 2284
 28359 000152A1 [EC08000000000000] 
 28360 000152A9 50                      	push rax
 28361 000152AA 488B4520                	mov rax, PARAM(0)	; param i
 28362 000152AE 50                      	push rax
 28363 000152AF 6A02                    	push 2	; arg count
 28364 000152B1 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 28365 000152B9 803805                  	cmp byte [rax], T_undefined
 28366 000152BC 0F849C0C0000            	je L_error_fvar_undefined
 28367 000152C2 803804                  	cmp byte [rax], T_closure
 28368 000152C5 0F85170D0000            	jne L_error_non_closure
 28369 000152CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28370 000152CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 28371 000152D1 50                      	push rax
 28372 000152D2 6A01                    	push 1	; arg count
 28373 000152D4 488B4510                	mov rax, ENV
 28374 000152D8 488B00                  	mov rax, qword [rax + 8 * 0]
 28375 000152DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28376 000152DE 488B00                  	mov rax, qword [rax]
 28377 000152E1 803804                  	cmp byte [rax], T_closure
 28378 000152E4 0F85F80C0000            	jne L_error_non_closure
 28379 000152EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 28380 000152ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 28381 000152F0 EB0B                    	jmp .L_if_end_0084
 28382                                  .L_if_else_0084:
 28383 000152F2 488B4510                	mov rax, ENV
 28384 000152F6 488B4008                	mov rax, qword [rax + 8 * 1]
 28385 000152FA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28386                                  .L_if_end_0084:
 28387 000152FD C9                      	leave
 28388 000152FE C21800                  	ret AND_KILL_FRAME(1)
 28389                                  .L_lambda_simple_end_00bc:	; new closure is in rax
 28390 00015301 803804                  	cmp byte [rax], T_closure
 28391 00015304 0F85D80C0000            	jne L_error_non_closure
 28392 0001530A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28393 0001530D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28394 00015310 50                      	push rax
 28395 00015311 488B4520                	mov rax, PARAM(0)	; param run
 28396 00015315 8F00                    	pop qword [rax]
 28397 00015317 48B8-                   	mov rax, sob_void
 28397 00015319 [0000000000000000] 
 28398                                  
 28399                                  	; preparing a non-tail-call
 28400 00015321 48B8-                   	mov rax, L_constants + 2149
 28400 00015323 [6508000000000000] 
 28401 0001532B 50                      	push rax
 28402 0001532C 6A01                    	push 1	; arg count
 28403 0001532E 488B4520                	mov rax, PARAM(0)	; param run
 28404 00015332 488B00                  	mov rax, qword [rax]
 28405 00015335 803804                  	cmp byte [rax], T_closure
 28406 00015338 0F85A40C0000            	jne L_error_non_closure
 28407 0001533E FF7001                  	push SOB_CLOSURE_ENV(rax)
 28408 00015341 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28409 00015344 C9                      	leave
 28410 00015345 C21800                  	ret AND_KILL_FRAME(1)
 28411                                  .L_lambda_simple_end_00bb:	; new closure is in rax
 28412 00015348 803804                  	cmp byte [rax], T_closure
 28413 0001534B 0F85910C0000            	jne L_error_non_closure
 28414 00015351 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28415 00015354 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28416 00015358 4C8B4D00                	mov r9, qword [rbp]
 28417 0001535C 4150                    	push r8
 28418 0001535E 4151                    	push r9
 28419 00015360 41BA05000000            	mov r10, 1 + 4
 28420 00015366 4C8B5D18                	mov r11, COUNT
 28421 0001536A 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28422 0001536F 4C8D65F8                	lea r12, [rbp - 8]
 28423                                  .L_tc_recycle_frame_loop_00e3:
 28424 00015373 4983FA00                	cmp r10, 0
 28425 00015377 7414                    	je .L_tc_recycle_frame_done_00e3
 28426 00015379 4D8B2C24                	mov r13, qword [r12]
 28427 0001537D 4D892B                  	mov qword [r11], r13
 28428 00015380 49FFCA                  	dec r10
 28429 00015383 4983EB08                	sub r11, 8
 28430 00015387 4983EC08                	sub r12, 8
 28431 0001538B EBE6                    	jmp .L_tc_recycle_frame_loop_00e3
 28432                                  .L_tc_recycle_frame_done_00e3:
 28433 0001538D 498D6308                	lea rsp, [r11 + 8]
 28434 00015391 5D                      	pop rbp
 28435 00015392 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28436 00015395 C9                      	leave
 28437 00015396 C21800                  	ret AND_KILL_FRAME(1)
 28438                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 28439 00015399 803804                  	cmp byte [rax], T_closure
 28440 0001539C 0F85400C0000            	jne L_error_non_closure
 28441 000153A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28442 000153A5 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28443 000153A9 4C8B4D00                	mov r9, qword [rbp]
 28444 000153AD 4150                    	push r8
 28445 000153AF 4151                    	push r9
 28446 000153B1 41BA05000000            	mov r10, 1 + 4
 28447 000153B7 4C8B5D18                	mov r11, COUNT
 28448 000153BB 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28449 000153C0 4C8D65F8                	lea r12, [rbp - 8]
 28450                                  .L_tc_recycle_frame_loop_00e4:
 28451 000153C4 4983FA00                	cmp r10, 0
 28452 000153C8 7414                    	je .L_tc_recycle_frame_done_00e4
 28453 000153CA 4D8B2C24                	mov r13, qword [r12]
 28454 000153CE 4D892B                  	mov qword [r11], r13
 28455 000153D1 49FFCA                  	dec r10
 28456 000153D4 4983EB08                	sub r11, 8
 28457 000153D8 4983EC08                	sub r12, 8
 28458 000153DC EBE6                    	jmp .L_tc_recycle_frame_loop_00e4
 28459                                  .L_tc_recycle_frame_done_00e4:
 28460 000153DE 498D6308                	lea rsp, [r11 + 8]
 28461 000153E2 5D                      	pop rbp
 28462 000153E3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28463 000153E6 C9                      	leave
 28464 000153E7 C22000                  	ret AND_KILL_FRAME(2)
 28465                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28466 000153EA 48890425[A6140000]      	mov qword [free_var_101], rax
 28467 000153F2 48B8-                   	mov rax, sob_void
 28467 000153F4 [0000000000000000] 
 28468                                  
 28469 000153FC 4889C7                  	mov rdi, rax
 28470 000153FF E8DC0E0000              	call print_sexpr_if_not_void
 28471 00015404 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28472 00015409 E87D0C0000              	call malloc
 28473 0001540E 50                      	push rax
 28474 0001540F BF00000000              	mov rdi, 8 * 0	; new rib
 28475 00015414 E8720C0000              	call malloc
 28476 00015419 50                      	push rax
 28477 0001541A BF08000000              	mov rdi, 8 * 1	; extended env
 28478 0001541F E8670C0000              	call malloc
 28479 00015424 488B7D10                	mov rdi, ENV
 28480 00015428 BE00000000              	mov rsi, 0
 28481 0001542D BA01000000              	mov rdx, 1
 28482                                  .L_lambda_simple_env_loop_00bd:	; ext_env[i + 1] <-- env[i]
 28483 00015432 4883FE00                	cmp rsi, 0
 28484 00015436 7410                    	je .L_lambda_simple_env_end_00bd
 28485 00015438 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28486 0001543C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28487 00015440 48FFC6                  	inc rsi
 28488 00015443 48FFC2                  	inc rdx
 28489 00015446 EBEA                    	jmp .L_lambda_simple_env_loop_00bd
 28490                                  .L_lambda_simple_env_end_00bd:
 28491 00015448 5B                      	pop rbx
 28492 00015449 BE00000000              	mov rsi, 0
 28493                                  .L_lambda_simple_params_loop_00bd:	; copy params
 28494 0001544E 4883FE00                	cmp rsi, 0
 28495 00015452 740E                    	je .L_lambda_simple_params_end_00bd
 28496 00015454 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28497 00015459 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28498 0001545D 48FFC6                  	inc rsi
 28499 00015460 EBEC                    	jmp .L_lambda_simple_params_loop_00bd
 28500                                  .L_lambda_simple_params_end_00bd:
 28501 00015462 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28502 00015465 4889C3                  	mov rbx, rax
 28503 00015468 58                      	pop rax
 28504 00015469 C60004                  	mov byte [rax], T_closure
 28505 0001546C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28506 00015470 48C74009[7D540100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bd
 28507 00015478 E9FF030000              	jmp .L_lambda_simple_end_00bd
 28508                                  .L_lambda_simple_code_00bd:	; lambda-simple body
 28509 0001547D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28510 00015483 740B                    	je .L_lambda_simple_arity_check_ok_00bd
 28511 00015485 FF742410                	push qword [rsp + 8 * 2]
 28512 00015489 6A02                    	push 2
 28513 0001548B E9B40B0000              	jmp L_error_incorrect_arity_simple
 28514                                  .L_lambda_simple_arity_check_ok_00bd:
 28515 00015490 C8000000                	enter 0, 0
 28516                                  	; Setting up for a tail-call
 28517                                  	; preparing a non-tail-call
 28518 00015494 488B4520                	mov rax, PARAM(0)	; param n
 28519 00015498 50                      	push rax
 28520 00015499 6A01                    	push 1	; arg count
 28521 0001549B 488B0425[B7140000]      	mov rax, qword [free_var_102]	; free var make-vector
 28522 000154A3 803805                  	cmp byte [rax], T_undefined
 28523 000154A6 0F84B20A0000            	je L_error_fvar_undefined
 28524 000154AC 803804                  	cmp byte [rax], T_closure
 28525 000154AF 0F852D0B0000            	jne L_error_non_closure
 28526 000154B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28527 000154B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28528 000154BB 50                      	push rax
 28529 000154BC 6A01                    	push 1
 28530 000154BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28531 000154C3 E8C30B0000              	call malloc
 28532 000154C8 50                      	push rax
 28533 000154C9 BF10000000              	mov rdi, 8 * 2	; new rib
 28534 000154CE E8B80B0000              	call malloc
 28535 000154D3 50                      	push rax
 28536 000154D4 BF10000000              	mov rdi, 8 * 2	; extended env
 28537 000154D9 E8AD0B0000              	call malloc
 28538 000154DE 488B7D10                	mov rdi, ENV
 28539 000154E2 BE00000000              	mov rsi, 0
 28540 000154E7 BA01000000              	mov rdx, 1
 28541                                  .L_lambda_simple_env_loop_00be:	; ext_env[i + 1] <-- env[i]
 28542 000154EC 4883FE01                	cmp rsi, 1
 28543 000154F0 7410                    	je .L_lambda_simple_env_end_00be
 28544 000154F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28545 000154F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28546 000154FA 48FFC6                  	inc rsi
 28547 000154FD 48FFC2                  	inc rdx
 28548 00015500 EBEA                    	jmp .L_lambda_simple_env_loop_00be
 28549                                  .L_lambda_simple_env_end_00be:
 28550 00015502 5B                      	pop rbx
 28551 00015503 BE00000000              	mov rsi, 0
 28552                                  .L_lambda_simple_params_loop_00be:	; copy params
 28553 00015508 4883FE02                	cmp rsi, 2
 28554 0001550C 740E                    	je .L_lambda_simple_params_end_00be
 28555 0001550E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28556 00015513 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28557 00015517 48FFC6                  	inc rsi
 28558 0001551A EBEC                    	jmp .L_lambda_simple_params_loop_00be
 28559                                  .L_lambda_simple_params_end_00be:
 28560 0001551C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28561 0001551F 4889C3                  	mov rbx, rax
 28562 00015522 58                      	pop rax
 28563 00015523 C60004                  	mov byte [rax], T_closure
 28564 00015526 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28565 0001552A 48C74009[37550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00be
 28566 00015532 E9F4020000              	jmp .L_lambda_simple_end_00be
 28567                                  .L_lambda_simple_code_00be:	; lambda-simple body
 28568 00015537 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28569 0001553D 740B                    	je .L_lambda_simple_arity_check_ok_00be
 28570 0001553F FF742410                	push qword [rsp + 8 * 2]
 28571 00015543 6A01                    	push 1
 28572 00015545 E9FA0A0000              	jmp L_error_incorrect_arity_simple
 28573                                  .L_lambda_simple_arity_check_ok_00be:
 28574 0001554A C8000000                	enter 0, 0
 28575                                  	; Setting up for a tail-call
 28576 0001554E 48B8-                   	mov rax, L_constants + 1993
 28576 00015550 [C907000000000000] 
 28577 00015558 50                      	push rax
 28578 00015559 6A01                    	push 1
 28579 0001555B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28580 00015560 E8260B0000              	call malloc
 28581 00015565 50                      	push rax
 28582 00015566 BF08000000              	mov rdi, 8 * 1	; new rib
 28583 0001556B E81B0B0000              	call malloc
 28584 00015570 50                      	push rax
 28585 00015571 BF18000000              	mov rdi, 8 * 3	; extended env
 28586 00015576 E8100B0000              	call malloc
 28587 0001557B 488B7D10                	mov rdi, ENV
 28588 0001557F BE00000000              	mov rsi, 0
 28589 00015584 BA01000000              	mov rdx, 1
 28590                                  .L_lambda_simple_env_loop_00bf:	; ext_env[i + 1] <-- env[i]
 28591 00015589 4883FE02                	cmp rsi, 2
 28592 0001558D 7410                    	je .L_lambda_simple_env_end_00bf
 28593 0001558F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28594 00015593 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28595 00015597 48FFC6                  	inc rsi
 28596 0001559A 48FFC2                  	inc rdx
 28597 0001559D EBEA                    	jmp .L_lambda_simple_env_loop_00bf
 28598                                  .L_lambda_simple_env_end_00bf:
 28599 0001559F 5B                      	pop rbx
 28600 000155A0 BE00000000              	mov rsi, 0
 28601                                  .L_lambda_simple_params_loop_00bf:	; copy params
 28602 000155A5 4883FE01                	cmp rsi, 1
 28603 000155A9 740E                    	je .L_lambda_simple_params_end_00bf
 28604 000155AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28605 000155B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28606 000155B4 48FFC6                  	inc rsi
 28607 000155B7 EBEC                    	jmp .L_lambda_simple_params_loop_00bf
 28608                                  .L_lambda_simple_params_end_00bf:
 28609 000155B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28610 000155BC 4889C3                  	mov rbx, rax
 28611 000155BF 58                      	pop rax
 28612 000155C0 C60004                  	mov byte [rax], T_closure
 28613 000155C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28614 000155C7 48C74009[D4550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bf
 28615 000155CF E906020000              	jmp .L_lambda_simple_end_00bf
 28616                                  .L_lambda_simple_code_00bf:	; lambda-simple body
 28617 000155D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28618 000155DA 740B                    	je .L_lambda_simple_arity_check_ok_00bf
 28619 000155DC FF742410                	push qword [rsp + 8 * 2]
 28620 000155E0 6A01                    	push 1
 28621 000155E2 E95D0A0000              	jmp L_error_incorrect_arity_simple
 28622                                  .L_lambda_simple_arity_check_ok_00bf:
 28623 000155E7 C8000000                	enter 0, 0
 28624 000155EB BF08000000              	mov rdi, 8 * 1
 28625 000155F0 E8960A0000              	call malloc
 28626 000155F5 488B5D20                	mov rbx, PARAM(0)
 28627 000155F9 488918                  	mov qword [rax], rbx
 28628 000155FC 48894520                	mov PARAM(0), rax
 28629 00015600 48B8-                   	mov rax, sob_void
 28629 00015602 [0000000000000000] 
 28630                                  
 28631                                  	; preparing a non-tail-call
 28632 0001560A 6A00                    	push 0	; arg count
 28633 0001560C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28634 00015611 E8750A0000              	call malloc
 28635 00015616 50                      	push rax
 28636 00015617 BF08000000              	mov rdi, 8 * 1	; new rib
 28637 0001561C E86A0A0000              	call malloc
 28638 00015621 50                      	push rax
 28639 00015622 BF20000000              	mov rdi, 8 * 4	; extended env
 28640 00015627 E85F0A0000              	call malloc
 28641 0001562C 488B7D10                	mov rdi, ENV
 28642 00015630 BE00000000              	mov rsi, 0
 28643 00015635 BA01000000              	mov rdx, 1
 28644                                  .L_lambda_simple_env_loop_00c0:	; ext_env[i + 1] <-- env[i]
 28645 0001563A 4883FE03                	cmp rsi, 3
 28646 0001563E 7410                    	je .L_lambda_simple_env_end_00c0
 28647 00015640 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28648 00015644 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28649 00015648 48FFC6                  	inc rsi
 28650 0001564B 48FFC2                  	inc rdx
 28651 0001564E EBEA                    	jmp .L_lambda_simple_env_loop_00c0
 28652                                  .L_lambda_simple_env_end_00c0:
 28653 00015650 5B                      	pop rbx
 28654 00015651 BE00000000              	mov rsi, 0
 28655                                  .L_lambda_simple_params_loop_00c0:	; copy params
 28656 00015656 4883FE01                	cmp rsi, 1
 28657 0001565A 740E                    	je .L_lambda_simple_params_end_00c0
 28658 0001565C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28659 00015661 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28660 00015665 48FFC6                  	inc rsi
 28661 00015668 EBEC                    	jmp .L_lambda_simple_params_loop_00c0
 28662                                  .L_lambda_simple_params_end_00c0:
 28663 0001566A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28664 0001566D 4889C3                  	mov rbx, rax
 28665 00015670 58                      	pop rax
 28666 00015671 C60004                  	mov byte [rax], T_closure
 28667 00015674 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28668 00015678 48C74009[85560100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c0
 28669 00015680 E90E010000              	jmp .L_lambda_simple_end_00c0
 28670                                  .L_lambda_simple_code_00c0:	; lambda-simple body
 28671 00015685 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28672 0001568B 740B                    	je .L_lambda_simple_arity_check_ok_00c0
 28673 0001568D FF742410                	push qword [rsp + 8 * 2]
 28674 00015691 6A01                    	push 1
 28675 00015693 E9AC090000              	jmp L_error_incorrect_arity_simple
 28676                                  .L_lambda_simple_arity_check_ok_00c0:
 28677 00015698 C8000000                	enter 0, 0
 28678                                  	; preparing a non-tail-call
 28679 0001569C 488B4510                	mov rax, ENV
 28680 000156A0 488B4010                	mov rax, qword [rax + 8 * 2]
 28681 000156A4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28682 000156A7 50                      	push rax
 28683 000156A8 488B4520                	mov rax, PARAM(0)	; param i
 28684 000156AC 50                      	push rax
 28685 000156AD 6A02                    	push 2	; arg count
 28686 000156AF 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 28687 000156B7 803805                  	cmp byte [rax], T_undefined
 28688 000156BA 0F849E080000            	je L_error_fvar_undefined
 28689 000156C0 803804                  	cmp byte [rax], T_closure
 28690 000156C3 0F8519090000            	jne L_error_non_closure
 28691 000156C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28692 000156CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 28693 000156CF 483D[02000000]          	cmp rax, sob_boolean_false
 28694 000156D5 0F84A9000000            	je .L_if_else_0085
 28695                                  	; preparing a non-tail-call
 28696                                  	; preparing a non-tail-call
 28697 000156DB 488B4520                	mov rax, PARAM(0)	; param i
 28698 000156DF 50                      	push rax
 28699 000156E0 6A01                    	push 1	; arg count
 28700 000156E2 488B4510                	mov rax, ENV
 28701 000156E6 488B4010                	mov rax, qword [rax + 8 * 2]
 28702 000156EA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28703 000156EE 803804                  	cmp byte [rax], T_closure
 28704 000156F1 0F85EB080000            	jne L_error_non_closure
 28705 000156F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28706 000156FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28707 000156FD 50                      	push rax
 28708 000156FE 488B4520                	mov rax, PARAM(0)	; param i
 28709 00015702 50                      	push rax
 28710 00015703 488B4510                	mov rax, ENV
 28711 00015707 488B4008                	mov rax, qword [rax + 8 * 1]
 28712 0001570B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28713 0001570E 50                      	push rax
 28714 0001570F 6A03                    	push 3	; arg count
 28715 00015711 488B0425[D6170000]      	mov rax, qword [free_var_149]	; free var vector-set!
 28716 00015719 803805                  	cmp byte [rax], T_undefined
 28717 0001571C 0F843C080000            	je L_error_fvar_undefined
 28718 00015722 803804                  	cmp byte [rax], T_closure
 28719 00015725 0F85B7080000            	jne L_error_non_closure
 28720 0001572B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28721 0001572E FF5009                  	call SOB_CLOSURE_CODE(rax)
 28722                                  
 28723                                  	; preparing a non-tail-call
 28724                                  	; preparing a non-tail-call
 28725 00015731 48B8-                   	mov rax, L_constants + 2284
 28725 00015733 [EC08000000000000] 
 28726 0001573B 50                      	push rax
 28727 0001573C 488B4520                	mov rax, PARAM(0)	; param i
 28728 00015740 50                      	push rax
 28729 00015741 6A02                    	push 2	; arg count
 28730 00015743 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 28731 0001574B 803805                  	cmp byte [rax], T_undefined
 28732 0001574E 0F840A080000            	je L_error_fvar_undefined
 28733 00015754 803804                  	cmp byte [rax], T_closure
 28734 00015757 0F8585080000            	jne L_error_non_closure
 28735 0001575D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28736 00015760 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28737 00015763 50                      	push rax
 28738 00015764 6A01                    	push 1	; arg count
 28739 00015766 488B4510                	mov rax, ENV
 28740 0001576A 488B00                  	mov rax, qword [rax + 8 * 0]
 28741 0001576D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28742 00015770 488B00                  	mov rax, qword [rax]
 28743 00015773 803804                  	cmp byte [rax], T_closure
 28744 00015776 0F8566080000            	jne L_error_non_closure
 28745 0001577C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28746 0001577F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28747 00015782 EB0B                    	jmp .L_if_end_0085
 28748                                  .L_if_else_0085:
 28749 00015784 488B4510                	mov rax, ENV
 28750 00015788 488B4008                	mov rax, qword [rax + 8 * 1]
 28751 0001578C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28752                                  .L_if_end_0085:
 28753 0001578F C9                      	leave
 28754 00015790 C21800                  	ret AND_KILL_FRAME(1)
 28755                                  .L_lambda_simple_end_00c0:	; new closure is in rax
 28756 00015793 803804                  	cmp byte [rax], T_closure
 28757 00015796 0F8546080000            	jne L_error_non_closure
 28758 0001579C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28759 0001579F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28760 000157A2 50                      	push rax
 28761 000157A3 488B4520                	mov rax, PARAM(0)	; param run
 28762 000157A7 8F00                    	pop qword [rax]
 28763 000157A9 48B8-                   	mov rax, sob_void
 28763 000157AB [0000000000000000] 
 28764                                  
 28765                                  	; preparing a non-tail-call
 28766 000157B3 48B8-                   	mov rax, L_constants + 2149
 28766 000157B5 [6508000000000000] 
 28767 000157BD 50                      	push rax
 28768 000157BE 6A01                    	push 1	; arg count
 28769 000157C0 488B4520                	mov rax, PARAM(0)	; param run
 28770 000157C4 488B00                  	mov rax, qword [rax]
 28771 000157C7 803804                  	cmp byte [rax], T_closure
 28772 000157CA 0F8512080000            	jne L_error_non_closure
 28773 000157D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28774 000157D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28775 000157D6 C9                      	leave
 28776 000157D7 C21800                  	ret AND_KILL_FRAME(1)
 28777                                  .L_lambda_simple_end_00bf:	; new closure is in rax
 28778 000157DA 803804                  	cmp byte [rax], T_closure
 28779 000157DD 0F85FF070000            	jne L_error_non_closure
 28780 000157E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28781 000157E6 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28782 000157EA 4C8B4D00                	mov r9, qword [rbp]
 28783 000157EE 4150                    	push r8
 28784 000157F0 4151                    	push r9
 28785 000157F2 41BA05000000            	mov r10, 1 + 4
 28786 000157F8 4C8B5D18                	mov r11, COUNT
 28787 000157FC 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28788 00015801 4C8D65F8                	lea r12, [rbp - 8]
 28789                                  .L_tc_recycle_frame_loop_00e5:
 28790 00015805 4983FA00                	cmp r10, 0
 28791 00015809 7414                    	je .L_tc_recycle_frame_done_00e5
 28792 0001580B 4D8B2C24                	mov r13, qword [r12]
 28793 0001580F 4D892B                  	mov qword [r11], r13
 28794 00015812 49FFCA                  	dec r10
 28795 00015815 4983EB08                	sub r11, 8
 28796 00015819 4983EC08                	sub r12, 8
 28797 0001581D EBE6                    	jmp .L_tc_recycle_frame_loop_00e5
 28798                                  .L_tc_recycle_frame_done_00e5:
 28799 0001581F 498D6308                	lea rsp, [r11 + 8]
 28800 00015823 5D                      	pop rbp
 28801 00015824 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28802 00015827 C9                      	leave
 28803 00015828 C21800                  	ret AND_KILL_FRAME(1)
 28804                                  .L_lambda_simple_end_00be:	; new closure is in rax
 28805 0001582B 803804                  	cmp byte [rax], T_closure
 28806 0001582E 0F85AE070000            	jne L_error_non_closure
 28807 00015834 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28808 00015837 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28809 0001583B 4C8B4D00                	mov r9, qword [rbp]
 28810 0001583F 4150                    	push r8
 28811 00015841 4151                    	push r9
 28812 00015843 41BA05000000            	mov r10, 1 + 4
 28813 00015849 4C8B5D18                	mov r11, COUNT
 28814 0001584D 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28815 00015852 4C8D65F8                	lea r12, [rbp - 8]
 28816                                  .L_tc_recycle_frame_loop_00e6:
 28817 00015856 4983FA00                	cmp r10, 0
 28818 0001585A 7414                    	je .L_tc_recycle_frame_done_00e6
 28819 0001585C 4D8B2C24                	mov r13, qword [r12]
 28820 00015860 4D892B                  	mov qword [r11], r13
 28821 00015863 49FFCA                  	dec r10
 28822 00015866 4983EB08                	sub r11, 8
 28823 0001586A 4983EC08                	sub r12, 8
 28824 0001586E EBE6                    	jmp .L_tc_recycle_frame_loop_00e6
 28825                                  .L_tc_recycle_frame_done_00e6:
 28826 00015870 498D6308                	lea rsp, [r11 + 8]
 28827 00015874 5D                      	pop rbp
 28828 00015875 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28829 00015878 C9                      	leave
 28830 00015879 C22000                  	ret AND_KILL_FRAME(2)
 28831                                  .L_lambda_simple_end_00bd:	; new closure is in rax
 28832 0001587C 48890425[C8140000]      	mov qword [free_var_103], rax
 28833 00015884 48B8-                   	mov rax, sob_void
 28833 00015886 [0000000000000000] 
 28834                                  
 28835 0001588E 4889C7                  	mov rdi, rax
 28836 00015891 E84A0A0000              	call print_sexpr_if_not_void
 28837 00015896 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28838 0001589B E8EB070000              	call malloc
 28839 000158A0 50                      	push rax
 28840 000158A1 BF00000000              	mov rdi, 8 * 0	; new rib
 28841 000158A6 E8E0070000              	call malloc
 28842 000158AB 50                      	push rax
 28843 000158AC BF08000000              	mov rdi, 8 * 1	; extended env
 28844 000158B1 E8D5070000              	call malloc
 28845 000158B6 488B7D10                	mov rdi, ENV
 28846 000158BA BE00000000              	mov rsi, 0
 28847 000158BF BA01000000              	mov rdx, 1
 28848                                  .L_lambda_simple_env_loop_00c1:	; ext_env[i + 1] <-- env[i]
 28849 000158C4 4883FE00                	cmp rsi, 0
 28850 000158C8 7410                    	je .L_lambda_simple_env_end_00c1
 28851 000158CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28852 000158CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28853 000158D2 48FFC6                  	inc rsi
 28854 000158D5 48FFC2                  	inc rdx
 28855 000158D8 EBEA                    	jmp .L_lambda_simple_env_loop_00c1
 28856                                  .L_lambda_simple_env_end_00c1:
 28857 000158DA 5B                      	pop rbx
 28858 000158DB BE00000000              	mov rsi, 0
 28859                                  .L_lambda_simple_params_loop_00c1:	; copy params
 28860 000158E0 4883FE00                	cmp rsi, 0
 28861 000158E4 740E                    	je .L_lambda_simple_params_end_00c1
 28862 000158E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28863 000158EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28864 000158EF 48FFC6                  	inc rsi
 28865 000158F2 EBEC                    	jmp .L_lambda_simple_params_loop_00c1
 28866                                  .L_lambda_simple_params_end_00c1:
 28867 000158F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28868 000158F7 4889C3                  	mov rbx, rax
 28869 000158FA 58                      	pop rax
 28870 000158FB C60004                  	mov byte [rax], T_closure
 28871 000158FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28872 00015902 48C74009[0F590100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c1
 28873 0001590A E969020000              	jmp .L_lambda_simple_end_00c1
 28874                                  .L_lambda_simple_code_00c1:	; lambda-simple body
 28875 0001590F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28876 00015915 740B                    	je .L_lambda_simple_arity_check_ok_00c1
 28877 00015917 FF742410                	push qword [rsp + 8 * 2]
 28878 0001591B 6A03                    	push 3
 28879 0001591D E922070000              	jmp L_error_incorrect_arity_simple
 28880                                  .L_lambda_simple_arity_check_ok_00c1:
 28881 00015922 C8000000                	enter 0, 0
 28882                                  	; preparing a non-tail-call
 28883 00015926 488B4530                	mov rax, PARAM(2)	; param n
 28884 0001592A 50                      	push rax
 28885 0001592B 6A01                    	push 1	; arg count
 28886 0001592D 488B0425[1A180000]      	mov rax, qword [free_var_153]	; free var zero?
 28887 00015935 803805                  	cmp byte [rax], T_undefined
 28888 00015938 0F8420060000            	je L_error_fvar_undefined
 28889 0001593E 803804                  	cmp byte [rax], T_closure
 28890 00015941 0F859B060000            	jne L_error_non_closure
 28891 00015947 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28892 0001594A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28893 0001594D 483D[02000000]          	cmp rax, sob_boolean_false
 28894 00015953 740F                    	je .L_if_else_0088
 28895 00015955 48B8-                   	mov rax, L_constants + 3511
 28895 00015957 [B70D000000000000] 
 28896 0001595F E910020000              	jmp .L_if_end_0088
 28897                                  .L_if_else_0088:
 28898                                  	; preparing a non-tail-call
 28899 00015964 488B4528                	mov rax, PARAM(1)	; param b
 28900 00015968 50                      	push rax
 28901 00015969 488B4520                	mov rax, PARAM(0)	; param a
 28902 0001596D 50                      	push rax
 28903 0001596E 6A02                    	push 2	; arg count
 28904 00015970 488B0425[350E0000]      	mov rax, qword [free_var_4]	; free var <
 28905 00015978 803805                  	cmp byte [rax], T_undefined
 28906 0001597B 0F84DD050000            	je L_error_fvar_undefined
 28907 00015981 803804                  	cmp byte [rax], T_closure
 28908 00015984 0F8558060000            	jne L_error_non_closure
 28909 0001598A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28910 0001598D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28911 00015990 483D[02000000]          	cmp rax, sob_boolean_false
 28912 00015996 0F84CA000000            	je .L_if_else_0087
 28913                                  	; Setting up for a tail-call
 28914 0001599C 48B8-                   	mov rax, L_constants + 3511
 28914 0001599E [B70D000000000000] 
 28915 000159A6 50                      	push rax
 28916                                  	; preparing a non-tail-call
 28917 000159A7 488B4530                	mov rax, PARAM(2)	; param n
 28918 000159AB 50                      	push rax
 28919                                  	; preparing a non-tail-call
 28920 000159AC 488B4520                	mov rax, PARAM(0)	; param a
 28921 000159B0 50                      	push rax
 28922 000159B1 488B4528                	mov rax, PARAM(1)	; param b
 28923 000159B5 50                      	push rax
 28924 000159B6 6A02                    	push 2	; arg count
 28925 000159B8 488B0425[240E0000]      	mov rax, qword [free_var_3]	; free var /
 28926 000159C0 803805                  	cmp byte [rax], T_undefined
 28927 000159C3 0F8495050000            	je L_error_fvar_undefined
 28928 000159C9 803804                  	cmp byte [rax], T_closure
 28929 000159CC 0F8510060000            	jne L_error_non_closure
 28930 000159D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28931 000159D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28932 000159D8 50                      	push rax
 28933 000159D9 488B4520                	mov rax, PARAM(0)	; param a
 28934 000159DD 50                      	push rax
 28935 000159DE 6A03                    	push 3	; arg count
 28936 000159E0 488B0425[73140000]      	mov rax, qword [free_var_98]	; free var logarithm
 28937 000159E8 803805                  	cmp byte [rax], T_undefined
 28938 000159EB 0F846D050000            	je L_error_fvar_undefined
 28939 000159F1 803804                  	cmp byte [rax], T_closure
 28940 000159F4 0F85E8050000            	jne L_error_non_closure
 28941 000159FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 28942 000159FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 28943 00015A00 50                      	push rax
 28944 00015A01 6A02                    	push 2
 28945 00015A03 488B0425[020E0000]      	mov rax, qword [free_var_1]	; free var +
 28946 00015A0B 803805                  	cmp byte [rax], T_undefined
 28947 00015A0E 0F844A050000            	je L_error_fvar_undefined
 28948 00015A14 803804                  	cmp byte [rax], T_closure
 28949 00015A17 0F85C5050000            	jne L_error_non_closure
 28950 00015A1D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28951 00015A20 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 28952 00015A24 4C8B4D00                	mov r9, qword [rbp]
 28953 00015A28 4150                    	push r8
 28954 00015A2A 4151                    	push r9
 28955 00015A2C 41BA06000000            	mov r10, 2 + 4
 28956 00015A32 4C8B5D18                	mov r11, COUNT
 28957 00015A36 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 28958 00015A3B 4C8D65F8                	lea r12, [rbp - 8]
 28959                                  .L_tc_recycle_frame_loop_00e7:
 28960 00015A3F 4983FA00                	cmp r10, 0
 28961 00015A43 7414                    	je .L_tc_recycle_frame_done_00e7
 28962 00015A45 4D8B2C24                	mov r13, qword [r12]
 28963 00015A49 4D892B                  	mov qword [r11], r13
 28964 00015A4C 49FFCA                  	dec r10
 28965 00015A4F 4983EB08                	sub r11, 8
 28966 00015A53 4983EC08                	sub r12, 8
 28967 00015A57 EBE6                    	jmp .L_tc_recycle_frame_loop_00e7
 28968                                  .L_tc_recycle_frame_done_00e7:
 28969 00015A59 498D6308                	lea rsp, [r11 + 8]
 28970 00015A5D 5D                      	pop rbp
 28971 00015A5E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28972 00015A61 E90E010000              	jmp .L_if_end_0087
 28973                                  .L_if_else_0087:
 28974                                  	; preparing a non-tail-call
 28975 00015A66 488B4528                	mov rax, PARAM(1)	; param b
 28976 00015A6A 50                      	push rax
 28977 00015A6B 488B4520                	mov rax, PARAM(0)	; param a
 28978 00015A6F 50                      	push rax
 28979 00015A70 6A02                    	push 2	; arg count
 28980 00015A72 488B0425[570E0000]      	mov rax, qword [free_var_6]	; free var =
 28981 00015A7A 803805                  	cmp byte [rax], T_undefined
 28982 00015A7D 0F84DB040000            	je L_error_fvar_undefined
 28983 00015A83 803804                  	cmp byte [rax], T_closure
 28984 00015A86 0F8556050000            	jne L_error_non_closure
 28985 00015A8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28986 00015A8F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28987 00015A92 483D[02000000]          	cmp rax, sob_boolean_false
 28988 00015A98 740F                    	je .L_if_else_0086
 28989 00015A9A 48B8-                   	mov rax, L_constants + 3511
 28989 00015A9C [B70D000000000000] 
 28990 00015AA4 E9CB000000              	jmp .L_if_end_0086
 28991                                  .L_if_else_0086:
 28992                                  	; Setting up for a tail-call
 28993 00015AA9 48B8-                   	mov rax, L_constants + 3511
 28993 00015AAB [B70D000000000000] 
 28994 00015AB3 50                      	push rax
 28995                                  	; preparing a non-tail-call
 28996                                  	; preparing a non-tail-call
 28997 00015AB4 48B8-                   	mov rax, L_constants + 2284
 28997 00015AB6 [EC08000000000000] 
 28998 00015ABE 50                      	push rax
 28999 00015ABF 488B4530                	mov rax, PARAM(2)	; param n
 29000 00015AC3 50                      	push rax
 29001 00015AC4 6A02                    	push 2	; arg count
 29002 00015AC6 488B0425[130E0000]      	mov rax, qword [free_var_2]	; free var -
 29003 00015ACE 803805                  	cmp byte [rax], T_undefined
 29004 00015AD1 0F8487040000            	je L_error_fvar_undefined
 29005 00015AD7 803804                  	cmp byte [rax], T_closure
 29006 00015ADA 0F8502050000            	jne L_error_non_closure
 29007 00015AE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29008 00015AE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29009 00015AE6 50                      	push rax
 29010 00015AE7 488B4520                	mov rax, PARAM(0)	; param a
 29011 00015AEB 50                      	push rax
 29012 00015AEC 488B4528                	mov rax, PARAM(1)	; param b
 29013 00015AF0 50                      	push rax
 29014 00015AF1 6A03                    	push 3	; arg count
 29015 00015AF3 488B0425[73140000]      	mov rax, qword [free_var_98]	; free var logarithm
 29016 00015AFB 803805                  	cmp byte [rax], T_undefined
 29017 00015AFE 0F845A040000            	je L_error_fvar_undefined
 29018 00015B04 803804                  	cmp byte [rax], T_closure
 29019 00015B07 0F85D5040000            	jne L_error_non_closure
 29020 00015B0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 29021 00015B10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29022 00015B13 50                      	push rax
 29023 00015B14 6A02                    	push 2
 29024 00015B16 488B0425[240E0000]      	mov rax, qword [free_var_3]	; free var /
 29025 00015B1E 803805                  	cmp byte [rax], T_undefined
 29026 00015B21 0F8437040000            	je L_error_fvar_undefined
 29027 00015B27 803804                  	cmp byte [rax], T_closure
 29028 00015B2A 0F85B2040000            	jne L_error_non_closure
 29029 00015B30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29030 00015B33 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 29031 00015B37 4C8B4D00                	mov r9, qword [rbp]
 29032 00015B3B 4150                    	push r8
 29033 00015B3D 4151                    	push r9
 29034 00015B3F 41BA06000000            	mov r10, 2 + 4
 29035 00015B45 4C8B5D18                	mov r11, COUNT
 29036 00015B49 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 29037 00015B4E 4C8D65F8                	lea r12, [rbp - 8]
 29038                                  .L_tc_recycle_frame_loop_00e8:
 29039 00015B52 4983FA00                	cmp r10, 0
 29040 00015B56 7414                    	je .L_tc_recycle_frame_done_00e8
 29041 00015B58 4D8B2C24                	mov r13, qword [r12]
 29042 00015B5C 4D892B                  	mov qword [r11], r13
 29043 00015B5F 49FFCA                  	dec r10
 29044 00015B62 4983EB08                	sub r11, 8
 29045 00015B66 4983EC08                	sub r12, 8
 29046 00015B6A EBE6                    	jmp .L_tc_recycle_frame_loop_00e8
 29047                                  .L_tc_recycle_frame_done_00e8:
 29048 00015B6C 498D6308                	lea rsp, [r11 + 8]
 29049 00015B70 5D                      	pop rbp
 29050 00015B71 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29051                                  .L_if_end_0086:
 29052                                  .L_if_end_0087:
 29053                                  .L_if_end_0088:
 29054 00015B74 C9                      	leave
 29055 00015B75 C22800                  	ret AND_KILL_FRAME(3)
 29056                                  .L_lambda_simple_end_00c1:	; new closure is in rax
 29057 00015B78 48890425[73140000]      	mov qword [free_var_98], rax
 29058 00015B80 48B8-                   	mov rax, sob_void
 29058 00015B82 [0000000000000000] 
 29059                                  
 29060 00015B8A 4889C7                  	mov rdi, rax
 29061 00015B8D E84E070000              	call print_sexpr_if_not_void
 29062 00015B92 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29063 00015B97 E8EF040000              	call malloc
 29064 00015B9C 50                      	push rax
 29065 00015B9D BF00000000              	mov rdi, 8 * 0	; new rib
 29066 00015BA2 E8E4040000              	call malloc
 29067 00015BA7 50                      	push rax
 29068 00015BA8 BF08000000              	mov rdi, 8 * 1	; extended env
 29069 00015BAD E8D9040000              	call malloc
 29070 00015BB2 488B7D10                	mov rdi, ENV
 29071 00015BB6 BE00000000              	mov rsi, 0
 29072 00015BBB BA01000000              	mov rdx, 1
 29073                                  .L_lambda_simple_env_loop_00c2:	; ext_env[i + 1] <-- env[i]
 29074 00015BC0 4883FE00                	cmp rsi, 0
 29075 00015BC4 7410                    	je .L_lambda_simple_env_end_00c2
 29076 00015BC6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29077 00015BCA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29078 00015BCE 48FFC6                  	inc rsi
 29079 00015BD1 48FFC2                  	inc rdx
 29080 00015BD4 EBEA                    	jmp .L_lambda_simple_env_loop_00c2
 29081                                  .L_lambda_simple_env_end_00c2:
 29082 00015BD6 5B                      	pop rbx
 29083 00015BD7 BE00000000              	mov rsi, 0
 29084                                  .L_lambda_simple_params_loop_00c2:	; copy params
 29085 00015BDC 4883FE00                	cmp rsi, 0
 29086 00015BE0 740E                    	je .L_lambda_simple_params_end_00c2
 29087 00015BE2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29088 00015BE7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29089 00015BEB 48FFC6                  	inc rsi
 29090 00015BEE EBEC                    	jmp .L_lambda_simple_params_loop_00c2
 29091                                  .L_lambda_simple_params_end_00c2:
 29092 00015BF0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29093 00015BF3 4889C3                  	mov rbx, rax
 29094 00015BF6 58                      	pop rax
 29095 00015BF7 C60004                  	mov byte [rax], T_closure
 29096 00015BFA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29097 00015BFE 48C74009[0B5C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c2
 29098 00015C06 E986000000              	jmp .L_lambda_simple_end_00c2
 29099                                  .L_lambda_simple_code_00c2:	; lambda-simple body
 29100 00015C0B 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29101 00015C11 740B                    	je .L_lambda_simple_arity_check_ok_00c2
 29102 00015C13 FF742410                	push qword [rsp + 8 * 2]
 29103 00015C17 6A00                    	push 0
 29104 00015C19 E926040000              	jmp L_error_incorrect_arity_simple
 29105                                  .L_lambda_simple_arity_check_ok_00c2:
 29106 00015C1E C8000000                	enter 0, 0
 29107                                  	; Setting up for a tail-call
 29108 00015C22 48B8-                   	mov rax, L_constants + 3536
 29108 00015C24 [D00D000000000000] 
 29109 00015C2C 50                      	push rax
 29110 00015C2D 6A01                    	push 1
 29111 00015C2F 488B0425[09180000]      	mov rax, qword [free_var_152]	; free var write-char
 29112 00015C37 803805                  	cmp byte [rax], T_undefined
 29113 00015C3A 0F841E030000            	je L_error_fvar_undefined
 29114 00015C40 803804                  	cmp byte [rax], T_closure
 29115 00015C43 0F8599030000            	jne L_error_non_closure
 29116 00015C49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29117 00015C4C 4C8B4508                	mov r8, qword [rbp + 8 * 1]
 29118 00015C50 4C8B4D00                	mov r9, qword [rbp]
 29119 00015C54 4150                    	push r8
 29120 00015C56 4151                    	push r9
 29121 00015C58 41BA05000000            	mov r10, 1 + 4
 29122 00015C5E 4C8B5D18                	mov r11, COUNT
 29123 00015C62 4E8D5CDD18              	lea r11, [rbp + 8 * r11 + 24]
 29124 00015C67 4C8D65F8                	lea r12, [rbp - 8]
 29125                                  .L_tc_recycle_frame_loop_00e9:
 29126 00015C6B 4983FA00                	cmp r10, 0
 29127 00015C6F 7414                    	je .L_tc_recycle_frame_done_00e9
 29128 00015C71 4D8B2C24                	mov r13, qword [r12]
 29129 00015C75 4D892B                  	mov qword [r11], r13
 29130 00015C78 49FFCA                  	dec r10
 29131 00015C7B 4983EB08                	sub r11, 8
 29132 00015C7F 4983EC08                	sub r12, 8
 29133 00015C83 EBE6                    	jmp .L_tc_recycle_frame_loop_00e9
 29134                                  .L_tc_recycle_frame_done_00e9:
 29135 00015C85 498D6308                	lea rsp, [r11 + 8]
 29136 00015C89 5D                      	pop rbp
 29137 00015C8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29138 00015C8D C9                      	leave
 29139 00015C8E C21000                  	ret AND_KILL_FRAME(0)
 29140                                  .L_lambda_simple_end_00c2:	; new closure is in rax
 29141 00015C91 48890425[FB140000]      	mov qword [free_var_106], rax
 29142 00015C99 48B8-                   	mov rax, sob_void
 29142 00015C9B [0000000000000000] 
 29143                                  
 29144 00015CA3 4889C7                  	mov rdi, rax
 29145 00015CA6 E835060000              	call print_sexpr_if_not_void
 29146 00015CAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29147 00015CB0 E8D6030000              	call malloc
 29148 00015CB5 50                      	push rax
 29149 00015CB6 BF00000000              	mov rdi, 8 * 0	; new rib
 29150 00015CBB E8CB030000              	call malloc
 29151 00015CC0 50                      	push rax
 29152 00015CC1 BF08000000              	mov rdi, 8 * 1	; extended env
 29153 00015CC6 E8C0030000              	call malloc
 29154 00015CCB 488B7D10                	mov rdi, ENV
 29155 00015CCF BE00000000              	mov rsi, 0
 29156 00015CD4 BA01000000              	mov rdx, 1
 29157                                  .L_lambda_simple_env_loop_00c3:	; ext_env[i + 1] <-- env[i]
 29158 00015CD9 4883FE00                	cmp rsi, 0
 29159 00015CDD 7410                    	je .L_lambda_simple_env_end_00c3
 29160 00015CDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29161 00015CE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29162 00015CE7 48FFC6                  	inc rsi
 29163 00015CEA 48FFC2                  	inc rdx
 29164 00015CED EBEA                    	jmp .L_lambda_simple_env_loop_00c3
 29165                                  .L_lambda_simple_env_end_00c3:
 29166 00015CEF 5B                      	pop rbx
 29167 00015CF0 BE00000000              	mov rsi, 0
 29168                                  .L_lambda_simple_params_loop_00c3:	; copy params
 29169 00015CF5 4883FE00                	cmp rsi, 0
 29170 00015CF9 740E                    	je .L_lambda_simple_params_end_00c3
 29171 00015CFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29172 00015D00 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29173 00015D04 48FFC6                  	inc rsi
 29174 00015D07 EBEC                    	jmp .L_lambda_simple_params_loop_00c3
 29175                                  .L_lambda_simple_params_end_00c3:
 29176 00015D09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29177 00015D0C 4889C3                  	mov rbx, rax
 29178 00015D0F 58                      	pop rax
 29179 00015D10 C60004                  	mov byte [rax], T_closure
 29180 00015D13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29181 00015D17 48C74009[215D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c3
 29182 00015D1F EB25                    	jmp .L_lambda_simple_end_00c3
 29183                                  .L_lambda_simple_code_00c3:	; lambda-simple body
 29184 00015D21 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29185 00015D27 740B                    	je .L_lambda_simple_arity_check_ok_00c3
 29186 00015D29 FF742410                	push qword [rsp + 8 * 2]
 29187 00015D2D 6A00                    	push 0
 29188 00015D2F E910030000              	jmp L_error_incorrect_arity_simple
 29189                                  .L_lambda_simple_arity_check_ok_00c3:
 29190 00015D34 C8000000                	enter 0, 0
 29191 00015D38 48B8-                   	mov rax, L_constants + 0
 29191 00015D3A [0000000000000000] 
 29192 00015D42 C9                      	leave
 29193 00015D43 C21000                  	ret AND_KILL_FRAME(0)
 29194                                  .L_lambda_simple_end_00c3:	; new closure is in rax
 29195 00015D46 48890425[F8170000]      	mov qword [free_var_151], rax
 29196 00015D4E 48B8-                   	mov rax, sob_void
 29196 00015D50 [0000000000000000] 
 29197                                  
 29198 00015D58 4889C7                  	mov rdi, rax
 29199 00015D5B E880050000              	call print_sexpr_if_not_void
 29200                                  	; preparing a non-tail-call
 29201 00015D60 48B8-                   	mov rax, L_constants + 3560
 29201 00015D62 [E80D000000000000] 
 29202 00015D6A 50                      	push rax
 29203 00015D6B 48B8-                   	mov rax, L_constants + 3551
 29203 00015D6D [DF0D000000000000] 
 29204 00015D75 50                      	push rax
 29205 00015D76 48B8-                   	mov rax, L_constants + 3204
 29205 00015D78 [840C000000000000] 
 29206 00015D80 50                      	push rax
 29207 00015D81 48B8-                   	mov rax, L_constants + 2284
 29207 00015D83 [EC08000000000000] 
 29208 00015D8B 50                      	push rax
 29209 00015D8C 6A04                    	push 4	; arg count
 29210 00015D8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29211 00015D93 E8F3020000              	call malloc
 29212 00015D98 50                      	push rax
 29213 00015D99 BF00000000              	mov rdi, 8 * 0	; new rib
 29214 00015D9E E8E8020000              	call malloc
 29215 00015DA3 50                      	push rax
 29216 00015DA4 BF08000000              	mov rdi, 8 * 1	; extended env
 29217 00015DA9 E8DD020000              	call malloc
 29218 00015DAE 488B7D10                	mov rdi, ENV
 29219 00015DB2 BE00000000              	mov rsi, 0
 29220 00015DB7 BA01000000              	mov rdx, 1
 29221                                  .L_lambda_opt_env_loop_0019:	; ext_env[i + 1] <-- env[i]
 29222 00015DBC 4883FE00                	cmp rsi, 0
 29223 00015DC0 7410                    	je .L_lambda_opt_env_end_0019
 29224 00015DC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29225 00015DC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29226 00015DCA 48FFC6                  	inc rsi
 29227 00015DCD 48FFC2                  	inc rdx
 29228 00015DD0 EBEA                    	jmp .L_lambda_opt_env_loop_0019
 29229                                  .L_lambda_opt_env_end_0019:
 29230 00015DD2 5B                      	pop rbx
 29231 00015DD3 BE00000000              	mov rsi, 0
 29232                                  .L_lambda_opt_params_loop_0019:	; copy params
 29233 00015DD8 4883FE00                	cmp rsi, 0
 29234 00015DDC 740E                    	je .L_lambda_opt_params_end_0019
 29235 00015DDE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29236 00015DE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29237 00015DE7 48FFC6                  	inc rsi
 29238 00015DEA EBEC                    	jmp .L_lambda_opt_params_loop_0019
 29239                                  .L_lambda_opt_params_end_0019:
 29240 00015DEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29241 00015DEF 4889C3                  	mov rbx, rax
 29242 00015DF2 58                      	pop rax
 29243 00015DF3 C60004                  	mov byte [rax], T_closure
 29244 00015DF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29245 00015DFA 48C74009[075E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0019
 29246 00015E02 E90A010000              	jmp .L_lambda_opt_end_0019
 29247                                  .L_lambda_opt_code_0019:
 29248 00015E07 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 29249 00015E0C 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
 29250 00015E10 7407                    	je .L_lambda_opt_arity_check_exact_0019	; Jump if arity matches
 29251 00015E12 7F4C                    	jg .L_lambda_opt_arity_check_more_0019	; Jump if more arguments passed
 29252 00015E14 E93F020000              	jmp L_error_incorrect_arity_opt
 29253                                  .L_lambda_opt_arity_check_exact_0019:
 29254 00015E19 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 29255 00015E1C 4983C603                	add r14, 3 ; add 3 first stack values
 29256 00015E20 41BF00000000            	mov r15, 0 ; r15 = index
 29257 00015E26 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 29258 00015E2A 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 29259 00015E32 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0019
 29260                                  .L_lambda_opt_stack_shrink_loop_0019:
 29261 00015E34 4983FE00                	cmp r14, 0
 29262 00015E38 7E11                    	jle .L_make_lambda_opt_exact_finish_0019
 29263 00015E3A 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 29264 00015E3F 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 29265 00015E43 49FFCE                  	dec r14 ; next loop value
 29266 00015E46 49FFC7                  	inc r15 ; update i
 29267 00015E49 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0019
 29268                                  .L_make_lambda_opt_exact_finish_0019:
 29269 00015E4B 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 29270 00015E53 49FFC2                  	inc r10
 29271 00015E56 4C89542410              	mov qword [rsp + 8 * 2], r10
 29272 00015E5B E9A5000000              	jmp .L_lambda_opt_stack_adjusted_0019
 29273                                  .L_lambda_opt_arity_check_more_0019:
 29274 00015E60 4D89D6                  	mov r14, r10 ; r14 = num args
 29275 00015E63 4D89D7                  	mov r15, r10 ; r15 = num args
 29276 00015E66 41B902000000            	mov r9, 2; r9 = number of params 
 29277 00015E6C 4D29CE                  	sub r14, r9 ; r14 = extra args
 29278 00015E6F 4D01F1                  	add r9, r14 ; r9 = num args
 29279 00015E72 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 29279 00015E74 [0100000000000000] 
 29280 00015E7C EB00                    	jmp .L_make_lambda_opt_arg_list_0019
 29281                                  .L_make_lambda_opt_arg_list_0019:
 29282 00015E7E 4983FE00                	cmp r14, 0
 29283 00015E82 7E2C                    	jle .L_make_lambda_opt_stack_fixed_0019
 29284 00015E84 4A8B7CCC10              	mov rdi, qword [rsp + 8 * (r9 + 2)] ; rdi = Load the last arg
 29285 00015E89 4989C0                  	mov r8, rax                         ; r8= temp closure of rax 
 29286 00015E8C 41BA11000000            	mov r10, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 29287 00015E92 E8F4010000              	call malloc                         ; Allocate memory, result in rax
 29288 00015E97 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 29289 00015E9A 48897801                	mov qword [rax + 1], rdi         ; CAR: current argument
 29290 00015E9E 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 29291 00015EA2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 29292 00015EA5 4C89C0                  	mov rax, r8                         ; Restore closure to rax
 29293 00015EA8 49FFC9                  	dec r9                              ; args index minus 1
 29294 00015EAB 49FFCE                  	dec r14                             ; next iteration
 29295 00015EAE EBCE                    	jmp .L_make_lambda_opt_arg_list_0019
 29296                                  .L_make_lambda_opt_stack_fixed_0019:
 29297 00015EB0 4D89FE                  	mov r14, r15 ; r14 = num args
 29298 00015EB3 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 29299 00015EB6 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 29300 00015EBA 41BA02000000            	mov r10, 2; r10 = num of params
 29301 00015EC0 4D29D6                  	sub r14, r10 ; r14 = extra args
 29302 00015EC3 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 29303 00015EC6 49FFCE                  	dec r14 ; how much we need to change stack wise?
 29304 00015EC9 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 29305 00015ECE EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0019
 29306                                  .L_lambda_opt_stack_shrink_loop_more_0019:
 29307 00015ED0 4983F800                	cmp r8, 0
 29308 00015ED4 7E15                    	jle .L_make_lambda_opt_more_finish_0019
 29309 00015ED6 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 29310 00015EDA 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 29311 00015EDE 4D8D26                  	lea r12, [r14]
 29312 00015EE1 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 29313 00015EE6 49FFC8                  	dec r8 ; next iteration
 29314 00015EE9 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0019
 29315                                  .L_make_lambda_opt_more_finish_0019:
 29316 00015EEB 4D89F8                  	mov r8, r15 ; num of args
 29317 00015EEE 41BA02000000            	mov r10, 2
 29318 00015EF4 4D29D0                  	sub r8, r10 ; num of new args
 29319 00015EF7 49FFC0                  	inc r8
 29320 00015EFA 4C89442420              	mov qword [rsp + 8 * 4], r8
 29321 00015EFF 4883C410                	add rsp, 8 * 2  ; 
 29322 00015F03 EB00                    	jmp .L_lambda_opt_stack_adjusted_0019
 29323                                  .L_lambda_opt_stack_adjusted_0019:
 29324 00015F05 C8000000                	enter 0, 0
 29325 00015F09 488B4530                	mov rax, PARAM(2)	; param c
 29326 00015F0D C9                      	leave
 29327 00015F0E C22000                  	ret AND_KILL_FRAME(2)
 29328                                  .L_lambda_opt_end_0019:	; new closure is in rax
 29329 00015F11 803804                  	cmp byte [rax], T_closure
 29330 00015F14 0F85C8000000            	jne L_error_non_closure
 29331 00015F1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 29332 00015F1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 29333                                  Lend:
 29334 00015F20 4889C7                  	mov rdi, rax
 29335 00015F23 E8B8030000              	call print_sexpr_if_not_void
 29336 00015F28 48BF-                   mov rdi, fmt_memory_usage
 29336 00015F2A [C318000000000000] 
 29337 00015F32 488B3425[49190000]              mov rsi, qword [top_of_memory]
 29338 00015F3A 4881EE[00000000]                sub rsi, memory
 29339 00015F41 B800000000                      mov rax, 0
 29340                                          ENTER
    44 00015F46 C8000000            <1>  enter 0, 0
    45 00015F4A 4883E4F0            <1>  and rsp, ~15
 29341 00015F4E E8(00000000)                    call printf
 29342                                          LEAVE
    49 00015F53 C9                  <1>  leave
 29343 00015F54 B800000000                      mov rax, 0
 29344 00015F59 E8(00000000)                    call exit
 29345                                  
 29346                                  L_error_fvar_undefined:
 29347 00015F5E 50                              push rax
 29348 00015F5F 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 29349 00015F67 48BE-                           mov rsi, fmt_undefined_free_var_1
 29349 00015F69 [2B18000000000000] 
 29350 00015F71 B800000000                      mov rax, 0
 29351                                          ENTER
    44 00015F76 C8000000            <1>  enter 0, 0
    45 00015F7A 4883E4F0            <1>  and rsp, ~15
 29352 00015F7E E8(00000000)                    call fprintf
 29353                                          LEAVE
    49 00015F83 C9                  <1>  leave
 29354 00015F84 58                              pop rax
 29355 00015F85 488B4001                        mov rax, qword [rax + 1] ; string
 29356 00015F89 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 29357 00015F8D BE01000000                      mov rsi, 1               ; sizeof(char)
 29358 00015F92 488B5001                        mov rdx, qword [rax + 1] ; string-length
 29359 00015F96 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 29360 00015F9E B800000000                      mov rax, 0
 29361                                          ENTER
    44 00015FA3 C8000000            <1>  enter 0, 0
    45 00015FA7 4883E4F0            <1>  and rsp, ~15
 29362 00015FAB E8(00000000)                    call fwrite
 29363                                          LEAVE
    49 00015FB0 C9                  <1>  leave
 29364 00015FB1 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 29365 00015FB9 48BE-                           mov rsi, fmt_undefined_free_var_2
 29365 00015FBB [4218000000000000] 
 29366 00015FC3 B800000000                      mov rax, 0
 29367                                          ENTER
    44 00015FC8 C8000000            <1>  enter 0, 0
    45 00015FCC 4883E4F0            <1>  and rsp, ~15
 29368 00015FD0 E8(00000000)                    call fprintf
 29369                                          LEAVE
    49 00015FD5 C9                  <1>  leave
 29370 00015FD6 48C7C0F6FFFFFF                  mov rax, -10
 29371 00015FDD E8(00000000)                    call exit
 29372                                  
 29373                                  L_error_non_closure:
 29374 00015FE2 488B3C25[00000000]              mov rdi, qword [stderr]
 29375 00015FEA 48BE-                           mov rsi, fmt_non_closure
 29375 00015FEC [F918000000000000] 
 29376 00015FF4 B800000000                      mov rax, 0
 29377                                          ENTER
    44 00015FF9 C8000000            <1>  enter 0, 0
    45 00015FFD 4883E4F0            <1>  and rsp, ~15
 29378 00016001 E8(00000000)                    call fprintf
 29379                                          LEAVE
    49 00016006 C9                  <1>  leave
 29380 00016007 48C7C0FEFFFFFF                  mov rax, -2
 29381 0001600E E8(00000000)                    call exit
 29382                                  
 29383                                  L_error_improper_list:
 29384 00016013 488B3C25[00000000]      	mov rdi, qword [stderr]
 29385 0001601B 48BE-                   	mov rsi, fmt_error_improper_list
 29385 0001601D [2119000000000000] 
 29386 00016025 B800000000              	mov rax, 0
 29387                                          ENTER
    44 0001602A C8000000            <1>  enter 0, 0
    45 0001602E 4883E4F0            <1>  and rsp, ~15
 29388 00016032 E8(00000000)            	call fprintf
 29389                                          LEAVE
    49 00016037 C9                  <1>  leave
 29390 00016038 48C7C0F9FFFFFF          	mov rax, -7
 29391 0001603F E8(00000000)            	call exit
 29392                                  
 29393                                  L_error_incorrect_arity_simple:
 29394 00016044 488B3C25[00000000]              mov rdi, qword [stderr]
 29395 0001604C 48BE-                           mov rsi, fmt_incorrect_arity_simple
 29395 0001604E [6418000000000000] 
 29396 00016056 EB12                            jmp L_error_incorrect_arity_common
 29397                                  L_error_incorrect_arity_opt:
 29398 00016058 488B3C25[00000000]              mov rdi, qword [stderr]
 29399 00016060 48BE-                           mov rsi, fmt_incorrect_arity_opt
 29399 00016062 [8F18000000000000] 
 29400                                  L_error_incorrect_arity_common:
 29401 0001606A 5A                              pop rdx
 29402 0001606B 59                              pop rcx
 29403 0001606C B800000000                      mov rax, 0
 29404                                          ENTER
    44 00016071 C8000000            <1>  enter 0, 0
    45 00016075 4883E4F0            <1>  and rsp, ~15
 29405 00016079 E8(00000000)                    call fprintf
 29406                                          LEAVE
    49 0001607E C9                  <1>  leave
 29407 0001607F 48C7C0FAFFFFFF                  mov rax, -6
 29408 00016086 E8(00000000)                    call exit
 29409                                  
 29410                                  section .data
 29411                                  fmt_undefined_free_var_1:
 29412 0000182B 212121205468652066-             db `!!! The free variable \0`
 29412 00001834 726565207661726961-
 29412 0000183D 626C652000         
 29413                                  fmt_undefined_free_var_2:
 29414 00001842 207761732075736564-             db ` was used before it was defined.\n\0`
 29414 0000184B 206265666F72652069-
 29414 00001854 742077617320646566-
 29414 0000185D 696E65642E0A00     
 29415                                  fmt_incorrect_arity_simple:
 29416 00001864 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 29416 0000186D 74656420256C642061-
 29416 00001876 7267756D656E74732C-
 29416 0000187F 206275742067697665-
 29416 00001888 6E20256C640A00     
 29417                                  fmt_incorrect_arity_opt:
 29418 0000188F 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 29418 00001898 746564206174206C65-
 29418 000018A1 61737420256C642061-
 29418 000018AA 7267756D656E74732C-
 29418 000018B3 206275742067697665-
 29418 000018BC 6E20256C640A00     
 29419                                  fmt_memory_usage:
 29420 000018C3 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 29420 000018CC 20256C642062797465-
 29420 000018D5 73206F662064796E61-
 29420 000018DE 6D6963616C6C792D61-
 29420 000018E7 6C6C6F636174656420-
 29420 000018F0 6D656D6F72790A0A00 
 29421                                  fmt_non_closure:
 29422 000018F9 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 29422 00001902 7074696E6720746F20-
 29422 0000190B 6170706C792061206E-
 29422 00001914 6F6E2D636C6F737572-
 29422 0000191D 65210A00           
 29423                                  fmt_error_improper_list:
 29424 00001921 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 29424 0000192A 7267756D656E742069-
 29424 00001933 73206E6F7420612070-
 29424 0000193C 726F706572206C6973-
 29424 00001945 74210A00           
 29425                                  
 29426                                  section .bss
 29427                                  memory:
 29428 00000000 <res 40000000h>         	resb gbytes(1)
 29429                                  
 29430                                  section .data
 29431                                  top_of_memory:
 29432 00001949 [0000000000000000]              dq memory
 29433                                  
 29434                                  section .text
 29435                                  malloc:
 29436 0001608B 488B0425[49190000]              mov rax, qword [top_of_memory]
 29437 00016093 48013C25[49190000]              add qword [top_of_memory], rdi
 29438 0001609B C3                              ret
 29439                                  
 29440                                  L_code_ptr_return:
 29441 0001609C 48837C241002            	cmp qword [rsp + 8*2], 2
 29442 000160A2 0F85601C0000            	jne L_error_arg_count_2
 29443 000160A8 488B4C2418              	mov rcx, qword [rsp + 8*3]
 29444                                  	assert_integer(rcx)
    53 000160AD 803911              <1>  cmp byte [%1], %2
    54 000160B0 0F85F11C0000        <1>  jne L_error_incorrect_type
 29445 000160B6 488B4901                	mov rcx, qword [rcx + 1]
 29446 000160BA 4883F900                	cmp rcx, 0
 29447 000160BE 0F8C781B0000            	jl L_error_integer_range
 29448 000160C4 488B442420              	mov rax, qword [rsp + 8*4]
 29449                                  .L0:
 29450 000160C9 4883F900                        cmp rcx, 0
 29451 000160CD 7409                            je .L1
 29452 000160CF 488B6D00                	mov rbp, qword [rbp]
 29453 000160D3 48FFC9                  	dec rcx
 29454 000160D6 7FF1                    	jg .L0
 29455                                  .L1:
 29456 000160D8 4889EC                  	mov rsp, rbp
 29457 000160DB 5D                      	pop rbp
 29458 000160DC 5B                              pop rbx
 29459 000160DD 488B4C2408                      mov rcx, qword [rsp + 8*1]
 29460 000160E2 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 29461 000160E7 FFE3                    	jmp rbx
 29462                                  
 29463                                  L_code_ptr_make_list:
 29464 000160E9 C8000000                	enter 0, 0
 29465 000160ED 48837D1801                      cmp COUNT, 1
 29466 000160F2 740C                            je .L0
 29467 000160F4 48837D1802                      cmp COUNT, 2
 29468 000160F9 7411                            je .L1
 29469 000160FB E93D1C0000                      jmp L_error_arg_count_12
 29470                                  .L0:
 29471 00016100 49B9-                           mov r9, sob_void
 29471 00016102 [0000000000000000] 
 29472 0001610A EB04                            jmp .L2
 29473                                  .L1:
 29474 0001610C 4C8B4D28                        mov r9, PARAM(1)
 29475                                  .L2:
 29476 00016110 488B4D20                        mov rcx, PARAM(0)
 29477                                          assert_integer(rcx)
    53 00016114 803911              <1>  cmp byte [%1], %2
    54 00016117 0F858A1C0000        <1>  jne L_error_incorrect_type
 29478 0001611D 488B4901                        mov rcx, qword [rcx + 1]
 29479 00016121 4883F900                        cmp rcx, 0
 29480 00016125 0F8C421B0000                    jl L_error_arg_negative
 29481 0001612B 49B8-                           mov r8, sob_nil
 29481 0001612D [0100000000000000] 
 29482                                  .L3:
 29483 00016135 4883F900                        cmp rcx, 0
 29484 00016139 7E1D                            jle .L4
 29485 0001613B BF11000000                      mov rdi, 1 + 8 + 8
 29486 00016140 E846FFFFFF                      call malloc
 29487 00016145 C60021                          mov byte [rax], T_pair
 29488 00016148 4C894801                        mov qword [rax + 1], r9
 29489 0001614C 4C894009                        mov qword [rax + 1 + 8], r8
 29490 00016150 4989C0                          mov r8, rax
 29491 00016153 48FFC9                          dec rcx
 29492 00016156 EBDD                            jmp .L3
 29493                                  .L4:
 29494 00016158 4C89C0                          mov rax, r8
 29495 0001615B 48837D1802                      cmp COUNT, 2
 29496 00016160 7404                            je .L5
 29497 00016162 C9                              leave
 29498 00016163 C21800                          ret AND_KILL_FRAME(1)
 29499                                  .L5:
 29500 00016166 C9                      	leave
 29501 00016167 C22000                  	ret AND_KILL_FRAME(2)
 29502                                  
 29503                                  L_code_ptr_is_primitive:
 29504 0001616A C8000000                	enter 0, 0
 29505 0001616E 48837D1801              	cmp COUNT, 1
 29506 00016173 0F855A1B0000            	jne L_error_arg_count_1
 29507 00016179 488B4520                	mov rax, PARAM(0)
 29508                                  	assert_closure(rax)
    53 0001617D 803804              <1>  cmp byte [%1], %2
    54 00016180 0F85211C0000        <1>  jne L_error_incorrect_type
 29509 00016186 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 29510 0001618B 750C                    	jne .L_false
 29511 0001618D 48B8-                   	mov rax, sob_boolean_true
 29511 0001618F [0300000000000000] 
 29512 00016197 EB0A                    	jmp .L_end
 29513                                  .L_false:
 29514 00016199 48B8-                   	mov rax, sob_boolean_false
 29514 0001619B [0200000000000000] 
 29515                                  .L_end:
 29516 000161A3 C9                      	leave
 29517 000161A4 C21800                  	ret AND_KILL_FRAME(1)
 29518                                  
 29519                                  L_code_ptr_length:
 29520 000161A7 C8000000                	enter 0, 0
 29521 000161AB 48837D1801              	cmp COUNT, 1
 29522 000161B0 0F851D1B0000            	jne L_error_arg_count_1
 29523 000161B6 488B5D20                	mov rbx, PARAM(0)
 29524 000161BA BF00000000              	mov rdi, 0
 29525                                  .L:
 29526 000161BF 803B01                  	cmp byte [rbx], T_nil
 29527 000161C2 7412                    	je .L_end
 29528                                  	assert_pair(rbx)
    53 000161C4 803B21              <1>  cmp byte [%1], %2
    54 000161C7 0F85DA1B0000        <1>  jne L_error_incorrect_type
 29529 000161CD 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 29530 000161D1 48FFC7                  	inc rdi
 29531 000161D4 EBE9                    	jmp .L
 29532                                  .L_end:
 29533 000161D6 E8471A0000              	call make_integer
 29534 000161DB C9                      	leave
 29535 000161DC C21800                  	ret AND_KILL_FRAME(1)
 29536                                  
 29537                                  L_code_ptr_break:
 29538 000161DF 48837C241000                    cmp qword [rsp + 8 * 2], 0
 29539 000161E5 0F85B31A0000                    jne L_error_arg_count_0
 29540 000161EB CC                              int3
 29541 000161EC 48B8-                           mov rax, sob_void
 29541 000161EE [0000000000000000] 
 29542 000161F6 C21000                          ret AND_KILL_FRAME(0)        
 29543                                  
 29544                                  L_code_ptr_frame:
 29545 000161F9 C8000000                        enter 0, 0
 29546 000161FD 48837D1800                      cmp COUNT, 0
 29547 00016202 0F85961A0000                    jne L_error_arg_count_0
 29548                                  
 29549 00016208 48BF-                           mov rdi, fmt_frame
 29549 0001620A [5119000000000000] 
 29550 00016212 488B7500                        mov rsi, qword [rbp]    ; old rbp
 29551 00016216 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 29552 0001621A 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 29553 0001621E 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 29554 00016222 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 29555 00016226 6A00                            push 0
 29556 00016228 4151                            push r9
 29557 0001622A 4150                            push r8                   ; we'll use it when printing the params
 29558 0001622C B800000000                      mov rax, 0
 29559                                          
 29560                                          ENTER
    44 00016231 C8000000            <1>  enter 0, 0
    45 00016235 4883E4F0            <1>  and rsp, ~15
 29561 00016239 E8(00000000)                    call printf
 29562                                          LEAVE
    49 0001623E C9                  <1>  leave
 29563                                  
 29564                                  .L:
 29565 0001623F 488B0C24                        mov rcx, qword [rsp]
 29566 00016243 4883F900                        cmp rcx, 0
 29567 00016247 7467                            je .L_out
 29568 00016249 48BF-                           mov rdi, fmt_frame_param_prefix
 29568 0001624B [8A19000000000000] 
 29569 00016253 488B742410                      mov rsi, qword [rsp + 8*2]
 29570 00016258 B800000000                      mov rax, 0
 29571                                          
 29572                                          ENTER
    44 0001625D C8000000            <1>  enter 0, 0
    45 00016261 4883E4F0            <1>  and rsp, ~15
 29573 00016265 E8(00000000)                    call printf
 29574                                          LEAVE
    49 0001626A C9                  <1>  leave
 29575                                  
 29576 0001626B 488B0C24                        mov rcx, qword [rsp]
 29577 0001626F 48FFC9                          dec rcx
 29578 00016272 48890C24                        mov qword [rsp], rcx    ; dec arg count
 29579 00016276 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 29580 0001627B 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 29581 00016280 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 29582 00016284 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 29583 00016289 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 29584 0001628C E87B000000                      call print_sexpr
 29585 00016291 48BF-                           mov rdi, fmt_newline
 29585 00016293 [B619000000000000] 
 29586 0001629B B800000000                      mov rax, 0
 29587                                          ENTER
    44 000162A0 C8000000            <1>  enter 0, 0
    45 000162A4 4883E4F0            <1>  and rsp, ~15
 29588 000162A8 E8(00000000)                    call printf
 29589                                          LEAVE
    49 000162AD C9                  <1>  leave
 29590 000162AE EB8F                            jmp .L
 29591                                  .L_out:
 29592 000162B0 48BF-                           mov rdi, fmt_frame_continue
 29592 000162B2 [9B19000000000000] 
 29593 000162BA B800000000                      mov rax, 0
 29594                                          ENTER
    44 000162BF C8000000            <1>  enter 0, 0
    45 000162C3 4883E4F0            <1>  and rsp, ~15
 29595 000162C7 E8(00000000)                    call printf
 29596 000162CC E8(00000000)                    call getchar
 29597                                          LEAVE
    49 000162D1 C9                  <1>  leave
 29598                                          
 29599 000162D2 48B8-                           mov rax, sob_void
 29599 000162D4 [0000000000000000] 
 29600 000162DC C9                              leave
 29601 000162DD C21000                          ret AND_KILL_FRAME(0)
 29602                                          
 29603                                  print_sexpr_if_not_void:
 29604 000162E0 4881FF[00000000]        	cmp rdi, sob_void
 29605 000162E7 7422                    	je .done
 29606 000162E9 E81E000000              	call print_sexpr
 29607 000162EE 48BF-                   	mov rdi, fmt_newline
 29607 000162F0 [B619000000000000] 
 29608 000162F8 B800000000              	mov rax, 0
 29609                                  	ENTER
    44 000162FD C8000000            <1>  enter 0, 0
    45 00016301 4883E4F0            <1>  and rsp, ~15
 29610 00016305 E8(00000000)            	call printf
 29611                                  	LEAVE
    49 0001630A C9                  <1>  leave
 29612                                  .done:
 29613 0001630B C3                      	ret
 29614                                  
 29615                                  section .data
 29616                                  fmt_frame:
 29617 00001951 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 29617 0000195A 207265742061646472-
 29617 00001963 203D2025703B206C65-
 29617 0000196C 7820656E76203D2025-
 29617 00001975 703B20706172616D20-
 29617 0000197E 636F756E74203D2025-
 29617 00001987 640A00             
 29618                                  fmt_frame_param_prefix:
 29619 0000198A 3D3D5B706172616D20-             db `==[param %d]==> \0`
 29619 00001993 25645D3D3D3E2000   
 29620                                  fmt_frame_continue:
 29621 0000199B 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 29621 000019A4 723E20746F20636F6E-
 29621 000019AD 74696E75652E2E2E00 
 29622                                  fmt_newline:
 29623 000019B6 0A00                    	db `\n\0`
 29624                                  fmt_void:
 29625 000019B8 233C766F69643E00        	db `#<void>\0`
 29626                                  fmt_nil:
 29627 000019C0 282900                  	db `()\0`
 29628                                  fmt_boolean_false:
 29629 000019C3 236600                  	db `#f\0`
 29630                                  fmt_boolean_true:
 29631 000019C6 237400                  	db `#t\0`
 29632                                  fmt_char_backslash:
 29633 000019C9 235C5C00                	db `#\\\\\0`
 29634                                  fmt_char_dquote:
 29635 000019CD 235C2200                	db `#\\"\0`
 29636                                  fmt_char_simple:
 29637 000019D1 235C256300              	db `#\\%c\0`
 29638                                  fmt_char_null:
 29639 000019D6 235C6E756C00            	db `#\\nul\0`
 29640                                  fmt_char_bell:
 29641 000019DC 235C62656C6C00          	db `#\\bell\0`
 29642                                  fmt_char_backspace:
 29643 000019E3 235C6261636B737061-     	db `#\\backspace\0`
 29643 000019EC 636500             
 29644                                  fmt_char_tab:
 29645 000019EF 235C74616200            	db `#\\tab\0`
 29646                                  fmt_char_newline:
 29647 000019F5 235C6E65776C696E65-     	db `#\\newline\0`
 29647 000019FE 00                 
 29648                                  fmt_char_formfeed:
 29649 000019FF 235C7061676500          	db `#\\page\0`
 29650                                  fmt_char_return:
 29651 00001A06 235C72657475726E00      	db `#\\return\0`
 29652                                  fmt_char_escape:
 29653 00001A0F 235C65736300            	db `#\\esc\0`
 29654                                  fmt_char_space:
 29655 00001A15 235C737061636500        	db `#\\space\0`
 29656                                  fmt_char_hex:
 29657 00001A1D 235C782530325800        	db `#\\x%02X\0`
 29658                                  fmt_gensym:
 29659 00001A25 47256C6400                      db `G%ld\0`
 29660                                  fmt_closure:
 29661 00001A2A 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 29661 00001A33 206174203078253038-
 29661 00001A3C 5820656E763D307825-
 29661 00001A45 30385820636F64653D-
 29661 00001A4E 3078253038583E00   
 29662                                  fmt_lparen:
 29663 00001A56 2800                    	db `(\0`
 29664                                  fmt_dotted_pair:
 29665 00001A58 202E2000                	db ` . \0`
 29666                                  fmt_rparen:
 29667 00001A5C 2900                    	db `)\0`
 29668                                  fmt_space:
 29669 00001A5E 2000                    	db ` \0`
 29670                                  fmt_empty_vector:
 29671 00001A60 23282900                	db `#()\0`
 29672                                  fmt_vector:
 29673 00001A64 232800                  	db `#(\0`
 29674                                  fmt_real:
 29675 00001A67 256600                  	db `%f\0`
 29676                                  fmt_fraction:
 29677 00001A6A 256C642F256C6400        	db `%ld/%ld\0`
 29678                                  fmt_zero:
 29679 00001A72 3000                    	db `0\0`
 29680                                  fmt_int:
 29681 00001A74 256C6400                	db `%ld\0`
 29682                                  fmt_unknown_scheme_object_error:
 29683 00001A78 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 29683 00001A81 6F723A20556E6B6E6F-
 29683 00001A8A 776E20536368656D65-
 29683 00001A93 2D6F626A6563742028-
 29683 00001A9C 525454492030782530-
 29683 00001AA5 32582920           
 29684 00001AA9 617420616464726573-     	db `at address 0x%08X\n\n\0`
 29684 00001AB2 73203078253038580A-
 29684 00001ABB 0A00               
 29685                                  fmt_dquote:
 29686 00001ABD 2200                    	db `\"\0`
 29687                                  fmt_string_char:
 29688 00001ABF 256300                          db `%c\0`
 29689                                  fmt_string_char_7:
 29690 00001AC2 5C6100                          db `\\a\0`
 29691                                  fmt_string_char_8:
 29692 00001AC5 5C6200                          db `\\b\0`
 29693                                  fmt_string_char_9:
 29694 00001AC8 5C7400                          db `\\t\0`
 29695                                  fmt_string_char_10:
 29696 00001ACB 5C6E00                          db `\\n\0`
 29697                                  fmt_string_char_11:
 29698 00001ACE 5C7600                          db `\\v\0`
 29699                                  fmt_string_char_12:
 29700 00001AD1 5C6600                          db `\\f\0`
 29701                                  fmt_string_char_13:
 29702 00001AD4 5C7200                          db `\\r\0`
 29703                                  fmt_string_char_34:
 29704 00001AD7 5C2200                          db `\\"\0`
 29705                                  fmt_string_char_92:
 29706 00001ADA 5C5C00                          db `\\\\\0`
 29707                                  fmt_string_char_hex:
 29708 00001ADD 5C7825583B00                    db `\\x%X;\0`
 29709                                  
 29710                                  section .text
 29711                                  
 29712                                  print_sexpr:
 29713 0001630C C8000000                	enter 0, 0
 29714 00016310 8A07                    	mov al, byte [rdi]
 29715 00016312 3C00                    	cmp al, T_void
 29716 00016314 7465                    	je .Lvoid
 29717 00016316 3C01                    	cmp al, T_nil
 29718 00016318 7470                    	je .Lnil
 29719 0001631A 3C09                    	cmp al, T_boolean_false
 29720 0001631C 747B                    	je .Lboolean_false
 29721 0001631E 3C0A                    	cmp al, T_boolean_true
 29722 00016320 0F8482000000            	je .Lboolean_true
 29723 00016326 3C02                    	cmp al, T_char
 29724 00016328 0F8489000000            	je .Lchar
 29725 0001632E 3C41                    	cmp al, T_interned_symbol
 29726 00016330 0F84CB010000            	je .Linterned_symbol
 29727 00016336 3C42                            cmp al, T_uninterned_symbol
 29728 00016338 0F84EF010000                    je .Luninterned_symbol
 29729 0001633E 3C21                    	cmp al, T_pair
 29730 00016340 0F84FA010000            	je .Lpair
 29731 00016346 3C22                    	cmp al, T_vector
 29732 00016348 0F84C3020000            	je .Lvector
 29733 0001634E 3C04                    	cmp al, T_closure
 29734 00016350 0F8491010000            	je .Lclosure
 29735 00016356 3C13                    	cmp al, T_real
 29736 00016358 0F8454030000            	je .Lreal
 29737 0001635E 3C12                    	cmp al, T_fraction
 29738 00016360 0F847A030000            	je .Lfraction
 29739 00016366 3C11                    	cmp al, T_integer
 29740 00016368 0F84B3030000            	je .Linteger
 29741 0001636E 3C03                    	cmp al, T_string
 29742 00016370 0F84BE030000            	je .Lstring
 29743                                  
 29744 00016376 E9F6040000              	jmp .Lunknown_sexpr_type
 29745                                  
 29746                                  .Lvoid:
 29747 0001637B 48BF-                   	mov rdi, fmt_void
 29747 0001637D [B819000000000000] 
 29748 00016385 E91A050000              	jmp .Lemit
 29749                                  
 29750                                  .Lnil:
 29751 0001638A 48BF-                   	mov rdi, fmt_nil
 29751 0001638C [C019000000000000] 
 29752 00016394 E90B050000              	jmp .Lemit
 29753                                  
 29754                                  .Lboolean_false:
 29755 00016399 48BF-                   	mov rdi, fmt_boolean_false
 29755 0001639B [C319000000000000] 
 29756 000163A3 E9FC040000              	jmp .Lemit
 29757                                  
 29758                                  .Lboolean_true:
 29759 000163A8 48BF-                   	mov rdi, fmt_boolean_true
 29759 000163AA [C619000000000000] 
 29760 000163B2 E9ED040000              	jmp .Lemit
 29761                                  
 29762                                  .Lchar:
 29763 000163B7 8A4701                  	mov al, byte [rdi + 1]
 29764 000163BA 3C20                    	cmp al, ' '
 29765 000163BC 7E28                    	jle .Lchar_whitespace
 29766 000163BE 3C5C                    	cmp al, 92 		; backslash
 29767 000163C0 0F847C000000            	je .Lchar_backslash
 29768 000163C6 3C22                    	cmp al, '"'
 29769 000163C8 0F8483000000            	je .Lchar_dquote
 29770 000163CE 4825FF000000            	and rax, 255
 29771 000163D4 48BF-                   	mov rdi, fmt_char_simple
 29771 000163D6 [D119000000000000] 
 29772 000163DE 4889C6                  	mov rsi, rax
 29773 000163E1 E9BE040000              	jmp .Lemit
 29774                                  
 29775                                  .Lchar_whitespace:
 29776 000163E6 3C00                    	cmp al, 0
 29777 000163E8 7476                    	je .Lchar_null
 29778 000163EA 3C07                    	cmp al, 7
 29779 000163EC 0F847D000000            	je .Lchar_bell
 29780 000163F2 3C08                    	cmp al, 8
 29781 000163F4 0F8484000000            	je .Lchar_backspace
 29782 000163FA 3C09                    	cmp al, 9
 29783 000163FC 0F848B000000            	je .Lchar_tab
 29784 00016402 3C0A                    	cmp al, 10
 29785 00016404 0F8492000000            	je .Lchar_newline
 29786 0001640A 3C0C                    	cmp al, 12
 29787 0001640C 0F8499000000            	je .Lchar_formfeed
 29788 00016412 3C0D                    	cmp al, 13
 29789 00016414 0F84A0000000            	je .Lchar_return
 29790 0001641A 3C1B                    	cmp al, 27
 29791 0001641C 0F84A7000000            	je .Lchar_escape
 29792 00016422 4825FF000000            	and rax, 255
 29793 00016428 3C20                    	cmp al, ' '
 29794 0001642A 0F84A8000000            	je .Lchar_space
 29795 00016430 48BF-                   	mov rdi, fmt_char_hex
 29795 00016432 [1D1A000000000000] 
 29796 0001643A 4889C6                  	mov rsi, rax
 29797 0001643D E962040000              	jmp .Lemit	
 29798                                  
 29799                                  .Lchar_backslash:
 29800 00016442 48BF-                   	mov rdi, fmt_char_backslash
 29800 00016444 [C919000000000000] 
 29801 0001644C E953040000              	jmp .Lemit
 29802                                  
 29803                                  .Lchar_dquote:
 29804 00016451 48BF-                   	mov rdi, fmt_char_dquote
 29804 00016453 [CD19000000000000] 
 29805 0001645B E944040000              	jmp .Lemit
 29806                                  
 29807                                  .Lchar_null:
 29808 00016460 48BF-                   	mov rdi, fmt_char_null
 29808 00016462 [D619000000000000] 
 29809 0001646A E935040000              	jmp .Lemit
 29810                                  
 29811                                  .Lchar_bell:
 29812 0001646F 48BF-                   	mov rdi, fmt_char_bell
 29812 00016471 [DC19000000000000] 
 29813 00016479 E926040000              	jmp .Lemit
 29814                                  
 29815                                  .Lchar_backspace:
 29816 0001647E 48BF-                   	mov rdi, fmt_char_backspace
 29816 00016480 [E319000000000000] 
 29817 00016488 E917040000              	jmp .Lemit
 29818                                  
 29819                                  .Lchar_tab:
 29820 0001648D 48BF-                   	mov rdi, fmt_char_tab
 29820 0001648F [EF19000000000000] 
 29821 00016497 E908040000              	jmp .Lemit
 29822                                  
 29823                                  .Lchar_newline:
 29824 0001649C 48BF-                   	mov rdi, fmt_char_newline
 29824 0001649E [F519000000000000] 
 29825 000164A6 E9F9030000              	jmp .Lemit
 29826                                  
 29827                                  .Lchar_formfeed:
 29828 000164AB 48BF-                   	mov rdi, fmt_char_formfeed
 29828 000164AD [FF19000000000000] 
 29829 000164B5 E9EA030000              	jmp .Lemit
 29830                                  
 29831                                  .Lchar_return:
 29832 000164BA 48BF-                   	mov rdi, fmt_char_return
 29832 000164BC [061A000000000000] 
 29833 000164C4 E9DB030000              	jmp .Lemit
 29834                                  
 29835                                  .Lchar_escape:
 29836 000164C9 48BF-                   	mov rdi, fmt_char_escape
 29836 000164CB [0F1A000000000000] 
 29837 000164D3 E9CC030000              	jmp .Lemit
 29838                                  
 29839                                  .Lchar_space:
 29840 000164D8 48BF-                   	mov rdi, fmt_char_space
 29840 000164DA [151A000000000000] 
 29841 000164E2 E9BD030000              	jmp .Lemit
 29842                                  
 29843                                  .Lclosure:
 29844 000164E7 4889FE                  	mov rsi, qword rdi
 29845 000164EA 48BF-                   	mov rdi, fmt_closure
 29845 000164EC [2A1A000000000000] 
 29846 000164F4 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 29847 000164F8 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 29848 000164FC E9A3030000              	jmp .Lemit
 29849                                  
 29850                                  .Linterned_symbol:
 29851 00016501 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 29852 00016505 BE01000000              	mov rsi, 1		 ; size = 1 byte
 29853 0001650A 488B5701                	mov rdx, qword [rdi + 1] ; length
 29854 0001650E 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 29855 00016512 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 29856                                  	ENTER
    44 0001651A C8000000            <1>  enter 0, 0
    45 0001651E 4883E4F0            <1>  and rsp, ~15
 29857 00016522 E8(00000000)            	call fwrite
 29858                                  	LEAVE
    49 00016527 C9                  <1>  leave
 29859 00016528 E98C030000              	jmp .Lend
 29860                                  
 29861                                  .Luninterned_symbol:
 29862 0001652D 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 29863 00016531 48BF-                           mov rdi, fmt_gensym
 29863 00016533 [251A000000000000] 
 29864 0001653B E964030000                      jmp .Lemit
 29865                                  	
 29866                                  .Lpair:
 29867 00016540 57                      	push rdi
 29868 00016541 48BF-                   	mov rdi, fmt_lparen
 29868 00016543 [561A000000000000] 
 29869 0001654B B800000000              	mov rax, 0
 29870                                          ENTER
    44 00016550 C8000000            <1>  enter 0, 0
    45 00016554 4883E4F0            <1>  and rsp, ~15
 29871 00016558 E8(00000000)            	call printf
 29872                                          LEAVE
    49 0001655D C9                  <1>  leave
 29873 0001655E 488B3C24                	mov rdi, qword [rsp] 	; pair
 29874 00016562 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29875 00016566 E8A1FDFFFF              	call print_sexpr
 29876 0001656B 5F                      	pop rdi 		; pair
 29877 0001656C 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29878                                  .Lcdr:
 29879 00016570 8A07                    	mov al, byte [rdi]
 29880 00016572 3C01                    	cmp al, T_nil
 29881 00016574 7447                    	je .Lcdr_nil
 29882 00016576 3C21                    	cmp al, T_pair
 29883 00016578 7462                    	je .Lcdr_pair
 29884 0001657A 57                      	push rdi
 29885 0001657B 48BF-                   	mov rdi, fmt_dotted_pair
 29885 0001657D [581A000000000000] 
 29886 00016585 B800000000              	mov rax, 0
 29887                                          ENTER
    44 0001658A C8000000            <1>  enter 0, 0
    45 0001658E 4883E4F0            <1>  and rsp, ~15
 29888 00016592 E8(00000000)            	call printf
 29889                                          LEAVE
    49 00016597 C9                  <1>  leave
 29890 00016598 5F                      	pop rdi
 29891 00016599 E86EFDFFFF              	call print_sexpr
 29892 0001659E 48BF-                   	mov rdi, fmt_rparen
 29892 000165A0 [5C1A000000000000] 
 29893 000165A8 B800000000              	mov rax, 0
 29894                                          ENTER
    44 000165AD C8000000            <1>  enter 0, 0
    45 000165B1 4883E4F0            <1>  and rsp, ~15
 29895 000165B5 E8(00000000)            	call printf
 29896                                          LEAVE
    49 000165BA C9                  <1>  leave
 29897 000165BB C9                      	leave
 29898 000165BC C3                      	ret
 29899                                  
 29900                                  .Lcdr_nil:
 29901 000165BD 48BF-                   	mov rdi, fmt_rparen
 29901 000165BF [5C1A000000000000] 
 29902 000165C7 B800000000              	mov rax, 0
 29903                                          ENTER
    44 000165CC C8000000            <1>  enter 0, 0
    45 000165D0 4883E4F0            <1>  and rsp, ~15
 29904 000165D4 E8(00000000)            	call printf
 29905                                          LEAVE
    49 000165D9 C9                  <1>  leave
 29906 000165DA C9                      	leave
 29907 000165DB C3                      	ret
 29908                                  
 29909                                  .Lcdr_pair:
 29910 000165DC 57                      	push rdi
 29911 000165DD 48BF-                   	mov rdi, fmt_space
 29911 000165DF [5E1A000000000000] 
 29912 000165E7 B800000000              	mov rax, 0
 29913                                          ENTER
    44 000165EC C8000000            <1>  enter 0, 0
    45 000165F0 4883E4F0            <1>  and rsp, ~15
 29914 000165F4 E8(00000000)            	call printf
 29915                                          LEAVE
    49 000165F9 C9                  <1>  leave
 29916 000165FA 488B3C24                	mov rdi, qword [rsp]
 29917 000165FE 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29918 00016602 E805FDFFFF              	call print_sexpr
 29919 00016607 5F                      	pop rdi
 29920 00016608 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29921 0001660C E95FFFFFFF              	jmp .Lcdr
 29922                                  
 29923                                  .Lvector:
 29924 00016611 488B4701                	mov rax, qword [rdi + 1] ; length
 29925 00016615 4883F800                	cmp rax, 0
 29926 00016619 0F8484000000            	je .Lvector_empty
 29927 0001661F 57                      	push rdi
 29928 00016620 48BF-                   	mov rdi, fmt_vector
 29928 00016622 [641A000000000000] 
 29929 0001662A B800000000              	mov rax, 0
 29930                                          ENTER
    44 0001662F C8000000            <1>  enter 0, 0
    45 00016633 4883E4F0            <1>  and rsp, ~15
 29931 00016637 E8(00000000)            	call printf
 29932                                          LEAVE
    49 0001663C C9                  <1>  leave
 29933 0001663D 488B3C24                	mov rdi, qword [rsp]
 29934 00016641 FF7701                  	push qword [rdi + 1]
 29935 00016644 6A01                    	push 1
 29936 00016646 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 29937 0001664A E8BDFCFFFF              	call print_sexpr
 29938                                  .Lvector_loop:
 29939                                  	; [rsp] index
 29940                                  	; [rsp + 8*1] limit
 29941                                  	; [rsp + 8*2] vector
 29942 0001664F 488B0424                	mov rax, qword [rsp]
 29943 00016653 483B442408              	cmp rax, qword [rsp + 8*1]
 29944 00016658 7436                    	je .Lvector_end
 29945 0001665A 48BF-                   	mov rdi, fmt_space
 29945 0001665C [5E1A000000000000] 
 29946 00016664 B800000000              	mov rax, 0
 29947                                          ENTER
    44 00016669 C8000000            <1>  enter 0, 0
    45 0001666D 4883E4F0            <1>  and rsp, ~15
 29948 00016671 E8(00000000)            	call printf
 29949                                          LEAVE
    49 00016676 C9                  <1>  leave
 29950 00016677 488B0424                	mov rax, qword [rsp]
 29951 0001667B 488B5C2410              	mov rbx, qword [rsp + 8*2]
 29952 00016680 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 29953 00016685 E882FCFFFF              	call print_sexpr
 29954 0001668A 48FF0424                	inc qword [rsp]
 29955 0001668E EBBF                    	jmp .Lvector_loop
 29956                                  
 29957                                  .Lvector_end:
 29958 00016690 4883C418                	add rsp, 8*3
 29959 00016694 48BF-                   	mov rdi, fmt_rparen
 29959 00016696 [5C1A000000000000] 
 29960 0001669E E901020000              	jmp .Lemit	
 29961                                  
 29962                                  .Lvector_empty:
 29963 000166A3 48BF-                   	mov rdi, fmt_empty_vector
 29963 000166A5 [601A000000000000] 
 29964 000166AD E9F2010000              	jmp .Lemit
 29965                                  
 29966                                  .Lreal:
 29967 000166B2 FF7701                  	push qword [rdi + 1]
 29968 000166B5 F20F100424              	movsd xmm0, qword [rsp]
 29969 000166BA 4883C408                	add rsp, 8*1
 29970 000166BE 48BF-                   	mov rdi, fmt_real
 29970 000166C0 [671A000000000000] 
 29971 000166C8 B801000000              	mov rax, 1
 29972                                  	ENTER
    44 000166CD C8000000            <1>  enter 0, 0
    45 000166D1 4883E4F0            <1>  and rsp, ~15
 29973 000166D5 E8(00000000)            	call printf
 29974                                  	LEAVE
    49 000166DA C9                  <1>  leave
 29975 000166DB E9D9010000              	jmp .Lend
 29976                                  
 29977                                  .Lfraction:
 29978 000166E0 488B7701                	mov rsi, qword [rdi + 1]
 29979 000166E4 488B5709                	mov rdx, qword [rdi + 1 + 8]
 29980 000166E8 4883FE00                	cmp rsi, 0
 29981 000166EC 7415                    	je .Lrat_zero
 29982 000166EE 4883FA01                	cmp rdx, 1
 29983 000166F2 741E                    	je .Lrat_int
 29984 000166F4 48BF-                   	mov rdi, fmt_fraction
 29984 000166F6 [6A1A000000000000] 
 29985 000166FE E9A1010000              	jmp .Lemit
 29986                                  
 29987                                  .Lrat_zero:
 29988 00016703 48BF-                   	mov rdi, fmt_zero
 29988 00016705 [721A000000000000] 
 29989 0001670D E992010000              	jmp .Lemit
 29990                                  
 29991                                  .Lrat_int:
 29992 00016712 48BF-                   	mov rdi, fmt_int
 29992 00016714 [741A000000000000] 
 29993 0001671C E983010000              	jmp .Lemit
 29994                                  
 29995                                  .Linteger:
 29996 00016721 488B7701                	mov rsi, qword [rdi + 1]
 29997 00016725 48BF-                   	mov rdi, fmt_int
 29997 00016727 [741A000000000000] 
 29998 0001672F E970010000              	jmp .Lemit
 29999                                  
 30000                                  .Lstring:
 30001 00016734 488D4709                	lea rax, [rdi + 1 + 8]
 30002 00016738 50                      	push rax
 30003 00016739 FF7701                  	push qword [rdi + 1]
 30004 0001673C 48BF-                   	mov rdi, fmt_dquote
 30004 0001673E [BD1A000000000000] 
 30005 00016746 B800000000              	mov rax, 0
 30006                                  	ENTER
    44 0001674B C8000000            <1>  enter 0, 0
    45 0001674F 4883E4F0            <1>  and rsp, ~15
 30007 00016753 E8(00000000)            	call printf
 30008                                  	LEAVE
    49 00016758 C9                  <1>  leave
 30009                                  .Lstring_loop:
 30010                                  	; qword [rsp]: limit
 30011                                  	; qword [rsp + 8*1]: char *
 30012 00016759 48833C2400              	cmp qword [rsp], 0
 30013 0001675E 0F84FD000000            	je .Lstring_end
 30014 00016764 488B442408              	mov rax, qword [rsp + 8*1]
 30015 00016769 8A00                    	mov al, byte [rax]
 30016 0001676B 4825FF000000            	and rax, 255
 30017 00016771 3C07                    	cmp al, 7
 30018 00016773 7468                            je .Lstring_char_7
 30019 00016775 3C08                            cmp al, 8
 30020 00016777 7470                            je .Lstring_char_8
 30021 00016779 3C09                            cmp al, 9
 30022 0001677B 7478                            je .Lstring_char_9
 30023 0001677D 3C0A                            cmp al, 10
 30024 0001677F 0F847C000000                    je .Lstring_char_10
 30025 00016785 3C0B                            cmp al, 11
 30026 00016787 0F8480000000                    je .Lstring_char_11
 30027 0001678D 3C0C                            cmp al, 12
 30028 0001678F 0F8484000000                    je .Lstring_char_12
 30029 00016795 3C0D                            cmp al, 13
 30030 00016797 0F8488000000                    je .Lstring_char_13
 30031 0001679D 3C22                            cmp al, 34
 30032 0001679F 0F848C000000                    je .Lstring_char_34
 30033 000167A5 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 30035 000167A7 3C20                            cmp al, ' '
 30036 000167A9 0F8CA0000000                    jl .Lstring_char_hex
 30037 000167AF 48BF-                           mov rdi, fmt_string_char
 30037 000167B1 [BF1A000000000000] 
 30038 000167B9 4889C6                          mov rsi, rax
 30039                                  .Lstring_char_emit:
 30040 000167BC B800000000                      mov rax, 0
 30041                                          ENTER
    44 000167C1 C8000000            <1>  enter 0, 0
    45 000167C5 4883E4F0            <1>  and rsp, ~15
 30042 000167C9 E8(00000000)                    call printf
 30043                                          LEAVE
    49 000167CE C9                  <1>  leave
 30044 000167CF 48FF0C24                        dec qword [rsp]
 30045 000167D3 48FF442408                      inc qword [rsp + 8*1]
 30046 000167D8 E97CFFFFFF                      jmp .Lstring_loop
 30047                                  
 30048                                  .Lstring_char_7:
 30049 000167DD 48BF-                           mov rdi, fmt_string_char_7
 30049 000167DF [C21A000000000000] 
 30050 000167E7 EBD3                            jmp .Lstring_char_emit
 30051                                  
 30052                                  .Lstring_char_8:
 30053 000167E9 48BF-                           mov rdi, fmt_string_char_8
 30053 000167EB [C51A000000000000] 
 30054 000167F3 EBC7                            jmp .Lstring_char_emit
 30055                                          
 30056                                  .Lstring_char_9:
 30057 000167F5 48BF-                           mov rdi, fmt_string_char_9
 30057 000167F7 [C81A000000000000] 
 30058 000167FF EBBB                            jmp .Lstring_char_emit
 30059                                  
 30060                                  .Lstring_char_10:
 30061 00016801 48BF-                           mov rdi, fmt_string_char_10
 30061 00016803 [CB1A000000000000] 
 30062 0001680B EBAF                            jmp .Lstring_char_emit
 30063                                  
 30064                                  .Lstring_char_11:
 30065 0001680D 48BF-                           mov rdi, fmt_string_char_11
 30065 0001680F [CE1A000000000000] 
 30066 00016817 EBA3                            jmp .Lstring_char_emit
 30067                                  
 30068                                  .Lstring_char_12:
 30069 00016819 48BF-                           mov rdi, fmt_string_char_12
 30069 0001681B [D11A000000000000] 
 30070 00016823 EB97                            jmp .Lstring_char_emit
 30071                                  
 30072                                  .Lstring_char_13:
 30073 00016825 48BF-                           mov rdi, fmt_string_char_13
 30073 00016827 [D41A000000000000] 
 30074 0001682F EB8B                            jmp .Lstring_char_emit
 30075                                  
 30076                                  .Lstring_char_34:
 30077 00016831 48BF-                           mov rdi, fmt_string_char_34
 30077 00016833 [D71A000000000000] 
 30078 0001683B E97CFFFFFF                      jmp .Lstring_char_emit
 30079                                  
 30080                                  .Lstring_char_92:
 30081 00016840 48BF-                           mov rdi, fmt_string_char_92
 30081 00016842 [DA1A000000000000] 
 30082 0001684A E96DFFFFFF                      jmp .Lstring_char_emit
 30083                                  
 30084                                  .Lstring_char_hex:
 30085 0001684F 48BF-                           mov rdi, fmt_string_char_hex
 30085 00016851 [DD1A000000000000] 
 30086 00016859 4889C6                          mov rsi, rax
 30087 0001685C E95BFFFFFF                      jmp .Lstring_char_emit        
 30088                                  
 30089                                  .Lstring_end:
 30090 00016861 4883C410                	add rsp, 8 * 2
 30091 00016865 48BF-                   	mov rdi, fmt_dquote
 30091 00016867 [BD1A000000000000] 
 30092 0001686F EB33                    	jmp .Lemit
 30093                                  
 30094                                  .Lunknown_sexpr_type:
 30095 00016871 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 30095 00016873 [781A000000000000] 
 30096 0001687B 4825FF000000            	and rax, 255
 30097 00016881 4889C2                  	mov rdx, rax
 30098 00016884 4889F9                  	mov rcx, rdi
 30099 00016887 488B3C25[00000000]      	mov rdi, qword [stderr]
 30100 0001688F B800000000              	mov rax, 0
 30101                                          ENTER
    44 00016894 C8000000            <1>  enter 0, 0
    45 00016898 4883E4F0            <1>  and rsp, ~15
 30102 0001689C E8(00000000)            	call fprintf
 30103                                          LEAVE
    49 000168A1 C9                  <1>  leave
 30104 000168A2 C9                              leave
 30105 000168A3 C3                              ret
 30106                                  
 30107                                  .Lemit:
 30108 000168A4 B800000000              	mov rax, 0
 30109                                          ENTER
    44 000168A9 C8000000            <1>  enter 0, 0
    45 000168AD 4883E4F0            <1>  and rsp, ~15
 30110 000168B1 E8(00000000)            	call printf
 30111                                          LEAVE
    49 000168B6 C9                  <1>  leave
 30112 000168B7 EB00                    	jmp .Lend
 30113                                  
 30114                                  .Lend:
 30115                                  	LEAVE
    49 000168B9 C9                  <1>  leave
 30116 000168BA C3                      	ret
 30117                                  
 30118                                  ;;; rdi: address of free variable
 30119                                  ;;; rsi: address of code-pointer
 30120                                  bind_primitive:
 30121 000168BB C8000000                        enter 0, 0
 30122 000168BF 57                              push rdi
 30123 000168C0 BF11000000                      mov rdi, (1 + 8 + 8)
 30124 000168C5 E8C1F7FFFF                      call malloc
 30125 000168CA 5F                              pop rdi
 30126 000168CB C60004                          mov byte [rax], T_closure
 30127 000168CE 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 30128 000168D6 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 30129 000168DA 488907                          mov qword [rdi], rax
 30130 000168DD 48B8-                           mov rax, sob_void
 30130 000168DF [0000000000000000] 
 30131 000168E7 C9                              leave
 30132 000168E8 C3                              ret
 30133                                  
 30134                                  L_code_ptr_ash:
 30135 000168E9 C8000000                        enter 0, 0
 30136 000168ED 48837D1802                      cmp COUNT, 2
 30137 000168F2 0F8510140000                    jne L_error_arg_count_2
 30138 000168F8 488B7D20                        mov rdi, PARAM(0)
 30139                                          assert_integer(rdi)
    53 000168FC 803F11              <1>  cmp byte [%1], %2
    54 000168FF 0F85A2140000        <1>  jne L_error_incorrect_type
 30140 00016905 488B4D28                        mov rcx, PARAM(1)
 30141                                          assert_integer(rcx)
    53 00016909 803911              <1>  cmp byte [%1], %2
    54 0001690C 0F8595140000        <1>  jne L_error_incorrect_type
 30142 00016912 488B7F01                        mov rdi, qword [rdi + 1]
 30143 00016916 488B4901                        mov rcx, qword [rcx + 1]
 30144 0001691A 4883F900                        cmp rcx, 0
 30145 0001691E 7C0F                            jl .L_negative
 30146                                  .L_loop_positive:
 30147 00016920 4883F900                        cmp rcx, 0
 30148 00016924 741B                            je .L_exit
 30149 00016926 48D3E7                          sal rdi, cl
 30150 00016929 48C1E908                        shr rcx, 8
 30151 0001692D EBF1                            jmp .L_loop_positive
 30152                                  .L_negative:
 30153 0001692F 48F7D9                          neg rcx
 30154                                  .L_loop_negative:
 30155 00016932 4883F900                        cmp rcx, 0
 30156 00016936 7409                            je .L_exit
 30157 00016938 48D3FF                          sar rdi, cl
 30158 0001693B 48C1E908                        shr rcx, 8
 30159 0001693F EBF1                            jmp .L_loop_negative
 30160                                  .L_exit:
 30161 00016941 E8DC120000                      call make_integer
 30162 00016946 C9                              leave
 30163 00016947 C22000                          ret AND_KILL_FRAME(2)
 30164                                  
 30165                                  L_code_ptr_logand:
 30166 0001694A C8000000                        enter 0, 0
 30167 0001694E 48837D1802                      cmp COUNT, 2
 30168 00016953 0F85AF130000                    jne L_error_arg_count_2
 30169 00016959 4C8B4520                        mov r8, PARAM(0)
 30170                                          assert_integer(r8)
    53 0001695D 41803811            <1>  cmp byte [%1], %2
    54 00016961 0F8540140000        <1>  jne L_error_incorrect_type
 30171 00016967 4C8B4D28                        mov r9, PARAM(1)
 30172                                          assert_integer(r9)
    53 0001696B 41803911            <1>  cmp byte [%1], %2
    54 0001696F 0F8532140000        <1>  jne L_error_incorrect_type
 30173 00016975 498B7801                        mov rdi, qword [r8 + 1]
 30174 00016979 49237901                        and rdi, qword [r9 + 1]
 30175 0001697D E8A0120000                      call make_integer
 30176 00016982 C9                              leave
 30177 00016983 C22000                          ret AND_KILL_FRAME(2)
 30178                                  
 30179                                  L_code_ptr_logor:
 30180 00016986 C8000000                        enter 0, 0
 30181 0001698A 48837D1802                      cmp COUNT, 2
 30182 0001698F 0F8573130000                    jne L_error_arg_count_2
 30183 00016995 4C8B4520                        mov r8, PARAM(0)
 30184                                          assert_integer(r8)
    53 00016999 41803811            <1>  cmp byte [%1], %2
    54 0001699D 0F8504140000        <1>  jne L_error_incorrect_type
 30185 000169A3 4C8B4D28                        mov r9, PARAM(1)
 30186                                          assert_integer(r9)
    53 000169A7 41803911            <1>  cmp byte [%1], %2
    54 000169AB 0F85F6130000        <1>  jne L_error_incorrect_type
 30187 000169B1 498B7801                        mov rdi, qword [r8 + 1]
 30188 000169B5 490B7901                        or rdi, qword [r9 + 1]
 30189 000169B9 E864120000                      call make_integer
 30190 000169BE C9                              leave
 30191 000169BF C22000                          ret AND_KILL_FRAME(2)
 30192                                  
 30193                                  L_code_ptr_logxor:
 30194 000169C2 C8000000                        enter 0, 0
 30195 000169C6 48837D1802                      cmp COUNT, 2
 30196 000169CB 0F8537130000                    jne L_error_arg_count_2
 30197 000169D1 4C8B4520                        mov r8, PARAM(0)
 30198                                          assert_integer(r8)
    53 000169D5 41803811            <1>  cmp byte [%1], %2
    54 000169D9 0F85C8130000        <1>  jne L_error_incorrect_type
 30199 000169DF 4C8B4D28                        mov r9, PARAM(1)
 30200                                          assert_integer(r9)
    53 000169E3 41803911            <1>  cmp byte [%1], %2
    54 000169E7 0F85BA130000        <1>  jne L_error_incorrect_type
 30201 000169ED 498B7801                        mov rdi, qword [r8 + 1]
 30202 000169F1 49337901                        xor rdi, qword [r9 + 1]
 30203 000169F5 E828120000                      call make_integer
 30204                                          LEAVE
    49 000169FA C9                  <1>  leave
 30205 000169FB C22000                          ret AND_KILL_FRAME(2)
 30206                                  
 30207                                  L_code_ptr_lognot:
 30208 000169FE C8000000                        enter 0, 0
 30209 00016A02 48837D1801                      cmp COUNT, 1
 30210 00016A07 0F85C6120000                    jne L_error_arg_count_1
 30211 00016A0D 4C8B4520                        mov r8, PARAM(0)
 30212                                          assert_integer(r8)
    53 00016A11 41803811            <1>  cmp byte [%1], %2
    54 00016A15 0F858C130000        <1>  jne L_error_incorrect_type
 30213 00016A1B 498B7801                        mov rdi, qword [r8 + 1]
 30214 00016A1F 48F7D7                          not rdi
 30215 00016A22 E8FB110000                      call make_integer
 30216 00016A27 C9                              leave
 30217 00016A28 C21800                          ret AND_KILL_FRAME(1)
 30218                                  
 30219                                  L_code_ptr_bin_apply:
 30220                                  ;;; fill in for final project!
 30221                                  
 30222                                  L_code_ptr_is_null:
 30223 00016A2B C8000000                        enter 0, 0
 30224 00016A2F 48837D1801                      cmp COUNT, 1
 30225 00016A34 0F8599120000                    jne L_error_arg_count_1
 30226 00016A3A 488B4520                        mov rax, PARAM(0)
 30227 00016A3E 803801                          cmp byte [rax], T_nil
 30228 00016A41 750C                            jne .L_false
 30229 00016A43 48B8-                           mov rax, sob_boolean_true
 30229 00016A45 [0300000000000000] 
 30230 00016A4D EB0A                            jmp .L_end
 30231                                  .L_false:
 30232 00016A4F 48B8-                           mov rax, sob_boolean_false
 30232 00016A51 [0200000000000000] 
 30233                                  .L_end:
 30234 00016A59 C9                              leave
 30235 00016A5A C21800                          ret AND_KILL_FRAME(1)
 30236                                  
 30237                                  L_code_ptr_is_pair:
 30238 00016A5D C8000000                        enter 0, 0
 30239 00016A61 48837D1801                      cmp COUNT, 1
 30240 00016A66 0F8567120000                    jne L_error_arg_count_1
 30241 00016A6C 488B4520                        mov rax, PARAM(0)
 30242 00016A70 803821                          cmp byte [rax], T_pair
 30243 00016A73 750C                            jne .L_false
 30244 00016A75 48B8-                           mov rax, sob_boolean_true
 30244 00016A77 [0300000000000000] 
 30245 00016A7F EB0A                            jmp .L_end
 30246                                  .L_false:
 30247 00016A81 48B8-                           mov rax, sob_boolean_false
 30247 00016A83 [0200000000000000] 
 30248                                  .L_end:
 30249 00016A8B C9                              leave
 30250 00016A8C C21800                          ret AND_KILL_FRAME(1)
 30251                                          
 30252                                  L_code_ptr_is_void:
 30253 00016A8F C8000000                        enter 0, 0
 30254 00016A93 48837D1801                      cmp COUNT, 1
 30255 00016A98 0F8535120000                    jne L_error_arg_count_1
 30256 00016A9E 488B4520                        mov rax, PARAM(0)
 30257 00016AA2 803800                          cmp byte [rax], T_void
 30258 00016AA5 750C                            jne .L_false
 30259 00016AA7 48B8-                           mov rax, sob_boolean_true
 30259 00016AA9 [0300000000000000] 
 30260 00016AB1 EB0A                            jmp .L_end
 30261                                  .L_false:
 30262 00016AB3 48B8-                           mov rax, sob_boolean_false
 30262 00016AB5 [0200000000000000] 
 30263                                  .L_end:
 30264 00016ABD C9                              leave
 30265 00016ABE C21800                          ret AND_KILL_FRAME(1)
 30266                                  
 30267                                  L_code_ptr_is_char:
 30268 00016AC1 C8000000                        enter 0, 0
 30269 00016AC5 48837D1801                      cmp COUNT, 1
 30270 00016ACA 0F8503120000                    jne L_error_arg_count_1
 30271 00016AD0 488B4520                        mov rax, PARAM(0)
 30272 00016AD4 803802                          cmp byte [rax], T_char
 30273 00016AD7 750C                            jne .L_false
 30274 00016AD9 48B8-                           mov rax, sob_boolean_true
 30274 00016ADB [0300000000000000] 
 30275 00016AE3 EB0A                            jmp .L_end
 30276                                  .L_false:
 30277 00016AE5 48B8-                           mov rax, sob_boolean_false
 30277 00016AE7 [0200000000000000] 
 30278                                  .L_end:
 30279 00016AEF C9                              leave
 30280 00016AF0 C21800                          ret AND_KILL_FRAME(1)
 30281                                  
 30282                                  L_code_ptr_is_string:
 30283 00016AF3 C8000000                        enter 0, 0
 30284 00016AF7 48837D1801                      cmp COUNT, 1
 30285 00016AFC 0F85D1110000                    jne L_error_arg_count_1
 30286 00016B02 488B4520                        mov rax, PARAM(0)
 30287 00016B06 803803                          cmp byte [rax], T_string
 30288 00016B09 750C                            jne .L_false
 30289 00016B0B 48B8-                           mov rax, sob_boolean_true
 30289 00016B0D [0300000000000000] 
 30290 00016B15 EB0A                            jmp .L_end
 30291                                  .L_false:
 30292 00016B17 48B8-                           mov rax, sob_boolean_false
 30292 00016B19 [0200000000000000] 
 30293                                  .L_end:
 30294 00016B21 C9                              leave
 30295 00016B22 C21800                          ret AND_KILL_FRAME(1)
 30296                                  
 30297                                  L_code_ptr_is_symbol:
 30298 00016B25 C8000000                        enter 0, 0
 30299 00016B29 48837D1801                      cmp COUNT, 1
 30300 00016B2E 0F859F110000                    jne L_error_arg_count_1
 30301 00016B34 4C8B4520                        mov r8, PARAM(0)
 30302 00016B38 41802040                        and byte [r8], T_symbol
 30303 00016B3C 740C                            jz .L_false
 30304 00016B3E 48B8-                           mov rax, sob_boolean_true
 30304 00016B40 [0300000000000000] 
 30305 00016B48 EB0A                            jmp .L_exit
 30306                                  .L_false:
 30307 00016B4A 48B8-                           mov rax, sob_boolean_false
 30307 00016B4C [0200000000000000] 
 30308                                  .L_exit:
 30309 00016B54 C9                              leave
 30310 00016B55 C21800                          ret AND_KILL_FRAME(1)
 30311                                  
 30312                                  L_code_ptr_is_uninterned_symbol:
 30313 00016B58 C8000000                        enter 0, 0
 30314 00016B5C 48837D1801                      cmp COUNT, 1
 30315 00016B61 0F856C110000                    jne L_error_arg_count_1
 30316 00016B67 4C8B4520                        mov r8, PARAM(0)
 30317 00016B6B 41803842                        cmp byte [r8], T_uninterned_symbol
 30318 00016B6F 750C                            jne .L_false
 30319 00016B71 48B8-                           mov rax, sob_boolean_true
 30319 00016B73 [0300000000000000] 
 30320 00016B7B EB0A                            jmp .L_exit
 30321                                  .L_false:
 30322 00016B7D 48B8-                           mov rax, sob_boolean_false
 30322 00016B7F [0200000000000000] 
 30323                                  .L_exit:
 30324 00016B87 C9                              leave
 30325 00016B88 C21800                          ret AND_KILL_FRAME(1)
 30326                                  
 30327                                  L_code_ptr_is_interned_symbol:
 30328 00016B8B C8000000                        enter 0, 0
 30329 00016B8F 48837D1801                      cmp COUNT, 1
 30330 00016B94 0F8539110000                    jne L_error_arg_count_1
 30331 00016B9A 488B4520                        mov rax, PARAM(0)
 30332 00016B9E 803841                          cmp byte [rax], T_interned_symbol
 30333 00016BA1 750C                            jne .L_false
 30334 00016BA3 48B8-                           mov rax, sob_boolean_true
 30334 00016BA5 [0300000000000000] 
 30335 00016BAD EB0A                            jmp .L_end
 30336                                  .L_false:
 30337 00016BAF 48B8-                           mov rax, sob_boolean_false
 30337 00016BB1 [0200000000000000] 
 30338                                  .L_end:
 30339 00016BB9 C9                              leave
 30340 00016BBA C21800                          ret AND_KILL_FRAME(1)
 30341                                  
 30342                                  L_code_ptr_gensym:
 30343 00016BBD C8000000                        enter 0, 0
 30344 00016BC1 48837D1800                      cmp COUNT, 0
 30345 00016BC6 0F85D2100000                    jne L_error_arg_count_0
 30346 00016BCC 48FF0425[E31A0000]              inc qword [gensym_count]
 30347 00016BD4 BF09000000                      mov rdi, (1 + 8)
 30348 00016BD9 E8ADF4FFFF                      call malloc
 30349 00016BDE C60042                          mov byte [rax], T_uninterned_symbol
 30350 00016BE1 488B0C25[E31A0000]              mov rcx, qword [gensym_count]
 30351 00016BE9 48894801                        mov qword [rax + 1], rcx
 30352 00016BED C9                              leave
 30353 00016BEE C21000                          ret AND_KILL_FRAME(0)
 30354                                  
 30355                                  L_code_ptr_is_vector:
 30356 00016BF1 C8000000                        enter 0, 0
 30357 00016BF5 48837D1801                      cmp COUNT, 1
 30358 00016BFA 0F85D3100000                    jne L_error_arg_count_1
 30359 00016C00 488B4520                        mov rax, PARAM(0)
 30360 00016C04 803822                          cmp byte [rax], T_vector
 30361 00016C07 750C                            jne .L_false
 30362 00016C09 48B8-                           mov rax, sob_boolean_true
 30362 00016C0B [0300000000000000] 
 30363 00016C13 EB0A                            jmp .L_end
 30364                                  .L_false:
 30365 00016C15 48B8-                           mov rax, sob_boolean_false
 30365 00016C17 [0200000000000000] 
 30366                                  .L_end:
 30367 00016C1F C9                              leave
 30368 00016C20 C21800                          ret AND_KILL_FRAME(1)
 30369                                  
 30370                                  L_code_ptr_is_closure:
 30371 00016C23 C8000000                        enter 0, 0
 30372 00016C27 48837D1801                      cmp COUNT, 1
 30373 00016C2C 0F85A1100000                    jne L_error_arg_count_1
 30374 00016C32 488B4520                        mov rax, PARAM(0)
 30375 00016C36 803804                          cmp byte [rax], T_closure
 30376 00016C39 750C                            jne .L_false
 30377 00016C3B 48B8-                           mov rax, sob_boolean_true
 30377 00016C3D [0300000000000000] 
 30378 00016C45 EB0A                            jmp .L_end
 30379                                  .L_false:
 30380 00016C47 48B8-                           mov rax, sob_boolean_false
 30380 00016C49 [0200000000000000] 
 30381                                  .L_end:
 30382 00016C51 C9                              leave
 30383 00016C52 C21800                          ret AND_KILL_FRAME(1)
 30384                                  
 30385                                  L_code_ptr_is_real:
 30386 00016C55 C8000000                        enter 0, 0
 30387 00016C59 48837D1801                      cmp COUNT, 1
 30388 00016C5E 0F856F100000                    jne L_error_arg_count_1
 30389 00016C64 488B4520                        mov rax, PARAM(0)
 30390 00016C68 803813                          cmp byte [rax], T_real
 30391 00016C6B 750C                            jne .L_false
 30392 00016C6D 48B8-                           mov rax, sob_boolean_true
 30392 00016C6F [0300000000000000] 
 30393 00016C77 EB0A                            jmp .L_end
 30394                                  .L_false:
 30395 00016C79 48B8-                           mov rax, sob_boolean_false
 30395 00016C7B [0200000000000000] 
 30396                                  .L_end:
 30397 00016C83 C9                              leave
 30398 00016C84 C21800                          ret AND_KILL_FRAME(1)
 30399                                  
 30400                                  L_code_ptr_is_fraction:
 30401 00016C87 C8000000                        enter 0, 0
 30402 00016C8B 48837D1801                      cmp COUNT, 1
 30403 00016C90 0F853D100000                    jne L_error_arg_count_1
 30404 00016C96 488B4520                        mov rax, PARAM(0)
 30405 00016C9A 803812                          cmp byte [rax], T_fraction
 30406 00016C9D 750C                            jne .L_false
 30407 00016C9F 48B8-                           mov rax, sob_boolean_true
 30407 00016CA1 [0300000000000000] 
 30408 00016CA9 EB0A                            jmp .L_end
 30409                                  .L_false:
 30410 00016CAB 48B8-                           mov rax, sob_boolean_false
 30410 00016CAD [0200000000000000] 
 30411                                  .L_end:
 30412 00016CB5 C9                              leave
 30413 00016CB6 C21800                          ret AND_KILL_FRAME(1)
 30414                                  
 30415                                  L_code_ptr_is_boolean:
 30416 00016CB9 C8000000                        enter 0, 0
 30417 00016CBD 48837D1801                      cmp COUNT, 1
 30418 00016CC2 0F850B100000                    jne L_error_arg_count_1
 30419 00016CC8 488B4520                        mov rax, PARAM(0)
 30420 00016CCC 8A18                            mov bl, byte [rax]
 30421 00016CCE 80E308                          and bl, T_boolean
 30422 00016CD1 740C                            je .L_false
 30423 00016CD3 48B8-                           mov rax, sob_boolean_true
 30423 00016CD5 [0300000000000000] 
 30424 00016CDD EB0A                            jmp .L_end
 30425                                  .L_false:
 30426 00016CDF 48B8-                           mov rax, sob_boolean_false
 30426 00016CE1 [0200000000000000] 
 30427                                  .L_end:
 30428 00016CE9 C9                              leave
 30429 00016CEA C21800                          ret AND_KILL_FRAME(1)
 30430                                          
 30431                                  L_code_ptr_is_boolean_false:
 30432 00016CED C8000000                        enter 0, 0
 30433 00016CF1 48837D1801                      cmp COUNT, 1
 30434 00016CF6 0F85D70F0000                    jne L_error_arg_count_1
 30435 00016CFC 488B4520                        mov rax, PARAM(0)
 30436 00016D00 8A18                            mov bl, byte [rax]
 30437 00016D02 80FB09                          cmp bl, T_boolean_false
 30438 00016D05 750C                            jne .L_false
 30439 00016D07 48B8-                           mov rax, sob_boolean_true
 30439 00016D09 [0300000000000000] 
 30440 00016D11 EB0A                            jmp .L_end
 30441                                  .L_false:
 30442 00016D13 48B8-                           mov rax, sob_boolean_false
 30442 00016D15 [0200000000000000] 
 30443                                  .L_end:
 30444 00016D1D C9                              leave
 30445 00016D1E C21800                          ret AND_KILL_FRAME(1)
 30446                                  
 30447                                  L_code_ptr_is_boolean_true:
 30448 00016D21 C8000000                        enter 0, 0
 30449 00016D25 48837D1801                      cmp COUNT, 1
 30450 00016D2A 0F85A30F0000                    jne L_error_arg_count_1
 30451 00016D30 488B4520                        mov rax, PARAM(0)
 30452 00016D34 8A18                            mov bl, byte [rax]
 30453 00016D36 80FB0A                          cmp bl, T_boolean_true
 30454 00016D39 750C                            jne .L_false
 30455 00016D3B 48B8-                           mov rax, sob_boolean_true
 30455 00016D3D [0300000000000000] 
 30456 00016D45 EB0A                            jmp .L_end
 30457                                  .L_false:
 30458 00016D47 48B8-                           mov rax, sob_boolean_false
 30458 00016D49 [0200000000000000] 
 30459                                  .L_end:
 30460 00016D51 C9                              leave
 30461 00016D52 C21800                          ret AND_KILL_FRAME(1)
 30462                                  
 30463                                  L_code_ptr_is_number:
 30464 00016D55 C8000000                        enter 0, 0
 30465 00016D59 48837D1801                      cmp COUNT, 1
 30466 00016D5E 0F856F0F0000                    jne L_error_arg_count_1
 30467 00016D64 488B4520                        mov rax, PARAM(0)
 30468 00016D68 8A18                            mov bl, byte [rax]
 30469 00016D6A 80E310                          and bl, T_number
 30470 00016D6D 740C                            jz .L_false
 30471 00016D6F 48B8-                           mov rax, sob_boolean_true
 30471 00016D71 [0300000000000000] 
 30472 00016D79 EB0A                            jmp .L_end
 30473                                  .L_false:
 30474 00016D7B 48B8-                           mov rax, sob_boolean_false
 30474 00016D7D [0200000000000000] 
 30475                                  .L_end:
 30476 00016D85 C9                              leave
 30477 00016D86 C21800                          ret AND_KILL_FRAME(1)
 30478                                          
 30479                                  L_code_ptr_is_collection:
 30480 00016D89 C8000000                        enter 0, 0
 30481 00016D8D 48837D1801                      cmp COUNT, 1
 30482 00016D92 0F853B0F0000                    jne L_error_arg_count_1
 30483 00016D98 488B4520                        mov rax, PARAM(0)
 30484 00016D9C 8A18                            mov bl, byte [rax]
 30485 00016D9E 80E320                          and bl, T_collection
 30486 00016DA1 740C                            je .L_false
 30487 00016DA3 48B8-                           mov rax, sob_boolean_true
 30487 00016DA5 [0300000000000000] 
 30488 00016DAD EB0A                            jmp .L_end
 30489                                  .L_false:
 30490 00016DAF 48B8-                           mov rax, sob_boolean_false
 30490 00016DB1 [0200000000000000] 
 30491                                  .L_end:
 30492 00016DB9 C9                              leave
 30493 00016DBA C21800                          ret AND_KILL_FRAME(1)
 30494                                  
 30495                                  L_code_ptr_cons:
 30496 00016DBD C8000000                        enter 0, 0
 30497 00016DC1 48837D1802                      cmp COUNT, 2
 30498 00016DC6 0F853C0F0000                    jne L_error_arg_count_2
 30499 00016DCC BF11000000                      mov rdi, (1 + 8 + 8)
 30500 00016DD1 E8B5F2FFFF                      call malloc
 30501 00016DD6 C60021                          mov byte [rax], T_pair
 30502 00016DD9 488B5D20                        mov rbx, PARAM(0)
 30503 00016DDD 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30504 00016DE1 488B5D28                        mov rbx, PARAM(1)
 30505 00016DE5 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30506 00016DE9 C9                              leave
 30507 00016DEA C22000                          ret AND_KILL_FRAME(2)
 30508                                  
 30509                                  L_code_ptr_display_sexpr:
 30510 00016DED C8000000                        enter 0, 0
 30511 00016DF1 48837D1801                      cmp COUNT, 1
 30512 00016DF6 0F85D70E0000                    jne L_error_arg_count_1
 30513 00016DFC 488B7D20                        mov rdi, PARAM(0)
 30514 00016E00 E807F5FFFF                      call print_sexpr
 30515 00016E05 48B8-                           mov rax, sob_void
 30515 00016E07 [0000000000000000] 
 30516 00016E0F C9                              leave
 30517 00016E10 C21800                          ret AND_KILL_FRAME(1)
 30518                                  
 30519                                  L_code_ptr_write_char:
 30520 00016E13 C8000000                        enter 0, 0
 30521 00016E17 48837D1801                      cmp COUNT, 1
 30522 00016E1C 0F85B10E0000                    jne L_error_arg_count_1
 30523 00016E22 488B4520                        mov rax, PARAM(0)
 30524                                          assert_char(rax)
    53 00016E26 803802              <1>  cmp byte [%1], %2
    54 00016E29 0F85780F0000        <1>  jne L_error_incorrect_type
 30525 00016E2F 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 30526 00016E32 4825FF000000                    and rax, 255
 30527 00016E38 48BF-                           mov rdi, fmt_char
 30527 00016E3A [EB1A000000000000] 
 30528 00016E42 4889C6                          mov rsi, rax
 30529 00016E45 B800000000                      mov rax, 0
 30530                                          ENTER
    44 00016E4A C8000000            <1>  enter 0, 0
    45 00016E4E 4883E4F0            <1>  and rsp, ~15
 30531 00016E52 E8(00000000)                    call printf
 30532                                          LEAVE
    49 00016E57 C9                  <1>  leave
 30533 00016E58 48B8-                           mov rax, sob_void
 30533 00016E5A [0000000000000000] 
 30534 00016E62 C9                              leave
 30535 00016E63 C21800                          ret AND_KILL_FRAME(1)
 30536                                  
 30537                                  L_code_ptr_car:
 30538 00016E66 C8000000                        enter 0, 0
 30539 00016E6A 48837D1801                      cmp COUNT, 1
 30540 00016E6F 0F855E0E0000                    jne L_error_arg_count_1
 30541 00016E75 488B4520                        mov rax, PARAM(0)
 30542                                          assert_pair(rax)
    53 00016E79 803821              <1>  cmp byte [%1], %2
    54 00016E7C 0F85250F0000        <1>  jne L_error_incorrect_type
 30543 00016E82 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 30544 00016E86 C9                              leave
 30545 00016E87 C21800                          ret AND_KILL_FRAME(1)
 30546                                          
 30547                                  L_code_ptr_cdr:
 30548 00016E8A C8000000                        enter 0, 0
 30549 00016E8E 48837D1801                      cmp COUNT, 1
 30550 00016E93 0F853A0E0000                    jne L_error_arg_count_1
 30551 00016E99 488B4520                        mov rax, PARAM(0)
 30552                                          assert_pair(rax)
    53 00016E9D 803821              <1>  cmp byte [%1], %2
    54 00016EA0 0F85010F0000        <1>  jne L_error_incorrect_type
 30553 00016EA6 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 30554 00016EAA C9                              leave
 30555 00016EAB C21800                          ret AND_KILL_FRAME(1)
 30556                                          
 30557                                  L_code_ptr_string_length:
 30558 00016EAE C8000000                        enter 0, 0
 30559 00016EB2 48837D1801                      cmp COUNT, 1
 30560 00016EB7 0F85160E0000                    jne L_error_arg_count_1
 30561 00016EBD 488B4520                        mov rax, PARAM(0)
 30562                                          assert_string(rax)
    53 00016EC1 803803              <1>  cmp byte [%1], %2
    54 00016EC4 0F85DD0E0000        <1>  jne L_error_incorrect_type
 30563 00016ECA 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 30564 00016ECE E84F0D0000                      call make_integer
 30565 00016ED3 C9                              leave
 30566 00016ED4 C21800                          ret AND_KILL_FRAME(1)
 30567                                  
 30568                                  L_code_ptr_vector_length:
 30569 00016ED7 C8000000                        enter 0, 0
 30570 00016EDB 48837D1801                      cmp COUNT, 1
 30571 00016EE0 0F85ED0D0000                    jne L_error_arg_count_1
 30572 00016EE6 488B4520                        mov rax, PARAM(0)
 30573                                          assert_vector(rax)
    53 00016EEA 803822              <1>  cmp byte [%1], %2
    54 00016EED 0F85B40E0000        <1>  jne L_error_incorrect_type
 30574 00016EF3 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 30575 00016EF7 E8260D0000                      call make_integer
 30576 00016EFC C9                              leave
 30577 00016EFD C21800                          ret AND_KILL_FRAME(1)
 30578                                  
 30579                                  L_code_ptr_real_to_integer:
 30580 00016F00 C8000000                        enter 0, 0
 30581 00016F04 48837D1801                      cmp COUNT, 1
 30582 00016F09 0F85C40D0000                    jne L_error_arg_count_1
 30583 00016F0F 488B5D20                        mov rbx, PARAM(0)
 30584                                          assert_real(rbx)
    53 00016F13 803B13              <1>  cmp byte [%1], %2
    54 00016F16 0F858B0E0000        <1>  jne L_error_incorrect_type
 30585 00016F1C F20F104301                      movsd xmm0, qword [rbx + 1]
 30586 00016F21 F2480F2CF8                      cvttsd2si rdi, xmm0
 30587 00016F26 E8F70C0000                      call make_integer
 30588 00016F2B C9                              leave
 30589 00016F2C C21800                          ret AND_KILL_FRAME(1)
 30590                                  
 30591                                  L_code_ptr_exit:
 30592 00016F2F C8000000                        enter 0, 0
 30593 00016F33 48837D1800                      cmp COUNT, 0
 30594 00016F38 0F85600D0000                    jne L_error_arg_count_0
 30595 00016F3E B800000000                      mov rax, 0
 30596 00016F43 E8(00000000)                    call exit
 30597                                  
 30598                                  L_code_ptr_integer_to_real:
 30599 00016F48 C8000000                        enter 0, 0
 30600 00016F4C 48837D1801                      cmp COUNT, 1
 30601 00016F51 0F857C0D0000                    jne L_error_arg_count_1
 30602 00016F57 488B4520                        mov rax, PARAM(0)
 30603                                          assert_integer(rax)
    53 00016F5B 803811              <1>  cmp byte [%1], %2
    54 00016F5E 0F85430E0000        <1>  jne L_error_incorrect_type
 30604 00016F64 FF7001                          push qword [rax + 1]
 30605 00016F67 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30606 00016F6D E8980C0000                      call make_real
 30607 00016F72 C9                              leave
 30608 00016F73 C21800                          ret AND_KILL_FRAME(1)
 30609                                  
 30610                                  L_code_ptr_fraction_to_real:
 30611 00016F76 C8000000                        enter 0, 0
 30612 00016F7A 48837D1801                      cmp COUNT, 1
 30613 00016F7F 0F854E0D0000                    jne L_error_arg_count_1
 30614 00016F85 488B4520                        mov rax, PARAM(0)
 30615                                          assert_fraction(rax)
    53 00016F89 803812              <1>  cmp byte [%1], %2
    54 00016F8C 0F85150E0000        <1>  jne L_error_incorrect_type
 30616 00016F92 FF7001                          push qword [rax + 1]
 30617 00016F95 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30618 00016F9B FF7009                          push qword [rax + 1 + 8]
 30619 00016F9E F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 30620 00016FA4 F20F5EC1                        divsd xmm0, xmm1
 30621 00016FA8 E85D0C0000                      call make_real
 30622 00016FAD C9                              leave
 30623 00016FAE C21800                          ret AND_KILL_FRAME(1)
 30624                                  
 30625                                  L_code_ptr_char_to_integer:
 30626 00016FB1 C8000000                        enter 0, 0
 30627 00016FB5 48837D1801                      cmp COUNT, 1
 30628 00016FBA 0F85130D0000                    jne L_error_arg_count_1
 30629 00016FC0 488B4520                        mov rax, PARAM(0)
 30630                                          assert_char(rax)
    53 00016FC4 803802              <1>  cmp byte [%1], %2
    54 00016FC7 0F85DA0D0000        <1>  jne L_error_incorrect_type
 30631 00016FCD 8A4001                          mov al, byte [rax + 1]
 30632 00016FD0 4825FF000000                    and rax, 255
 30633 00016FD6 4889C7                          mov rdi, rax
 30634 00016FD9 E8440C0000                      call make_integer
 30635 00016FDE C9                              leave
 30636 00016FDF C21800                          ret AND_KILL_FRAME(1)
 30637                                  
 30638                                  L_code_ptr_integer_to_fraction:
 30639 00016FE2 C8000000                        enter 0, 0
 30640 00016FE6 48837D1801                      cmp COUNT, 1
 30641 00016FEB 0F85E20C0000                    jne L_error_arg_count_1
 30642 00016FF1 4C8B4520                        mov r8, PARAM(0)
 30643                                          assert_integer(r8)
    53 00016FF5 41803811            <1>  cmp byte [%1], %2
    54 00016FF9 0F85A80D0000        <1>  jne L_error_incorrect_type
 30644 00016FFF BF11000000                      mov rdi, (1 + 8 + 8)
 30645 00017004 E882F0FFFF                      call malloc
 30646 00017009 498B5801                        mov rbx, qword [r8 + 1]
 30647 0001700D C60012                          mov byte [rax], T_fraction
 30648 00017010 48895801                        mov qword [rax + 1], rbx
 30649 00017014 48C7400901000000                mov qword [rax + 1 + 8], 1
 30650 0001701C C9                              leave
 30651 0001701D C21800                          ret AND_KILL_FRAME(1)
 30652                                  
 30653                                  L_code_ptr_integer_to_char:
 30654 00017020 C8000000                        enter 0, 0
 30655 00017024 48837D1801                      cmp COUNT, 1
 30656 00017029 0F85A40C0000                    jne L_error_arg_count_1
 30657 0001702F 488B4520                        mov rax, PARAM(0)
 30658                                          assert_integer(rax)
    53 00017033 803811              <1>  cmp byte [%1], %2
    54 00017036 0F856B0D0000        <1>  jne L_error_incorrect_type
 30659 0001703C 488B5801                        mov rbx, qword [rax + 1]
 30660 00017040 4883FB00                        cmp rbx, 0
 30661 00017044 0F8EF20B0000                    jle L_error_integer_range
 30662 0001704A 4881FB00010000                  cmp rbx, 256
 30663 00017051 0F8DE50B0000                    jge L_error_integer_range
 30664 00017057 BF02000000                      mov rdi, (1 + 1)
 30665 0001705C E82AF0FFFF                      call malloc
 30666 00017061 C60002                          mov byte [rax], T_char
 30667 00017064 885801                          mov byte [rax + 1], bl
 30668 00017067 C9                              leave
 30669 00017068 C21800                          ret AND_KILL_FRAME(1)
 30670                                  
 30671                                  L_code_ptr_trng:
 30672 0001706B C8000000                        enter 0, 0
 30673 0001706F 48837D1800                      cmp COUNT, 0
 30674 00017074 0F85240C0000                    jne L_error_arg_count_0
 30675 0001707A 480FC7F7                        rdrand rdi
 30676 0001707E 48D1EF                          shr rdi, 1
 30677 00017081 E89C0B0000                      call make_integer
 30678 00017086 C9                              leave
 30679 00017087 C21000                          ret AND_KILL_FRAME(0)
 30680                                  
 30681                                  L_code_ptr_is_zero:
 30682 0001708A C8000000                        enter 0, 0
 30683 0001708E 48837D1801                      cmp COUNT, 1
 30684 00017093 0F853A0C0000                    jne L_error_arg_count_1
 30685 00017099 488B4520                        mov rax, PARAM(0)
 30686 0001709D 803811                          cmp byte [rax], T_integer
 30687 000170A0 740F                            je .L_integer
 30688 000170A2 803812                          cmp byte [rax], T_fraction
 30689 000170A5 7413                            je .L_fraction
 30690 000170A7 803813                          cmp byte [rax], T_real
 30691 000170AA 7417                            je .L_real
 30692 000170AC E9F60C0000                      jmp L_error_incorrect_type
 30693                                  .L_integer:
 30694 000170B1 4883780100                      cmp qword [rax + 1], 0
 30695 000170B6 7429                            je .L_zero
 30696 000170B8 EB1B                            jmp .L_not_zero
 30697                                  .L_fraction:
 30698 000170BA 4883780100                      cmp qword [rax + 1], 0
 30699 000170BF 7420                            je .L_zero
 30700 000170C1 EB12                            jmp .L_not_zero
 30701                                  .L_real:
 30702 000170C3 660FEFC0                        pxor xmm0, xmm0
 30703 000170C7 FF7001                          push qword [rax + 1]
 30704 000170CA F20F100C24                      movsd xmm1, qword [rsp]
 30705 000170CF 660F2EC1                        ucomisd xmm0, xmm1
 30706 000170D3 740C                            je .L_zero
 30707                                  .L_not_zero:
 30708 000170D5 48B8-                           mov rax, sob_boolean_false
 30708 000170D7 [0200000000000000] 
 30709 000170DF EB0A                            jmp .L_end
 30710                                  .L_zero:
 30711 000170E1 48B8-                           mov rax, sob_boolean_true
 30711 000170E3 [0300000000000000] 
 30712                                  .L_end:
 30713 000170EB C9                              leave
 30714 000170EC C21800                          ret AND_KILL_FRAME(1)
 30715                                  
 30716                                  L_code_ptr_is_integer:
 30717 000170EF C8000000                        enter 0, 0
 30718 000170F3 48837D1801                      cmp COUNT, 1
 30719 000170F8 0F85D50B0000                    jne L_error_arg_count_1
 30720 000170FE 488B4520                        mov rax, PARAM(0)
 30721 00017102 803811                          cmp byte [rax], T_integer
 30722 00017105 750C                            jne .L_false
 30723 00017107 48B8-                           mov rax, sob_boolean_true
 30723 00017109 [0300000000000000] 
 30724 00017111 EB0A                            jmp .L_exit
 30725                                  .L_false:
 30726 00017113 48B8-                           mov rax, sob_boolean_false
 30726 00017115 [0200000000000000] 
 30727                                  .L_exit:
 30728 0001711D C9                              leave
 30729 0001711E C21800                          ret AND_KILL_FRAME(1)
 30730                                  
 30731                                  L_code_ptr_raw_bin_add_rr:
 30732 00017121 C8000000                        enter 0, 0
 30733 00017125 48837D1802                      cmp COUNT, 2
 30734 0001712A 0F85D80B0000                    jne L_error_arg_count_2
 30735 00017130 488B5D20                        mov rbx, PARAM(0)
 30736                                          assert_real(rbx)
    53 00017134 803B13              <1>  cmp byte [%1], %2
    54 00017137 0F856A0C0000        <1>  jne L_error_incorrect_type
 30737 0001713D 488B4D28                        mov rcx, PARAM(1)
 30738                                          assert_real(rcx)
    53 00017141 803913              <1>  cmp byte [%1], %2
    54 00017144 0F855D0C0000        <1>  jne L_error_incorrect_type
 30739 0001714A F20F104301                      movsd xmm0, qword [rbx + 1]
 30740 0001714F F20F104901                      movsd xmm1, qword [rcx + 1]
 30741 00017154 F20F58C1                        addsd xmm0, xmm1
 30742 00017158 E8AD0A0000                      call make_real
 30743 0001715D C9                              leave
 30744 0001715E C22000                          ret AND_KILL_FRAME(2)
 30745                                  
 30746                                  L_code_ptr_raw_bin_sub_rr:
 30747 00017161 C8000000                        enter 0, 0
 30748 00017165 48837D1802                      cmp COUNT, 2
 30749 0001716A 0F85980B0000                    jne L_error_arg_count_2
 30750 00017170 488B5D20                        mov rbx, PARAM(0)
 30751                                          assert_real(rbx)
    53 00017174 803B13              <1>  cmp byte [%1], %2
    54 00017177 0F852A0C0000        <1>  jne L_error_incorrect_type
 30752 0001717D 488B4D28                        mov rcx, PARAM(1)
 30753                                          assert_real(rcx)
    53 00017181 803913              <1>  cmp byte [%1], %2
    54 00017184 0F851D0C0000        <1>  jne L_error_incorrect_type
 30754 0001718A F20F104301                      movsd xmm0, qword [rbx + 1]
 30755 0001718F F20F104901                      movsd xmm1, qword [rcx + 1]
 30756 00017194 F20F5CC1                        subsd xmm0, xmm1
 30757 00017198 E86D0A0000                      call make_real
 30758 0001719D C9                              leave
 30759 0001719E C22000                          ret AND_KILL_FRAME(2)
 30760                                  
 30761                                  L_code_ptr_raw_bin_mul_rr:
 30762 000171A1 C8000000                        enter 0, 0
 30763 000171A5 48837D1802                      cmp COUNT, 2
 30764 000171AA 0F85580B0000                    jne L_error_arg_count_2
 30765 000171B0 488B5D20                        mov rbx, PARAM(0)
 30766                                          assert_real(rbx)
    53 000171B4 803B13              <1>  cmp byte [%1], %2
    54 000171B7 0F85EA0B0000        <1>  jne L_error_incorrect_type
 30767 000171BD 488B4D28                        mov rcx, PARAM(1)
 30768                                          assert_real(rcx)
    53 000171C1 803913              <1>  cmp byte [%1], %2
    54 000171C4 0F85DD0B0000        <1>  jne L_error_incorrect_type
 30769 000171CA F20F104301                      movsd xmm0, qword [rbx + 1]
 30770 000171CF F20F104901                      movsd xmm1, qword [rcx + 1]
 30771 000171D4 F20F59C1                        mulsd xmm0, xmm1
 30772 000171D8 E82D0A0000                      call make_real
 30773 000171DD C9                              leave
 30774 000171DE C22000                          ret AND_KILL_FRAME(2)
 30775                                  
 30776                                  L_code_ptr_raw_bin_div_rr:
 30777 000171E1 C8000000                        enter 0, 0
 30778 000171E5 48837D1802                      cmp COUNT, 2
 30779 000171EA 0F85180B0000                    jne L_error_arg_count_2
 30780 000171F0 488B5D20                        mov rbx, PARAM(0)
 30781                                          assert_real(rbx)
    53 000171F4 803B13              <1>  cmp byte [%1], %2
    54 000171F7 0F85AA0B0000        <1>  jne L_error_incorrect_type
 30782 000171FD 488B4D28                        mov rcx, PARAM(1)
 30783                                          assert_real(rcx)
    53 00017201 803913              <1>  cmp byte [%1], %2
    54 00017204 0F859D0B0000        <1>  jne L_error_incorrect_type
 30784 0001720A F20F104301                      movsd xmm0, qword [rbx + 1]
 30785 0001720F F20F104901                      movsd xmm1, qword [rcx + 1]
 30786 00017214 660FEFD2                        pxor xmm2, xmm2
 30787 00017218 660F2ECA                        ucomisd xmm1, xmm2
 30788 0001721C 0F84B60B0000                    je L_error_division_by_zero
 30789 00017222 F20F5EC1                        divsd xmm0, xmm1
 30790 00017226 E8DF090000                      call make_real
 30791 0001722B C9                              leave
 30792 0001722C C22000                          ret AND_KILL_FRAME(2)
 30793                                  
 30794                                  L_code_ptr_raw_bin_add_zz:
 30795 0001722F C8000000                	enter 0, 0
 30796 00017233 48837D1802              	cmp COUNT, 2
 30797 00017238 0F85CA0A0000            	jne L_error_arg_count_2
 30798 0001723E 4C8B4520                	mov r8, PARAM(0)
 30799                                  	assert_integer(r8)
    53 00017242 41803811            <1>  cmp byte [%1], %2
    54 00017246 0F855B0B0000        <1>  jne L_error_incorrect_type
 30800 0001724C 4C8B4D28                	mov r9, PARAM(1)
 30801                                  	assert_integer(r9)
    53 00017250 41803911            <1>  cmp byte [%1], %2
    54 00017254 0F854D0B0000        <1>  jne L_error_incorrect_type
 30802 0001725A 498B7801                	mov rdi, qword [r8 + 1]
 30803 0001725E 49037901                	add rdi, qword [r9 + 1]
 30804 00017262 E8BB090000              	call make_integer
 30805 00017267 C9                      	leave
 30806 00017268 C22000                  	ret AND_KILL_FRAME(2)
 30807                                  
 30808                                  L_code_ptr_raw_bin_add_qq:
 30809 0001726B C8000000                        enter 0, 0
 30810 0001726F 48837D1802                      cmp COUNT, 2
 30811 00017274 0F858E0A0000                    jne L_error_arg_count_2
 30812 0001727A 4C8B4520                        mov r8, PARAM(0)
 30813                                          assert_fraction(r8)
    53 0001727E 41803812            <1>  cmp byte [%1], %2
    54 00017282 0F851F0B0000        <1>  jne L_error_incorrect_type
 30814 00017288 4C8B4D28                        mov r9, PARAM(1)
 30815                                          assert_fraction(r9)
    53 0001728C 41803912            <1>  cmp byte [%1], %2
    54 00017290 0F85110B0000        <1>  jne L_error_incorrect_type
 30816 00017296 498B4001                        mov rax, qword [r8 + 1] ; num1
 30817 0001729A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30818 0001729E 4899                            cqo
 30819 000172A0 48F7EB                          imul rbx
 30820 000172A3 4889C6                          mov rsi, rax
 30821 000172A6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30822 000172AA 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30823 000172AE 4899                            cqo
 30824 000172B0 48F7EB                          imul rbx
 30825 000172B3 4801C6                          add rsi, rax
 30826 000172B6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30827 000172BA 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30828 000172BE 4899                            cqo
 30829 000172C0 48F7EB                          imul rbx
 30830 000172C3 4889C7                          mov rdi, rax
 30831 000172C6 E8DE010000                      call normalize_fraction
 30832 000172CB C9                              leave
 30833 000172CC C22000                          ret AND_KILL_FRAME(2)
 30834                                  
 30835                                  L_code_ptr_raw_bin_sub_zz:
 30836 000172CF C8000000                	enter 0, 0
 30837 000172D3 48837D1802              	cmp COUNT, 2
 30838 000172D8 0F852A0A0000            	jne L_error_arg_count_2
 30839 000172DE 4C8B4520                	mov r8, PARAM(0)
 30840                                  	assert_integer(r8)
    53 000172E2 41803811            <1>  cmp byte [%1], %2
    54 000172E6 0F85BB0A0000        <1>  jne L_error_incorrect_type
 30841 000172EC 4C8B4D28                	mov r9, PARAM(1)
 30842                                  	assert_integer(r9)
    53 000172F0 41803911            <1>  cmp byte [%1], %2
    54 000172F4 0F85AD0A0000        <1>  jne L_error_incorrect_type
 30843 000172FA 498B7801                	mov rdi, qword [r8 + 1]
 30844 000172FE 492B7901                	sub rdi, qword [r9 + 1]
 30845 00017302 E81B090000              	call make_integer
 30846 00017307 C9                      	leave
 30847 00017308 C22000                  	ret AND_KILL_FRAME(2)
 30848                                  
 30849                                  L_code_ptr_raw_bin_sub_qq:
 30850 0001730B C8000000                        enter 0, 0
 30851 0001730F 48837D1802                      cmp COUNT, 2
 30852 00017314 0F85EE090000                    jne L_error_arg_count_2
 30853 0001731A 4C8B4520                        mov r8, PARAM(0)
 30854                                          assert_fraction(r8)
    53 0001731E 41803812            <1>  cmp byte [%1], %2
    54 00017322 0F857F0A0000        <1>  jne L_error_incorrect_type
 30855 00017328 4C8B4D28                        mov r9, PARAM(1)
 30856                                          assert_fraction(r9)
    53 0001732C 41803912            <1>  cmp byte [%1], %2
    54 00017330 0F85710A0000        <1>  jne L_error_incorrect_type
 30857 00017336 498B4001                        mov rax, qword [r8 + 1] ; num1
 30858 0001733A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30859 0001733E 4899                            cqo
 30860 00017340 48F7EB                          imul rbx
 30861 00017343 4889C6                          mov rsi, rax
 30862 00017346 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30863 0001734A 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30864 0001734E 4899                            cqo
 30865 00017350 48F7EB                          imul rbx
 30866 00017353 4829C6                          sub rsi, rax
 30867 00017356 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30868 0001735A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30869 0001735E 4899                            cqo
 30870 00017360 48F7EB                          imul rbx
 30871 00017363 4889C7                          mov rdi, rax
 30872 00017366 E83E010000                      call normalize_fraction
 30873 0001736B C9                              leave
 30874 0001736C C22000                          ret AND_KILL_FRAME(2)
 30875                                  
 30876                                  L_code_ptr_raw_bin_mul_zz:
 30877 0001736F C8000000                	enter 0, 0
 30878 00017373 48837D1802              	cmp COUNT, 2
 30879 00017378 0F858A090000            	jne L_error_arg_count_2
 30880 0001737E 4C8B4520                	mov r8, PARAM(0)
 30881                                  	assert_integer(r8)
    53 00017382 41803811            <1>  cmp byte [%1], %2
    54 00017386 0F851B0A0000        <1>  jne L_error_incorrect_type
 30882 0001738C 4C8B4D28                	mov r9, PARAM(1)
 30883                                  	assert_integer(r9)
    53 00017390 41803911            <1>  cmp byte [%1], %2
    54 00017394 0F850D0A0000        <1>  jne L_error_incorrect_type
 30884 0001739A 4899                    	cqo
 30885 0001739C 498B4001                	mov rax, qword [r8 + 1]
 30886 000173A0 49F76101                	mul qword [r9 + 1]
 30887 000173A4 4889C7                  	mov rdi, rax
 30888 000173A7 E876080000              	call make_integer
 30889 000173AC C9                      	leave
 30890 000173AD C22000                  	ret AND_KILL_FRAME(2)
 30891                                  
 30892                                  L_code_ptr_raw_bin_mul_qq:
 30893 000173B0 C8000000                        enter 0, 0
 30894 000173B4 48837D1802                      cmp COUNT, 2
 30895 000173B9 0F8549090000                    jne L_error_arg_count_2
 30896 000173BF 4C8B4520                        mov r8, PARAM(0)
 30897                                          assert_fraction(r8)
    53 000173C3 41803812            <1>  cmp byte [%1], %2
    54 000173C7 0F85DA090000        <1>  jne L_error_incorrect_type
 30898 000173CD 4C8B4D28                        mov r9, PARAM(1)
 30899                                          assert_fraction(r9)
    53 000173D1 41803912            <1>  cmp byte [%1], %2
    54 000173D5 0F85CC090000        <1>  jne L_error_incorrect_type
 30900 000173DB 498B4001                        mov rax, qword [r8 + 1] ; num1
 30901 000173DF 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30902 000173E3 4899                            cqo
 30903 000173E5 48F7EB                          imul rbx
 30904 000173E8 4889C6                          mov rsi, rax
 30905 000173EB 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30906 000173EF 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30907 000173F3 4899                            cqo
 30908 000173F5 48F7EB                          imul rbx
 30909 000173F8 4889C7                          mov rdi, rax
 30910 000173FB E8A9000000                      call normalize_fraction
 30911 00017400 C9                              leave
 30912 00017401 C22000                          ret AND_KILL_FRAME(2)
 30913                                          
 30914                                  L_code_ptr_raw_bin_div_zz:
 30915 00017404 C8000000                	enter 0, 0
 30916 00017408 48837D1802              	cmp COUNT, 2
 30917 0001740D 0F85F5080000            	jne L_error_arg_count_2
 30918 00017413 4C8B4520                	mov r8, PARAM(0)
 30919                                  	assert_integer(r8)
    53 00017417 41803811            <1>  cmp byte [%1], %2
    54 0001741B 0F8586090000        <1>  jne L_error_incorrect_type
 30920 00017421 4C8B4D28                	mov r9, PARAM(1)
 30921                                  	assert_integer(r9)
    53 00017425 41803911            <1>  cmp byte [%1], %2
    54 00017429 0F8578090000        <1>  jne L_error_incorrect_type
 30922 0001742F 498B7901                	mov rdi, qword [r9 + 1]
 30923 00017433 4883FF00                	cmp rdi, 0
 30924 00017437 0F849B090000            	je L_error_division_by_zero
 30925 0001743D 498B7001                	mov rsi, qword [r8 + 1]
 30926 00017441 E863000000              	call normalize_fraction
 30927 00017446 C9                      	leave
 30928 00017447 C22000                  	ret AND_KILL_FRAME(2)
 30929                                  
 30930                                  L_code_ptr_raw_bin_div_qq:
 30931 0001744A C8000000                        enter 0, 0
 30932 0001744E 48837D1802                      cmp COUNT, 2
 30933 00017453 0F85AF080000                    jne L_error_arg_count_2
 30934 00017459 4C8B4520                        mov r8, PARAM(0)
 30935                                          assert_fraction(r8)
    53 0001745D 41803812            <1>  cmp byte [%1], %2
    54 00017461 0F8540090000        <1>  jne L_error_incorrect_type
 30936 00017467 4C8B4D28                        mov r9, PARAM(1)
 30937                                          assert_fraction(r9)
    53 0001746B 41803912            <1>  cmp byte [%1], %2
    54 0001746F 0F8532090000        <1>  jne L_error_incorrect_type
 30938 00017475 4983790100                      cmp qword [r9 + 1], 0
 30939 0001747A 0F8458090000                    je L_error_division_by_zero
 30940 00017480 498B4001                        mov rax, qword [r8 + 1] ; num1
 30941 00017484 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30942 00017488 4899                            cqo
 30943 0001748A 48F7EB                          imul rbx
 30944 0001748D 4889C6                          mov rsi, rax
 30945 00017490 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30946 00017494 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30947 00017498 4899                            cqo
 30948 0001749A 48F7EB                          imul rbx
 30949 0001749D 4889C7                          mov rdi, rax
 30950 000174A0 E804000000                      call normalize_fraction
 30951 000174A5 C9                              leave
 30952 000174A6 C22000                          ret AND_KILL_FRAME(2)
 30953                                          
 30954                                  normalize_fraction:
 30955 000174A9 56                              push rsi
 30956 000174AA 57                              push rdi
 30957 000174AB E859000000                      call gcd
 30958 000174B0 4889C3                          mov rbx, rax
 30959 000174B3 58                              pop rax
 30960 000174B4 4899                            cqo
 30961 000174B6 48F7FB                          idiv rbx
 30962 000174B9 4989C0                          mov r8, rax
 30963 000174BC 58                              pop rax
 30964 000174BD 4899                            cqo
 30965 000174BF 48F7FB                          idiv rbx
 30966 000174C2 4989C1                          mov r9, rax
 30967 000174C5 4983F900                        cmp r9, 0
 30968 000174C9 741C                            je .L_zero
 30969 000174CB 4983F801                        cmp r8, 1
 30970 000174CF 7421                            je .L_int
 30971 000174D1 BF11000000                      mov rdi, (1 + 8 + 8)
 30972 000174D6 E8B0EBFFFF                      call malloc
 30973 000174DB C60012                          mov byte [rax], T_fraction
 30974 000174DE 4C894801                        mov qword [rax + 1], r9
 30975 000174E2 4C894009                        mov qword [rax + 1 + 8], r8
 30976 000174E6 C3                              ret
 30977                                  .L_zero:
 30978 000174E7 BF00000000                      mov rdi, 0
 30979 000174EC E831070000                      call make_integer
 30980 000174F1 C3                              ret
 30981                                  .L_int:
 30982 000174F2 4C89CF                          mov rdi, r9
 30983 000174F5 E828070000                      call make_integer
 30984 000174FA C3                              ret
 30985                                  
 30986                                  iabs:
 30987 000174FB 4889F8                          mov rax, rdi
 30988 000174FE 4883F800                        cmp rax, 0
 30989 00017502 7C01                            jl .Lneg
 30990 00017504 C3                              ret
 30991                                  .Lneg:
 30992 00017505 48F7D8                          neg rax
 30993 00017508 C3                              ret
 30994                                  
 30995                                  gcd:
 30996 00017509 E8EDFFFFFF                      call iabs
 30997 0001750E 4889C3                          mov rbx, rax
 30998 00017511 4889F7                          mov rdi, rsi
 30999 00017514 E8E2FFFFFF                      call iabs
 31000 00017519 4883F800                        cmp rax, 0
 31001 0001751D 7502                            jne .L0
 31002 0001751F 4893                            xchg rax, rbx
 31003                                  .L0:
 31004 00017521 4883FB00                        cmp rbx, 0
 31005 00017525 740C                            je .L1
 31006 00017527 4899                            cqo
 31007 00017529 48F7F3                          div rbx
 31008 0001752C 4889D0                          mov rax, rdx
 31009 0001752F 4893                            xchg rax, rbx
 31010 00017531 EBEE                            jmp .L0
 31011                                  .L1:
 31012 00017533 C3                              ret
 31013                                  
 31014                                  L_code_ptr_error:
 31015 00017534 C8000000                        enter 0, 0
 31016 00017538 48837D1802                      cmp COUNT, 2
 31017 0001753D 0F85C5070000                    jne L_error_arg_count_2
 31018 00017543 488B7520                        mov rsi, PARAM(0)
 31019                                          assert_interned_symbol(rsi)
    53 00017547 803E41              <1>  cmp byte [%1], %2
    54 0001754A 0F8557080000        <1>  jne L_error_incorrect_type
 31020 00017550 488B7528                        mov rsi, PARAM(1)
 31021                                          assert_string(rsi)
    53 00017554 803E03              <1>  cmp byte [%1], %2
    54 00017557 0F854A080000        <1>  jne L_error_incorrect_type
 31022 0001755D 48BF-                           mov rdi, fmt_scheme_error_part_1
 31022 0001755F [491C000000000000] 
 31023 00017567 B800000000                      mov rax, 0
 31024                                          ENTER
    44 0001756C C8000000            <1>  enter 0, 0
    45 00017570 4883E4F0            <1>  and rsp, ~15
 31025 00017574 E8(00000000)                    call printf
 31026                                          LEAVE
    49 00017579 C9                  <1>  leave
 31027 0001757A 488B7D20                        mov rdi, PARAM(0)
 31028 0001757E E889EDFFFF                      call print_sexpr
 31029 00017583 48BF-                           mov rdi, fmt_scheme_error_part_2
 31029 00017585 [5D1C000000000000] 
 31030 0001758D B800000000                      mov rax, 0
 31031                                          ENTER
    44 00017592 C8000000            <1>  enter 0, 0
    45 00017596 4883E4F0            <1>  and rsp, ~15
 31032 0001759A E8(00000000)                    call printf
 31033                                          LEAVE
    49 0001759F C9                  <1>  leave
 31034 000175A0 488B4528                        mov rax, PARAM(1)       ; sob_string
 31035 000175A4 BE01000000                      mov rsi, 1              ; size = 1 byte
 31036 000175A9 488B5001                        mov rdx, qword [rax + 1] ; length
 31037 000175AD 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31038 000175B1 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 31039                                  	ENTER
    44 000175B9 C8000000            <1>  enter 0, 0
    45 000175BD 4883E4F0            <1>  and rsp, ~15
 31040 000175C1 E8(00000000)                    call fwrite
 31041                                  	LEAVE
    49 000175C6 C9                  <1>  leave
 31042 000175C7 48BF-                           mov rdi, fmt_scheme_error_part_3
 31042 000175C9 [9F1C000000000000] 
 31043 000175D1 B800000000                      mov rax, 0
 31044                                          ENTER
    44 000175D6 C8000000            <1>  enter 0, 0
    45 000175DA 4883E4F0            <1>  and rsp, ~15
 31045 000175DE E8(00000000)                    call printf
 31046                                          LEAVE
    49 000175E3 C9                  <1>  leave
 31047 000175E4 48C7C0F7FFFFFF                  mov rax, -9
 31048 000175EB E8(00000000)                    call exit
 31049                                  
 31050                                  L_code_ptr_raw_less_than_rr:
 31051 000175F0 C8000000                        enter 0, 0
 31052 000175F4 48837D1802                      cmp COUNT, 2
 31053 000175F9 0F8509070000                    jne L_error_arg_count_2
 31054 000175FF 488B7520                        mov rsi, PARAM(0)
 31055                                          assert_real(rsi)
    53 00017603 803E13              <1>  cmp byte [%1], %2
    54 00017606 0F859B070000        <1>  jne L_error_incorrect_type
 31056 0001760C 488B7D28                        mov rdi, PARAM(1)
 31057                                          assert_real(rdi)
    53 00017610 803F13              <1>  cmp byte [%1], %2
    54 00017613 0F858E070000        <1>  jne L_error_incorrect_type
 31058 00017619 F20F104601                      movsd xmm0, qword [rsi + 1]
 31059 0001761E F20F104F01                      movsd xmm1, qword [rdi + 1]
 31060 00017623 660F2FC1                        comisd xmm0, xmm1
 31061 00017627 730C                            jae .L_false
 31062 00017629 48B8-                           mov rax, sob_boolean_true
 31062 0001762B [0300000000000000] 
 31063 00017633 EB0A                            jmp .L_exit
 31064                                  .L_false:
 31065 00017635 48B8-                           mov rax, sob_boolean_false
 31065 00017637 [0200000000000000] 
 31066                                  .L_exit:
 31067 0001763F C9                              leave
 31068 00017640 C22000                          ret AND_KILL_FRAME(2)
 31069                                          
 31070                                  L_code_ptr_raw_less_than_zz:
 31071 00017643 C8000000                	enter 0, 0
 31072 00017647 48837D1802              	cmp COUNT, 2
 31073 0001764C 0F85B6060000            	jne L_error_arg_count_2
 31074 00017652 4C8B4520                	mov r8, PARAM(0)
 31075                                  	assert_integer(r8)
    53 00017656 41803811            <1>  cmp byte [%1], %2
    54 0001765A 0F8547070000        <1>  jne L_error_incorrect_type
 31076 00017660 4C8B4D28                	mov r9, PARAM(1)
 31077                                  	assert_integer(r9)
    53 00017664 41803911            <1>  cmp byte [%1], %2
    54 00017668 0F8539070000        <1>  jne L_error_incorrect_type
 31078 0001766E 498B7801                	mov rdi, qword [r8 + 1]
 31079 00017672 493B7901                	cmp rdi, qword [r9 + 1]
 31080 00017676 7D0C                    	jge .L_false
 31081 00017678 48B8-                   	mov rax, sob_boolean_true
 31081 0001767A [0300000000000000] 
 31082 00017682 EB0A                    	jmp .L_exit
 31083                                  .L_false:
 31084 00017684 48B8-                   	mov rax, sob_boolean_false
 31084 00017686 [0200000000000000] 
 31085                                  .L_exit:
 31086 0001768E C9                      	leave
 31087 0001768F C22000                  	ret AND_KILL_FRAME(2)
 31088                                  
 31089                                  L_code_ptr_raw_less_than_qq:
 31090 00017692 C8000000                        enter 0, 0
 31091 00017696 48837D1802                      cmp COUNT, 2
 31092 0001769B 0F8567060000                    jne L_error_arg_count_2
 31093 000176A1 488B7520                        mov rsi, PARAM(0)
 31094                                          assert_fraction(rsi)
    53 000176A5 803E12              <1>  cmp byte [%1], %2
    54 000176A8 0F85F9060000        <1>  jne L_error_incorrect_type
 31095 000176AE 488B7D28                        mov rdi, PARAM(1)
 31096                                          assert_fraction(rdi)
    53 000176B2 803F12              <1>  cmp byte [%1], %2
    54 000176B5 0F85EC060000        <1>  jne L_error_incorrect_type
 31097 000176BB 488B4601                        mov rax, qword [rsi + 1] ; num1
 31098 000176BF 4899                            cqo
 31099 000176C1 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31100 000176C5 4889C1                          mov rcx, rax
 31101 000176C8 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 31102 000176CC 4899                            cqo
 31103 000176CE 48F76F01                        imul qword [rdi + 1]          ; num2
 31104 000176D2 4829C1                          sub rcx, rax
 31105 000176D5 7D0C                            jge .L_false
 31106 000176D7 48B8-                           mov rax, sob_boolean_true
 31106 000176D9 [0300000000000000] 
 31107 000176E1 EB0A                            jmp .L_exit
 31108                                  .L_false:
 31109 000176E3 48B8-                           mov rax, sob_boolean_false
 31109 000176E5 [0200000000000000] 
 31110                                  .L_exit:
 31111 000176ED C9                              leave
 31112 000176EE C22000                          ret AND_KILL_FRAME(2)
 31113                                  
 31114                                  L_code_ptr_raw_equal_rr:
 31115 000176F1 C8000000                        enter 0, 0
 31116 000176F5 48837D1802                      cmp COUNT, 2
 31117 000176FA 0F8508060000                    jne L_error_arg_count_2
 31118 00017700 488B7520                        mov rsi, PARAM(0)
 31119                                          assert_real(rsi)
    53 00017704 803E13              <1>  cmp byte [%1], %2
    54 00017707 0F859A060000        <1>  jne L_error_incorrect_type
 31120 0001770D 488B7D28                        mov rdi, PARAM(1)
 31121                                          assert_real(rdi)
    53 00017711 803F13              <1>  cmp byte [%1], %2
    54 00017714 0F858D060000        <1>  jne L_error_incorrect_type
 31122 0001771A F20F104601                      movsd xmm0, qword [rsi + 1]
 31123 0001771F F20F104F01                      movsd xmm1, qword [rdi + 1]
 31124 00017724 660F2FC1                        comisd xmm0, xmm1
 31125 00017728 750C                            jne .L_false
 31126 0001772A 48B8-                           mov rax, sob_boolean_true
 31126 0001772C [0300000000000000] 
 31127 00017734 EB0A                            jmp .L_exit
 31128                                  .L_false:
 31129 00017736 48B8-                           mov rax, sob_boolean_false
 31129 00017738 [0200000000000000] 
 31130                                  .L_exit:
 31131 00017740 C9                              leave
 31132 00017741 C22000                          ret AND_KILL_FRAME(2)
 31133                                          
 31134                                  L_code_ptr_raw_equal_zz:
 31135 00017744 C8000000                	enter 0, 0
 31136 00017748 48837D1802              	cmp COUNT, 2
 31137 0001774D 0F85B5050000            	jne L_error_arg_count_2
 31138 00017753 4C8B4520                	mov r8, PARAM(0)
 31139                                  	assert_integer(r8)
    53 00017757 41803811            <1>  cmp byte [%1], %2
    54 0001775B 0F8546060000        <1>  jne L_error_incorrect_type
 31140 00017761 4C8B4D28                	mov r9, PARAM(1)
 31141                                  	assert_integer(r9)
    53 00017765 41803911            <1>  cmp byte [%1], %2
    54 00017769 0F8538060000        <1>  jne L_error_incorrect_type
 31142 0001776F 498B7801                	mov rdi, qword [r8 + 1]
 31143 00017773 493B7901                	cmp rdi, qword [r9 + 1]
 31144 00017777 750C                    	jne .L_false
 31145 00017779 48B8-                   	mov rax, sob_boolean_true
 31145 0001777B [0300000000000000] 
 31146 00017783 EB0A                    	jmp .L_exit
 31147                                  .L_false:
 31148 00017785 48B8-                   	mov rax, sob_boolean_false
 31148 00017787 [0200000000000000] 
 31149                                  .L_exit:
 31150 0001778F C9                      	leave
 31151 00017790 C22000                  	ret AND_KILL_FRAME(2)
 31152                                  
 31153                                  L_code_ptr_raw_equal_qq:
 31154 00017793 C8000000                        enter 0, 0
 31155 00017797 48837D1802                      cmp COUNT, 2
 31156 0001779C 0F8566050000                    jne L_error_arg_count_2
 31157 000177A2 488B7520                        mov rsi, PARAM(0)
 31158                                          assert_fraction(rsi)
    53 000177A6 803E12              <1>  cmp byte [%1], %2
    54 000177A9 0F85F8050000        <1>  jne L_error_incorrect_type
 31159 000177AF 488B7D28                        mov rdi, PARAM(1)
 31160                                          assert_fraction(rdi)
    53 000177B3 803F12              <1>  cmp byte [%1], %2
    54 000177B6 0F85EB050000        <1>  jne L_error_incorrect_type
 31161 000177BC 488B4601                        mov rax, qword [rsi + 1] ; num1
 31162 000177C0 4899                            cqo
 31163 000177C2 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31164 000177C6 4889C1                          mov rcx, rax
 31165 000177C9 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 31166 000177CD 4899                            cqo
 31167 000177CF 48F76F01                        imul qword [rdi + 1]          ; num2
 31168 000177D3 4829C1                          sub rcx, rax
 31169 000177D6 750C                            jne .L_false
 31170 000177D8 48B8-                           mov rax, sob_boolean_true
 31170 000177DA [0300000000000000] 
 31171 000177E2 EB0A                            jmp .L_exit
 31172                                  .L_false:
 31173 000177E4 48B8-                           mov rax, sob_boolean_false
 31173 000177E6 [0200000000000000] 
 31174                                  .L_exit:
 31175 000177EE C9                              leave
 31176 000177EF C22000                          ret AND_KILL_FRAME(2)
 31177                                  
 31178                                  L_code_ptr_quotient:
 31179 000177F2 C8000000                        enter 0, 0
 31180 000177F6 48837D1802                      cmp COUNT, 2
 31181 000177FB 0F8507050000                    jne L_error_arg_count_2
 31182 00017801 488B7520                        mov rsi, PARAM(0)
 31183                                          assert_integer(rsi)
    53 00017805 803E11              <1>  cmp byte [%1], %2
    54 00017808 0F8599050000        <1>  jne L_error_incorrect_type
 31184 0001780E 488B7D28                        mov rdi, PARAM(1)
 31185                                          assert_integer(rdi)
    53 00017812 803F11              <1>  cmp byte [%1], %2
    54 00017815 0F858C050000        <1>  jne L_error_incorrect_type
 31186 0001781B 488B4601                        mov rax, qword [rsi + 1]
 31187 0001781F 488B5F01                        mov rbx, qword [rdi + 1]
 31188 00017823 4883FB00                        cmp rbx, 0
 31189 00017827 0F84AB050000                    je L_error_division_by_zero
 31190 0001782D 4899                            cqo
 31191 0001782F 48F7FB                          idiv rbx
 31192 00017832 4889C7                          mov rdi, rax
 31193 00017835 E8E8030000                      call make_integer
 31194 0001783A C9                              leave
 31195 0001783B C22000                          ret AND_KILL_FRAME(2)
 31196                                          
 31197                                  L_code_ptr_remainder:
 31198 0001783E C8000000                        enter 0, 0
 31199 00017842 48837D1802                      cmp COUNT, 2
 31200 00017847 0F85BB040000                    jne L_error_arg_count_2
 31201 0001784D 488B7520                        mov rsi, PARAM(0)
 31202                                          assert_integer(rsi)
    53 00017851 803E11              <1>  cmp byte [%1], %2
    54 00017854 0F854D050000        <1>  jne L_error_incorrect_type
 31203 0001785A 488B7D28                        mov rdi, PARAM(1)
 31204                                          assert_integer(rdi)
    53 0001785E 803F11              <1>  cmp byte [%1], %2
    54 00017861 0F8540050000        <1>  jne L_error_incorrect_type
 31205 00017867 488B4601                        mov rax, qword [rsi + 1]
 31206 0001786B 488B5F01                        mov rbx, qword [rdi + 1]
 31207 0001786F 4883FB00                        cmp rbx, 0
 31208 00017873 0F845F050000                    je L_error_division_by_zero
 31209 00017879 4899                            cqo
 31210 0001787B 48F7FB                          idiv rbx
 31211 0001787E 4889D7                          mov rdi, rdx
 31212 00017881 E89C030000                      call make_integer
 31213 00017886 C9                              leave
 31214 00017887 C22000                          ret AND_KILL_FRAME(2)
 31215                                  
 31216                                  L_code_ptr_set_car:
 31217 0001788A C8000000                        enter 0, 0
 31218 0001788E 48837D1802                      cmp COUNT, 2
 31219 00017893 0F856F040000                    jne L_error_arg_count_2
 31220 00017899 488B4520                        mov rax, PARAM(0)
 31221                                          assert_pair(rax)
    53 0001789D 803821              <1>  cmp byte [%1], %2
    54 000178A0 0F8501050000        <1>  jne L_error_incorrect_type
 31222 000178A6 488B5D28                        mov rbx, PARAM(1)
 31223 000178AA 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31224 000178AE 48B8-                           mov rax, sob_void
 31224 000178B0 [0000000000000000] 
 31225 000178B8 C9                              leave
 31226 000178B9 C22000                          ret AND_KILL_FRAME(2)
 31227                                  
 31228                                  L_code_ptr_set_cdr:
 31229 000178BC C8000000                        enter 0, 0
 31230 000178C0 48837D1802                      cmp COUNT, 2
 31231 000178C5 0F853D040000                    jne L_error_arg_count_2
 31232 000178CB 488B4520                        mov rax, PARAM(0)
 31233                                          assert_pair(rax)
    53 000178CF 803821              <1>  cmp byte [%1], %2
    54 000178D2 0F85CF040000        <1>  jne L_error_incorrect_type
 31234 000178D8 488B5D28                        mov rbx, PARAM(1)
 31235 000178DC 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31236 000178E0 48B8-                           mov rax, sob_void
 31236 000178E2 [0000000000000000] 
 31237 000178EA C9                              leave
 31238 000178EB C22000                          ret AND_KILL_FRAME(2)
 31239                                  
 31240                                  L_code_ptr_string_ref:
 31241 000178EE C8000000                        enter 0, 0
 31242 000178F2 48837D1802                      cmp COUNT, 2
 31243 000178F7 0F850B040000                    jne L_error_arg_count_2
 31244 000178FD 488B7D20                        mov rdi, PARAM(0)
 31245                                          assert_string(rdi)
    53 00017901 803F03              <1>  cmp byte [%1], %2
    54 00017904 0F859D040000        <1>  jne L_error_incorrect_type
 31246 0001790A 488B7528                        mov rsi, PARAM(1)
 31247                                          assert_integer(rsi)
    53 0001790E 803E11              <1>  cmp byte [%1], %2
    54 00017911 0F8590040000        <1>  jne L_error_incorrect_type
 31248 00017917 488B5701                        mov rdx, qword [rdi + 1]
 31249 0001791B 488B4E01                        mov rcx, qword [rsi + 1]
 31250 0001791F 4839D1                          cmp rcx, rdx
 31251 00017922 0F8D14030000                    jge L_error_integer_range
 31252 00017928 4883F900                        cmp rcx, 0
 31253 0001792C 0F8C0A030000                    jl L_error_integer_range
 31254 00017932 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 31255 00017936 BF02000000                      mov rdi, 2
 31256 0001793B E84BE7FFFF                      call malloc
 31257 00017940 C60002                          mov byte [rax], T_char
 31258 00017943 885801                          mov byte [rax + 1], bl
 31259 00017946 C9                              leave
 31260 00017947 C22000                          ret AND_KILL_FRAME(2)
 31261                                  
 31262                                  L_code_ptr_vector_ref:
 31263 0001794A C8000000                        enter 0, 0
 31264 0001794E 48837D1802                      cmp COUNT, 2
 31265 00017953 0F85AF030000                    jne L_error_arg_count_2
 31266 00017959 488B7D20                        mov rdi, PARAM(0)
 31267                                          assert_vector(rdi)
    53 0001795D 803F22              <1>  cmp byte [%1], %2
    54 00017960 0F8541040000        <1>  jne L_error_incorrect_type
 31268 00017966 488B7528                        mov rsi, PARAM(1)
 31269                                          assert_integer(rsi)
    53 0001796A 803E11              <1>  cmp byte [%1], %2
    54 0001796D 0F8534040000        <1>  jne L_error_incorrect_type
 31270 00017973 488B5701                        mov rdx, qword [rdi + 1]
 31271 00017977 488B4E01                        mov rcx, qword [rsi + 1]
 31272 0001797B 4839D1                          cmp rcx, rdx
 31273 0001797E 0F8DB8020000                    jge L_error_integer_range
 31274 00017984 4883F900                        cmp rcx, 0
 31275 00017988 0F8CAE020000                    jl L_error_integer_range
 31276 0001798E 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 31277 00017993 C9                              leave
 31278 00017994 C22000                          ret AND_KILL_FRAME(2)
 31279                                  
 31280                                  L_code_ptr_vector_set:
 31281 00017997 C8000000                        enter 0, 0
 31282 0001799B 48837D1803                      cmp COUNT, 3
 31283 000179A0 0F85CC030000                    jne L_error_arg_count_3
 31284 000179A6 488B7D20                        mov rdi, PARAM(0)
 31285                                          assert_vector(rdi)
    53 000179AA 803F22              <1>  cmp byte [%1], %2
    54 000179AD 0F85F4030000        <1>  jne L_error_incorrect_type
 31286 000179B3 488B7528                        mov rsi, PARAM(1)
 31287                                          assert_integer(rsi)
    53 000179B7 803E11              <1>  cmp byte [%1], %2
    54 000179BA 0F85E7030000        <1>  jne L_error_incorrect_type
 31288 000179C0 488B5701                        mov rdx, qword [rdi + 1]
 31289 000179C4 488B4E01                        mov rcx, qword [rsi + 1]
 31290 000179C8 4839D1                          cmp rcx, rdx
 31291 000179CB 0F8D6B020000                    jge L_error_integer_range
 31292 000179D1 4883F900                        cmp rcx, 0
 31293 000179D5 0F8C61020000                    jl L_error_integer_range
 31294 000179DB 488B4530                        mov rax, PARAM(2)
 31295 000179DF 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 31296 000179E4 48B8-                           mov rax, sob_void
 31296 000179E6 [0000000000000000] 
 31297 000179EE C9                              leave
 31298 000179EF C22800                          ret AND_KILL_FRAME(3)
 31299                                  
 31300                                  L_code_ptr_string_set:
 31301 000179F2 C8000000                        enter 0, 0
 31302 000179F6 48837D1803                      cmp COUNT, 3
 31303 000179FB 0F8571030000                    jne L_error_arg_count_3
 31304 00017A01 488B7D20                        mov rdi, PARAM(0)
 31305                                          assert_string(rdi)
    53 00017A05 803F03              <1>  cmp byte [%1], %2
    54 00017A08 0F8599030000        <1>  jne L_error_incorrect_type
 31306 00017A0E 488B7528                        mov rsi, PARAM(1)
 31307                                          assert_integer(rsi)
    53 00017A12 803E11              <1>  cmp byte [%1], %2
    54 00017A15 0F858C030000        <1>  jne L_error_incorrect_type
 31308 00017A1B 488B5701                        mov rdx, qword [rdi + 1]
 31309 00017A1F 488B4E01                        mov rcx, qword [rsi + 1]
 31310 00017A23 4839D1                          cmp rcx, rdx
 31311 00017A26 0F8D10020000                    jge L_error_integer_range
 31312 00017A2C 4883F900                        cmp rcx, 0
 31313 00017A30 0F8C06020000                    jl L_error_integer_range
 31314 00017A36 488B4530                        mov rax, PARAM(2)
 31315                                          assert_char(rax)
    53 00017A3A 803802              <1>  cmp byte [%1], %2
    54 00017A3D 0F8564030000        <1>  jne L_error_incorrect_type
 31316 00017A43 8A4001                          mov al, byte [rax + 1]
 31317 00017A46 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 31318 00017A4A 48B8-                           mov rax, sob_void
 31318 00017A4C [0000000000000000] 
 31319 00017A54 C9                              leave
 31320 00017A55 C22800                          ret AND_KILL_FRAME(3)
 31321                                  
 31322                                  L_code_ptr_make_vector:
 31323 00017A58 C8000000                        enter 0, 0
 31324 00017A5C 48837D1802                      cmp COUNT, 2
 31325 00017A61 0F85A1020000                    jne L_error_arg_count_2
 31326 00017A67 488B4D20                        mov rcx, PARAM(0)
 31327                                          assert_integer(rcx)
    53 00017A6B 803911              <1>  cmp byte [%1], %2
    54 00017A6E 0F8533030000        <1>  jne L_error_incorrect_type
 31328 00017A74 488B4901                        mov rcx, qword [rcx + 1]
 31329 00017A78 4883F900                        cmp rcx, 0
 31330 00017A7C 0F8CBA010000                    jl L_error_integer_range
 31331 00017A82 488B5528                        mov rdx, PARAM(1)
 31332 00017A86 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 31333 00017A8E E8F8E5FFFF                      call malloc
 31334 00017A93 C60022                          mov byte [rax], T_vector
 31335 00017A96 48894801                        mov qword [rax + 1], rcx
 31336 00017A9A 41B800000000                    mov r8, 0
 31337                                  .L0:
 31338 00017AA0 4939C8                          cmp r8, rcx
 31339 00017AA3 740A                            je .L1
 31340 00017AA5 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 31341 00017AAA 49FFC0                          inc r8
 31342 00017AAD EBF1                            jmp .L0
 31343                                  .L1:
 31344 00017AAF C9                              leave
 31345 00017AB0 C22000                          ret AND_KILL_FRAME(2)
 31346                                          
 31347                                  L_code_ptr_make_string:
 31348 00017AB3 C8000000                        enter 0, 0
 31349 00017AB7 48837D1802                      cmp COUNT, 2
 31350 00017ABC 0F8546020000                    jne L_error_arg_count_2
 31351 00017AC2 488B4D20                        mov rcx, PARAM(0)
 31352                                          assert_integer(rcx)
    53 00017AC6 803911              <1>  cmp byte [%1], %2
    54 00017AC9 0F85D8020000        <1>  jne L_error_incorrect_type
 31353 00017ACF 488B4901                        mov rcx, qword [rcx + 1]
 31354 00017AD3 4883F900                        cmp rcx, 0
 31355 00017AD7 0F8C5F010000                    jl L_error_integer_range
 31356 00017ADD 488B5528                        mov rdx, PARAM(1)
 31357                                          assert_char(rdx)
    53 00017AE1 803A02              <1>  cmp byte [%1], %2
    54 00017AE4 0F85BD020000        <1>  jne L_error_incorrect_type
 31358 00017AEA 8A5201                          mov dl, byte [rdx + 1]
 31359 00017AED 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 31360 00017AF1 E895E5FFFF                      call malloc
 31361 00017AF6 C60003                          mov byte [rax], T_string
 31362 00017AF9 48894801                        mov qword [rax + 1], rcx
 31363 00017AFD 41B800000000                    mov r8, 0
 31364                                  .L0:
 31365 00017B03 4939C8                          cmp r8, rcx
 31366 00017B06 740A                            je .L1
 31367 00017B08 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 31368 00017B0D 49FFC0                          inc r8
 31369 00017B10 EBF1                            jmp .L0
 31370                                  .L1:
 31371 00017B12 C9                              leave
 31372 00017B13 C22000                          ret AND_KILL_FRAME(2)
 31373                                  
 31374                                  L_code_ptr_numerator:
 31375 00017B16 C8000000                        enter 0, 0
 31376 00017B1A 48837D1801                      cmp COUNT, 1
 31377 00017B1F 0F85AE010000                    jne L_error_arg_count_1
 31378 00017B25 488B4520                        mov rax, PARAM(0)
 31379                                          assert_fraction(rax)
    53 00017B29 803812              <1>  cmp byte [%1], %2
    54 00017B2C 0F8575020000        <1>  jne L_error_incorrect_type
 31380 00017B32 488B7801                        mov rdi, qword [rax + 1]
 31381 00017B36 E8E7000000                      call make_integer
 31382 00017B3B C9                              leave
 31383 00017B3C C21800                          ret AND_KILL_FRAME(1)
 31384                                          
 31385                                  L_code_ptr_denominator:
 31386 00017B3F C8000000                        enter 0, 0
 31387 00017B43 48837D1801                      cmp COUNT, 1
 31388 00017B48 0F8585010000                    jne L_error_arg_count_1
 31389 00017B4E 488B4520                        mov rax, PARAM(0)
 31390                                          assert_fraction(rax)
    53 00017B52 803812              <1>  cmp byte [%1], %2
    54 00017B55 0F854C020000        <1>  jne L_error_incorrect_type
 31391 00017B5B 488B7809                        mov rdi, qword [rax + 1 + 8]
 31392 00017B5F E8BE000000                      call make_integer
 31393 00017B64 C9                              leave
 31394 00017B65 C21800                          ret AND_KILL_FRAME(1)
 31395                                  
 31396                                  L_code_ptr_is_eq:
 31397 00017B68 C8000000                	enter 0, 0
 31398 00017B6C 48837D1802              	cmp COUNT, 2
 31399 00017B71 0F8591010000            	jne L_error_arg_count_2
 31400 00017B77 488B7D20                	mov rdi, PARAM(0)
 31401 00017B7B 488B7528                	mov rsi, PARAM(1)
 31402 00017B7F 4839F7                  	cmp rdi, rsi
 31403 00017B82 746C                    	je .L_eq_true
 31404 00017B84 8A17                    	mov dl, byte [rdi]
 31405 00017B86 3A16                    	cmp dl, byte [rsi]
 31406 00017B88 7572                    	jne .L_eq_false
 31407 00017B8A 80FA02                  	cmp dl, T_char
 31408 00017B8D 7459                    	je .L_char
 31409 00017B8F 80FA41                  	cmp dl, T_interned_symbol
 31410 00017B92 7440                    	je .L_interned_symbol
 31411 00017B94 80FA42                          cmp dl, T_uninterned_symbol
 31412 00017B97 7443                            je .L_uninterned_symbol
 31413 00017B99 80FA13                  	cmp dl, T_real
 31414 00017B9C 742E                    	je .L_real
 31415 00017B9E 80FA12                  	cmp dl, T_fraction
 31416 00017BA1 7413                    	je .L_fraction
 31417 00017BA3 80FA11                          cmp dl, T_integer
 31418 00017BA6 7402                            je .L_integer
 31419 00017BA8 EB52                    	jmp .L_eq_false
 31420                                  .L_integer:
 31421 00017BAA 488B4601                        mov rax, qword [rsi + 1]
 31422 00017BAE 483B4701                        cmp rax, qword [rdi + 1]
 31423 00017BB2 7548                            jne .L_eq_false
 31424 00017BB4 EB3A                            jmp .L_eq_true
 31425                                  .L_fraction:
 31426 00017BB6 488B4601                	mov rax, qword [rsi + 1]
 31427 00017BBA 483B4701                	cmp rax, qword [rdi + 1]
 31428 00017BBE 753C                    	jne .L_eq_false
 31429 00017BC0 488B4609                	mov rax, qword [rsi + 1 + 8]
 31430 00017BC4 483B4709                	cmp rax, qword [rdi + 1 + 8]
 31431 00017BC8 7532                    	jne .L_eq_false
 31432 00017BCA EB24                    	jmp .L_eq_true
 31433                                  .L_real:
 31434 00017BCC 488B4601                	mov rax, qword [rsi + 1]
 31435 00017BD0 483B4701                	cmp rax, qword [rdi + 1]
 31436                                  .L_interned_symbol:
 31437                                  	; never reached, because interned_symbols are static!
 31438                                  	; but I'm keeping it in case, I'll ever change
 31439                                  	; the implementation
 31440 00017BD4 488B4601                	mov rax, qword [rsi + 1]
 31441 00017BD8 483B4701                	cmp rax, qword [rdi + 1]
 31442                                  .L_uninterned_symbol:
 31443 00017BDC 4C8B4701                        mov r8, qword [rdi + 1]
 31444 00017BE0 4C3B4601                        cmp r8, qword [rsi + 1]
 31445 00017BE4 7516                            jne .L_eq_false
 31446 00017BE6 EB08                            jmp .L_eq_true
 31447                                  .L_char:
 31448 00017BE8 8A5E01                  	mov bl, byte [rsi + 1]
 31449 00017BEB 3A5F01                  	cmp bl, byte [rdi + 1]
 31450 00017BEE 750C                    	jne .L_eq_false
 31451                                  .L_eq_true:
 31452 00017BF0 48B8-                   	mov rax, sob_boolean_true
 31452 00017BF2 [0300000000000000] 
 31453 00017BFA EB0A                    	jmp .L_eq_exit
 31454                                  .L_eq_false:
 31455 00017BFC 48B8-                   	mov rax, sob_boolean_false
 31455 00017BFE [0200000000000000] 
 31456                                  .L_eq_exit:
 31457 00017C06 C9                      	leave
 31458 00017C07 C22000                  	ret AND_KILL_FRAME(2)
 31459                                  
 31460                                  make_real:
 31461 00017C0A C8000000                        enter 0, 0
 31462 00017C0E BF09000000                      mov rdi, (1 + 8)
 31463 00017C13 E873E4FFFF                      call malloc
 31464 00017C18 C60013                          mov byte [rax], T_real
 31465 00017C1B F20F114001                      movsd qword [rax + 1], xmm0
 31466 00017C20 C9                              leave 
 31467 00017C21 C3                              ret
 31468                                          
 31469                                  make_integer:
 31470 00017C22 C8000000                        enter 0, 0
 31471 00017C26 4889FE                          mov rsi, rdi
 31472 00017C29 BF09000000                      mov rdi, (1 + 8)
 31473 00017C2E E858E4FFFF                      call malloc
 31474 00017C33 C60011                          mov byte [rax], T_integer
 31475 00017C36 48897001                        mov qword [rax + 1], rsi
 31476 00017C3A C9                              leave
 31477 00017C3B C3                              ret
 31478                                          
 31479                                  L_error_integer_range:
 31480 00017C3C 488B3C25[00000000]              mov rdi, qword [stderr]
 31481 00017C44 48BE-                           mov rsi, fmt_integer_range
 31481 00017C46 [161C000000000000] 
 31482 00017C4E B800000000                      mov rax, 0
 31483                                          ENTER
    44 00017C53 C8000000            <1>  enter 0, 0
    45 00017C57 4883E4F0            <1>  and rsp, ~15
 31484 00017C5B E8(00000000)                    call fprintf
 31485                                          LEAVE
    49 00017C60 C9                  <1>  leave
 31486 00017C61 48C7C0FBFFFFFF                  mov rax, -5
 31487 00017C68 E8(00000000)                    call exit
 31488                                  
 31489                                  L_error_arg_negative:
 31490 00017C6D 488B3C25[00000000]              mov rdi, qword [stderr]
 31491 00017C75 48BE-                           mov rsi, fmt_arg_negative
 31491 00017C77 [EE1A000000000000] 
 31492 00017C7F B800000000                      mov rax, 0
 31493                                          ENTER
    44 00017C84 C8000000            <1>  enter 0, 0
    45 00017C88 4883E4F0            <1>  and rsp, ~15
 31494 00017C8C E8(00000000)                    call fprintf
 31495                                          LEAVE
    49 00017C91 C9                  <1>  leave
 31496 00017C92 48C7C0FDFFFFFF                  mov rax, -3
 31497 00017C99 E8(00000000)                    call exit
 31498                                  
 31499                                  L_error_arg_count_0:
 31500 00017C9E 488B3C25[00000000]              mov rdi, qword [stderr]
 31501 00017CA6 48BE-                           mov rsi, fmt_arg_count_0
 31501 00017CA8 [141B000000000000] 
 31502 00017CB0 488B5518                        mov rdx, COUNT
 31503 00017CB4 B800000000                      mov rax, 0
 31504                                          ENTER
    44 00017CB9 C8000000            <1>  enter 0, 0
    45 00017CBD 4883E4F0            <1>  and rsp, ~15
 31505 00017CC1 E8(00000000)                    call fprintf
 31506                                          LEAVE
    49 00017CC6 C9                  <1>  leave
 31507 00017CC7 48C7C0FDFFFFFF                  mov rax, -3
 31508 00017CCE E8(00000000)                    call exit
 31509                                  
 31510                                  L_error_arg_count_1:
 31511 00017CD3 488B3C25[00000000]              mov rdi, qword [stderr]
 31512 00017CDB 48BE-                           mov rsi, fmt_arg_count_1
 31512 00017CDD [3C1B000000000000] 
 31513 00017CE5 488B5518                        mov rdx, COUNT
 31514 00017CE9 B800000000                      mov rax, 0
 31515                                          ENTER
    44 00017CEE C8000000            <1>  enter 0, 0
    45 00017CF2 4883E4F0            <1>  and rsp, ~15
 31516 00017CF6 E8(00000000)                    call fprintf
 31517                                          LEAVE
    49 00017CFB C9                  <1>  leave
 31518 00017CFC 48C7C0FDFFFFFF                  mov rax, -3
 31519 00017D03 E8(00000000)                    call exit
 31520                                  
 31521                                  L_error_arg_count_2:
 31522 00017D08 488B3C25[00000000]              mov rdi, qword [stderr]
 31523 00017D10 48BE-                           mov rsi, fmt_arg_count_2
 31523 00017D12 [A21B000000000000] 
 31524 00017D1A 488B5518                        mov rdx, COUNT
 31525 00017D1E B800000000                      mov rax, 0
 31526                                          ENTER
    44 00017D23 C8000000            <1>  enter 0, 0
    45 00017D27 4883E4F0            <1>  and rsp, ~15
 31527 00017D2B E8(00000000)                    call fprintf
 31528                                          LEAVE
    49 00017D30 C9                  <1>  leave
 31529 00017D31 48C7C0FDFFFFFF                  mov rax, -3
 31530 00017D38 E8(00000000)                    call exit
 31531                                  
 31532                                  L_error_arg_count_12:
 31533 00017D3D 488B3C25[00000000]              mov rdi, qword [stderr]
 31534 00017D45 48BE-                           mov rsi, fmt_arg_count_12
 31534 00017D47 [621B000000000000] 
 31535 00017D4F 488B5518                        mov rdx, COUNT
 31536 00017D53 B800000000                      mov rax, 0
 31537                                          ENTER
    44 00017D58 C8000000            <1>  enter 0, 0
    45 00017D5C 4883E4F0            <1>  and rsp, ~15
 31538 00017D60 E8(00000000)                    call fprintf
 31539                                          LEAVE
    49 00017D65 C9                  <1>  leave
 31540 00017D66 48C7C0FDFFFFFF                  mov rax, -3
 31541 00017D6D E8(00000000)                    call exit
 31542                                  
 31543                                  L_error_arg_count_3:
 31544 00017D72 488B3C25[00000000]              mov rdi, qword [stderr]
 31545 00017D7A 48BE-                           mov rsi, fmt_arg_count_3
 31545 00017D7C [C91B000000000000] 
 31546 00017D84 488B5518                        mov rdx, COUNT
 31547 00017D88 B800000000                      mov rax, 0
 31548                                          ENTER
    44 00017D8D C8000000            <1>  enter 0, 0
    45 00017D91 4883E4F0            <1>  and rsp, ~15
 31549 00017D95 E8(00000000)                    call fprintf
 31550                                          LEAVE
    49 00017D9A C9                  <1>  leave
 31551 00017D9B 48C7C0FDFFFFFF                  mov rax, -3
 31552 00017DA2 E8(00000000)                    call exit
 31553                                          
 31554                                  L_error_incorrect_type:
 31555 00017DA7 488B3C25[00000000]              mov rdi, qword [stderr]
 31556 00017DAF 48BE-                           mov rsi, fmt_type
 31556 00017DB1 [F21B000000000000] 
 31557 00017DB9 B800000000                      mov rax, 0
 31558                                          ENTER
    44 00017DBE C8000000            <1>  enter 0, 0
    45 00017DC2 4883E4F0            <1>  and rsp, ~15
 31559 00017DC6 E8(00000000)                    call fprintf
 31560                                          LEAVE
    49 00017DCB C9                  <1>  leave
 31561 00017DCC 48C7C0FCFFFFFF                  mov rax, -4
 31562 00017DD3 E8(00000000)                    call exit
 31563                                  
 31564                                  L_error_division_by_zero:
 31565 00017DD8 488B3C25[00000000]              mov rdi, qword [stderr]
 31566 00017DE0 48BE-                           mov rsi, fmt_division_by_zero
 31566 00017DE2 [331C000000000000] 
 31567 00017DEA B800000000                      mov rax, 0
 31568                                          ENTER
    44 00017DEF C8000000            <1>  enter 0, 0
    45 00017DF3 4883E4F0            <1>  and rsp, ~15
 31569 00017DF7 E8(00000000)                    call fprintf
 31570                                          LEAVE
    49 00017DFC C9                  <1>  leave
 31571 00017DFD 48C7C0F8FFFFFF                  mov rax, -8
 31572 00017E04 E8(00000000)                    call exit
 31573                                  
 31574                                  section .data
 31575                                  gensym_count:
 31576 00001AE3 0000000000000000                dq 0
 31577                                  fmt_char:
 31578 00001AEB 256300                          db `%c\0`
 31579                                  fmt_arg_negative:
 31580 00001AEE 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 31580 00001AF7 7267756D656E742063-
 31580 00001B00 616E6E6F7420626520-
 31580 00001B09 6E656761746976652E-
 31580 00001B12 0A00               
 31581                                  fmt_arg_count_0:
 31582 00001B14 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 31582 00001B1D 74696E67207A65726F-
 31582 00001B26 20617267756D656E74-
 31582 00001B2F 732E20466F756E6420-
 31582 00001B38 25640A00           
 31583                                  fmt_arg_count_1:
 31584 00001B3C 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 31584 00001B45 74696E67206F6E6520-
 31584 00001B4E 617267756D656E742E-
 31584 00001B57 20466F756E64202564-
 31584 00001B60 0A00               
 31585                                  fmt_arg_count_12:
 31586 00001B62 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 31586 00001B6B 74696E67206F6E6520-
 31586 00001B74 726571756972656420-
 31586 00001B7D 616E64206F6E65206F-
 31586 00001B86 7074696F6E616C2061-
 31586 00001B8F 7267756D656E742E20-
 31586 00001B98 466F756E642025640A-
 31586 00001BA1 00                 
 31587                                  fmt_arg_count_2:
 31588 00001BA2 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 31588 00001BAB 74696E672074776F20-
 31588 00001BB4 617267756D656E7473-
 31588 00001BBD 2E20466F756E642025-
 31588 00001BC6 640A00             
 31589                                  fmt_arg_count_3:
 31590 00001BC9 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 31590 00001BD2 74696E672074687265-
 31590 00001BDB 6520617267756D656E-
 31590 00001BE4 74732E20466F756E64-
 31590 00001BED 2025640A00         
 31591                                  fmt_type:
 31592 00001BF2 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 31592 00001BFB 696F6E207061737365-
 31592 00001C04 6420696E636F727265-
 31592 00001C0D 637420747970650A00 
 31593                                  fmt_integer_range:
 31594 00001C16 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 31594 00001C1F 7265637420696E7465-
 31594 00001C28 6765722072616E6765-
 31594 00001C31 0A00               
 31595                                  fmt_division_by_zero:
 31596 00001C33 212121204469766973-             db `!!! Division by zero\n\0`
 31596 00001C3C 696F6E206279207A65-
 31596 00001C45 726F0A00           
 31597                                  fmt_scheme_error_part_1:
 31598 00001C49 0A2121212054686520-             db `\n!!! The procedure \0`
 31598 00001C52 70726F636564757265-
 31598 00001C5B 2000               
 31599                                  fmt_scheme_error_part_2:
 31600 00001C5D 2061736B656420746F-             db ` asked to terminate the program\n`
 31600 00001C66 207465726D696E6174-
 31600 00001C6F 65207468652070726F-
 31600 00001C78 6772616D0A         
 31601 00001C7D 202020207769746820-             db `    with the following message:\n\n\0`
 31601 00001C86 74686520666F6C6C6F-
 31601 00001C8F 77696E67206D657373-
 31601 00001C98 6167653A0A0A00     
 31602                                  fmt_scheme_error_part_3:
 31603 00001C9F 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 31603 00001CA8 210A0A00           
