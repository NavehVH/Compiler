     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "apply"
   157 000000ED 0500000000000000        	dq 5
   158 000000F5 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   159                                  	; L_constants + 250:
   160 000000FA 03                      	db T_string	; "display-sexpr"
   161 000000FB 0D00000000000000        	dq 13
   162 00000103 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   163 0000010B 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   164                                  	; L_constants + 272:
   165 00000110 03                      	db T_string	; "write-char"
   166 00000111 0A00000000000000        	dq 10
   167 00000119 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   168 00000121 6172                    	db 0x61, 0x72
   169                                  	; L_constants + 291:
   170 00000123 03                      	db T_string	; "car"
   171 00000124 0300000000000000        	dq 3
   172 0000012C 636172                  	db 0x63, 0x61, 0x72
   173                                  	; L_constants + 303:
   174 0000012F 03                      	db T_string	; "cdr"
   175 00000130 0300000000000000        	dq 3
   176 00000138 636472                  	db 0x63, 0x64, 0x72
   177                                  	; L_constants + 315:
   178 0000013B 03                      	db T_string	; "string-length"
   179 0000013C 0D00000000000000        	dq 13
   180 00000144 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   181 0000014C 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   182                                  	; L_constants + 337:
   183 00000151 03                      	db T_string	; "vector-length"
   184 00000152 0D00000000000000        	dq 13
   185 0000015A 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   186 00000162 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   187                                  	; L_constants + 359:
   188 00000167 03                      	db T_string	; "real->integer"
   189 00000168 0D00000000000000        	dq 13
   190 00000170 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   191 00000178 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   192                                  	; L_constants + 381:
   193 0000017D 03                      	db T_string	; "exit"
   194 0000017E 0400000000000000        	dq 4
   195 00000186 65786974                	db 0x65, 0x78, 0x69, 0x74
   196                                  	; L_constants + 394:
   197 0000018A 03                      	db T_string	; "integer->real"
   198 0000018B 0D00000000000000        	dq 13
   199 00000193 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   200 0000019B 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   201                                  	; L_constants + 416:
   202 000001A0 03                      	db T_string	; "fraction->real"
   203 000001A1 0E00000000000000        	dq 14
   204 000001A9 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   205 000001B1 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   206                                  	; L_constants + 439:
   207 000001B7 03                      	db T_string	; "char->integer"
   208 000001B8 0D00000000000000        	dq 13
   209 000001C0 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   210 000001C8 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   211                                  	; L_constants + 461:
   212 000001CD 03                      	db T_string	; "integer->char"
   213 000001CE 0D00000000000000        	dq 13
   214 000001D6 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   215 000001DE 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   216                                  	; L_constants + 483:
   217 000001E3 03                      	db T_string	; "trng"
   218 000001E4 0400000000000000        	dq 4
   219 000001EC 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "zero?"
   222 000001F1 0500000000000000        	dq 5
   223 000001F9 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   224                                  	; L_constants + 510:
   225 000001FE 03                      	db T_string	; "integer?"
   226 000001FF 0800000000000000        	dq 8
   227 00000207 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   228                                  	; L_constants + 527:
   229 0000020F 03                      	db T_string	; "__bin-apply"
   230 00000210 0B00000000000000        	dq 11
   231 00000218 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   232 00000220 706C79                  	db 0x70, 0x6C, 0x79
   233                                  	; L_constants + 547:
   234 00000223 03                      	db T_string	; "__bin-add-rr"
   235 00000224 0C00000000000000        	dq 12
   236 0000022C 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   237 00000234 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   238                                  	; L_constants + 568:
   239 00000238 03                      	db T_string	; "__bin-sub-rr"
   240 00000239 0C00000000000000        	dq 12
   241 00000241 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   242 00000249 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   243                                  	; L_constants + 589:
   244 0000024D 03                      	db T_string	; "__bin-mul-rr"
   245 0000024E 0C00000000000000        	dq 12
   246 00000256 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   247 0000025E 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   248                                  	; L_constants + 610:
   249 00000262 03                      	db T_string	; "__bin-div-rr"
   250 00000263 0C00000000000000        	dq 12
   251 0000026B 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   252 00000273 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   253                                  	; L_constants + 631:
   254 00000277 03                      	db T_string	; "__bin-add-qq"
   255 00000278 0C00000000000000        	dq 12
   256 00000280 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   257 00000288 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   258                                  	; L_constants + 652:
   259 0000028C 03                      	db T_string	; "__bin-sub-qq"
   260 0000028D 0C00000000000000        	dq 12
   261 00000295 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   262 0000029D 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   263                                  	; L_constants + 673:
   264 000002A1 03                      	db T_string	; "__bin-mul-qq"
   265 000002A2 0C00000000000000        	dq 12
   266 000002AA 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   267 000002B2 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   268                                  	; L_constants + 694:
   269 000002B6 03                      	db T_string	; "__bin-div-qq"
   270 000002B7 0C00000000000000        	dq 12
   271 000002BF 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   272 000002C7 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   273                                  	; L_constants + 715:
   274 000002CB 03                      	db T_string	; "__bin-add-zz"
   275 000002CC 0C00000000000000        	dq 12
   276 000002D4 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   277 000002DC 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   278                                  	; L_constants + 736:
   279 000002E0 03                      	db T_string	; "__bin-sub-zz"
   280 000002E1 0C00000000000000        	dq 12
   281 000002E9 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   282 000002F1 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   283                                  	; L_constants + 757:
   284 000002F5 03                      	db T_string	; "__bin-mul-zz"
   285 000002F6 0C00000000000000        	dq 12
   286 000002FE 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   287 00000306 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   288                                  	; L_constants + 778:
   289 0000030A 03                      	db T_string	; "__bin-div-zz"
   290 0000030B 0C00000000000000        	dq 12
   291 00000313 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   292 0000031B 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "error"
   295 00000320 0500000000000000        	dq 5
   296 00000328 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   297                                  	; L_constants + 813:
   298 0000032D 03                      	db T_string	; "__bin-less-than-rr"
   299 0000032E 1200000000000000        	dq 18
   300 00000336 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   301 0000033E 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   302 00000346 7272                    	db 0x72, 0x72
   303                                  	; L_constants + 840:
   304 00000348 03                      	db T_string	; "__bin-less-than-qq"
   305 00000349 1200000000000000        	dq 18
   306 00000351 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   307 00000359 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   308 00000361 7171                    	db 0x71, 0x71
   309                                  	; L_constants + 867:
   310 00000363 03                      	db T_string	; "__bin-less-than-zz"
   311 00000364 1200000000000000        	dq 18
   312 0000036C 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   313 00000374 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   314 0000037C 7A7A                    	db 0x7A, 0x7A
   315                                  	; L_constants + 894:
   316 0000037E 03                      	db T_string	; "__bin-equal-rr"
   317 0000037F 0E00000000000000        	dq 14
   318 00000387 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   319 0000038F 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   320                                  	; L_constants + 917:
   321 00000395 03                      	db T_string	; "__bin-equal-qq"
   322 00000396 0E00000000000000        	dq 14
   323 0000039E 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   324 000003A6 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   325                                  	; L_constants + 940:
   326 000003AC 03                      	db T_string	; "__bin-equal-zz"
   327 000003AD 0E00000000000000        	dq 14
   328 000003B5 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   329 000003BD 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   330                                  	; L_constants + 963:
   331 000003C3 03                      	db T_string	; "quotient"
   332 000003C4 0800000000000000        	dq 8
   333 000003CC 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   334                                  	; L_constants + 980:
   335 000003D4 03                      	db T_string	; "remainder"
   336 000003D5 0900000000000000        	dq 9
   337 000003DD 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   338 000003E5 72                      	db 0x72
   339                                  	; L_constants + 998:
   340 000003E6 03                      	db T_string	; "set-car!"
   341 000003E7 0800000000000000        	dq 8
   342 000003EF 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   343                                  	; L_constants + 1015:
   344 000003F7 03                      	db T_string	; "set-cdr!"
   345 000003F8 0800000000000000        	dq 8
   346 00000400 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   347                                  	; L_constants + 1032:
   348 00000408 03                      	db T_string	; "string-ref"
   349 00000409 0A00000000000000        	dq 10
   350 00000411 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   351 00000419 6566                    	db 0x65, 0x66
   352                                  	; L_constants + 1051:
   353 0000041B 03                      	db T_string	; "vector-ref"
   354 0000041C 0A00000000000000        	dq 10
   355 00000424 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   356 0000042C 6566                    	db 0x65, 0x66
   357                                  	; L_constants + 1070:
   358 0000042E 03                      	db T_string	; "vector-set!"
   359 0000042F 0B00000000000000        	dq 11
   360 00000437 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   361 0000043F 657421                  	db 0x65, 0x74, 0x21
   362                                  	; L_constants + 1090:
   363 00000442 03                      	db T_string	; "string-set!"
   364 00000443 0B00000000000000        	dq 11
   365 0000044B 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   366 00000453 657421                  	db 0x65, 0x74, 0x21
   367                                  	; L_constants + 1110:
   368 00000456 03                      	db T_string	; "make-vector"
   369 00000457 0B00000000000000        	dq 11
   370 0000045F 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   371 00000467 746F72                  	db 0x74, 0x6F, 0x72
   372                                  	; L_constants + 1130:
   373 0000046A 03                      	db T_string	; "make-string"
   374 0000046B 0B00000000000000        	dq 11
   375 00000473 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   376 0000047B 696E67                  	db 0x69, 0x6E, 0x67
   377                                  	; L_constants + 1150:
   378 0000047E 03                      	db T_string	; "numerator"
   379 0000047F 0900000000000000        	dq 9
   380 00000487 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   381 0000048F 72                      	db 0x72
   382                                  	; L_constants + 1168:
   383 00000490 03                      	db T_string	; "denominator"
   384 00000491 0B00000000000000        	dq 11
   385 00000499 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   386 000004A1 746F72                  	db 0x74, 0x6F, 0x72
   387                                  	; L_constants + 1188:
   388 000004A4 03                      	db T_string	; "eq?"
   389 000004A5 0300000000000000        	dq 3
   390 000004AD 65713F                  	db 0x65, 0x71, 0x3F
   391                                  	; L_constants + 1200:
   392 000004B0 03                      	db T_string	; "__integer-to-fracti...
   393 000004B1 1500000000000000        	dq 21
   394 000004B9 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   395 000004C1 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   396 000004C9 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   397                                  	; L_constants + 1230:
   398 000004CE 03                      	db T_string	; "logand"
   399 000004CF 0600000000000000        	dq 6
   400 000004D7 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logor"
   403 000004DE 0500000000000000        	dq 5
   404 000004E6 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   405                                  	; L_constants + 1259:
   406 000004EB 03                      	db T_string	; "logxor"
   407 000004EC 0600000000000000        	dq 6
   408 000004F4 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   409                                  	; L_constants + 1274:
   410 000004FA 03                      	db T_string	; "lognot"
   411 000004FB 0600000000000000        	dq 6
   412 00000503 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   413                                  	; L_constants + 1289:
   414 00000509 03                      	db T_string	; "ash"
   415 0000050A 0300000000000000        	dq 3
   416 00000512 617368                  	db 0x61, 0x73, 0x68
   417                                  	; L_constants + 1301:
   418 00000515 03                      	db T_string	; "symbol?"
   419 00000516 0700000000000000        	dq 7
   420 0000051E 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   421                                  	; L_constants + 1317:
   422 00000525 03                      	db T_string	; "uninterned-symbol?"
   423 00000526 1200000000000000        	dq 18
   424 0000052E 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   425 00000536 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   426 0000053E 6C3F                    	db 0x6C, 0x3F
   427                                  	; L_constants + 1344:
   428 00000540 03                      	db T_string	; "gensym?"
   429 00000541 0700000000000000        	dq 7
   430 00000549 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   431                                  	; L_constants + 1360:
   432 00000550 03                      	db T_string	; "gensym"
   433 00000551 0600000000000000        	dq 6
   434 00000559 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "frame"
   437 00000560 0500000000000000        	dq 5
   438 00000568 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "break"
   441 0000056E 0500000000000000        	dq 5
   442 00000576 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   443                                  	; L_constants + 1403:
   444 0000057B 03                      	db T_string	; "boolean-false?"
   445 0000057C 0E00000000000000        	dq 14
   446 00000584 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   447 0000058C 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   448                                  	; L_constants + 1426:
   449 00000592 03                      	db T_string	; "boolean-true?"
   450 00000593 0D00000000000000        	dq 13
   451 0000059B 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   452 000005A3 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   453                                  	; L_constants + 1448:
   454 000005A8 03                      	db T_string	; "primitive?"
   455 000005A9 0A00000000000000        	dq 10
   456 000005B1 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   457 000005B9 653F                    	db 0x65, 0x3F
   458                                  	; L_constants + 1467:
   459 000005BB 03                      	db T_string	; "length"
   460 000005BC 0600000000000000        	dq 6
   461 000005C4 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   462                                  	; L_constants + 1482:
   463 000005CA 03                      	db T_string	; "make-list"
   464 000005CB 0900000000000000        	dq 9
   465 000005D3 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   466 000005DB 74                      	db 0x74
   467                                  	; L_constants + 1500:
   468 000005DC 03                      	db T_string	; "return"
   469 000005DD 0600000000000000        	dq 6
   470 000005E5 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   471                                  	; L_constants + 1515:
   472 000005EB 03                      	db T_string	; "caar"
   473 000005EC 0400000000000000        	dq 4
   474 000005F4 63616172                	db 0x63, 0x61, 0x61, 0x72
   475                                  	; L_constants + 1528:
   476 000005F8 03                      	db T_string	; "cadr"
   477 000005F9 0400000000000000        	dq 4
   478 00000601 63616472                	db 0x63, 0x61, 0x64, 0x72
   479                                  	; L_constants + 1541:
   480 00000605 03                      	db T_string	; "cdar"
   481 00000606 0400000000000000        	dq 4
   482 0000060E 63646172                	db 0x63, 0x64, 0x61, 0x72
   483                                  	; L_constants + 1554:
   484 00000612 03                      	db T_string	; "cddr"
   485 00000613 0400000000000000        	dq 4
   486 0000061B 63646472                	db 0x63, 0x64, 0x64, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caaar"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "caadr"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "cadar"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "caddr"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdaar"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cdadr"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cddar"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "cdddr"
   517 00000682 0500000000000000        	dq 5
   518 0000068A 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   519                                  	; L_constants + 1679:
   520 0000068F 03                      	db T_string	; "caaaar"
   521 00000690 0600000000000000        	dq 6
   522 00000698 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   523                                  	; L_constants + 1694:
   524 0000069E 03                      	db T_string	; "caaadr"
   525 0000069F 0600000000000000        	dq 6
   526 000006A7 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   527                                  	; L_constants + 1709:
   528 000006AD 03                      	db T_string	; "caadar"
   529 000006AE 0600000000000000        	dq 6
   530 000006B6 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   531                                  	; L_constants + 1724:
   532 000006BC 03                      	db T_string	; "caaddr"
   533 000006BD 0600000000000000        	dq 6
   534 000006C5 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   535                                  	; L_constants + 1739:
   536 000006CB 03                      	db T_string	; "cadaar"
   537 000006CC 0600000000000000        	dq 6
   538 000006D4 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   539                                  	; L_constants + 1754:
   540 000006DA 03                      	db T_string	; "cadadr"
   541 000006DB 0600000000000000        	dq 6
   542 000006E3 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   543                                  	; L_constants + 1769:
   544 000006E9 03                      	db T_string	; "caddar"
   545 000006EA 0600000000000000        	dq 6
   546 000006F2 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   547                                  	; L_constants + 1784:
   548 000006F8 03                      	db T_string	; "cadddr"
   549 000006F9 0600000000000000        	dq 6
   550 00000701 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   551                                  	; L_constants + 1799:
   552 00000707 03                      	db T_string	; "cdaaar"
   553 00000708 0600000000000000        	dq 6
   554 00000710 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   555                                  	; L_constants + 1814:
   556 00000716 03                      	db T_string	; "cdaadr"
   557 00000717 0600000000000000        	dq 6
   558 0000071F 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   559                                  	; L_constants + 1829:
   560 00000725 03                      	db T_string	; "cdadar"
   561 00000726 0600000000000000        	dq 6
   562 0000072E 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   563                                  	; L_constants + 1844:
   564 00000734 03                      	db T_string	; "cdaddr"
   565 00000735 0600000000000000        	dq 6
   566 0000073D 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   567                                  	; L_constants + 1859:
   568 00000743 03                      	db T_string	; "cddaar"
   569 00000744 0600000000000000        	dq 6
   570 0000074C 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   571                                  	; L_constants + 1874:
   572 00000752 03                      	db T_string	; "cddadr"
   573 00000753 0600000000000000        	dq 6
   574 0000075B 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   575                                  	; L_constants + 1889:
   576 00000761 03                      	db T_string	; "cdddar"
   577 00000762 0600000000000000        	dq 6
   578 0000076A 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   579                                  	; L_constants + 1904:
   580 00000770 03                      	db T_string	; "cddddr"
   581 00000771 0600000000000000        	dq 6
   582 00000779 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list?"
   585 00000780 0500000000000000        	dq 5
   586 00000788 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   587                                  	; L_constants + 1933:
   588 0000078D 03                      	db T_string	; "list"
   589 0000078E 0400000000000000        	dq 4
   590 00000796 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   591                                  	; L_constants + 1946:
   592 0000079A 03                      	db T_string	; "not"
   593 0000079B 0300000000000000        	dq 3
   594 000007A3 6E6F74                  	db 0x6E, 0x6F, 0x74
   595                                  	; L_constants + 1958:
   596 000007A6 03                      	db T_string	; "rational?"
   597 000007A7 0900000000000000        	dq 9
   598 000007AF 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   599 000007B7 3F                      	db 0x3F
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "list*"
   602 000007B9 0500000000000000        	dq 5
   603 000007C1 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   604                                  	; L_constants + 1990:
   605 000007C6 03                      	db T_string	; "whatever"
   606 000007C7 0800000000000000        	dq 8
   607 000007CF 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   608                                  	; L_constants + 2007:
   609 000007D7 41                      	db T_interned_symbol	; whatever
   610 000007D8 [C607000000000000]      	dq L_constants + 1990
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [5604000000000000]      	dq L_constants + 1110
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [6A04000000000000]      	dq L_constants + 1130
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  free_var_0:	; location of *
  1005 00000DC5 [CD0D000000000000]      	dq .undefined_object
  1006                                  .undefined_object:
  1007 00000DCD 05                      	db T_undefined
  1008 00000DCE [D408000000000000]      	dq L_constants + 2260
  1009                                  
  1010                                  free_var_1:	; location of +
  1011 00000DD6 [DE0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDE 05                      	db T_undefined
  1014 00000DDF [4D08000000000000]      	dq L_constants + 2125
  1015                                  
  1016                                  free_var_2:	; location of -
  1017 00000DE7 [EF0D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DEF 05                      	db T_undefined
  1020 00000DF0 [B408000000000000]      	dq L_constants + 2228
  1021                                  
  1022                                  free_var_3:	; location of /
  1023 00000DF8 [000E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E00 05                      	db T_undefined
  1026 00000E01 [F008000000000000]      	dq L_constants + 2288
  1027                                  
  1028                                  free_var_4:	; location of <
  1029 00000E09 [110E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E11 05                      	db T_undefined
  1032 00000E12 [1009000000000000]      	dq L_constants + 2320
  1033                                  
  1034                                  free_var_5:	; location of <=
  1035 00000E1A [220E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E22 05                      	db T_undefined
  1038 00000E23 [1A09000000000000]      	dq L_constants + 2330
  1039                                  
  1040                                  free_var_6:	; location of =
  1041 00000E2B [330E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E33 05                      	db T_undefined
  1044 00000E34 [3A09000000000000]      	dq L_constants + 2362
  1045                                  
  1046                                  free_var_7:	; location of >
  1047 00000E3C [440E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E44 05                      	db T_undefined
  1050 00000E45 [2509000000000000]      	dq L_constants + 2341
  1051                                  
  1052                                  free_var_8:	; location of >=
  1053 00000E4D [550E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E55 05                      	db T_undefined
  1056 00000E56 [2F09000000000000]      	dq L_constants + 2351
  1057                                  
  1058                                  free_var_9:	; location of __bin-add-qq
  1059 00000E5E [660E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E66 05                      	db T_undefined
  1062 00000E67 [7702000000000000]      	dq L_constants + 631
  1063                                  
  1064                                  free_var_10:	; location of __bin-add-rr
  1065 00000E6F [770E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E77 05                      	db T_undefined
  1068 00000E78 [2302000000000000]      	dq L_constants + 547
  1069                                  
  1070                                  free_var_11:	; location of __bin-add-zz
  1071 00000E80 [880E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E88 05                      	db T_undefined
  1074 00000E89 [CB02000000000000]      	dq L_constants + 715
  1075                                  
  1076                                  free_var_12:	; location of __bin-apply
  1077 00000E91 [990E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E99 05                      	db T_undefined
  1080 00000E9A [0F02000000000000]      	dq L_constants + 527
  1081                                  
  1082                                  free_var_13:	; location of __bin-div-qq
  1083 00000EA2 [AA0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAA 05                      	db T_undefined
  1086 00000EAB [B602000000000000]      	dq L_constants + 694
  1087                                  
  1088                                  free_var_14:	; location of __bin-div-rr
  1089 00000EB3 [BB0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBB 05                      	db T_undefined
  1092 00000EBC [6202000000000000]      	dq L_constants + 610
  1093                                  
  1094                                  free_var_15:	; location of __bin-div-zz
  1095 00000EC4 [CC0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECC 05                      	db T_undefined
  1098 00000ECD [0A03000000000000]      	dq L_constants + 778
  1099                                  
  1100                                  free_var_16:	; location of __bin-equal-qq
  1101 00000ED5 [DD0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDD 05                      	db T_undefined
  1104 00000EDE [9503000000000000]      	dq L_constants + 917
  1105                                  
  1106                                  free_var_17:	; location of __bin-equal-rr
  1107 00000EE6 [EE0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEE 05                      	db T_undefined
  1110 00000EEF [7E03000000000000]      	dq L_constants + 894
  1111                                  
  1112                                  free_var_18:	; location of __bin-equal-zz
  1113 00000EF7 [FF0E000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000EFF 05                      	db T_undefined
  1116 00000F00 [AC03000000000000]      	dq L_constants + 940
  1117                                  
  1118                                  free_var_19:	; location of __bin-less-than-qq
  1119 00000F08 [100F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F10 05                      	db T_undefined
  1122 00000F11 [4803000000000000]      	dq L_constants + 840
  1123                                  
  1124                                  free_var_20:	; location of __bin-less-than-rr
  1125 00000F19 [210F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F21 05                      	db T_undefined
  1128 00000F22 [2D03000000000000]      	dq L_constants + 813
  1129                                  
  1130                                  free_var_21:	; location of __bin-less-than-zz
  1131 00000F2A [320F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F32 05                      	db T_undefined
  1134 00000F33 [6303000000000000]      	dq L_constants + 867
  1135                                  
  1136                                  free_var_22:	; location of __bin-mul-qq
  1137 00000F3B [430F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F43 05                      	db T_undefined
  1140 00000F44 [A102000000000000]      	dq L_constants + 673
  1141                                  
  1142                                  free_var_23:	; location of __bin-mul-rr
  1143 00000F4C [540F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F54 05                      	db T_undefined
  1146 00000F55 [4D02000000000000]      	dq L_constants + 589
  1147                                  
  1148                                  free_var_24:	; location of __bin-mul-zz
  1149 00000F5D [650F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F65 05                      	db T_undefined
  1152 00000F66 [F502000000000000]      	dq L_constants + 757
  1153                                  
  1154                                  free_var_25:	; location of __bin-sub-qq
  1155 00000F6E [760F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F76 05                      	db T_undefined
  1158 00000F77 [8C02000000000000]      	dq L_constants + 652
  1159                                  
  1160                                  free_var_26:	; location of __bin-sub-rr
  1161 00000F7F [870F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F87 05                      	db T_undefined
  1164 00000F88 [3802000000000000]      	dq L_constants + 568
  1165                                  
  1166                                  free_var_27:	; location of __bin-sub-zz
  1167 00000F90 [980F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F98 05                      	db T_undefined
  1170 00000F99 [E002000000000000]      	dq L_constants + 736
  1171                                  
  1172                                  free_var_28:	; location of __bin_integer_to_fraction
  1173 00000FA1 [A90F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FA9 05                      	db T_undefined
  1176 00000FAA [6008000000000000]      	dq L_constants + 2144
  1177                                  
  1178                                  free_var_29:	; location of __integer-to-fraction
  1179 00000FB2 [BA0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBA 05                      	db T_undefined
  1182 00000FBB [B004000000000000]      	dq L_constants + 1200
  1183                                  
  1184                                  free_var_30:	; location of abs
  1185 00000FC3 [CB0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCB 05                      	db T_undefined
  1188 00000FCC [8C0C000000000000]      	dq L_constants + 3212
  1189                                  
  1190                                  free_var_31:	; location of andmap
  1191 00000FD4 [DC0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDC 05                      	db T_undefined
  1194 00000FDD [FA07000000000000]      	dq L_constants + 2042
  1195                                  
  1196                                  free_var_32:	; location of append
  1197 00000FE5 [ED0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FED 05                      	db T_undefined
  1200 00000FEE [2B08000000000000]      	dq L_constants + 2091
  1201                                  
  1202                                  free_var_33:	; location of apply
  1203 00000FF6 [FE0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFE 05                      	db T_undefined
  1206 00000FFF [EC00000000000000]      	dq L_constants + 236
  1207                                  
  1208                                  free_var_34:	; location of assoc
  1209 00001007 [0F10000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 0000100F 05                      	db T_undefined
  1212 00001010 [A70C000000000000]      	dq L_constants + 3239
  1213                                  
  1214                                  free_var_35:	; location of caaaar
  1215 00001018 [2010000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001020 05                      	db T_undefined
  1218 00001021 [8F06000000000000]      	dq L_constants + 1679
  1219                                  
  1220                                  free_var_36:	; location of caaadr
  1221 00001029 [3110000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001031 05                      	db T_undefined
  1224 00001032 [9E06000000000000]      	dq L_constants + 1694
  1225                                  
  1226                                  free_var_37:	; location of caaar
  1227 0000103A [4210000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001042 05                      	db T_undefined
  1230 00001043 [1F06000000000000]      	dq L_constants + 1567
  1231                                  
  1232                                  free_var_38:	; location of caadar
  1233 0000104B [5310000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001053 05                      	db T_undefined
  1236 00001054 [AD06000000000000]      	dq L_constants + 1709
  1237                                  
  1238                                  free_var_39:	; location of caaddr
  1239 0000105C [6410000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001064 05                      	db T_undefined
  1242 00001065 [BC06000000000000]      	dq L_constants + 1724
  1243                                  
  1244                                  free_var_40:	; location of caadr
  1245 0000106D [7510000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001075 05                      	db T_undefined
  1248 00001076 [2D06000000000000]      	dq L_constants + 1581
  1249                                  
  1250                                  free_var_41:	; location of caar
  1251 0000107E [8610000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001086 05                      	db T_undefined
  1254 00001087 [EB05000000000000]      	dq L_constants + 1515
  1255                                  
  1256                                  free_var_42:	; location of cadaar
  1257 0000108F [9710000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001097 05                      	db T_undefined
  1260 00001098 [CB06000000000000]      	dq L_constants + 1739
  1261                                  
  1262                                  free_var_43:	; location of cadadr
  1263 000010A0 [A810000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A8 05                      	db T_undefined
  1266 000010A9 [DA06000000000000]      	dq L_constants + 1754
  1267                                  
  1268                                  free_var_44:	; location of cadar
  1269 000010B1 [B910000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010B9 05                      	db T_undefined
  1272 000010BA [3B06000000000000]      	dq L_constants + 1595
  1273                                  
  1274                                  free_var_45:	; location of caddar
  1275 000010C2 [CA10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CA 05                      	db T_undefined
  1278 000010CB [E906000000000000]      	dq L_constants + 1769
  1279                                  
  1280                                  free_var_46:	; location of cadddr
  1281 000010D3 [DB10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DB 05                      	db T_undefined
  1284 000010DC [F806000000000000]      	dq L_constants + 1784
  1285                                  
  1286                                  free_var_47:	; location of caddr
  1287 000010E4 [EC10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010EC 05                      	db T_undefined
  1290 000010ED [4906000000000000]      	dq L_constants + 1609
  1291                                  
  1292                                  free_var_48:	; location of cadr
  1293 000010F5 [FD10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FD 05                      	db T_undefined
  1296 000010FE [F805000000000000]      	dq L_constants + 1528
  1297                                  
  1298                                  free_var_49:	; location of car
  1299 00001106 [0E11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110E 05                      	db T_undefined
  1302 0000110F [2301000000000000]      	dq L_constants + 291
  1303                                  
  1304                                  free_var_50:	; location of cdaaar
  1305 00001117 [1F11000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 0000111F 05                      	db T_undefined
  1308 00001120 [0707000000000000]      	dq L_constants + 1799
  1309                                  
  1310                                  free_var_51:	; location of cdaadr
  1311 00001128 [3011000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001130 05                      	db T_undefined
  1314 00001131 [1607000000000000]      	dq L_constants + 1814
  1315                                  
  1316                                  free_var_52:	; location of cdaar
  1317 00001139 [4111000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001141 05                      	db T_undefined
  1320 00001142 [5706000000000000]      	dq L_constants + 1623
  1321                                  
  1322                                  free_var_53:	; location of cdadar
  1323 0000114A [5211000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001152 05                      	db T_undefined
  1326 00001153 [2507000000000000]      	dq L_constants + 1829
  1327                                  
  1328                                  free_var_54:	; location of cdaddr
  1329 0000115B [6311000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001163 05                      	db T_undefined
  1332 00001164 [3407000000000000]      	dq L_constants + 1844
  1333                                  
  1334                                  free_var_55:	; location of cdadr
  1335 0000116C [7411000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001174 05                      	db T_undefined
  1338 00001175 [6506000000000000]      	dq L_constants + 1637
  1339                                  
  1340                                  free_var_56:	; location of cdar
  1341 0000117D [8511000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001185 05                      	db T_undefined
  1344 00001186 [0506000000000000]      	dq L_constants + 1541
  1345                                  
  1346                                  free_var_57:	; location of cddaar
  1347 0000118E [9611000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001196 05                      	db T_undefined
  1350 00001197 [4307000000000000]      	dq L_constants + 1859
  1351                                  
  1352                                  free_var_58:	; location of cddadr
  1353 0000119F [A711000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A7 05                      	db T_undefined
  1356 000011A8 [5207000000000000]      	dq L_constants + 1874
  1357                                  
  1358                                  free_var_59:	; location of cddar
  1359 000011B0 [B811000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B8 05                      	db T_undefined
  1362 000011B9 [7306000000000000]      	dq L_constants + 1651
  1363                                  
  1364                                  free_var_60:	; location of cdddar
  1365 000011C1 [C911000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011C9 05                      	db T_undefined
  1368 000011CA [6107000000000000]      	dq L_constants + 1889
  1369                                  
  1370                                  free_var_61:	; location of cddddr
  1371 000011D2 [DA11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DA 05                      	db T_undefined
  1374 000011DB [7007000000000000]      	dq L_constants + 1904
  1375                                  
  1376                                  free_var_62:	; location of cdddr
  1377 000011E3 [EB11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EB 05                      	db T_undefined
  1380 000011EC [8106000000000000]      	dq L_constants + 1665
  1381                                  
  1382                                  free_var_63:	; location of cddr
  1383 000011F4 [FC11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FC 05                      	db T_undefined
  1386 000011FD [1206000000000000]      	dq L_constants + 1554
  1387                                  
  1388                                  free_var_64:	; location of cdr
  1389 00001205 [0D12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120D 05                      	db T_undefined
  1392 0000120E [2F01000000000000]      	dq L_constants + 303
  1393                                  
  1394                                  free_var_65:	; location of char->integer
  1395 00001216 [1E12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121E 05                      	db T_undefined
  1398 0000121F [B701000000000000]      	dq L_constants + 439
  1399                                  
  1400                                  free_var_66:	; location of char-ci<=?
  1401 00001227 [2F12000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 0000122F 05                      	db T_undefined
  1404 00001230 [230A000000000000]      	dq L_constants + 2595
  1405                                  
  1406                                  free_var_67:	; location of char-ci<?
  1407 00001238 [4012000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001240 05                      	db T_undefined
  1410 00001241 [110A000000000000]      	dq L_constants + 2577
  1411                                  
  1412                                  free_var_68:	; location of char-ci=?
  1413 00001249 [5112000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001251 05                      	db T_undefined
  1416 00001252 [360A000000000000]      	dq L_constants + 2614
  1417                                  
  1418                                  free_var_69:	; location of char-ci>=?
  1419 0000125A [6212000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001262 05                      	db T_undefined
  1422 00001263 [5A0A000000000000]      	dq L_constants + 2650
  1423                                  
  1424                                  free_var_70:	; location of char-ci>?
  1425 0000126B [7312000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001273 05                      	db T_undefined
  1428 00001274 [480A000000000000]      	dq L_constants + 2632
  1429                                  
  1430                                  free_var_71:	; location of char-downcase
  1431 0000127C [8412000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001284 05                      	db T_undefined
  1434 00001285 [DF09000000000000]      	dq L_constants + 2527
  1435                                  
  1436                                  free_var_72:	; location of char-upcase
  1437 0000128D [9512000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001295 05                      	db T_undefined
  1440 00001296 [F509000000000000]      	dq L_constants + 2549
  1441                                  
  1442                                  free_var_73:	; location of char<=?
  1443 0000129E [A612000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A6 05                      	db T_undefined
  1446 000012A7 [A109000000000000]      	dq L_constants + 2465
  1447                                  
  1448                                  free_var_74:	; location of char<?
  1449 000012AF [B712000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B7 05                      	db T_undefined
  1452 000012B8 [9209000000000000]      	dq L_constants + 2450
  1453                                  
  1454                                  free_var_75:	; location of char=?
  1455 000012C0 [C812000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C8 05                      	db T_undefined
  1458 000012C9 [B109000000000000]      	dq L_constants + 2481
  1459                                  
  1460                                  free_var_76:	; location of char>=?
  1461 000012D1 [D912000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012D9 05                      	db T_undefined
  1464 000012DA [CF09000000000000]      	dq L_constants + 2511
  1465                                  
  1466                                  free_var_77:	; location of char>?
  1467 000012E2 [EA12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EA 05                      	db T_undefined
  1470 000012EB [C009000000000000]      	dq L_constants + 2496
  1471                                  
  1472                                  free_var_78:	; location of char?
  1473 000012F3 [FB12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FB 05                      	db T_undefined
  1476 000012FC [3000000000000000]      	dq L_constants + 48
  1477                                  
  1478                                  free_var_79:	; location of cons
  1479 00001304 [0C13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130C 05                      	db T_undefined
  1482 0000130D [DF00000000000000]      	dq L_constants + 223
  1483                                  
  1484                                  free_var_80:	; location of eq?
  1485 00001315 [1D13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131D 05                      	db T_undefined
  1488 0000131E [A404000000000000]      	dq L_constants + 1188
  1489                                  
  1490                                  free_var_81:	; location of equal?
  1491 00001326 [2E13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132E 05                      	db T_undefined
  1494 0000132F [980C000000000000]      	dq L_constants + 3224
  1495                                  
  1496                                  free_var_82:	; location of error
  1497 00001337 [3F13000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 0000133F 05                      	db T_undefined
  1500 00001340 [1F03000000000000]      	dq L_constants + 799
  1501                                  
  1502                                  free_var_83:	; location of even?
  1503 00001348 [5013000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001350 05                      	db T_undefined
  1506 00001351 [680C000000000000]      	dq L_constants + 3176
  1507                                  
  1508                                  free_var_84:	; location of fact
  1509 00001359 [6113000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001361 05                      	db T_undefined
  1512 00001362 [0309000000000000]      	dq L_constants + 2307
  1513                                  
  1514                                  free_var_85:	; location of fold-left
  1515 0000136A [7213000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001372 05                      	db T_undefined
  1518 00001373 [1908000000000000]      	dq L_constants + 2073
  1519                                  
  1520                                  free_var_86:	; location of fold-right
  1521 0000137B [8313000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001383 05                      	db T_undefined
  1524 00001384 [3A08000000000000]      	dq L_constants + 2106
  1525                                  
  1526                                  free_var_87:	; location of fraction->real
  1527 0000138C [9413000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001394 05                      	db T_undefined
  1530 00001395 [A001000000000000]      	dq L_constants + 416
  1531                                  
  1532                                  free_var_88:	; location of fraction?
  1533 0000139D [A513000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A5 05                      	db T_undefined
  1536 000013A6 [9800000000000000]      	dq L_constants + 152
  1537                                  
  1538                                  free_var_89:	; location of integer->char
  1539 000013AE [B613000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B6 05                      	db T_undefined
  1542 000013B7 [CD01000000000000]      	dq L_constants + 461
  1543                                  
  1544                                  free_var_90:	; location of integer->real
  1545 000013BF [C713000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C7 05                      	db T_undefined
  1548 000013C8 [8A01000000000000]      	dq L_constants + 394
  1549                                  
  1550                                  free_var_91:	; location of integer?
  1551 000013D0 [D813000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D8 05                      	db T_undefined
  1554 000013D9 [FE01000000000000]      	dq L_constants + 510
  1555                                  
  1556                                  free_var_92:	; location of list
  1557 000013E1 [E913000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013E9 05                      	db T_undefined
  1560 000013EA [8D07000000000000]      	dq L_constants + 1933
  1561                                  
  1562                                  free_var_93:	; location of list*
  1563 000013F2 [FA13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FA 05                      	db T_undefined
  1566 000013FB [B807000000000000]      	dq L_constants + 1976
  1567                                  
  1568                                  free_var_94:	; location of list->string
  1569 00001403 [0B14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140B 05                      	db T_undefined
  1572 0000140C [9B0A000000000000]      	dq L_constants + 2715
  1573                                  
  1574                                  free_var_95:	; location of list->vector
  1575 00001414 [1C14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141C 05                      	db T_undefined
  1578 0000141D [FC0B000000000000]      	dq L_constants + 3068
  1579                                  
  1580                                  free_var_96:	; location of list?
  1581 00001425 [2D14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142D 05                      	db T_undefined
  1584 0000142E [7F07000000000000]      	dq L_constants + 1919
  1585                                  
  1586                                  free_var_97:	; location of logarithm
  1587 00001436 [3E14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143E 05                      	db T_undefined
  1590 0000143F [8B0D000000000000]      	dq L_constants + 3467
  1591                                  
  1592                                  free_var_98:	; location of make-list-thunk
  1593 00001447 [4F14000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 0000144F 05                      	db T_undefined
  1596 00001450 [3F0D000000000000]      	dq L_constants + 3391
  1597                                  
  1598                                  free_var_99:	; location of make-string
  1599 00001458 [6014000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001460 05                      	db T_undefined
  1602 00001461 [6A04000000000000]      	dq L_constants + 1130
  1603                                  
  1604                                  free_var_100:	; location of make-string-thunk
  1605 00001469 [7114000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001471 05                      	db T_undefined
  1608 00001472 [570D000000000000]      	dq L_constants + 3415
  1609                                  
  1610                                  free_var_101:	; location of make-vector
  1611 0000147A [8214000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001482 05                      	db T_undefined
  1614 00001483 [5604000000000000]      	dq L_constants + 1110
  1615                                  
  1616                                  free_var_102:	; location of make-vector-thunk
  1617 0000148B [9314000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001493 05                      	db T_undefined
  1620 00001494 [710D000000000000]      	dq L_constants + 3441
  1621                                  
  1622                                  free_var_103:	; location of map
  1623 0000149C [A414000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A4 05                      	db T_undefined
  1626 000014A5 [EE07000000000000]      	dq L_constants + 2030
  1627                                  
  1628                                  free_var_104:	; location of negative?
  1629 000014AD [B514000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B5 05                      	db T_undefined
  1632 000014B6 [560C000000000000]      	dq L_constants + 3158
  1633                                  
  1634                                  free_var_105:	; location of newline
  1635 000014BE [C614000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C6 05                      	db T_undefined
  1638 000014C7 [A60D000000000000]      	dq L_constants + 3494
  1639                                  
  1640                                  free_var_106:	; location of not
  1641 000014CF [D714000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D7 05                      	db T_undefined
  1644 000014D8 [9A07000000000000]      	dq L_constants + 1946
  1645                                  
  1646                                  free_var_107:	; location of null?
  1647 000014E0 [E814000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E8 05                      	db T_undefined
  1650 000014E9 [0600000000000000]      	dq L_constants + 6
  1651                                  
  1652                                  free_var_108:	; location of number?
  1653 000014F1 [F914000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014F9 05                      	db T_undefined
  1656 000014FA [BB00000000000000]      	dq L_constants + 187
  1657                                  
  1658                                  free_var_109:	; location of odd?
  1659 00001502 [0A15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150A 05                      	db T_undefined
  1662 0000150B [7F0C000000000000]      	dq L_constants + 3199
  1663                                  
  1664                                  free_var_110:	; location of ormap
  1665 00001513 [1B15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151B 05                      	db T_undefined
  1668 0000151C [E007000000000000]      	dq L_constants + 2016
  1669                                  
  1670                                  free_var_111:	; location of pair?
  1671 00001524 [2C15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152C 05                      	db T_undefined
  1674 0000152D [1400000000000000]      	dq L_constants + 20
  1675                                  
  1676                                  free_var_112:	; location of positive?
  1677 00001535 [3D15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153D 05                      	db T_undefined
  1680 0000153E [440C000000000000]      	dq L_constants + 3140
  1681                                  
  1682                                  free_var_113:	; location of random
  1683 00001546 [4E15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154E 05                      	db T_undefined
  1686 0000154F [350C000000000000]      	dq L_constants + 3125
  1687                                  
  1688                                  free_var_114:	; location of rational?
  1689 00001557 [5F15000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 0000155F 05                      	db T_undefined
  1692 00001560 [A607000000000000]      	dq L_constants + 1958
  1693                                  
  1694                                  free_var_115:	; location of real
  1695 00001568 [7015000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001570 05                      	db T_undefined
  1698 00001571 [BE08000000000000]      	dq L_constants + 2238
  1699                                  
  1700                                  free_var_116:	; location of real?
  1701 00001579 [8115000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001581 05                      	db T_undefined
  1704 00001582 [8A00000000000000]      	dq L_constants + 138
  1705                                  
  1706                                  free_var_117:	; location of remainder
  1707 0000158A [9215000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001592 05                      	db T_undefined
  1710 00001593 [D403000000000000]      	dq L_constants + 980
  1711                                  
  1712                                  free_var_118:	; location of reverse
  1713 0000159B [A315000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A3 05                      	db T_undefined
  1716 000015A4 [0908000000000000]      	dq L_constants + 2057
  1717                                  
  1718                                  free_var_119:	; location of string->list
  1719 000015AC [B415000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B4 05                      	db T_undefined
  1722 000015B5 [B00A000000000000]      	dq L_constants + 2736
  1723                                  
  1724                                  free_var_120:	; location of string-append
  1725 000015BD [C515000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C5 05                      	db T_undefined
  1728 000015C6 [B50C000000000000]      	dq L_constants + 3253
  1729                                  
  1730                                  free_var_121:	; location of string-ci<=?
  1731 000015CE [D615000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D6 05                      	db T_undefined
  1734 000015D7 [300B000000000000]      	dq L_constants + 2864
  1735                                  
  1736                                  free_var_122:	; location of string-ci<?
  1737 000015DF [E715000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E7 05                      	db T_undefined
  1740 000015E8 [1C0B000000000000]      	dq L_constants + 2844
  1741                                  
  1742                                  free_var_123:	; location of string-ci=?
  1743 000015F0 [F815000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F8 05                      	db T_undefined
  1746 000015F9 [450B000000000000]      	dq L_constants + 2885
  1747                                  
  1748                                  free_var_124:	; location of string-ci>=?
  1749 00001601 [0916000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 00001609 05                      	db T_undefined
  1752 0000160A [590B000000000000]      	dq L_constants + 2905
  1753                                  
  1754                                  free_var_125:	; location of string-ci>?
  1755 00001612 [1A16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161A 05                      	db T_undefined
  1758 0000161B [6E0B000000000000]      	dq L_constants + 2926
  1759                                  
  1760                                  free_var_126:	; location of string-downcase
  1761 00001623 [2B16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162B 05                      	db T_undefined
  1764 0000162C [6D0A000000000000]      	dq L_constants + 2669
  1765                                  
  1766                                  free_var_127:	; location of string-length
  1767 00001634 [3C16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163C 05                      	db T_undefined
  1770 0000163D [3B01000000000000]      	dq L_constants + 315
  1771                                  
  1772                                  free_var_128:	; location of string-ref
  1773 00001645 [4D16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164D 05                      	db T_undefined
  1776 0000164E [0804000000000000]      	dq L_constants + 1032
  1777                                  
  1778                                  free_var_129:	; location of string-reverse
  1779 00001656 [5E16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165E 05                      	db T_undefined
  1782 0000165F [E10C000000000000]      	dq L_constants + 3297
  1783                                  
  1784                                  free_var_130:	; location of string-reverse!
  1785 00001667 [6F16000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 0000166F 05                      	db T_undefined
  1788 00001670 [0F0D000000000000]      	dq L_constants + 3343
  1789                                  
  1790                                  free_var_131:	; location of string-set!
  1791 00001678 [8016000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001680 05                      	db T_undefined
  1794 00001681 [4204000000000000]      	dq L_constants + 1090
  1795                                  
  1796                                  free_var_132:	; location of string-upcase
  1797 00001689 [9116000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001691 05                      	db T_undefined
  1800 00001692 [850A000000000000]      	dq L_constants + 2693
  1801                                  
  1802                                  free_var_133:	; location of string<=?
  1803 0000169A [A216000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A2 05                      	db T_undefined
  1806 000016A3 [D60A000000000000]      	dq L_constants + 2774
  1807                                  
  1808                                  free_var_134:	; location of string<?
  1809 000016AB [B316000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B3 05                      	db T_undefined
  1812 000016B4 [C50A000000000000]      	dq L_constants + 2757
  1813                                  
  1814                                  free_var_135:	; location of string=?
  1815 000016BC [C416000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C4 05                      	db T_undefined
  1818 000016C5 [E80A000000000000]      	dq L_constants + 2792
  1819                                  
  1820                                  free_var_136:	; location of string>=?
  1821 000016CD [D516000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D5 05                      	db T_undefined
  1824 000016D6 [F90A000000000000]      	dq L_constants + 2809
  1825                                  
  1826                                  free_var_137:	; location of string>?
  1827 000016DE [E616000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E6 05                      	db T_undefined
  1830 000016E7 [0B0B000000000000]      	dq L_constants + 2827
  1831                                  
  1832                                  free_var_138:	; location of string?
  1833 000016EF [F716000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F7 05                      	db T_undefined
  1836 000016F8 [3E00000000000000]      	dq L_constants + 62
  1837                                  
  1838                                  free_var_139:	; location of trng
  1839 00001700 [0817000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001708 05                      	db T_undefined
  1842 00001709 [E301000000000000]      	dq L_constants + 483
  1843                                  
  1844                                  free_var_140:	; location of vector
  1845 00001711 [1917000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 00001719 05                      	db T_undefined
  1848 0000171A [110C000000000000]      	dq L_constants + 3089
  1849                                  
  1850                                  free_var_141:	; location of vector->list
  1851 00001722 [2A17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172A 05                      	db T_undefined
  1854 0000172B [200C000000000000]      	dq L_constants + 3104
  1855                                  
  1856                                  free_var_142:	; location of vector-append
  1857 00001733 [3B17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173B 05                      	db T_undefined
  1860 0000173C [CB0C000000000000]      	dq L_constants + 3275
  1861                                  
  1862                                  free_var_143:	; location of vector-length
  1863 00001744 [4C17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174C 05                      	db T_undefined
  1866 0000174D [5101000000000000]      	dq L_constants + 337
  1867                                  
  1868                                  free_var_144:	; location of vector-ref
  1869 00001755 [5D17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175D 05                      	db T_undefined
  1872 0000175E [1B04000000000000]      	dq L_constants + 1051
  1873                                  
  1874                                  free_var_145:	; location of vector-reverse
  1875 00001766 [6E17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176E 05                      	db T_undefined
  1878 0000176F [F80C000000000000]      	dq L_constants + 3320
  1879                                  
  1880                                  free_var_146:	; location of vector-reverse!
  1881 00001777 [7F17000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 0000177F 05                      	db T_undefined
  1884 00001780 [270D000000000000]      	dq L_constants + 3367
  1885                                  
  1886                                  free_var_147:	; location of vector-set!
  1887 00001788 [9017000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001790 05                      	db T_undefined
  1890 00001791 [2E04000000000000]      	dq L_constants + 1070
  1891                                  
  1892                                  free_var_148:	; location of vector?
  1893 00001799 [A117000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A1 05                      	db T_undefined
  1896 000017A2 [6700000000000000]      	dq L_constants + 103
  1897                                  
  1898                                  free_var_149:	; location of void
  1899 000017AA [B217000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B2 05                      	db T_undefined
  1902 000017B3 [B80D000000000000]      	dq L_constants + 3512
  1903                                  
  1904                                  free_var_150:	; location of write-char
  1905 000017BB [C317000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C3 05                      	db T_undefined
  1908 000017C4 [1001000000000000]      	dq L_constants + 272
  1909                                  
  1910                                  free_var_151:	; location of zero?
  1911 000017CC [D417000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D4 05                      	db T_undefined
  1914 000017D5 [F001000000000000]      	dq L_constants + 496
  1915                                  
  1916                                  
  1917                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1918                                  global main
  1919                                  section .text
  1920                                  main:
  1921 00000000 C8000000                        enter 0, 0
  1922 00000004 6A00                            push 0
  1923 00000006 6A00                            push 0
  1924 00000008 68[B74D0100]                    push Lend
  1925 0000000D C8000000                        enter 0, 0
  1926                                  	; building closure for null?
  1927 00000011 48BF-                   	mov rdi, free_var_107
  1927 00000013 [E014000000000000] 
  1928 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1928 0000001D [5159010000000000] 
  1929 00000025 E828570100              	call bind_primitive
  1930                                  
  1931                                  	; building closure for pair?
  1932 0000002A 48BF-                   	mov rdi, free_var_111
  1932 0000002C [2415000000000000] 
  1933 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1933 00000036 [8359010000000000] 
  1934 0000003E E80F570100              	call bind_primitive
  1935                                  
  1936                                  	; building closure for char?
  1937 00000043 48BF-                   	mov rdi, free_var_78
  1937 00000045 [F312000000000000] 
  1938 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1938 0000004F [E759010000000000] 
  1939 00000057 E8F6560100              	call bind_primitive
  1940                                  
  1941                                  	; building closure for string?
  1942 0000005C 48BF-                   	mov rdi, free_var_138
  1942 0000005E [EF16000000000000] 
  1943 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1943 00000068 [195A010000000000] 
  1944 00000070 E8DD560100              	call bind_primitive
  1945                                  
  1946                                  	; building closure for vector?
  1947 00000075 48BF-                   	mov rdi, free_var_148
  1947 00000077 [9917000000000000] 
  1948 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1948 00000081 [175B010000000000] 
  1949 00000089 E8C4560100              	call bind_primitive
  1950                                  
  1951                                  	; building closure for real?
  1952 0000008E 48BF-                   	mov rdi, free_var_116
  1952 00000090 [7915000000000000] 
  1953 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1953 0000009A [7B5B010000000000] 
  1954 000000A2 E8AB560100              	call bind_primitive
  1955                                  
  1956                                  	; building closure for fraction?
  1957 000000A7 48BF-                   	mov rdi, free_var_88
  1957 000000A9 [9D13000000000000] 
  1958 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1958 000000B3 [AD5B010000000000] 
  1959 000000BB E892560100              	call bind_primitive
  1960                                  
  1961                                  	; building closure for number?
  1962 000000C0 48BF-                   	mov rdi, free_var_108
  1962 000000C2 [F114000000000000] 
  1963 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1963 000000CC [7B5C010000000000] 
  1964 000000D4 E879560100              	call bind_primitive
  1965                                  
  1966                                  	; building closure for cons
  1967 000000D9 48BF-                   	mov rdi, free_var_79
  1967 000000DB [0413000000000000] 
  1968 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1968 000000E5 [E35C010000000000] 
  1969 000000ED E860560100              	call bind_primitive
  1970                                  
  1971                                  	; building closure for apply
  1972 000000F2 48BF-                   	mov rdi, free_var_33
  1972 000000F4 [F60F000000000000] 
  1973 000000FC 48BE-                   	mov rsi, L_code_ptr_bin_apply
  1973 000000FE [C258010000000000] 
  1974 00000106 E847560100              	call bind_primitive
  1975                                  
  1976                                  	; building closure for write-char
  1977 0000010B 48BF-                   	mov rdi, free_var_150
  1977 0000010D [BB17000000000000] 
  1978 00000115 48BE-                   	mov rsi, L_code_ptr_write_char
  1978 00000117 [395D010000000000] 
  1979 0000011F E82E560100              	call bind_primitive
  1980                                  
  1981                                  	; building closure for car
  1982 00000124 48BF-                   	mov rdi, free_var_49
  1982 00000126 [0611000000000000] 
  1983 0000012E 48BE-                   	mov rsi, L_code_ptr_car
  1983 00000130 [8C5D010000000000] 
  1984 00000138 E815560100              	call bind_primitive
  1985                                  
  1986                                  	; building closure for cdr
  1987 0000013D 48BF-                   	mov rdi, free_var_64
  1987 0000013F [0512000000000000] 
  1988 00000147 48BE-                   	mov rsi, L_code_ptr_cdr
  1988 00000149 [B05D010000000000] 
  1989 00000151 E8FC550100              	call bind_primitive
  1990                                  
  1991                                  	; building closure for string-length
  1992 00000156 48BF-                   	mov rdi, free_var_127
  1992 00000158 [3416000000000000] 
  1993 00000160 48BE-                   	mov rsi, L_code_ptr_string_length
  1993 00000162 [D45D010000000000] 
  1994 0000016A E8E3550100              	call bind_primitive
  1995                                  
  1996                                  	; building closure for vector-length
  1997 0000016F 48BF-                   	mov rdi, free_var_143
  1997 00000171 [4417000000000000] 
  1998 00000179 48BE-                   	mov rsi, L_code_ptr_vector_length
  1998 0000017B [FD5D010000000000] 
  1999 00000183 E8CA550100              	call bind_primitive
  2000                                  
  2001                                  	; building closure for integer->real
  2002 00000188 48BF-                   	mov rdi, free_var_90
  2002 0000018A [BF13000000000000] 
  2003 00000192 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2003 00000194 [6E5E010000000000] 
  2004 0000019C E8B1550100              	call bind_primitive
  2005                                  
  2006                                  	; building closure for fraction->real
  2007 000001A1 48BF-                   	mov rdi, free_var_87
  2007 000001A3 [8C13000000000000] 
  2008 000001AB 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2008 000001AD [9C5E010000000000] 
  2009 000001B5 E898550100              	call bind_primitive
  2010                                  
  2011                                  	; building closure for char->integer
  2012 000001BA 48BF-                   	mov rdi, free_var_65
  2012 000001BC [1612000000000000] 
  2013 000001C4 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2013 000001C6 [D75E010000000000] 
  2014 000001CE E87F550100              	call bind_primitive
  2015                                  
  2016                                  	; building closure for integer->char
  2017 000001D3 48BF-                   	mov rdi, free_var_89
  2017 000001D5 [AE13000000000000] 
  2018 000001DD 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2018 000001DF [465F010000000000] 
  2019 000001E7 E866550100              	call bind_primitive
  2020                                  
  2021                                  	; building closure for trng
  2022 000001EC 48BF-                   	mov rdi, free_var_139
  2022 000001EE [0017000000000000] 
  2023 000001F6 48BE-                   	mov rsi, L_code_ptr_trng
  2023 000001F8 [915F010000000000] 
  2024 00000200 E84D550100              	call bind_primitive
  2025                                  
  2026                                  	; building closure for zero?
  2027 00000205 48BF-                   	mov rdi, free_var_151
  2027 00000207 [CC17000000000000] 
  2028 0000020F 48BE-                   	mov rsi, L_code_ptr_is_zero
  2028 00000211 [B05F010000000000] 
  2029 00000219 E834550100              	call bind_primitive
  2030                                  
  2031                                  	; building closure for integer?
  2032 0000021E 48BF-                   	mov rdi, free_var_91
  2032 00000220 [D013000000000000] 
  2033 00000228 48BE-                   	mov rsi, L_code_ptr_is_integer
  2033 0000022A [1560010000000000] 
  2034 00000232 E81B550100              	call bind_primitive
  2035                                  
  2036                                  	; building closure for __bin-apply
  2037 00000237 48BF-                   	mov rdi, free_var_12
  2037 00000239 [910E000000000000] 
  2038 00000241 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2038 00000243 [C258010000000000] 
  2039 0000024B E802550100              	call bind_primitive
  2040                                  
  2041                                  	; building closure for __bin-add-rr
  2042 00000250 48BF-                   	mov rdi, free_var_10
  2042 00000252 [6F0E000000000000] 
  2043 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2043 0000025C [4760010000000000] 
  2044 00000264 E8E9540100              	call bind_primitive
  2045                                  
  2046                                  	; building closure for __bin-sub-rr
  2047 00000269 48BF-                   	mov rdi, free_var_26
  2047 0000026B [7F0F000000000000] 
  2048 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2048 00000275 [8760010000000000] 
  2049 0000027D E8D0540100              	call bind_primitive
  2050                                  
  2051                                  	; building closure for __bin-mul-rr
  2052 00000282 48BF-                   	mov rdi, free_var_23
  2052 00000284 [4C0F000000000000] 
  2053 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2053 0000028E [C760010000000000] 
  2054 00000296 E8B7540100              	call bind_primitive
  2055                                  
  2056                                  	; building closure for __bin-div-rr
  2057 0000029B 48BF-                   	mov rdi, free_var_14
  2057 0000029D [B30E000000000000] 
  2058 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2058 000002A7 [0761010000000000] 
  2059 000002AF E89E540100              	call bind_primitive
  2060                                  
  2061                                  	; building closure for __bin-add-qq
  2062 000002B4 48BF-                   	mov rdi, free_var_9
  2062 000002B6 [5E0E000000000000] 
  2063 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2063 000002C0 [9161010000000000] 
  2064 000002C8 E885540100              	call bind_primitive
  2065                                  
  2066                                  	; building closure for __bin-sub-qq
  2067 000002CD 48BF-                   	mov rdi, free_var_25
  2067 000002CF [6E0F000000000000] 
  2068 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2068 000002D9 [3162010000000000] 
  2069 000002E1 E86C540100              	call bind_primitive
  2070                                  
  2071                                  	; building closure for __bin-mul-qq
  2072 000002E6 48BF-                   	mov rdi, free_var_22
  2072 000002E8 [3B0F000000000000] 
  2073 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2073 000002F2 [D662010000000000] 
  2074 000002FA E853540100              	call bind_primitive
  2075                                  
  2076                                  	; building closure for __bin-div-qq
  2077 000002FF 48BF-                   	mov rdi, free_var_13
  2077 00000301 [A20E000000000000] 
  2078 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2078 0000030B [7063010000000000] 
  2079 00000313 E83A540100              	call bind_primitive
  2080                                  
  2081                                  	; building closure for __bin-add-zz
  2082 00000318 48BF-                   	mov rdi, free_var_11
  2082 0000031A [800E000000000000] 
  2083 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2083 00000324 [5561010000000000] 
  2084 0000032C E821540100              	call bind_primitive
  2085                                  
  2086                                  	; building closure for __bin-sub-zz
  2087 00000331 48BF-                   	mov rdi, free_var_27
  2087 00000333 [900F000000000000] 
  2088 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2088 0000033D [F561010000000000] 
  2089 00000345 E808540100              	call bind_primitive
  2090                                  
  2091                                  	; building closure for __bin-mul-zz
  2092 0000034A 48BF-                   	mov rdi, free_var_24
  2092 0000034C [5D0F000000000000] 
  2093 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2093 00000356 [9562010000000000] 
  2094 0000035E E8EF530100              	call bind_primitive
  2095                                  
  2096                                  	; building closure for __bin-div-zz
  2097 00000363 48BF-                   	mov rdi, free_var_15
  2097 00000365 [C40E000000000000] 
  2098 0000036D 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2098 0000036F [2A63010000000000] 
  2099 00000377 E8D6530100              	call bind_primitive
  2100                                  
  2101                                  	; building closure for error
  2102 0000037C 48BF-                   	mov rdi, free_var_82
  2102 0000037E [3713000000000000] 
  2103 00000386 48BE-                   	mov rsi, L_code_ptr_error
  2103 00000388 [5A64010000000000] 
  2104 00000390 E8BD530100              	call bind_primitive
  2105                                  
  2106                                  	; building closure for __bin-less-than-rr
  2107 00000395 48BF-                   	mov rdi, free_var_20
  2107 00000397 [190F000000000000] 
  2108 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2108 000003A1 [1665010000000000] 
  2109 000003A9 E8A4530100              	call bind_primitive
  2110                                  
  2111                                  	; building closure for __bin-less-than-qq
  2112 000003AE 48BF-                   	mov rdi, free_var_19
  2112 000003B0 [080F000000000000] 
  2113 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2113 000003BA [B865010000000000] 
  2114 000003C2 E88B530100              	call bind_primitive
  2115                                  
  2116                                  	; building closure for __bin-less-than-zz
  2117 000003C7 48BF-                   	mov rdi, free_var_21
  2117 000003C9 [2A0F000000000000] 
  2118 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2118 000003D3 [6965010000000000] 
  2119 000003DB E872530100              	call bind_primitive
  2120                                  
  2121                                  	; building closure for __bin-equal-rr
  2122 000003E0 48BF-                   	mov rdi, free_var_17
  2122 000003E2 [E60E000000000000] 
  2123 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2123 000003EC [1766010000000000] 
  2124 000003F4 E859530100              	call bind_primitive
  2125                                  
  2126                                  	; building closure for __bin-equal-qq
  2127 000003F9 48BF-                   	mov rdi, free_var_16
  2127 000003FB [D50E000000000000] 
  2128 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2128 00000405 [B966010000000000] 
  2129 0000040D E840530100              	call bind_primitive
  2130                                  
  2131                                  	; building closure for __bin-equal-zz
  2132 00000412 48BF-                   	mov rdi, free_var_18
  2132 00000414 [F70E000000000000] 
  2133 0000041C 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2133 0000041E [6A66010000000000] 
  2134 00000426 E827530100              	call bind_primitive
  2135                                  
  2136                                  	; building closure for remainder
  2137 0000042B 48BF-                   	mov rdi, free_var_117
  2137 0000042D [8A15000000000000] 
  2138 00000435 48BE-                   	mov rsi, L_code_ptr_remainder
  2138 00000437 [6467010000000000] 
  2139 0000043F E80E530100              	call bind_primitive
  2140                                  
  2141                                  	; building closure for string-ref
  2142 00000444 48BF-                   	mov rdi, free_var_128
  2142 00000446 [4516000000000000] 
  2143 0000044E 48BE-                   	mov rsi, L_code_ptr_string_ref
  2143 00000450 [1468010000000000] 
  2144 00000458 E8F5520100              	call bind_primitive
  2145                                  
  2146                                  	; building closure for vector-ref
  2147 0000045D 48BF-                   	mov rdi, free_var_144
  2147 0000045F [5517000000000000] 
  2148 00000467 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2148 00000469 [7068010000000000] 
  2149 00000471 E8DC520100              	call bind_primitive
  2150                                  
  2151                                  	; building closure for vector-set!
  2152 00000476 48BF-                   	mov rdi, free_var_147
  2152 00000478 [8817000000000000] 
  2153 00000480 48BE-                   	mov rsi, L_code_ptr_vector_set
  2153 00000482 [BD68010000000000] 
  2154 0000048A E8C3520100              	call bind_primitive
  2155                                  
  2156                                  	; building closure for string-set!
  2157 0000048F 48BF-                   	mov rdi, free_var_131
  2157 00000491 [7816000000000000] 
  2158 00000499 48BE-                   	mov rsi, L_code_ptr_string_set
  2158 0000049B [1869010000000000] 
  2159 000004A3 E8AA520100              	call bind_primitive
  2160                                  
  2161                                  	; building closure for make-vector
  2162 000004A8 48BF-                   	mov rdi, free_var_101
  2162 000004AA [7A14000000000000] 
  2163 000004B2 48BE-                   	mov rsi, L_code_ptr_make_vector
  2163 000004B4 [7E69010000000000] 
  2164 000004BC E891520100              	call bind_primitive
  2165                                  
  2166                                  	; building closure for make-string
  2167 000004C1 48BF-                   	mov rdi, free_var_99
  2167 000004C3 [5814000000000000] 
  2168 000004CB 48BE-                   	mov rsi, L_code_ptr_make_string
  2168 000004CD [D969010000000000] 
  2169 000004D5 E878520100              	call bind_primitive
  2170                                  
  2171                                  	; building closure for eq?
  2172 000004DA 48BF-                   	mov rdi, free_var_80
  2172 000004DC [1513000000000000] 
  2173 000004E4 48BE-                   	mov rsi, L_code_ptr_is_eq
  2173 000004E6 [8E6A010000000000] 
  2174 000004EE E85F520100              	call bind_primitive
  2175                                  
  2176                                  	; building closure for __integer-to-fraction
  2177 000004F3 48BF-                   	mov rdi, free_var_29
  2177 000004F5 [B20F000000000000] 
  2178 000004FD 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2178 000004FF [085F010000000000] 
  2179 00000507 E846520100              	call bind_primitive
  2180                                  
  2181 0000050C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2182 00000511 E80C4A0100              	call malloc
  2183 00000516 50                      	push rax
  2184 00000517 BF00000000              	mov rdi, 8 * 0	; new rib
  2185 0000051C E8014A0100              	call malloc
  2186 00000521 50                      	push rax
  2187 00000522 BF08000000              	mov rdi, 8 * 1	; extended env
  2188 00000527 E8F6490100              	call malloc
  2189 0000052C 488B7D10                	mov rdi, ENV
  2190 00000530 BE00000000              	mov rsi, 0
  2191 00000535 BA01000000              	mov rdx, 1
  2192                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2193 0000053A 4883FE00                	cmp rsi, 0
  2194 0000053E 7410                    	je .L_lambda_simple_env_end_0001
  2195 00000540 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2196 00000544 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2197 00000548 48FFC6                  	inc rsi
  2198 0000054B 48FFC2                  	inc rdx
  2199 0000054E EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2200                                  .L_lambda_simple_env_end_0001:
  2201 00000550 5B                      	pop rbx
  2202 00000551 BE00000000              	mov rsi, 0
  2203                                  .L_lambda_simple_params_loop_0001:	; copy params
  2204 00000556 4883FE00                	cmp rsi, 0
  2205 0000055A 740E                    	je .L_lambda_simple_params_end_0001
  2206 0000055C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2207 00000561 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2208 00000565 48FFC6                  	inc rsi
  2209 00000568 EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2210                                  .L_lambda_simple_params_end_0001:
  2211 0000056A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2212 0000056D 4889C3                  	mov rbx, rax
  2213 00000570 58                      	pop rax
  2214 00000571 C60004                  	mov byte [rax], T_closure
  2215 00000574 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2216 00000578 48C74009[85050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2217 00000580 E99C000000              	jmp .L_lambda_simple_end_0001
  2218                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2219 00000585 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2220 0000058B 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2221 0000058D FF742410                	push qword [rsp + 8 * 2]
  2222 00000591 6A01                    	push 1
  2223 00000593 E943490100              	jmp L_error_incorrect_arity_simple
  2224                                  .L_lambda_simple_arity_check_ok_0001:
  2225 00000598 C8000000                	enter 0, 0
  2226                                  	; Initiating tail-call optimization
  2227                                  	; preparing a non-tail-call
  2228 0000059C 488B4520                	mov rax, PARAM(0)	; param x
  2229 000005A0 50                      	push rax
  2230 000005A1 6A01                    	push 1	; arg count
  2231 000005A3 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2232 000005AB 803805                  	cmp byte [rax], T_undefined
  2233 000005AE 0F8441480100            	je L_error_fvar_undefined
  2234 000005B4 803804                  	cmp byte [rax], T_closure
  2235 000005B7 0F85BC480100            	jne L_error_non_closure
  2236 000005BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2237 000005C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2238 000005C3 50                      	push rax
  2239 000005C4 6A01                    	push 1	; Number of arguments
  2240 000005C6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2241 000005CE 803805                  	cmp byte [rax], T_undefined
  2242 000005D1 0F841E480100            	je L_error_fvar_undefined
  2243 000005D7 803804                  	cmp byte [rax], T_closure
  2244 000005DA 0F8599480100            	jne L_error_non_closure
  2245 000005E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2246                                  
  2247                                  	; Reclaiming the current stack frame
  2248 000005E3 FF7508                  	push qword [rbp + 8]
  2249 000005E6 FF7500                  	push qword [rbp]
  2250 000005E9 41BA05000000            	mov r10, 1 + 4
  2251 000005EF 4C8B4518                	mov r8, COUNT
  2252 000005F3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2253 000005F8 4C8D4DF8                	lea r9, [rbp - 8]
  2254                                  .L_tc_recycle_frame_loop_0001:
  2255 000005FC 4983FA00                	cmp r10, 0
  2256 00000600 7413                    	je .L_tc_recycle_frame_done_0001
  2257 00000602 4D8B19                  	mov r11, qword [r9]
  2258 00000605 4D8918                  	mov qword [r8], r11
  2259 00000608 49FFCA                  	dec r10
  2260 0000060B 4983E808                	sub r8, 8
  2261 0000060F 4983E908                	sub r9, 8
  2262 00000613 EBE7                    	jmp .L_tc_recycle_frame_loop_0001
  2263                                  .L_tc_recycle_frame_done_0001:
  2264 00000615 498D6008                	lea rsp, [r8 + 8]
  2265 00000619 5D                      	pop rbp
  2266 0000061A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2267 0000061D C9                      	leave
  2268 0000061E C21800                  	ret AND_KILL_FRAME(1)
  2269                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2270 00000621 48890425[7E100000]      	mov qword [free_var_41], rax
  2271 00000629 48B8-                   	mov rax, sob_void
  2271 0000062B [0000000000000000] 
  2272                                  
  2273 00000633 4889C7                  	mov rdi, rax
  2274 00000636 E83C4B0100              	call print_sexpr_if_not_void
  2275 0000063B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2276 00000640 E8DD480100              	call malloc
  2277 00000645 50                      	push rax
  2278 00000646 BF00000000              	mov rdi, 8 * 0	; new rib
  2279 0000064B E8D2480100              	call malloc
  2280 00000650 50                      	push rax
  2281 00000651 BF08000000              	mov rdi, 8 * 1	; extended env
  2282 00000656 E8C7480100              	call malloc
  2283 0000065B 488B7D10                	mov rdi, ENV
  2284 0000065F BE00000000              	mov rsi, 0
  2285 00000664 BA01000000              	mov rdx, 1
  2286                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2287 00000669 4883FE00                	cmp rsi, 0
  2288 0000066D 7410                    	je .L_lambda_simple_env_end_0002
  2289 0000066F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2290 00000673 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2291 00000677 48FFC6                  	inc rsi
  2292 0000067A 48FFC2                  	inc rdx
  2293 0000067D EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2294                                  .L_lambda_simple_env_end_0002:
  2295 0000067F 5B                      	pop rbx
  2296 00000680 BE00000000              	mov rsi, 0
  2297                                  .L_lambda_simple_params_loop_0002:	; copy params
  2298 00000685 4883FE00                	cmp rsi, 0
  2299 00000689 740E                    	je .L_lambda_simple_params_end_0002
  2300 0000068B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2301 00000690 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2302 00000694 48FFC6                  	inc rsi
  2303 00000697 EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2304                                  .L_lambda_simple_params_end_0002:
  2305 00000699 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2306 0000069C 4889C3                  	mov rbx, rax
  2307 0000069F 58                      	pop rax
  2308 000006A0 C60004                  	mov byte [rax], T_closure
  2309 000006A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2310 000006A7 48C74009[B4060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2311 000006AF E99C000000              	jmp .L_lambda_simple_end_0002
  2312                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2313 000006B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2314 000006BA 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2315 000006BC FF742410                	push qword [rsp + 8 * 2]
  2316 000006C0 6A01                    	push 1
  2317 000006C2 E914480100              	jmp L_error_incorrect_arity_simple
  2318                                  .L_lambda_simple_arity_check_ok_0002:
  2319 000006C7 C8000000                	enter 0, 0
  2320                                  	; Initiating tail-call optimization
  2321                                  	; preparing a non-tail-call
  2322 000006CB 488B4520                	mov rax, PARAM(0)	; param x
  2323 000006CF 50                      	push rax
  2324 000006D0 6A01                    	push 1	; arg count
  2325 000006D2 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2326 000006DA 803805                  	cmp byte [rax], T_undefined
  2327 000006DD 0F8412470100            	je L_error_fvar_undefined
  2328 000006E3 803804                  	cmp byte [rax], T_closure
  2329 000006E6 0F858D470100            	jne L_error_non_closure
  2330 000006EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  2331 000006EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  2332 000006F2 50                      	push rax
  2333 000006F3 6A01                    	push 1	; Number of arguments
  2334 000006F5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2335 000006FD 803805                  	cmp byte [rax], T_undefined
  2336 00000700 0F84EF460100            	je L_error_fvar_undefined
  2337 00000706 803804                  	cmp byte [rax], T_closure
  2338 00000709 0F856A470100            	jne L_error_non_closure
  2339 0000070F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2340                                  
  2341                                  	; Reclaiming the current stack frame
  2342 00000712 FF7508                  	push qword [rbp + 8]
  2343 00000715 FF7500                  	push qword [rbp]
  2344 00000718 41BA05000000            	mov r10, 1 + 4
  2345 0000071E 4C8B4518                	mov r8, COUNT
  2346 00000722 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2347 00000727 4C8D4DF8                	lea r9, [rbp - 8]
  2348                                  .L_tc_recycle_frame_loop_0002:
  2349 0000072B 4983FA00                	cmp r10, 0
  2350 0000072F 7413                    	je .L_tc_recycle_frame_done_0002
  2351 00000731 4D8B19                  	mov r11, qword [r9]
  2352 00000734 4D8918                  	mov qword [r8], r11
  2353 00000737 49FFCA                  	dec r10
  2354 0000073A 4983E808                	sub r8, 8
  2355 0000073E 4983E908                	sub r9, 8
  2356 00000742 EBE7                    	jmp .L_tc_recycle_frame_loop_0002
  2357                                  .L_tc_recycle_frame_done_0002:
  2358 00000744 498D6008                	lea rsp, [r8 + 8]
  2359 00000748 5D                      	pop rbp
  2360 00000749 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2361 0000074C C9                      	leave
  2362 0000074D C21800                  	ret AND_KILL_FRAME(1)
  2363                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2364 00000750 48890425[F5100000]      	mov qword [free_var_48], rax
  2365 00000758 48B8-                   	mov rax, sob_void
  2365 0000075A [0000000000000000] 
  2366                                  
  2367 00000762 4889C7                  	mov rdi, rax
  2368 00000765 E80D4A0100              	call print_sexpr_if_not_void
  2369 0000076A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2370 0000076F E8AE470100              	call malloc
  2371 00000774 50                      	push rax
  2372 00000775 BF00000000              	mov rdi, 8 * 0	; new rib
  2373 0000077A E8A3470100              	call malloc
  2374 0000077F 50                      	push rax
  2375 00000780 BF08000000              	mov rdi, 8 * 1	; extended env
  2376 00000785 E898470100              	call malloc
  2377 0000078A 488B7D10                	mov rdi, ENV
  2378 0000078E BE00000000              	mov rsi, 0
  2379 00000793 BA01000000              	mov rdx, 1
  2380                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2381 00000798 4883FE00                	cmp rsi, 0
  2382 0000079C 7410                    	je .L_lambda_simple_env_end_0003
  2383 0000079E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2384 000007A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2385 000007A6 48FFC6                  	inc rsi
  2386 000007A9 48FFC2                  	inc rdx
  2387 000007AC EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2388                                  .L_lambda_simple_env_end_0003:
  2389 000007AE 5B                      	pop rbx
  2390 000007AF BE00000000              	mov rsi, 0
  2391                                  .L_lambda_simple_params_loop_0003:	; copy params
  2392 000007B4 4883FE00                	cmp rsi, 0
  2393 000007B8 740E                    	je .L_lambda_simple_params_end_0003
  2394 000007BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2395 000007BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2396 000007C3 48FFC6                  	inc rsi
  2397 000007C6 EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2398                                  .L_lambda_simple_params_end_0003:
  2399 000007C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2400 000007CB 4889C3                  	mov rbx, rax
  2401 000007CE 58                      	pop rax
  2402 000007CF C60004                  	mov byte [rax], T_closure
  2403 000007D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2404 000007D6 48C74009[E3070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2405 000007DE E99C000000              	jmp .L_lambda_simple_end_0003
  2406                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2407 000007E3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2408 000007E9 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2409 000007EB FF742410                	push qword [rsp + 8 * 2]
  2410 000007EF 6A01                    	push 1
  2411 000007F1 E9E5460100              	jmp L_error_incorrect_arity_simple
  2412                                  .L_lambda_simple_arity_check_ok_0003:
  2413 000007F6 C8000000                	enter 0, 0
  2414                                  	; Initiating tail-call optimization
  2415                                  	; preparing a non-tail-call
  2416 000007FA 488B4520                	mov rax, PARAM(0)	; param x
  2417 000007FE 50                      	push rax
  2418 000007FF 6A01                    	push 1	; arg count
  2419 00000801 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2420 00000809 803805                  	cmp byte [rax], T_undefined
  2421 0000080C 0F84E3450100            	je L_error_fvar_undefined
  2422 00000812 803804                  	cmp byte [rax], T_closure
  2423 00000815 0F855E460100            	jne L_error_non_closure
  2424 0000081B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2425 0000081E FF5009                  	call SOB_CLOSURE_CODE(rax)
  2426 00000821 50                      	push rax
  2427 00000822 6A01                    	push 1	; Number of arguments
  2428 00000824 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2429 0000082C 803805                  	cmp byte [rax], T_undefined
  2430 0000082F 0F84C0450100            	je L_error_fvar_undefined
  2431 00000835 803804                  	cmp byte [rax], T_closure
  2432 00000838 0F853B460100            	jne L_error_non_closure
  2433 0000083E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2434                                  
  2435                                  	; Reclaiming the current stack frame
  2436 00000841 FF7508                  	push qword [rbp + 8]
  2437 00000844 FF7500                  	push qword [rbp]
  2438 00000847 41BA05000000            	mov r10, 1 + 4
  2439 0000084D 4C8B4518                	mov r8, COUNT
  2440 00000851 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2441 00000856 4C8D4DF8                	lea r9, [rbp - 8]
  2442                                  .L_tc_recycle_frame_loop_0003:
  2443 0000085A 4983FA00                	cmp r10, 0
  2444 0000085E 7413                    	je .L_tc_recycle_frame_done_0003
  2445 00000860 4D8B19                  	mov r11, qword [r9]
  2446 00000863 4D8918                  	mov qword [r8], r11
  2447 00000866 49FFCA                  	dec r10
  2448 00000869 4983E808                	sub r8, 8
  2449 0000086D 4983E908                	sub r9, 8
  2450 00000871 EBE7                    	jmp .L_tc_recycle_frame_loop_0003
  2451                                  .L_tc_recycle_frame_done_0003:
  2452 00000873 498D6008                	lea rsp, [r8 + 8]
  2453 00000877 5D                      	pop rbp
  2454 00000878 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2455 0000087B C9                      	leave
  2456 0000087C C21800                  	ret AND_KILL_FRAME(1)
  2457                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2458 0000087F 48890425[7D110000]      	mov qword [free_var_56], rax
  2459 00000887 48B8-                   	mov rax, sob_void
  2459 00000889 [0000000000000000] 
  2460                                  
  2461 00000891 4889C7                  	mov rdi, rax
  2462 00000894 E8DE480100              	call print_sexpr_if_not_void
  2463 00000899 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2464 0000089E E87F460100              	call malloc
  2465 000008A3 50                      	push rax
  2466 000008A4 BF00000000              	mov rdi, 8 * 0	; new rib
  2467 000008A9 E874460100              	call malloc
  2468 000008AE 50                      	push rax
  2469 000008AF BF08000000              	mov rdi, 8 * 1	; extended env
  2470 000008B4 E869460100              	call malloc
  2471 000008B9 488B7D10                	mov rdi, ENV
  2472 000008BD BE00000000              	mov rsi, 0
  2473 000008C2 BA01000000              	mov rdx, 1
  2474                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2475 000008C7 4883FE00                	cmp rsi, 0
  2476 000008CB 7410                    	je .L_lambda_simple_env_end_0004
  2477 000008CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2478 000008D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2479 000008D5 48FFC6                  	inc rsi
  2480 000008D8 48FFC2                  	inc rdx
  2481 000008DB EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2482                                  .L_lambda_simple_env_end_0004:
  2483 000008DD 5B                      	pop rbx
  2484 000008DE BE00000000              	mov rsi, 0
  2485                                  .L_lambda_simple_params_loop_0004:	; copy params
  2486 000008E3 4883FE00                	cmp rsi, 0
  2487 000008E7 740E                    	je .L_lambda_simple_params_end_0004
  2488 000008E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2489 000008EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2490 000008F2 48FFC6                  	inc rsi
  2491 000008F5 EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2492                                  .L_lambda_simple_params_end_0004:
  2493 000008F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2494 000008FA 4889C3                  	mov rbx, rax
  2495 000008FD 58                      	pop rax
  2496 000008FE C60004                  	mov byte [rax], T_closure
  2497 00000901 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2498 00000905 48C74009[12090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2499 0000090D E99C000000              	jmp .L_lambda_simple_end_0004
  2500                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2501 00000912 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2502 00000918 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2503 0000091A FF742410                	push qword [rsp + 8 * 2]
  2504 0000091E 6A01                    	push 1
  2505 00000920 E9B6450100              	jmp L_error_incorrect_arity_simple
  2506                                  .L_lambda_simple_arity_check_ok_0004:
  2507 00000925 C8000000                	enter 0, 0
  2508                                  	; Initiating tail-call optimization
  2509                                  	; preparing a non-tail-call
  2510 00000929 488B4520                	mov rax, PARAM(0)	; param x
  2511 0000092D 50                      	push rax
  2512 0000092E 6A01                    	push 1	; arg count
  2513 00000930 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2514 00000938 803805                  	cmp byte [rax], T_undefined
  2515 0000093B 0F84B4440100            	je L_error_fvar_undefined
  2516 00000941 803804                  	cmp byte [rax], T_closure
  2517 00000944 0F852F450100            	jne L_error_non_closure
  2518 0000094A FF7001                  	push SOB_CLOSURE_ENV(rax)
  2519 0000094D FF5009                  	call SOB_CLOSURE_CODE(rax)
  2520 00000950 50                      	push rax
  2521 00000951 6A01                    	push 1	; Number of arguments
  2522 00000953 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2523 0000095B 803805                  	cmp byte [rax], T_undefined
  2524 0000095E 0F8491440100            	je L_error_fvar_undefined
  2525 00000964 803804                  	cmp byte [rax], T_closure
  2526 00000967 0F850C450100            	jne L_error_non_closure
  2527 0000096D FF7001                  	push SOB_CLOSURE_ENV(rax)
  2528                                  
  2529                                  	; Reclaiming the current stack frame
  2530 00000970 FF7508                  	push qword [rbp + 8]
  2531 00000973 FF7500                  	push qword [rbp]
  2532 00000976 41BA05000000            	mov r10, 1 + 4
  2533 0000097C 4C8B4518                	mov r8, COUNT
  2534 00000980 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2535 00000985 4C8D4DF8                	lea r9, [rbp - 8]
  2536                                  .L_tc_recycle_frame_loop_0004:
  2537 00000989 4983FA00                	cmp r10, 0
  2538 0000098D 7413                    	je .L_tc_recycle_frame_done_0004
  2539 0000098F 4D8B19                  	mov r11, qword [r9]
  2540 00000992 4D8918                  	mov qword [r8], r11
  2541 00000995 49FFCA                  	dec r10
  2542 00000998 4983E808                	sub r8, 8
  2543 0000099C 4983E908                	sub r9, 8
  2544 000009A0 EBE7                    	jmp .L_tc_recycle_frame_loop_0004
  2545                                  .L_tc_recycle_frame_done_0004:
  2546 000009A2 498D6008                	lea rsp, [r8 + 8]
  2547 000009A6 5D                      	pop rbp
  2548 000009A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2549 000009AA C9                      	leave
  2550 000009AB C21800                  	ret AND_KILL_FRAME(1)
  2551                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2552 000009AE 48890425[F4110000]      	mov qword [free_var_63], rax
  2553 000009B6 48B8-                   	mov rax, sob_void
  2553 000009B8 [0000000000000000] 
  2554                                  
  2555 000009C0 4889C7                  	mov rdi, rax
  2556 000009C3 E8AF470100              	call print_sexpr_if_not_void
  2557 000009C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2558 000009CD E850450100              	call malloc
  2559 000009D2 50                      	push rax
  2560 000009D3 BF00000000              	mov rdi, 8 * 0	; new rib
  2561 000009D8 E845450100              	call malloc
  2562 000009DD 50                      	push rax
  2563 000009DE BF08000000              	mov rdi, 8 * 1	; extended env
  2564 000009E3 E83A450100              	call malloc
  2565 000009E8 488B7D10                	mov rdi, ENV
  2566 000009EC BE00000000              	mov rsi, 0
  2567 000009F1 BA01000000              	mov rdx, 1
  2568                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2569 000009F6 4883FE00                	cmp rsi, 0
  2570 000009FA 7410                    	je .L_lambda_simple_env_end_0005
  2571 000009FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2572 00000A00 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2573 00000A04 48FFC6                  	inc rsi
  2574 00000A07 48FFC2                  	inc rdx
  2575 00000A0A EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2576                                  .L_lambda_simple_env_end_0005:
  2577 00000A0C 5B                      	pop rbx
  2578 00000A0D BE00000000              	mov rsi, 0
  2579                                  .L_lambda_simple_params_loop_0005:	; copy params
  2580 00000A12 4883FE00                	cmp rsi, 0
  2581 00000A16 740E                    	je .L_lambda_simple_params_end_0005
  2582 00000A18 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2583 00000A1D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2584 00000A21 48FFC6                  	inc rsi
  2585 00000A24 EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2586                                  .L_lambda_simple_params_end_0005:
  2587 00000A26 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2588 00000A29 4889C3                  	mov rbx, rax
  2589 00000A2C 58                      	pop rax
  2590 00000A2D C60004                  	mov byte [rax], T_closure
  2591 00000A30 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2592 00000A34 48C74009[410A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2593 00000A3C E99C000000              	jmp .L_lambda_simple_end_0005
  2594                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2595 00000A41 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2596 00000A47 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2597 00000A49 FF742410                	push qword [rsp + 8 * 2]
  2598 00000A4D 6A01                    	push 1
  2599 00000A4F E987440100              	jmp L_error_incorrect_arity_simple
  2600                                  .L_lambda_simple_arity_check_ok_0005:
  2601 00000A54 C8000000                	enter 0, 0
  2602                                  	; Initiating tail-call optimization
  2603                                  	; preparing a non-tail-call
  2604 00000A58 488B4520                	mov rax, PARAM(0)	; param x
  2605 00000A5C 50                      	push rax
  2606 00000A5D 6A01                    	push 1	; arg count
  2607 00000A5F 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2608 00000A67 803805                  	cmp byte [rax], T_undefined
  2609 00000A6A 0F8485430100            	je L_error_fvar_undefined
  2610 00000A70 803804                  	cmp byte [rax], T_closure
  2611 00000A73 0F8500440100            	jne L_error_non_closure
  2612 00000A79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2613 00000A7C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2614 00000A7F 50                      	push rax
  2615 00000A80 6A01                    	push 1	; Number of arguments
  2616 00000A82 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2617 00000A8A 803805                  	cmp byte [rax], T_undefined
  2618 00000A8D 0F8462430100            	je L_error_fvar_undefined
  2619 00000A93 803804                  	cmp byte [rax], T_closure
  2620 00000A96 0F85DD430100            	jne L_error_non_closure
  2621 00000A9C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2622                                  
  2623                                  	; Reclaiming the current stack frame
  2624 00000A9F FF7508                  	push qword [rbp + 8]
  2625 00000AA2 FF7500                  	push qword [rbp]
  2626 00000AA5 41BA05000000            	mov r10, 1 + 4
  2627 00000AAB 4C8B4518                	mov r8, COUNT
  2628 00000AAF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2629 00000AB4 4C8D4DF8                	lea r9, [rbp - 8]
  2630                                  .L_tc_recycle_frame_loop_0005:
  2631 00000AB8 4983FA00                	cmp r10, 0
  2632 00000ABC 7413                    	je .L_tc_recycle_frame_done_0005
  2633 00000ABE 4D8B19                  	mov r11, qword [r9]
  2634 00000AC1 4D8918                  	mov qword [r8], r11
  2635 00000AC4 49FFCA                  	dec r10
  2636 00000AC7 4983E808                	sub r8, 8
  2637 00000ACB 4983E908                	sub r9, 8
  2638 00000ACF EBE7                    	jmp .L_tc_recycle_frame_loop_0005
  2639                                  .L_tc_recycle_frame_done_0005:
  2640 00000AD1 498D6008                	lea rsp, [r8 + 8]
  2641 00000AD5 5D                      	pop rbp
  2642 00000AD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2643 00000AD9 C9                      	leave
  2644 00000ADA C21800                  	ret AND_KILL_FRAME(1)
  2645                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2646 00000ADD 48890425[3A100000]      	mov qword [free_var_37], rax
  2647 00000AE5 48B8-                   	mov rax, sob_void
  2647 00000AE7 [0000000000000000] 
  2648                                  
  2649 00000AEF 4889C7                  	mov rdi, rax
  2650 00000AF2 E880460100              	call print_sexpr_if_not_void
  2651 00000AF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2652 00000AFC E821440100              	call malloc
  2653 00000B01 50                      	push rax
  2654 00000B02 BF00000000              	mov rdi, 8 * 0	; new rib
  2655 00000B07 E816440100              	call malloc
  2656 00000B0C 50                      	push rax
  2657 00000B0D BF08000000              	mov rdi, 8 * 1	; extended env
  2658 00000B12 E80B440100              	call malloc
  2659 00000B17 488B7D10                	mov rdi, ENV
  2660 00000B1B BE00000000              	mov rsi, 0
  2661 00000B20 BA01000000              	mov rdx, 1
  2662                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2663 00000B25 4883FE00                	cmp rsi, 0
  2664 00000B29 7410                    	je .L_lambda_simple_env_end_0006
  2665 00000B2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2666 00000B2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2667 00000B33 48FFC6                  	inc rsi
  2668 00000B36 48FFC2                  	inc rdx
  2669 00000B39 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2670                                  .L_lambda_simple_env_end_0006:
  2671 00000B3B 5B                      	pop rbx
  2672 00000B3C BE00000000              	mov rsi, 0
  2673                                  .L_lambda_simple_params_loop_0006:	; copy params
  2674 00000B41 4883FE00                	cmp rsi, 0
  2675 00000B45 740E                    	je .L_lambda_simple_params_end_0006
  2676 00000B47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2677 00000B4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2678 00000B50 48FFC6                  	inc rsi
  2679 00000B53 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2680                                  .L_lambda_simple_params_end_0006:
  2681 00000B55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2682 00000B58 4889C3                  	mov rbx, rax
  2683 00000B5B 58                      	pop rax
  2684 00000B5C C60004                  	mov byte [rax], T_closure
  2685 00000B5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2686 00000B63 48C74009[700B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2687 00000B6B E99C000000              	jmp .L_lambda_simple_end_0006
  2688                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2689 00000B70 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2690 00000B76 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2691 00000B78 FF742410                	push qword [rsp + 8 * 2]
  2692 00000B7C 6A01                    	push 1
  2693 00000B7E E958430100              	jmp L_error_incorrect_arity_simple
  2694                                  .L_lambda_simple_arity_check_ok_0006:
  2695 00000B83 C8000000                	enter 0, 0
  2696                                  	; Initiating tail-call optimization
  2697                                  	; preparing a non-tail-call
  2698 00000B87 488B4520                	mov rax, PARAM(0)	; param x
  2699 00000B8B 50                      	push rax
  2700 00000B8C 6A01                    	push 1	; arg count
  2701 00000B8E 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2702 00000B96 803805                  	cmp byte [rax], T_undefined
  2703 00000B99 0F8456420100            	je L_error_fvar_undefined
  2704 00000B9F 803804                  	cmp byte [rax], T_closure
  2705 00000BA2 0F85D1420100            	jne L_error_non_closure
  2706 00000BA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2707 00000BAB FF5009                  	call SOB_CLOSURE_CODE(rax)
  2708 00000BAE 50                      	push rax
  2709 00000BAF 6A01                    	push 1	; Number of arguments
  2710 00000BB1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2711 00000BB9 803805                  	cmp byte [rax], T_undefined
  2712 00000BBC 0F8433420100            	je L_error_fvar_undefined
  2713 00000BC2 803804                  	cmp byte [rax], T_closure
  2714 00000BC5 0F85AE420100            	jne L_error_non_closure
  2715 00000BCB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2716                                  
  2717                                  	; Reclaiming the current stack frame
  2718 00000BCE FF7508                  	push qword [rbp + 8]
  2719 00000BD1 FF7500                  	push qword [rbp]
  2720 00000BD4 41BA05000000            	mov r10, 1 + 4
  2721 00000BDA 4C8B4518                	mov r8, COUNT
  2722 00000BDE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2723 00000BE3 4C8D4DF8                	lea r9, [rbp - 8]
  2724                                  .L_tc_recycle_frame_loop_0006:
  2725 00000BE7 4983FA00                	cmp r10, 0
  2726 00000BEB 7413                    	je .L_tc_recycle_frame_done_0006
  2727 00000BED 4D8B19                  	mov r11, qword [r9]
  2728 00000BF0 4D8918                  	mov qword [r8], r11
  2729 00000BF3 49FFCA                  	dec r10
  2730 00000BF6 4983E808                	sub r8, 8
  2731 00000BFA 4983E908                	sub r9, 8
  2732 00000BFE EBE7                    	jmp .L_tc_recycle_frame_loop_0006
  2733                                  .L_tc_recycle_frame_done_0006:
  2734 00000C00 498D6008                	lea rsp, [r8 + 8]
  2735 00000C04 5D                      	pop rbp
  2736 00000C05 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2737 00000C08 C9                      	leave
  2738 00000C09 C21800                  	ret AND_KILL_FRAME(1)
  2739                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2740 00000C0C 48890425[6D100000]      	mov qword [free_var_40], rax
  2741 00000C14 48B8-                   	mov rax, sob_void
  2741 00000C16 [0000000000000000] 
  2742                                  
  2743 00000C1E 4889C7                  	mov rdi, rax
  2744 00000C21 E851450100              	call print_sexpr_if_not_void
  2745 00000C26 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2746 00000C2B E8F2420100              	call malloc
  2747 00000C30 50                      	push rax
  2748 00000C31 BF00000000              	mov rdi, 8 * 0	; new rib
  2749 00000C36 E8E7420100              	call malloc
  2750 00000C3B 50                      	push rax
  2751 00000C3C BF08000000              	mov rdi, 8 * 1	; extended env
  2752 00000C41 E8DC420100              	call malloc
  2753 00000C46 488B7D10                	mov rdi, ENV
  2754 00000C4A BE00000000              	mov rsi, 0
  2755 00000C4F BA01000000              	mov rdx, 1
  2756                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2757 00000C54 4883FE00                	cmp rsi, 0
  2758 00000C58 7410                    	je .L_lambda_simple_env_end_0007
  2759 00000C5A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2760 00000C5E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2761 00000C62 48FFC6                  	inc rsi
  2762 00000C65 48FFC2                  	inc rdx
  2763 00000C68 EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2764                                  .L_lambda_simple_env_end_0007:
  2765 00000C6A 5B                      	pop rbx
  2766 00000C6B BE00000000              	mov rsi, 0
  2767                                  .L_lambda_simple_params_loop_0007:	; copy params
  2768 00000C70 4883FE00                	cmp rsi, 0
  2769 00000C74 740E                    	je .L_lambda_simple_params_end_0007
  2770 00000C76 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2771 00000C7B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2772 00000C7F 48FFC6                  	inc rsi
  2773 00000C82 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2774                                  .L_lambda_simple_params_end_0007:
  2775 00000C84 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2776 00000C87 4889C3                  	mov rbx, rax
  2777 00000C8A 58                      	pop rax
  2778 00000C8B C60004                  	mov byte [rax], T_closure
  2779 00000C8E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2780 00000C92 48C74009[9F0C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2781 00000C9A E99C000000              	jmp .L_lambda_simple_end_0007
  2782                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2783 00000C9F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2784 00000CA5 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2785 00000CA7 FF742410                	push qword [rsp + 8 * 2]
  2786 00000CAB 6A01                    	push 1
  2787 00000CAD E929420100              	jmp L_error_incorrect_arity_simple
  2788                                  .L_lambda_simple_arity_check_ok_0007:
  2789 00000CB2 C8000000                	enter 0, 0
  2790                                  	; Initiating tail-call optimization
  2791                                  	; preparing a non-tail-call
  2792 00000CB6 488B4520                	mov rax, PARAM(0)	; param x
  2793 00000CBA 50                      	push rax
  2794 00000CBB 6A01                    	push 1	; arg count
  2795 00000CBD 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2796 00000CC5 803805                  	cmp byte [rax], T_undefined
  2797 00000CC8 0F8427410100            	je L_error_fvar_undefined
  2798 00000CCE 803804                  	cmp byte [rax], T_closure
  2799 00000CD1 0F85A2410100            	jne L_error_non_closure
  2800 00000CD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2801 00000CDA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2802 00000CDD 50                      	push rax
  2803 00000CDE 6A01                    	push 1	; Number of arguments
  2804 00000CE0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2805 00000CE8 803805                  	cmp byte [rax], T_undefined
  2806 00000CEB 0F8404410100            	je L_error_fvar_undefined
  2807 00000CF1 803804                  	cmp byte [rax], T_closure
  2808 00000CF4 0F857F410100            	jne L_error_non_closure
  2809 00000CFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2810                                  
  2811                                  	; Reclaiming the current stack frame
  2812 00000CFD FF7508                  	push qword [rbp + 8]
  2813 00000D00 FF7500                  	push qword [rbp]
  2814 00000D03 41BA05000000            	mov r10, 1 + 4
  2815 00000D09 4C8B4518                	mov r8, COUNT
  2816 00000D0D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2817 00000D12 4C8D4DF8                	lea r9, [rbp - 8]
  2818                                  .L_tc_recycle_frame_loop_0007:
  2819 00000D16 4983FA00                	cmp r10, 0
  2820 00000D1A 7413                    	je .L_tc_recycle_frame_done_0007
  2821 00000D1C 4D8B19                  	mov r11, qword [r9]
  2822 00000D1F 4D8918                  	mov qword [r8], r11
  2823 00000D22 49FFCA                  	dec r10
  2824 00000D25 4983E808                	sub r8, 8
  2825 00000D29 4983E908                	sub r9, 8
  2826 00000D2D EBE7                    	jmp .L_tc_recycle_frame_loop_0007
  2827                                  .L_tc_recycle_frame_done_0007:
  2828 00000D2F 498D6008                	lea rsp, [r8 + 8]
  2829 00000D33 5D                      	pop rbp
  2830 00000D34 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2831 00000D37 C9                      	leave
  2832 00000D38 C21800                  	ret AND_KILL_FRAME(1)
  2833                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2834 00000D3B 48890425[B1100000]      	mov qword [free_var_44], rax
  2835 00000D43 48B8-                   	mov rax, sob_void
  2835 00000D45 [0000000000000000] 
  2836                                  
  2837 00000D4D 4889C7                  	mov rdi, rax
  2838 00000D50 E822440100              	call print_sexpr_if_not_void
  2839 00000D55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2840 00000D5A E8C3410100              	call malloc
  2841 00000D5F 50                      	push rax
  2842 00000D60 BF00000000              	mov rdi, 8 * 0	; new rib
  2843 00000D65 E8B8410100              	call malloc
  2844 00000D6A 50                      	push rax
  2845 00000D6B BF08000000              	mov rdi, 8 * 1	; extended env
  2846 00000D70 E8AD410100              	call malloc
  2847 00000D75 488B7D10                	mov rdi, ENV
  2848 00000D79 BE00000000              	mov rsi, 0
  2849 00000D7E BA01000000              	mov rdx, 1
  2850                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2851 00000D83 4883FE00                	cmp rsi, 0
  2852 00000D87 7410                    	je .L_lambda_simple_env_end_0008
  2853 00000D89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2854 00000D8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2855 00000D91 48FFC6                  	inc rsi
  2856 00000D94 48FFC2                  	inc rdx
  2857 00000D97 EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2858                                  .L_lambda_simple_env_end_0008:
  2859 00000D99 5B                      	pop rbx
  2860 00000D9A BE00000000              	mov rsi, 0
  2861                                  .L_lambda_simple_params_loop_0008:	; copy params
  2862 00000D9F 4883FE00                	cmp rsi, 0
  2863 00000DA3 740E                    	je .L_lambda_simple_params_end_0008
  2864 00000DA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2865 00000DAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2866 00000DAE 48FFC6                  	inc rsi
  2867 00000DB1 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2868                                  .L_lambda_simple_params_end_0008:
  2869 00000DB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2870 00000DB6 4889C3                  	mov rbx, rax
  2871 00000DB9 58                      	pop rax
  2872 00000DBA C60004                  	mov byte [rax], T_closure
  2873 00000DBD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2874 00000DC1 48C74009[CE0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2875 00000DC9 E99C000000              	jmp .L_lambda_simple_end_0008
  2876                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2877 00000DCE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2878 00000DD4 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2879 00000DD6 FF742410                	push qword [rsp + 8 * 2]
  2880 00000DDA 6A01                    	push 1
  2881 00000DDC E9FA400100              	jmp L_error_incorrect_arity_simple
  2882                                  .L_lambda_simple_arity_check_ok_0008:
  2883 00000DE1 C8000000                	enter 0, 0
  2884                                  	; Initiating tail-call optimization
  2885                                  	; preparing a non-tail-call
  2886 00000DE5 488B4520                	mov rax, PARAM(0)	; param x
  2887 00000DE9 50                      	push rax
  2888 00000DEA 6A01                    	push 1	; arg count
  2889 00000DEC 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  2890 00000DF4 803805                  	cmp byte [rax], T_undefined
  2891 00000DF7 0F84F83F0100            	je L_error_fvar_undefined
  2892 00000DFD 803804                  	cmp byte [rax], T_closure
  2893 00000E00 0F8573400100            	jne L_error_non_closure
  2894 00000E06 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2895 00000E09 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2896 00000E0C 50                      	push rax
  2897 00000E0D 6A01                    	push 1	; Number of arguments
  2898 00000E0F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2899 00000E17 803805                  	cmp byte [rax], T_undefined
  2900 00000E1A 0F84D53F0100            	je L_error_fvar_undefined
  2901 00000E20 803804                  	cmp byte [rax], T_closure
  2902 00000E23 0F8550400100            	jne L_error_non_closure
  2903 00000E29 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2904                                  
  2905                                  	; Reclaiming the current stack frame
  2906 00000E2C FF7508                  	push qword [rbp + 8]
  2907 00000E2F FF7500                  	push qword [rbp]
  2908 00000E32 41BA05000000            	mov r10, 1 + 4
  2909 00000E38 4C8B4518                	mov r8, COUNT
  2910 00000E3C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2911 00000E41 4C8D4DF8                	lea r9, [rbp - 8]
  2912                                  .L_tc_recycle_frame_loop_0008:
  2913 00000E45 4983FA00                	cmp r10, 0
  2914 00000E49 7413                    	je .L_tc_recycle_frame_done_0008
  2915 00000E4B 4D8B19                  	mov r11, qword [r9]
  2916 00000E4E 4D8918                  	mov qword [r8], r11
  2917 00000E51 49FFCA                  	dec r10
  2918 00000E54 4983E808                	sub r8, 8
  2919 00000E58 4983E908                	sub r9, 8
  2920 00000E5C EBE7                    	jmp .L_tc_recycle_frame_loop_0008
  2921                                  .L_tc_recycle_frame_done_0008:
  2922 00000E5E 498D6008                	lea rsp, [r8 + 8]
  2923 00000E62 5D                      	pop rbp
  2924 00000E63 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2925 00000E66 C9                      	leave
  2926 00000E67 C21800                  	ret AND_KILL_FRAME(1)
  2927                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2928 00000E6A 48890425[E4100000]      	mov qword [free_var_47], rax
  2929 00000E72 48B8-                   	mov rax, sob_void
  2929 00000E74 [0000000000000000] 
  2930                                  
  2931 00000E7C 4889C7                  	mov rdi, rax
  2932 00000E7F E8F3420100              	call print_sexpr_if_not_void
  2933 00000E84 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2934 00000E89 E894400100              	call malloc
  2935 00000E8E 50                      	push rax
  2936 00000E8F BF00000000              	mov rdi, 8 * 0	; new rib
  2937 00000E94 E889400100              	call malloc
  2938 00000E99 50                      	push rax
  2939 00000E9A BF08000000              	mov rdi, 8 * 1	; extended env
  2940 00000E9F E87E400100              	call malloc
  2941 00000EA4 488B7D10                	mov rdi, ENV
  2942 00000EA8 BE00000000              	mov rsi, 0
  2943 00000EAD BA01000000              	mov rdx, 1
  2944                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2945 00000EB2 4883FE00                	cmp rsi, 0
  2946 00000EB6 7410                    	je .L_lambda_simple_env_end_0009
  2947 00000EB8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2948 00000EBC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2949 00000EC0 48FFC6                  	inc rsi
  2950 00000EC3 48FFC2                  	inc rdx
  2951 00000EC6 EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2952                                  .L_lambda_simple_env_end_0009:
  2953 00000EC8 5B                      	pop rbx
  2954 00000EC9 BE00000000              	mov rsi, 0
  2955                                  .L_lambda_simple_params_loop_0009:	; copy params
  2956 00000ECE 4883FE00                	cmp rsi, 0
  2957 00000ED2 740E                    	je .L_lambda_simple_params_end_0009
  2958 00000ED4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2959 00000ED9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2960 00000EDD 48FFC6                  	inc rsi
  2961 00000EE0 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2962                                  .L_lambda_simple_params_end_0009:
  2963 00000EE2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2964 00000EE5 4889C3                  	mov rbx, rax
  2965 00000EE8 58                      	pop rax
  2966 00000EE9 C60004                  	mov byte [rax], T_closure
  2967 00000EEC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2968 00000EF0 48C74009[FD0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2969 00000EF8 E99C000000              	jmp .L_lambda_simple_end_0009
  2970                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2971 00000EFD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2972 00000F03 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2973 00000F05 FF742410                	push qword [rsp + 8 * 2]
  2974 00000F09 6A01                    	push 1
  2975 00000F0B E9CB3F0100              	jmp L_error_incorrect_arity_simple
  2976                                  .L_lambda_simple_arity_check_ok_0009:
  2977 00000F10 C8000000                	enter 0, 0
  2978                                  	; Initiating tail-call optimization
  2979                                  	; preparing a non-tail-call
  2980 00000F14 488B4520                	mov rax, PARAM(0)	; param x
  2981 00000F18 50                      	push rax
  2982 00000F19 6A01                    	push 1	; arg count
  2983 00000F1B 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2984 00000F23 803805                  	cmp byte [rax], T_undefined
  2985 00000F26 0F84C93E0100            	je L_error_fvar_undefined
  2986 00000F2C 803804                  	cmp byte [rax], T_closure
  2987 00000F2F 0F85443F0100            	jne L_error_non_closure
  2988 00000F35 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2989 00000F38 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2990 00000F3B 50                      	push rax
  2991 00000F3C 6A01                    	push 1	; Number of arguments
  2992 00000F3E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2993 00000F46 803805                  	cmp byte [rax], T_undefined
  2994 00000F49 0F84A63E0100            	je L_error_fvar_undefined
  2995 00000F4F 803804                  	cmp byte [rax], T_closure
  2996 00000F52 0F85213F0100            	jne L_error_non_closure
  2997 00000F58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2998                                  
  2999                                  	; Reclaiming the current stack frame
  3000 00000F5B FF7508                  	push qword [rbp + 8]
  3001 00000F5E FF7500                  	push qword [rbp]
  3002 00000F61 41BA05000000            	mov r10, 1 + 4
  3003 00000F67 4C8B4518                	mov r8, COUNT
  3004 00000F6B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3005 00000F70 4C8D4DF8                	lea r9, [rbp - 8]
  3006                                  .L_tc_recycle_frame_loop_0009:
  3007 00000F74 4983FA00                	cmp r10, 0
  3008 00000F78 7413                    	je .L_tc_recycle_frame_done_0009
  3009 00000F7A 4D8B19                  	mov r11, qword [r9]
  3010 00000F7D 4D8918                  	mov qword [r8], r11
  3011 00000F80 49FFCA                  	dec r10
  3012 00000F83 4983E808                	sub r8, 8
  3013 00000F87 4983E908                	sub r9, 8
  3014 00000F8B EBE7                    	jmp .L_tc_recycle_frame_loop_0009
  3015                                  .L_tc_recycle_frame_done_0009:
  3016 00000F8D 498D6008                	lea rsp, [r8 + 8]
  3017 00000F91 5D                      	pop rbp
  3018 00000F92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3019 00000F95 C9                      	leave
  3020 00000F96 C21800                  	ret AND_KILL_FRAME(1)
  3021                                  .L_lambda_simple_end_0009:	; new closure is in rax
  3022 00000F99 48890425[39110000]      	mov qword [free_var_52], rax
  3023 00000FA1 48B8-                   	mov rax, sob_void
  3023 00000FA3 [0000000000000000] 
  3024                                  
  3025 00000FAB 4889C7                  	mov rdi, rax
  3026 00000FAE E8C4410100              	call print_sexpr_if_not_void
  3027 00000FB3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3028 00000FB8 E8653F0100              	call malloc
  3029 00000FBD 50                      	push rax
  3030 00000FBE BF00000000              	mov rdi, 8 * 0	; new rib
  3031 00000FC3 E85A3F0100              	call malloc
  3032 00000FC8 50                      	push rax
  3033 00000FC9 BF08000000              	mov rdi, 8 * 1	; extended env
  3034 00000FCE E84F3F0100              	call malloc
  3035 00000FD3 488B7D10                	mov rdi, ENV
  3036 00000FD7 BE00000000              	mov rsi, 0
  3037 00000FDC BA01000000              	mov rdx, 1
  3038                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3039 00000FE1 4883FE00                	cmp rsi, 0
  3040 00000FE5 7410                    	je .L_lambda_simple_env_end_000a
  3041 00000FE7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3042 00000FEB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3043 00000FEF 48FFC6                  	inc rsi
  3044 00000FF2 48FFC2                  	inc rdx
  3045 00000FF5 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3046                                  .L_lambda_simple_env_end_000a:
  3047 00000FF7 5B                      	pop rbx
  3048 00000FF8 BE00000000              	mov rsi, 0
  3049                                  .L_lambda_simple_params_loop_000a:	; copy params
  3050 00000FFD 4883FE00                	cmp rsi, 0
  3051 00001001 740E                    	je .L_lambda_simple_params_end_000a
  3052 00001003 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3053 00001008 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3054 0000100C 48FFC6                  	inc rsi
  3055 0000100F EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3056                                  .L_lambda_simple_params_end_000a:
  3057 00001011 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3058 00001014 4889C3                  	mov rbx, rax
  3059 00001017 58                      	pop rax
  3060 00001018 C60004                  	mov byte [rax], T_closure
  3061 0000101B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3062 0000101F 48C74009[2C100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3063 00001027 E99C000000              	jmp .L_lambda_simple_end_000a
  3064                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3065 0000102C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3066 00001032 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3067 00001034 FF742410                	push qword [rsp + 8 * 2]
  3068 00001038 6A01                    	push 1
  3069 0000103A E99C3E0100              	jmp L_error_incorrect_arity_simple
  3070                                  .L_lambda_simple_arity_check_ok_000a:
  3071 0000103F C8000000                	enter 0, 0
  3072                                  	; Initiating tail-call optimization
  3073                                  	; preparing a non-tail-call
  3074 00001043 488B4520                	mov rax, PARAM(0)	; param x
  3075 00001047 50                      	push rax
  3076 00001048 6A01                    	push 1	; arg count
  3077 0000104A 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3078 00001052 803805                  	cmp byte [rax], T_undefined
  3079 00001055 0F849A3D0100            	je L_error_fvar_undefined
  3080 0000105B 803804                  	cmp byte [rax], T_closure
  3081 0000105E 0F85153E0100            	jne L_error_non_closure
  3082 00001064 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3083 00001067 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3084 0000106A 50                      	push rax
  3085 0000106B 6A01                    	push 1	; Number of arguments
  3086 0000106D 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3087 00001075 803805                  	cmp byte [rax], T_undefined
  3088 00001078 0F84773D0100            	je L_error_fvar_undefined
  3089 0000107E 803804                  	cmp byte [rax], T_closure
  3090 00001081 0F85F23D0100            	jne L_error_non_closure
  3091 00001087 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3092                                  
  3093                                  	; Reclaiming the current stack frame
  3094 0000108A FF7508                  	push qword [rbp + 8]
  3095 0000108D FF7500                  	push qword [rbp]
  3096 00001090 41BA05000000            	mov r10, 1 + 4
  3097 00001096 4C8B4518                	mov r8, COUNT
  3098 0000109A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3099 0000109F 4C8D4DF8                	lea r9, [rbp - 8]
  3100                                  .L_tc_recycle_frame_loop_000a:
  3101 000010A3 4983FA00                	cmp r10, 0
  3102 000010A7 7413                    	je .L_tc_recycle_frame_done_000a
  3103 000010A9 4D8B19                  	mov r11, qword [r9]
  3104 000010AC 4D8918                  	mov qword [r8], r11
  3105 000010AF 49FFCA                  	dec r10
  3106 000010B2 4983E808                	sub r8, 8
  3107 000010B6 4983E908                	sub r9, 8
  3108 000010BA EBE7                    	jmp .L_tc_recycle_frame_loop_000a
  3109                                  .L_tc_recycle_frame_done_000a:
  3110 000010BC 498D6008                	lea rsp, [r8 + 8]
  3111 000010C0 5D                      	pop rbp
  3112 000010C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3113 000010C4 C9                      	leave
  3114 000010C5 C21800                  	ret AND_KILL_FRAME(1)
  3115                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3116 000010C8 48890425[6C110000]      	mov qword [free_var_55], rax
  3117 000010D0 48B8-                   	mov rax, sob_void
  3117 000010D2 [0000000000000000] 
  3118                                  
  3119 000010DA 4889C7                  	mov rdi, rax
  3120 000010DD E895400100              	call print_sexpr_if_not_void
  3121 000010E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3122 000010E7 E8363E0100              	call malloc
  3123 000010EC 50                      	push rax
  3124 000010ED BF00000000              	mov rdi, 8 * 0	; new rib
  3125 000010F2 E82B3E0100              	call malloc
  3126 000010F7 50                      	push rax
  3127 000010F8 BF08000000              	mov rdi, 8 * 1	; extended env
  3128 000010FD E8203E0100              	call malloc
  3129 00001102 488B7D10                	mov rdi, ENV
  3130 00001106 BE00000000              	mov rsi, 0
  3131 0000110B BA01000000              	mov rdx, 1
  3132                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3133 00001110 4883FE00                	cmp rsi, 0
  3134 00001114 7410                    	je .L_lambda_simple_env_end_000b
  3135 00001116 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3136 0000111A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3137 0000111E 48FFC6                  	inc rsi
  3138 00001121 48FFC2                  	inc rdx
  3139 00001124 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3140                                  .L_lambda_simple_env_end_000b:
  3141 00001126 5B                      	pop rbx
  3142 00001127 BE00000000              	mov rsi, 0
  3143                                  .L_lambda_simple_params_loop_000b:	; copy params
  3144 0000112C 4883FE00                	cmp rsi, 0
  3145 00001130 740E                    	je .L_lambda_simple_params_end_000b
  3146 00001132 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3147 00001137 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3148 0000113B 48FFC6                  	inc rsi
  3149 0000113E EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3150                                  .L_lambda_simple_params_end_000b:
  3151 00001140 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3152 00001143 4889C3                  	mov rbx, rax
  3153 00001146 58                      	pop rax
  3154 00001147 C60004                  	mov byte [rax], T_closure
  3155 0000114A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3156 0000114E 48C74009[5B110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3157 00001156 E99C000000              	jmp .L_lambda_simple_end_000b
  3158                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3159 0000115B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3160 00001161 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3161 00001163 FF742410                	push qword [rsp + 8 * 2]
  3162 00001167 6A01                    	push 1
  3163 00001169 E96D3D0100              	jmp L_error_incorrect_arity_simple
  3164                                  .L_lambda_simple_arity_check_ok_000b:
  3165 0000116E C8000000                	enter 0, 0
  3166                                  	; Initiating tail-call optimization
  3167                                  	; preparing a non-tail-call
  3168 00001172 488B4520                	mov rax, PARAM(0)	; param x
  3169 00001176 50                      	push rax
  3170 00001177 6A01                    	push 1	; arg count
  3171 00001179 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3172 00001181 803805                  	cmp byte [rax], T_undefined
  3173 00001184 0F846B3C0100            	je L_error_fvar_undefined
  3174 0000118A 803804                  	cmp byte [rax], T_closure
  3175 0000118D 0F85E63C0100            	jne L_error_non_closure
  3176 00001193 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3177 00001196 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3178 00001199 50                      	push rax
  3179 0000119A 6A01                    	push 1	; Number of arguments
  3180 0000119C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3181 000011A4 803805                  	cmp byte [rax], T_undefined
  3182 000011A7 0F84483C0100            	je L_error_fvar_undefined
  3183 000011AD 803804                  	cmp byte [rax], T_closure
  3184 000011B0 0F85C33C0100            	jne L_error_non_closure
  3185 000011B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3186                                  
  3187                                  	; Reclaiming the current stack frame
  3188 000011B9 FF7508                  	push qword [rbp + 8]
  3189 000011BC FF7500                  	push qword [rbp]
  3190 000011BF 41BA05000000            	mov r10, 1 + 4
  3191 000011C5 4C8B4518                	mov r8, COUNT
  3192 000011C9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3193 000011CE 4C8D4DF8                	lea r9, [rbp - 8]
  3194                                  .L_tc_recycle_frame_loop_000b:
  3195 000011D2 4983FA00                	cmp r10, 0
  3196 000011D6 7413                    	je .L_tc_recycle_frame_done_000b
  3197 000011D8 4D8B19                  	mov r11, qword [r9]
  3198 000011DB 4D8918                  	mov qword [r8], r11
  3199 000011DE 49FFCA                  	dec r10
  3200 000011E1 4983E808                	sub r8, 8
  3201 000011E5 4983E908                	sub r9, 8
  3202 000011E9 EBE7                    	jmp .L_tc_recycle_frame_loop_000b
  3203                                  .L_tc_recycle_frame_done_000b:
  3204 000011EB 498D6008                	lea rsp, [r8 + 8]
  3205 000011EF 5D                      	pop rbp
  3206 000011F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3207 000011F3 C9                      	leave
  3208 000011F4 C21800                  	ret AND_KILL_FRAME(1)
  3209                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3210 000011F7 48890425[B0110000]      	mov qword [free_var_59], rax
  3211 000011FF 48B8-                   	mov rax, sob_void
  3211 00001201 [0000000000000000] 
  3212                                  
  3213 00001209 4889C7                  	mov rdi, rax
  3214 0000120C E8663F0100              	call print_sexpr_if_not_void
  3215 00001211 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3216 00001216 E8073D0100              	call malloc
  3217 0000121B 50                      	push rax
  3218 0000121C BF00000000              	mov rdi, 8 * 0	; new rib
  3219 00001221 E8FC3C0100              	call malloc
  3220 00001226 50                      	push rax
  3221 00001227 BF08000000              	mov rdi, 8 * 1	; extended env
  3222 0000122C E8F13C0100              	call malloc
  3223 00001231 488B7D10                	mov rdi, ENV
  3224 00001235 BE00000000              	mov rsi, 0
  3225 0000123A BA01000000              	mov rdx, 1
  3226                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3227 0000123F 4883FE00                	cmp rsi, 0
  3228 00001243 7410                    	je .L_lambda_simple_env_end_000c
  3229 00001245 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3230 00001249 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3231 0000124D 48FFC6                  	inc rsi
  3232 00001250 48FFC2                  	inc rdx
  3233 00001253 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3234                                  .L_lambda_simple_env_end_000c:
  3235 00001255 5B                      	pop rbx
  3236 00001256 BE00000000              	mov rsi, 0
  3237                                  .L_lambda_simple_params_loop_000c:	; copy params
  3238 0000125B 4883FE00                	cmp rsi, 0
  3239 0000125F 740E                    	je .L_lambda_simple_params_end_000c
  3240 00001261 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3241 00001266 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3242 0000126A 48FFC6                  	inc rsi
  3243 0000126D EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3244                                  .L_lambda_simple_params_end_000c:
  3245 0000126F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3246 00001272 4889C3                  	mov rbx, rax
  3247 00001275 58                      	pop rax
  3248 00001276 C60004                  	mov byte [rax], T_closure
  3249 00001279 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3250 0000127D 48C74009[8A120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3251 00001285 E99C000000              	jmp .L_lambda_simple_end_000c
  3252                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3253 0000128A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3254 00001290 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3255 00001292 FF742410                	push qword [rsp + 8 * 2]
  3256 00001296 6A01                    	push 1
  3257 00001298 E93E3C0100              	jmp L_error_incorrect_arity_simple
  3258                                  .L_lambda_simple_arity_check_ok_000c:
  3259 0000129D C8000000                	enter 0, 0
  3260                                  	; Initiating tail-call optimization
  3261                                  	; preparing a non-tail-call
  3262 000012A1 488B4520                	mov rax, PARAM(0)	; param x
  3263 000012A5 50                      	push rax
  3264 000012A6 6A01                    	push 1	; arg count
  3265 000012A8 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3266 000012B0 803805                  	cmp byte [rax], T_undefined
  3267 000012B3 0F843C3B0100            	je L_error_fvar_undefined
  3268 000012B9 803804                  	cmp byte [rax], T_closure
  3269 000012BC 0F85B73B0100            	jne L_error_non_closure
  3270 000012C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3271 000012C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3272 000012C8 50                      	push rax
  3273 000012C9 6A01                    	push 1	; Number of arguments
  3274 000012CB 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3275 000012D3 803805                  	cmp byte [rax], T_undefined
  3276 000012D6 0F84193B0100            	je L_error_fvar_undefined
  3277 000012DC 803804                  	cmp byte [rax], T_closure
  3278 000012DF 0F85943B0100            	jne L_error_non_closure
  3279 000012E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3280                                  
  3281                                  	; Reclaiming the current stack frame
  3282 000012E8 FF7508                  	push qword [rbp + 8]
  3283 000012EB FF7500                  	push qword [rbp]
  3284 000012EE 41BA05000000            	mov r10, 1 + 4
  3285 000012F4 4C8B4518                	mov r8, COUNT
  3286 000012F8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3287 000012FD 4C8D4DF8                	lea r9, [rbp - 8]
  3288                                  .L_tc_recycle_frame_loop_000c:
  3289 00001301 4983FA00                	cmp r10, 0
  3290 00001305 7413                    	je .L_tc_recycle_frame_done_000c
  3291 00001307 4D8B19                  	mov r11, qword [r9]
  3292 0000130A 4D8918                  	mov qword [r8], r11
  3293 0000130D 49FFCA                  	dec r10
  3294 00001310 4983E808                	sub r8, 8
  3295 00001314 4983E908                	sub r9, 8
  3296 00001318 EBE7                    	jmp .L_tc_recycle_frame_loop_000c
  3297                                  .L_tc_recycle_frame_done_000c:
  3298 0000131A 498D6008                	lea rsp, [r8 + 8]
  3299 0000131E 5D                      	pop rbp
  3300 0000131F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3301 00001322 C9                      	leave
  3302 00001323 C21800                  	ret AND_KILL_FRAME(1)
  3303                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3304 00001326 48890425[E3110000]      	mov qword [free_var_62], rax
  3305 0000132E 48B8-                   	mov rax, sob_void
  3305 00001330 [0000000000000000] 
  3306                                  
  3307 00001338 4889C7                  	mov rdi, rax
  3308 0000133B E8373E0100              	call print_sexpr_if_not_void
  3309 00001340 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3310 00001345 E8D83B0100              	call malloc
  3311 0000134A 50                      	push rax
  3312 0000134B BF00000000              	mov rdi, 8 * 0	; new rib
  3313 00001350 E8CD3B0100              	call malloc
  3314 00001355 50                      	push rax
  3315 00001356 BF08000000              	mov rdi, 8 * 1	; extended env
  3316 0000135B E8C23B0100              	call malloc
  3317 00001360 488B7D10                	mov rdi, ENV
  3318 00001364 BE00000000              	mov rsi, 0
  3319 00001369 BA01000000              	mov rdx, 1
  3320                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3321 0000136E 4883FE00                	cmp rsi, 0
  3322 00001372 7410                    	je .L_lambda_simple_env_end_000d
  3323 00001374 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3324 00001378 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3325 0000137C 48FFC6                  	inc rsi
  3326 0000137F 48FFC2                  	inc rdx
  3327 00001382 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3328                                  .L_lambda_simple_env_end_000d:
  3329 00001384 5B                      	pop rbx
  3330 00001385 BE00000000              	mov rsi, 0
  3331                                  .L_lambda_simple_params_loop_000d:	; copy params
  3332 0000138A 4883FE00                	cmp rsi, 0
  3333 0000138E 740E                    	je .L_lambda_simple_params_end_000d
  3334 00001390 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3335 00001395 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3336 00001399 48FFC6                  	inc rsi
  3337 0000139C EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3338                                  .L_lambda_simple_params_end_000d:
  3339 0000139E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3340 000013A1 4889C3                  	mov rbx, rax
  3341 000013A4 58                      	pop rax
  3342 000013A5 C60004                  	mov byte [rax], T_closure
  3343 000013A8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3344 000013AC 48C74009[B9130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3345 000013B4 E99C000000              	jmp .L_lambda_simple_end_000d
  3346                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3347 000013B9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3348 000013BF 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3349 000013C1 FF742410                	push qword [rsp + 8 * 2]
  3350 000013C5 6A01                    	push 1
  3351 000013C7 E90F3B0100              	jmp L_error_incorrect_arity_simple
  3352                                  .L_lambda_simple_arity_check_ok_000d:
  3353 000013CC C8000000                	enter 0, 0
  3354                                  	; Initiating tail-call optimization
  3355                                  	; preparing a non-tail-call
  3356 000013D0 488B4520                	mov rax, PARAM(0)	; param x
  3357 000013D4 50                      	push rax
  3358 000013D5 6A01                    	push 1	; arg count
  3359 000013D7 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3360 000013DF 803805                  	cmp byte [rax], T_undefined
  3361 000013E2 0F840D3A0100            	je L_error_fvar_undefined
  3362 000013E8 803804                  	cmp byte [rax], T_closure
  3363 000013EB 0F85883A0100            	jne L_error_non_closure
  3364 000013F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3365 000013F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3366 000013F7 50                      	push rax
  3367 000013F8 6A01                    	push 1	; Number of arguments
  3368 000013FA 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3369 00001402 803805                  	cmp byte [rax], T_undefined
  3370 00001405 0F84EA390100            	je L_error_fvar_undefined
  3371 0000140B 803804                  	cmp byte [rax], T_closure
  3372 0000140E 0F85653A0100            	jne L_error_non_closure
  3373 00001414 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3374                                  
  3375                                  	; Reclaiming the current stack frame
  3376 00001417 FF7508                  	push qword [rbp + 8]
  3377 0000141A FF7500                  	push qword [rbp]
  3378 0000141D 41BA05000000            	mov r10, 1 + 4
  3379 00001423 4C8B4518                	mov r8, COUNT
  3380 00001427 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3381 0000142C 4C8D4DF8                	lea r9, [rbp - 8]
  3382                                  .L_tc_recycle_frame_loop_000d:
  3383 00001430 4983FA00                	cmp r10, 0
  3384 00001434 7413                    	je .L_tc_recycle_frame_done_000d
  3385 00001436 4D8B19                  	mov r11, qword [r9]
  3386 00001439 4D8918                  	mov qword [r8], r11
  3387 0000143C 49FFCA                  	dec r10
  3388 0000143F 4983E808                	sub r8, 8
  3389 00001443 4983E908                	sub r9, 8
  3390 00001447 EBE7                    	jmp .L_tc_recycle_frame_loop_000d
  3391                                  .L_tc_recycle_frame_done_000d:
  3392 00001449 498D6008                	lea rsp, [r8 + 8]
  3393 0000144D 5D                      	pop rbp
  3394 0000144E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3395 00001451 C9                      	leave
  3396 00001452 C21800                  	ret AND_KILL_FRAME(1)
  3397                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3398 00001455 48890425[18100000]      	mov qword [free_var_35], rax
  3399 0000145D 48B8-                   	mov rax, sob_void
  3399 0000145F [0000000000000000] 
  3400                                  
  3401 00001467 4889C7                  	mov rdi, rax
  3402 0000146A E8083D0100              	call print_sexpr_if_not_void
  3403 0000146F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3404 00001474 E8A93A0100              	call malloc
  3405 00001479 50                      	push rax
  3406 0000147A BF00000000              	mov rdi, 8 * 0	; new rib
  3407 0000147F E89E3A0100              	call malloc
  3408 00001484 50                      	push rax
  3409 00001485 BF08000000              	mov rdi, 8 * 1	; extended env
  3410 0000148A E8933A0100              	call malloc
  3411 0000148F 488B7D10                	mov rdi, ENV
  3412 00001493 BE00000000              	mov rsi, 0
  3413 00001498 BA01000000              	mov rdx, 1
  3414                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3415 0000149D 4883FE00                	cmp rsi, 0
  3416 000014A1 7410                    	je .L_lambda_simple_env_end_000e
  3417 000014A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3418 000014A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3419 000014AB 48FFC6                  	inc rsi
  3420 000014AE 48FFC2                  	inc rdx
  3421 000014B1 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3422                                  .L_lambda_simple_env_end_000e:
  3423 000014B3 5B                      	pop rbx
  3424 000014B4 BE00000000              	mov rsi, 0
  3425                                  .L_lambda_simple_params_loop_000e:	; copy params
  3426 000014B9 4883FE00                	cmp rsi, 0
  3427 000014BD 740E                    	je .L_lambda_simple_params_end_000e
  3428 000014BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3429 000014C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3430 000014C8 48FFC6                  	inc rsi
  3431 000014CB EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3432                                  .L_lambda_simple_params_end_000e:
  3433 000014CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3434 000014D0 4889C3                  	mov rbx, rax
  3435 000014D3 58                      	pop rax
  3436 000014D4 C60004                  	mov byte [rax], T_closure
  3437 000014D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3438 000014DB 48C74009[E8140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3439 000014E3 E99C000000              	jmp .L_lambda_simple_end_000e
  3440                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3441 000014E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3442 000014EE 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3443 000014F0 FF742410                	push qword [rsp + 8 * 2]
  3444 000014F4 6A01                    	push 1
  3445 000014F6 E9E0390100              	jmp L_error_incorrect_arity_simple
  3446                                  .L_lambda_simple_arity_check_ok_000e:
  3447 000014FB C8000000                	enter 0, 0
  3448                                  	; Initiating tail-call optimization
  3449                                  	; preparing a non-tail-call
  3450 000014FF 488B4520                	mov rax, PARAM(0)	; param x
  3451 00001503 50                      	push rax
  3452 00001504 6A01                    	push 1	; arg count
  3453 00001506 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3454 0000150E 803805                  	cmp byte [rax], T_undefined
  3455 00001511 0F84DE380100            	je L_error_fvar_undefined
  3456 00001517 803804                  	cmp byte [rax], T_closure
  3457 0000151A 0F8559390100            	jne L_error_non_closure
  3458 00001520 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3459 00001523 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3460 00001526 50                      	push rax
  3461 00001527 6A01                    	push 1	; Number of arguments
  3462 00001529 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3463 00001531 803805                  	cmp byte [rax], T_undefined
  3464 00001534 0F84BB380100            	je L_error_fvar_undefined
  3465 0000153A 803804                  	cmp byte [rax], T_closure
  3466 0000153D 0F8536390100            	jne L_error_non_closure
  3467 00001543 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3468                                  
  3469                                  	; Reclaiming the current stack frame
  3470 00001546 FF7508                  	push qword [rbp + 8]
  3471 00001549 FF7500                  	push qword [rbp]
  3472 0000154C 41BA05000000            	mov r10, 1 + 4
  3473 00001552 4C8B4518                	mov r8, COUNT
  3474 00001556 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3475 0000155B 4C8D4DF8                	lea r9, [rbp - 8]
  3476                                  .L_tc_recycle_frame_loop_000e:
  3477 0000155F 4983FA00                	cmp r10, 0
  3478 00001563 7413                    	je .L_tc_recycle_frame_done_000e
  3479 00001565 4D8B19                  	mov r11, qword [r9]
  3480 00001568 4D8918                  	mov qword [r8], r11
  3481 0000156B 49FFCA                  	dec r10
  3482 0000156E 4983E808                	sub r8, 8
  3483 00001572 4983E908                	sub r9, 8
  3484 00001576 EBE7                    	jmp .L_tc_recycle_frame_loop_000e
  3485                                  .L_tc_recycle_frame_done_000e:
  3486 00001578 498D6008                	lea rsp, [r8 + 8]
  3487 0000157C 5D                      	pop rbp
  3488 0000157D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3489 00001580 C9                      	leave
  3490 00001581 C21800                  	ret AND_KILL_FRAME(1)
  3491                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3492 00001584 48890425[29100000]      	mov qword [free_var_36], rax
  3493 0000158C 48B8-                   	mov rax, sob_void
  3493 0000158E [0000000000000000] 
  3494                                  
  3495 00001596 4889C7                  	mov rdi, rax
  3496 00001599 E8D93B0100              	call print_sexpr_if_not_void
  3497 0000159E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3498 000015A3 E87A390100              	call malloc
  3499 000015A8 50                      	push rax
  3500 000015A9 BF00000000              	mov rdi, 8 * 0	; new rib
  3501 000015AE E86F390100              	call malloc
  3502 000015B3 50                      	push rax
  3503 000015B4 BF08000000              	mov rdi, 8 * 1	; extended env
  3504 000015B9 E864390100              	call malloc
  3505 000015BE 488B7D10                	mov rdi, ENV
  3506 000015C2 BE00000000              	mov rsi, 0
  3507 000015C7 BA01000000              	mov rdx, 1
  3508                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3509 000015CC 4883FE00                	cmp rsi, 0
  3510 000015D0 7410                    	je .L_lambda_simple_env_end_000f
  3511 000015D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3512 000015D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3513 000015DA 48FFC6                  	inc rsi
  3514 000015DD 48FFC2                  	inc rdx
  3515 000015E0 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3516                                  .L_lambda_simple_env_end_000f:
  3517 000015E2 5B                      	pop rbx
  3518 000015E3 BE00000000              	mov rsi, 0
  3519                                  .L_lambda_simple_params_loop_000f:	; copy params
  3520 000015E8 4883FE00                	cmp rsi, 0
  3521 000015EC 740E                    	je .L_lambda_simple_params_end_000f
  3522 000015EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3523 000015F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3524 000015F7 48FFC6                  	inc rsi
  3525 000015FA EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3526                                  .L_lambda_simple_params_end_000f:
  3527 000015FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3528 000015FF 4889C3                  	mov rbx, rax
  3529 00001602 58                      	pop rax
  3530 00001603 C60004                  	mov byte [rax], T_closure
  3531 00001606 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3532 0000160A 48C74009[17160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3533 00001612 E99C000000              	jmp .L_lambda_simple_end_000f
  3534                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3535 00001617 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3536 0000161D 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3537 0000161F FF742410                	push qword [rsp + 8 * 2]
  3538 00001623 6A01                    	push 1
  3539 00001625 E9B1380100              	jmp L_error_incorrect_arity_simple
  3540                                  .L_lambda_simple_arity_check_ok_000f:
  3541 0000162A C8000000                	enter 0, 0
  3542                                  	; Initiating tail-call optimization
  3543                                  	; preparing a non-tail-call
  3544 0000162E 488B4520                	mov rax, PARAM(0)	; param x
  3545 00001632 50                      	push rax
  3546 00001633 6A01                    	push 1	; arg count
  3547 00001635 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3548 0000163D 803805                  	cmp byte [rax], T_undefined
  3549 00001640 0F84AF370100            	je L_error_fvar_undefined
  3550 00001646 803804                  	cmp byte [rax], T_closure
  3551 00001649 0F852A380100            	jne L_error_non_closure
  3552 0000164F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3553 00001652 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3554 00001655 50                      	push rax
  3555 00001656 6A01                    	push 1	; Number of arguments
  3556 00001658 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3557 00001660 803805                  	cmp byte [rax], T_undefined
  3558 00001663 0F848C370100            	je L_error_fvar_undefined
  3559 00001669 803804                  	cmp byte [rax], T_closure
  3560 0000166C 0F8507380100            	jne L_error_non_closure
  3561 00001672 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3562                                  
  3563                                  	; Reclaiming the current stack frame
  3564 00001675 FF7508                  	push qword [rbp + 8]
  3565 00001678 FF7500                  	push qword [rbp]
  3566 0000167B 41BA05000000            	mov r10, 1 + 4
  3567 00001681 4C8B4518                	mov r8, COUNT
  3568 00001685 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3569 0000168A 4C8D4DF8                	lea r9, [rbp - 8]
  3570                                  .L_tc_recycle_frame_loop_000f:
  3571 0000168E 4983FA00                	cmp r10, 0
  3572 00001692 7413                    	je .L_tc_recycle_frame_done_000f
  3573 00001694 4D8B19                  	mov r11, qword [r9]
  3574 00001697 4D8918                  	mov qword [r8], r11
  3575 0000169A 49FFCA                  	dec r10
  3576 0000169D 4983E808                	sub r8, 8
  3577 000016A1 4983E908                	sub r9, 8
  3578 000016A5 EBE7                    	jmp .L_tc_recycle_frame_loop_000f
  3579                                  .L_tc_recycle_frame_done_000f:
  3580 000016A7 498D6008                	lea rsp, [r8 + 8]
  3581 000016AB 5D                      	pop rbp
  3582 000016AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3583 000016AF C9                      	leave
  3584 000016B0 C21800                  	ret AND_KILL_FRAME(1)
  3585                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3586 000016B3 48890425[4B100000]      	mov qword [free_var_38], rax
  3587 000016BB 48B8-                   	mov rax, sob_void
  3587 000016BD [0000000000000000] 
  3588                                  
  3589 000016C5 4889C7                  	mov rdi, rax
  3590 000016C8 E8AA3A0100              	call print_sexpr_if_not_void
  3591 000016CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3592 000016D2 E84B380100              	call malloc
  3593 000016D7 50                      	push rax
  3594 000016D8 BF00000000              	mov rdi, 8 * 0	; new rib
  3595 000016DD E840380100              	call malloc
  3596 000016E2 50                      	push rax
  3597 000016E3 BF08000000              	mov rdi, 8 * 1	; extended env
  3598 000016E8 E835380100              	call malloc
  3599 000016ED 488B7D10                	mov rdi, ENV
  3600 000016F1 BE00000000              	mov rsi, 0
  3601 000016F6 BA01000000              	mov rdx, 1
  3602                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3603 000016FB 4883FE00                	cmp rsi, 0
  3604 000016FF 7410                    	je .L_lambda_simple_env_end_0010
  3605 00001701 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3606 00001705 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3607 00001709 48FFC6                  	inc rsi
  3608 0000170C 48FFC2                  	inc rdx
  3609 0000170F EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3610                                  .L_lambda_simple_env_end_0010:
  3611 00001711 5B                      	pop rbx
  3612 00001712 BE00000000              	mov rsi, 0
  3613                                  .L_lambda_simple_params_loop_0010:	; copy params
  3614 00001717 4883FE00                	cmp rsi, 0
  3615 0000171B 740E                    	je .L_lambda_simple_params_end_0010
  3616 0000171D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3617 00001722 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3618 00001726 48FFC6                  	inc rsi
  3619 00001729 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3620                                  .L_lambda_simple_params_end_0010:
  3621 0000172B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3622 0000172E 4889C3                  	mov rbx, rax
  3623 00001731 58                      	pop rax
  3624 00001732 C60004                  	mov byte [rax], T_closure
  3625 00001735 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3626 00001739 48C74009[46170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3627 00001741 E99C000000              	jmp .L_lambda_simple_end_0010
  3628                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3629 00001746 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3630 0000174C 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3631 0000174E FF742410                	push qword [rsp + 8 * 2]
  3632 00001752 6A01                    	push 1
  3633 00001754 E982370100              	jmp L_error_incorrect_arity_simple
  3634                                  .L_lambda_simple_arity_check_ok_0010:
  3635 00001759 C8000000                	enter 0, 0
  3636                                  	; Initiating tail-call optimization
  3637                                  	; preparing a non-tail-call
  3638 0000175D 488B4520                	mov rax, PARAM(0)	; param x
  3639 00001761 50                      	push rax
  3640 00001762 6A01                    	push 1	; arg count
  3641 00001764 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3642 0000176C 803805                  	cmp byte [rax], T_undefined
  3643 0000176F 0F8480360100            	je L_error_fvar_undefined
  3644 00001775 803804                  	cmp byte [rax], T_closure
  3645 00001778 0F85FB360100            	jne L_error_non_closure
  3646 0000177E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3647 00001781 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3648 00001784 50                      	push rax
  3649 00001785 6A01                    	push 1	; Number of arguments
  3650 00001787 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3651 0000178F 803805                  	cmp byte [rax], T_undefined
  3652 00001792 0F845D360100            	je L_error_fvar_undefined
  3653 00001798 803804                  	cmp byte [rax], T_closure
  3654 0000179B 0F85D8360100            	jne L_error_non_closure
  3655 000017A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3656                                  
  3657                                  	; Reclaiming the current stack frame
  3658 000017A4 FF7508                  	push qword [rbp + 8]
  3659 000017A7 FF7500                  	push qword [rbp]
  3660 000017AA 41BA05000000            	mov r10, 1 + 4
  3661 000017B0 4C8B4518                	mov r8, COUNT
  3662 000017B4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3663 000017B9 4C8D4DF8                	lea r9, [rbp - 8]
  3664                                  .L_tc_recycle_frame_loop_0010:
  3665 000017BD 4983FA00                	cmp r10, 0
  3666 000017C1 7413                    	je .L_tc_recycle_frame_done_0010
  3667 000017C3 4D8B19                  	mov r11, qword [r9]
  3668 000017C6 4D8918                  	mov qword [r8], r11
  3669 000017C9 49FFCA                  	dec r10
  3670 000017CC 4983E808                	sub r8, 8
  3671 000017D0 4983E908                	sub r9, 8
  3672 000017D4 EBE7                    	jmp .L_tc_recycle_frame_loop_0010
  3673                                  .L_tc_recycle_frame_done_0010:
  3674 000017D6 498D6008                	lea rsp, [r8 + 8]
  3675 000017DA 5D                      	pop rbp
  3676 000017DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3677 000017DE C9                      	leave
  3678 000017DF C21800                  	ret AND_KILL_FRAME(1)
  3679                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3680 000017E2 48890425[5C100000]      	mov qword [free_var_39], rax
  3681 000017EA 48B8-                   	mov rax, sob_void
  3681 000017EC [0000000000000000] 
  3682                                  
  3683 000017F4 4889C7                  	mov rdi, rax
  3684 000017F7 E87B390100              	call print_sexpr_if_not_void
  3685 000017FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3686 00001801 E81C370100              	call malloc
  3687 00001806 50                      	push rax
  3688 00001807 BF00000000              	mov rdi, 8 * 0	; new rib
  3689 0000180C E811370100              	call malloc
  3690 00001811 50                      	push rax
  3691 00001812 BF08000000              	mov rdi, 8 * 1	; extended env
  3692 00001817 E806370100              	call malloc
  3693 0000181C 488B7D10                	mov rdi, ENV
  3694 00001820 BE00000000              	mov rsi, 0
  3695 00001825 BA01000000              	mov rdx, 1
  3696                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3697 0000182A 4883FE00                	cmp rsi, 0
  3698 0000182E 7410                    	je .L_lambda_simple_env_end_0011
  3699 00001830 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3700 00001834 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3701 00001838 48FFC6                  	inc rsi
  3702 0000183B 48FFC2                  	inc rdx
  3703 0000183E EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3704                                  .L_lambda_simple_env_end_0011:
  3705 00001840 5B                      	pop rbx
  3706 00001841 BE00000000              	mov rsi, 0
  3707                                  .L_lambda_simple_params_loop_0011:	; copy params
  3708 00001846 4883FE00                	cmp rsi, 0
  3709 0000184A 740E                    	je .L_lambda_simple_params_end_0011
  3710 0000184C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3711 00001851 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3712 00001855 48FFC6                  	inc rsi
  3713 00001858 EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3714                                  .L_lambda_simple_params_end_0011:
  3715 0000185A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3716 0000185D 4889C3                  	mov rbx, rax
  3717 00001860 58                      	pop rax
  3718 00001861 C60004                  	mov byte [rax], T_closure
  3719 00001864 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3720 00001868 48C74009[75180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3721 00001870 E99C000000              	jmp .L_lambda_simple_end_0011
  3722                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3723 00001875 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3724 0000187B 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3725 0000187D FF742410                	push qword [rsp + 8 * 2]
  3726 00001881 6A01                    	push 1
  3727 00001883 E953360100              	jmp L_error_incorrect_arity_simple
  3728                                  .L_lambda_simple_arity_check_ok_0011:
  3729 00001888 C8000000                	enter 0, 0
  3730                                  	; Initiating tail-call optimization
  3731                                  	; preparing a non-tail-call
  3732 0000188C 488B4520                	mov rax, PARAM(0)	; param x
  3733 00001890 50                      	push rax
  3734 00001891 6A01                    	push 1	; arg count
  3735 00001893 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3736 0000189B 803805                  	cmp byte [rax], T_undefined
  3737 0000189E 0F8451350100            	je L_error_fvar_undefined
  3738 000018A4 803804                  	cmp byte [rax], T_closure
  3739 000018A7 0F85CC350100            	jne L_error_non_closure
  3740 000018AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3741 000018B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3742 000018B3 50                      	push rax
  3743 000018B4 6A01                    	push 1	; Number of arguments
  3744 000018B6 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3745 000018BE 803805                  	cmp byte [rax], T_undefined
  3746 000018C1 0F842E350100            	je L_error_fvar_undefined
  3747 000018C7 803804                  	cmp byte [rax], T_closure
  3748 000018CA 0F85A9350100            	jne L_error_non_closure
  3749 000018D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3750                                  
  3751                                  	; Reclaiming the current stack frame
  3752 000018D3 FF7508                  	push qword [rbp + 8]
  3753 000018D6 FF7500                  	push qword [rbp]
  3754 000018D9 41BA05000000            	mov r10, 1 + 4
  3755 000018DF 4C8B4518                	mov r8, COUNT
  3756 000018E3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3757 000018E8 4C8D4DF8                	lea r9, [rbp - 8]
  3758                                  .L_tc_recycle_frame_loop_0011:
  3759 000018EC 4983FA00                	cmp r10, 0
  3760 000018F0 7413                    	je .L_tc_recycle_frame_done_0011
  3761 000018F2 4D8B19                  	mov r11, qword [r9]
  3762 000018F5 4D8918                  	mov qword [r8], r11
  3763 000018F8 49FFCA                  	dec r10
  3764 000018FB 4983E808                	sub r8, 8
  3765 000018FF 4983E908                	sub r9, 8
  3766 00001903 EBE7                    	jmp .L_tc_recycle_frame_loop_0011
  3767                                  .L_tc_recycle_frame_done_0011:
  3768 00001905 498D6008                	lea rsp, [r8 + 8]
  3769 00001909 5D                      	pop rbp
  3770 0000190A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3771 0000190D C9                      	leave
  3772 0000190E C21800                  	ret AND_KILL_FRAME(1)
  3773                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3774 00001911 48890425[8F100000]      	mov qword [free_var_42], rax
  3775 00001919 48B8-                   	mov rax, sob_void
  3775 0000191B [0000000000000000] 
  3776                                  
  3777 00001923 4889C7                  	mov rdi, rax
  3778 00001926 E84C380100              	call print_sexpr_if_not_void
  3779 0000192B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3780 00001930 E8ED350100              	call malloc
  3781 00001935 50                      	push rax
  3782 00001936 BF00000000              	mov rdi, 8 * 0	; new rib
  3783 0000193B E8E2350100              	call malloc
  3784 00001940 50                      	push rax
  3785 00001941 BF08000000              	mov rdi, 8 * 1	; extended env
  3786 00001946 E8D7350100              	call malloc
  3787 0000194B 488B7D10                	mov rdi, ENV
  3788 0000194F BE00000000              	mov rsi, 0
  3789 00001954 BA01000000              	mov rdx, 1
  3790                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3791 00001959 4883FE00                	cmp rsi, 0
  3792 0000195D 7410                    	je .L_lambda_simple_env_end_0012
  3793 0000195F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3794 00001963 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3795 00001967 48FFC6                  	inc rsi
  3796 0000196A 48FFC2                  	inc rdx
  3797 0000196D EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3798                                  .L_lambda_simple_env_end_0012:
  3799 0000196F 5B                      	pop rbx
  3800 00001970 BE00000000              	mov rsi, 0
  3801                                  .L_lambda_simple_params_loop_0012:	; copy params
  3802 00001975 4883FE00                	cmp rsi, 0
  3803 00001979 740E                    	je .L_lambda_simple_params_end_0012
  3804 0000197B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3805 00001980 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3806 00001984 48FFC6                  	inc rsi
  3807 00001987 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3808                                  .L_lambda_simple_params_end_0012:
  3809 00001989 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3810 0000198C 4889C3                  	mov rbx, rax
  3811 0000198F 58                      	pop rax
  3812 00001990 C60004                  	mov byte [rax], T_closure
  3813 00001993 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3814 00001997 48C74009[A4190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3815 0000199F E99C000000              	jmp .L_lambda_simple_end_0012
  3816                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3817 000019A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3818 000019AA 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3819 000019AC FF742410                	push qword [rsp + 8 * 2]
  3820 000019B0 6A01                    	push 1
  3821 000019B2 E924350100              	jmp L_error_incorrect_arity_simple
  3822                                  .L_lambda_simple_arity_check_ok_0012:
  3823 000019B7 C8000000                	enter 0, 0
  3824                                  	; Initiating tail-call optimization
  3825                                  	; preparing a non-tail-call
  3826 000019BB 488B4520                	mov rax, PARAM(0)	; param x
  3827 000019BF 50                      	push rax
  3828 000019C0 6A01                    	push 1	; arg count
  3829 000019C2 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3830 000019CA 803805                  	cmp byte [rax], T_undefined
  3831 000019CD 0F8422340100            	je L_error_fvar_undefined
  3832 000019D3 803804                  	cmp byte [rax], T_closure
  3833 000019D6 0F859D340100            	jne L_error_non_closure
  3834 000019DC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3835 000019DF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3836 000019E2 50                      	push rax
  3837 000019E3 6A01                    	push 1	; Number of arguments
  3838 000019E5 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3839 000019ED 803805                  	cmp byte [rax], T_undefined
  3840 000019F0 0F84FF330100            	je L_error_fvar_undefined
  3841 000019F6 803804                  	cmp byte [rax], T_closure
  3842 000019F9 0F857A340100            	jne L_error_non_closure
  3843 000019FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  3844                                  
  3845                                  	; Reclaiming the current stack frame
  3846 00001A02 FF7508                  	push qword [rbp + 8]
  3847 00001A05 FF7500                  	push qword [rbp]
  3848 00001A08 41BA05000000            	mov r10, 1 + 4
  3849 00001A0E 4C8B4518                	mov r8, COUNT
  3850 00001A12 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3851 00001A17 4C8D4DF8                	lea r9, [rbp - 8]
  3852                                  .L_tc_recycle_frame_loop_0012:
  3853 00001A1B 4983FA00                	cmp r10, 0
  3854 00001A1F 7413                    	je .L_tc_recycle_frame_done_0012
  3855 00001A21 4D8B19                  	mov r11, qword [r9]
  3856 00001A24 4D8918                  	mov qword [r8], r11
  3857 00001A27 49FFCA                  	dec r10
  3858 00001A2A 4983E808                	sub r8, 8
  3859 00001A2E 4983E908                	sub r9, 8
  3860 00001A32 EBE7                    	jmp .L_tc_recycle_frame_loop_0012
  3861                                  .L_tc_recycle_frame_done_0012:
  3862 00001A34 498D6008                	lea rsp, [r8 + 8]
  3863 00001A38 5D                      	pop rbp
  3864 00001A39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3865 00001A3C C9                      	leave
  3866 00001A3D C21800                  	ret AND_KILL_FRAME(1)
  3867                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3868 00001A40 48890425[A0100000]      	mov qword [free_var_43], rax
  3869 00001A48 48B8-                   	mov rax, sob_void
  3869 00001A4A [0000000000000000] 
  3870                                  
  3871 00001A52 4889C7                  	mov rdi, rax
  3872 00001A55 E81D370100              	call print_sexpr_if_not_void
  3873 00001A5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3874 00001A5F E8BE340100              	call malloc
  3875 00001A64 50                      	push rax
  3876 00001A65 BF00000000              	mov rdi, 8 * 0	; new rib
  3877 00001A6A E8B3340100              	call malloc
  3878 00001A6F 50                      	push rax
  3879 00001A70 BF08000000              	mov rdi, 8 * 1	; extended env
  3880 00001A75 E8A8340100              	call malloc
  3881 00001A7A 488B7D10                	mov rdi, ENV
  3882 00001A7E BE00000000              	mov rsi, 0
  3883 00001A83 BA01000000              	mov rdx, 1
  3884                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3885 00001A88 4883FE00                	cmp rsi, 0
  3886 00001A8C 7410                    	je .L_lambda_simple_env_end_0013
  3887 00001A8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3888 00001A92 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3889 00001A96 48FFC6                  	inc rsi
  3890 00001A99 48FFC2                  	inc rdx
  3891 00001A9C EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3892                                  .L_lambda_simple_env_end_0013:
  3893 00001A9E 5B                      	pop rbx
  3894 00001A9F BE00000000              	mov rsi, 0
  3895                                  .L_lambda_simple_params_loop_0013:	; copy params
  3896 00001AA4 4883FE00                	cmp rsi, 0
  3897 00001AA8 740E                    	je .L_lambda_simple_params_end_0013
  3898 00001AAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3899 00001AAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3900 00001AB3 48FFC6                  	inc rsi
  3901 00001AB6 EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3902                                  .L_lambda_simple_params_end_0013:
  3903 00001AB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3904 00001ABB 4889C3                  	mov rbx, rax
  3905 00001ABE 58                      	pop rax
  3906 00001ABF C60004                  	mov byte [rax], T_closure
  3907 00001AC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3908 00001AC6 48C74009[D31A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3909 00001ACE E99C000000              	jmp .L_lambda_simple_end_0013
  3910                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3911 00001AD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3912 00001AD9 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3913 00001ADB FF742410                	push qword [rsp + 8 * 2]
  3914 00001ADF 6A01                    	push 1
  3915 00001AE1 E9F5330100              	jmp L_error_incorrect_arity_simple
  3916                                  .L_lambda_simple_arity_check_ok_0013:
  3917 00001AE6 C8000000                	enter 0, 0
  3918                                  	; Initiating tail-call optimization
  3919                                  	; preparing a non-tail-call
  3920 00001AEA 488B4520                	mov rax, PARAM(0)	; param x
  3921 00001AEE 50                      	push rax
  3922 00001AEF 6A01                    	push 1	; arg count
  3923 00001AF1 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3924 00001AF9 803805                  	cmp byte [rax], T_undefined
  3925 00001AFC 0F84F3320100            	je L_error_fvar_undefined
  3926 00001B02 803804                  	cmp byte [rax], T_closure
  3927 00001B05 0F856E330100            	jne L_error_non_closure
  3928 00001B0B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3929 00001B0E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3930 00001B11 50                      	push rax
  3931 00001B12 6A01                    	push 1	; Number of arguments
  3932 00001B14 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3933 00001B1C 803805                  	cmp byte [rax], T_undefined
  3934 00001B1F 0F84D0320100            	je L_error_fvar_undefined
  3935 00001B25 803804                  	cmp byte [rax], T_closure
  3936 00001B28 0F854B330100            	jne L_error_non_closure
  3937 00001B2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3938                                  
  3939                                  	; Reclaiming the current stack frame
  3940 00001B31 FF7508                  	push qword [rbp + 8]
  3941 00001B34 FF7500                  	push qword [rbp]
  3942 00001B37 41BA05000000            	mov r10, 1 + 4
  3943 00001B3D 4C8B4518                	mov r8, COUNT
  3944 00001B41 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3945 00001B46 4C8D4DF8                	lea r9, [rbp - 8]
  3946                                  .L_tc_recycle_frame_loop_0013:
  3947 00001B4A 4983FA00                	cmp r10, 0
  3948 00001B4E 7413                    	je .L_tc_recycle_frame_done_0013
  3949 00001B50 4D8B19                  	mov r11, qword [r9]
  3950 00001B53 4D8918                  	mov qword [r8], r11
  3951 00001B56 49FFCA                  	dec r10
  3952 00001B59 4983E808                	sub r8, 8
  3953 00001B5D 4983E908                	sub r9, 8
  3954 00001B61 EBE7                    	jmp .L_tc_recycle_frame_loop_0013
  3955                                  .L_tc_recycle_frame_done_0013:
  3956 00001B63 498D6008                	lea rsp, [r8 + 8]
  3957 00001B67 5D                      	pop rbp
  3958 00001B68 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3959 00001B6B C9                      	leave
  3960 00001B6C C21800                  	ret AND_KILL_FRAME(1)
  3961                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3962 00001B6F 48890425[C2100000]      	mov qword [free_var_45], rax
  3963 00001B77 48B8-                   	mov rax, sob_void
  3963 00001B79 [0000000000000000] 
  3964                                  
  3965 00001B81 4889C7                  	mov rdi, rax
  3966 00001B84 E8EE350100              	call print_sexpr_if_not_void
  3967 00001B89 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3968 00001B8E E88F330100              	call malloc
  3969 00001B93 50                      	push rax
  3970 00001B94 BF00000000              	mov rdi, 8 * 0	; new rib
  3971 00001B99 E884330100              	call malloc
  3972 00001B9E 50                      	push rax
  3973 00001B9F BF08000000              	mov rdi, 8 * 1	; extended env
  3974 00001BA4 E879330100              	call malloc
  3975 00001BA9 488B7D10                	mov rdi, ENV
  3976 00001BAD BE00000000              	mov rsi, 0
  3977 00001BB2 BA01000000              	mov rdx, 1
  3978                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  3979 00001BB7 4883FE00                	cmp rsi, 0
  3980 00001BBB 7410                    	je .L_lambda_simple_env_end_0014
  3981 00001BBD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3982 00001BC1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3983 00001BC5 48FFC6                  	inc rsi
  3984 00001BC8 48FFC2                  	inc rdx
  3985 00001BCB EBEA                    	jmp .L_lambda_simple_env_loop_0014
  3986                                  .L_lambda_simple_env_end_0014:
  3987 00001BCD 5B                      	pop rbx
  3988 00001BCE BE00000000              	mov rsi, 0
  3989                                  .L_lambda_simple_params_loop_0014:	; copy params
  3990 00001BD3 4883FE00                	cmp rsi, 0
  3991 00001BD7 740E                    	je .L_lambda_simple_params_end_0014
  3992 00001BD9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3993 00001BDE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3994 00001BE2 48FFC6                  	inc rsi
  3995 00001BE5 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  3996                                  .L_lambda_simple_params_end_0014:
  3997 00001BE7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3998 00001BEA 4889C3                  	mov rbx, rax
  3999 00001BED 58                      	pop rax
  4000 00001BEE C60004                  	mov byte [rax], T_closure
  4001 00001BF1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4002 00001BF5 48C74009[021C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  4003 00001BFD E99C000000              	jmp .L_lambda_simple_end_0014
  4004                                  .L_lambda_simple_code_0014:	; lambda-simple body
  4005 00001C02 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4006 00001C08 740B                    	je .L_lambda_simple_arity_check_ok_0014
  4007 00001C0A FF742410                	push qword [rsp + 8 * 2]
  4008 00001C0E 6A01                    	push 1
  4009 00001C10 E9C6320100              	jmp L_error_incorrect_arity_simple
  4010                                  .L_lambda_simple_arity_check_ok_0014:
  4011 00001C15 C8000000                	enter 0, 0
  4012                                  	; Initiating tail-call optimization
  4013                                  	; preparing a non-tail-call
  4014 00001C19 488B4520                	mov rax, PARAM(0)	; param x
  4015 00001C1D 50                      	push rax
  4016 00001C1E 6A01                    	push 1	; arg count
  4017 00001C20 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4018 00001C28 803805                  	cmp byte [rax], T_undefined
  4019 00001C2B 0F84C4310100            	je L_error_fvar_undefined
  4020 00001C31 803804                  	cmp byte [rax], T_closure
  4021 00001C34 0F853F320100            	jne L_error_non_closure
  4022 00001C3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4023 00001C3D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4024 00001C40 50                      	push rax
  4025 00001C41 6A01                    	push 1	; Number of arguments
  4026 00001C43 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4027 00001C4B 803805                  	cmp byte [rax], T_undefined
  4028 00001C4E 0F84A1310100            	je L_error_fvar_undefined
  4029 00001C54 803804                  	cmp byte [rax], T_closure
  4030 00001C57 0F851C320100            	jne L_error_non_closure
  4031 00001C5D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4032                                  
  4033                                  	; Reclaiming the current stack frame
  4034 00001C60 FF7508                  	push qword [rbp + 8]
  4035 00001C63 FF7500                  	push qword [rbp]
  4036 00001C66 41BA05000000            	mov r10, 1 + 4
  4037 00001C6C 4C8B4518                	mov r8, COUNT
  4038 00001C70 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4039 00001C75 4C8D4DF8                	lea r9, [rbp - 8]
  4040                                  .L_tc_recycle_frame_loop_0014:
  4041 00001C79 4983FA00                	cmp r10, 0
  4042 00001C7D 7413                    	je .L_tc_recycle_frame_done_0014
  4043 00001C7F 4D8B19                  	mov r11, qword [r9]
  4044 00001C82 4D8918                  	mov qword [r8], r11
  4045 00001C85 49FFCA                  	dec r10
  4046 00001C88 4983E808                	sub r8, 8
  4047 00001C8C 4983E908                	sub r9, 8
  4048 00001C90 EBE7                    	jmp .L_tc_recycle_frame_loop_0014
  4049                                  .L_tc_recycle_frame_done_0014:
  4050 00001C92 498D6008                	lea rsp, [r8 + 8]
  4051 00001C96 5D                      	pop rbp
  4052 00001C97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4053 00001C9A C9                      	leave
  4054 00001C9B C21800                  	ret AND_KILL_FRAME(1)
  4055                                  .L_lambda_simple_end_0014:	; new closure is in rax
  4056 00001C9E 48890425[D3100000]      	mov qword [free_var_46], rax
  4057 00001CA6 48B8-                   	mov rax, sob_void
  4057 00001CA8 [0000000000000000] 
  4058                                  
  4059 00001CB0 4889C7                  	mov rdi, rax
  4060 00001CB3 E8BF340100              	call print_sexpr_if_not_void
  4061 00001CB8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4062 00001CBD E860320100              	call malloc
  4063 00001CC2 50                      	push rax
  4064 00001CC3 BF00000000              	mov rdi, 8 * 0	; new rib
  4065 00001CC8 E855320100              	call malloc
  4066 00001CCD 50                      	push rax
  4067 00001CCE BF08000000              	mov rdi, 8 * 1	; extended env
  4068 00001CD3 E84A320100              	call malloc
  4069 00001CD8 488B7D10                	mov rdi, ENV
  4070 00001CDC BE00000000              	mov rsi, 0
  4071 00001CE1 BA01000000              	mov rdx, 1
  4072                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4073 00001CE6 4883FE00                	cmp rsi, 0
  4074 00001CEA 7410                    	je .L_lambda_simple_env_end_0015
  4075 00001CEC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4076 00001CF0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4077 00001CF4 48FFC6                  	inc rsi
  4078 00001CF7 48FFC2                  	inc rdx
  4079 00001CFA EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4080                                  .L_lambda_simple_env_end_0015:
  4081 00001CFC 5B                      	pop rbx
  4082 00001CFD BE00000000              	mov rsi, 0
  4083                                  .L_lambda_simple_params_loop_0015:	; copy params
  4084 00001D02 4883FE00                	cmp rsi, 0
  4085 00001D06 740E                    	je .L_lambda_simple_params_end_0015
  4086 00001D08 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4087 00001D0D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4088 00001D11 48FFC6                  	inc rsi
  4089 00001D14 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4090                                  .L_lambda_simple_params_end_0015:
  4091 00001D16 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4092 00001D19 4889C3                  	mov rbx, rax
  4093 00001D1C 58                      	pop rax
  4094 00001D1D C60004                  	mov byte [rax], T_closure
  4095 00001D20 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4096 00001D24 48C74009[311D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4097 00001D2C E99C000000              	jmp .L_lambda_simple_end_0015
  4098                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4099 00001D31 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4100 00001D37 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4101 00001D39 FF742410                	push qword [rsp + 8 * 2]
  4102 00001D3D 6A01                    	push 1
  4103 00001D3F E997310100              	jmp L_error_incorrect_arity_simple
  4104                                  .L_lambda_simple_arity_check_ok_0015:
  4105 00001D44 C8000000                	enter 0, 0
  4106                                  	; Initiating tail-call optimization
  4107                                  	; preparing a non-tail-call
  4108 00001D48 488B4520                	mov rax, PARAM(0)	; param x
  4109 00001D4C 50                      	push rax
  4110 00001D4D 6A01                    	push 1	; arg count
  4111 00001D4F 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4112 00001D57 803805                  	cmp byte [rax], T_undefined
  4113 00001D5A 0F8495300100            	je L_error_fvar_undefined
  4114 00001D60 803804                  	cmp byte [rax], T_closure
  4115 00001D63 0F8510310100            	jne L_error_non_closure
  4116 00001D69 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4117 00001D6C FF5009                  	call SOB_CLOSURE_CODE(rax)
  4118 00001D6F 50                      	push rax
  4119 00001D70 6A01                    	push 1	; Number of arguments
  4120 00001D72 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4121 00001D7A 803805                  	cmp byte [rax], T_undefined
  4122 00001D7D 0F8472300100            	je L_error_fvar_undefined
  4123 00001D83 803804                  	cmp byte [rax], T_closure
  4124 00001D86 0F85ED300100            	jne L_error_non_closure
  4125 00001D8C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4126                                  
  4127                                  	; Reclaiming the current stack frame
  4128 00001D8F FF7508                  	push qword [rbp + 8]
  4129 00001D92 FF7500                  	push qword [rbp]
  4130 00001D95 41BA05000000            	mov r10, 1 + 4
  4131 00001D9B 4C8B4518                	mov r8, COUNT
  4132 00001D9F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4133 00001DA4 4C8D4DF8                	lea r9, [rbp - 8]
  4134                                  .L_tc_recycle_frame_loop_0015:
  4135 00001DA8 4983FA00                	cmp r10, 0
  4136 00001DAC 7413                    	je .L_tc_recycle_frame_done_0015
  4137 00001DAE 4D8B19                  	mov r11, qword [r9]
  4138 00001DB1 4D8918                  	mov qword [r8], r11
  4139 00001DB4 49FFCA                  	dec r10
  4140 00001DB7 4983E808                	sub r8, 8
  4141 00001DBB 4983E908                	sub r9, 8
  4142 00001DBF EBE7                    	jmp .L_tc_recycle_frame_loop_0015
  4143                                  .L_tc_recycle_frame_done_0015:
  4144 00001DC1 498D6008                	lea rsp, [r8 + 8]
  4145 00001DC5 5D                      	pop rbp
  4146 00001DC6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4147 00001DC9 C9                      	leave
  4148 00001DCA C21800                  	ret AND_KILL_FRAME(1)
  4149                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4150 00001DCD 48890425[17110000]      	mov qword [free_var_50], rax
  4151 00001DD5 48B8-                   	mov rax, sob_void
  4151 00001DD7 [0000000000000000] 
  4152                                  
  4153 00001DDF 4889C7                  	mov rdi, rax
  4154 00001DE2 E890330100              	call print_sexpr_if_not_void
  4155 00001DE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4156 00001DEC E831310100              	call malloc
  4157 00001DF1 50                      	push rax
  4158 00001DF2 BF00000000              	mov rdi, 8 * 0	; new rib
  4159 00001DF7 E826310100              	call malloc
  4160 00001DFC 50                      	push rax
  4161 00001DFD BF08000000              	mov rdi, 8 * 1	; extended env
  4162 00001E02 E81B310100              	call malloc
  4163 00001E07 488B7D10                	mov rdi, ENV
  4164 00001E0B BE00000000              	mov rsi, 0
  4165 00001E10 BA01000000              	mov rdx, 1
  4166                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4167 00001E15 4883FE00                	cmp rsi, 0
  4168 00001E19 7410                    	je .L_lambda_simple_env_end_0016
  4169 00001E1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4170 00001E1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4171 00001E23 48FFC6                  	inc rsi
  4172 00001E26 48FFC2                  	inc rdx
  4173 00001E29 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4174                                  .L_lambda_simple_env_end_0016:
  4175 00001E2B 5B                      	pop rbx
  4176 00001E2C BE00000000              	mov rsi, 0
  4177                                  .L_lambda_simple_params_loop_0016:	; copy params
  4178 00001E31 4883FE00                	cmp rsi, 0
  4179 00001E35 740E                    	je .L_lambda_simple_params_end_0016
  4180 00001E37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4181 00001E3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4182 00001E40 48FFC6                  	inc rsi
  4183 00001E43 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4184                                  .L_lambda_simple_params_end_0016:
  4185 00001E45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4186 00001E48 4889C3                  	mov rbx, rax
  4187 00001E4B 58                      	pop rax
  4188 00001E4C C60004                  	mov byte [rax], T_closure
  4189 00001E4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4190 00001E53 48C74009[601E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4191 00001E5B E99C000000              	jmp .L_lambda_simple_end_0016
  4192                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4193 00001E60 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4194 00001E66 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4195 00001E68 FF742410                	push qword [rsp + 8 * 2]
  4196 00001E6C 6A01                    	push 1
  4197 00001E6E E968300100              	jmp L_error_incorrect_arity_simple
  4198                                  .L_lambda_simple_arity_check_ok_0016:
  4199 00001E73 C8000000                	enter 0, 0
  4200                                  	; Initiating tail-call optimization
  4201                                  	; preparing a non-tail-call
  4202 00001E77 488B4520                	mov rax, PARAM(0)	; param x
  4203 00001E7B 50                      	push rax
  4204 00001E7C 6A01                    	push 1	; arg count
  4205 00001E7E 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4206 00001E86 803805                  	cmp byte [rax], T_undefined
  4207 00001E89 0F84662F0100            	je L_error_fvar_undefined
  4208 00001E8F 803804                  	cmp byte [rax], T_closure
  4209 00001E92 0F85E12F0100            	jne L_error_non_closure
  4210 00001E98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4211 00001E9B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4212 00001E9E 50                      	push rax
  4213 00001E9F 6A01                    	push 1	; Number of arguments
  4214 00001EA1 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4215 00001EA9 803805                  	cmp byte [rax], T_undefined
  4216 00001EAC 0F84432F0100            	je L_error_fvar_undefined
  4217 00001EB2 803804                  	cmp byte [rax], T_closure
  4218 00001EB5 0F85BE2F0100            	jne L_error_non_closure
  4219 00001EBB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4220                                  
  4221                                  	; Reclaiming the current stack frame
  4222 00001EBE FF7508                  	push qword [rbp + 8]
  4223 00001EC1 FF7500                  	push qword [rbp]
  4224 00001EC4 41BA05000000            	mov r10, 1 + 4
  4225 00001ECA 4C8B4518                	mov r8, COUNT
  4226 00001ECE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4227 00001ED3 4C8D4DF8                	lea r9, [rbp - 8]
  4228                                  .L_tc_recycle_frame_loop_0016:
  4229 00001ED7 4983FA00                	cmp r10, 0
  4230 00001EDB 7413                    	je .L_tc_recycle_frame_done_0016
  4231 00001EDD 4D8B19                  	mov r11, qword [r9]
  4232 00001EE0 4D8918                  	mov qword [r8], r11
  4233 00001EE3 49FFCA                  	dec r10
  4234 00001EE6 4983E808                	sub r8, 8
  4235 00001EEA 4983E908                	sub r9, 8
  4236 00001EEE EBE7                    	jmp .L_tc_recycle_frame_loop_0016
  4237                                  .L_tc_recycle_frame_done_0016:
  4238 00001EF0 498D6008                	lea rsp, [r8 + 8]
  4239 00001EF4 5D                      	pop rbp
  4240 00001EF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4241 00001EF8 C9                      	leave
  4242 00001EF9 C21800                  	ret AND_KILL_FRAME(1)
  4243                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4244 00001EFC 48890425[28110000]      	mov qword [free_var_51], rax
  4245 00001F04 48B8-                   	mov rax, sob_void
  4245 00001F06 [0000000000000000] 
  4246                                  
  4247 00001F0E 4889C7                  	mov rdi, rax
  4248 00001F11 E861320100              	call print_sexpr_if_not_void
  4249 00001F16 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4250 00001F1B E802300100              	call malloc
  4251 00001F20 50                      	push rax
  4252 00001F21 BF00000000              	mov rdi, 8 * 0	; new rib
  4253 00001F26 E8F72F0100              	call malloc
  4254 00001F2B 50                      	push rax
  4255 00001F2C BF08000000              	mov rdi, 8 * 1	; extended env
  4256 00001F31 E8EC2F0100              	call malloc
  4257 00001F36 488B7D10                	mov rdi, ENV
  4258 00001F3A BE00000000              	mov rsi, 0
  4259 00001F3F BA01000000              	mov rdx, 1
  4260                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4261 00001F44 4883FE00                	cmp rsi, 0
  4262 00001F48 7410                    	je .L_lambda_simple_env_end_0017
  4263 00001F4A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4264 00001F4E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4265 00001F52 48FFC6                  	inc rsi
  4266 00001F55 48FFC2                  	inc rdx
  4267 00001F58 EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4268                                  .L_lambda_simple_env_end_0017:
  4269 00001F5A 5B                      	pop rbx
  4270 00001F5B BE00000000              	mov rsi, 0
  4271                                  .L_lambda_simple_params_loop_0017:	; copy params
  4272 00001F60 4883FE00                	cmp rsi, 0
  4273 00001F64 740E                    	je .L_lambda_simple_params_end_0017
  4274 00001F66 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4275 00001F6B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4276 00001F6F 48FFC6                  	inc rsi
  4277 00001F72 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4278                                  .L_lambda_simple_params_end_0017:
  4279 00001F74 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4280 00001F77 4889C3                  	mov rbx, rax
  4281 00001F7A 58                      	pop rax
  4282 00001F7B C60004                  	mov byte [rax], T_closure
  4283 00001F7E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4284 00001F82 48C74009[8F1F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4285 00001F8A E99C000000              	jmp .L_lambda_simple_end_0017
  4286                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4287 00001F8F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4288 00001F95 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4289 00001F97 FF742410                	push qword [rsp + 8 * 2]
  4290 00001F9B 6A01                    	push 1
  4291 00001F9D E9392F0100              	jmp L_error_incorrect_arity_simple
  4292                                  .L_lambda_simple_arity_check_ok_0017:
  4293 00001FA2 C8000000                	enter 0, 0
  4294                                  	; Initiating tail-call optimization
  4295                                  	; preparing a non-tail-call
  4296 00001FA6 488B4520                	mov rax, PARAM(0)	; param x
  4297 00001FAA 50                      	push rax
  4298 00001FAB 6A01                    	push 1	; arg count
  4299 00001FAD 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4300 00001FB5 803805                  	cmp byte [rax], T_undefined
  4301 00001FB8 0F84372E0100            	je L_error_fvar_undefined
  4302 00001FBE 803804                  	cmp byte [rax], T_closure
  4303 00001FC1 0F85B22E0100            	jne L_error_non_closure
  4304 00001FC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4305 00001FCA FF5009                  	call SOB_CLOSURE_CODE(rax)
  4306 00001FCD 50                      	push rax
  4307 00001FCE 6A01                    	push 1	; Number of arguments
  4308 00001FD0 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4309 00001FD8 803805                  	cmp byte [rax], T_undefined
  4310 00001FDB 0F84142E0100            	je L_error_fvar_undefined
  4311 00001FE1 803804                  	cmp byte [rax], T_closure
  4312 00001FE4 0F858F2E0100            	jne L_error_non_closure
  4313 00001FEA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4314                                  
  4315                                  	; Reclaiming the current stack frame
  4316 00001FED FF7508                  	push qword [rbp + 8]
  4317 00001FF0 FF7500                  	push qword [rbp]
  4318 00001FF3 41BA05000000            	mov r10, 1 + 4
  4319 00001FF9 4C8B4518                	mov r8, COUNT
  4320 00001FFD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4321 00002002 4C8D4DF8                	lea r9, [rbp - 8]
  4322                                  .L_tc_recycle_frame_loop_0017:
  4323 00002006 4983FA00                	cmp r10, 0
  4324 0000200A 7413                    	je .L_tc_recycle_frame_done_0017
  4325 0000200C 4D8B19                  	mov r11, qword [r9]
  4326 0000200F 4D8918                  	mov qword [r8], r11
  4327 00002012 49FFCA                  	dec r10
  4328 00002015 4983E808                	sub r8, 8
  4329 00002019 4983E908                	sub r9, 8
  4330 0000201D EBE7                    	jmp .L_tc_recycle_frame_loop_0017
  4331                                  .L_tc_recycle_frame_done_0017:
  4332 0000201F 498D6008                	lea rsp, [r8 + 8]
  4333 00002023 5D                      	pop rbp
  4334 00002024 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4335 00002027 C9                      	leave
  4336 00002028 C21800                  	ret AND_KILL_FRAME(1)
  4337                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4338 0000202B 48890425[4A110000]      	mov qword [free_var_53], rax
  4339 00002033 48B8-                   	mov rax, sob_void
  4339 00002035 [0000000000000000] 
  4340                                  
  4341 0000203D 4889C7                  	mov rdi, rax
  4342 00002040 E832310100              	call print_sexpr_if_not_void
  4343 00002045 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4344 0000204A E8D32E0100              	call malloc
  4345 0000204F 50                      	push rax
  4346 00002050 BF00000000              	mov rdi, 8 * 0	; new rib
  4347 00002055 E8C82E0100              	call malloc
  4348 0000205A 50                      	push rax
  4349 0000205B BF08000000              	mov rdi, 8 * 1	; extended env
  4350 00002060 E8BD2E0100              	call malloc
  4351 00002065 488B7D10                	mov rdi, ENV
  4352 00002069 BE00000000              	mov rsi, 0
  4353 0000206E BA01000000              	mov rdx, 1
  4354                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4355 00002073 4883FE00                	cmp rsi, 0
  4356 00002077 7410                    	je .L_lambda_simple_env_end_0018
  4357 00002079 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4358 0000207D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4359 00002081 48FFC6                  	inc rsi
  4360 00002084 48FFC2                  	inc rdx
  4361 00002087 EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4362                                  .L_lambda_simple_env_end_0018:
  4363 00002089 5B                      	pop rbx
  4364 0000208A BE00000000              	mov rsi, 0
  4365                                  .L_lambda_simple_params_loop_0018:	; copy params
  4366 0000208F 4883FE00                	cmp rsi, 0
  4367 00002093 740E                    	je .L_lambda_simple_params_end_0018
  4368 00002095 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4369 0000209A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4370 0000209E 48FFC6                  	inc rsi
  4371 000020A1 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4372                                  .L_lambda_simple_params_end_0018:
  4373 000020A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4374 000020A6 4889C3                  	mov rbx, rax
  4375 000020A9 58                      	pop rax
  4376 000020AA C60004                  	mov byte [rax], T_closure
  4377 000020AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4378 000020B1 48C74009[BE200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4379 000020B9 E99C000000              	jmp .L_lambda_simple_end_0018
  4380                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4381 000020BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4382 000020C4 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4383 000020C6 FF742410                	push qword [rsp + 8 * 2]
  4384 000020CA 6A01                    	push 1
  4385 000020CC E90A2E0100              	jmp L_error_incorrect_arity_simple
  4386                                  .L_lambda_simple_arity_check_ok_0018:
  4387 000020D1 C8000000                	enter 0, 0
  4388                                  	; Initiating tail-call optimization
  4389                                  	; preparing a non-tail-call
  4390 000020D5 488B4520                	mov rax, PARAM(0)	; param x
  4391 000020D9 50                      	push rax
  4392 000020DA 6A01                    	push 1	; arg count
  4393 000020DC 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4394 000020E4 803805                  	cmp byte [rax], T_undefined
  4395 000020E7 0F84082D0100            	je L_error_fvar_undefined
  4396 000020ED 803804                  	cmp byte [rax], T_closure
  4397 000020F0 0F85832D0100            	jne L_error_non_closure
  4398 000020F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4399 000020F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4400 000020FC 50                      	push rax
  4401 000020FD 6A01                    	push 1	; Number of arguments
  4402 000020FF 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4403 00002107 803805                  	cmp byte [rax], T_undefined
  4404 0000210A 0F84E52C0100            	je L_error_fvar_undefined
  4405 00002110 803804                  	cmp byte [rax], T_closure
  4406 00002113 0F85602D0100            	jne L_error_non_closure
  4407 00002119 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4408                                  
  4409                                  	; Reclaiming the current stack frame
  4410 0000211C FF7508                  	push qword [rbp + 8]
  4411 0000211F FF7500                  	push qword [rbp]
  4412 00002122 41BA05000000            	mov r10, 1 + 4
  4413 00002128 4C8B4518                	mov r8, COUNT
  4414 0000212C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4415 00002131 4C8D4DF8                	lea r9, [rbp - 8]
  4416                                  .L_tc_recycle_frame_loop_0018:
  4417 00002135 4983FA00                	cmp r10, 0
  4418 00002139 7413                    	je .L_tc_recycle_frame_done_0018
  4419 0000213B 4D8B19                  	mov r11, qword [r9]
  4420 0000213E 4D8918                  	mov qword [r8], r11
  4421 00002141 49FFCA                  	dec r10
  4422 00002144 4983E808                	sub r8, 8
  4423 00002148 4983E908                	sub r9, 8
  4424 0000214C EBE7                    	jmp .L_tc_recycle_frame_loop_0018
  4425                                  .L_tc_recycle_frame_done_0018:
  4426 0000214E 498D6008                	lea rsp, [r8 + 8]
  4427 00002152 5D                      	pop rbp
  4428 00002153 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4429 00002156 C9                      	leave
  4430 00002157 C21800                  	ret AND_KILL_FRAME(1)
  4431                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4432 0000215A 48890425[5B110000]      	mov qword [free_var_54], rax
  4433 00002162 48B8-                   	mov rax, sob_void
  4433 00002164 [0000000000000000] 
  4434                                  
  4435 0000216C 4889C7                  	mov rdi, rax
  4436 0000216F E803300100              	call print_sexpr_if_not_void
  4437 00002174 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4438 00002179 E8A42D0100              	call malloc
  4439 0000217E 50                      	push rax
  4440 0000217F BF00000000              	mov rdi, 8 * 0	; new rib
  4441 00002184 E8992D0100              	call malloc
  4442 00002189 50                      	push rax
  4443 0000218A BF08000000              	mov rdi, 8 * 1	; extended env
  4444 0000218F E88E2D0100              	call malloc
  4445 00002194 488B7D10                	mov rdi, ENV
  4446 00002198 BE00000000              	mov rsi, 0
  4447 0000219D BA01000000              	mov rdx, 1
  4448                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4449 000021A2 4883FE00                	cmp rsi, 0
  4450 000021A6 7410                    	je .L_lambda_simple_env_end_0019
  4451 000021A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4452 000021AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4453 000021B0 48FFC6                  	inc rsi
  4454 000021B3 48FFC2                  	inc rdx
  4455 000021B6 EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4456                                  .L_lambda_simple_env_end_0019:
  4457 000021B8 5B                      	pop rbx
  4458 000021B9 BE00000000              	mov rsi, 0
  4459                                  .L_lambda_simple_params_loop_0019:	; copy params
  4460 000021BE 4883FE00                	cmp rsi, 0
  4461 000021C2 740E                    	je .L_lambda_simple_params_end_0019
  4462 000021C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4463 000021C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4464 000021CD 48FFC6                  	inc rsi
  4465 000021D0 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4466                                  .L_lambda_simple_params_end_0019:
  4467 000021D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4468 000021D5 4889C3                  	mov rbx, rax
  4469 000021D8 58                      	pop rax
  4470 000021D9 C60004                  	mov byte [rax], T_closure
  4471 000021DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4472 000021E0 48C74009[ED210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4473 000021E8 E99C000000              	jmp .L_lambda_simple_end_0019
  4474                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4475 000021ED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4476 000021F3 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4477 000021F5 FF742410                	push qword [rsp + 8 * 2]
  4478 000021F9 6A01                    	push 1
  4479 000021FB E9DB2C0100              	jmp L_error_incorrect_arity_simple
  4480                                  .L_lambda_simple_arity_check_ok_0019:
  4481 00002200 C8000000                	enter 0, 0
  4482                                  	; Initiating tail-call optimization
  4483                                  	; preparing a non-tail-call
  4484 00002204 488B4520                	mov rax, PARAM(0)	; param x
  4485 00002208 50                      	push rax
  4486 00002209 6A01                    	push 1	; arg count
  4487 0000220B 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4488 00002213 803805                  	cmp byte [rax], T_undefined
  4489 00002216 0F84D92B0100            	je L_error_fvar_undefined
  4490 0000221C 803804                  	cmp byte [rax], T_closure
  4491 0000221F 0F85542C0100            	jne L_error_non_closure
  4492 00002225 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4493 00002228 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4494 0000222B 50                      	push rax
  4495 0000222C 6A01                    	push 1	; Number of arguments
  4496 0000222E 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4497 00002236 803805                  	cmp byte [rax], T_undefined
  4498 00002239 0F84B62B0100            	je L_error_fvar_undefined
  4499 0000223F 803804                  	cmp byte [rax], T_closure
  4500 00002242 0F85312C0100            	jne L_error_non_closure
  4501 00002248 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4502                                  
  4503                                  	; Reclaiming the current stack frame
  4504 0000224B FF7508                  	push qword [rbp + 8]
  4505 0000224E FF7500                  	push qword [rbp]
  4506 00002251 41BA05000000            	mov r10, 1 + 4
  4507 00002257 4C8B4518                	mov r8, COUNT
  4508 0000225B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4509 00002260 4C8D4DF8                	lea r9, [rbp - 8]
  4510                                  .L_tc_recycle_frame_loop_0019:
  4511 00002264 4983FA00                	cmp r10, 0
  4512 00002268 7413                    	je .L_tc_recycle_frame_done_0019
  4513 0000226A 4D8B19                  	mov r11, qword [r9]
  4514 0000226D 4D8918                  	mov qword [r8], r11
  4515 00002270 49FFCA                  	dec r10
  4516 00002273 4983E808                	sub r8, 8
  4517 00002277 4983E908                	sub r9, 8
  4518 0000227B EBE7                    	jmp .L_tc_recycle_frame_loop_0019
  4519                                  .L_tc_recycle_frame_done_0019:
  4520 0000227D 498D6008                	lea rsp, [r8 + 8]
  4521 00002281 5D                      	pop rbp
  4522 00002282 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4523 00002285 C9                      	leave
  4524 00002286 C21800                  	ret AND_KILL_FRAME(1)
  4525                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4526 00002289 48890425[8E110000]      	mov qword [free_var_57], rax
  4527 00002291 48B8-                   	mov rax, sob_void
  4527 00002293 [0000000000000000] 
  4528                                  
  4529 0000229B 4889C7                  	mov rdi, rax
  4530 0000229E E8D42E0100              	call print_sexpr_if_not_void
  4531 000022A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4532 000022A8 E8752C0100              	call malloc
  4533 000022AD 50                      	push rax
  4534 000022AE BF00000000              	mov rdi, 8 * 0	; new rib
  4535 000022B3 E86A2C0100              	call malloc
  4536 000022B8 50                      	push rax
  4537 000022B9 BF08000000              	mov rdi, 8 * 1	; extended env
  4538 000022BE E85F2C0100              	call malloc
  4539 000022C3 488B7D10                	mov rdi, ENV
  4540 000022C7 BE00000000              	mov rsi, 0
  4541 000022CC BA01000000              	mov rdx, 1
  4542                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4543 000022D1 4883FE00                	cmp rsi, 0
  4544 000022D5 7410                    	je .L_lambda_simple_env_end_001a
  4545 000022D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4546 000022DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4547 000022DF 48FFC6                  	inc rsi
  4548 000022E2 48FFC2                  	inc rdx
  4549 000022E5 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4550                                  .L_lambda_simple_env_end_001a:
  4551 000022E7 5B                      	pop rbx
  4552 000022E8 BE00000000              	mov rsi, 0
  4553                                  .L_lambda_simple_params_loop_001a:	; copy params
  4554 000022ED 4883FE00                	cmp rsi, 0
  4555 000022F1 740E                    	je .L_lambda_simple_params_end_001a
  4556 000022F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4557 000022F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4558 000022FC 48FFC6                  	inc rsi
  4559 000022FF EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4560                                  .L_lambda_simple_params_end_001a:
  4561 00002301 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4562 00002304 4889C3                  	mov rbx, rax
  4563 00002307 58                      	pop rax
  4564 00002308 C60004                  	mov byte [rax], T_closure
  4565 0000230B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4566 0000230F 48C74009[1C230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4567 00002317 E99C000000              	jmp .L_lambda_simple_end_001a
  4568                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4569 0000231C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4570 00002322 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4571 00002324 FF742410                	push qword [rsp + 8 * 2]
  4572 00002328 6A01                    	push 1
  4573 0000232A E9AC2B0100              	jmp L_error_incorrect_arity_simple
  4574                                  .L_lambda_simple_arity_check_ok_001a:
  4575 0000232F C8000000                	enter 0, 0
  4576                                  	; Initiating tail-call optimization
  4577                                  	; preparing a non-tail-call
  4578 00002333 488B4520                	mov rax, PARAM(0)	; param x
  4579 00002337 50                      	push rax
  4580 00002338 6A01                    	push 1	; arg count
  4581 0000233A 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4582 00002342 803805                  	cmp byte [rax], T_undefined
  4583 00002345 0F84AA2A0100            	je L_error_fvar_undefined
  4584 0000234B 803804                  	cmp byte [rax], T_closure
  4585 0000234E 0F85252B0100            	jne L_error_non_closure
  4586 00002354 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4587 00002357 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4588 0000235A 50                      	push rax
  4589 0000235B 6A01                    	push 1	; Number of arguments
  4590 0000235D 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4591 00002365 803805                  	cmp byte [rax], T_undefined
  4592 00002368 0F84872A0100            	je L_error_fvar_undefined
  4593 0000236E 803804                  	cmp byte [rax], T_closure
  4594 00002371 0F85022B0100            	jne L_error_non_closure
  4595 00002377 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4596                                  
  4597                                  	; Reclaiming the current stack frame
  4598 0000237A FF7508                  	push qword [rbp + 8]
  4599 0000237D FF7500                  	push qword [rbp]
  4600 00002380 41BA05000000            	mov r10, 1 + 4
  4601 00002386 4C8B4518                	mov r8, COUNT
  4602 0000238A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4603 0000238F 4C8D4DF8                	lea r9, [rbp - 8]
  4604                                  .L_tc_recycle_frame_loop_001a:
  4605 00002393 4983FA00                	cmp r10, 0
  4606 00002397 7413                    	je .L_tc_recycle_frame_done_001a
  4607 00002399 4D8B19                  	mov r11, qword [r9]
  4608 0000239C 4D8918                  	mov qword [r8], r11
  4609 0000239F 49FFCA                  	dec r10
  4610 000023A2 4983E808                	sub r8, 8
  4611 000023A6 4983E908                	sub r9, 8
  4612 000023AA EBE7                    	jmp .L_tc_recycle_frame_loop_001a
  4613                                  .L_tc_recycle_frame_done_001a:
  4614 000023AC 498D6008                	lea rsp, [r8 + 8]
  4615 000023B0 5D                      	pop rbp
  4616 000023B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4617 000023B4 C9                      	leave
  4618 000023B5 C21800                  	ret AND_KILL_FRAME(1)
  4619                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4620 000023B8 48890425[9F110000]      	mov qword [free_var_58], rax
  4621 000023C0 48B8-                   	mov rax, sob_void
  4621 000023C2 [0000000000000000] 
  4622                                  
  4623 000023CA 4889C7                  	mov rdi, rax
  4624 000023CD E8A52D0100              	call print_sexpr_if_not_void
  4625 000023D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4626 000023D7 E8462B0100              	call malloc
  4627 000023DC 50                      	push rax
  4628 000023DD BF00000000              	mov rdi, 8 * 0	; new rib
  4629 000023E2 E83B2B0100              	call malloc
  4630 000023E7 50                      	push rax
  4631 000023E8 BF08000000              	mov rdi, 8 * 1	; extended env
  4632 000023ED E8302B0100              	call malloc
  4633 000023F2 488B7D10                	mov rdi, ENV
  4634 000023F6 BE00000000              	mov rsi, 0
  4635 000023FB BA01000000              	mov rdx, 1
  4636                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4637 00002400 4883FE00                	cmp rsi, 0
  4638 00002404 7410                    	je .L_lambda_simple_env_end_001b
  4639 00002406 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4640 0000240A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4641 0000240E 48FFC6                  	inc rsi
  4642 00002411 48FFC2                  	inc rdx
  4643 00002414 EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4644                                  .L_lambda_simple_env_end_001b:
  4645 00002416 5B                      	pop rbx
  4646 00002417 BE00000000              	mov rsi, 0
  4647                                  .L_lambda_simple_params_loop_001b:	; copy params
  4648 0000241C 4883FE00                	cmp rsi, 0
  4649 00002420 740E                    	je .L_lambda_simple_params_end_001b
  4650 00002422 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4651 00002427 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4652 0000242B 48FFC6                  	inc rsi
  4653 0000242E EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4654                                  .L_lambda_simple_params_end_001b:
  4655 00002430 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4656 00002433 4889C3                  	mov rbx, rax
  4657 00002436 58                      	pop rax
  4658 00002437 C60004                  	mov byte [rax], T_closure
  4659 0000243A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4660 0000243E 48C74009[4B240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4661 00002446 E99C000000              	jmp .L_lambda_simple_end_001b
  4662                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4663 0000244B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4664 00002451 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4665 00002453 FF742410                	push qword [rsp + 8 * 2]
  4666 00002457 6A01                    	push 1
  4667 00002459 E97D2A0100              	jmp L_error_incorrect_arity_simple
  4668                                  .L_lambda_simple_arity_check_ok_001b:
  4669 0000245E C8000000                	enter 0, 0
  4670                                  	; Initiating tail-call optimization
  4671                                  	; preparing a non-tail-call
  4672 00002462 488B4520                	mov rax, PARAM(0)	; param x
  4673 00002466 50                      	push rax
  4674 00002467 6A01                    	push 1	; arg count
  4675 00002469 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4676 00002471 803805                  	cmp byte [rax], T_undefined
  4677 00002474 0F847B290100            	je L_error_fvar_undefined
  4678 0000247A 803804                  	cmp byte [rax], T_closure
  4679 0000247D 0F85F6290100            	jne L_error_non_closure
  4680 00002483 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4681 00002486 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4682 00002489 50                      	push rax
  4683 0000248A 6A01                    	push 1	; Number of arguments
  4684 0000248C 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4685 00002494 803805                  	cmp byte [rax], T_undefined
  4686 00002497 0F8458290100            	je L_error_fvar_undefined
  4687 0000249D 803804                  	cmp byte [rax], T_closure
  4688 000024A0 0F85D3290100            	jne L_error_non_closure
  4689 000024A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4690                                  
  4691                                  	; Reclaiming the current stack frame
  4692 000024A9 FF7508                  	push qword [rbp + 8]
  4693 000024AC FF7500                  	push qword [rbp]
  4694 000024AF 41BA05000000            	mov r10, 1 + 4
  4695 000024B5 4C8B4518                	mov r8, COUNT
  4696 000024B9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4697 000024BE 4C8D4DF8                	lea r9, [rbp - 8]
  4698                                  .L_tc_recycle_frame_loop_001b:
  4699 000024C2 4983FA00                	cmp r10, 0
  4700 000024C6 7413                    	je .L_tc_recycle_frame_done_001b
  4701 000024C8 4D8B19                  	mov r11, qword [r9]
  4702 000024CB 4D8918                  	mov qword [r8], r11
  4703 000024CE 49FFCA                  	dec r10
  4704 000024D1 4983E808                	sub r8, 8
  4705 000024D5 4983E908                	sub r9, 8
  4706 000024D9 EBE7                    	jmp .L_tc_recycle_frame_loop_001b
  4707                                  .L_tc_recycle_frame_done_001b:
  4708 000024DB 498D6008                	lea rsp, [r8 + 8]
  4709 000024DF 5D                      	pop rbp
  4710 000024E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4711 000024E3 C9                      	leave
  4712 000024E4 C21800                  	ret AND_KILL_FRAME(1)
  4713                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4714 000024E7 48890425[C1110000]      	mov qword [free_var_60], rax
  4715 000024EF 48B8-                   	mov rax, sob_void
  4715 000024F1 [0000000000000000] 
  4716                                  
  4717 000024F9 4889C7                  	mov rdi, rax
  4718 000024FC E8762C0100              	call print_sexpr_if_not_void
  4719 00002501 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4720 00002506 E8172A0100              	call malloc
  4721 0000250B 50                      	push rax
  4722 0000250C BF00000000              	mov rdi, 8 * 0	; new rib
  4723 00002511 E80C2A0100              	call malloc
  4724 00002516 50                      	push rax
  4725 00002517 BF08000000              	mov rdi, 8 * 1	; extended env
  4726 0000251C E8012A0100              	call malloc
  4727 00002521 488B7D10                	mov rdi, ENV
  4728 00002525 BE00000000              	mov rsi, 0
  4729 0000252A BA01000000              	mov rdx, 1
  4730                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4731 0000252F 4883FE00                	cmp rsi, 0
  4732 00002533 7410                    	je .L_lambda_simple_env_end_001c
  4733 00002535 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4734 00002539 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4735 0000253D 48FFC6                  	inc rsi
  4736 00002540 48FFC2                  	inc rdx
  4737 00002543 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4738                                  .L_lambda_simple_env_end_001c:
  4739 00002545 5B                      	pop rbx
  4740 00002546 BE00000000              	mov rsi, 0
  4741                                  .L_lambda_simple_params_loop_001c:	; copy params
  4742 0000254B 4883FE00                	cmp rsi, 0
  4743 0000254F 740E                    	je .L_lambda_simple_params_end_001c
  4744 00002551 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4745 00002556 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4746 0000255A 48FFC6                  	inc rsi
  4747 0000255D EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4748                                  .L_lambda_simple_params_end_001c:
  4749 0000255F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4750 00002562 4889C3                  	mov rbx, rax
  4751 00002565 58                      	pop rax
  4752 00002566 C60004                  	mov byte [rax], T_closure
  4753 00002569 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4754 0000256D 48C74009[7A250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4755 00002575 E99C000000              	jmp .L_lambda_simple_end_001c
  4756                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4757 0000257A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4758 00002580 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4759 00002582 FF742410                	push qword [rsp + 8 * 2]
  4760 00002586 6A01                    	push 1
  4761 00002588 E94E290100              	jmp L_error_incorrect_arity_simple
  4762                                  .L_lambda_simple_arity_check_ok_001c:
  4763 0000258D C8000000                	enter 0, 0
  4764                                  	; Initiating tail-call optimization
  4765                                  	; preparing a non-tail-call
  4766 00002591 488B4520                	mov rax, PARAM(0)	; param x
  4767 00002595 50                      	push rax
  4768 00002596 6A01                    	push 1	; arg count
  4769 00002598 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4770 000025A0 803805                  	cmp byte [rax], T_undefined
  4771 000025A3 0F844C280100            	je L_error_fvar_undefined
  4772 000025A9 803804                  	cmp byte [rax], T_closure
  4773 000025AC 0F85C7280100            	jne L_error_non_closure
  4774 000025B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4775 000025B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4776 000025B8 50                      	push rax
  4777 000025B9 6A01                    	push 1	; Number of arguments
  4778 000025BB 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4779 000025C3 803805                  	cmp byte [rax], T_undefined
  4780 000025C6 0F8429280100            	je L_error_fvar_undefined
  4781 000025CC 803804                  	cmp byte [rax], T_closure
  4782 000025CF 0F85A4280100            	jne L_error_non_closure
  4783 000025D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4784                                  
  4785                                  	; Reclaiming the current stack frame
  4786 000025D8 FF7508                  	push qword [rbp + 8]
  4787 000025DB FF7500                  	push qword [rbp]
  4788 000025DE 41BA05000000            	mov r10, 1 + 4
  4789 000025E4 4C8B4518                	mov r8, COUNT
  4790 000025E8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4791 000025ED 4C8D4DF8                	lea r9, [rbp - 8]
  4792                                  .L_tc_recycle_frame_loop_001c:
  4793 000025F1 4983FA00                	cmp r10, 0
  4794 000025F5 7413                    	je .L_tc_recycle_frame_done_001c
  4795 000025F7 4D8B19                  	mov r11, qword [r9]
  4796 000025FA 4D8918                  	mov qword [r8], r11
  4797 000025FD 49FFCA                  	dec r10
  4798 00002600 4983E808                	sub r8, 8
  4799 00002604 4983E908                	sub r9, 8
  4800 00002608 EBE7                    	jmp .L_tc_recycle_frame_loop_001c
  4801                                  .L_tc_recycle_frame_done_001c:
  4802 0000260A 498D6008                	lea rsp, [r8 + 8]
  4803 0000260E 5D                      	pop rbp
  4804 0000260F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4805 00002612 C9                      	leave
  4806 00002613 C21800                  	ret AND_KILL_FRAME(1)
  4807                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4808 00002616 48890425[D2110000]      	mov qword [free_var_61], rax
  4809 0000261E 48B8-                   	mov rax, sob_void
  4809 00002620 [0000000000000000] 
  4810                                  
  4811 00002628 4889C7                  	mov rdi, rax
  4812 0000262B E8472B0100              	call print_sexpr_if_not_void
  4813 00002630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4814 00002635 E8E8280100              	call malloc
  4815 0000263A 50                      	push rax
  4816 0000263B BF00000000              	mov rdi, 8 * 0	; new rib
  4817 00002640 E8DD280100              	call malloc
  4818 00002645 50                      	push rax
  4819 00002646 BF08000000              	mov rdi, 8 * 1	; extended env
  4820 0000264B E8D2280100              	call malloc
  4821 00002650 488B7D10                	mov rdi, ENV
  4822 00002654 BE00000000              	mov rsi, 0
  4823 00002659 BA01000000              	mov rdx, 1
  4824                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4825 0000265E 4883FE00                	cmp rsi, 0
  4826 00002662 7410                    	je .L_lambda_simple_env_end_001d
  4827 00002664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4828 00002668 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4829 0000266C 48FFC6                  	inc rsi
  4830 0000266F 48FFC2                  	inc rdx
  4831 00002672 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4832                                  .L_lambda_simple_env_end_001d:
  4833 00002674 5B                      	pop rbx
  4834 00002675 BE00000000              	mov rsi, 0
  4835                                  .L_lambda_simple_params_loop_001d:	; copy params
  4836 0000267A 4883FE00                	cmp rsi, 0
  4837 0000267E 740E                    	je .L_lambda_simple_params_end_001d
  4838 00002680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4839 00002685 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4840 00002689 48FFC6                  	inc rsi
  4841 0000268C EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4842                                  .L_lambda_simple_params_end_001d:
  4843 0000268E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4844 00002691 4889C3                  	mov rbx, rax
  4845 00002694 58                      	pop rax
  4846 00002695 C60004                  	mov byte [rax], T_closure
  4847 00002698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4848 0000269C 48C74009[A9260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4849 000026A4 E90E010000              	jmp .L_lambda_simple_end_001d
  4850                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4851 000026A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4852 000026AF 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4853 000026B1 FF742410                	push qword [rsp + 8 * 2]
  4854 000026B5 6A01                    	push 1
  4855 000026B7 E91F280100              	jmp L_error_incorrect_arity_simple
  4856                                  .L_lambda_simple_arity_check_ok_001d:
  4857 000026BC C8000000                	enter 0, 0
  4858                                  	; preparing a non-tail-call
  4859 000026C0 488B4520                	mov rax, PARAM(0)	; param e
  4860 000026C4 50                      	push rax
  4861 000026C5 6A01                    	push 1	; arg count
  4862 000026C7 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4863 000026CF 803805                  	cmp byte [rax], T_undefined
  4864 000026D2 0F841D270100            	je L_error_fvar_undefined
  4865 000026D8 803804                  	cmp byte [rax], T_closure
  4866 000026DB 0F8598270100            	jne L_error_non_closure
  4867 000026E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4868 000026E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4869 000026E7 483D[02000000]          	cmp rax, sob_boolean_false
  4870 000026ED 0F85C0000000            	jne .L_or_end_0001
  4871                                  
  4872                                  	; preparing a non-tail-call
  4873 000026F3 488B4520                	mov rax, PARAM(0)	; param e
  4874 000026F7 50                      	push rax
  4875 000026F8 6A01                    	push 1	; arg count
  4876 000026FA 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  4877 00002702 803805                  	cmp byte [rax], T_undefined
  4878 00002705 0F84EA260100            	je L_error_fvar_undefined
  4879 0000270B 803804                  	cmp byte [rax], T_closure
  4880 0000270E 0F8565270100            	jne L_error_non_closure
  4881 00002714 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4882 00002717 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4883 0000271A 483D[02000000]          	cmp rax, sob_boolean_false
  4884 00002720 0F8483000000            	je .L_if_else_0001
  4885                                  	; Initiating tail-call optimization
  4886                                  	; preparing a non-tail-call
  4887 00002726 488B4520                	mov rax, PARAM(0)	; param e
  4888 0000272A 50                      	push rax
  4889 0000272B 6A01                    	push 1	; arg count
  4890 0000272D 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4891 00002735 803805                  	cmp byte [rax], T_undefined
  4892 00002738 0F84B7260100            	je L_error_fvar_undefined
  4893 0000273E 803804                  	cmp byte [rax], T_closure
  4894 00002741 0F8532270100            	jne L_error_non_closure
  4895 00002747 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4896 0000274A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4897 0000274D 50                      	push rax
  4898 0000274E 6A01                    	push 1	; Number of arguments
  4899 00002750 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
  4900 00002758 803805                  	cmp byte [rax], T_undefined
  4901 0000275B 0F8494260100            	je L_error_fvar_undefined
  4902 00002761 803804                  	cmp byte [rax], T_closure
  4903 00002764 0F850F270100            	jne L_error_non_closure
  4904 0000276A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4905                                  
  4906                                  	; Reclaiming the current stack frame
  4907 0000276D FF7508                  	push qword [rbp + 8]
  4908 00002770 FF7500                  	push qword [rbp]
  4909 00002773 41BA05000000            	mov r10, 1 + 4
  4910 00002779 4C8B4518                	mov r8, COUNT
  4911 0000277D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4912 00002782 4C8D4DF8                	lea r9, [rbp - 8]
  4913                                  .L_tc_recycle_frame_loop_001d:
  4914 00002786 4983FA00                	cmp r10, 0
  4915 0000278A 7413                    	je .L_tc_recycle_frame_done_001d
  4916 0000278C 4D8B19                  	mov r11, qword [r9]
  4917 0000278F 4D8918                  	mov qword [r8], r11
  4918 00002792 49FFCA                  	dec r10
  4919 00002795 4983E808                	sub r8, 8
  4920 00002799 4983E908                	sub r9, 8
  4921 0000279D EBE7                    	jmp .L_tc_recycle_frame_loop_001d
  4922                                  .L_tc_recycle_frame_done_001d:
  4923 0000279F 498D6008                	lea rsp, [r8 + 8]
  4924 000027A3 5D                      	pop rbp
  4925 000027A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4926 000027A7 EB0A                    	jmp .L_if_end_0001
  4927                                  .L_if_else_0001:
  4928 000027A9 48B8-                   	mov rax, L_constants + 2
  4928 000027AB [0200000000000000] 
  4929                                  .L_if_end_0001:
  4930                                  .L_or_end_0001:
  4931 000027B3 C9                      	leave
  4932 000027B4 C21800                  	ret AND_KILL_FRAME(1)
  4933                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4934 000027B7 48890425[25140000]      	mov qword [free_var_96], rax
  4935 000027BF 48B8-                   	mov rax, sob_void
  4935 000027C1 [0000000000000000] 
  4936                                  
  4937 000027C9 4889C7                  	mov rdi, rax
  4938 000027CC E8A6290100              	call print_sexpr_if_not_void
  4939 000027D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4940 000027D6 E847270100              	call malloc
  4941 000027DB 50                      	push rax
  4942 000027DC BF00000000              	mov rdi, 8 * 0	; new rib
  4943 000027E1 E83C270100              	call malloc
  4944 000027E6 50                      	push rax
  4945 000027E7 BF08000000              	mov rdi, 8 * 1	; extended env
  4946 000027EC E831270100              	call malloc
  4947 000027F1 488B7D10                	mov rdi, ENV
  4948 000027F5 BE00000000              	mov rsi, 0
  4949 000027FA BA01000000              	mov rdx, 1
  4950                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  4951 000027FF 4883FE00                	cmp rsi, 0
  4952 00002803 7410                    	je .L_lambda_opt_env_end_0001
  4953 00002805 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4954 00002809 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4955 0000280D 48FFC6                  	inc rsi
  4956 00002810 48FFC2                  	inc rdx
  4957 00002813 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  4958                                  .L_lambda_opt_env_end_0001:
  4959 00002815 5B                      	pop rbx
  4960 00002816 BE00000000              	mov rsi, 0
  4961                                  .L_lambda_opt_params_loop_0001:	; copy params
  4962 0000281B 4883FE00                	cmp rsi, 0
  4963 0000281F 740E                    	je .L_lambda_opt_params_end_0001
  4964 00002821 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4965 00002826 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4966 0000282A 48FFC6                  	inc rsi
  4967 0000282D EBEC                    	jmp .L_lambda_opt_params_loop_0001
  4968                                  .L_lambda_opt_params_end_0001:
  4969 0000282F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4970 00002832 4889C3                  	mov rbx, rax
  4971 00002835 58                      	pop rax
  4972 00002836 C60004                  	mov byte [rax], T_closure
  4973 00002839 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4974 0000283D 48C74009[4A280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  4975 00002845 E903010000              	jmp .L_lambda_opt_end_0001
  4976                                  .L_lambda_opt_code_0001:
  4977 0000284A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  4978 0000284F 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  4979 00002853 7407                    	je .L_lambda_opt_arity_check_exact_0001	; Jump if arity matches
  4980 00002855 7F4C                    	jg .L_lambda_opt_arity_check_more_0001	; Jump if more arguments passed
  4981 00002857 E993260100              	jmp L_error_incorrect_arity_opt
  4982                                  .L_lambda_opt_arity_check_exact_0001:
  4983 0000285C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  4984 0000285F 4983C603                	add r14, 3 ; add 3 first stack values
  4985 00002863 41BF00000000            	mov r15, 0 ; r15 = index
  4986 00002869 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  4987 0000286D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  4988 00002875 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  4989                                  .L_lambda_opt_stack_shrink_loop_0001:
  4990 00002877 4983FE00                	cmp r14, 0
  4991 0000287B 7E11                    	jle .L_make_lambda_opt_exact_finish_0001
  4992 0000287D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  4993 00002882 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  4994 00002886 49FFCE                  	dec r14 ; next loop value
  4995 00002889 49FFC7                  	inc r15 ; update i
  4996 0000288C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  4997                                  .L_make_lambda_opt_exact_finish_0001:
  4998 0000288E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  4999 00002896 49FFC2                  	inc r10
  5000 00002899 4C89542410              	mov qword [rsp + 8 * 2], r10
  5001 0000289E E99E000000              	jmp .L_lambda_opt_stack_adjusted_0001
  5002                                  .L_lambda_opt_arity_check_more_0001:
  5003 000028A3 4D89D6                  	mov r14, r10 ; r14 = num args
  5004 000028A6 4D89D7                  	mov r15, r10 ; r15 = num args
  5005 000028A9 41B900000000            	mov r9, 0; r9 = number of params 
  5006 000028AF 4D29CE                  	sub r14, r9 ; r14 = extra args
  5007 000028B2 4D01F1                  	add r9, r14 ; r9 = num args
  5008 000028B5 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5008 000028B7 [0100000000000000] 
  5009 000028BF EB00                    	jmp .L_make_lambda_opt_arg_list_0001
  5010                                  .L_make_lambda_opt_arg_list_0001:
  5011 000028C1 4983FE00                	cmp r14, 0
  5012 000028C5 7E25                    	jle .L_make_lambda_opt_stack_fixed_0001
  5013 000028C7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5014 000028CC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5015 000028D1 E84C260100              	call malloc                         ; Allocate memory, result in rax
  5016 000028D6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5017 000028D9 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5018 000028DD 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5019 000028E1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5020 000028E4 49FFC9                  	dec r9                              ; args index minus 1
  5021 000028E7 49FFCE                  	dec r14                             ; next iteration
  5022 000028EA EBD5                    	jmp .L_make_lambda_opt_arg_list_0001
  5023                                  .L_make_lambda_opt_stack_fixed_0001:
  5024 000028EC 4D89FE                  	mov r14, r15 ; r14 = num args
  5025 000028EF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5026 000028F2 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5027 000028F6 41BA00000000            	mov r10, 0; r10 = num of params
  5028 000028FC 4D29D6                  	sub r14, r10 ; r14 = extra args
  5029 000028FF 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5030 00002902 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5031 00002905 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5032 0000290A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0001
  5033                                  .L_lambda_opt_stack_shrink_loop_more_0001:
  5034 0000290C 4983F800                	cmp r8, 0
  5035 00002910 7E15                    	jle .L_make_lambda_opt_more_finish_0001
  5036 00002912 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5037 00002916 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5038 0000291A 4D8D26                  	lea r12, [r14]
  5039 0000291D 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5040 00002922 49FFC8                  	dec r8 ; next iteration
  5041 00002925 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0001
  5042                                  .L_make_lambda_opt_more_finish_0001:
  5043 00002927 4D89F8                  	mov r8, r15 ; num of args
  5044 0000292A 41BA00000000            	mov r10, 0
  5045 00002930 4D29D0                  	sub r8, r10 ; num of new args
  5046 00002933 49FFC0                  	inc r8
  5047 00002936 4C89442420              	mov qword [rsp + 8 * 4], r8
  5048 0000293B 4883C410                	add rsp, 8 * 2  ; 
  5049 0000293F EB00                    	jmp .L_lambda_opt_stack_adjusted_0001
  5050                                  .L_lambda_opt_stack_adjusted_0001:
  5051 00002941 C8000000                	enter 0, 0
  5052 00002945 488B4520                	mov rax, PARAM(0)	; param args
  5053 00002949 C9                      	leave
  5054 0000294A C21800                  	ret AND_KILL_FRAME(1)
  5055                                  .L_lambda_opt_end_0001:	; new closure is in rax
  5056 0000294D 48890425[E1130000]      	mov qword [free_var_92], rax
  5057 00002955 48B8-                   	mov rax, sob_void
  5057 00002957 [0000000000000000] 
  5058                                  
  5059 0000295F 4889C7                  	mov rdi, rax
  5060 00002962 E810280100              	call print_sexpr_if_not_void
  5061 00002967 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5062 0000296C E8B1250100              	call malloc
  5063 00002971 50                      	push rax
  5064 00002972 BF00000000              	mov rdi, 8 * 0	; new rib
  5065 00002977 E8A6250100              	call malloc
  5066 0000297C 50                      	push rax
  5067 0000297D BF08000000              	mov rdi, 8 * 1	; extended env
  5068 00002982 E89B250100              	call malloc
  5069 00002987 488B7D10                	mov rdi, ENV
  5070 0000298B BE00000000              	mov rsi, 0
  5071 00002990 BA01000000              	mov rdx, 1
  5072                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  5073 00002995 4883FE00                	cmp rsi, 0
  5074 00002999 7410                    	je .L_lambda_simple_env_end_001e
  5075 0000299B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5076 0000299F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5077 000029A3 48FFC6                  	inc rsi
  5078 000029A6 48FFC2                  	inc rdx
  5079 000029A9 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  5080                                  .L_lambda_simple_env_end_001e:
  5081 000029AB 5B                      	pop rbx
  5082 000029AC BE00000000              	mov rsi, 0
  5083                                  .L_lambda_simple_params_loop_001e:	; copy params
  5084 000029B1 4883FE00                	cmp rsi, 0
  5085 000029B5 740E                    	je .L_lambda_simple_params_end_001e
  5086 000029B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5087 000029BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5088 000029C0 48FFC6                  	inc rsi
  5089 000029C3 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  5090                                  .L_lambda_simple_params_end_001e:
  5091 000029C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5092 000029C8 4889C3                  	mov rbx, rax
  5093 000029CB 58                      	pop rax
  5094 000029CC C60004                  	mov byte [rax], T_closure
  5095 000029CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5096 000029D3 48C74009[DD290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  5097 000029DB EB3D                    	jmp .L_lambda_simple_end_001e
  5098                                  .L_lambda_simple_code_001e:	; lambda-simple body
  5099 000029DD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5100 000029E3 740B                    	je .L_lambda_simple_arity_check_ok_001e
  5101 000029E5 FF742410                	push qword [rsp + 8 * 2]
  5102 000029E9 6A01                    	push 1
  5103 000029EB E9EB240100              	jmp L_error_incorrect_arity_simple
  5104                                  .L_lambda_simple_arity_check_ok_001e:
  5105 000029F0 C8000000                	enter 0, 0
  5106 000029F4 488B4520                	mov rax, PARAM(0)	; param x
  5107 000029F8 483D[02000000]          	cmp rax, sob_boolean_false
  5108 000029FE 740C                    	je .L_if_else_0002
  5109 00002A00 48B8-                   	mov rax, L_constants + 2
  5109 00002A02 [0200000000000000] 
  5110 00002A0A EB0A                    	jmp .L_if_end_0002
  5111                                  .L_if_else_0002:
  5112 00002A0C 48B8-                   	mov rax, L_constants + 3
  5112 00002A0E [0300000000000000] 
  5113                                  .L_if_end_0002:
  5114 00002A16 C9                      	leave
  5115 00002A17 C21800                  	ret AND_KILL_FRAME(1)
  5116                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5117 00002A1A 48890425[CF140000]      	mov qword [free_var_106], rax
  5118 00002A22 48B8-                   	mov rax, sob_void
  5118 00002A24 [0000000000000000] 
  5119                                  
  5120 00002A2C 4889C7                  	mov rdi, rax
  5121 00002A2F E843270100              	call print_sexpr_if_not_void
  5122 00002A34 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5123 00002A39 E8E4240100              	call malloc
  5124 00002A3E 50                      	push rax
  5125 00002A3F BF00000000              	mov rdi, 8 * 0	; new rib
  5126 00002A44 E8D9240100              	call malloc
  5127 00002A49 50                      	push rax
  5128 00002A4A BF08000000              	mov rdi, 8 * 1	; extended env
  5129 00002A4F E8CE240100              	call malloc
  5130 00002A54 488B7D10                	mov rdi, ENV
  5131 00002A58 BE00000000              	mov rsi, 0
  5132 00002A5D BA01000000              	mov rdx, 1
  5133                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5134 00002A62 4883FE00                	cmp rsi, 0
  5135 00002A66 7410                    	je .L_lambda_simple_env_end_001f
  5136 00002A68 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5137 00002A6C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5138 00002A70 48FFC6                  	inc rsi
  5139 00002A73 48FFC2                  	inc rdx
  5140 00002A76 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5141                                  .L_lambda_simple_env_end_001f:
  5142 00002A78 5B                      	pop rbx
  5143 00002A79 BE00000000              	mov rsi, 0
  5144                                  .L_lambda_simple_params_loop_001f:	; copy params
  5145 00002A7E 4883FE00                	cmp rsi, 0
  5146 00002A82 740E                    	je .L_lambda_simple_params_end_001f
  5147 00002A84 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5148 00002A89 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5149 00002A8D 48FFC6                  	inc rsi
  5150 00002A90 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5151                                  .L_lambda_simple_params_end_001f:
  5152 00002A92 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5153 00002A95 4889C3                  	mov rbx, rax
  5154 00002A98 58                      	pop rax
  5155 00002A99 C60004                  	mov byte [rax], T_closure
  5156 00002A9C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5157 00002AA0 48C74009[AD2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5158 00002AA8 E9A8000000              	jmp .L_lambda_simple_end_001f
  5159                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5160 00002AAD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5161 00002AB3 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5162 00002AB5 FF742410                	push qword [rsp + 8 * 2]
  5163 00002AB9 6A01                    	push 1
  5164 00002ABB E91B240100              	jmp L_error_incorrect_arity_simple
  5165                                  .L_lambda_simple_arity_check_ok_001f:
  5166 00002AC0 C8000000                	enter 0, 0
  5167                                  	; preparing a non-tail-call
  5168 00002AC4 488B4520                	mov rax, PARAM(0)	; param q
  5169 00002AC8 50                      	push rax
  5170 00002AC9 6A01                    	push 1	; arg count
  5171 00002ACB 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  5172 00002AD3 803805                  	cmp byte [rax], T_undefined
  5173 00002AD6 0F8419230100            	je L_error_fvar_undefined
  5174 00002ADC 803804                  	cmp byte [rax], T_closure
  5175 00002ADF 0F8594230100            	jne L_error_non_closure
  5176 00002AE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5177 00002AE8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5178 00002AEB 483D[02000000]          	cmp rax, sob_boolean_false
  5179 00002AF1 755E                    	jne .L_or_end_0002
  5180                                  
  5181                                  	; Initiating tail-call optimization
  5182 00002AF3 488B4520                	mov rax, PARAM(0)	; param q
  5183 00002AF7 50                      	push rax
  5184 00002AF8 6A01                    	push 1	; Number of arguments
  5185 00002AFA 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5186 00002B02 803805                  	cmp byte [rax], T_undefined
  5187 00002B05 0F84EA220100            	je L_error_fvar_undefined
  5188 00002B0B 803804                  	cmp byte [rax], T_closure
  5189 00002B0E 0F8565230100            	jne L_error_non_closure
  5190 00002B14 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5191                                  
  5192                                  	; Reclaiming the current stack frame
  5193 00002B17 FF7508                  	push qword [rbp + 8]
  5194 00002B1A FF7500                  	push qword [rbp]
  5195 00002B1D 41BA05000000            	mov r10, 1 + 4
  5196 00002B23 4C8B4518                	mov r8, COUNT
  5197 00002B27 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5198 00002B2C 4C8D4DF8                	lea r9, [rbp - 8]
  5199                                  .L_tc_recycle_frame_loop_001e:
  5200 00002B30 4983FA00                	cmp r10, 0
  5201 00002B34 7413                    	je .L_tc_recycle_frame_done_001e
  5202 00002B36 4D8B19                  	mov r11, qword [r9]
  5203 00002B39 4D8918                  	mov qword [r8], r11
  5204 00002B3C 49FFCA                  	dec r10
  5205 00002B3F 4983E808                	sub r8, 8
  5206 00002B43 4983E908                	sub r9, 8
  5207 00002B47 EBE7                    	jmp .L_tc_recycle_frame_loop_001e
  5208                                  .L_tc_recycle_frame_done_001e:
  5209 00002B49 498D6008                	lea rsp, [r8 + 8]
  5210 00002B4D 5D                      	pop rbp
  5211 00002B4E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5212                                  .L_or_end_0002:
  5213 00002B51 C9                      	leave
  5214 00002B52 C21800                  	ret AND_KILL_FRAME(1)
  5215                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5216 00002B55 48890425[57150000]      	mov qword [free_var_114], rax
  5217 00002B5D 48B8-                   	mov rax, sob_void
  5217 00002B5F [0000000000000000] 
  5218                                  
  5219 00002B67 4889C7                  	mov rdi, rax
  5220 00002B6A E808260100              	call print_sexpr_if_not_void
  5221                                  	; preparing a non-tail-call
  5222 00002B6F 48B8-                   	mov rax, L_constants + 2007
  5222 00002B71 [D707000000000000] 
  5223 00002B79 50                      	push rax
  5224 00002B7A 6A01                    	push 1	; arg count
  5225 00002B7C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5226 00002B81 E89C230100              	call malloc
  5227 00002B86 50                      	push rax
  5228 00002B87 BF00000000              	mov rdi, 8 * 0	; new rib
  5229 00002B8C E891230100              	call malloc
  5230 00002B91 50                      	push rax
  5231 00002B92 BF08000000              	mov rdi, 8 * 1	; extended env
  5232 00002B97 E886230100              	call malloc
  5233 00002B9C 488B7D10                	mov rdi, ENV
  5234 00002BA0 BE00000000              	mov rsi, 0
  5235 00002BA5 BA01000000              	mov rdx, 1
  5236                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5237 00002BAA 4883FE00                	cmp rsi, 0
  5238 00002BAE 7410                    	je .L_lambda_simple_env_end_0020
  5239 00002BB0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5240 00002BB4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5241 00002BB8 48FFC6                  	inc rsi
  5242 00002BBB 48FFC2                  	inc rdx
  5243 00002BBE EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5244                                  .L_lambda_simple_env_end_0020:
  5245 00002BC0 5B                      	pop rbx
  5246 00002BC1 BE00000000              	mov rsi, 0
  5247                                  .L_lambda_simple_params_loop_0020:	; copy params
  5248 00002BC6 4883FE00                	cmp rsi, 0
  5249 00002BCA 740E                    	je .L_lambda_simple_params_end_0020
  5250 00002BCC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5251 00002BD1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5252 00002BD5 48FFC6                  	inc rsi
  5253 00002BD8 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5254                                  .L_lambda_simple_params_end_0020:
  5255 00002BDA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5256 00002BDD 4889C3                  	mov rbx, rax
  5257 00002BE0 58                      	pop rax
  5258 00002BE1 C60004                  	mov byte [rax], T_closure
  5259 00002BE4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5260 00002BE8 48C74009[F52B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5261 00002BF0 E9BB030000              	jmp .L_lambda_simple_end_0020
  5262                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5263 00002BF5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5264 00002BFB 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5265 00002BFD FF742410                	push qword [rsp + 8 * 2]
  5266 00002C01 6A01                    	push 1
  5267 00002C03 E9D3220100              	jmp L_error_incorrect_arity_simple
  5268                                  .L_lambda_simple_arity_check_ok_0020:
  5269 00002C08 C8000000                	enter 0, 0
  5270 00002C0C BF08000000              	mov rdi, 8 * 1
  5271 00002C11 E80C230100              	call malloc
  5272 00002C16 488B5D20                	mov rbx, PARAM(0)
  5273 00002C1A 488918                  	mov qword [rax], rbx
  5274 00002C1D 48894520                	mov PARAM(0), rax
  5275 00002C21 48B8-                   	mov rax, sob_void
  5275 00002C23 [0000000000000000] 
  5276                                  
  5277 00002C2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5278 00002C30 E8ED220100              	call malloc
  5279 00002C35 50                      	push rax
  5280 00002C36 BF08000000              	mov rdi, 8 * 1	; new rib
  5281 00002C3B E8E2220100              	call malloc
  5282 00002C40 50                      	push rax
  5283 00002C41 BF10000000              	mov rdi, 8 * 2	; extended env
  5284 00002C46 E8D7220100              	call malloc
  5285 00002C4B 488B7D10                	mov rdi, ENV
  5286 00002C4F BE00000000              	mov rsi, 0
  5287 00002C54 BA01000000              	mov rdx, 1
  5288                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5289 00002C59 4883FE01                	cmp rsi, 1
  5290 00002C5D 7410                    	je .L_lambda_simple_env_end_0021
  5291 00002C5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5292 00002C63 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5293 00002C67 48FFC6                  	inc rsi
  5294 00002C6A 48FFC2                  	inc rdx
  5295 00002C6D EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5296                                  .L_lambda_simple_env_end_0021:
  5297 00002C6F 5B                      	pop rbx
  5298 00002C70 BE00000000              	mov rsi, 0
  5299                                  .L_lambda_simple_params_loop_0021:	; copy params
  5300 00002C75 4883FE01                	cmp rsi, 1
  5301 00002C79 740E                    	je .L_lambda_simple_params_end_0021
  5302 00002C7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5303 00002C80 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5304 00002C84 48FFC6                  	inc rsi
  5305 00002C87 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5306                                  .L_lambda_simple_params_end_0021:
  5307 00002C89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5308 00002C8C 4889C3                  	mov rbx, rax
  5309 00002C8F 58                      	pop rax
  5310 00002C90 C60004                  	mov byte [rax], T_closure
  5311 00002C93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5312 00002C97 48C74009[A42C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5313 00002C9F E920010000              	jmp .L_lambda_simple_end_0021
  5314                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5315 00002CA4 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5316 00002CAA 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5317 00002CAC FF742410                	push qword [rsp + 8 * 2]
  5318 00002CB0 6A02                    	push 2
  5319 00002CB2 E924220100              	jmp L_error_incorrect_arity_simple
  5320                                  .L_lambda_simple_arity_check_ok_0021:
  5321 00002CB7 C8000000                	enter 0, 0
  5322                                  	; preparing a non-tail-call
  5323 00002CBB 488B4528                	mov rax, PARAM(1)	; param s
  5324 00002CBF 50                      	push rax
  5325 00002CC0 6A01                    	push 1	; arg count
  5326 00002CC2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  5327 00002CCA 803805                  	cmp byte [rax], T_undefined
  5328 00002CCD 0F8422210100            	je L_error_fvar_undefined
  5329 00002CD3 803804                  	cmp byte [rax], T_closure
  5330 00002CD6 0F859D210100            	jne L_error_non_closure
  5331 00002CDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5332 00002CDF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5333 00002CE2 483D[02000000]          	cmp rax, sob_boolean_false
  5334 00002CE8 7409                    	je .L_if_else_0003
  5335 00002CEA 488B4520                	mov rax, PARAM(0)	; param a
  5336 00002CEE E9CD000000              	jmp .L_if_end_0003
  5337                                  .L_if_else_0003:
  5338                                  	; Initiating tail-call optimization
  5339                                  	; preparing a non-tail-call
  5340                                  	; preparing a non-tail-call
  5341 00002CF3 488B4528                	mov rax, PARAM(1)	; param s
  5342 00002CF7 50                      	push rax
  5343 00002CF8 6A01                    	push 1	; arg count
  5344 00002CFA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5345 00002D02 803805                  	cmp byte [rax], T_undefined
  5346 00002D05 0F84EA200100            	je L_error_fvar_undefined
  5347 00002D0B 803804                  	cmp byte [rax], T_closure
  5348 00002D0E 0F8565210100            	jne L_error_non_closure
  5349 00002D14 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5350 00002D17 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5351 00002D1A 50                      	push rax
  5352                                  	; preparing a non-tail-call
  5353 00002D1B 488B4528                	mov rax, PARAM(1)	; param s
  5354 00002D1F 50                      	push rax
  5355 00002D20 6A01                    	push 1	; arg count
  5356 00002D22 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5357 00002D2A 803805                  	cmp byte [rax], T_undefined
  5358 00002D2D 0F84C2200100            	je L_error_fvar_undefined
  5359 00002D33 803804                  	cmp byte [rax], T_closure
  5360 00002D36 0F853D210100            	jne L_error_non_closure
  5361 00002D3C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5362 00002D3F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5363 00002D42 50                      	push rax
  5364 00002D43 6A02                    	push 2	; arg count
  5365 00002D45 488B4510                	mov rax, ENV
  5366 00002D49 488B00                  	mov rax, qword [rax + 8 * 0]
  5367 00002D4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5368 00002D4F 488B00                  	mov rax, qword [rax]
  5369 00002D52 803804                  	cmp byte [rax], T_closure
  5370 00002D55 0F851E210100            	jne L_error_non_closure
  5371 00002D5B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5372 00002D5E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5373 00002D61 50                      	push rax
  5374 00002D62 488B4520                	mov rax, PARAM(0)	; param a
  5375 00002D66 50                      	push rax
  5376 00002D67 6A02                    	push 2	; Number of arguments
  5377 00002D69 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5378 00002D71 803805                  	cmp byte [rax], T_undefined
  5379 00002D74 0F847B200100            	je L_error_fvar_undefined
  5380 00002D7A 803804                  	cmp byte [rax], T_closure
  5381 00002D7D 0F85F6200100            	jne L_error_non_closure
  5382 00002D83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5383                                  
  5384                                  	; Reclaiming the current stack frame
  5385 00002D86 FF7508                  	push qword [rbp + 8]
  5386 00002D89 FF7500                  	push qword [rbp]
  5387 00002D8C 41BA06000000            	mov r10, 2 + 4
  5388 00002D92 4C8B4518                	mov r8, COUNT
  5389 00002D96 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5390 00002D9B 4C8D4DF8                	lea r9, [rbp - 8]
  5391                                  .L_tc_recycle_frame_loop_001f:
  5392 00002D9F 4983FA00                	cmp r10, 0
  5393 00002DA3 7413                    	je .L_tc_recycle_frame_done_001f
  5394 00002DA5 4D8B19                  	mov r11, qword [r9]
  5395 00002DA8 4D8918                  	mov qword [r8], r11
  5396 00002DAB 49FFCA                  	dec r10
  5397 00002DAE 4983E808                	sub r8, 8
  5398 00002DB2 4983E908                	sub r9, 8
  5399 00002DB6 EBE7                    	jmp .L_tc_recycle_frame_loop_001f
  5400                                  .L_tc_recycle_frame_done_001f:
  5401 00002DB8 498D6008                	lea rsp, [r8 + 8]
  5402 00002DBC 5D                      	pop rbp
  5403 00002DBD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5404                                  .L_if_end_0003:
  5405 00002DC0 C9                      	leave
  5406 00002DC1 C22000                  	ret AND_KILL_FRAME(2)
  5407                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5408 00002DC4 50                      	push rax
  5409 00002DC5 488B4520                	mov rax, PARAM(0)	; param run
  5410 00002DC9 8F00                    	pop qword [rax]
  5411 00002DCB 48B8-                   	mov rax, sob_void
  5411 00002DCD [0000000000000000] 
  5412                                  
  5413 00002DD5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5414 00002DDA E843210100              	call malloc
  5415 00002DDF 50                      	push rax
  5416 00002DE0 BF08000000              	mov rdi, 8 * 1	; new rib
  5417 00002DE5 E838210100              	call malloc
  5418 00002DEA 50                      	push rax
  5419 00002DEB BF10000000              	mov rdi, 8 * 2	; extended env
  5420 00002DF0 E82D210100              	call malloc
  5421 00002DF5 488B7D10                	mov rdi, ENV
  5422 00002DF9 BE00000000              	mov rsi, 0
  5423 00002DFE BA01000000              	mov rdx, 1
  5424                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  5425 00002E03 4883FE01                	cmp rsi, 1
  5426 00002E07 7410                    	je .L_lambda_opt_env_end_0002
  5427 00002E09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5428 00002E0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5429 00002E11 48FFC6                  	inc rsi
  5430 00002E14 48FFC2                  	inc rdx
  5431 00002E17 EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5432                                  .L_lambda_opt_env_end_0002:
  5433 00002E19 5B                      	pop rbx
  5434 00002E1A BE00000000              	mov rsi, 0
  5435                                  .L_lambda_opt_params_loop_0002:	; copy params
  5436 00002E1F 4883FE01                	cmp rsi, 1
  5437 00002E23 740E                    	je .L_lambda_opt_params_end_0002
  5438 00002E25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5439 00002E2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5440 00002E2E 48FFC6                  	inc rsi
  5441 00002E31 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5442                                  .L_lambda_opt_params_end_0002:
  5443 00002E33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5444 00002E36 4889C3                  	mov rbx, rax
  5445 00002E39 58                      	pop rax
  5446 00002E3A C60004                  	mov byte [rax], T_closure
  5447 00002E3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5448 00002E41 48C74009[4E2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5449 00002E49 E95E010000              	jmp .L_lambda_opt_end_0002
  5450                                  .L_lambda_opt_code_0002:
  5451 00002E4E 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5452 00002E53 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5453 00002E57 7407                    	je .L_lambda_opt_arity_check_exact_0002	; Jump if arity matches
  5454 00002E59 7F4C                    	jg .L_lambda_opt_arity_check_more_0002	; Jump if more arguments passed
  5455 00002E5B E98F200100              	jmp L_error_incorrect_arity_opt
  5456                                  .L_lambda_opt_arity_check_exact_0002:
  5457 00002E60 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5458 00002E63 4983C603                	add r14, 3 ; add 3 first stack values
  5459 00002E67 41BF00000000            	mov r15, 0 ; r15 = index
  5460 00002E6D 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5461 00002E71 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5462 00002E79 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5463                                  .L_lambda_opt_stack_shrink_loop_0002:
  5464 00002E7B 4983FE00                	cmp r14, 0
  5465 00002E7F 7E11                    	jle .L_make_lambda_opt_exact_finish_0002
  5466 00002E81 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5467 00002E86 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5468 00002E8A 49FFCE                  	dec r14 ; next loop value
  5469 00002E8D 49FFC7                  	inc r15 ; update i
  5470 00002E90 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5471                                  .L_make_lambda_opt_exact_finish_0002:
  5472 00002E92 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5473 00002E9A 49FFC2                  	inc r10
  5474 00002E9D 4C89542410              	mov qword [rsp + 8 * 2], r10
  5475 00002EA2 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0002
  5476                                  .L_lambda_opt_arity_check_more_0002:
  5477 00002EA7 4D89D6                  	mov r14, r10 ; r14 = num args
  5478 00002EAA 4D89D7                  	mov r15, r10 ; r15 = num args
  5479 00002EAD 41B901000000            	mov r9, 1; r9 = number of params 
  5480 00002EB3 4D29CE                  	sub r14, r9 ; r14 = extra args
  5481 00002EB6 4D01F1                  	add r9, r14 ; r9 = num args
  5482 00002EB9 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5482 00002EBB [0100000000000000] 
  5483 00002EC3 EB00                    	jmp .L_make_lambda_opt_arg_list_0002
  5484                                  .L_make_lambda_opt_arg_list_0002:
  5485 00002EC5 4983FE00                	cmp r14, 0
  5486 00002EC9 7E25                    	jle .L_make_lambda_opt_stack_fixed_0002
  5487 00002ECB 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5488 00002ED0 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5489 00002ED5 E848200100              	call malloc                         ; Allocate memory, result in rax
  5490 00002EDA C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5491 00002EDD 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5492 00002EE1 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5493 00002EE5 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5494 00002EE8 49FFC9                  	dec r9                              ; args index minus 1
  5495 00002EEB 49FFCE                  	dec r14                             ; next iteration
  5496 00002EEE EBD5                    	jmp .L_make_lambda_opt_arg_list_0002
  5497                                  .L_make_lambda_opt_stack_fixed_0002:
  5498 00002EF0 4D89FE                  	mov r14, r15 ; r14 = num args
  5499 00002EF3 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5500 00002EF6 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5501 00002EFA 41BA01000000            	mov r10, 1; r10 = num of params
  5502 00002F00 4D29D6                  	sub r14, r10 ; r14 = extra args
  5503 00002F03 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5504 00002F06 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5505 00002F09 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5506 00002F0E EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0002
  5507                                  .L_lambda_opt_stack_shrink_loop_more_0002:
  5508 00002F10 4983F800                	cmp r8, 0
  5509 00002F14 7E15                    	jle .L_make_lambda_opt_more_finish_0002
  5510 00002F16 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5511 00002F1A 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5512 00002F1E 4D8D26                  	lea r12, [r14]
  5513 00002F21 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5514 00002F26 49FFC8                  	dec r8 ; next iteration
  5515 00002F29 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0002
  5516                                  .L_make_lambda_opt_more_finish_0002:
  5517 00002F2B 4D89F8                  	mov r8, r15 ; num of args
  5518 00002F2E 41BA01000000            	mov r10, 1
  5519 00002F34 4D29D0                  	sub r8, r10 ; num of new args
  5520 00002F37 49FFC0                  	inc r8
  5521 00002F3A 4C89442420              	mov qword [rsp + 8 * 4], r8
  5522 00002F3F 4883C410                	add rsp, 8 * 2  ; 
  5523 00002F43 EB00                    	jmp .L_lambda_opt_stack_adjusted_0002
  5524                                  .L_lambda_opt_stack_adjusted_0002:
  5525 00002F45 C8000000                	enter 0, 0
  5526                                  	; Initiating tail-call optimization
  5527 00002F49 488B4528                	mov rax, PARAM(1)	; param s
  5528 00002F4D 50                      	push rax
  5529 00002F4E 488B4520                	mov rax, PARAM(0)	; param a
  5530 00002F52 50                      	push rax
  5531 00002F53 6A02                    	push 2	; Number of arguments
  5532 00002F55 488B4510                	mov rax, ENV
  5533 00002F59 488B00                  	mov rax, qword [rax + 8 * 0]
  5534 00002F5C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5535 00002F5F 488B00                  	mov rax, qword [rax]
  5536 00002F62 803804                  	cmp byte [rax], T_closure
  5537 00002F65 0F850E1F0100            	jne L_error_non_closure
  5538 00002F6B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5539                                  
  5540                                  	; Reclaiming the current stack frame
  5541 00002F6E FF7508                  	push qword [rbp + 8]
  5542 00002F71 FF7500                  	push qword [rbp]
  5543 00002F74 41BA06000000            	mov r10, 2 + 4
  5544 00002F7A 4C8B4518                	mov r8, COUNT
  5545 00002F7E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5546 00002F83 4C8D4DF8                	lea r9, [rbp - 8]
  5547                                  .L_tc_recycle_frame_loop_0020:
  5548 00002F87 4983FA00                	cmp r10, 0
  5549 00002F8B 7413                    	je .L_tc_recycle_frame_done_0020
  5550 00002F8D 4D8B19                  	mov r11, qword [r9]
  5551 00002F90 4D8918                  	mov qword [r8], r11
  5552 00002F93 49FFCA                  	dec r10
  5553 00002F96 4983E808                	sub r8, 8
  5554 00002F9A 4983E908                	sub r9, 8
  5555 00002F9E EBE7                    	jmp .L_tc_recycle_frame_loop_0020
  5556                                  .L_tc_recycle_frame_done_0020:
  5557 00002FA0 498D6008                	lea rsp, [r8 + 8]
  5558 00002FA4 5D                      	pop rbp
  5559 00002FA5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5560 00002FA8 C9                      	leave
  5561 00002FA9 C22000                  	ret AND_KILL_FRAME(2)
  5562                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5563 00002FAC C9                      	leave
  5564 00002FAD C21800                  	ret AND_KILL_FRAME(1)
  5565                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5566 00002FB0 803804                  	cmp byte [rax], T_closure
  5567 00002FB3 0F85C01E0100            	jne L_error_non_closure
  5568 00002FB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5569 00002FBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  5570 00002FBF 48890425[F2130000]      	mov qword [free_var_93], rax
  5571 00002FC7 48B8-                   	mov rax, sob_void
  5571 00002FC9 [0000000000000000] 
  5572                                  
  5573 00002FD1 4889C7                  	mov rdi, rax
  5574 00002FD4 E89E210100              	call print_sexpr_if_not_void
  5575                                  	; preparing a non-tail-call
  5576 00002FD9 48B8-                   	mov rax, L_constants + 2007
  5576 00002FDB [D707000000000000] 
  5577 00002FE3 50                      	push rax
  5578 00002FE4 6A01                    	push 1	; arg count
  5579 00002FE6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5580 00002FEB E8321F0100              	call malloc
  5581 00002FF0 50                      	push rax
  5582 00002FF1 BF00000000              	mov rdi, 8 * 0	; new rib
  5583 00002FF6 E8271F0100              	call malloc
  5584 00002FFB 50                      	push rax
  5585 00002FFC BF08000000              	mov rdi, 8 * 1	; extended env
  5586 00003001 E81C1F0100              	call malloc
  5587 00003006 488B7D10                	mov rdi, ENV
  5588 0000300A BE00000000              	mov rsi, 0
  5589 0000300F BA01000000              	mov rdx, 1
  5590                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5591 00003014 4883FE00                	cmp rsi, 0
  5592 00003018 7410                    	je .L_lambda_simple_env_end_0022
  5593 0000301A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5594 0000301E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5595 00003022 48FFC6                  	inc rsi
  5596 00003025 48FFC2                  	inc rdx
  5597 00003028 EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5598                                  .L_lambda_simple_env_end_0022:
  5599 0000302A 5B                      	pop rbx
  5600 0000302B BE00000000              	mov rsi, 0
  5601                                  .L_lambda_simple_params_loop_0022:	; copy params
  5602 00003030 4883FE00                	cmp rsi, 0
  5603 00003034 740E                    	je .L_lambda_simple_params_end_0022
  5604 00003036 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5605 0000303B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5606 0000303F 48FFC6                  	inc rsi
  5607 00003042 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5608                                  .L_lambda_simple_params_end_0022:
  5609 00003044 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5610 00003047 4889C3                  	mov rbx, rax
  5611 0000304A 58                      	pop rax
  5612 0000304B C60004                  	mov byte [rax], T_closure
  5613 0000304E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5614 00003052 48C74009[5F300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5615 0000305A E92A040000              	jmp .L_lambda_simple_end_0022
  5616                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5617 0000305F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5618 00003065 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5619 00003067 FF742410                	push qword [rsp + 8 * 2]
  5620 0000306B 6A01                    	push 1
  5621 0000306D E9691E0100              	jmp L_error_incorrect_arity_simple
  5622                                  .L_lambda_simple_arity_check_ok_0022:
  5623 00003072 C8000000                	enter 0, 0
  5624 00003076 BF08000000              	mov rdi, 8 * 1
  5625 0000307B E8A21E0100              	call malloc
  5626 00003080 488B5D20                	mov rbx, PARAM(0)
  5627 00003084 488918                  	mov qword [rax], rbx
  5628 00003087 48894520                	mov PARAM(0), rax
  5629 0000308B 48B8-                   	mov rax, sob_void
  5629 0000308D [0000000000000000] 
  5630                                  
  5631 00003095 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5632 0000309A E8831E0100              	call malloc
  5633 0000309F 50                      	push rax
  5634 000030A0 BF08000000              	mov rdi, 8 * 1	; new rib
  5635 000030A5 E8781E0100              	call malloc
  5636 000030AA 50                      	push rax
  5637 000030AB BF10000000              	mov rdi, 8 * 2	; extended env
  5638 000030B0 E86D1E0100              	call malloc
  5639 000030B5 488B7D10                	mov rdi, ENV
  5640 000030B9 BE00000000              	mov rsi, 0
  5641 000030BE BA01000000              	mov rdx, 1
  5642                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5643 000030C3 4883FE01                	cmp rsi, 1
  5644 000030C7 7410                    	je .L_lambda_simple_env_end_0023
  5645 000030C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5646 000030CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5647 000030D1 48FFC6                  	inc rsi
  5648 000030D4 48FFC2                  	inc rdx
  5649 000030D7 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5650                                  .L_lambda_simple_env_end_0023:
  5651 000030D9 5B                      	pop rbx
  5652 000030DA BE00000000              	mov rsi, 0
  5653                                  .L_lambda_simple_params_loop_0023:	; copy params
  5654 000030DF 4883FE01                	cmp rsi, 1
  5655 000030E3 740E                    	je .L_lambda_simple_params_end_0023
  5656 000030E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5657 000030EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5658 000030EE 48FFC6                  	inc rsi
  5659 000030F1 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5660                                  .L_lambda_simple_params_end_0023:
  5661 000030F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5662 000030F6 4889C3                  	mov rbx, rax
  5663 000030F9 58                      	pop rax
  5664 000030FA C60004                  	mov byte [rax], T_closure
  5665 000030FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5666 00003101 48C74009[0E310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5667 00003109 E921010000              	jmp .L_lambda_simple_end_0023
  5668                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5669 0000310E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5670 00003114 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5671 00003116 FF742410                	push qword [rsp + 8 * 2]
  5672 0000311A 6A02                    	push 2
  5673 0000311C E9BA1D0100              	jmp L_error_incorrect_arity_simple
  5674                                  .L_lambda_simple_arity_check_ok_0023:
  5675 00003121 C8000000                	enter 0, 0
  5676                                  	; preparing a non-tail-call
  5677 00003125 488B4528                	mov rax, PARAM(1)	; param s
  5678 00003129 50                      	push rax
  5679 0000312A 6A01                    	push 1	; arg count
  5680 0000312C 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5681 00003134 803805                  	cmp byte [rax], T_undefined
  5682 00003137 0F84B81C0100            	je L_error_fvar_undefined
  5683 0000313D 803804                  	cmp byte [rax], T_closure
  5684 00003140 0F85331D0100            	jne L_error_non_closure
  5685 00003146 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5686 00003149 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5687 0000314C 483D[02000000]          	cmp rax, sob_boolean_false
  5688 00003152 0F84CF000000            	je .L_if_else_0004
  5689                                  	; Initiating tail-call optimization
  5690                                  	; preparing a non-tail-call
  5691                                  	; preparing a non-tail-call
  5692 00003158 488B4528                	mov rax, PARAM(1)	; param s
  5693 0000315C 50                      	push rax
  5694 0000315D 6A01                    	push 1	; arg count
  5695 0000315F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5696 00003167 803805                  	cmp byte [rax], T_undefined
  5697 0000316A 0F84851C0100            	je L_error_fvar_undefined
  5698 00003170 803804                  	cmp byte [rax], T_closure
  5699 00003173 0F85001D0100            	jne L_error_non_closure
  5700 00003179 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5701 0000317C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5702 0000317F 50                      	push rax
  5703                                  	; preparing a non-tail-call
  5704 00003180 488B4528                	mov rax, PARAM(1)	; param s
  5705 00003184 50                      	push rax
  5706 00003185 6A01                    	push 1	; arg count
  5707 00003187 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5708 0000318F 803805                  	cmp byte [rax], T_undefined
  5709 00003192 0F845D1C0100            	je L_error_fvar_undefined
  5710 00003198 803804                  	cmp byte [rax], T_closure
  5711 0000319B 0F85D81C0100            	jne L_error_non_closure
  5712 000031A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5713 000031A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5714 000031A7 50                      	push rax
  5715 000031A8 6A02                    	push 2	; arg count
  5716 000031AA 488B4510                	mov rax, ENV
  5717 000031AE 488B00                  	mov rax, qword [rax + 8 * 0]
  5718 000031B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5719 000031B4 488B00                  	mov rax, qword [rax]
  5720 000031B7 803804                  	cmp byte [rax], T_closure
  5721 000031BA 0F85B91C0100            	jne L_error_non_closure
  5722 000031C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5723 000031C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5724 000031C6 50                      	push rax
  5725 000031C7 488B4520                	mov rax, PARAM(0)	; param a
  5726 000031CB 50                      	push rax
  5727 000031CC 6A02                    	push 2	; Number of arguments
  5728 000031CE 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5729 000031D6 803805                  	cmp byte [rax], T_undefined
  5730 000031D9 0F84161C0100            	je L_error_fvar_undefined
  5731 000031DF 803804                  	cmp byte [rax], T_closure
  5732 000031E2 0F85911C0100            	jne L_error_non_closure
  5733 000031E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5734                                  
  5735                                  	; Reclaiming the current stack frame
  5736 000031EB FF7508                  	push qword [rbp + 8]
  5737 000031EE FF7500                  	push qword [rbp]
  5738 000031F1 41BA06000000            	mov r10, 2 + 4
  5739 000031F7 4C8B4518                	mov r8, COUNT
  5740 000031FB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5741 00003200 4C8D4DF8                	lea r9, [rbp - 8]
  5742                                  .L_tc_recycle_frame_loop_0021:
  5743 00003204 4983FA00                	cmp r10, 0
  5744 00003208 7413                    	je .L_tc_recycle_frame_done_0021
  5745 0000320A 4D8B19                  	mov r11, qword [r9]
  5746 0000320D 4D8918                  	mov qword [r8], r11
  5747 00003210 49FFCA                  	dec r10
  5748 00003213 4983E808                	sub r8, 8
  5749 00003217 4983E908                	sub r9, 8
  5750 0000321B EBE7                    	jmp .L_tc_recycle_frame_loop_0021
  5751                                  .L_tc_recycle_frame_done_0021:
  5752 0000321D 498D6008                	lea rsp, [r8 + 8]
  5753 00003221 5D                      	pop rbp
  5754 00003222 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5755 00003225 EB04                    	jmp .L_if_end_0004
  5756                                  .L_if_else_0004:
  5757 00003227 488B4520                	mov rax, PARAM(0)	; param a
  5758                                  .L_if_end_0004:
  5759 0000322B C9                      	leave
  5760 0000322C C22000                  	ret AND_KILL_FRAME(2)
  5761                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5762 0000322F 50                      	push rax
  5763 00003230 488B4520                	mov rax, PARAM(0)	; param run
  5764 00003234 8F00                    	pop qword [rax]
  5765 00003236 48B8-                   	mov rax, sob_void
  5765 00003238 [0000000000000000] 
  5766                                  
  5767 00003240 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5768 00003245 E8D81C0100              	call malloc
  5769 0000324A 50                      	push rax
  5770 0000324B BF08000000              	mov rdi, 8 * 1	; new rib
  5771 00003250 E8CD1C0100              	call malloc
  5772 00003255 50                      	push rax
  5773 00003256 BF10000000              	mov rdi, 8 * 2	; extended env
  5774 0000325B E8C21C0100              	call malloc
  5775 00003260 488B7D10                	mov rdi, ENV
  5776 00003264 BE00000000              	mov rsi, 0
  5777 00003269 BA01000000              	mov rdx, 1
  5778                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5779 0000326E 4883FE01                	cmp rsi, 1
  5780 00003272 7410                    	je .L_lambda_opt_env_end_0003
  5781 00003274 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5782 00003278 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5783 0000327C 48FFC6                  	inc rsi
  5784 0000327F 48FFC2                  	inc rdx
  5785 00003282 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5786                                  .L_lambda_opt_env_end_0003:
  5787 00003284 5B                      	pop rbx
  5788 00003285 BE00000000              	mov rsi, 0
  5789                                  .L_lambda_opt_params_loop_0003:	; copy params
  5790 0000328A 4883FE01                	cmp rsi, 1
  5791 0000328E 740E                    	je .L_lambda_opt_params_end_0003
  5792 00003290 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5793 00003295 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5794 00003299 48FFC6                  	inc rsi
  5795 0000329C EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5796                                  .L_lambda_opt_params_end_0003:
  5797 0000329E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5798 000032A1 4889C3                  	mov rbx, rax
  5799 000032A4 58                      	pop rax
  5800 000032A5 C60004                  	mov byte [rax], T_closure
  5801 000032A8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5802 000032AC 48C74009[B9320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5803 000032B4 E9CC010000              	jmp .L_lambda_opt_end_0003
  5804                                  .L_lambda_opt_code_0003:
  5805 000032B9 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5806 000032BE 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5807 000032C2 7407                    	je .L_lambda_opt_arity_check_exact_0003	; Jump if arity matches
  5808 000032C4 7F4C                    	jg .L_lambda_opt_arity_check_more_0003	; Jump if more arguments passed
  5809 000032C6 E9241C0100              	jmp L_error_incorrect_arity_opt
  5810                                  .L_lambda_opt_arity_check_exact_0003:
  5811 000032CB 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5812 000032CE 4983C603                	add r14, 3 ; add 3 first stack values
  5813 000032D2 41BF00000000            	mov r15, 0 ; r15 = index
  5814 000032D8 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5815 000032DC 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5816 000032E4 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5817                                  .L_lambda_opt_stack_shrink_loop_0003:
  5818 000032E6 4983FE00                	cmp r14, 0
  5819 000032EA 7E11                    	jle .L_make_lambda_opt_exact_finish_0003
  5820 000032EC 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5821 000032F1 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5822 000032F5 49FFCE                  	dec r14 ; next loop value
  5823 000032F8 49FFC7                  	inc r15 ; update i
  5824 000032FB EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5825                                  .L_make_lambda_opt_exact_finish_0003:
  5826 000032FD 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5827 00003305 49FFC2                  	inc r10
  5828 00003308 4C89542410              	mov qword [rsp + 8 * 2], r10
  5829 0000330D E99E000000              	jmp .L_lambda_opt_stack_adjusted_0003
  5830                                  .L_lambda_opt_arity_check_more_0003:
  5831 00003312 4D89D6                  	mov r14, r10 ; r14 = num args
  5832 00003315 4D89D7                  	mov r15, r10 ; r15 = num args
  5833 00003318 41B901000000            	mov r9, 1; r9 = number of params 
  5834 0000331E 4D29CE                  	sub r14, r9 ; r14 = extra args
  5835 00003321 4D01F1                  	add r9, r14 ; r9 = num args
  5836 00003324 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5836 00003326 [0100000000000000] 
  5837 0000332E EB00                    	jmp .L_make_lambda_opt_arg_list_0003
  5838                                  .L_make_lambda_opt_arg_list_0003:
  5839 00003330 4983FE00                	cmp r14, 0
  5840 00003334 7E25                    	jle .L_make_lambda_opt_stack_fixed_0003
  5841 00003336 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5842 0000333B BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5843 00003340 E8DD1B0100              	call malloc                         ; Allocate memory, result in rax
  5844 00003345 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5845 00003348 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5846 0000334C 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5847 00003350 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5848 00003353 49FFC9                  	dec r9                              ; args index minus 1
  5849 00003356 49FFCE                  	dec r14                             ; next iteration
  5850 00003359 EBD5                    	jmp .L_make_lambda_opt_arg_list_0003
  5851                                  .L_make_lambda_opt_stack_fixed_0003:
  5852 0000335B 4D89FE                  	mov r14, r15 ; r14 = num args
  5853 0000335E 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5854 00003361 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5855 00003365 41BA01000000            	mov r10, 1; r10 = num of params
  5856 0000336B 4D29D6                  	sub r14, r10 ; r14 = extra args
  5857 0000336E 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5858 00003371 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5859 00003374 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  5860 00003379 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0003
  5861                                  .L_lambda_opt_stack_shrink_loop_more_0003:
  5862 0000337B 4983F800                	cmp r8, 0
  5863 0000337F 7E15                    	jle .L_make_lambda_opt_more_finish_0003
  5864 00003381 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  5865 00003385 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5866 00003389 4D8D26                  	lea r12, [r14]
  5867 0000338C 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  5868 00003391 49FFC8                  	dec r8 ; next iteration
  5869 00003394 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0003
  5870                                  .L_make_lambda_opt_more_finish_0003:
  5871 00003396 4D89F8                  	mov r8, r15 ; num of args
  5872 00003399 41BA01000000            	mov r10, 1
  5873 0000339F 4D29D0                  	sub r8, r10 ; num of new args
  5874 000033A2 49FFC0                  	inc r8
  5875 000033A5 4C89442420              	mov qword [rsp + 8 * 4], r8
  5876 000033AA 4883C410                	add rsp, 8 * 2  ; 
  5877 000033AE EB00                    	jmp .L_lambda_opt_stack_adjusted_0003
  5878                                  .L_lambda_opt_stack_adjusted_0003:
  5879 000033B0 C8000000                	enter 0, 0
  5880                                  	; Initiating tail-call optimization
  5881                                  	; preparing a non-tail-call
  5882                                  	; preparing a non-tail-call
  5883 000033B4 488B4528                	mov rax, PARAM(1)	; param s
  5884 000033B8 50                      	push rax
  5885 000033B9 6A01                    	push 1	; arg count
  5886 000033BB 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5887 000033C3 803805                  	cmp byte [rax], T_undefined
  5888 000033C6 0F84291A0100            	je L_error_fvar_undefined
  5889 000033CC 803804                  	cmp byte [rax], T_closure
  5890 000033CF 0F85A41A0100            	jne L_error_non_closure
  5891 000033D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5892 000033D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5893 000033DB 50                      	push rax
  5894                                  	; preparing a non-tail-call
  5895 000033DC 488B4528                	mov rax, PARAM(1)	; param s
  5896 000033E0 50                      	push rax
  5897 000033E1 6A01                    	push 1	; arg count
  5898 000033E3 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5899 000033EB 803805                  	cmp byte [rax], T_undefined
  5900 000033EE 0F84011A0100            	je L_error_fvar_undefined
  5901 000033F4 803804                  	cmp byte [rax], T_closure
  5902 000033F7 0F857C1A0100            	jne L_error_non_closure
  5903 000033FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5904 00003400 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5905 00003403 50                      	push rax
  5906 00003404 6A02                    	push 2	; arg count
  5907 00003406 488B4510                	mov rax, ENV
  5908 0000340A 488B00                  	mov rax, qword [rax + 8 * 0]
  5909 0000340D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5910 00003410 488B00                  	mov rax, qword [rax]
  5911 00003413 803804                  	cmp byte [rax], T_closure
  5912 00003416 0F855D1A0100            	jne L_error_non_closure
  5913 0000341C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5914 0000341F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5915 00003422 50                      	push rax
  5916 00003423 488B4520                	mov rax, PARAM(0)	; param f
  5917 00003427 50                      	push rax
  5918 00003428 6A02                    	push 2	; Number of arguments
  5919 0000342A 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5920 00003432 803805                  	cmp byte [rax], T_undefined
  5921 00003435 0F84BA190100            	je L_error_fvar_undefined
  5922 0000343B 803804                  	cmp byte [rax], T_closure
  5923 0000343E 0F85351A0100            	jne L_error_non_closure
  5924 00003444 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5925                                  
  5926                                  	; Reclaiming the current stack frame
  5927 00003447 FF7508                  	push qword [rbp + 8]
  5928 0000344A FF7500                  	push qword [rbp]
  5929 0000344D 41BA06000000            	mov r10, 2 + 4
  5930 00003453 4C8B4518                	mov r8, COUNT
  5931 00003457 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5932 0000345C 4C8D4DF8                	lea r9, [rbp - 8]
  5933                                  .L_tc_recycle_frame_loop_0022:
  5934 00003460 4983FA00                	cmp r10, 0
  5935 00003464 7413                    	je .L_tc_recycle_frame_done_0022
  5936 00003466 4D8B19                  	mov r11, qword [r9]
  5937 00003469 4D8918                  	mov qword [r8], r11
  5938 0000346C 49FFCA                  	dec r10
  5939 0000346F 4983E808                	sub r8, 8
  5940 00003473 4983E908                	sub r9, 8
  5941 00003477 EBE7                    	jmp .L_tc_recycle_frame_loop_0022
  5942                                  .L_tc_recycle_frame_done_0022:
  5943 00003479 498D6008                	lea rsp, [r8 + 8]
  5944 0000347D 5D                      	pop rbp
  5945 0000347E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5946 00003481 C9                      	leave
  5947 00003482 C22000                  	ret AND_KILL_FRAME(2)
  5948                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5949 00003485 C9                      	leave
  5950 00003486 C21800                  	ret AND_KILL_FRAME(1)
  5951                                  .L_lambda_simple_end_0022:	; new closure is in rax
  5952 00003489 803804                  	cmp byte [rax], T_closure
  5953 0000348C 0F85E7190100            	jne L_error_non_closure
  5954 00003492 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5955 00003495 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5956 00003498 48890425[F60F0000]      	mov qword [free_var_33], rax
  5957 000034A0 48B8-                   	mov rax, sob_void
  5957 000034A2 [0000000000000000] 
  5958                                  
  5959 000034AA 4889C7                  	mov rdi, rax
  5960 000034AD E8C51C0100              	call print_sexpr_if_not_void
  5961 000034B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5962 000034B7 E8661A0100              	call malloc
  5963 000034BC 50                      	push rax
  5964 000034BD BF00000000              	mov rdi, 8 * 0	; new rib
  5965 000034C2 E85B1A0100              	call malloc
  5966 000034C7 50                      	push rax
  5967 000034C8 BF08000000              	mov rdi, 8 * 1	; extended env
  5968 000034CD E8501A0100              	call malloc
  5969 000034D2 488B7D10                	mov rdi, ENV
  5970 000034D6 BE00000000              	mov rsi, 0
  5971 000034DB BA01000000              	mov rdx, 1
  5972                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  5973 000034E0 4883FE00                	cmp rsi, 0
  5974 000034E4 7410                    	je .L_lambda_opt_env_end_0004
  5975 000034E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5976 000034EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5977 000034EE 48FFC6                  	inc rsi
  5978 000034F1 48FFC2                  	inc rdx
  5979 000034F4 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  5980                                  .L_lambda_opt_env_end_0004:
  5981 000034F6 5B                      	pop rbx
  5982 000034F7 BE00000000              	mov rsi, 0
  5983                                  .L_lambda_opt_params_loop_0004:	; copy params
  5984 000034FC 4883FE00                	cmp rsi, 0
  5985 00003500 740E                    	je .L_lambda_opt_params_end_0004
  5986 00003502 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5987 00003507 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5988 0000350B 48FFC6                  	inc rsi
  5989 0000350E EBEC                    	jmp .L_lambda_opt_params_loop_0004
  5990                                  .L_lambda_opt_params_end_0004:
  5991 00003510 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5992 00003513 4889C3                  	mov rbx, rax
  5993 00003516 58                      	pop rax
  5994 00003517 C60004                  	mov byte [rax], T_closure
  5995 0000351A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5996 0000351E 48C74009[2B350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  5997 00003526 E975040000              	jmp .L_lambda_opt_end_0004
  5998                                  .L_lambda_opt_code_0004:
  5999 0000352B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  6000 00003530 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  6001 00003534 7407                    	je .L_lambda_opt_arity_check_exact_0004	; Jump if arity matches
  6002 00003536 7F4C                    	jg .L_lambda_opt_arity_check_more_0004	; Jump if more arguments passed
  6003 00003538 E9B2190100              	jmp L_error_incorrect_arity_opt
  6004                                  .L_lambda_opt_arity_check_exact_0004:
  6005 0000353D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  6006 00003540 4983C603                	add r14, 3 ; add 3 first stack values
  6007 00003544 41BF00000000            	mov r15, 0 ; r15 = index
  6008 0000354A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  6009 0000354E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  6010 00003556 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6011                                  .L_lambda_opt_stack_shrink_loop_0004:
  6012 00003558 4983FE00                	cmp r14, 0
  6013 0000355C 7E11                    	jle .L_make_lambda_opt_exact_finish_0004
  6014 0000355E 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  6015 00003563 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  6016 00003567 49FFCE                  	dec r14 ; next loop value
  6017 0000356A 49FFC7                  	inc r15 ; update i
  6018 0000356D EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6019                                  .L_make_lambda_opt_exact_finish_0004:
  6020 0000356F 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  6021 00003577 49FFC2                  	inc r10
  6022 0000357A 4C89542410              	mov qword [rsp + 8 * 2], r10
  6023 0000357F E99E000000              	jmp .L_lambda_opt_stack_adjusted_0004
  6024                                  .L_lambda_opt_arity_check_more_0004:
  6025 00003584 4D89D6                  	mov r14, r10 ; r14 = num args
  6026 00003587 4D89D7                  	mov r15, r10 ; r15 = num args
  6027 0000358A 41B901000000            	mov r9, 1; r9 = number of params 
  6028 00003590 4D29CE                  	sub r14, r9 ; r14 = extra args
  6029 00003593 4D01F1                  	add r9, r14 ; r9 = num args
  6030 00003596 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  6030 00003598 [0100000000000000] 
  6031 000035A0 EB00                    	jmp .L_make_lambda_opt_arg_list_0004
  6032                                  .L_make_lambda_opt_arg_list_0004:
  6033 000035A2 4983FE00                	cmp r14, 0
  6034 000035A6 7E25                    	jle .L_make_lambda_opt_stack_fixed_0004
  6035 000035A8 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  6036 000035AD BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  6037 000035B2 E86B190100              	call malloc                         ; Allocate memory, result in rax
  6038 000035B7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  6039 000035BA 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  6040 000035BE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  6041 000035C2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  6042 000035C5 49FFC9                  	dec r9                              ; args index minus 1
  6043 000035C8 49FFCE                  	dec r14                             ; next iteration
  6044 000035CB EBD5                    	jmp .L_make_lambda_opt_arg_list_0004
  6045                                  .L_make_lambda_opt_stack_fixed_0004:
  6046 000035CD 4D89FE                  	mov r14, r15 ; r14 = num args
  6047 000035D0 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  6048 000035D3 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  6049 000035D7 41BA01000000            	mov r10, 1; r10 = num of params
  6050 000035DD 4D29D6                  	sub r14, r10 ; r14 = extra args
  6051 000035E0 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6052 000035E3 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6053 000035E6 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  6054 000035EB EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0004
  6055                                  .L_lambda_opt_stack_shrink_loop_more_0004:
  6056 000035ED 4983F800                	cmp r8, 0
  6057 000035F1 7E15                    	jle .L_make_lambda_opt_more_finish_0004
  6058 000035F3 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  6059 000035F7 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6060 000035FB 4D8D26                  	lea r12, [r14]
  6061 000035FE 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  6062 00003603 49FFC8                  	dec r8 ; next iteration
  6063 00003606 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0004
  6064                                  .L_make_lambda_opt_more_finish_0004:
  6065 00003608 4D89F8                  	mov r8, r15 ; num of args
  6066 0000360B 41BA01000000            	mov r10, 1
  6067 00003611 4D29D0                  	sub r8, r10 ; num of new args
  6068 00003614 49FFC0                  	inc r8
  6069 00003617 4C89442420              	mov qword [rsp + 8 * 4], r8
  6070 0000361C 4883C410                	add rsp, 8 * 2  ; 
  6071 00003620 EB00                    	jmp .L_lambda_opt_stack_adjusted_0004
  6072                                  .L_lambda_opt_stack_adjusted_0004:
  6073 00003622 C8000000                	enter 0, 0
  6074                                  	; Initiating tail-call optimization
  6075 00003626 48B8-                   	mov rax, L_constants + 2007
  6075 00003628 [D707000000000000] 
  6076 00003630 50                      	push rax
  6077 00003631 6A01                    	push 1	; Number of arguments
  6078 00003633 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6079 00003638 E8E5180100              	call malloc
  6080 0000363D 50                      	push rax
  6081 0000363E BF10000000              	mov rdi, 8 * 2	; new rib
  6082 00003643 E8DA180100              	call malloc
  6083 00003648 50                      	push rax
  6084 00003649 BF10000000              	mov rdi, 8 * 2	; extended env
  6085 0000364E E8CF180100              	call malloc
  6086 00003653 488B7D10                	mov rdi, ENV
  6087 00003657 BE00000000              	mov rsi, 0
  6088 0000365C BA01000000              	mov rdx, 1
  6089                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6090 00003661 4883FE01                	cmp rsi, 1
  6091 00003665 7410                    	je .L_lambda_simple_env_end_0024
  6092 00003667 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6093 0000366B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6094 0000366F 48FFC6                  	inc rsi
  6095 00003672 48FFC2                  	inc rdx
  6096 00003675 EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6097                                  .L_lambda_simple_env_end_0024:
  6098 00003677 5B                      	pop rbx
  6099 00003678 BE00000000              	mov rsi, 0
  6100                                  .L_lambda_simple_params_loop_0024:	; copy params
  6101 0000367D 4883FE02                	cmp rsi, 2
  6102 00003681 740E                    	je .L_lambda_simple_params_end_0024
  6103 00003683 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6104 00003688 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6105 0000368C 48FFC6                  	inc rsi
  6106 0000368F EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6107                                  .L_lambda_simple_params_end_0024:
  6108 00003691 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6109 00003694 4889C3                  	mov rbx, rax
  6110 00003697 58                      	pop rax
  6111 00003698 C60004                  	mov byte [rax], T_closure
  6112 0000369B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6113 0000369F 48C74009[AC360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6114 000036A7 E9AA020000              	jmp .L_lambda_simple_end_0024
  6115                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6116 000036AC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6117 000036B2 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6118 000036B4 FF742410                	push qword [rsp + 8 * 2]
  6119 000036B8 6A01                    	push 1
  6120 000036BA E91C180100              	jmp L_error_incorrect_arity_simple
  6121                                  .L_lambda_simple_arity_check_ok_0024:
  6122 000036BF C8000000                	enter 0, 0
  6123 000036C3 BF08000000              	mov rdi, 8 * 1
  6124 000036C8 E855180100              	call malloc
  6125 000036CD 488B5D20                	mov rbx, PARAM(0)
  6126 000036D1 488918                  	mov qword [rax], rbx
  6127 000036D4 48894520                	mov PARAM(0), rax
  6128 000036D8 48B8-                   	mov rax, sob_void
  6128 000036DA [0000000000000000] 
  6129                                  
  6130 000036E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6131 000036E7 E836180100              	call malloc
  6132 000036EC 50                      	push rax
  6133 000036ED BF08000000              	mov rdi, 8 * 1	; new rib
  6134 000036F2 E82B180100              	call malloc
  6135 000036F7 50                      	push rax
  6136 000036F8 BF18000000              	mov rdi, 8 * 3	; extended env
  6137 000036FD E820180100              	call malloc
  6138 00003702 488B7D10                	mov rdi, ENV
  6139 00003706 BE00000000              	mov rsi, 0
  6140 0000370B BA01000000              	mov rdx, 1
  6141                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6142 00003710 4883FE02                	cmp rsi, 2
  6143 00003714 7410                    	je .L_lambda_simple_env_end_0025
  6144 00003716 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6145 0000371A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6146 0000371E 48FFC6                  	inc rsi
  6147 00003721 48FFC2                  	inc rdx
  6148 00003724 EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6149                                  .L_lambda_simple_env_end_0025:
  6150 00003726 5B                      	pop rbx
  6151 00003727 BE00000000              	mov rsi, 0
  6152                                  .L_lambda_simple_params_loop_0025:	; copy params
  6153 0000372C 4883FE01                	cmp rsi, 1
  6154 00003730 740E                    	je .L_lambda_simple_params_end_0025
  6155 00003732 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6156 00003737 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6157 0000373B 48FFC6                  	inc rsi
  6158 0000373E EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6159                                  .L_lambda_simple_params_end_0025:
  6160 00003740 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6161 00003743 4889C3                  	mov rbx, rax
  6162 00003746 58                      	pop rax
  6163 00003747 C60004                  	mov byte [rax], T_closure
  6164 0000374A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6165 0000374E 48C74009[5B370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6166 00003756 E980010000              	jmp .L_lambda_simple_end_0025
  6167                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6168 0000375B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6169 00003761 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6170 00003763 FF742410                	push qword [rsp + 8 * 2]
  6171 00003767 6A01                    	push 1
  6172 00003769 E96D170100              	jmp L_error_incorrect_arity_simple
  6173                                  .L_lambda_simple_arity_check_ok_0025:
  6174 0000376E C8000000                	enter 0, 0
  6175                                  	; preparing a non-tail-call
  6176                                  	; preparing a non-tail-call
  6177 00003772 488B4520                	mov rax, PARAM(0)	; param s
  6178 00003776 50                      	push rax
  6179 00003777 6A01                    	push 1	; arg count
  6180 00003779 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6181 00003781 803805                  	cmp byte [rax], T_undefined
  6182 00003784 0F846B160100            	je L_error_fvar_undefined
  6183 0000378A 803804                  	cmp byte [rax], T_closure
  6184 0000378D 0F85E6160100            	jne L_error_non_closure
  6185 00003793 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6186 00003796 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6187 00003799 50                      	push rax
  6188 0000379A 6A01                    	push 1	; arg count
  6189 0000379C 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6190 000037A4 803805                  	cmp byte [rax], T_undefined
  6191 000037A7 0F8448160100            	je L_error_fvar_undefined
  6192 000037AD 803804                  	cmp byte [rax], T_closure
  6193 000037B0 0F85C3160100            	jne L_error_non_closure
  6194 000037B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6195 000037B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6196 000037BC 483D[02000000]          	cmp rax, sob_boolean_false
  6197 000037C2 0F8405010000            	je .L_if_else_0005
  6198                                  	; preparing a non-tail-call
  6199                                  	; preparing a non-tail-call
  6200 000037C8 488B4520                	mov rax, PARAM(0)	; param s
  6201 000037CC 50                      	push rax
  6202 000037CD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6203 000037D5 803805                  	cmp byte [rax], T_undefined
  6204 000037D8 0F8417160100            	je L_error_fvar_undefined
  6205 000037DE 50                      	push rax
  6206 000037DF 6A02                    	push 2	; arg count
  6207 000037E1 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6208 000037E9 803805                  	cmp byte [rax], T_undefined
  6209 000037EC 0F8403160100            	je L_error_fvar_undefined
  6210 000037F2 803804                  	cmp byte [rax], T_closure
  6211 000037F5 0F857E160100            	jne L_error_non_closure
  6212 000037FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6213 000037FE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6214 00003801 50                      	push rax
  6215 00003802 488B4510                	mov rax, ENV
  6216 00003806 488B4008                	mov rax, qword [rax + 8 * 1]
  6217 0000380A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6218 0000380D 50                      	push rax
  6219 0000380E 6A02                    	push 2	; arg count
  6220 00003810 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6221 00003818 803805                  	cmp byte [rax], T_undefined
  6222 0000381B 0F84D4150100            	je L_error_fvar_undefined
  6223 00003821 803804                  	cmp byte [rax], T_closure
  6224 00003824 0F854F160100            	jne L_error_non_closure
  6225 0000382A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6226 0000382D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6227 00003830 483D[02000000]          	cmp rax, sob_boolean_false
  6228 00003836 0F858F000000            	jne .L_or_end_0003
  6229                                  
  6230                                  	; Initiating tail-call optimization
  6231                                  	; preparing a non-tail-call
  6232 0000383C 488B4520                	mov rax, PARAM(0)	; param s
  6233 00003840 50                      	push rax
  6234 00003841 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6235 00003849 803805                  	cmp byte [rax], T_undefined
  6236 0000384C 0F84A3150100            	je L_error_fvar_undefined
  6237 00003852 50                      	push rax
  6238 00003853 6A02                    	push 2	; arg count
  6239 00003855 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6240 0000385D 803805                  	cmp byte [rax], T_undefined
  6241 00003860 0F848F150100            	je L_error_fvar_undefined
  6242 00003866 803804                  	cmp byte [rax], T_closure
  6243 00003869 0F850A160100            	jne L_error_non_closure
  6244 0000386F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6245 00003872 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6246 00003875 50                      	push rax
  6247 00003876 6A01                    	push 1	; Number of arguments
  6248 00003878 488B4510                	mov rax, ENV
  6249 0000387C 488B00                  	mov rax, qword [rax + 8 * 0]
  6250 0000387F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6251 00003882 488B00                  	mov rax, qword [rax]
  6252 00003885 803804                  	cmp byte [rax], T_closure
  6253 00003888 0F85EB150100            	jne L_error_non_closure
  6254 0000388E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6255                                  
  6256                                  	; Reclaiming the current stack frame
  6257 00003891 FF7508                  	push qword [rbp + 8]
  6258 00003894 FF7500                  	push qword [rbp]
  6259 00003897 41BA05000000            	mov r10, 1 + 4
  6260 0000389D 4C8B4518                	mov r8, COUNT
  6261 000038A1 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6262 000038A6 4C8D4DF8                	lea r9, [rbp - 8]
  6263                                  .L_tc_recycle_frame_loop_0023:
  6264 000038AA 4983FA00                	cmp r10, 0
  6265 000038AE 7413                    	je .L_tc_recycle_frame_done_0023
  6266 000038B0 4D8B19                  	mov r11, qword [r9]
  6267 000038B3 4D8918                  	mov qword [r8], r11
  6268 000038B6 49FFCA                  	dec r10
  6269 000038B9 4983E808                	sub r8, 8
  6270 000038BD 4983E908                	sub r9, 8
  6271 000038C1 EBE7                    	jmp .L_tc_recycle_frame_loop_0023
  6272                                  .L_tc_recycle_frame_done_0023:
  6273 000038C3 498D6008                	lea rsp, [r8 + 8]
  6274 000038C7 5D                      	pop rbp
  6275 000038C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6276                                  .L_or_end_0003:
  6277 000038CB EB0A                    	jmp .L_if_end_0005
  6278                                  .L_if_else_0005:
  6279 000038CD 48B8-                   	mov rax, L_constants + 2
  6279 000038CF [0200000000000000] 
  6280                                  .L_if_end_0005:
  6281 000038D7 C9                      	leave
  6282 000038D8 C21800                  	ret AND_KILL_FRAME(1)
  6283                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6284 000038DB 50                      	push rax
  6285 000038DC 488B4520                	mov rax, PARAM(0)	; param loop
  6286 000038E0 8F00                    	pop qword [rax]
  6287 000038E2 48B8-                   	mov rax, sob_void
  6287 000038E4 [0000000000000000] 
  6288                                  
  6289                                  	; preparing a non-tail-call
  6290 000038EC 488B4510                	mov rax, ENV
  6291 000038F0 488B00                  	mov rax, qword [rax + 8 * 0]
  6292 000038F3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6293 000038F7 50                      	push rax
  6294 000038F8 6A01                    	push 1	; arg count
  6295 000038FA 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6296 00003902 803805                  	cmp byte [rax], T_undefined
  6297 00003905 0F84EA140100            	je L_error_fvar_undefined
  6298 0000390B 803804                  	cmp byte [rax], T_closure
  6299 0000390E 0F8565150100            	jne L_error_non_closure
  6300 00003914 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6301 00003917 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6302 0000391A 483D[02000000]          	cmp rax, sob_boolean_false
  6303 00003920 7426                    	je .L_if_else_0006
  6304                                  	; preparing a non-tail-call
  6305 00003922 488B4510                	mov rax, ENV
  6306 00003926 488B00                  	mov rax, qword [rax + 8 * 0]
  6307 00003929 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6308 0000392D 50                      	push rax
  6309 0000392E 6A01                    	push 1	; arg count
  6310 00003930 488B4520                	mov rax, PARAM(0)	; param loop
  6311 00003934 488B00                  	mov rax, qword [rax]
  6312 00003937 803804                  	cmp byte [rax], T_closure
  6313 0000393A 0F8539150100            	jne L_error_non_closure
  6314 00003940 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6315 00003943 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6316 00003946 EB0A                    	jmp .L_if_end_0006
  6317                                  .L_if_else_0006:
  6318 00003948 48B8-                   	mov rax, L_constants + 2
  6318 0000394A [0200000000000000] 
  6319                                  .L_if_end_0006:
  6320 00003952 C9                      	leave
  6321 00003953 C21800                  	ret AND_KILL_FRAME(1)
  6322                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6323 00003956 803804                  	cmp byte [rax], T_closure
  6324 00003959 0F851A150100            	jne L_error_non_closure
  6325 0000395F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6326                                  
  6327                                  	; Reclaiming the current stack frame
  6328 00003962 FF7508                  	push qword [rbp + 8]
  6329 00003965 FF7500                  	push qword [rbp]
  6330 00003968 41BA05000000            	mov r10, 1 + 4
  6331 0000396E 4C8B4518                	mov r8, COUNT
  6332 00003972 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6333 00003977 4C8D4DF8                	lea r9, [rbp - 8]
  6334                                  .L_tc_recycle_frame_loop_0024:
  6335 0000397B 4983FA00                	cmp r10, 0
  6336 0000397F 7413                    	je .L_tc_recycle_frame_done_0024
  6337 00003981 4D8B19                  	mov r11, qword [r9]
  6338 00003984 4D8918                  	mov qword [r8], r11
  6339 00003987 49FFCA                  	dec r10
  6340 0000398A 4983E808                	sub r8, 8
  6341 0000398E 4983E908                	sub r9, 8
  6342 00003992 EBE7                    	jmp .L_tc_recycle_frame_loop_0024
  6343                                  .L_tc_recycle_frame_done_0024:
  6344 00003994 498D6008                	lea rsp, [r8 + 8]
  6345 00003998 5D                      	pop rbp
  6346 00003999 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6347 0000399C C9                      	leave
  6348 0000399D C22000                  	ret AND_KILL_FRAME(2)
  6349                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6350 000039A0 48890425[13150000]      	mov qword [free_var_110], rax
  6351 000039A8 48B8-                   	mov rax, sob_void
  6351 000039AA [0000000000000000] 
  6352                                  
  6353 000039B2 4889C7                  	mov rdi, rax
  6354 000039B5 E8BD170100              	call print_sexpr_if_not_void
  6355 000039BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6356 000039BF E85E150100              	call malloc
  6357 000039C4 50                      	push rax
  6358 000039C5 BF00000000              	mov rdi, 8 * 0	; new rib
  6359 000039CA E853150100              	call malloc
  6360 000039CF 50                      	push rax
  6361 000039D0 BF08000000              	mov rdi, 8 * 1	; extended env
  6362 000039D5 E848150100              	call malloc
  6363 000039DA 488B7D10                	mov rdi, ENV
  6364 000039DE BE00000000              	mov rsi, 0
  6365 000039E3 BA01000000              	mov rdx, 1
  6366                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6367 000039E8 4883FE00                	cmp rsi, 0
  6368 000039EC 7410                    	je .L_lambda_opt_env_end_0005
  6369 000039EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6370 000039F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6371 000039F6 48FFC6                  	inc rsi
  6372 000039F9 48FFC2                  	inc rdx
  6373 000039FC EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6374                                  .L_lambda_opt_env_end_0005:
  6375 000039FE 5B                      	pop rbx
  6376 000039FF BE00000000              	mov rsi, 0
  6377                                  .L_lambda_opt_params_loop_0005:	; copy params
  6378 00003A04 4883FE00                	cmp rsi, 0
  6379 00003A08 740E                    	je .L_lambda_opt_params_end_0005
  6380 00003A0A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6381 00003A0F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6382 00003A13 48FFC6                  	inc rsi
  6383 00003A16 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6384                                  .L_lambda_opt_params_end_0005:
  6385 00003A18 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6386 00003A1B 4889C3                  	mov rbx, rax
  6387 00003A1E 58                      	pop rax
  6388 00003A1F C60004                  	mov byte [rax], T_closure
  6389 00003A22 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6390 00003A26 48C74009[333A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6391 00003A2E E9AB040000              	jmp .L_lambda_opt_end_0005
  6392                                  .L_lambda_opt_code_0005:
  6393 00003A33 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  6394 00003A38 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  6395 00003A3C 7407                    	je .L_lambda_opt_arity_check_exact_0005	; Jump if arity matches
  6396 00003A3E 7F4C                    	jg .L_lambda_opt_arity_check_more_0005	; Jump if more arguments passed
  6397 00003A40 E9AA140100              	jmp L_error_incorrect_arity_opt
  6398                                  .L_lambda_opt_arity_check_exact_0005:
  6399 00003A45 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  6400 00003A48 4983C603                	add r14, 3 ; add 3 first stack values
  6401 00003A4C 41BF00000000            	mov r15, 0 ; r15 = index
  6402 00003A52 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  6403 00003A56 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  6404 00003A5E EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6405                                  .L_lambda_opt_stack_shrink_loop_0005:
  6406 00003A60 4983FE00                	cmp r14, 0
  6407 00003A64 7E11                    	jle .L_make_lambda_opt_exact_finish_0005
  6408 00003A66 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  6409 00003A6B 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  6410 00003A6F 49FFCE                  	dec r14 ; next loop value
  6411 00003A72 49FFC7                  	inc r15 ; update i
  6412 00003A75 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6413                                  .L_make_lambda_opt_exact_finish_0005:
  6414 00003A77 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  6415 00003A7F 49FFC2                  	inc r10
  6416 00003A82 4C89542410              	mov qword [rsp + 8 * 2], r10
  6417 00003A87 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0005
  6418                                  .L_lambda_opt_arity_check_more_0005:
  6419 00003A8C 4D89D6                  	mov r14, r10 ; r14 = num args
  6420 00003A8F 4D89D7                  	mov r15, r10 ; r15 = num args
  6421 00003A92 41B901000000            	mov r9, 1; r9 = number of params 
  6422 00003A98 4D29CE                  	sub r14, r9 ; r14 = extra args
  6423 00003A9B 4D01F1                  	add r9, r14 ; r9 = num args
  6424 00003A9E 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  6424 00003AA0 [0100000000000000] 
  6425 00003AA8 EB00                    	jmp .L_make_lambda_opt_arg_list_0005
  6426                                  .L_make_lambda_opt_arg_list_0005:
  6427 00003AAA 4983FE00                	cmp r14, 0
  6428 00003AAE 7E25                    	jle .L_make_lambda_opt_stack_fixed_0005
  6429 00003AB0 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  6430 00003AB5 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  6431 00003ABA E863140100              	call malloc                         ; Allocate memory, result in rax
  6432 00003ABF C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  6433 00003AC2 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  6434 00003AC6 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  6435 00003ACA 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  6436 00003ACD 49FFC9                  	dec r9                              ; args index minus 1
  6437 00003AD0 49FFCE                  	dec r14                             ; next iteration
  6438 00003AD3 EBD5                    	jmp .L_make_lambda_opt_arg_list_0005
  6439                                  .L_make_lambda_opt_stack_fixed_0005:
  6440 00003AD5 4D89FE                  	mov r14, r15 ; r14 = num args
  6441 00003AD8 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  6442 00003ADB 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  6443 00003ADF 41BA01000000            	mov r10, 1; r10 = num of params
  6444 00003AE5 4D29D6                  	sub r14, r10 ; r14 = extra args
  6445 00003AE8 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6446 00003AEB 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6447 00003AEE 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  6448 00003AF3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0005
  6449                                  .L_lambda_opt_stack_shrink_loop_more_0005:
  6450 00003AF5 4983F800                	cmp r8, 0
  6451 00003AF9 7E15                    	jle .L_make_lambda_opt_more_finish_0005
  6452 00003AFB 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  6453 00003AFF 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6454 00003B03 4D8D26                  	lea r12, [r14]
  6455 00003B06 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  6456 00003B0B 49FFC8                  	dec r8 ; next iteration
  6457 00003B0E EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0005
  6458                                  .L_make_lambda_opt_more_finish_0005:
  6459 00003B10 4D89F8                  	mov r8, r15 ; num of args
  6460 00003B13 41BA01000000            	mov r10, 1
  6461 00003B19 4D29D0                  	sub r8, r10 ; num of new args
  6462 00003B1C 49FFC0                  	inc r8
  6463 00003B1F 4C89442420              	mov qword [rsp + 8 * 4], r8
  6464 00003B24 4883C410                	add rsp, 8 * 2  ; 
  6465 00003B28 EB00                    	jmp .L_lambda_opt_stack_adjusted_0005
  6466                                  .L_lambda_opt_stack_adjusted_0005:
  6467 00003B2A C8000000                	enter 0, 0
  6468                                  	; Initiating tail-call optimization
  6469 00003B2E 48B8-                   	mov rax, L_constants + 2007
  6469 00003B30 [D707000000000000] 
  6470 00003B38 50                      	push rax
  6471 00003B39 6A01                    	push 1	; Number of arguments
  6472 00003B3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6473 00003B40 E8DD130100              	call malloc
  6474 00003B45 50                      	push rax
  6475 00003B46 BF10000000              	mov rdi, 8 * 2	; new rib
  6476 00003B4B E8D2130100              	call malloc
  6477 00003B50 50                      	push rax
  6478 00003B51 BF10000000              	mov rdi, 8 * 2	; extended env
  6479 00003B56 E8C7130100              	call malloc
  6480 00003B5B 488B7D10                	mov rdi, ENV
  6481 00003B5F BE00000000              	mov rsi, 0
  6482 00003B64 BA01000000              	mov rdx, 1
  6483                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6484 00003B69 4883FE01                	cmp rsi, 1
  6485 00003B6D 7410                    	je .L_lambda_simple_env_end_0026
  6486 00003B6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6487 00003B73 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6488 00003B77 48FFC6                  	inc rsi
  6489 00003B7A 48FFC2                  	inc rdx
  6490 00003B7D EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6491                                  .L_lambda_simple_env_end_0026:
  6492 00003B7F 5B                      	pop rbx
  6493 00003B80 BE00000000              	mov rsi, 0
  6494                                  .L_lambda_simple_params_loop_0026:	; copy params
  6495 00003B85 4883FE02                	cmp rsi, 2
  6496 00003B89 740E                    	je .L_lambda_simple_params_end_0026
  6497 00003B8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6498 00003B90 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6499 00003B94 48FFC6                  	inc rsi
  6500 00003B97 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6501                                  .L_lambda_simple_params_end_0026:
  6502 00003B99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6503 00003B9C 4889C3                  	mov rbx, rax
  6504 00003B9F 58                      	pop rax
  6505 00003BA0 C60004                  	mov byte [rax], T_closure
  6506 00003BA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6507 00003BA7 48C74009[B43B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6508 00003BAF E9E0020000              	jmp .L_lambda_simple_end_0026
  6509                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6510 00003BB4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6511 00003BBA 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6512 00003BBC FF742410                	push qword [rsp + 8 * 2]
  6513 00003BC0 6A01                    	push 1
  6514 00003BC2 E914130100              	jmp L_error_incorrect_arity_simple
  6515                                  .L_lambda_simple_arity_check_ok_0026:
  6516 00003BC7 C8000000                	enter 0, 0
  6517 00003BCB BF08000000              	mov rdi, 8 * 1
  6518 00003BD0 E84D130100              	call malloc
  6519 00003BD5 488B5D20                	mov rbx, PARAM(0)
  6520 00003BD9 488918                  	mov qword [rax], rbx
  6521 00003BDC 48894520                	mov PARAM(0), rax
  6522 00003BE0 48B8-                   	mov rax, sob_void
  6522 00003BE2 [0000000000000000] 
  6523                                  
  6524 00003BEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6525 00003BEF E82E130100              	call malloc
  6526 00003BF4 50                      	push rax
  6527 00003BF5 BF08000000              	mov rdi, 8 * 1	; new rib
  6528 00003BFA E823130100              	call malloc
  6529 00003BFF 50                      	push rax
  6530 00003C00 BF18000000              	mov rdi, 8 * 3	; extended env
  6531 00003C05 E818130100              	call malloc
  6532 00003C0A 488B7D10                	mov rdi, ENV
  6533 00003C0E BE00000000              	mov rsi, 0
  6534 00003C13 BA01000000              	mov rdx, 1
  6535                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6536 00003C18 4883FE02                	cmp rsi, 2
  6537 00003C1C 7410                    	je .L_lambda_simple_env_end_0027
  6538 00003C1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6539 00003C22 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6540 00003C26 48FFC6                  	inc rsi
  6541 00003C29 48FFC2                  	inc rdx
  6542 00003C2C EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6543                                  .L_lambda_simple_env_end_0027:
  6544 00003C2E 5B                      	pop rbx
  6545 00003C2F BE00000000              	mov rsi, 0
  6546                                  .L_lambda_simple_params_loop_0027:	; copy params
  6547 00003C34 4883FE01                	cmp rsi, 1
  6548 00003C38 740E                    	je .L_lambda_simple_params_end_0027
  6549 00003C3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6550 00003C3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6551 00003C43 48FFC6                  	inc rsi
  6552 00003C46 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6553                                  .L_lambda_simple_params_end_0027:
  6554 00003C48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6555 00003C4B 4889C3                  	mov rbx, rax
  6556 00003C4E 58                      	pop rax
  6557 00003C4F C60004                  	mov byte [rax], T_closure
  6558 00003C52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6559 00003C56 48C74009[633C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6560 00003C5E E980010000              	jmp .L_lambda_simple_end_0027
  6561                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6562 00003C63 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6563 00003C69 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6564 00003C6B FF742410                	push qword [rsp + 8 * 2]
  6565 00003C6F 6A01                    	push 1
  6566 00003C71 E965120100              	jmp L_error_incorrect_arity_simple
  6567                                  .L_lambda_simple_arity_check_ok_0027:
  6568 00003C76 C8000000                	enter 0, 0
  6569                                  	; preparing a non-tail-call
  6570                                  	; preparing a non-tail-call
  6571 00003C7A 488B4520                	mov rax, PARAM(0)	; param s
  6572 00003C7E 50                      	push rax
  6573 00003C7F 6A01                    	push 1	; arg count
  6574 00003C81 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6575 00003C89 803805                  	cmp byte [rax], T_undefined
  6576 00003C8C 0F8463110100            	je L_error_fvar_undefined
  6577 00003C92 803804                  	cmp byte [rax], T_closure
  6578 00003C95 0F85DE110100            	jne L_error_non_closure
  6579 00003C9B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6580 00003C9E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6581 00003CA1 50                      	push rax
  6582 00003CA2 6A01                    	push 1	; arg count
  6583 00003CA4 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6584 00003CAC 803805                  	cmp byte [rax], T_undefined
  6585 00003CAF 0F8440110100            	je L_error_fvar_undefined
  6586 00003CB5 803804                  	cmp byte [rax], T_closure
  6587 00003CB8 0F85BB110100            	jne L_error_non_closure
  6588 00003CBE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6589 00003CC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6590 00003CC4 483D[02000000]          	cmp rax, sob_boolean_false
  6591 00003CCA 0F850F010000            	jne .L_or_end_0004
  6592                                  
  6593                                  	; preparing a non-tail-call
  6594                                  	; preparing a non-tail-call
  6595 00003CD0 488B4520                	mov rax, PARAM(0)	; param s
  6596 00003CD4 50                      	push rax
  6597 00003CD5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6598 00003CDD 803805                  	cmp byte [rax], T_undefined
  6599 00003CE0 0F840F110100            	je L_error_fvar_undefined
  6600 00003CE6 50                      	push rax
  6601 00003CE7 6A02                    	push 2	; arg count
  6602 00003CE9 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6603 00003CF1 803805                  	cmp byte [rax], T_undefined
  6604 00003CF4 0F84FB100100            	je L_error_fvar_undefined
  6605 00003CFA 803804                  	cmp byte [rax], T_closure
  6606 00003CFD 0F8576110100            	jne L_error_non_closure
  6607 00003D03 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6608 00003D06 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6609 00003D09 50                      	push rax
  6610 00003D0A 488B4510                	mov rax, ENV
  6611 00003D0E 488B4008                	mov rax, qword [rax + 8 * 1]
  6612 00003D12 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6613 00003D15 50                      	push rax
  6614 00003D16 6A02                    	push 2	; arg count
  6615 00003D18 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6616 00003D20 803805                  	cmp byte [rax], T_undefined
  6617 00003D23 0F84CC100100            	je L_error_fvar_undefined
  6618 00003D29 803804                  	cmp byte [rax], T_closure
  6619 00003D2C 0F8547110100            	jne L_error_non_closure
  6620 00003D32 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6621 00003D35 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6622 00003D38 483D[02000000]          	cmp rax, sob_boolean_false
  6623 00003D3E 0F8491000000            	je .L_if_else_0007
  6624                                  	; Initiating tail-call optimization
  6625                                  	; preparing a non-tail-call
  6626 00003D44 488B4520                	mov rax, PARAM(0)	; param s
  6627 00003D48 50                      	push rax
  6628 00003D49 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6629 00003D51 803805                  	cmp byte [rax], T_undefined
  6630 00003D54 0F849B100100            	je L_error_fvar_undefined
  6631 00003D5A 50                      	push rax
  6632 00003D5B 6A02                    	push 2	; arg count
  6633 00003D5D 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6634 00003D65 803805                  	cmp byte [rax], T_undefined
  6635 00003D68 0F8487100100            	je L_error_fvar_undefined
  6636 00003D6E 803804                  	cmp byte [rax], T_closure
  6637 00003D71 0F8502110100            	jne L_error_non_closure
  6638 00003D77 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6639 00003D7A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6640 00003D7D 50                      	push rax
  6641 00003D7E 6A01                    	push 1	; Number of arguments
  6642 00003D80 488B4510                	mov rax, ENV
  6643 00003D84 488B00                  	mov rax, qword [rax + 8 * 0]
  6644 00003D87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6645 00003D8A 488B00                  	mov rax, qword [rax]
  6646 00003D8D 803804                  	cmp byte [rax], T_closure
  6647 00003D90 0F85E3100100            	jne L_error_non_closure
  6648 00003D96 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6649                                  
  6650                                  	; Reclaiming the current stack frame
  6651 00003D99 FF7508                  	push qword [rbp + 8]
  6652 00003D9C FF7500                  	push qword [rbp]
  6653 00003D9F 41BA05000000            	mov r10, 1 + 4
  6654 00003DA5 4C8B4518                	mov r8, COUNT
  6655 00003DA9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6656 00003DAE 4C8D4DF8                	lea r9, [rbp - 8]
  6657                                  .L_tc_recycle_frame_loop_0025:
  6658 00003DB2 4983FA00                	cmp r10, 0
  6659 00003DB6 7413                    	je .L_tc_recycle_frame_done_0025
  6660 00003DB8 4D8B19                  	mov r11, qword [r9]
  6661 00003DBB 4D8918                  	mov qword [r8], r11
  6662 00003DBE 49FFCA                  	dec r10
  6663 00003DC1 4983E808                	sub r8, 8
  6664 00003DC5 4983E908                	sub r9, 8
  6665 00003DC9 EBE7                    	jmp .L_tc_recycle_frame_loop_0025
  6666                                  .L_tc_recycle_frame_done_0025:
  6667 00003DCB 498D6008                	lea rsp, [r8 + 8]
  6668 00003DCF 5D                      	pop rbp
  6669 00003DD0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6670 00003DD3 EB0A                    	jmp .L_if_end_0007
  6671                                  .L_if_else_0007:
  6672 00003DD5 48B8-                   	mov rax, L_constants + 2
  6672 00003DD7 [0200000000000000] 
  6673                                  .L_if_end_0007:
  6674                                  .L_or_end_0004:
  6675 00003DDF C9                      	leave
  6676 00003DE0 C21800                  	ret AND_KILL_FRAME(1)
  6677                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6678 00003DE3 50                      	push rax
  6679 00003DE4 488B4520                	mov rax, PARAM(0)	; param loop
  6680 00003DE8 8F00                    	pop qword [rax]
  6681 00003DEA 48B8-                   	mov rax, sob_void
  6681 00003DEC [0000000000000000] 
  6682                                  
  6683                                  	; preparing a non-tail-call
  6684 00003DF4 488B4510                	mov rax, ENV
  6685 00003DF8 488B00                  	mov rax, qword [rax + 8 * 0]
  6686 00003DFB 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6687 00003DFF 50                      	push rax
  6688 00003E00 6A01                    	push 1	; arg count
  6689 00003E02 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6690 00003E0A 803805                  	cmp byte [rax], T_undefined
  6691 00003E0D 0F84E20F0100            	je L_error_fvar_undefined
  6692 00003E13 803804                  	cmp byte [rax], T_closure
  6693 00003E16 0F855D100100            	jne L_error_non_closure
  6694 00003E1C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6695 00003E1F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6696 00003E22 483D[02000000]          	cmp rax, sob_boolean_false
  6697 00003E28 7566                    	jne .L_or_end_0005
  6698                                  
  6699                                  	; preparing a non-tail-call
  6700 00003E2A 488B4510                	mov rax, ENV
  6701 00003E2E 488B00                  	mov rax, qword [rax + 8 * 0]
  6702 00003E31 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6703 00003E35 50                      	push rax
  6704 00003E36 6A01                    	push 1	; arg count
  6705 00003E38 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6706 00003E40 803805                  	cmp byte [rax], T_undefined
  6707 00003E43 0F84AC0F0100            	je L_error_fvar_undefined
  6708 00003E49 803804                  	cmp byte [rax], T_closure
  6709 00003E4C 0F8527100100            	jne L_error_non_closure
  6710 00003E52 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6711 00003E55 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6712 00003E58 483D[02000000]          	cmp rax, sob_boolean_false
  6713 00003E5E 7426                    	je .L_if_else_0008
  6714                                  	; preparing a non-tail-call
  6715 00003E60 488B4510                	mov rax, ENV
  6716 00003E64 488B00                  	mov rax, qword [rax + 8 * 0]
  6717 00003E67 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6718 00003E6B 50                      	push rax
  6719 00003E6C 6A01                    	push 1	; arg count
  6720 00003E6E 488B4520                	mov rax, PARAM(0)	; param loop
  6721 00003E72 488B00                  	mov rax, qword [rax]
  6722 00003E75 803804                  	cmp byte [rax], T_closure
  6723 00003E78 0F85FB0F0100            	jne L_error_non_closure
  6724 00003E7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6725 00003E81 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6726 00003E84 EB0A                    	jmp .L_if_end_0008
  6727                                  .L_if_else_0008:
  6728 00003E86 48B8-                   	mov rax, L_constants + 2
  6728 00003E88 [0200000000000000] 
  6729                                  .L_if_end_0008:
  6730                                  .L_or_end_0005:
  6731 00003E90 C9                      	leave
  6732 00003E91 C21800                  	ret AND_KILL_FRAME(1)
  6733                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6734 00003E94 803804                  	cmp byte [rax], T_closure
  6735 00003E97 0F85DC0F0100            	jne L_error_non_closure
  6736 00003E9D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6737                                  
  6738                                  	; Reclaiming the current stack frame
  6739 00003EA0 FF7508                  	push qword [rbp + 8]
  6740 00003EA3 FF7500                  	push qword [rbp]
  6741 00003EA6 41BA05000000            	mov r10, 1 + 4
  6742 00003EAC 4C8B4518                	mov r8, COUNT
  6743 00003EB0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6744 00003EB5 4C8D4DF8                	lea r9, [rbp - 8]
  6745                                  .L_tc_recycle_frame_loop_0026:
  6746 00003EB9 4983FA00                	cmp r10, 0
  6747 00003EBD 7413                    	je .L_tc_recycle_frame_done_0026
  6748 00003EBF 4D8B19                  	mov r11, qword [r9]
  6749 00003EC2 4D8918                  	mov qword [r8], r11
  6750 00003EC5 49FFCA                  	dec r10
  6751 00003EC8 4983E808                	sub r8, 8
  6752 00003ECC 4983E908                	sub r9, 8
  6753 00003ED0 EBE7                    	jmp .L_tc_recycle_frame_loop_0026
  6754                                  .L_tc_recycle_frame_done_0026:
  6755 00003ED2 498D6008                	lea rsp, [r8 + 8]
  6756 00003ED6 5D                      	pop rbp
  6757 00003ED7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6758 00003EDA C9                      	leave
  6759 00003EDB C22000                  	ret AND_KILL_FRAME(2)
  6760                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6761 00003EDE 48890425[D40F0000]      	mov qword [free_var_31], rax
  6762 00003EE6 48B8-                   	mov rax, sob_void
  6762 00003EE8 [0000000000000000] 
  6763                                  
  6764 00003EF0 4889C7                  	mov rdi, rax
  6765 00003EF3 E87F120100              	call print_sexpr_if_not_void
  6766                                  	; preparing a non-tail-call
  6767 00003EF8 48B8-                   	mov rax, L_constants + 2007
  6767 00003EFA [D707000000000000] 
  6768 00003F02 50                      	push rax
  6769 00003F03 48B8-                   	mov rax, L_constants + 2007
  6769 00003F05 [D707000000000000] 
  6770 00003F0D 50                      	push rax
  6771 00003F0E 6A02                    	push 2	; arg count
  6772 00003F10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6773 00003F15 E808100100              	call malloc
  6774 00003F1A 50                      	push rax
  6775 00003F1B BF00000000              	mov rdi, 8 * 0	; new rib
  6776 00003F20 E8FD0F0100              	call malloc
  6777 00003F25 50                      	push rax
  6778 00003F26 BF08000000              	mov rdi, 8 * 1	; extended env
  6779 00003F2B E8F20F0100              	call malloc
  6780 00003F30 488B7D10                	mov rdi, ENV
  6781 00003F34 BE00000000              	mov rsi, 0
  6782 00003F39 BA01000000              	mov rdx, 1
  6783                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6784 00003F3E 4883FE00                	cmp rsi, 0
  6785 00003F42 7410                    	je .L_lambda_simple_env_end_0028
  6786 00003F44 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6787 00003F48 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6788 00003F4C 48FFC6                  	inc rsi
  6789 00003F4F 48FFC2                  	inc rdx
  6790 00003F52 EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6791                                  .L_lambda_simple_env_end_0028:
  6792 00003F54 5B                      	pop rbx
  6793 00003F55 BE00000000              	mov rsi, 0
  6794                                  .L_lambda_simple_params_loop_0028:	; copy params
  6795 00003F5A 4883FE00                	cmp rsi, 0
  6796 00003F5E 740E                    	je .L_lambda_simple_params_end_0028
  6797 00003F60 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6798 00003F65 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6799 00003F69 48FFC6                  	inc rsi
  6800 00003F6C EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6801                                  .L_lambda_simple_params_end_0028:
  6802 00003F6E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6803 00003F71 4889C3                  	mov rbx, rax
  6804 00003F74 58                      	pop rax
  6805 00003F75 C60004                  	mov byte [rax], T_closure
  6806 00003F78 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6807 00003F7C 48C74009[893F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6808 00003F84 E94A060000              	jmp .L_lambda_simple_end_0028
  6809                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6810 00003F89 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6811 00003F8F 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6812 00003F91 FF742410                	push qword [rsp + 8 * 2]
  6813 00003F95 6A02                    	push 2
  6814 00003F97 E93F0F0100              	jmp L_error_incorrect_arity_simple
  6815                                  .L_lambda_simple_arity_check_ok_0028:
  6816 00003F9C C8000000                	enter 0, 0
  6817 00003FA0 BF08000000              	mov rdi, 8 * 1
  6818 00003FA5 E8780F0100              	call malloc
  6819 00003FAA 488B5D20                	mov rbx, PARAM(0)
  6820 00003FAE 488918                  	mov qword [rax], rbx
  6821 00003FB1 48894520                	mov PARAM(0), rax
  6822 00003FB5 48B8-                   	mov rax, sob_void
  6822 00003FB7 [0000000000000000] 
  6823                                  
  6824 00003FBF BF08000000              	mov rdi, 8 * 1
  6825 00003FC4 E8590F0100              	call malloc
  6826 00003FC9 488B5D28                	mov rbx, PARAM(1)
  6827 00003FCD 488918                  	mov qword [rax], rbx
  6828 00003FD0 48894528                	mov PARAM(1), rax
  6829 00003FD4 48B8-                   	mov rax, sob_void
  6829 00003FD6 [0000000000000000] 
  6830                                  
  6831 00003FDE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6832 00003FE3 E83A0F0100              	call malloc
  6833 00003FE8 50                      	push rax
  6834 00003FE9 BF10000000              	mov rdi, 8 * 2	; new rib
  6835 00003FEE E82F0F0100              	call malloc
  6836 00003FF3 50                      	push rax
  6837 00003FF4 BF10000000              	mov rdi, 8 * 2	; extended env
  6838 00003FF9 E8240F0100              	call malloc
  6839 00003FFE 488B7D10                	mov rdi, ENV
  6840 00004002 BE00000000              	mov rsi, 0
  6841 00004007 BA01000000              	mov rdx, 1
  6842                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6843 0000400C 4883FE01                	cmp rsi, 1
  6844 00004010 7410                    	je .L_lambda_simple_env_end_0029
  6845 00004012 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6846 00004016 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6847 0000401A 48FFC6                  	inc rsi
  6848 0000401D 48FFC2                  	inc rdx
  6849 00004020 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6850                                  .L_lambda_simple_env_end_0029:
  6851 00004022 5B                      	pop rbx
  6852 00004023 BE00000000              	mov rsi, 0
  6853                                  .L_lambda_simple_params_loop_0029:	; copy params
  6854 00004028 4883FE02                	cmp rsi, 2
  6855 0000402C 740E                    	je .L_lambda_simple_params_end_0029
  6856 0000402E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6857 00004033 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6858 00004037 48FFC6                  	inc rsi
  6859 0000403A EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6860                                  .L_lambda_simple_params_end_0029:
  6861 0000403C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6862 0000403F 4889C3                  	mov rbx, rax
  6863 00004042 58                      	pop rax
  6864 00004043 C60004                  	mov byte [rax], T_closure
  6865 00004046 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6866 0000404A 48C74009[57400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6867 00004052 E93C010000              	jmp .L_lambda_simple_end_0029
  6868                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6869 00004057 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6870 0000405D 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6871 0000405F FF742410                	push qword [rsp + 8 * 2]
  6872 00004063 6A02                    	push 2
  6873 00004065 E9710E0100              	jmp L_error_incorrect_arity_simple
  6874                                  .L_lambda_simple_arity_check_ok_0029:
  6875 0000406A C8000000                	enter 0, 0
  6876                                  	; preparing a non-tail-call
  6877 0000406E 488B4528                	mov rax, PARAM(1)	; param s
  6878 00004072 50                      	push rax
  6879 00004073 6A01                    	push 1	; arg count
  6880 00004075 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6881 0000407D 803805                  	cmp byte [rax], T_undefined
  6882 00004080 0F846F0D0100            	je L_error_fvar_undefined
  6883 00004086 803804                  	cmp byte [rax], T_closure
  6884 00004089 0F85EA0D0100            	jne L_error_non_closure
  6885 0000408F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6886 00004092 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6887 00004095 483D[02000000]          	cmp rax, sob_boolean_false
  6888 0000409B 740F                    	je .L_if_else_0009
  6889 0000409D 48B8-                   	mov rax, L_constants + 1
  6889 0000409F [0100000000000000] 
  6890 000040A7 E9E3000000              	jmp .L_if_end_0009
  6891                                  .L_if_else_0009:
  6892                                  	; Initiating tail-call optimization
  6893                                  	; preparing a non-tail-call
  6894                                  	; preparing a non-tail-call
  6895 000040AC 488B4528                	mov rax, PARAM(1)	; param s
  6896 000040B0 50                      	push rax
  6897 000040B1 6A01                    	push 1	; arg count
  6898 000040B3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6899 000040BB 803805                  	cmp byte [rax], T_undefined
  6900 000040BE 0F84310D0100            	je L_error_fvar_undefined
  6901 000040C4 803804                  	cmp byte [rax], T_closure
  6902 000040C7 0F85AC0D0100            	jne L_error_non_closure
  6903 000040CD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6904 000040D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6905 000040D3 50                      	push rax
  6906 000040D4 488B4520                	mov rax, PARAM(0)	; param f
  6907 000040D8 50                      	push rax
  6908 000040D9 6A02                    	push 2	; arg count
  6909 000040DB 488B4510                	mov rax, ENV
  6910 000040DF 488B00                  	mov rax, qword [rax + 8 * 0]
  6911 000040E2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6912 000040E5 488B00                  	mov rax, qword [rax]
  6913 000040E8 803804                  	cmp byte [rax], T_closure
  6914 000040EB 0F85880D0100            	jne L_error_non_closure
  6915 000040F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6916 000040F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6917 000040F7 50                      	push rax
  6918                                  	; preparing a non-tail-call
  6919                                  	; preparing a non-tail-call
  6920 000040F8 488B4528                	mov rax, PARAM(1)	; param s
  6921 000040FC 50                      	push rax
  6922 000040FD 6A01                    	push 1	; arg count
  6923 000040FF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6924 00004107 803805                  	cmp byte [rax], T_undefined
  6925 0000410A 0F84E50C0100            	je L_error_fvar_undefined
  6926 00004110 803804                  	cmp byte [rax], T_closure
  6927 00004113 0F85600D0100            	jne L_error_non_closure
  6928 00004119 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6929 0000411C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6930 0000411F 50                      	push rax
  6931 00004120 6A01                    	push 1	; arg count
  6932 00004122 488B4520                	mov rax, PARAM(0)	; param f
  6933 00004126 803804                  	cmp byte [rax], T_closure
  6934 00004129 0F854A0D0100            	jne L_error_non_closure
  6935 0000412F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6936 00004132 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6937 00004135 50                      	push rax
  6938 00004136 6A02                    	push 2	; Number of arguments
  6939 00004138 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  6940 00004140 803805                  	cmp byte [rax], T_undefined
  6941 00004143 0F84AC0C0100            	je L_error_fvar_undefined
  6942 00004149 803804                  	cmp byte [rax], T_closure
  6943 0000414C 0F85270D0100            	jne L_error_non_closure
  6944 00004152 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6945                                  
  6946                                  	; Reclaiming the current stack frame
  6947 00004155 FF7508                  	push qword [rbp + 8]
  6948 00004158 FF7500                  	push qword [rbp]
  6949 0000415B 41BA06000000            	mov r10, 2 + 4
  6950 00004161 4C8B4518                	mov r8, COUNT
  6951 00004165 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6952 0000416A 4C8D4DF8                	lea r9, [rbp - 8]
  6953                                  .L_tc_recycle_frame_loop_0027:
  6954 0000416E 4983FA00                	cmp r10, 0
  6955 00004172 7413                    	je .L_tc_recycle_frame_done_0027
  6956 00004174 4D8B19                  	mov r11, qword [r9]
  6957 00004177 4D8918                  	mov qword [r8], r11
  6958 0000417A 49FFCA                  	dec r10
  6959 0000417D 4983E808                	sub r8, 8
  6960 00004181 4983E908                	sub r9, 8
  6961 00004185 EBE7                    	jmp .L_tc_recycle_frame_loop_0027
  6962                                  .L_tc_recycle_frame_done_0027:
  6963 00004187 498D6008                	lea rsp, [r8 + 8]
  6964 0000418B 5D                      	pop rbp
  6965 0000418C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6966                                  .L_if_end_0009:
  6967 0000418F C9                      	leave
  6968 00004190 C22000                  	ret AND_KILL_FRAME(2)
  6969                                  .L_lambda_simple_end_0029:	; new closure is in rax
  6970 00004193 50                      	push rax
  6971 00004194 488B4520                	mov rax, PARAM(0)	; param map1
  6972 00004198 8F00                    	pop qword [rax]
  6973 0000419A 48B8-                   	mov rax, sob_void
  6973 0000419C [0000000000000000] 
  6974                                  
  6975 000041A4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6976 000041A9 E8740D0100              	call malloc
  6977 000041AE 50                      	push rax
  6978 000041AF BF10000000              	mov rdi, 8 * 2	; new rib
  6979 000041B4 E8690D0100              	call malloc
  6980 000041B9 50                      	push rax
  6981 000041BA BF10000000              	mov rdi, 8 * 2	; extended env
  6982 000041BF E85E0D0100              	call malloc
  6983 000041C4 488B7D10                	mov rdi, ENV
  6984 000041C8 BE00000000              	mov rsi, 0
  6985 000041CD BA01000000              	mov rdx, 1
  6986                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  6987 000041D2 4883FE01                	cmp rsi, 1
  6988 000041D6 7410                    	je .L_lambda_simple_env_end_002a
  6989 000041D8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6990 000041DC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6991 000041E0 48FFC6                  	inc rsi
  6992 000041E3 48FFC2                  	inc rdx
  6993 000041E6 EBEA                    	jmp .L_lambda_simple_env_loop_002a
  6994                                  .L_lambda_simple_env_end_002a:
  6995 000041E8 5B                      	pop rbx
  6996 000041E9 BE00000000              	mov rsi, 0
  6997                                  .L_lambda_simple_params_loop_002a:	; copy params
  6998 000041EE 4883FE02                	cmp rsi, 2
  6999 000041F2 740E                    	je .L_lambda_simple_params_end_002a
  7000 000041F4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7001 000041F9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7002 000041FD 48FFC6                  	inc rsi
  7003 00004200 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  7004                                  .L_lambda_simple_params_end_002a:
  7005 00004202 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7006 00004205 4889C3                  	mov rbx, rax
  7007 00004208 58                      	pop rax
  7008 00004209 C60004                  	mov byte [rax], T_closure
  7009 0000420C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7010 00004210 48C74009[1D420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  7011 00004218 E98E010000              	jmp .L_lambda_simple_end_002a
  7012                                  .L_lambda_simple_code_002a:	; lambda-simple body
  7013 0000421D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7014 00004223 740B                    	je .L_lambda_simple_arity_check_ok_002a
  7015 00004225 FF742410                	push qword [rsp + 8 * 2]
  7016 00004229 6A02                    	push 2
  7017 0000422B E9AB0C0100              	jmp L_error_incorrect_arity_simple
  7018                                  .L_lambda_simple_arity_check_ok_002a:
  7019 00004230 C8000000                	enter 0, 0
  7020                                  	; preparing a non-tail-call
  7021                                  	; preparing a non-tail-call
  7022 00004234 488B4528                	mov rax, PARAM(1)	; param s
  7023 00004238 50                      	push rax
  7024 00004239 6A01                    	push 1	; arg count
  7025 0000423B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7026 00004243 803805                  	cmp byte [rax], T_undefined
  7027 00004246 0F84A90B0100            	je L_error_fvar_undefined
  7028 0000424C 803804                  	cmp byte [rax], T_closure
  7029 0000424F 0F85240C0100            	jne L_error_non_closure
  7030 00004255 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7031 00004258 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7032 0000425B 50                      	push rax
  7033 0000425C 6A01                    	push 1	; arg count
  7034 0000425E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7035 00004266 803805                  	cmp byte [rax], T_undefined
  7036 00004269 0F84860B0100            	je L_error_fvar_undefined
  7037 0000426F 803804                  	cmp byte [rax], T_closure
  7038 00004272 0F85010C0100            	jne L_error_non_closure
  7039 00004278 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7040 0000427B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7041 0000427E 483D[02000000]          	cmp rax, sob_boolean_false
  7042 00004284 740F                    	je .L_if_else_000a
  7043 00004286 48B8-                   	mov rax, L_constants + 1
  7043 00004288 [0100000000000000] 
  7044 00004290 E912010000              	jmp .L_if_end_000a
  7045                                  .L_if_else_000a:
  7046                                  	; Initiating tail-call optimization
  7047                                  	; preparing a non-tail-call
  7048                                  	; preparing a non-tail-call
  7049 00004295 488B4528                	mov rax, PARAM(1)	; param s
  7050 00004299 50                      	push rax
  7051 0000429A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7052 000042A2 803805                  	cmp byte [rax], T_undefined
  7053 000042A5 0F844A0B0100            	je L_error_fvar_undefined
  7054 000042AB 50                      	push rax
  7055 000042AC 6A02                    	push 2	; arg count
  7056 000042AE 488B4510                	mov rax, ENV
  7057 000042B2 488B00                  	mov rax, qword [rax + 8 * 0]
  7058 000042B5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7059 000042B8 488B00                  	mov rax, qword [rax]
  7060 000042BB 803804                  	cmp byte [rax], T_closure
  7061 000042BE 0F85B50B0100            	jne L_error_non_closure
  7062 000042C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7063 000042C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7064 000042CA 50                      	push rax
  7065 000042CB 488B4520                	mov rax, PARAM(0)	; param f
  7066 000042CF 50                      	push rax
  7067 000042D0 6A02                    	push 2	; arg count
  7068 000042D2 488B4510                	mov rax, ENV
  7069 000042D6 488B00                  	mov rax, qword [rax + 8 * 0]
  7070 000042D9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7071 000042DD 488B00                  	mov rax, qword [rax]
  7072 000042E0 803804                  	cmp byte [rax], T_closure
  7073 000042E3 0F85900B0100            	jne L_error_non_closure
  7074 000042E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7075 000042EC FF5009                  	call SOB_CLOSURE_CODE(rax)
  7076 000042EF 50                      	push rax
  7077                                  	; preparing a non-tail-call
  7078                                  	; preparing a non-tail-call
  7079 000042F0 488B4528                	mov rax, PARAM(1)	; param s
  7080 000042F4 50                      	push rax
  7081 000042F5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7082 000042FD 803805                  	cmp byte [rax], T_undefined
  7083 00004300 0F84EF0A0100            	je L_error_fvar_undefined
  7084 00004306 50                      	push rax
  7085 00004307 6A02                    	push 2	; arg count
  7086 00004309 488B4510                	mov rax, ENV
  7087 0000430D 488B00                  	mov rax, qword [rax + 8 * 0]
  7088 00004310 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7089 00004313 488B00                  	mov rax, qword [rax]
  7090 00004316 803804                  	cmp byte [rax], T_closure
  7091 00004319 0F855A0B0100            	jne L_error_non_closure
  7092 0000431F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7093 00004322 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7094 00004325 50                      	push rax
  7095 00004326 488B4520                	mov rax, PARAM(0)	; param f
  7096 0000432A 50                      	push rax
  7097 0000432B 6A02                    	push 2	; arg count
  7098 0000432D 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7099 00004335 803805                  	cmp byte [rax], T_undefined
  7100 00004338 0F84B70A0100            	je L_error_fvar_undefined
  7101 0000433E 803804                  	cmp byte [rax], T_closure
  7102 00004341 0F85320B0100            	jne L_error_non_closure
  7103 00004347 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7104 0000434A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7105 0000434D 50                      	push rax
  7106 0000434E 6A02                    	push 2	; Number of arguments
  7107 00004350 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7108 00004358 803805                  	cmp byte [rax], T_undefined
  7109 0000435B 0F84940A0100            	je L_error_fvar_undefined
  7110 00004361 803804                  	cmp byte [rax], T_closure
  7111 00004364 0F850F0B0100            	jne L_error_non_closure
  7112 0000436A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7113                                  
  7114                                  	; Reclaiming the current stack frame
  7115 0000436D FF7508                  	push qword [rbp + 8]
  7116 00004370 FF7500                  	push qword [rbp]
  7117 00004373 41BA06000000            	mov r10, 2 + 4
  7118 00004379 4C8B4518                	mov r8, COUNT
  7119 0000437D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7120 00004382 4C8D4DF8                	lea r9, [rbp - 8]
  7121                                  .L_tc_recycle_frame_loop_0028:
  7122 00004386 4983FA00                	cmp r10, 0
  7123 0000438A 7413                    	je .L_tc_recycle_frame_done_0028
  7124 0000438C 4D8B19                  	mov r11, qword [r9]
  7125 0000438F 4D8918                  	mov qword [r8], r11
  7126 00004392 49FFCA                  	dec r10
  7127 00004395 4983E808                	sub r8, 8
  7128 00004399 4983E908                	sub r9, 8
  7129 0000439D EBE7                    	jmp .L_tc_recycle_frame_loop_0028
  7130                                  .L_tc_recycle_frame_done_0028:
  7131 0000439F 498D6008                	lea rsp, [r8 + 8]
  7132 000043A3 5D                      	pop rbp
  7133 000043A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7134                                  .L_if_end_000a:
  7135 000043A7 C9                      	leave
  7136 000043A8 C22000                  	ret AND_KILL_FRAME(2)
  7137                                  .L_lambda_simple_end_002a:	; new closure is in rax
  7138 000043AB 50                      	push rax
  7139 000043AC 488B4528                	mov rax, PARAM(1)	; param map-list
  7140 000043B0 8F00                    	pop qword [rax]
  7141 000043B2 48B8-                   	mov rax, sob_void
  7141 000043B4 [0000000000000000] 
  7142                                  
  7143 000043BC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7144 000043C1 E85C0B0100              	call malloc
  7145 000043C6 50                      	push rax
  7146 000043C7 BF10000000              	mov rdi, 8 * 2	; new rib
  7147 000043CC E8510B0100              	call malloc
  7148 000043D1 50                      	push rax
  7149 000043D2 BF10000000              	mov rdi, 8 * 2	; extended env
  7150 000043D7 E8460B0100              	call malloc
  7151 000043DC 488B7D10                	mov rdi, ENV
  7152 000043E0 BE00000000              	mov rsi, 0
  7153 000043E5 BA01000000              	mov rdx, 1
  7154                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  7155 000043EA 4883FE01                	cmp rsi, 1
  7156 000043EE 7410                    	je .L_lambda_opt_env_end_0006
  7157 000043F0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7158 000043F4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7159 000043F8 48FFC6                  	inc rsi
  7160 000043FB 48FFC2                  	inc rdx
  7161 000043FE EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7162                                  .L_lambda_opt_env_end_0006:
  7163 00004400 5B                      	pop rbx
  7164 00004401 BE00000000              	mov rsi, 0
  7165                                  .L_lambda_opt_params_loop_0006:	; copy params
  7166 00004406 4883FE02                	cmp rsi, 2
  7167 0000440A 740E                    	je .L_lambda_opt_params_end_0006
  7168 0000440C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7169 00004411 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7170 00004415 48FFC6                  	inc rsi
  7171 00004418 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7172                                  .L_lambda_opt_params_end_0006:
  7173 0000441A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7174 0000441D 4889C3                  	mov rbx, rax
  7175 00004420 58                      	pop rax
  7176 00004421 C60004                  	mov byte [rax], T_closure
  7177 00004424 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7178 00004428 48C74009[35440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7179 00004430 E99A010000              	jmp .L_lambda_opt_end_0006
  7180                                  .L_lambda_opt_code_0006:
  7181 00004435 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  7182 0000443A 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  7183 0000443E 7407                    	je .L_lambda_opt_arity_check_exact_0006	; Jump if arity matches
  7184 00004440 7F4C                    	jg .L_lambda_opt_arity_check_more_0006	; Jump if more arguments passed
  7185 00004442 E9A80A0100              	jmp L_error_incorrect_arity_opt
  7186                                  .L_lambda_opt_arity_check_exact_0006:
  7187 00004447 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  7188 0000444A 4983C603                	add r14, 3 ; add 3 first stack values
  7189 0000444E 41BF00000000            	mov r15, 0 ; r15 = index
  7190 00004454 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  7191 00004458 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  7192 00004460 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7193                                  .L_lambda_opt_stack_shrink_loop_0006:
  7194 00004462 4983FE00                	cmp r14, 0
  7195 00004466 7E11                    	jle .L_make_lambda_opt_exact_finish_0006
  7196 00004468 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  7197 0000446D 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  7198 00004471 49FFCE                  	dec r14 ; next loop value
  7199 00004474 49FFC7                  	inc r15 ; update i
  7200 00004477 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7201                                  .L_make_lambda_opt_exact_finish_0006:
  7202 00004479 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  7203 00004481 49FFC2                  	inc r10
  7204 00004484 4C89542410              	mov qword [rsp + 8 * 2], r10
  7205 00004489 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0006
  7206                                  .L_lambda_opt_arity_check_more_0006:
  7207 0000448E 4D89D6                  	mov r14, r10 ; r14 = num args
  7208 00004491 4D89D7                  	mov r15, r10 ; r15 = num args
  7209 00004494 41B901000000            	mov r9, 1; r9 = number of params 
  7210 0000449A 4D29CE                  	sub r14, r9 ; r14 = extra args
  7211 0000449D 4D01F1                  	add r9, r14 ; r9 = num args
  7212 000044A0 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  7212 000044A2 [0100000000000000] 
  7213 000044AA EB00                    	jmp .L_make_lambda_opt_arg_list_0006
  7214                                  .L_make_lambda_opt_arg_list_0006:
  7215 000044AC 4983FE00                	cmp r14, 0
  7216 000044B0 7E25                    	jle .L_make_lambda_opt_stack_fixed_0006
  7217 000044B2 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  7218 000044B7 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  7219 000044BC E8610A0100              	call malloc                         ; Allocate memory, result in rax
  7220 000044C1 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  7221 000044C4 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  7222 000044C8 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  7223 000044CC 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  7224 000044CF 49FFC9                  	dec r9                              ; args index minus 1
  7225 000044D2 49FFCE                  	dec r14                             ; next iteration
  7226 000044D5 EBD5                    	jmp .L_make_lambda_opt_arg_list_0006
  7227                                  .L_make_lambda_opt_stack_fixed_0006:
  7228 000044D7 4D89FE                  	mov r14, r15 ; r14 = num args
  7229 000044DA 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  7230 000044DD 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  7231 000044E1 41BA01000000            	mov r10, 1; r10 = num of params
  7232 000044E7 4D29D6                  	sub r14, r10 ; r14 = extra args
  7233 000044EA 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  7234 000044ED 49FFCE                  	dec r14 ; how much we need to change stack wise?
  7235 000044F0 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  7236 000044F5 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0006
  7237                                  .L_lambda_opt_stack_shrink_loop_more_0006:
  7238 000044F7 4983F800                	cmp r8, 0
  7239 000044FB 7E15                    	jle .L_make_lambda_opt_more_finish_0006
  7240 000044FD 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  7241 00004501 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  7242 00004505 4D8D26                  	lea r12, [r14]
  7243 00004508 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  7244 0000450D 49FFC8                  	dec r8 ; next iteration
  7245 00004510 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0006
  7246                                  .L_make_lambda_opt_more_finish_0006:
  7247 00004512 4D89F8                  	mov r8, r15 ; num of args
  7248 00004515 41BA01000000            	mov r10, 1
  7249 0000451B 4D29D0                  	sub r8, r10 ; num of new args
  7250 0000451E 49FFC0                  	inc r8
  7251 00004521 4C89442420              	mov qword [rsp + 8 * 4], r8
  7252 00004526 4883C410                	add rsp, 8 * 2  ; 
  7253 0000452A EB00                    	jmp .L_lambda_opt_stack_adjusted_0006
  7254                                  .L_lambda_opt_stack_adjusted_0006:
  7255 0000452C C8000000                	enter 0, 0
  7256                                  	; preparing a non-tail-call
  7257 00004530 488B4528                	mov rax, PARAM(1)	; param s
  7258 00004534 50                      	push rax
  7259 00004535 6A01                    	push 1	; arg count
  7260 00004537 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7261 0000453F 803805                  	cmp byte [rax], T_undefined
  7262 00004542 0F84AD080100            	je L_error_fvar_undefined
  7263 00004548 803804                  	cmp byte [rax], T_closure
  7264 0000454B 0F8528090100            	jne L_error_non_closure
  7265 00004551 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7266 00004554 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7267 00004557 483D[02000000]          	cmp rax, sob_boolean_false
  7268 0000455D 740C                    	je .L_if_else_000b
  7269 0000455F 48B8-                   	mov rax, L_constants + 1
  7269 00004561 [0100000000000000] 
  7270 00004569 EB60                    	jmp .L_if_end_000b
  7271                                  .L_if_else_000b:
  7272                                  	; Initiating tail-call optimization
  7273 0000456B 488B4528                	mov rax, PARAM(1)	; param s
  7274 0000456F 50                      	push rax
  7275 00004570 488B4520                	mov rax, PARAM(0)	; param f
  7276 00004574 50                      	push rax
  7277 00004575 6A02                    	push 2	; Number of arguments
  7278 00004577 488B4510                	mov rax, ENV
  7279 0000457B 488B00                  	mov rax, qword [rax + 8 * 0]
  7280 0000457E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7281 00004582 488B00                  	mov rax, qword [rax]
  7282 00004585 803804                  	cmp byte [rax], T_closure
  7283 00004588 0F85EB080100            	jne L_error_non_closure
  7284 0000458E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7285                                  
  7286                                  	; Reclaiming the current stack frame
  7287 00004591 FF7508                  	push qword [rbp + 8]
  7288 00004594 FF7500                  	push qword [rbp]
  7289 00004597 41BA06000000            	mov r10, 2 + 4
  7290 0000459D 4C8B4518                	mov r8, COUNT
  7291 000045A1 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7292 000045A6 4C8D4DF8                	lea r9, [rbp - 8]
  7293                                  .L_tc_recycle_frame_loop_0029:
  7294 000045AA 4983FA00                	cmp r10, 0
  7295 000045AE 7413                    	je .L_tc_recycle_frame_done_0029
  7296 000045B0 4D8B19                  	mov r11, qword [r9]
  7297 000045B3 4D8918                  	mov qword [r8], r11
  7298 000045B6 49FFCA                  	dec r10
  7299 000045B9 4983E808                	sub r8, 8
  7300 000045BD 4983E908                	sub r9, 8
  7301 000045C1 EBE7                    	jmp .L_tc_recycle_frame_loop_0029
  7302                                  .L_tc_recycle_frame_done_0029:
  7303 000045C3 498D6008                	lea rsp, [r8 + 8]
  7304 000045C7 5D                      	pop rbp
  7305 000045C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7306                                  .L_if_end_000b:
  7307 000045CB C9                      	leave
  7308 000045CC C22000                  	ret AND_KILL_FRAME(2)
  7309                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7310 000045CF C9                      	leave
  7311 000045D0 C22000                  	ret AND_KILL_FRAME(2)
  7312                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7313 000045D3 803804                  	cmp byte [rax], T_closure
  7314 000045D6 0F859D080100            	jne L_error_non_closure
  7315 000045DC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7316 000045DF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7317 000045E2 48890425[9C140000]      	mov qword [free_var_103], rax
  7318 000045EA 48B8-                   	mov rax, sob_void
  7318 000045EC [0000000000000000] 
  7319                                  
  7320 000045F4 4889C7                  	mov rdi, rax
  7321 000045F7 E87B0B0100              	call print_sexpr_if_not_void
  7322 000045FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7323 00004601 E81C090100              	call malloc
  7324 00004606 50                      	push rax
  7325 00004607 BF00000000              	mov rdi, 8 * 0	; new rib
  7326 0000460C E811090100              	call malloc
  7327 00004611 50                      	push rax
  7328 00004612 BF08000000              	mov rdi, 8 * 1	; extended env
  7329 00004617 E806090100              	call malloc
  7330 0000461C 488B7D10                	mov rdi, ENV
  7331 00004620 BE00000000              	mov rsi, 0
  7332 00004625 BA01000000              	mov rdx, 1
  7333                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7334 0000462A 4883FE00                	cmp rsi, 0
  7335 0000462E 7410                    	je .L_lambda_simple_env_end_002b
  7336 00004630 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7337 00004634 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7338 00004638 48FFC6                  	inc rsi
  7339 0000463B 48FFC2                  	inc rdx
  7340 0000463E EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7341                                  .L_lambda_simple_env_end_002b:
  7342 00004640 5B                      	pop rbx
  7343 00004641 BE00000000              	mov rsi, 0
  7344                                  .L_lambda_simple_params_loop_002b:	; copy params
  7345 00004646 4883FE00                	cmp rsi, 0
  7346 0000464A 740E                    	je .L_lambda_simple_params_end_002b
  7347 0000464C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7348 00004651 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7349 00004655 48FFC6                  	inc rsi
  7350 00004658 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7351                                  .L_lambda_simple_params_end_002b:
  7352 0000465A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7353 0000465D 4889C3                  	mov rbx, rax
  7354 00004660 58                      	pop rax
  7355 00004661 C60004                  	mov byte [rax], T_closure
  7356 00004664 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7357 00004668 48C74009[75460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7358 00004670 E97C010000              	jmp .L_lambda_simple_end_002b
  7359                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7360 00004675 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7361 0000467B 740B                    	je .L_lambda_simple_arity_check_ok_002b
  7362 0000467D FF742410                	push qword [rsp + 8 * 2]
  7363 00004681 6A01                    	push 1
  7364 00004683 E953080100              	jmp L_error_incorrect_arity_simple
  7365                                  .L_lambda_simple_arity_check_ok_002b:
  7366 00004688 C8000000                	enter 0, 0
  7367                                  	; Initiating tail-call optimization
  7368 0000468C 488B4520                	mov rax, PARAM(0)	; param s
  7369 00004690 50                      	push rax
  7370 00004691 48B8-                   	mov rax, L_constants + 1
  7370 00004693 [0100000000000000] 
  7371 0000469B 50                      	push rax
  7372 0000469C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7373 000046A1 E87C080100              	call malloc
  7374 000046A6 50                      	push rax
  7375 000046A7 BF08000000              	mov rdi, 8 * 1	; new rib
  7376 000046AC E871080100              	call malloc
  7377 000046B1 50                      	push rax
  7378 000046B2 BF10000000              	mov rdi, 8 * 2	; extended env
  7379 000046B7 E866080100              	call malloc
  7380 000046BC 488B7D10                	mov rdi, ENV
  7381 000046C0 BE00000000              	mov rsi, 0
  7382 000046C5 BA01000000              	mov rdx, 1
  7383                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7384 000046CA 4883FE01                	cmp rsi, 1
  7385 000046CE 7410                    	je .L_lambda_simple_env_end_002c
  7386 000046D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7387 000046D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7388 000046D8 48FFC6                  	inc rsi
  7389 000046DB 48FFC2                  	inc rdx
  7390 000046DE EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7391                                  .L_lambda_simple_env_end_002c:
  7392 000046E0 5B                      	pop rbx
  7393 000046E1 BE00000000              	mov rsi, 0
  7394                                  .L_lambda_simple_params_loop_002c:	; copy params
  7395 000046E6 4883FE01                	cmp rsi, 1
  7396 000046EA 740E                    	je .L_lambda_simple_params_end_002c
  7397 000046EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7398 000046F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7399 000046F5 48FFC6                  	inc rsi
  7400 000046F8 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7401                                  .L_lambda_simple_params_end_002c:
  7402 000046FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7403 000046FD 4889C3                  	mov rbx, rax
  7404 00004700 58                      	pop rax
  7405 00004701 C60004                  	mov byte [rax], T_closure
  7406 00004704 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7407 00004708 48C74009[15470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7408 00004710 E97E000000              	jmp .L_lambda_simple_end_002c
  7409                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7410 00004715 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7411 0000471B 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7412 0000471D FF742410                	push qword [rsp + 8 * 2]
  7413 00004721 6A02                    	push 2
  7414 00004723 E9B3070100              	jmp L_error_incorrect_arity_simple
  7415                                  .L_lambda_simple_arity_check_ok_002c:
  7416 00004728 C8000000                	enter 0, 0
  7417                                  	; Initiating tail-call optimization
  7418 0000472C 488B4520                	mov rax, PARAM(0)	; param r
  7419 00004730 50                      	push rax
  7420 00004731 488B4528                	mov rax, PARAM(1)	; param a
  7421 00004735 50                      	push rax
  7422 00004736 6A02                    	push 2	; Number of arguments
  7423 00004738 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7424 00004740 803805                  	cmp byte [rax], T_undefined
  7425 00004743 0F84AC060100            	je L_error_fvar_undefined
  7426 00004749 803804                  	cmp byte [rax], T_closure
  7427 0000474C 0F8527070100            	jne L_error_non_closure
  7428 00004752 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7429                                  
  7430                                  	; Reclaiming the current stack frame
  7431 00004755 FF7508                  	push qword [rbp + 8]
  7432 00004758 FF7500                  	push qword [rbp]
  7433 0000475B 41BA06000000            	mov r10, 2 + 4
  7434 00004761 4C8B4518                	mov r8, COUNT
  7435 00004765 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7436 0000476A 4C8D4DF8                	lea r9, [rbp - 8]
  7437                                  .L_tc_recycle_frame_loop_002a:
  7438 0000476E 4983FA00                	cmp r10, 0
  7439 00004772 7413                    	je .L_tc_recycle_frame_done_002a
  7440 00004774 4D8B19                  	mov r11, qword [r9]
  7441 00004777 4D8918                  	mov qword [r8], r11
  7442 0000477A 49FFCA                  	dec r10
  7443 0000477D 4983E808                	sub r8, 8
  7444 00004781 4983E908                	sub r9, 8
  7445 00004785 EBE7                    	jmp .L_tc_recycle_frame_loop_002a
  7446                                  .L_tc_recycle_frame_done_002a:
  7447 00004787 498D6008                	lea rsp, [r8 + 8]
  7448 0000478B 5D                      	pop rbp
  7449 0000478C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7450 0000478F C9                      	leave
  7451 00004790 C22000                  	ret AND_KILL_FRAME(2)
  7452                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7453 00004793 50                      	push rax
  7454 00004794 6A03                    	push 3	; Number of arguments
  7455 00004796 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7456 0000479E 803805                  	cmp byte [rax], T_undefined
  7457 000047A1 0F844E060100            	je L_error_fvar_undefined
  7458 000047A7 803804                  	cmp byte [rax], T_closure
  7459 000047AA 0F85C9060100            	jne L_error_non_closure
  7460 000047B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7461                                  
  7462                                  	; Reclaiming the current stack frame
  7463 000047B3 FF7508                  	push qword [rbp + 8]
  7464 000047B6 FF7500                  	push qword [rbp]
  7465 000047B9 41BA07000000            	mov r10, 3 + 4
  7466 000047BF 4C8B4518                	mov r8, COUNT
  7467 000047C3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7468 000047C8 4C8D4DF8                	lea r9, [rbp - 8]
  7469                                  .L_tc_recycle_frame_loop_002b:
  7470 000047CC 4983FA00                	cmp r10, 0
  7471 000047D0 7413                    	je .L_tc_recycle_frame_done_002b
  7472 000047D2 4D8B19                  	mov r11, qword [r9]
  7473 000047D5 4D8918                  	mov qword [r8], r11
  7474 000047D8 49FFCA                  	dec r10
  7475 000047DB 4983E808                	sub r8, 8
  7476 000047DF 4983E908                	sub r9, 8
  7477 000047E3 EBE7                    	jmp .L_tc_recycle_frame_loop_002b
  7478                                  .L_tc_recycle_frame_done_002b:
  7479 000047E5 498D6008                	lea rsp, [r8 + 8]
  7480 000047E9 5D                      	pop rbp
  7481 000047EA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7482 000047ED C9                      	leave
  7483 000047EE C21800                  	ret AND_KILL_FRAME(1)
  7484                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7485 000047F1 48890425[9B150000]      	mov qword [free_var_118], rax
  7486 000047F9 48B8-                   	mov rax, sob_void
  7486 000047FB [0000000000000000] 
  7487                                  
  7488 00004803 4889C7                  	mov rdi, rax
  7489 00004806 E86C090100              	call print_sexpr_if_not_void
  7490                                  	; preparing a non-tail-call
  7491 0000480B 48B8-                   	mov rax, L_constants + 2007
  7491 0000480D [D707000000000000] 
  7492 00004815 50                      	push rax
  7493 00004816 48B8-                   	mov rax, L_constants + 2007
  7493 00004818 [D707000000000000] 
  7494 00004820 50                      	push rax
  7495 00004821 6A02                    	push 2	; arg count
  7496 00004823 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7497 00004828 E8F5060100              	call malloc
  7498 0000482D 50                      	push rax
  7499 0000482E BF00000000              	mov rdi, 8 * 0	; new rib
  7500 00004833 E8EA060100              	call malloc
  7501 00004838 50                      	push rax
  7502 00004839 BF08000000              	mov rdi, 8 * 1	; extended env
  7503 0000483E E8DF060100              	call malloc
  7504 00004843 488B7D10                	mov rdi, ENV
  7505 00004847 BE00000000              	mov rsi, 0
  7506 0000484C BA01000000              	mov rdx, 1
  7507                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7508 00004851 4883FE00                	cmp rsi, 0
  7509 00004855 7410                    	je .L_lambda_simple_env_end_002d
  7510 00004857 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7511 0000485B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7512 0000485F 48FFC6                  	inc rsi
  7513 00004862 48FFC2                  	inc rdx
  7514 00004865 EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7515                                  .L_lambda_simple_env_end_002d:
  7516 00004867 5B                      	pop rbx
  7517 00004868 BE00000000              	mov rsi, 0
  7518                                  .L_lambda_simple_params_loop_002d:	; copy params
  7519 0000486D 4883FE00                	cmp rsi, 0
  7520 00004871 740E                    	je .L_lambda_simple_params_end_002d
  7521 00004873 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7522 00004878 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7523 0000487C 48FFC6                  	inc rsi
  7524 0000487F EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7525                                  .L_lambda_simple_params_end_002d:
  7526 00004881 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7527 00004884 4889C3                  	mov rbx, rax
  7528 00004887 58                      	pop rax
  7529 00004888 C60004                  	mov byte [rax], T_closure
  7530 0000488B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7531 0000488F 48C74009[9C480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7532 00004897 E906060000              	jmp .L_lambda_simple_end_002d
  7533                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7534 0000489C 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7535 000048A2 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7536 000048A4 FF742410                	push qword [rsp + 8 * 2]
  7537 000048A8 6A02                    	push 2
  7538 000048AA E92C060100              	jmp L_error_incorrect_arity_simple
  7539                                  .L_lambda_simple_arity_check_ok_002d:
  7540 000048AF C8000000                	enter 0, 0
  7541 000048B3 BF08000000              	mov rdi, 8 * 1
  7542 000048B8 E865060100              	call malloc
  7543 000048BD 488B5D20                	mov rbx, PARAM(0)
  7544 000048C1 488918                  	mov qword [rax], rbx
  7545 000048C4 48894520                	mov PARAM(0), rax
  7546 000048C8 48B8-                   	mov rax, sob_void
  7546 000048CA [0000000000000000] 
  7547                                  
  7548 000048D2 BF08000000              	mov rdi, 8 * 1
  7549 000048D7 E846060100              	call malloc
  7550 000048DC 488B5D28                	mov rbx, PARAM(1)
  7551 000048E0 488918                  	mov qword [rax], rbx
  7552 000048E3 48894528                	mov PARAM(1), rax
  7553 000048E7 48B8-                   	mov rax, sob_void
  7553 000048E9 [0000000000000000] 
  7554                                  
  7555 000048F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7556 000048F6 E827060100              	call malloc
  7557 000048FB 50                      	push rax
  7558 000048FC BF10000000              	mov rdi, 8 * 2	; new rib
  7559 00004901 E81C060100              	call malloc
  7560 00004906 50                      	push rax
  7561 00004907 BF10000000              	mov rdi, 8 * 2	; extended env
  7562 0000490C E811060100              	call malloc
  7563 00004911 488B7D10                	mov rdi, ENV
  7564 00004915 BE00000000              	mov rsi, 0
  7565 0000491A BA01000000              	mov rdx, 1
  7566                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7567 0000491F 4883FE01                	cmp rsi, 1
  7568 00004923 7410                    	je .L_lambda_simple_env_end_002e
  7569 00004925 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7570 00004929 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7571 0000492D 48FFC6                  	inc rsi
  7572 00004930 48FFC2                  	inc rdx
  7573 00004933 EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7574                                  .L_lambda_simple_env_end_002e:
  7575 00004935 5B                      	pop rbx
  7576 00004936 BE00000000              	mov rsi, 0
  7577                                  .L_lambda_simple_params_loop_002e:	; copy params
  7578 0000493B 4883FE02                	cmp rsi, 2
  7579 0000493F 740E                    	je .L_lambda_simple_params_end_002e
  7580 00004941 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7581 00004946 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7582 0000494A 48FFC6                  	inc rsi
  7583 0000494D EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7584                                  .L_lambda_simple_params_end_002e:
  7585 0000494F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7586 00004952 4889C3                  	mov rbx, rax
  7587 00004955 58                      	pop rax
  7588 00004956 C60004                  	mov byte [rax], T_closure
  7589 00004959 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7590 0000495D 48C74009[6A490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7591 00004965 E91D010000              	jmp .L_lambda_simple_end_002e
  7592                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7593 0000496A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7594 00004970 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7595 00004972 FF742410                	push qword [rsp + 8 * 2]
  7596 00004976 6A02                    	push 2
  7597 00004978 E95E050100              	jmp L_error_incorrect_arity_simple
  7598                                  .L_lambda_simple_arity_check_ok_002e:
  7599 0000497D C8000000                	enter 0, 0
  7600                                  	; preparing a non-tail-call
  7601 00004981 488B4528                	mov rax, PARAM(1)	; param sr
  7602 00004985 50                      	push rax
  7603 00004986 6A01                    	push 1	; arg count
  7604 00004988 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7605 00004990 803805                  	cmp byte [rax], T_undefined
  7606 00004993 0F845C040100            	je L_error_fvar_undefined
  7607 00004999 803804                  	cmp byte [rax], T_closure
  7608 0000499C 0F85D7040100            	jne L_error_non_closure
  7609 000049A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7610 000049A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7611 000049A8 483D[02000000]          	cmp rax, sob_boolean_false
  7612 000049AE 7409                    	je .L_if_else_000c
  7613 000049B0 488B4520                	mov rax, PARAM(0)	; param s1
  7614 000049B4 E9CA000000              	jmp .L_if_end_000c
  7615                                  .L_if_else_000c:
  7616                                  	; Initiating tail-call optimization
  7617                                  	; preparing a non-tail-call
  7618                                  	; preparing a non-tail-call
  7619 000049B9 488B4528                	mov rax, PARAM(1)	; param sr
  7620 000049BD 50                      	push rax
  7621 000049BE 6A01                    	push 1	; arg count
  7622 000049C0 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7623 000049C8 803805                  	cmp byte [rax], T_undefined
  7624 000049CB 0F8424040100            	je L_error_fvar_undefined
  7625 000049D1 803804                  	cmp byte [rax], T_closure
  7626 000049D4 0F859F040100            	jne L_error_non_closure
  7627 000049DA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7628 000049DD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7629 000049E0 50                      	push rax
  7630                                  	; preparing a non-tail-call
  7631 000049E1 488B4528                	mov rax, PARAM(1)	; param sr
  7632 000049E5 50                      	push rax
  7633 000049E6 6A01                    	push 1	; arg count
  7634 000049E8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7635 000049F0 803805                  	cmp byte [rax], T_undefined
  7636 000049F3 0F84FC030100            	je L_error_fvar_undefined
  7637 000049F9 803804                  	cmp byte [rax], T_closure
  7638 000049FC 0F8577040100            	jne L_error_non_closure
  7639 00004A02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7640 00004A05 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7641 00004A08 50                      	push rax
  7642 00004A09 6A02                    	push 2	; arg count
  7643 00004A0B 488B4510                	mov rax, ENV
  7644 00004A0F 488B00                  	mov rax, qword [rax + 8 * 0]
  7645 00004A12 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7646 00004A15 488B00                  	mov rax, qword [rax]
  7647 00004A18 803804                  	cmp byte [rax], T_closure
  7648 00004A1B 0F8558040100            	jne L_error_non_closure
  7649 00004A21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7650 00004A24 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7651 00004A27 50                      	push rax
  7652 00004A28 488B4520                	mov rax, PARAM(0)	; param s1
  7653 00004A2C 50                      	push rax
  7654 00004A2D 6A02                    	push 2	; Number of arguments
  7655 00004A2F 488B4510                	mov rax, ENV
  7656 00004A33 488B00                  	mov rax, qword [rax + 8 * 0]
  7657 00004A36 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7658 00004A3A 488B00                  	mov rax, qword [rax]
  7659 00004A3D 803804                  	cmp byte [rax], T_closure
  7660 00004A40 0F8533040100            	jne L_error_non_closure
  7661 00004A46 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7662                                  
  7663                                  	; Reclaiming the current stack frame
  7664 00004A49 FF7508                  	push qword [rbp + 8]
  7665 00004A4C FF7500                  	push qword [rbp]
  7666 00004A4F 41BA06000000            	mov r10, 2 + 4
  7667 00004A55 4C8B4518                	mov r8, COUNT
  7668 00004A59 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7669 00004A5E 4C8D4DF8                	lea r9, [rbp - 8]
  7670                                  .L_tc_recycle_frame_loop_002c:
  7671 00004A62 4983FA00                	cmp r10, 0
  7672 00004A66 7413                    	je .L_tc_recycle_frame_done_002c
  7673 00004A68 4D8B19                  	mov r11, qword [r9]
  7674 00004A6B 4D8918                  	mov qword [r8], r11
  7675 00004A6E 49FFCA                  	dec r10
  7676 00004A71 4983E808                	sub r8, 8
  7677 00004A75 4983E908                	sub r9, 8
  7678 00004A79 EBE7                    	jmp .L_tc_recycle_frame_loop_002c
  7679                                  .L_tc_recycle_frame_done_002c:
  7680 00004A7B 498D6008                	lea rsp, [r8 + 8]
  7681 00004A7F 5D                      	pop rbp
  7682 00004A80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7683                                  .L_if_end_000c:
  7684 00004A83 C9                      	leave
  7685 00004A84 C22000                  	ret AND_KILL_FRAME(2)
  7686                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7687 00004A87 50                      	push rax
  7688 00004A88 488B4520                	mov rax, PARAM(0)	; param run-1
  7689 00004A8C 8F00                    	pop qword [rax]
  7690 00004A8E 48B8-                   	mov rax, sob_void
  7690 00004A90 [0000000000000000] 
  7691                                  
  7692 00004A98 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7693 00004A9D E880040100              	call malloc
  7694 00004AA2 50                      	push rax
  7695 00004AA3 BF10000000              	mov rdi, 8 * 2	; new rib
  7696 00004AA8 E875040100              	call malloc
  7697 00004AAD 50                      	push rax
  7698 00004AAE BF10000000              	mov rdi, 8 * 2	; extended env
  7699 00004AB3 E86A040100              	call malloc
  7700 00004AB8 488B7D10                	mov rdi, ENV
  7701 00004ABC BE00000000              	mov rsi, 0
  7702 00004AC1 BA01000000              	mov rdx, 1
  7703                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7704 00004AC6 4883FE01                	cmp rsi, 1
  7705 00004ACA 7410                    	je .L_lambda_simple_env_end_002f
  7706 00004ACC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7707 00004AD0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7708 00004AD4 48FFC6                  	inc rsi
  7709 00004AD7 48FFC2                  	inc rdx
  7710 00004ADA EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7711                                  .L_lambda_simple_env_end_002f:
  7712 00004ADC 5B                      	pop rbx
  7713 00004ADD BE00000000              	mov rsi, 0
  7714                                  .L_lambda_simple_params_loop_002f:	; copy params
  7715 00004AE2 4883FE02                	cmp rsi, 2
  7716 00004AE6 740E                    	je .L_lambda_simple_params_end_002f
  7717 00004AE8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7718 00004AED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7719 00004AF1 48FFC6                  	inc rsi
  7720 00004AF4 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7721                                  .L_lambda_simple_params_end_002f:
  7722 00004AF6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7723 00004AF9 4889C3                  	mov rbx, rax
  7724 00004AFC 58                      	pop rax
  7725 00004AFD C60004                  	mov byte [rax], T_closure
  7726 00004B00 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7727 00004B04 48C74009[114B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7728 00004B0C E921010000              	jmp .L_lambda_simple_end_002f
  7729                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7730 00004B11 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7731 00004B17 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7732 00004B19 FF742410                	push qword [rsp + 8 * 2]
  7733 00004B1D 6A02                    	push 2
  7734 00004B1F E9B7030100              	jmp L_error_incorrect_arity_simple
  7735                                  .L_lambda_simple_arity_check_ok_002f:
  7736 00004B24 C8000000                	enter 0, 0
  7737                                  	; preparing a non-tail-call
  7738 00004B28 488B4520                	mov rax, PARAM(0)	; param s1
  7739 00004B2C 50                      	push rax
  7740 00004B2D 6A01                    	push 1	; arg count
  7741 00004B2F 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7742 00004B37 803805                  	cmp byte [rax], T_undefined
  7743 00004B3A 0F84B5020100            	je L_error_fvar_undefined
  7744 00004B40 803804                  	cmp byte [rax], T_closure
  7745 00004B43 0F8530030100            	jne L_error_non_closure
  7746 00004B49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7747 00004B4C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7748 00004B4F 483D[02000000]          	cmp rax, sob_boolean_false
  7749 00004B55 7409                    	je .L_if_else_000d
  7750 00004B57 488B4528                	mov rax, PARAM(1)	; param s2
  7751 00004B5B E9CE000000              	jmp .L_if_end_000d
  7752                                  .L_if_else_000d:
  7753                                  	; Initiating tail-call optimization
  7754                                  	; preparing a non-tail-call
  7755 00004B60 488B4528                	mov rax, PARAM(1)	; param s2
  7756 00004B64 50                      	push rax
  7757                                  	; preparing a non-tail-call
  7758 00004B65 488B4520                	mov rax, PARAM(0)	; param s1
  7759 00004B69 50                      	push rax
  7760 00004B6A 6A01                    	push 1	; arg count
  7761 00004B6C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7762 00004B74 803805                  	cmp byte [rax], T_undefined
  7763 00004B77 0F8478020100            	je L_error_fvar_undefined
  7764 00004B7D 803804                  	cmp byte [rax], T_closure
  7765 00004B80 0F85F3020100            	jne L_error_non_closure
  7766 00004B86 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7767 00004B89 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7768 00004B8C 50                      	push rax
  7769 00004B8D 6A02                    	push 2	; arg count
  7770 00004B8F 488B4510                	mov rax, ENV
  7771 00004B93 488B00                  	mov rax, qword [rax + 8 * 0]
  7772 00004B96 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7773 00004B9A 488B00                  	mov rax, qword [rax]
  7774 00004B9D 803804                  	cmp byte [rax], T_closure
  7775 00004BA0 0F85D3020100            	jne L_error_non_closure
  7776 00004BA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7777 00004BA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7778 00004BAC 50                      	push rax
  7779                                  	; preparing a non-tail-call
  7780 00004BAD 488B4520                	mov rax, PARAM(0)	; param s1
  7781 00004BB1 50                      	push rax
  7782 00004BB2 6A01                    	push 1	; arg count
  7783 00004BB4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7784 00004BBC 803805                  	cmp byte [rax], T_undefined
  7785 00004BBF 0F8430020100            	je L_error_fvar_undefined
  7786 00004BC5 803804                  	cmp byte [rax], T_closure
  7787 00004BC8 0F85AB020100            	jne L_error_non_closure
  7788 00004BCE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7789 00004BD1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7790 00004BD4 50                      	push rax
  7791 00004BD5 6A02                    	push 2	; Number of arguments
  7792 00004BD7 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7793 00004BDF 803805                  	cmp byte [rax], T_undefined
  7794 00004BE2 0F840D020100            	je L_error_fvar_undefined
  7795 00004BE8 803804                  	cmp byte [rax], T_closure
  7796 00004BEB 0F8588020100            	jne L_error_non_closure
  7797 00004BF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7798                                  
  7799                                  	; Reclaiming the current stack frame
  7800 00004BF4 FF7508                  	push qword [rbp + 8]
  7801 00004BF7 FF7500                  	push qword [rbp]
  7802 00004BFA 41BA06000000            	mov r10, 2 + 4
  7803 00004C00 4C8B4518                	mov r8, COUNT
  7804 00004C04 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7805 00004C09 4C8D4DF8                	lea r9, [rbp - 8]
  7806                                  .L_tc_recycle_frame_loop_002d:
  7807 00004C0D 4983FA00                	cmp r10, 0
  7808 00004C11 7413                    	je .L_tc_recycle_frame_done_002d
  7809 00004C13 4D8B19                  	mov r11, qword [r9]
  7810 00004C16 4D8918                  	mov qword [r8], r11
  7811 00004C19 49FFCA                  	dec r10
  7812 00004C1C 4983E808                	sub r8, 8
  7813 00004C20 4983E908                	sub r9, 8
  7814 00004C24 EBE7                    	jmp .L_tc_recycle_frame_loop_002d
  7815                                  .L_tc_recycle_frame_done_002d:
  7816 00004C26 498D6008                	lea rsp, [r8 + 8]
  7817 00004C2A 5D                      	pop rbp
  7818 00004C2B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7819                                  .L_if_end_000d:
  7820 00004C2E C9                      	leave
  7821 00004C2F C22000                  	ret AND_KILL_FRAME(2)
  7822                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7823 00004C32 50                      	push rax
  7824 00004C33 488B4528                	mov rax, PARAM(1)	; param run-2
  7825 00004C37 8F00                    	pop qword [rax]
  7826 00004C39 48B8-                   	mov rax, sob_void
  7826 00004C3B [0000000000000000] 
  7827                                  
  7828 00004C43 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7829 00004C48 E8D5020100              	call malloc
  7830 00004C4D 50                      	push rax
  7831 00004C4E BF10000000              	mov rdi, 8 * 2	; new rib
  7832 00004C53 E8CA020100              	call malloc
  7833 00004C58 50                      	push rax
  7834 00004C59 BF10000000              	mov rdi, 8 * 2	; extended env
  7835 00004C5E E8BF020100              	call malloc
  7836 00004C63 488B7D10                	mov rdi, ENV
  7837 00004C67 BE00000000              	mov rsi, 0
  7838 00004C6C BA01000000              	mov rdx, 1
  7839                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  7840 00004C71 4883FE01                	cmp rsi, 1
  7841 00004C75 7410                    	je .L_lambda_opt_env_end_0007
  7842 00004C77 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7843 00004C7B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7844 00004C7F 48FFC6                  	inc rsi
  7845 00004C82 48FFC2                  	inc rdx
  7846 00004C85 EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7847                                  .L_lambda_opt_env_end_0007:
  7848 00004C87 5B                      	pop rbx
  7849 00004C88 BE00000000              	mov rsi, 0
  7850                                  .L_lambda_opt_params_loop_0007:	; copy params
  7851 00004C8D 4883FE02                	cmp rsi, 2
  7852 00004C91 740E                    	je .L_lambda_opt_params_end_0007
  7853 00004C93 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7854 00004C98 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7855 00004C9C 48FFC6                  	inc rsi
  7856 00004C9F EBEC                    	jmp .L_lambda_opt_params_loop_0007
  7857                                  .L_lambda_opt_params_end_0007:
  7858 00004CA1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7859 00004CA4 4889C3                  	mov rbx, rax
  7860 00004CA7 58                      	pop rax
  7861 00004CA8 C60004                  	mov byte [rax], T_closure
  7862 00004CAB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7863 00004CAF 48C74009[BC4C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7864 00004CB7 E9E2010000              	jmp .L_lambda_opt_end_0007
  7865                                  .L_lambda_opt_code_0007:
  7866 00004CBC 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  7867 00004CC1 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  7868 00004CC5 7407                    	je .L_lambda_opt_arity_check_exact_0007	; Jump if arity matches
  7869 00004CC7 7F4C                    	jg .L_lambda_opt_arity_check_more_0007	; Jump if more arguments passed
  7870 00004CC9 E921020100              	jmp L_error_incorrect_arity_opt
  7871                                  .L_lambda_opt_arity_check_exact_0007:
  7872 00004CCE 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  7873 00004CD1 4983C603                	add r14, 3 ; add 3 first stack values
  7874 00004CD5 41BF00000000            	mov r15, 0 ; r15 = index
  7875 00004CDB 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  7876 00004CDF 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  7877 00004CE7 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  7878                                  .L_lambda_opt_stack_shrink_loop_0007:
  7879 00004CE9 4983FE00                	cmp r14, 0
  7880 00004CED 7E11                    	jle .L_make_lambda_opt_exact_finish_0007
  7881 00004CEF 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  7882 00004CF4 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  7883 00004CF8 49FFCE                  	dec r14 ; next loop value
  7884 00004CFB 49FFC7                  	inc r15 ; update i
  7885 00004CFE EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  7886                                  .L_make_lambda_opt_exact_finish_0007:
  7887 00004D00 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  7888 00004D08 49FFC2                  	inc r10
  7889 00004D0B 4C89542410              	mov qword [rsp + 8 * 2], r10
  7890 00004D10 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0007
  7891                                  .L_lambda_opt_arity_check_more_0007:
  7892 00004D15 4D89D6                  	mov r14, r10 ; r14 = num args
  7893 00004D18 4D89D7                  	mov r15, r10 ; r15 = num args
  7894 00004D1B 41B900000000            	mov r9, 0; r9 = number of params 
  7895 00004D21 4D29CE                  	sub r14, r9 ; r14 = extra args
  7896 00004D24 4D01F1                  	add r9, r14 ; r9 = num args
  7897 00004D27 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  7897 00004D29 [0100000000000000] 
  7898 00004D31 EB00                    	jmp .L_make_lambda_opt_arg_list_0007
  7899                                  .L_make_lambda_opt_arg_list_0007:
  7900 00004D33 4983FE00                	cmp r14, 0
  7901 00004D37 7E25                    	jle .L_make_lambda_opt_stack_fixed_0007
  7902 00004D39 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  7903 00004D3E BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  7904 00004D43 E8DA010100              	call malloc                         ; Allocate memory, result in rax
  7905 00004D48 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  7906 00004D4B 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  7907 00004D4F 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  7908 00004D53 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  7909 00004D56 49FFC9                  	dec r9                              ; args index minus 1
  7910 00004D59 49FFCE                  	dec r14                             ; next iteration
  7911 00004D5C EBD5                    	jmp .L_make_lambda_opt_arg_list_0007
  7912                                  .L_make_lambda_opt_stack_fixed_0007:
  7913 00004D5E 4D89FE                  	mov r14, r15 ; r14 = num args
  7914 00004D61 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  7915 00004D64 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  7916 00004D68 41BA00000000            	mov r10, 0; r10 = num of params
  7917 00004D6E 4D29D6                  	sub r14, r10 ; r14 = extra args
  7918 00004D71 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  7919 00004D74 49FFCE                  	dec r14 ; how much we need to change stack wise?
  7920 00004D77 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  7921 00004D7C EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0007
  7922                                  .L_lambda_opt_stack_shrink_loop_more_0007:
  7923 00004D7E 4983F800                	cmp r8, 0
  7924 00004D82 7E15                    	jle .L_make_lambda_opt_more_finish_0007
  7925 00004D84 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  7926 00004D88 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  7927 00004D8C 4D8D26                  	lea r12, [r14]
  7928 00004D8F 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  7929 00004D94 49FFC8                  	dec r8 ; next iteration
  7930 00004D97 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0007
  7931                                  .L_make_lambda_opt_more_finish_0007:
  7932 00004D99 4D89F8                  	mov r8, r15 ; num of args
  7933 00004D9C 41BA00000000            	mov r10, 0
  7934 00004DA2 4D29D0                  	sub r8, r10 ; num of new args
  7935 00004DA5 49FFC0                  	inc r8
  7936 00004DA8 4C89442420              	mov qword [rsp + 8 * 4], r8
  7937 00004DAD 4883C410                	add rsp, 8 * 2  ; 
  7938 00004DB1 EB00                    	jmp .L_lambda_opt_stack_adjusted_0007
  7939                                  .L_lambda_opt_stack_adjusted_0007:
  7940 00004DB3 C8000000                	enter 0, 0
  7941                                  	; preparing a non-tail-call
  7942 00004DB7 488B4520                	mov rax, PARAM(0)	; param s
  7943 00004DBB 50                      	push rax
  7944 00004DBC 6A01                    	push 1	; arg count
  7945 00004DBE 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7946 00004DC6 803805                  	cmp byte [rax], T_undefined
  7947 00004DC9 0F8426000100            	je L_error_fvar_undefined
  7948 00004DCF 803804                  	cmp byte [rax], T_closure
  7949 00004DD2 0F85A1000100            	jne L_error_non_closure
  7950 00004DD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7951 00004DDB FF5009                  	call SOB_CLOSURE_CODE(rax)
  7952 00004DDE 483D[02000000]          	cmp rax, sob_boolean_false
  7953 00004DE4 740F                    	je .L_if_else_000e
  7954 00004DE6 48B8-                   	mov rax, L_constants + 1
  7954 00004DE8 [0100000000000000] 
  7955 00004DF0 E9A5000000              	jmp .L_if_end_000e
  7956                                  .L_if_else_000e:
  7957                                  	; Initiating tail-call optimization
  7958                                  	; preparing a non-tail-call
  7959 00004DF5 488B4520                	mov rax, PARAM(0)	; param s
  7960 00004DF9 50                      	push rax
  7961 00004DFA 6A01                    	push 1	; arg count
  7962 00004DFC 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7963 00004E04 803805                  	cmp byte [rax], T_undefined
  7964 00004E07 0F84E8FF0000            	je L_error_fvar_undefined
  7965 00004E0D 803804                  	cmp byte [rax], T_closure
  7966 00004E10 0F8563000100            	jne L_error_non_closure
  7967 00004E16 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7968 00004E19 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7969 00004E1C 50                      	push rax
  7970                                  	; preparing a non-tail-call
  7971 00004E1D 488B4520                	mov rax, PARAM(0)	; param s
  7972 00004E21 50                      	push rax
  7973 00004E22 6A01                    	push 1	; arg count
  7974 00004E24 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7975 00004E2C 803805                  	cmp byte [rax], T_undefined
  7976 00004E2F 0F84C0FF0000            	je L_error_fvar_undefined
  7977 00004E35 803804                  	cmp byte [rax], T_closure
  7978 00004E38 0F853B000100            	jne L_error_non_closure
  7979 00004E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7980 00004E41 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7981 00004E44 50                      	push rax
  7982 00004E45 6A02                    	push 2	; Number of arguments
  7983 00004E47 488B4510                	mov rax, ENV
  7984 00004E4B 488B00                  	mov rax, qword [rax + 8 * 0]
  7985 00004E4E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7986 00004E51 488B00                  	mov rax, qword [rax]
  7987 00004E54 803804                  	cmp byte [rax], T_closure
  7988 00004E57 0F851C000100            	jne L_error_non_closure
  7989 00004E5D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7990                                  
  7991                                  	; Reclaiming the current stack frame
  7992 00004E60 FF7508                  	push qword [rbp + 8]
  7993 00004E63 FF7500                  	push qword [rbp]
  7994 00004E66 41BA06000000            	mov r10, 2 + 4
  7995 00004E6C 4C8B4518                	mov r8, COUNT
  7996 00004E70 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7997 00004E75 4C8D4DF8                	lea r9, [rbp - 8]
  7998                                  .L_tc_recycle_frame_loop_002e:
  7999 00004E79 4983FA00                	cmp r10, 0
  8000 00004E7D 7413                    	je .L_tc_recycle_frame_done_002e
  8001 00004E7F 4D8B19                  	mov r11, qword [r9]
  8002 00004E82 4D8918                  	mov qword [r8], r11
  8003 00004E85 49FFCA                  	dec r10
  8004 00004E88 4983E808                	sub r8, 8
  8005 00004E8C 4983E908                	sub r9, 8
  8006 00004E90 EBE7                    	jmp .L_tc_recycle_frame_loop_002e
  8007                                  .L_tc_recycle_frame_done_002e:
  8008 00004E92 498D6008                	lea rsp, [r8 + 8]
  8009 00004E96 5D                      	pop rbp
  8010 00004E97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8011                                  .L_if_end_000e:
  8012 00004E9A C9                      	leave
  8013 00004E9B C21800                  	ret AND_KILL_FRAME(1)
  8014                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8015 00004E9E C9                      	leave
  8016 00004E9F C22000                  	ret AND_KILL_FRAME(2)
  8017                                  .L_lambda_simple_end_002d:	; new closure is in rax
  8018 00004EA2 803804                  	cmp byte [rax], T_closure
  8019 00004EA5 0F85CEFF0000            	jne L_error_non_closure
  8020 00004EAB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8021 00004EAE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8022 00004EB1 48890425[E50F0000]      	mov qword [free_var_32], rax
  8023 00004EB9 48B8-                   	mov rax, sob_void
  8023 00004EBB [0000000000000000] 
  8024                                  
  8025 00004EC3 4889C7                  	mov rdi, rax
  8026 00004EC6 E8AC020100              	call print_sexpr_if_not_void
  8027                                  	; preparing a non-tail-call
  8028 00004ECB 48B8-                   	mov rax, L_constants + 2007
  8028 00004ECD [D707000000000000] 
  8029 00004ED5 50                      	push rax
  8030 00004ED6 6A01                    	push 1	; arg count
  8031 00004ED8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8032 00004EDD E840000100              	call malloc
  8033 00004EE2 50                      	push rax
  8034 00004EE3 BF00000000              	mov rdi, 8 * 0	; new rib
  8035 00004EE8 E835000100              	call malloc
  8036 00004EED 50                      	push rax
  8037 00004EEE BF08000000              	mov rdi, 8 * 1	; extended env
  8038 00004EF3 E82A000100              	call malloc
  8039 00004EF8 488B7D10                	mov rdi, ENV
  8040 00004EFC BE00000000              	mov rsi, 0
  8041 00004F01 BA01000000              	mov rdx, 1
  8042                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  8043 00004F06 4883FE00                	cmp rsi, 0
  8044 00004F0A 7410                    	je .L_lambda_simple_env_end_0030
  8045 00004F0C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8046 00004F10 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8047 00004F14 48FFC6                  	inc rsi
  8048 00004F17 48FFC2                  	inc rdx
  8049 00004F1A EBEA                    	jmp .L_lambda_simple_env_loop_0030
  8050                                  .L_lambda_simple_env_end_0030:
  8051 00004F1C 5B                      	pop rbx
  8052 00004F1D BE00000000              	mov rsi, 0
  8053                                  .L_lambda_simple_params_loop_0030:	; copy params
  8054 00004F22 4883FE00                	cmp rsi, 0
  8055 00004F26 740E                    	je .L_lambda_simple_params_end_0030
  8056 00004F28 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8057 00004F2D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8058 00004F31 48FFC6                  	inc rsi
  8059 00004F34 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  8060                                  .L_lambda_simple_params_end_0030:
  8061 00004F36 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8062 00004F39 4889C3                  	mov rbx, rax
  8063 00004F3C 58                      	pop rax
  8064 00004F3D C60004                  	mov byte [rax], T_closure
  8065 00004F40 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8066 00004F44 48C74009[514F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  8067 00004F4C E900040000              	jmp .L_lambda_simple_end_0030
  8068                                  .L_lambda_simple_code_0030:	; lambda-simple body
  8069 00004F51 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8070 00004F57 740B                    	je .L_lambda_simple_arity_check_ok_0030
  8071 00004F59 FF742410                	push qword [rsp + 8 * 2]
  8072 00004F5D 6A01                    	push 1
  8073 00004F5F E977FF0000              	jmp L_error_incorrect_arity_simple
  8074                                  .L_lambda_simple_arity_check_ok_0030:
  8075 00004F64 C8000000                	enter 0, 0
  8076 00004F68 BF08000000              	mov rdi, 8 * 1
  8077 00004F6D E8B0FF0000              	call malloc
  8078 00004F72 488B5D20                	mov rbx, PARAM(0)
  8079 00004F76 488918                  	mov qword [rax], rbx
  8080 00004F79 48894520                	mov PARAM(0), rax
  8081 00004F7D 48B8-                   	mov rax, sob_void
  8081 00004F7F [0000000000000000] 
  8082                                  
  8083 00004F87 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8084 00004F8C E891FF0000              	call malloc
  8085 00004F91 50                      	push rax
  8086 00004F92 BF08000000              	mov rdi, 8 * 1	; new rib
  8087 00004F97 E886FF0000              	call malloc
  8088 00004F9C 50                      	push rax
  8089 00004F9D BF10000000              	mov rdi, 8 * 2	; extended env
  8090 00004FA2 E87BFF0000              	call malloc
  8091 00004FA7 488B7D10                	mov rdi, ENV
  8092 00004FAB BE00000000              	mov rsi, 0
  8093 00004FB0 BA01000000              	mov rdx, 1
  8094                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8095 00004FB5 4883FE01                	cmp rsi, 1
  8096 00004FB9 7410                    	je .L_lambda_simple_env_end_0031
  8097 00004FBB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8098 00004FBF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8099 00004FC3 48FFC6                  	inc rsi
  8100 00004FC6 48FFC2                  	inc rdx
  8101 00004FC9 EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8102                                  .L_lambda_simple_env_end_0031:
  8103 00004FCB 5B                      	pop rbx
  8104 00004FCC BE00000000              	mov rsi, 0
  8105                                  .L_lambda_simple_params_loop_0031:	; copy params
  8106 00004FD1 4883FE01                	cmp rsi, 1
  8107 00004FD5 740E                    	je .L_lambda_simple_params_end_0031
  8108 00004FD7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8109 00004FDC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8110 00004FE0 48FFC6                  	inc rsi
  8111 00004FE3 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8112                                  .L_lambda_simple_params_end_0031:
  8113 00004FE5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8114 00004FE8 4889C3                  	mov rbx, rax
  8115 00004FEB 58                      	pop rax
  8116 00004FEC C60004                  	mov byte [rax], T_closure
  8117 00004FEF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8118 00004FF3 48C74009[00500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8119 00004FFB E960010000              	jmp .L_lambda_simple_end_0031
  8120                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8121 00005000 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8122 00005006 740B                    	je .L_lambda_simple_arity_check_ok_0031
  8123 00005008 FF742410                	push qword [rsp + 8 * 2]
  8124 0000500C 6A03                    	push 3
  8125 0000500E E9C8FE0000              	jmp L_error_incorrect_arity_simple
  8126                                  .L_lambda_simple_arity_check_ok_0031:
  8127 00005013 C8000000                	enter 0, 0
  8128                                  	; preparing a non-tail-call
  8129 00005017 488B4530                	mov rax, PARAM(2)	; param ss
  8130 0000501B 50                      	push rax
  8131 0000501C 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8132 00005024 803805                  	cmp byte [rax], T_undefined
  8133 00005027 0F84C8FD0000            	je L_error_fvar_undefined
  8134 0000502D 50                      	push rax
  8135 0000502E 6A02                    	push 2	; arg count
  8136 00005030 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8137 00005038 803805                  	cmp byte [rax], T_undefined
  8138 0000503B 0F84B4FD0000            	je L_error_fvar_undefined
  8139 00005041 803804                  	cmp byte [rax], T_closure
  8140 00005044 0F852FFE0000            	jne L_error_non_closure
  8141 0000504A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8142 0000504D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8143 00005050 483D[02000000]          	cmp rax, sob_boolean_false
  8144 00005056 7409                    	je .L_if_else_000f
  8145 00005058 488B4528                	mov rax, PARAM(1)	; param unit
  8146 0000505C E9FB000000              	jmp .L_if_end_000f
  8147                                  .L_if_else_000f:
  8148                                  	; Initiating tail-call optimization
  8149                                  	; preparing a non-tail-call
  8150 00005061 488B4530                	mov rax, PARAM(2)	; param ss
  8151 00005065 50                      	push rax
  8152 00005066 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8153 0000506E 803805                  	cmp byte [rax], T_undefined
  8154 00005071 0F847EFD0000            	je L_error_fvar_undefined
  8155 00005077 50                      	push rax
  8156 00005078 6A02                    	push 2	; arg count
  8157 0000507A 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8158 00005082 803805                  	cmp byte [rax], T_undefined
  8159 00005085 0F846AFD0000            	je L_error_fvar_undefined
  8160 0000508B 803804                  	cmp byte [rax], T_closure
  8161 0000508E 0F85E5FD0000            	jne L_error_non_closure
  8162 00005094 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8163 00005097 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8164 0000509A 50                      	push rax
  8165                                  	; preparing a non-tail-call
  8166                                  	; preparing a non-tail-call
  8167 0000509B 488B4530                	mov rax, PARAM(2)	; param ss
  8168 0000509F 50                      	push rax
  8169 000050A0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8170 000050A8 803805                  	cmp byte [rax], T_undefined
  8171 000050AB 0F8444FD0000            	je L_error_fvar_undefined
  8172 000050B1 50                      	push rax
  8173 000050B2 6A02                    	push 2	; arg count
  8174 000050B4 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8175 000050BC 803805                  	cmp byte [rax], T_undefined
  8176 000050BF 0F8430FD0000            	je L_error_fvar_undefined
  8177 000050C5 803804                  	cmp byte [rax], T_closure
  8178 000050C8 0F85ABFD0000            	jne L_error_non_closure
  8179 000050CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8180 000050D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8181 000050D4 50                      	push rax
  8182 000050D5 488B4528                	mov rax, PARAM(1)	; param unit
  8183 000050D9 50                      	push rax
  8184 000050DA 488B4520                	mov rax, PARAM(0)	; param f
  8185 000050DE 50                      	push rax
  8186 000050DF 6A03                    	push 3	; arg count
  8187 000050E1 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8188 000050E9 803805                  	cmp byte [rax], T_undefined
  8189 000050EC 0F8403FD0000            	je L_error_fvar_undefined
  8190 000050F2 803804                  	cmp byte [rax], T_closure
  8191 000050F5 0F857EFD0000            	jne L_error_non_closure
  8192 000050FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8193 000050FE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8194 00005101 50                      	push rax
  8195 00005102 488B4520                	mov rax, PARAM(0)	; param f
  8196 00005106 50                      	push rax
  8197 00005107 6A03                    	push 3	; Number of arguments
  8198 00005109 488B4510                	mov rax, ENV
  8199 0000510D 488B00                  	mov rax, qword [rax + 8 * 0]
  8200 00005110 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8201 00005113 488B00                  	mov rax, qword [rax]
  8202 00005116 803804                  	cmp byte [rax], T_closure
  8203 00005119 0F855AFD0000            	jne L_error_non_closure
  8204 0000511F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8205                                  
  8206                                  	; Reclaiming the current stack frame
  8207 00005122 FF7508                  	push qword [rbp + 8]
  8208 00005125 FF7500                  	push qword [rbp]
  8209 00005128 41BA07000000            	mov r10, 3 + 4
  8210 0000512E 4C8B4518                	mov r8, COUNT
  8211 00005132 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8212 00005137 4C8D4DF8                	lea r9, [rbp - 8]
  8213                                  .L_tc_recycle_frame_loop_002f:
  8214 0000513B 4983FA00                	cmp r10, 0
  8215 0000513F 7413                    	je .L_tc_recycle_frame_done_002f
  8216 00005141 4D8B19                  	mov r11, qword [r9]
  8217 00005144 4D8918                  	mov qword [r8], r11
  8218 00005147 49FFCA                  	dec r10
  8219 0000514A 4983E808                	sub r8, 8
  8220 0000514E 4983E908                	sub r9, 8
  8221 00005152 EBE7                    	jmp .L_tc_recycle_frame_loop_002f
  8222                                  .L_tc_recycle_frame_done_002f:
  8223 00005154 498D6008                	lea rsp, [r8 + 8]
  8224 00005158 5D                      	pop rbp
  8225 00005159 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8226                                  .L_if_end_000f:
  8227 0000515C C9                      	leave
  8228 0000515D C22800                  	ret AND_KILL_FRAME(3)
  8229                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8230 00005160 50                      	push rax
  8231 00005161 488B4520                	mov rax, PARAM(0)	; param run
  8232 00005165 8F00                    	pop qword [rax]
  8233 00005167 48B8-                   	mov rax, sob_void
  8233 00005169 [0000000000000000] 
  8234                                  
  8235 00005171 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8236 00005176 E8A7FD0000              	call malloc
  8237 0000517B 50                      	push rax
  8238 0000517C BF08000000              	mov rdi, 8 * 1	; new rib
  8239 00005181 E89CFD0000              	call malloc
  8240 00005186 50                      	push rax
  8241 00005187 BF10000000              	mov rdi, 8 * 2	; extended env
  8242 0000518C E891FD0000              	call malloc
  8243 00005191 488B7D10                	mov rdi, ENV
  8244 00005195 BE00000000              	mov rsi, 0
  8245 0000519A BA01000000              	mov rdx, 1
  8246                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8247 0000519F 4883FE01                	cmp rsi, 1
  8248 000051A3 7410                    	je .L_lambda_opt_env_end_0008
  8249 000051A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8250 000051A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8251 000051AD 48FFC6                  	inc rsi
  8252 000051B0 48FFC2                  	inc rdx
  8253 000051B3 EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8254                                  .L_lambda_opt_env_end_0008:
  8255 000051B5 5B                      	pop rbx
  8256 000051B6 BE00000000              	mov rsi, 0
  8257                                  .L_lambda_opt_params_loop_0008:	; copy params
  8258 000051BB 4883FE01                	cmp rsi, 1
  8259 000051BF 740E                    	je .L_lambda_opt_params_end_0008
  8260 000051C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8261 000051C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8262 000051CA 48FFC6                  	inc rsi
  8263 000051CD EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8264                                  .L_lambda_opt_params_end_0008:
  8265 000051CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8266 000051D2 4889C3                  	mov rbx, rax
  8267 000051D5 58                      	pop rax
  8268 000051D6 C60004                  	mov byte [rax], T_closure
  8269 000051D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8270 000051DD 48C74009[EA510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8271 000051E5 E963010000              	jmp .L_lambda_opt_end_0008
  8272                                  .L_lambda_opt_code_0008:
  8273 000051EA 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8274 000051EF 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8275 000051F3 7407                    	je .L_lambda_opt_arity_check_exact_0008	; Jump if arity matches
  8276 000051F5 7F4C                    	jg .L_lambda_opt_arity_check_more_0008	; Jump if more arguments passed
  8277 000051F7 E9F3FC0000              	jmp L_error_incorrect_arity_opt
  8278                                  .L_lambda_opt_arity_check_exact_0008:
  8279 000051FC 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8280 000051FF 4983C603                	add r14, 3 ; add 3 first stack values
  8281 00005203 41BF00000000            	mov r15, 0 ; r15 = index
  8282 00005209 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8283 0000520D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8284 00005215 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8285                                  .L_lambda_opt_stack_shrink_loop_0008:
  8286 00005217 4983FE00                	cmp r14, 0
  8287 0000521B 7E11                    	jle .L_make_lambda_opt_exact_finish_0008
  8288 0000521D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8289 00005222 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8290 00005226 49FFCE                  	dec r14 ; next loop value
  8291 00005229 49FFC7                  	inc r15 ; update i
  8292 0000522C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8293                                  .L_make_lambda_opt_exact_finish_0008:
  8294 0000522E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8295 00005236 49FFC2                  	inc r10
  8296 00005239 4C89542410              	mov qword [rsp + 8 * 2], r10
  8297 0000523E E99E000000              	jmp .L_lambda_opt_stack_adjusted_0008
  8298                                  .L_lambda_opt_arity_check_more_0008:
  8299 00005243 4D89D6                  	mov r14, r10 ; r14 = num args
  8300 00005246 4D89D7                  	mov r15, r10 ; r15 = num args
  8301 00005249 41B902000000            	mov r9, 2; r9 = number of params 
  8302 0000524F 4D29CE                  	sub r14, r9 ; r14 = extra args
  8303 00005252 4D01F1                  	add r9, r14 ; r9 = num args
  8304 00005255 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8304 00005257 [0100000000000000] 
  8305 0000525F EB00                    	jmp .L_make_lambda_opt_arg_list_0008
  8306                                  .L_make_lambda_opt_arg_list_0008:
  8307 00005261 4983FE00                	cmp r14, 0
  8308 00005265 7E25                    	jle .L_make_lambda_opt_stack_fixed_0008
  8309 00005267 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  8310 0000526C BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8311 00005271 E8ACFC0000              	call malloc                         ; Allocate memory, result in rax
  8312 00005276 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8313 00005279 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  8314 0000527D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8315 00005281 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8316 00005284 49FFC9                  	dec r9                              ; args index minus 1
  8317 00005287 49FFCE                  	dec r14                             ; next iteration
  8318 0000528A EBD5                    	jmp .L_make_lambda_opt_arg_list_0008
  8319                                  .L_make_lambda_opt_stack_fixed_0008:
  8320 0000528C 4D89FE                  	mov r14, r15 ; r14 = num args
  8321 0000528F 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8322 00005292 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8323 00005296 41BA02000000            	mov r10, 2; r10 = num of params
  8324 0000529C 4D29D6                  	sub r14, r10 ; r14 = extra args
  8325 0000529F 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8326 000052A2 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8327 000052A5 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  8328 000052AA EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0008
  8329                                  .L_lambda_opt_stack_shrink_loop_more_0008:
  8330 000052AC 4983F800                	cmp r8, 0
  8331 000052B0 7E15                    	jle .L_make_lambda_opt_more_finish_0008
  8332 000052B2 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  8333 000052B6 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8334 000052BA 4D8D26                  	lea r12, [r14]
  8335 000052BD 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  8336 000052C2 49FFC8                  	dec r8 ; next iteration
  8337 000052C5 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0008
  8338                                  .L_make_lambda_opt_more_finish_0008:
  8339 000052C7 4D89F8                  	mov r8, r15 ; num of args
  8340 000052CA 41BA02000000            	mov r10, 2
  8341 000052D0 4D29D0                  	sub r8, r10 ; num of new args
  8342 000052D3 49FFC0                  	inc r8
  8343 000052D6 4C89442420              	mov qword [rsp + 8 * 4], r8
  8344 000052DB 4883C410                	add rsp, 8 * 2  ; 
  8345 000052DF EB00                    	jmp .L_lambda_opt_stack_adjusted_0008
  8346                                  .L_lambda_opt_stack_adjusted_0008:
  8347 000052E1 C8000000                	enter 0, 0
  8348                                  	; Initiating tail-call optimization
  8349 000052E5 488B4530                	mov rax, PARAM(2)	; param ss
  8350 000052E9 50                      	push rax
  8351 000052EA 488B4528                	mov rax, PARAM(1)	; param unit
  8352 000052EE 50                      	push rax
  8353 000052EF 488B4520                	mov rax, PARAM(0)	; param f
  8354 000052F3 50                      	push rax
  8355 000052F4 6A03                    	push 3	; Number of arguments
  8356 000052F6 488B4510                	mov rax, ENV
  8357 000052FA 488B00                  	mov rax, qword [rax + 8 * 0]
  8358 000052FD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8359 00005300 488B00                  	mov rax, qword [rax]
  8360 00005303 803804                  	cmp byte [rax], T_closure
  8361 00005306 0F856DFB0000            	jne L_error_non_closure
  8362 0000530C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8363                                  
  8364                                  	; Reclaiming the current stack frame
  8365 0000530F FF7508                  	push qword [rbp + 8]
  8366 00005312 FF7500                  	push qword [rbp]
  8367 00005315 41BA07000000            	mov r10, 3 + 4
  8368 0000531B 4C8B4518                	mov r8, COUNT
  8369 0000531F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8370 00005324 4C8D4DF8                	lea r9, [rbp - 8]
  8371                                  .L_tc_recycle_frame_loop_0030:
  8372 00005328 4983FA00                	cmp r10, 0
  8373 0000532C 7413                    	je .L_tc_recycle_frame_done_0030
  8374 0000532E 4D8B19                  	mov r11, qword [r9]
  8375 00005331 4D8918                  	mov qword [r8], r11
  8376 00005334 49FFCA                  	dec r10
  8377 00005337 4983E808                	sub r8, 8
  8378 0000533B 4983E908                	sub r9, 8
  8379 0000533F EBE7                    	jmp .L_tc_recycle_frame_loop_0030
  8380                                  .L_tc_recycle_frame_done_0030:
  8381 00005341 498D6008                	lea rsp, [r8 + 8]
  8382 00005345 5D                      	pop rbp
  8383 00005346 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8384 00005349 C9                      	leave
  8385 0000534A C22800                  	ret AND_KILL_FRAME(3)
  8386                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8387 0000534D C9                      	leave
  8388 0000534E C21800                  	ret AND_KILL_FRAME(1)
  8389                                  .L_lambda_simple_end_0030:	; new closure is in rax
  8390 00005351 803804                  	cmp byte [rax], T_closure
  8391 00005354 0F851FFB0000            	jne L_error_non_closure
  8392 0000535A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8393 0000535D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8394 00005360 48890425[6A130000]      	mov qword [free_var_85], rax
  8395 00005368 48B8-                   	mov rax, sob_void
  8395 0000536A [0000000000000000] 
  8396                                  
  8397 00005372 4889C7                  	mov rdi, rax
  8398 00005375 E8FDFD0000              	call print_sexpr_if_not_void
  8399                                  	; preparing a non-tail-call
  8400 0000537A 48B8-                   	mov rax, L_constants + 2007
  8400 0000537C [D707000000000000] 
  8401 00005384 50                      	push rax
  8402 00005385 6A01                    	push 1	; arg count
  8403 00005387 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8404 0000538C E891FB0000              	call malloc
  8405 00005391 50                      	push rax
  8406 00005392 BF00000000              	mov rdi, 8 * 0	; new rib
  8407 00005397 E886FB0000              	call malloc
  8408 0000539C 50                      	push rax
  8409 0000539D BF08000000              	mov rdi, 8 * 1	; extended env
  8410 000053A2 E87BFB0000              	call malloc
  8411 000053A7 488B7D10                	mov rdi, ENV
  8412 000053AB BE00000000              	mov rsi, 0
  8413 000053B0 BA01000000              	mov rdx, 1
  8414                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8415 000053B5 4883FE00                	cmp rsi, 0
  8416 000053B9 7410                    	je .L_lambda_simple_env_end_0032
  8417 000053BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8418 000053BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8419 000053C3 48FFC6                  	inc rsi
  8420 000053C6 48FFC2                  	inc rdx
  8421 000053C9 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8422                                  .L_lambda_simple_env_end_0032:
  8423 000053CB 5B                      	pop rbx
  8424 000053CC BE00000000              	mov rsi, 0
  8425                                  .L_lambda_simple_params_loop_0032:	; copy params
  8426 000053D1 4883FE00                	cmp rsi, 0
  8427 000053D5 740E                    	je .L_lambda_simple_params_end_0032
  8428 000053D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8429 000053DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8430 000053E0 48FFC6                  	inc rsi
  8431 000053E3 EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8432                                  .L_lambda_simple_params_end_0032:
  8433 000053E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8434 000053E8 4889C3                  	mov rbx, rax
  8435 000053EB 58                      	pop rax
  8436 000053EC C60004                  	mov byte [rax], T_closure
  8437 000053EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8438 000053F3 48C74009[00540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8439 000053FB E951040000              	jmp .L_lambda_simple_end_0032
  8440                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8441 00005400 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8442 00005406 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8443 00005408 FF742410                	push qword [rsp + 8 * 2]
  8444 0000540C 6A01                    	push 1
  8445 0000540E E9C8FA0000              	jmp L_error_incorrect_arity_simple
  8446                                  .L_lambda_simple_arity_check_ok_0032:
  8447 00005413 C8000000                	enter 0, 0
  8448 00005417 BF08000000              	mov rdi, 8 * 1
  8449 0000541C E801FB0000              	call malloc
  8450 00005421 488B5D20                	mov rbx, PARAM(0)
  8451 00005425 488918                  	mov qword [rax], rbx
  8452 00005428 48894520                	mov PARAM(0), rax
  8453 0000542C 48B8-                   	mov rax, sob_void
  8453 0000542E [0000000000000000] 
  8454                                  
  8455 00005436 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8456 0000543B E8E2FA0000              	call malloc
  8457 00005440 50                      	push rax
  8458 00005441 BF08000000              	mov rdi, 8 * 1	; new rib
  8459 00005446 E8D7FA0000              	call malloc
  8460 0000544B 50                      	push rax
  8461 0000544C BF10000000              	mov rdi, 8 * 2	; extended env
  8462 00005451 E8CCFA0000              	call malloc
  8463 00005456 488B7D10                	mov rdi, ENV
  8464 0000545A BE00000000              	mov rsi, 0
  8465 0000545F BA01000000              	mov rdx, 1
  8466                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8467 00005464 4883FE01                	cmp rsi, 1
  8468 00005468 7410                    	je .L_lambda_simple_env_end_0033
  8469 0000546A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8470 0000546E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8471 00005472 48FFC6                  	inc rsi
  8472 00005475 48FFC2                  	inc rdx
  8473 00005478 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8474                                  .L_lambda_simple_env_end_0033:
  8475 0000547A 5B                      	pop rbx
  8476 0000547B BE00000000              	mov rsi, 0
  8477                                  .L_lambda_simple_params_loop_0033:	; copy params
  8478 00005480 4883FE01                	cmp rsi, 1
  8479 00005484 740E                    	je .L_lambda_simple_params_end_0033
  8480 00005486 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8481 0000548B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8482 0000548F 48FFC6                  	inc rsi
  8483 00005492 EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8484                                  .L_lambda_simple_params_end_0033:
  8485 00005494 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8486 00005497 4889C3                  	mov rbx, rax
  8487 0000549A 58                      	pop rax
  8488 0000549B C60004                  	mov byte [rax], T_closure
  8489 0000549E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8490 000054A2 48C74009[AF540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8491 000054AA E9B1010000              	jmp .L_lambda_simple_end_0033
  8492                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8493 000054AF 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8494 000054B5 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8495 000054B7 FF742410                	push qword [rsp + 8 * 2]
  8496 000054BB 6A03                    	push 3
  8497 000054BD E919FA0000              	jmp L_error_incorrect_arity_simple
  8498                                  .L_lambda_simple_arity_check_ok_0033:
  8499 000054C2 C8000000                	enter 0, 0
  8500                                  	; preparing a non-tail-call
  8501 000054C6 488B4530                	mov rax, PARAM(2)	; param ss
  8502 000054CA 50                      	push rax
  8503 000054CB 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8504 000054D3 803805                  	cmp byte [rax], T_undefined
  8505 000054D6 0F8419F90000            	je L_error_fvar_undefined
  8506 000054DC 50                      	push rax
  8507 000054DD 6A02                    	push 2	; arg count
  8508 000054DF 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8509 000054E7 803805                  	cmp byte [rax], T_undefined
  8510 000054EA 0F8405F90000            	je L_error_fvar_undefined
  8511 000054F0 803804                  	cmp byte [rax], T_closure
  8512 000054F3 0F8580F90000            	jne L_error_non_closure
  8513 000054F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8514 000054FC FF5009                  	call SOB_CLOSURE_CODE(rax)
  8515 000054FF 483D[02000000]          	cmp rax, sob_boolean_false
  8516 00005505 7409                    	je .L_if_else_0010
  8517 00005507 488B4528                	mov rax, PARAM(1)	; param unit
  8518 0000550B E94C010000              	jmp .L_if_end_0010
  8519                                  .L_if_else_0010:
  8520                                  	; Initiating tail-call optimization
  8521                                  	; preparing a non-tail-call
  8522                                  	; preparing a non-tail-call
  8523 00005510 48B8-                   	mov rax, L_constants + 1
  8523 00005512 [0100000000000000] 
  8524 0000551A 50                      	push rax
  8525                                  	; preparing a non-tail-call
  8526                                  	; preparing a non-tail-call
  8527 0000551B 488B4530                	mov rax, PARAM(2)	; param ss
  8528 0000551F 50                      	push rax
  8529 00005520 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8530 00005528 803805                  	cmp byte [rax], T_undefined
  8531 0000552B 0F84C4F80000            	je L_error_fvar_undefined
  8532 00005531 50                      	push rax
  8533 00005532 6A02                    	push 2	; arg count
  8534 00005534 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8535 0000553C 803805                  	cmp byte [rax], T_undefined
  8536 0000553F 0F84B0F80000            	je L_error_fvar_undefined
  8537 00005545 803804                  	cmp byte [rax], T_closure
  8538 00005548 0F852BF90000            	jne L_error_non_closure
  8539 0000554E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8540 00005551 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8541 00005554 50                      	push rax
  8542 00005555 488B4528                	mov rax, PARAM(1)	; param unit
  8543 00005559 50                      	push rax
  8544 0000555A 488B4520                	mov rax, PARAM(0)	; param f
  8545 0000555E 50                      	push rax
  8546 0000555F 6A03                    	push 3	; arg count
  8547 00005561 488B4510                	mov rax, ENV
  8548 00005565 488B00                  	mov rax, qword [rax + 8 * 0]
  8549 00005568 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8550 0000556B 488B00                  	mov rax, qword [rax]
  8551 0000556E 803804                  	cmp byte [rax], T_closure
  8552 00005571 0F8502F90000            	jne L_error_non_closure
  8553 00005577 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8554 0000557A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8555 0000557D 50                      	push rax
  8556 0000557E 6A02                    	push 2	; arg count
  8557 00005580 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  8558 00005588 803805                  	cmp byte [rax], T_undefined
  8559 0000558B 0F8464F80000            	je L_error_fvar_undefined
  8560 00005591 803804                  	cmp byte [rax], T_closure
  8561 00005594 0F85DFF80000            	jne L_error_non_closure
  8562 0000559A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8563 0000559D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8564 000055A0 50                      	push rax
  8565                                  	; preparing a non-tail-call
  8566 000055A1 488B4530                	mov rax, PARAM(2)	; param ss
  8567 000055A5 50                      	push rax
  8568 000055A6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8569 000055AE 803805                  	cmp byte [rax], T_undefined
  8570 000055B1 0F843EF80000            	je L_error_fvar_undefined
  8571 000055B7 50                      	push rax
  8572 000055B8 6A02                    	push 2	; arg count
  8573 000055BA 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8574 000055C2 803805                  	cmp byte [rax], T_undefined
  8575 000055C5 0F842AF80000            	je L_error_fvar_undefined
  8576 000055CB 803804                  	cmp byte [rax], T_closure
  8577 000055CE 0F85A5F80000            	jne L_error_non_closure
  8578 000055D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8579 000055D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8580 000055DA 50                      	push rax
  8581 000055DB 6A02                    	push 2	; arg count
  8582 000055DD 488B0425[E50F0000]      	mov rax, qword [free_var_32]	; free var append
  8583 000055E5 803805                  	cmp byte [rax], T_undefined
  8584 000055E8 0F8407F80000            	je L_error_fvar_undefined
  8585 000055EE 803804                  	cmp byte [rax], T_closure
  8586 000055F1 0F8582F80000            	jne L_error_non_closure
  8587 000055F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8588 000055FA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8589 000055FD 50                      	push rax
  8590 000055FE 488B4520                	mov rax, PARAM(0)	; param f
  8591 00005602 50                      	push rax
  8592 00005603 6A02                    	push 2	; Number of arguments
  8593 00005605 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8594 0000560D 803805                  	cmp byte [rax], T_undefined
  8595 00005610 0F84DFF70000            	je L_error_fvar_undefined
  8596 00005616 803804                  	cmp byte [rax], T_closure
  8597 00005619 0F855AF80000            	jne L_error_non_closure
  8598 0000561F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8599                                  
  8600                                  	; Reclaiming the current stack frame
  8601 00005622 FF7508                  	push qword [rbp + 8]
  8602 00005625 FF7500                  	push qword [rbp]
  8603 00005628 41BA06000000            	mov r10, 2 + 4
  8604 0000562E 4C8B4518                	mov r8, COUNT
  8605 00005632 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8606 00005637 4C8D4DF8                	lea r9, [rbp - 8]
  8607                                  .L_tc_recycle_frame_loop_0031:
  8608 0000563B 4983FA00                	cmp r10, 0
  8609 0000563F 7413                    	je .L_tc_recycle_frame_done_0031
  8610 00005641 4D8B19                  	mov r11, qword [r9]
  8611 00005644 4D8918                  	mov qword [r8], r11
  8612 00005647 49FFCA                  	dec r10
  8613 0000564A 4983E808                	sub r8, 8
  8614 0000564E 4983E908                	sub r9, 8
  8615 00005652 EBE7                    	jmp .L_tc_recycle_frame_loop_0031
  8616                                  .L_tc_recycle_frame_done_0031:
  8617 00005654 498D6008                	lea rsp, [r8 + 8]
  8618 00005658 5D                      	pop rbp
  8619 00005659 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8620                                  .L_if_end_0010:
  8621 0000565C C9                      	leave
  8622 0000565D C22800                  	ret AND_KILL_FRAME(3)
  8623                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8624 00005660 50                      	push rax
  8625 00005661 488B4520                	mov rax, PARAM(0)	; param run
  8626 00005665 8F00                    	pop qword [rax]
  8627 00005667 48B8-                   	mov rax, sob_void
  8627 00005669 [0000000000000000] 
  8628                                  
  8629 00005671 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8630 00005676 E8A7F80000              	call malloc
  8631 0000567B 50                      	push rax
  8632 0000567C BF08000000              	mov rdi, 8 * 1	; new rib
  8633 00005681 E89CF80000              	call malloc
  8634 00005686 50                      	push rax
  8635 00005687 BF10000000              	mov rdi, 8 * 2	; extended env
  8636 0000568C E891F80000              	call malloc
  8637 00005691 488B7D10                	mov rdi, ENV
  8638 00005695 BE00000000              	mov rsi, 0
  8639 0000569A BA01000000              	mov rdx, 1
  8640                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  8641 0000569F 4883FE01                	cmp rsi, 1
  8642 000056A3 7410                    	je .L_lambda_opt_env_end_0009
  8643 000056A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8644 000056A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8645 000056AD 48FFC6                  	inc rsi
  8646 000056B0 48FFC2                  	inc rdx
  8647 000056B3 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8648                                  .L_lambda_opt_env_end_0009:
  8649 000056B5 5B                      	pop rbx
  8650 000056B6 BE00000000              	mov rsi, 0
  8651                                  .L_lambda_opt_params_loop_0009:	; copy params
  8652 000056BB 4883FE01                	cmp rsi, 1
  8653 000056BF 740E                    	je .L_lambda_opt_params_end_0009
  8654 000056C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8655 000056C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8656 000056CA 48FFC6                  	inc rsi
  8657 000056CD EBEC                    	jmp .L_lambda_opt_params_loop_0009
  8658                                  .L_lambda_opt_params_end_0009:
  8659 000056CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8660 000056D2 4889C3                  	mov rbx, rax
  8661 000056D5 58                      	pop rax
  8662 000056D6 C60004                  	mov byte [rax], T_closure
  8663 000056D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8664 000056DD 48C74009[EA560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8665 000056E5 E963010000              	jmp .L_lambda_opt_end_0009
  8666                                  .L_lambda_opt_code_0009:
  8667 000056EA 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8668 000056EF 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8669 000056F3 7407                    	je .L_lambda_opt_arity_check_exact_0009	; Jump if arity matches
  8670 000056F5 7F4C                    	jg .L_lambda_opt_arity_check_more_0009	; Jump if more arguments passed
  8671 000056F7 E9F3F70000              	jmp L_error_incorrect_arity_opt
  8672                                  .L_lambda_opt_arity_check_exact_0009:
  8673 000056FC 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8674 000056FF 4983C603                	add r14, 3 ; add 3 first stack values
  8675 00005703 41BF00000000            	mov r15, 0 ; r15 = index
  8676 00005709 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8677 0000570D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8678 00005715 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8679                                  .L_lambda_opt_stack_shrink_loop_0009:
  8680 00005717 4983FE00                	cmp r14, 0
  8681 0000571B 7E11                    	jle .L_make_lambda_opt_exact_finish_0009
  8682 0000571D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8683 00005722 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8684 00005726 49FFCE                  	dec r14 ; next loop value
  8685 00005729 49FFC7                  	inc r15 ; update i
  8686 0000572C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8687                                  .L_make_lambda_opt_exact_finish_0009:
  8688 0000572E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8689 00005736 49FFC2                  	inc r10
  8690 00005739 4C89542410              	mov qword [rsp + 8 * 2], r10
  8691 0000573E E99E000000              	jmp .L_lambda_opt_stack_adjusted_0009
  8692                                  .L_lambda_opt_arity_check_more_0009:
  8693 00005743 4D89D6                  	mov r14, r10 ; r14 = num args
  8694 00005746 4D89D7                  	mov r15, r10 ; r15 = num args
  8695 00005749 41B902000000            	mov r9, 2; r9 = number of params 
  8696 0000574F 4D29CE                  	sub r14, r9 ; r14 = extra args
  8697 00005752 4D01F1                  	add r9, r14 ; r9 = num args
  8698 00005755 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8698 00005757 [0100000000000000] 
  8699 0000575F EB00                    	jmp .L_make_lambda_opt_arg_list_0009
  8700                                  .L_make_lambda_opt_arg_list_0009:
  8701 00005761 4983FE00                	cmp r14, 0
  8702 00005765 7E25                    	jle .L_make_lambda_opt_stack_fixed_0009
  8703 00005767 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  8704 0000576C BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8705 00005771 E8ACF70000              	call malloc                         ; Allocate memory, result in rax
  8706 00005776 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8707 00005779 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  8708 0000577D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8709 00005781 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8710 00005784 49FFC9                  	dec r9                              ; args index minus 1
  8711 00005787 49FFCE                  	dec r14                             ; next iteration
  8712 0000578A EBD5                    	jmp .L_make_lambda_opt_arg_list_0009
  8713                                  .L_make_lambda_opt_stack_fixed_0009:
  8714 0000578C 4D89FE                  	mov r14, r15 ; r14 = num args
  8715 0000578F 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8716 00005792 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8717 00005796 41BA02000000            	mov r10, 2; r10 = num of params
  8718 0000579C 4D29D6                  	sub r14, r10 ; r14 = extra args
  8719 0000579F 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8720 000057A2 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8721 000057A5 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  8722 000057AA EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0009
  8723                                  .L_lambda_opt_stack_shrink_loop_more_0009:
  8724 000057AC 4983F800                	cmp r8, 0
  8725 000057B0 7E15                    	jle .L_make_lambda_opt_more_finish_0009
  8726 000057B2 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  8727 000057B6 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8728 000057BA 4D8D26                  	lea r12, [r14]
  8729 000057BD 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  8730 000057C2 49FFC8                  	dec r8 ; next iteration
  8731 000057C5 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0009
  8732                                  .L_make_lambda_opt_more_finish_0009:
  8733 000057C7 4D89F8                  	mov r8, r15 ; num of args
  8734 000057CA 41BA02000000            	mov r10, 2
  8735 000057D0 4D29D0                  	sub r8, r10 ; num of new args
  8736 000057D3 49FFC0                  	inc r8
  8737 000057D6 4C89442420              	mov qword [rsp + 8 * 4], r8
  8738 000057DB 4883C410                	add rsp, 8 * 2  ; 
  8739 000057DF EB00                    	jmp .L_lambda_opt_stack_adjusted_0009
  8740                                  .L_lambda_opt_stack_adjusted_0009:
  8741 000057E1 C8000000                	enter 0, 0
  8742                                  	; Initiating tail-call optimization
  8743 000057E5 488B4530                	mov rax, PARAM(2)	; param ss
  8744 000057E9 50                      	push rax
  8745 000057EA 488B4528                	mov rax, PARAM(1)	; param unit
  8746 000057EE 50                      	push rax
  8747 000057EF 488B4520                	mov rax, PARAM(0)	; param f
  8748 000057F3 50                      	push rax
  8749 000057F4 6A03                    	push 3	; Number of arguments
  8750 000057F6 488B4510                	mov rax, ENV
  8751 000057FA 488B00                  	mov rax, qword [rax + 8 * 0]
  8752 000057FD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8753 00005800 488B00                  	mov rax, qword [rax]
  8754 00005803 803804                  	cmp byte [rax], T_closure
  8755 00005806 0F856DF60000            	jne L_error_non_closure
  8756 0000580C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8757                                  
  8758                                  	; Reclaiming the current stack frame
  8759 0000580F FF7508                  	push qword [rbp + 8]
  8760 00005812 FF7500                  	push qword [rbp]
  8761 00005815 41BA07000000            	mov r10, 3 + 4
  8762 0000581B 4C8B4518                	mov r8, COUNT
  8763 0000581F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8764 00005824 4C8D4DF8                	lea r9, [rbp - 8]
  8765                                  .L_tc_recycle_frame_loop_0032:
  8766 00005828 4983FA00                	cmp r10, 0
  8767 0000582C 7413                    	je .L_tc_recycle_frame_done_0032
  8768 0000582E 4D8B19                  	mov r11, qword [r9]
  8769 00005831 4D8918                  	mov qword [r8], r11
  8770 00005834 49FFCA                  	dec r10
  8771 00005837 4983E808                	sub r8, 8
  8772 0000583B 4983E908                	sub r9, 8
  8773 0000583F EBE7                    	jmp .L_tc_recycle_frame_loop_0032
  8774                                  .L_tc_recycle_frame_done_0032:
  8775 00005841 498D6008                	lea rsp, [r8 + 8]
  8776 00005845 5D                      	pop rbp
  8777 00005846 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8778 00005849 C9                      	leave
  8779 0000584A C22800                  	ret AND_KILL_FRAME(3)
  8780                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8781 0000584D C9                      	leave
  8782 0000584E C21800                  	ret AND_KILL_FRAME(1)
  8783                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8784 00005851 803804                  	cmp byte [rax], T_closure
  8785 00005854 0F851FF60000            	jne L_error_non_closure
  8786 0000585A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8787 0000585D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8788 00005860 48890425[7B130000]      	mov qword [free_var_86], rax
  8789 00005868 48B8-                   	mov rax, sob_void
  8789 0000586A [0000000000000000] 
  8790                                  
  8791 00005872 4889C7                  	mov rdi, rax
  8792 00005875 E8FDF80000              	call print_sexpr_if_not_void
  8793                                  	; preparing a non-tail-call
  8794 0000587A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8795 0000587F E89EF60000              	call malloc
  8796 00005884 50                      	push rax
  8797 00005885 BF00000000              	mov rdi, 8 * 0	; new rib
  8798 0000588A E893F60000              	call malloc
  8799 0000588F 50                      	push rax
  8800 00005890 BF08000000              	mov rdi, 8 * 1	; extended env
  8801 00005895 E888F60000              	call malloc
  8802 0000589A 488B7D10                	mov rdi, ENV
  8803 0000589E BE00000000              	mov rsi, 0
  8804 000058A3 BA01000000              	mov rdx, 1
  8805                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8806 000058A8 4883FE00                	cmp rsi, 0
  8807 000058AC 7410                    	je .L_lambda_simple_env_end_0034
  8808 000058AE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8809 000058B2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8810 000058B6 48FFC6                  	inc rsi
  8811 000058B9 48FFC2                  	inc rdx
  8812 000058BC EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8813                                  .L_lambda_simple_env_end_0034:
  8814 000058BE 5B                      	pop rbx
  8815 000058BF BE00000000              	mov rsi, 0
  8816                                  .L_lambda_simple_params_loop_0034:	; copy params
  8817 000058C4 4883FE00                	cmp rsi, 0
  8818 000058C8 740E                    	je .L_lambda_simple_params_end_0034
  8819 000058CA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8820 000058CF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8821 000058D3 48FFC6                  	inc rsi
  8822 000058D6 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8823                                  .L_lambda_simple_params_end_0034:
  8824 000058D8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8825 000058DB 4889C3                  	mov rbx, rax
  8826 000058DE 58                      	pop rax
  8827 000058DF C60004                  	mov byte [rax], T_closure
  8828 000058E2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8829 000058E6 48C74009[F3580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8830 000058EE E98A000000              	jmp .L_lambda_simple_end_0034
  8831                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8832 000058F3 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8833 000058F9 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8834 000058FB FF742410                	push qword [rsp + 8 * 2]
  8835 000058FF 6A00                    	push 0
  8836 00005901 E9D5F50000              	jmp L_error_incorrect_arity_simple
  8837                                  .L_lambda_simple_arity_check_ok_0034:
  8838 00005906 C8000000                	enter 0, 0
  8839                                  	; Initiating tail-call optimization
  8840 0000590A 48B8-                   	mov rax, L_constants + 2187
  8840 0000590C [8B08000000000000] 
  8841 00005914 50                      	push rax
  8842 00005915 48B8-                   	mov rax, L_constants + 2178
  8842 00005917 [8208000000000000] 
  8843 0000591F 50                      	push rax
  8844 00005920 6A02                    	push 2	; Number of arguments
  8845 00005922 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  8846 0000592A 803805                  	cmp byte [rax], T_undefined
  8847 0000592D 0F84C2F40000            	je L_error_fvar_undefined
  8848 00005933 803804                  	cmp byte [rax], T_closure
  8849 00005936 0F853DF50000            	jne L_error_non_closure
  8850 0000593C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8851                                  
  8852                                  	; Reclaiming the current stack frame
  8853 0000593F FF7508                  	push qword [rbp + 8]
  8854 00005942 FF7500                  	push qword [rbp]
  8855 00005945 41BA06000000            	mov r10, 2 + 4
  8856 0000594B 4C8B4518                	mov r8, COUNT
  8857 0000594F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8858 00005954 4C8D4DF8                	lea r9, [rbp - 8]
  8859                                  .L_tc_recycle_frame_loop_0033:
  8860 00005958 4983FA00                	cmp r10, 0
  8861 0000595C 7413                    	je .L_tc_recycle_frame_done_0033
  8862 0000595E 4D8B19                  	mov r11, qword [r9]
  8863 00005961 4D8918                  	mov qword [r8], r11
  8864 00005964 49FFCA                  	dec r10
  8865 00005967 4983E808                	sub r8, 8
  8866 0000596B 4983E908                	sub r9, 8
  8867 0000596F EBE7                    	jmp .L_tc_recycle_frame_loop_0033
  8868                                  .L_tc_recycle_frame_done_0033:
  8869 00005971 498D6008                	lea rsp, [r8 + 8]
  8870 00005975 5D                      	pop rbp
  8871 00005976 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8872 00005979 C9                      	leave
  8873 0000597A C21000                  	ret AND_KILL_FRAME(0)
  8874                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8875 0000597D 50                      	push rax
  8876 0000597E 6A01                    	push 1	; arg count
  8877 00005980 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8878 00005985 E898F50000              	call malloc
  8879 0000598A 50                      	push rax
  8880 0000598B BF00000000              	mov rdi, 8 * 0	; new rib
  8881 00005990 E88DF50000              	call malloc
  8882 00005995 50                      	push rax
  8883 00005996 BF08000000              	mov rdi, 8 * 1	; extended env
  8884 0000599B E882F50000              	call malloc
  8885 000059A0 488B7D10                	mov rdi, ENV
  8886 000059A4 BE00000000              	mov rsi, 0
  8887 000059A9 BA01000000              	mov rdx, 1
  8888                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8889 000059AE 4883FE00                	cmp rsi, 0
  8890 000059B2 7410                    	je .L_lambda_simple_env_end_0035
  8891 000059B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8892 000059B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8893 000059BC 48FFC6                  	inc rsi
  8894 000059BF 48FFC2                  	inc rdx
  8895 000059C2 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8896                                  .L_lambda_simple_env_end_0035:
  8897 000059C4 5B                      	pop rbx
  8898 000059C5 BE00000000              	mov rsi, 0
  8899                                  .L_lambda_simple_params_loop_0035:	; copy params
  8900 000059CA 4883FE00                	cmp rsi, 0
  8901 000059CE 740E                    	je .L_lambda_simple_params_end_0035
  8902 000059D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8903 000059D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8904 000059D9 48FFC6                  	inc rsi
  8905 000059DC EBEC                    	jmp .L_lambda_simple_params_loop_0035
  8906                                  .L_lambda_simple_params_end_0035:
  8907 000059DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8908 000059E1 4889C3                  	mov rbx, rax
  8909 000059E4 58                      	pop rax
  8910 000059E5 C60004                  	mov byte [rax], T_closure
  8911 000059E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8912 000059EC 48C74009[F9590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  8913 000059F4 E9950B0000              	jmp .L_lambda_simple_end_0035
  8914                                  .L_lambda_simple_code_0035:	; lambda-simple body
  8915 000059F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8916 000059FF 740B                    	je .L_lambda_simple_arity_check_ok_0035
  8917 00005A01 FF742410                	push qword [rsp + 8 * 2]
  8918 00005A05 6A01                    	push 1
  8919 00005A07 E9CFF40000              	jmp L_error_incorrect_arity_simple
  8920                                  .L_lambda_simple_arity_check_ok_0035:
  8921 00005A0C C8000000                	enter 0, 0
  8922                                  	; Initiating tail-call optimization
  8923 00005A10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8924 00005A15 E808F50000              	call malloc
  8925 00005A1A 50                      	push rax
  8926 00005A1B BF08000000              	mov rdi, 8 * 1	; new rib
  8927 00005A20 E8FDF40000              	call malloc
  8928 00005A25 50                      	push rax
  8929 00005A26 BF10000000              	mov rdi, 8 * 2	; extended env
  8930 00005A2B E8F2F40000              	call malloc
  8931 00005A30 488B7D10                	mov rdi, ENV
  8932 00005A34 BE00000000              	mov rsi, 0
  8933 00005A39 BA01000000              	mov rdx, 1
  8934                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  8935 00005A3E 4883FE01                	cmp rsi, 1
  8936 00005A42 7410                    	je .L_lambda_simple_env_end_0036
  8937 00005A44 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8938 00005A48 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8939 00005A4C 48FFC6                  	inc rsi
  8940 00005A4F 48FFC2                  	inc rdx
  8941 00005A52 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  8942                                  .L_lambda_simple_env_end_0036:
  8943 00005A54 5B                      	pop rbx
  8944 00005A55 BE00000000              	mov rsi, 0
  8945                                  .L_lambda_simple_params_loop_0036:	; copy params
  8946 00005A5A 4883FE01                	cmp rsi, 1
  8947 00005A5E 740E                    	je .L_lambda_simple_params_end_0036
  8948 00005A60 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8949 00005A65 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8950 00005A69 48FFC6                  	inc rsi
  8951 00005A6C EBEC                    	jmp .L_lambda_simple_params_loop_0036
  8952                                  .L_lambda_simple_params_end_0036:
  8953 00005A6E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8954 00005A71 4889C3                  	mov rbx, rax
  8955 00005A74 58                      	pop rax
  8956 00005A75 C60004                  	mov byte [rax], T_closure
  8957 00005A78 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8958 00005A7C 48C74009[895A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  8959 00005A84 E938080000              	jmp .L_lambda_simple_end_0036
  8960                                  .L_lambda_simple_code_0036:	; lambda-simple body
  8961 00005A89 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8962 00005A8F 740B                    	je .L_lambda_simple_arity_check_ok_0036
  8963 00005A91 FF742410                	push qword [rsp + 8 * 2]
  8964 00005A95 6A02                    	push 2
  8965 00005A97 E93FF40000              	jmp L_error_incorrect_arity_simple
  8966                                  .L_lambda_simple_arity_check_ok_0036:
  8967 00005A9C C8000000                	enter 0, 0
  8968                                  	; preparing a non-tail-call
  8969 00005AA0 488B4520                	mov rax, PARAM(0)	; param a
  8970 00005AA4 50                      	push rax
  8971 00005AA5 6A01                    	push 1	; arg count
  8972 00005AA7 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8973 00005AAF 803805                  	cmp byte [rax], T_undefined
  8974 00005AB2 0F843DF30000            	je L_error_fvar_undefined
  8975 00005AB8 803804                  	cmp byte [rax], T_closure
  8976 00005ABB 0F85B8F30000            	jne L_error_non_closure
  8977 00005AC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8978 00005AC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8979 00005AC7 483D[02000000]          	cmp rax, sob_boolean_false
  8980 00005ACD 0F8467020000            	je .L_if_else_001c
  8981                                  	; preparing a non-tail-call
  8982 00005AD3 488B4528                	mov rax, PARAM(1)	; param b
  8983 00005AD7 50                      	push rax
  8984 00005AD8 6A01                    	push 1	; arg count
  8985 00005ADA 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8986 00005AE2 803805                  	cmp byte [rax], T_undefined
  8987 00005AE5 0F840AF30000            	je L_error_fvar_undefined
  8988 00005AEB 803804                  	cmp byte [rax], T_closure
  8989 00005AEE 0F8585F30000            	jne L_error_non_closure
  8990 00005AF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8991 00005AF7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8992 00005AFA 483D[02000000]          	cmp rax, sob_boolean_false
  8993 00005B00 7468                    	je .L_if_else_0013
  8994                                  	; Initiating tail-call optimization
  8995 00005B02 488B4528                	mov rax, PARAM(1)	; param b
  8996 00005B06 50                      	push rax
  8997 00005B07 488B4520                	mov rax, PARAM(0)	; param a
  8998 00005B0B 50                      	push rax
  8999 00005B0C 6A02                    	push 2	; Number of arguments
  9000 00005B0E 488B0425[800E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9001 00005B16 803805                  	cmp byte [rax], T_undefined
  9002 00005B19 0F84D6F20000            	je L_error_fvar_undefined
  9003 00005B1F 803804                  	cmp byte [rax], T_closure
  9004 00005B22 0F8551F30000            	jne L_error_non_closure
  9005 00005B28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9006                                  
  9007                                  	; Reclaiming the current stack frame
  9008 00005B2B FF7508                  	push qword [rbp + 8]
  9009 00005B2E FF7500                  	push qword [rbp]
  9010 00005B31 41BA06000000            	mov r10, 2 + 4
  9011 00005B37 4C8B4518                	mov r8, COUNT
  9012 00005B3B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9013 00005B40 4C8D4DF8                	lea r9, [rbp - 8]
  9014                                  .L_tc_recycle_frame_loop_0034:
  9015 00005B44 4983FA00                	cmp r10, 0
  9016 00005B48 7413                    	je .L_tc_recycle_frame_done_0034
  9017 00005B4A 4D8B19                  	mov r11, qword [r9]
  9018 00005B4D 4D8918                  	mov qword [r8], r11
  9019 00005B50 49FFCA                  	dec r10
  9020 00005B53 4983E808                	sub r8, 8
  9021 00005B57 4983E908                	sub r9, 8
  9022 00005B5B EBE7                    	jmp .L_tc_recycle_frame_loop_0034
  9023                                  .L_tc_recycle_frame_done_0034:
  9024 00005B5D 498D6008                	lea rsp, [r8 + 8]
  9025 00005B61 5D                      	pop rbp
  9026 00005B62 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9027 00005B65 E9CB010000              	jmp .L_if_end_0013
  9028                                  .L_if_else_0013:
  9029                                  	; preparing a non-tail-call
  9030 00005B6A 488B4528                	mov rax, PARAM(1)	; param b
  9031 00005B6E 50                      	push rax
  9032 00005B6F 6A01                    	push 1	; arg count
  9033 00005B71 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9034 00005B79 803805                  	cmp byte [rax], T_undefined
  9035 00005B7C 0F8473F20000            	je L_error_fvar_undefined
  9036 00005B82 803804                  	cmp byte [rax], T_closure
  9037 00005B85 0F85EEF20000            	jne L_error_non_closure
  9038 00005B8B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9039 00005B8E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9040 00005B91 483D[02000000]          	cmp rax, sob_boolean_false
  9041 00005B97 0F848B000000            	je .L_if_else_0012
  9042                                  	; Initiating tail-call optimization
  9043 00005B9D 488B4528                	mov rax, PARAM(1)	; param b
  9044 00005BA1 50                      	push rax
  9045                                  	; preparing a non-tail-call
  9046 00005BA2 488B4520                	mov rax, PARAM(0)	; param a
  9047 00005BA6 50                      	push rax
  9048 00005BA7 6A01                    	push 1	; arg count
  9049 00005BA9 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9050 00005BB1 803805                  	cmp byte [rax], T_undefined
  9051 00005BB4 0F843BF20000            	je L_error_fvar_undefined
  9052 00005BBA 803804                  	cmp byte [rax], T_closure
  9053 00005BBD 0F85B6F20000            	jne L_error_non_closure
  9054 00005BC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9055 00005BC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9056 00005BC9 50                      	push rax
  9057 00005BCA 6A02                    	push 2	; Number of arguments
  9058 00005BCC 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9059 00005BD4 803805                  	cmp byte [rax], T_undefined
  9060 00005BD7 0F8418F20000            	je L_error_fvar_undefined
  9061 00005BDD 803804                  	cmp byte [rax], T_closure
  9062 00005BE0 0F8593F20000            	jne L_error_non_closure
  9063 00005BE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9064                                  
  9065                                  	; Reclaiming the current stack frame
  9066 00005BE9 FF7508                  	push qword [rbp + 8]
  9067 00005BEC FF7500                  	push qword [rbp]
  9068 00005BEF 41BA06000000            	mov r10, 2 + 4
  9069 00005BF5 4C8B4518                	mov r8, COUNT
  9070 00005BF9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9071 00005BFE 4C8D4DF8                	lea r9, [rbp - 8]
  9072                                  .L_tc_recycle_frame_loop_0035:
  9073 00005C02 4983FA00                	cmp r10, 0
  9074 00005C06 7413                    	je .L_tc_recycle_frame_done_0035
  9075 00005C08 4D8B19                  	mov r11, qword [r9]
  9076 00005C0B 4D8918                  	mov qword [r8], r11
  9077 00005C0E 49FFCA                  	dec r10
  9078 00005C11 4983E808                	sub r8, 8
  9079 00005C15 4983E908                	sub r9, 8
  9080 00005C19 EBE7                    	jmp .L_tc_recycle_frame_loop_0035
  9081                                  .L_tc_recycle_frame_done_0035:
  9082 00005C1B 498D6008                	lea rsp, [r8 + 8]
  9083 00005C1F 5D                      	pop rbp
  9084 00005C20 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9085 00005C23 E90D010000              	jmp .L_if_end_0012
  9086                                  .L_if_else_0012:
  9087                                  	; preparing a non-tail-call
  9088 00005C28 488B4528                	mov rax, PARAM(1)	; param b
  9089 00005C2C 50                      	push rax
  9090 00005C2D 6A01                    	push 1	; arg count
  9091 00005C2F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9092 00005C37 803805                  	cmp byte [rax], T_undefined
  9093 00005C3A 0F84B5F10000            	je L_error_fvar_undefined
  9094 00005C40 803804                  	cmp byte [rax], T_closure
  9095 00005C43 0F8530F20000            	jne L_error_non_closure
  9096 00005C49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9097 00005C4C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9098 00005C4F 483D[02000000]          	cmp rax, sob_boolean_false
  9099 00005C55 0F8488000000            	je .L_if_else_0011
  9100                                  	; Initiating tail-call optimization
  9101 00005C5B 488B4528                	mov rax, PARAM(1)	; param b
  9102 00005C5F 50                      	push rax
  9103                                  	; preparing a non-tail-call
  9104 00005C60 488B4520                	mov rax, PARAM(0)	; param a
  9105 00005C64 50                      	push rax
  9106 00005C65 6A01                    	push 1	; arg count
  9107 00005C67 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9108 00005C6F 803805                  	cmp byte [rax], T_undefined
  9109 00005C72 0F847DF10000            	je L_error_fvar_undefined
  9110 00005C78 803804                  	cmp byte [rax], T_closure
  9111 00005C7B 0F85F8F10000            	jne L_error_non_closure
  9112 00005C81 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9113 00005C84 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9114 00005C87 50                      	push rax
  9115 00005C88 6A02                    	push 2	; Number of arguments
  9116 00005C8A 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9117 00005C92 803805                  	cmp byte [rax], T_undefined
  9118 00005C95 0F845AF10000            	je L_error_fvar_undefined
  9119 00005C9B 803804                  	cmp byte [rax], T_closure
  9120 00005C9E 0F85D5F10000            	jne L_error_non_closure
  9121 00005CA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9122                                  
  9123                                  	; Reclaiming the current stack frame
  9124 00005CA7 FF7508                  	push qword [rbp + 8]
  9125 00005CAA FF7500                  	push qword [rbp]
  9126 00005CAD 41BA06000000            	mov r10, 2 + 4
  9127 00005CB3 4C8B4518                	mov r8, COUNT
  9128 00005CB7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9129 00005CBC 4C8D4DF8                	lea r9, [rbp - 8]
  9130                                  .L_tc_recycle_frame_loop_0036:
  9131 00005CC0 4983FA00                	cmp r10, 0
  9132 00005CC4 7413                    	je .L_tc_recycle_frame_done_0036
  9133 00005CC6 4D8B19                  	mov r11, qword [r9]
  9134 00005CC9 4D8918                  	mov qword [r8], r11
  9135 00005CCC 49FFCA                  	dec r10
  9136 00005CCF 4983E808                	sub r8, 8
  9137 00005CD3 4983E908                	sub r9, 8
  9138 00005CD7 EBE7                    	jmp .L_tc_recycle_frame_loop_0036
  9139                                  .L_tc_recycle_frame_done_0036:
  9140 00005CD9 498D6008                	lea rsp, [r8 + 8]
  9141 00005CDD 5D                      	pop rbp
  9142 00005CDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9143 00005CE1 EB52                    	jmp .L_if_end_0011
  9144                                  .L_if_else_0011:
  9145                                  	; Initiating tail-call optimization
  9146 00005CE3 6A00                    	push 0	; Number of arguments
  9147 00005CE5 488B4510                	mov rax, ENV
  9148 00005CE9 488B00                  	mov rax, qword [rax + 8 * 0]
  9149 00005CEC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9150 00005CEF 803804                  	cmp byte [rax], T_closure
  9151 00005CF2 0F8581F10000            	jne L_error_non_closure
  9152 00005CF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9153                                  
  9154                                  	; Reclaiming the current stack frame
  9155 00005CFB FF7508                  	push qword [rbp + 8]
  9156 00005CFE FF7500                  	push qword [rbp]
  9157 00005D01 41BA04000000            	mov r10, 0 + 4
  9158 00005D07 4C8B4518                	mov r8, COUNT
  9159 00005D0B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9160 00005D10 4C8D4DF8                	lea r9, [rbp - 8]
  9161                                  .L_tc_recycle_frame_loop_0037:
  9162 00005D14 4983FA00                	cmp r10, 0
  9163 00005D18 7413                    	je .L_tc_recycle_frame_done_0037
  9164 00005D1A 4D8B19                  	mov r11, qword [r9]
  9165 00005D1D 4D8918                  	mov qword [r8], r11
  9166 00005D20 49FFCA                  	dec r10
  9167 00005D23 4983E808                	sub r8, 8
  9168 00005D27 4983E908                	sub r9, 8
  9169 00005D2B EBE7                    	jmp .L_tc_recycle_frame_loop_0037
  9170                                  .L_tc_recycle_frame_done_0037:
  9171 00005D2D 498D6008                	lea rsp, [r8 + 8]
  9172 00005D31 5D                      	pop rbp
  9173 00005D32 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9174                                  .L_if_end_0011:
  9175                                  .L_if_end_0012:
  9176                                  .L_if_end_0013:
  9177 00005D35 E983050000              	jmp .L_if_end_001c
  9178                                  .L_if_else_001c:
  9179                                  	; preparing a non-tail-call
  9180 00005D3A 488B4520                	mov rax, PARAM(0)	; param a
  9181 00005D3E 50                      	push rax
  9182 00005D3F 6A01                    	push 1	; arg count
  9183 00005D41 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9184 00005D49 803805                  	cmp byte [rax], T_undefined
  9185 00005D4C 0F84A3F00000            	je L_error_fvar_undefined
  9186 00005D52 803804                  	cmp byte [rax], T_closure
  9187 00005D55 0F851EF10000            	jne L_error_non_closure
  9188 00005D5B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9189 00005D5E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9190 00005D61 483D[02000000]          	cmp rax, sob_boolean_false
  9191 00005D67 0F8467020000            	je .L_if_else_001b
  9192                                  	; preparing a non-tail-call
  9193 00005D6D 488B4528                	mov rax, PARAM(1)	; param b
  9194 00005D71 50                      	push rax
  9195 00005D72 6A01                    	push 1	; arg count
  9196 00005D74 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9197 00005D7C 803805                  	cmp byte [rax], T_undefined
  9198 00005D7F 0F8470F00000            	je L_error_fvar_undefined
  9199 00005D85 803804                  	cmp byte [rax], T_closure
  9200 00005D88 0F85EBF00000            	jne L_error_non_closure
  9201 00005D8E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9202 00005D91 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9203 00005D94 483D[02000000]          	cmp rax, sob_boolean_false
  9204 00005D9A 0F848B000000            	je .L_if_else_0016
  9205                                  	; Initiating tail-call optimization
  9206                                  	; preparing a non-tail-call
  9207 00005DA0 488B4528                	mov rax, PARAM(1)	; param b
  9208 00005DA4 50                      	push rax
  9209 00005DA5 6A01                    	push 1	; arg count
  9210 00005DA7 488B0425[A10F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9211 00005DAF 803805                  	cmp byte [rax], T_undefined
  9212 00005DB2 0F843DF00000            	je L_error_fvar_undefined
  9213 00005DB8 803804                  	cmp byte [rax], T_closure
  9214 00005DBB 0F85B8F00000            	jne L_error_non_closure
  9215 00005DC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9216 00005DC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9217 00005DC7 50                      	push rax
  9218 00005DC8 488B4520                	mov rax, PARAM(0)	; param a
  9219 00005DCC 50                      	push rax
  9220 00005DCD 6A02                    	push 2	; Number of arguments
  9221 00005DCF 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9222 00005DD7 803805                  	cmp byte [rax], T_undefined
  9223 00005DDA 0F8415F00000            	je L_error_fvar_undefined
  9224 00005DE0 803804                  	cmp byte [rax], T_closure
  9225 00005DE3 0F8590F00000            	jne L_error_non_closure
  9226 00005DE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9227                                  
  9228                                  	; Reclaiming the current stack frame
  9229 00005DEC FF7508                  	push qword [rbp + 8]
  9230 00005DEF FF7500                  	push qword [rbp]
  9231 00005DF2 41BA06000000            	mov r10, 2 + 4
  9232 00005DF8 4C8B4518                	mov r8, COUNT
  9233 00005DFC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9234 00005E01 4C8D4DF8                	lea r9, [rbp - 8]
  9235                                  .L_tc_recycle_frame_loop_0038:
  9236 00005E05 4983FA00                	cmp r10, 0
  9237 00005E09 7413                    	je .L_tc_recycle_frame_done_0038
  9238 00005E0B 4D8B19                  	mov r11, qword [r9]
  9239 00005E0E 4D8918                  	mov qword [r8], r11
  9240 00005E11 49FFCA                  	dec r10
  9241 00005E14 4983E808                	sub r8, 8
  9242 00005E18 4983E908                	sub r9, 8
  9243 00005E1C EBE7                    	jmp .L_tc_recycle_frame_loop_0038
  9244                                  .L_tc_recycle_frame_done_0038:
  9245 00005E1E 498D6008                	lea rsp, [r8 + 8]
  9246 00005E22 5D                      	pop rbp
  9247 00005E23 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9248 00005E26 E9A4010000              	jmp .L_if_end_0016
  9249                                  .L_if_else_0016:
  9250                                  	; preparing a non-tail-call
  9251 00005E2B 488B4528                	mov rax, PARAM(1)	; param b
  9252 00005E2F 50                      	push rax
  9253 00005E30 6A01                    	push 1	; arg count
  9254 00005E32 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9255 00005E3A 803805                  	cmp byte [rax], T_undefined
  9256 00005E3D 0F84B2EF0000            	je L_error_fvar_undefined
  9257 00005E43 803804                  	cmp byte [rax], T_closure
  9258 00005E46 0F852DF00000            	jne L_error_non_closure
  9259 00005E4C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9260 00005E4F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9261 00005E52 483D[02000000]          	cmp rax, sob_boolean_false
  9262 00005E58 7468                    	je .L_if_else_0015
  9263                                  	; Initiating tail-call optimization
  9264 00005E5A 488B4528                	mov rax, PARAM(1)	; param b
  9265 00005E5E 50                      	push rax
  9266 00005E5F 488B4520                	mov rax, PARAM(0)	; param a
  9267 00005E63 50                      	push rax
  9268 00005E64 6A02                    	push 2	; Number of arguments
  9269 00005E66 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9270 00005E6E 803805                  	cmp byte [rax], T_undefined
  9271 00005E71 0F847EEF0000            	je L_error_fvar_undefined
  9272 00005E77 803804                  	cmp byte [rax], T_closure
  9273 00005E7A 0F85F9EF0000            	jne L_error_non_closure
  9274 00005E80 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9275                                  
  9276                                  	; Reclaiming the current stack frame
  9277 00005E83 FF7508                  	push qword [rbp + 8]
  9278 00005E86 FF7500                  	push qword [rbp]
  9279 00005E89 41BA06000000            	mov r10, 2 + 4
  9280 00005E8F 4C8B4518                	mov r8, COUNT
  9281 00005E93 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9282 00005E98 4C8D4DF8                	lea r9, [rbp - 8]
  9283                                  .L_tc_recycle_frame_loop_0039:
  9284 00005E9C 4983FA00                	cmp r10, 0
  9285 00005EA0 7413                    	je .L_tc_recycle_frame_done_0039
  9286 00005EA2 4D8B19                  	mov r11, qword [r9]
  9287 00005EA5 4D8918                  	mov qword [r8], r11
  9288 00005EA8 49FFCA                  	dec r10
  9289 00005EAB 4983E808                	sub r8, 8
  9290 00005EAF 4983E908                	sub r9, 8
  9291 00005EB3 EBE7                    	jmp .L_tc_recycle_frame_loop_0039
  9292                                  .L_tc_recycle_frame_done_0039:
  9293 00005EB5 498D6008                	lea rsp, [r8 + 8]
  9294 00005EB9 5D                      	pop rbp
  9295 00005EBA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9296 00005EBD E90D010000              	jmp .L_if_end_0015
  9297                                  .L_if_else_0015:
  9298                                  	; preparing a non-tail-call
  9299 00005EC2 488B4528                	mov rax, PARAM(1)	; param b
  9300 00005EC6 50                      	push rax
  9301 00005EC7 6A01                    	push 1	; arg count
  9302 00005EC9 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9303 00005ED1 803805                  	cmp byte [rax], T_undefined
  9304 00005ED4 0F841BEF0000            	je L_error_fvar_undefined
  9305 00005EDA 803804                  	cmp byte [rax], T_closure
  9306 00005EDD 0F8596EF0000            	jne L_error_non_closure
  9307 00005EE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9308 00005EE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9309 00005EE9 483D[02000000]          	cmp rax, sob_boolean_false
  9310 00005EEF 0F8488000000            	je .L_if_else_0014
  9311                                  	; Initiating tail-call optimization
  9312 00005EF5 488B4528                	mov rax, PARAM(1)	; param b
  9313 00005EF9 50                      	push rax
  9314                                  	; preparing a non-tail-call
  9315 00005EFA 488B4520                	mov rax, PARAM(0)	; param a
  9316 00005EFE 50                      	push rax
  9317 00005EFF 6A01                    	push 1	; arg count
  9318 00005F01 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9319 00005F09 803805                  	cmp byte [rax], T_undefined
  9320 00005F0C 0F84E3EE0000            	je L_error_fvar_undefined
  9321 00005F12 803804                  	cmp byte [rax], T_closure
  9322 00005F15 0F855EEF0000            	jne L_error_non_closure
  9323 00005F1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9324 00005F1E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9325 00005F21 50                      	push rax
  9326 00005F22 6A02                    	push 2	; Number of arguments
  9327 00005F24 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9328 00005F2C 803805                  	cmp byte [rax], T_undefined
  9329 00005F2F 0F84C0EE0000            	je L_error_fvar_undefined
  9330 00005F35 803804                  	cmp byte [rax], T_closure
  9331 00005F38 0F853BEF0000            	jne L_error_non_closure
  9332 00005F3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9333                                  
  9334                                  	; Reclaiming the current stack frame
  9335 00005F41 FF7508                  	push qword [rbp + 8]
  9336 00005F44 FF7500                  	push qword [rbp]
  9337 00005F47 41BA06000000            	mov r10, 2 + 4
  9338 00005F4D 4C8B4518                	mov r8, COUNT
  9339 00005F51 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9340 00005F56 4C8D4DF8                	lea r9, [rbp - 8]
  9341                                  .L_tc_recycle_frame_loop_003a:
  9342 00005F5A 4983FA00                	cmp r10, 0
  9343 00005F5E 7413                    	je .L_tc_recycle_frame_done_003a
  9344 00005F60 4D8B19                  	mov r11, qword [r9]
  9345 00005F63 4D8918                  	mov qword [r8], r11
  9346 00005F66 49FFCA                  	dec r10
  9347 00005F69 4983E808                	sub r8, 8
  9348 00005F6D 4983E908                	sub r9, 8
  9349 00005F71 EBE7                    	jmp .L_tc_recycle_frame_loop_003a
  9350                                  .L_tc_recycle_frame_done_003a:
  9351 00005F73 498D6008                	lea rsp, [r8 + 8]
  9352 00005F77 5D                      	pop rbp
  9353 00005F78 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9354 00005F7B EB52                    	jmp .L_if_end_0014
  9355                                  .L_if_else_0014:
  9356                                  	; Initiating tail-call optimization
  9357 00005F7D 6A00                    	push 0	; Number of arguments
  9358 00005F7F 488B4510                	mov rax, ENV
  9359 00005F83 488B00                  	mov rax, qword [rax + 8 * 0]
  9360 00005F86 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9361 00005F89 803804                  	cmp byte [rax], T_closure
  9362 00005F8C 0F85E7EE0000            	jne L_error_non_closure
  9363 00005F92 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9364                                  
  9365                                  	; Reclaiming the current stack frame
  9366 00005F95 FF7508                  	push qword [rbp + 8]
  9367 00005F98 FF7500                  	push qword [rbp]
  9368 00005F9B 41BA04000000            	mov r10, 0 + 4
  9369 00005FA1 4C8B4518                	mov r8, COUNT
  9370 00005FA5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9371 00005FAA 4C8D4DF8                	lea r9, [rbp - 8]
  9372                                  .L_tc_recycle_frame_loop_003b:
  9373 00005FAE 4983FA00                	cmp r10, 0
  9374 00005FB2 7413                    	je .L_tc_recycle_frame_done_003b
  9375 00005FB4 4D8B19                  	mov r11, qword [r9]
  9376 00005FB7 4D8918                  	mov qword [r8], r11
  9377 00005FBA 49FFCA                  	dec r10
  9378 00005FBD 4983E808                	sub r8, 8
  9379 00005FC1 4983E908                	sub r9, 8
  9380 00005FC5 EBE7                    	jmp .L_tc_recycle_frame_loop_003b
  9381                                  .L_tc_recycle_frame_done_003b:
  9382 00005FC7 498D6008                	lea rsp, [r8 + 8]
  9383 00005FCB 5D                      	pop rbp
  9384 00005FCC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9385                                  .L_if_end_0014:
  9386                                  .L_if_end_0015:
  9387                                  .L_if_end_0016:
  9388 00005FCF E9E9020000              	jmp .L_if_end_001b
  9389                                  .L_if_else_001b:
  9390                                  	; preparing a non-tail-call
  9391 00005FD4 488B4520                	mov rax, PARAM(0)	; param a
  9392 00005FD8 50                      	push rax
  9393 00005FD9 6A01                    	push 1	; arg count
  9394 00005FDB 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9395 00005FE3 803805                  	cmp byte [rax], T_undefined
  9396 00005FE6 0F8409EE0000            	je L_error_fvar_undefined
  9397 00005FEC 803804                  	cmp byte [rax], T_closure
  9398 00005FEF 0F8584EE0000            	jne L_error_non_closure
  9399 00005FF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9400 00005FF8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9401 00005FFB 483D[02000000]          	cmp rax, sob_boolean_false
  9402 00006001 0F8464020000            	je .L_if_else_001a
  9403                                  	; preparing a non-tail-call
  9404 00006007 488B4528                	mov rax, PARAM(1)	; param b
  9405 0000600B 50                      	push rax
  9406 0000600C 6A01                    	push 1	; arg count
  9407 0000600E 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9408 00006016 803805                  	cmp byte [rax], T_undefined
  9409 00006019 0F84D6ED0000            	je L_error_fvar_undefined
  9410 0000601F 803804                  	cmp byte [rax], T_closure
  9411 00006022 0F8551EE0000            	jne L_error_non_closure
  9412 00006028 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9413 0000602B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9414 0000602E 483D[02000000]          	cmp rax, sob_boolean_false
  9415 00006034 0F848B000000            	je .L_if_else_0019
  9416                                  	; Initiating tail-call optimization
  9417                                  	; preparing a non-tail-call
  9418 0000603A 488B4528                	mov rax, PARAM(1)	; param b
  9419 0000603E 50                      	push rax
  9420 0000603F 6A01                    	push 1	; arg count
  9421 00006041 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9422 00006049 803805                  	cmp byte [rax], T_undefined
  9423 0000604C 0F84A3ED0000            	je L_error_fvar_undefined
  9424 00006052 803804                  	cmp byte [rax], T_closure
  9425 00006055 0F851EEE0000            	jne L_error_non_closure
  9426 0000605B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9427 0000605E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9428 00006061 50                      	push rax
  9429 00006062 488B4520                	mov rax, PARAM(0)	; param a
  9430 00006066 50                      	push rax
  9431 00006067 6A02                    	push 2	; Number of arguments
  9432 00006069 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9433 00006071 803805                  	cmp byte [rax], T_undefined
  9434 00006074 0F847BED0000            	je L_error_fvar_undefined
  9435 0000607A 803804                  	cmp byte [rax], T_closure
  9436 0000607D 0F85F6ED0000            	jne L_error_non_closure
  9437 00006083 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9438                                  
  9439                                  	; Reclaiming the current stack frame
  9440 00006086 FF7508                  	push qword [rbp + 8]
  9441 00006089 FF7500                  	push qword [rbp]
  9442 0000608C 41BA06000000            	mov r10, 2 + 4
  9443 00006092 4C8B4518                	mov r8, COUNT
  9444 00006096 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9445 0000609B 4C8D4DF8                	lea r9, [rbp - 8]
  9446                                  .L_tc_recycle_frame_loop_003c:
  9447 0000609F 4983FA00                	cmp r10, 0
  9448 000060A3 7413                    	je .L_tc_recycle_frame_done_003c
  9449 000060A5 4D8B19                  	mov r11, qword [r9]
  9450 000060A8 4D8918                  	mov qword [r8], r11
  9451 000060AB 49FFCA                  	dec r10
  9452 000060AE 4983E808                	sub r8, 8
  9453 000060B2 4983E908                	sub r9, 8
  9454 000060B6 EBE7                    	jmp .L_tc_recycle_frame_loop_003c
  9455                                  .L_tc_recycle_frame_done_003c:
  9456 000060B8 498D6008                	lea rsp, [r8 + 8]
  9457 000060BC 5D                      	pop rbp
  9458 000060BD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9459 000060C0 E9A4010000              	jmp .L_if_end_0019
  9460                                  .L_if_else_0019:
  9461                                  	; preparing a non-tail-call
  9462 000060C5 488B4528                	mov rax, PARAM(1)	; param b
  9463 000060C9 50                      	push rax
  9464 000060CA 6A01                    	push 1	; arg count
  9465 000060CC 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9466 000060D4 803805                  	cmp byte [rax], T_undefined
  9467 000060D7 0F8418ED0000            	je L_error_fvar_undefined
  9468 000060DD 803804                  	cmp byte [rax], T_closure
  9469 000060E0 0F8593ED0000            	jne L_error_non_closure
  9470 000060E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9471 000060E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9472 000060EC 483D[02000000]          	cmp rax, sob_boolean_false
  9473 000060F2 0F848B000000            	je .L_if_else_0018
  9474                                  	; Initiating tail-call optimization
  9475                                  	; preparing a non-tail-call
  9476 000060F8 488B4528                	mov rax, PARAM(1)	; param b
  9477 000060FC 50                      	push rax
  9478 000060FD 6A01                    	push 1	; arg count
  9479 000060FF 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9480 00006107 803805                  	cmp byte [rax], T_undefined
  9481 0000610A 0F84E5EC0000            	je L_error_fvar_undefined
  9482 00006110 803804                  	cmp byte [rax], T_closure
  9483 00006113 0F8560ED0000            	jne L_error_non_closure
  9484 00006119 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9485 0000611C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9486 0000611F 50                      	push rax
  9487 00006120 488B4520                	mov rax, PARAM(0)	; param a
  9488 00006124 50                      	push rax
  9489 00006125 6A02                    	push 2	; Number of arguments
  9490 00006127 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9491 0000612F 803805                  	cmp byte [rax], T_undefined
  9492 00006132 0F84BDEC0000            	je L_error_fvar_undefined
  9493 00006138 803804                  	cmp byte [rax], T_closure
  9494 0000613B 0F8538ED0000            	jne L_error_non_closure
  9495 00006141 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9496                                  
  9497                                  	; Reclaiming the current stack frame
  9498 00006144 FF7508                  	push qword [rbp + 8]
  9499 00006147 FF7500                  	push qword [rbp]
  9500 0000614A 41BA06000000            	mov r10, 2 + 4
  9501 00006150 4C8B4518                	mov r8, COUNT
  9502 00006154 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9503 00006159 4C8D4DF8                	lea r9, [rbp - 8]
  9504                                  .L_tc_recycle_frame_loop_003d:
  9505 0000615D 4983FA00                	cmp r10, 0
  9506 00006161 7413                    	je .L_tc_recycle_frame_done_003d
  9507 00006163 4D8B19                  	mov r11, qword [r9]
  9508 00006166 4D8918                  	mov qword [r8], r11
  9509 00006169 49FFCA                  	dec r10
  9510 0000616C 4983E808                	sub r8, 8
  9511 00006170 4983E908                	sub r9, 8
  9512 00006174 EBE7                    	jmp .L_tc_recycle_frame_loop_003d
  9513                                  .L_tc_recycle_frame_done_003d:
  9514 00006176 498D6008                	lea rsp, [r8 + 8]
  9515 0000617A 5D                      	pop rbp
  9516 0000617B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9517 0000617E E9E6000000              	jmp .L_if_end_0018
  9518                                  .L_if_else_0018:
  9519                                  	; preparing a non-tail-call
  9520 00006183 488B4528                	mov rax, PARAM(1)	; param b
  9521 00006187 50                      	push rax
  9522 00006188 6A01                    	push 1	; arg count
  9523 0000618A 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9524 00006192 803805                  	cmp byte [rax], T_undefined
  9525 00006195 0F845AEC0000            	je L_error_fvar_undefined
  9526 0000619B 803804                  	cmp byte [rax], T_closure
  9527 0000619E 0F85D5EC0000            	jne L_error_non_closure
  9528 000061A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9529 000061A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9530 000061AA 483D[02000000]          	cmp rax, sob_boolean_false
  9531 000061B0 7465                    	je .L_if_else_0017
  9532                                  	; Initiating tail-call optimization
  9533 000061B2 488B4528                	mov rax, PARAM(1)	; param b
  9534 000061B6 50                      	push rax
  9535 000061B7 488B4520                	mov rax, PARAM(0)	; param a
  9536 000061BB 50                      	push rax
  9537 000061BC 6A02                    	push 2	; Number of arguments
  9538 000061BE 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9539 000061C6 803805                  	cmp byte [rax], T_undefined
  9540 000061C9 0F8426EC0000            	je L_error_fvar_undefined
  9541 000061CF 803804                  	cmp byte [rax], T_closure
  9542 000061D2 0F85A1EC0000            	jne L_error_non_closure
  9543 000061D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9544                                  
  9545                                  	; Reclaiming the current stack frame
  9546 000061DB FF7508                  	push qword [rbp + 8]
  9547 000061DE FF7500                  	push qword [rbp]
  9548 000061E1 41BA06000000            	mov r10, 2 + 4
  9549 000061E7 4C8B4518                	mov r8, COUNT
  9550 000061EB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9551 000061F0 4C8D4DF8                	lea r9, [rbp - 8]
  9552                                  .L_tc_recycle_frame_loop_003e:
  9553 000061F4 4983FA00                	cmp r10, 0
  9554 000061F8 7413                    	je .L_tc_recycle_frame_done_003e
  9555 000061FA 4D8B19                  	mov r11, qword [r9]
  9556 000061FD 4D8918                  	mov qword [r8], r11
  9557 00006200 49FFCA                  	dec r10
  9558 00006203 4983E808                	sub r8, 8
  9559 00006207 4983E908                	sub r9, 8
  9560 0000620B EBE7                    	jmp .L_tc_recycle_frame_loop_003e
  9561                                  .L_tc_recycle_frame_done_003e:
  9562 0000620D 498D6008                	lea rsp, [r8 + 8]
  9563 00006211 5D                      	pop rbp
  9564 00006212 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9565 00006215 EB52                    	jmp .L_if_end_0017
  9566                                  .L_if_else_0017:
  9567                                  	; Initiating tail-call optimization
  9568 00006217 6A00                    	push 0	; Number of arguments
  9569 00006219 488B4510                	mov rax, ENV
  9570 0000621D 488B00                  	mov rax, qword [rax + 8 * 0]
  9571 00006220 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9572 00006223 803804                  	cmp byte [rax], T_closure
  9573 00006226 0F854DEC0000            	jne L_error_non_closure
  9574 0000622C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9575                                  
  9576                                  	; Reclaiming the current stack frame
  9577 0000622F FF7508                  	push qword [rbp + 8]
  9578 00006232 FF7500                  	push qword [rbp]
  9579 00006235 41BA04000000            	mov r10, 0 + 4
  9580 0000623B 4C8B4518                	mov r8, COUNT
  9581 0000623F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9582 00006244 4C8D4DF8                	lea r9, [rbp - 8]
  9583                                  .L_tc_recycle_frame_loop_003f:
  9584 00006248 4983FA00                	cmp r10, 0
  9585 0000624C 7413                    	je .L_tc_recycle_frame_done_003f
  9586 0000624E 4D8B19                  	mov r11, qword [r9]
  9587 00006251 4D8918                  	mov qword [r8], r11
  9588 00006254 49FFCA                  	dec r10
  9589 00006257 4983E808                	sub r8, 8
  9590 0000625B 4983E908                	sub r9, 8
  9591 0000625F EBE7                    	jmp .L_tc_recycle_frame_loop_003f
  9592                                  .L_tc_recycle_frame_done_003f:
  9593 00006261 498D6008                	lea rsp, [r8 + 8]
  9594 00006265 5D                      	pop rbp
  9595 00006266 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9596                                  .L_if_end_0017:
  9597                                  .L_if_end_0018:
  9598                                  .L_if_end_0019:
  9599 00006269 EB52                    	jmp .L_if_end_001a
  9600                                  .L_if_else_001a:
  9601                                  	; Initiating tail-call optimization
  9602 0000626B 6A00                    	push 0	; Number of arguments
  9603 0000626D 488B4510                	mov rax, ENV
  9604 00006271 488B00                  	mov rax, qword [rax + 8 * 0]
  9605 00006274 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9606 00006277 803804                  	cmp byte [rax], T_closure
  9607 0000627A 0F85F9EB0000            	jne L_error_non_closure
  9608 00006280 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9609                                  
  9610                                  	; Reclaiming the current stack frame
  9611 00006283 FF7508                  	push qword [rbp + 8]
  9612 00006286 FF7500                  	push qword [rbp]
  9613 00006289 41BA04000000            	mov r10, 0 + 4
  9614 0000628F 4C8B4518                	mov r8, COUNT
  9615 00006293 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9616 00006298 4C8D4DF8                	lea r9, [rbp - 8]
  9617                                  .L_tc_recycle_frame_loop_0040:
  9618 0000629C 4983FA00                	cmp r10, 0
  9619 000062A0 7413                    	je .L_tc_recycle_frame_done_0040
  9620 000062A2 4D8B19                  	mov r11, qword [r9]
  9621 000062A5 4D8918                  	mov qword [r8], r11
  9622 000062A8 49FFCA                  	dec r10
  9623 000062AB 4983E808                	sub r8, 8
  9624 000062AF 4983E908                	sub r9, 8
  9625 000062B3 EBE7                    	jmp .L_tc_recycle_frame_loop_0040
  9626                                  .L_tc_recycle_frame_done_0040:
  9627 000062B5 498D6008                	lea rsp, [r8 + 8]
  9628 000062B9 5D                      	pop rbp
  9629 000062BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9630                                  .L_if_end_001a:
  9631                                  .L_if_end_001b:
  9632                                  .L_if_end_001c:
  9633 000062BD C9                      	leave
  9634 000062BE C22000                  	ret AND_KILL_FRAME(2)
  9635                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9636 000062C1 50                      	push rax
  9637 000062C2 6A01                    	push 1	; Number of arguments
  9638 000062C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9639 000062C9 E854EC0000              	call malloc
  9640 000062CE 50                      	push rax
  9641 000062CF BF08000000              	mov rdi, 8 * 1	; new rib
  9642 000062D4 E849EC0000              	call malloc
  9643 000062D9 50                      	push rax
  9644 000062DA BF10000000              	mov rdi, 8 * 2	; extended env
  9645 000062DF E83EEC0000              	call malloc
  9646 000062E4 488B7D10                	mov rdi, ENV
  9647 000062E8 BE00000000              	mov rsi, 0
  9648 000062ED BA01000000              	mov rdx, 1
  9649                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9650 000062F2 4883FE01                	cmp rsi, 1
  9651 000062F6 7410                    	je .L_lambda_simple_env_end_0037
  9652 000062F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9653 000062FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9654 00006300 48FFC6                  	inc rsi
  9655 00006303 48FFC2                  	inc rdx
  9656 00006306 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9657                                  .L_lambda_simple_env_end_0037:
  9658 00006308 5B                      	pop rbx
  9659 00006309 BE00000000              	mov rsi, 0
  9660                                  .L_lambda_simple_params_loop_0037:	; copy params
  9661 0000630E 4883FE01                	cmp rsi, 1
  9662 00006312 740E                    	je .L_lambda_simple_params_end_0037
  9663 00006314 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9664 00006319 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9665 0000631D 48FFC6                  	inc rsi
  9666 00006320 EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9667                                  .L_lambda_simple_params_end_0037:
  9668 00006322 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9669 00006325 4889C3                  	mov rbx, rax
  9670 00006328 58                      	pop rax
  9671 00006329 C60004                  	mov byte [rax], T_closure
  9672 0000632C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9673 00006330 48C74009[3D630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9674 00006338 E907020000              	jmp .L_lambda_simple_end_0037
  9675                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9676 0000633D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9677 00006343 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9678 00006345 FF742410                	push qword [rsp + 8 * 2]
  9679 00006349 6A01                    	push 1
  9680 0000634B E98BEB0000              	jmp L_error_incorrect_arity_simple
  9681                                  .L_lambda_simple_arity_check_ok_0037:
  9682 00006350 C8000000                	enter 0, 0
  9683 00006354 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9684 00006359 E8C4EB0000              	call malloc
  9685 0000635E 50                      	push rax
  9686 0000635F BF08000000              	mov rdi, 8 * 1	; new rib
  9687 00006364 E8B9EB0000              	call malloc
  9688 00006369 50                      	push rax
  9689 0000636A BF18000000              	mov rdi, 8 * 3	; extended env
  9690 0000636F E8AEEB0000              	call malloc
  9691 00006374 488B7D10                	mov rdi, ENV
  9692 00006378 BE00000000              	mov rsi, 0
  9693 0000637D BA01000000              	mov rdx, 1
  9694                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9695 00006382 4883FE02                	cmp rsi, 2
  9696 00006386 7410                    	je .L_lambda_opt_env_end_000a
  9697 00006388 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9698 0000638C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9699 00006390 48FFC6                  	inc rsi
  9700 00006393 48FFC2                  	inc rdx
  9701 00006396 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9702                                  .L_lambda_opt_env_end_000a:
  9703 00006398 5B                      	pop rbx
  9704 00006399 BE00000000              	mov rsi, 0
  9705                                  .L_lambda_opt_params_loop_000a:	; copy params
  9706 0000639E 4883FE01                	cmp rsi, 1
  9707 000063A2 740E                    	je .L_lambda_opt_params_end_000a
  9708 000063A4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9709 000063A9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9710 000063AD 48FFC6                  	inc rsi
  9711 000063B0 EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9712                                  .L_lambda_opt_params_end_000a:
  9713 000063B2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9714 000063B5 4889C3                  	mov rbx, rax
  9715 000063B8 58                      	pop rax
  9716 000063B9 C60004                  	mov byte [rax], T_closure
  9717 000063BC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9718 000063C0 48C74009[CD630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9719 000063C8 E973010000              	jmp .L_lambda_opt_end_000a
  9720                                  .L_lambda_opt_code_000a:
  9721 000063CD 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  9722 000063D2 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  9723 000063D6 7407                    	je .L_lambda_opt_arity_check_exact_000a	; Jump if arity matches
  9724 000063D8 7F4C                    	jg .L_lambda_opt_arity_check_more_000a	; Jump if more arguments passed
  9725 000063DA E910EB0000              	jmp L_error_incorrect_arity_opt
  9726                                  .L_lambda_opt_arity_check_exact_000a:
  9727 000063DF 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  9728 000063E2 4983C603                	add r14, 3 ; add 3 first stack values
  9729 000063E6 41BF00000000            	mov r15, 0 ; r15 = index
  9730 000063EC 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  9731 000063F0 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  9732 000063F8 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9733                                  .L_lambda_opt_stack_shrink_loop_000a:
  9734 000063FA 4983FE00                	cmp r14, 0
  9735 000063FE 7E11                    	jle .L_make_lambda_opt_exact_finish_000a
  9736 00006400 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  9737 00006405 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  9738 00006409 49FFCE                  	dec r14 ; next loop value
  9739 0000640C 49FFC7                  	inc r15 ; update i
  9740 0000640F EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9741                                  .L_make_lambda_opt_exact_finish_000a:
  9742 00006411 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  9743 00006419 49FFC2                  	inc r10
  9744 0000641C 4C89542410              	mov qword [rsp + 8 * 2], r10
  9745 00006421 E99E000000              	jmp .L_lambda_opt_stack_adjusted_000a
  9746                                  .L_lambda_opt_arity_check_more_000a:
  9747 00006426 4D89D6                  	mov r14, r10 ; r14 = num args
  9748 00006429 4D89D7                  	mov r15, r10 ; r15 = num args
  9749 0000642C 41B900000000            	mov r9, 0; r9 = number of params 
  9750 00006432 4D29CE                  	sub r14, r9 ; r14 = extra args
  9751 00006435 4D01F1                  	add r9, r14 ; r9 = num args
  9752 00006438 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  9752 0000643A [0100000000000000] 
  9753 00006442 EB00                    	jmp .L_make_lambda_opt_arg_list_000a
  9754                                  .L_make_lambda_opt_arg_list_000a:
  9755 00006444 4983FE00                	cmp r14, 0
  9756 00006448 7E25                    	jle .L_make_lambda_opt_stack_fixed_000a
  9757 0000644A 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  9758 0000644F BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  9759 00006454 E8C9EA0000              	call malloc                         ; Allocate memory, result in rax
  9760 00006459 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  9761 0000645C 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  9762 00006460 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  9763 00006464 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  9764 00006467 49FFC9                  	dec r9                              ; args index minus 1
  9765 0000646A 49FFCE                  	dec r14                             ; next iteration
  9766 0000646D EBD5                    	jmp .L_make_lambda_opt_arg_list_000a
  9767                                  .L_make_lambda_opt_stack_fixed_000a:
  9768 0000646F 4D89FE                  	mov r14, r15 ; r14 = num args
  9769 00006472 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  9770 00006475 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  9771 00006479 41BA00000000            	mov r10, 0; r10 = num of params
  9772 0000647F 4D29D6                  	sub r14, r10 ; r14 = extra args
  9773 00006482 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  9774 00006485 49FFCE                  	dec r14 ; how much we need to change stack wise?
  9775 00006488 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
  9776 0000648D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000a
  9777                                  .L_lambda_opt_stack_shrink_loop_more_000a:
  9778 0000648F 4983F800                	cmp r8, 0
  9779 00006493 7E15                    	jle .L_make_lambda_opt_more_finish_000a
  9780 00006495 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
  9781 00006499 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  9782 0000649D 4D8D26                  	lea r12, [r14]
  9783 000064A0 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
  9784 000064A5 49FFC8                  	dec r8 ; next iteration
  9785 000064A8 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000a
  9786                                  .L_make_lambda_opt_more_finish_000a:
  9787 000064AA 4D89F8                  	mov r8, r15 ; num of args
  9788 000064AD 41BA00000000            	mov r10, 0
  9789 000064B3 4D29D0                  	sub r8, r10 ; num of new args
  9790 000064B6 49FFC0                  	inc r8
  9791 000064B9 4C89442420              	mov qword [rsp + 8 * 4], r8
  9792 000064BE 4883C410                	add rsp, 8 * 2  ; 
  9793 000064C2 EB00                    	jmp .L_lambda_opt_stack_adjusted_000a
  9794                                  .L_lambda_opt_stack_adjusted_000a:
  9795 000064C4 C8000000                	enter 0, 0
  9796                                  	; Initiating tail-call optimization
  9797 000064C8 488B4520                	mov rax, PARAM(0)	; param s
  9798 000064CC 50                      	push rax
  9799 000064CD 48B8-                   	mov rax, L_constants + 2135
  9799 000064CF [5708000000000000] 
  9800 000064D7 50                      	push rax
  9801 000064D8 488B4510                	mov rax, ENV
  9802 000064DC 488B00                  	mov rax, qword [rax + 8 * 0]
  9803 000064DF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9804 000064E2 50                      	push rax
  9805 000064E3 6A03                    	push 3	; Number of arguments
  9806 000064E5 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9807 000064ED 803805                  	cmp byte [rax], T_undefined
  9808 000064F0 0F84FFE80000            	je L_error_fvar_undefined
  9809 000064F6 803804                  	cmp byte [rax], T_closure
  9810 000064F9 0F857AE90000            	jne L_error_non_closure
  9811 000064FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9812                                  
  9813                                  	; Reclaiming the current stack frame
  9814 00006502 FF7508                  	push qword [rbp + 8]
  9815 00006505 FF7500                  	push qword [rbp]
  9816 00006508 41BA07000000            	mov r10, 3 + 4
  9817 0000650E 4C8B4518                	mov r8, COUNT
  9818 00006512 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9819 00006517 4C8D4DF8                	lea r9, [rbp - 8]
  9820                                  .L_tc_recycle_frame_loop_0041:
  9821 0000651B 4983FA00                	cmp r10, 0
  9822 0000651F 7413                    	je .L_tc_recycle_frame_done_0041
  9823 00006521 4D8B19                  	mov r11, qword [r9]
  9824 00006524 4D8918                  	mov qword [r8], r11
  9825 00006527 49FFCA                  	dec r10
  9826 0000652A 4983E808                	sub r8, 8
  9827 0000652E 4983E908                	sub r9, 8
  9828 00006532 EBE7                    	jmp .L_tc_recycle_frame_loop_0041
  9829                                  .L_tc_recycle_frame_done_0041:
  9830 00006534 498D6008                	lea rsp, [r8 + 8]
  9831 00006538 5D                      	pop rbp
  9832 00006539 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9833 0000653C C9                      	leave
  9834 0000653D C21800                  	ret AND_KILL_FRAME(1)
  9835                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9836 00006540 C9                      	leave
  9837 00006541 C21800                  	ret AND_KILL_FRAME(1)
  9838                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9839 00006544 803804                  	cmp byte [rax], T_closure
  9840 00006547 0F852CE90000            	jne L_error_non_closure
  9841 0000654D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9842                                  
  9843                                  	; Reclaiming the current stack frame
  9844 00006550 FF7508                  	push qword [rbp + 8]
  9845 00006553 FF7500                  	push qword [rbp]
  9846 00006556 41BA05000000            	mov r10, 1 + 4
  9847 0000655C 4C8B4518                	mov r8, COUNT
  9848 00006560 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9849 00006565 4C8D4DF8                	lea r9, [rbp - 8]
  9850                                  .L_tc_recycle_frame_loop_0042:
  9851 00006569 4983FA00                	cmp r10, 0
  9852 0000656D 7413                    	je .L_tc_recycle_frame_done_0042
  9853 0000656F 4D8B19                  	mov r11, qword [r9]
  9854 00006572 4D8918                  	mov qword [r8], r11
  9855 00006575 49FFCA                  	dec r10
  9856 00006578 4983E808                	sub r8, 8
  9857 0000657C 4983E908                	sub r9, 8
  9858 00006580 EBE7                    	jmp .L_tc_recycle_frame_loop_0042
  9859                                  .L_tc_recycle_frame_done_0042:
  9860 00006582 498D6008                	lea rsp, [r8 + 8]
  9861 00006586 5D                      	pop rbp
  9862 00006587 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9863 0000658A C9                      	leave
  9864 0000658B C21800                  	ret AND_KILL_FRAME(1)
  9865                                  .L_lambda_simple_end_0035:	; new closure is in rax
  9866 0000658E 803804                  	cmp byte [rax], T_closure
  9867 00006591 0F85E2E80000            	jne L_error_non_closure
  9868 00006597 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9869 0000659A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9870 0000659D 48890425[D60D0000]      	mov qword [free_var_1], rax
  9871 000065A5 48B8-                   	mov rax, sob_void
  9871 000065A7 [0000000000000000] 
  9872                                  
  9873 000065AF 4889C7                  	mov rdi, rax
  9874 000065B2 E8C0EB0000              	call print_sexpr_if_not_void
  9875                                  	; preparing a non-tail-call
  9876 000065B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9877 000065BC E861E90000              	call malloc
  9878 000065C1 50                      	push rax
  9879 000065C2 BF00000000              	mov rdi, 8 * 0	; new rib
  9880 000065C7 E856E90000              	call malloc
  9881 000065CC 50                      	push rax
  9882 000065CD BF08000000              	mov rdi, 8 * 1	; extended env
  9883 000065D2 E84BE90000              	call malloc
  9884 000065D7 488B7D10                	mov rdi, ENV
  9885 000065DB BE00000000              	mov rsi, 0
  9886 000065E0 BA01000000              	mov rdx, 1
  9887                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  9888 000065E5 4883FE00                	cmp rsi, 0
  9889 000065E9 7410                    	je .L_lambda_simple_env_end_0038
  9890 000065EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9891 000065EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9892 000065F3 48FFC6                  	inc rsi
  9893 000065F6 48FFC2                  	inc rdx
  9894 000065F9 EBEA                    	jmp .L_lambda_simple_env_loop_0038
  9895                                  .L_lambda_simple_env_end_0038:
  9896 000065FB 5B                      	pop rbx
  9897 000065FC BE00000000              	mov rsi, 0
  9898                                  .L_lambda_simple_params_loop_0038:	; copy params
  9899 00006601 4883FE00                	cmp rsi, 0
  9900 00006605 740E                    	je .L_lambda_simple_params_end_0038
  9901 00006607 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9902 0000660C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9903 00006610 48FFC6                  	inc rsi
  9904 00006613 EBEC                    	jmp .L_lambda_simple_params_loop_0038
  9905                                  .L_lambda_simple_params_end_0038:
  9906 00006615 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9907 00006618 4889C3                  	mov rbx, rax
  9908 0000661B 58                      	pop rax
  9909 0000661C C60004                  	mov byte [rax], T_closure
  9910 0000661F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9911 00006623 48C74009[30660000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  9912 0000662B E98A000000              	jmp .L_lambda_simple_end_0038
  9913                                  .L_lambda_simple_code_0038:	; lambda-simple body
  9914 00006630 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9915 00006636 740B                    	je .L_lambda_simple_arity_check_ok_0038
  9916 00006638 FF742410                	push qword [rsp + 8 * 2]
  9917 0000663C 6A00                    	push 0
  9918 0000663E E998E80000              	jmp L_error_incorrect_arity_simple
  9919                                  .L_lambda_simple_arity_check_ok_0038:
  9920 00006643 C8000000                	enter 0, 0
  9921                                  	; Initiating tail-call optimization
  9922 00006647 48B8-                   	mov rax, L_constants + 2187
  9922 00006649 [8B08000000000000] 
  9923 00006651 50                      	push rax
  9924 00006652 48B8-                   	mov rax, L_constants + 2251
  9924 00006654 [CB08000000000000] 
  9925 0000665C 50                      	push rax
  9926 0000665D 6A02                    	push 2	; Number of arguments
  9927 0000665F 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  9928 00006667 803805                  	cmp byte [rax], T_undefined
  9929 0000666A 0F8485E70000            	je L_error_fvar_undefined
  9930 00006670 803804                  	cmp byte [rax], T_closure
  9931 00006673 0F8500E80000            	jne L_error_non_closure
  9932 00006679 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9933                                  
  9934                                  	; Reclaiming the current stack frame
  9935 0000667C FF7508                  	push qword [rbp + 8]
  9936 0000667F FF7500                  	push qword [rbp]
  9937 00006682 41BA06000000            	mov r10, 2 + 4
  9938 00006688 4C8B4518                	mov r8, COUNT
  9939 0000668C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9940 00006691 4C8D4DF8                	lea r9, [rbp - 8]
  9941                                  .L_tc_recycle_frame_loop_0043:
  9942 00006695 4983FA00                	cmp r10, 0
  9943 00006699 7413                    	je .L_tc_recycle_frame_done_0043
  9944 0000669B 4D8B19                  	mov r11, qword [r9]
  9945 0000669E 4D8918                  	mov qword [r8], r11
  9946 000066A1 49FFCA                  	dec r10
  9947 000066A4 4983E808                	sub r8, 8
  9948 000066A8 4983E908                	sub r9, 8
  9949 000066AC EBE7                    	jmp .L_tc_recycle_frame_loop_0043
  9950                                  .L_tc_recycle_frame_done_0043:
  9951 000066AE 498D6008                	lea rsp, [r8 + 8]
  9952 000066B2 5D                      	pop rbp
  9953 000066B3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9954 000066B6 C9                      	leave
  9955 000066B7 C21000                  	ret AND_KILL_FRAME(0)
  9956                                  .L_lambda_simple_end_0038:	; new closure is in rax
  9957 000066BA 50                      	push rax
  9958 000066BB 6A01                    	push 1	; arg count
  9959 000066BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9960 000066C2 E85BE80000              	call malloc
  9961 000066C7 50                      	push rax
  9962 000066C8 BF00000000              	mov rdi, 8 * 0	; new rib
  9963 000066CD E850E80000              	call malloc
  9964 000066D2 50                      	push rax
  9965 000066D3 BF08000000              	mov rdi, 8 * 1	; extended env
  9966 000066D8 E845E80000              	call malloc
  9967 000066DD 488B7D10                	mov rdi, ENV
  9968 000066E1 BE00000000              	mov rsi, 0
  9969 000066E6 BA01000000              	mov rdx, 1
  9970                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  9971 000066EB 4883FE00                	cmp rsi, 0
  9972 000066EF 7410                    	je .L_lambda_simple_env_end_0039
  9973 000066F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9974 000066F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9975 000066F9 48FFC6                  	inc rsi
  9976 000066FC 48FFC2                  	inc rdx
  9977 000066FF EBEA                    	jmp .L_lambda_simple_env_loop_0039
  9978                                  .L_lambda_simple_env_end_0039:
  9979 00006701 5B                      	pop rbx
  9980 00006702 BE00000000              	mov rsi, 0
  9981                                  .L_lambda_simple_params_loop_0039:	; copy params
  9982 00006707 4883FE00                	cmp rsi, 0
  9983 0000670B 740E                    	je .L_lambda_simple_params_end_0039
  9984 0000670D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9985 00006712 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9986 00006716 48FFC6                  	inc rsi
  9987 00006719 EBEC                    	jmp .L_lambda_simple_params_loop_0039
  9988                                  .L_lambda_simple_params_end_0039:
  9989 0000671B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9990 0000671E 4889C3                  	mov rbx, rax
  9991 00006721 58                      	pop rax
  9992 00006722 C60004                  	mov byte [rax], T_closure
  9993 00006725 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9994 00006729 48C74009[36670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  9995 00006731 E93B0D0000              	jmp .L_lambda_simple_end_0039
  9996                                  .L_lambda_simple_code_0039:	; lambda-simple body
  9997 00006736 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9998 0000673C 740B                    	je .L_lambda_simple_arity_check_ok_0039
  9999 0000673E FF742410                	push qword [rsp + 8 * 2]
 10000 00006742 6A01                    	push 1
 10001 00006744 E992E70000              	jmp L_error_incorrect_arity_simple
 10002                                  .L_lambda_simple_arity_check_ok_0039:
 10003 00006749 C8000000                	enter 0, 0
 10004                                  	; Initiating tail-call optimization
 10005 0000674D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10006 00006752 E8CBE70000              	call malloc
 10007 00006757 50                      	push rax
 10008 00006758 BF08000000              	mov rdi, 8 * 1	; new rib
 10009 0000675D E8C0E70000              	call malloc
 10010 00006762 50                      	push rax
 10011 00006763 BF10000000              	mov rdi, 8 * 2	; extended env
 10012 00006768 E8B5E70000              	call malloc
 10013 0000676D 488B7D10                	mov rdi, ENV
 10014 00006771 BE00000000              	mov rsi, 0
 10015 00006776 BA01000000              	mov rdx, 1
 10016                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
 10017 0000677B 4883FE01                	cmp rsi, 1
 10018 0000677F 7410                    	je .L_lambda_simple_env_end_003a
 10019 00006781 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10020 00006785 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10021 00006789 48FFC6                  	inc rsi
 10022 0000678C 48FFC2                  	inc rdx
 10023 0000678F EBEA                    	jmp .L_lambda_simple_env_loop_003a
 10024                                  .L_lambda_simple_env_end_003a:
 10025 00006791 5B                      	pop rbx
 10026 00006792 BE00000000              	mov rsi, 0
 10027                                  .L_lambda_simple_params_loop_003a:	; copy params
 10028 00006797 4883FE01                	cmp rsi, 1
 10029 0000679B 740E                    	je .L_lambda_simple_params_end_003a
 10030 0000679D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10031 000067A2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10032 000067A6 48FFC6                  	inc rsi
 10033 000067A9 EBEC                    	jmp .L_lambda_simple_params_loop_003a
 10034                                  .L_lambda_simple_params_end_003a:
 10035 000067AB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10036 000067AE 4889C3                  	mov rbx, rax
 10037 000067B1 58                      	pop rax
 10038 000067B2 C60004                  	mov byte [rax], T_closure
 10039 000067B5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10040 000067B9 48C74009[C6670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
 10041 000067C1 E938080000              	jmp .L_lambda_simple_end_003a
 10042                                  .L_lambda_simple_code_003a:	; lambda-simple body
 10043 000067C6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10044 000067CC 740B                    	je .L_lambda_simple_arity_check_ok_003a
 10045 000067CE FF742410                	push qword [rsp + 8 * 2]
 10046 000067D2 6A02                    	push 2
 10047 000067D4 E902E70000              	jmp L_error_incorrect_arity_simple
 10048                                  .L_lambda_simple_arity_check_ok_003a:
 10049 000067D9 C8000000                	enter 0, 0
 10050                                  	; preparing a non-tail-call
 10051 000067DD 488B4520                	mov rax, PARAM(0)	; param a
 10052 000067E1 50                      	push rax
 10053 000067E2 6A01                    	push 1	; arg count
 10054 000067E4 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10055 000067EC 803805                  	cmp byte [rax], T_undefined
 10056 000067EF 0F8400E60000            	je L_error_fvar_undefined
 10057 000067F5 803804                  	cmp byte [rax], T_closure
 10058 000067F8 0F857BE60000            	jne L_error_non_closure
 10059 000067FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10060 00006801 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10061 00006804 483D[02000000]          	cmp rax, sob_boolean_false
 10062 0000680A 0F8467020000            	je .L_if_else_0028
 10063                                  	; preparing a non-tail-call
 10064 00006810 488B4528                	mov rax, PARAM(1)	; param b
 10065 00006814 50                      	push rax
 10066 00006815 6A01                    	push 1	; arg count
 10067 00006817 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10068 0000681F 803805                  	cmp byte [rax], T_undefined
 10069 00006822 0F84CDE50000            	je L_error_fvar_undefined
 10070 00006828 803804                  	cmp byte [rax], T_closure
 10071 0000682B 0F8548E60000            	jne L_error_non_closure
 10072 00006831 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10073 00006834 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10074 00006837 483D[02000000]          	cmp rax, sob_boolean_false
 10075 0000683D 7468                    	je .L_if_else_001f
 10076                                  	; Initiating tail-call optimization
 10077 0000683F 488B4528                	mov rax, PARAM(1)	; param b
 10078 00006843 50                      	push rax
 10079 00006844 488B4520                	mov rax, PARAM(0)	; param a
 10080 00006848 50                      	push rax
 10081 00006849 6A02                    	push 2	; Number of arguments
 10082 0000684B 488B0425[900F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10083 00006853 803805                  	cmp byte [rax], T_undefined
 10084 00006856 0F8499E50000            	je L_error_fvar_undefined
 10085 0000685C 803804                  	cmp byte [rax], T_closure
 10086 0000685F 0F8514E60000            	jne L_error_non_closure
 10087 00006865 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10088                                  
 10089                                  	; Reclaiming the current stack frame
 10090 00006868 FF7508                  	push qword [rbp + 8]
 10091 0000686B FF7500                  	push qword [rbp]
 10092 0000686E 41BA06000000            	mov r10, 2 + 4
 10093 00006874 4C8B4518                	mov r8, COUNT
 10094 00006878 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10095 0000687D 4C8D4DF8                	lea r9, [rbp - 8]
 10096                                  .L_tc_recycle_frame_loop_0044:
 10097 00006881 4983FA00                	cmp r10, 0
 10098 00006885 7413                    	je .L_tc_recycle_frame_done_0044
 10099 00006887 4D8B19                  	mov r11, qword [r9]
 10100 0000688A 4D8918                  	mov qword [r8], r11
 10101 0000688D 49FFCA                  	dec r10
 10102 00006890 4983E808                	sub r8, 8
 10103 00006894 4983E908                	sub r9, 8
 10104 00006898 EBE7                    	jmp .L_tc_recycle_frame_loop_0044
 10105                                  .L_tc_recycle_frame_done_0044:
 10106 0000689A 498D6008                	lea rsp, [r8 + 8]
 10107 0000689E 5D                      	pop rbp
 10108 0000689F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10109 000068A2 E9CB010000              	jmp .L_if_end_001f
 10110                                  .L_if_else_001f:
 10111                                  	; preparing a non-tail-call
 10112 000068A7 488B4528                	mov rax, PARAM(1)	; param b
 10113 000068AB 50                      	push rax
 10114 000068AC 6A01                    	push 1	; arg count
 10115 000068AE 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10116 000068B6 803805                  	cmp byte [rax], T_undefined
 10117 000068B9 0F8436E50000            	je L_error_fvar_undefined
 10118 000068BF 803804                  	cmp byte [rax], T_closure
 10119 000068C2 0F85B1E50000            	jne L_error_non_closure
 10120 000068C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10121 000068CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 10122 000068CE 483D[02000000]          	cmp rax, sob_boolean_false
 10123 000068D4 0F848B000000            	je .L_if_else_001e
 10124                                  	; Initiating tail-call optimization
 10125 000068DA 488B4528                	mov rax, PARAM(1)	; param b
 10126 000068DE 50                      	push rax
 10127                                  	; preparing a non-tail-call
 10128 000068DF 488B4520                	mov rax, PARAM(0)	; param a
 10129 000068E3 50                      	push rax
 10130 000068E4 6A01                    	push 1	; arg count
 10131 000068E6 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10132 000068EE 803805                  	cmp byte [rax], T_undefined
 10133 000068F1 0F84FEE40000            	je L_error_fvar_undefined
 10134 000068F7 803804                  	cmp byte [rax], T_closure
 10135 000068FA 0F8579E50000            	jne L_error_non_closure
 10136 00006900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10137 00006903 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10138 00006906 50                      	push rax
 10139 00006907 6A02                    	push 2	; Number of arguments
 10140 00006909 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10141 00006911 803805                  	cmp byte [rax], T_undefined
 10142 00006914 0F84DBE40000            	je L_error_fvar_undefined
 10143 0000691A 803804                  	cmp byte [rax], T_closure
 10144 0000691D 0F8556E50000            	jne L_error_non_closure
 10145 00006923 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10146                                  
 10147                                  	; Reclaiming the current stack frame
 10148 00006926 FF7508                  	push qword [rbp + 8]
 10149 00006929 FF7500                  	push qword [rbp]
 10150 0000692C 41BA06000000            	mov r10, 2 + 4
 10151 00006932 4C8B4518                	mov r8, COUNT
 10152 00006936 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10153 0000693B 4C8D4DF8                	lea r9, [rbp - 8]
 10154                                  .L_tc_recycle_frame_loop_0045:
 10155 0000693F 4983FA00                	cmp r10, 0
 10156 00006943 7413                    	je .L_tc_recycle_frame_done_0045
 10157 00006945 4D8B19                  	mov r11, qword [r9]
 10158 00006948 4D8918                  	mov qword [r8], r11
 10159 0000694B 49FFCA                  	dec r10
 10160 0000694E 4983E808                	sub r8, 8
 10161 00006952 4983E908                	sub r9, 8
 10162 00006956 EBE7                    	jmp .L_tc_recycle_frame_loop_0045
 10163                                  .L_tc_recycle_frame_done_0045:
 10164 00006958 498D6008                	lea rsp, [r8 + 8]
 10165 0000695C 5D                      	pop rbp
 10166 0000695D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10167 00006960 E90D010000              	jmp .L_if_end_001e
 10168                                  .L_if_else_001e:
 10169                                  	; preparing a non-tail-call
 10170 00006965 488B4528                	mov rax, PARAM(1)	; param b
 10171 00006969 50                      	push rax
 10172 0000696A 6A01                    	push 1	; arg count
 10173 0000696C 488B0425[68150000]      	mov rax, qword [free_var_115]	; free var real
 10174 00006974 803805                  	cmp byte [rax], T_undefined
 10175 00006977 0F8478E40000            	je L_error_fvar_undefined
 10176 0000697D 803804                  	cmp byte [rax], T_closure
 10177 00006980 0F85F3E40000            	jne L_error_non_closure
 10178 00006986 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10179 00006989 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10180 0000698C 483D[02000000]          	cmp rax, sob_boolean_false
 10181 00006992 0F8488000000            	je .L_if_else_001d
 10182                                  	; Initiating tail-call optimization
 10183 00006998 488B4528                	mov rax, PARAM(1)	; param b
 10184 0000699C 50                      	push rax
 10185                                  	; preparing a non-tail-call
 10186 0000699D 488B4520                	mov rax, PARAM(0)	; param a
 10187 000069A1 50                      	push rax
 10188 000069A2 6A01                    	push 1	; arg count
 10189 000069A4 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10190 000069AC 803805                  	cmp byte [rax], T_undefined
 10191 000069AF 0F8440E40000            	je L_error_fvar_undefined
 10192 000069B5 803804                  	cmp byte [rax], T_closure
 10193 000069B8 0F85BBE40000            	jne L_error_non_closure
 10194 000069BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10195 000069C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10196 000069C4 50                      	push rax
 10197 000069C5 6A02                    	push 2	; Number of arguments
 10198 000069C7 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10199 000069CF 803805                  	cmp byte [rax], T_undefined
 10200 000069D2 0F841DE40000            	je L_error_fvar_undefined
 10201 000069D8 803804                  	cmp byte [rax], T_closure
 10202 000069DB 0F8598E40000            	jne L_error_non_closure
 10203 000069E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10204                                  
 10205                                  	; Reclaiming the current stack frame
 10206 000069E4 FF7508                  	push qword [rbp + 8]
 10207 000069E7 FF7500                  	push qword [rbp]
 10208 000069EA 41BA06000000            	mov r10, 2 + 4
 10209 000069F0 4C8B4518                	mov r8, COUNT
 10210 000069F4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10211 000069F9 4C8D4DF8                	lea r9, [rbp - 8]
 10212                                  .L_tc_recycle_frame_loop_0046:
 10213 000069FD 4983FA00                	cmp r10, 0
 10214 00006A01 7413                    	je .L_tc_recycle_frame_done_0046
 10215 00006A03 4D8B19                  	mov r11, qword [r9]
 10216 00006A06 4D8918                  	mov qword [r8], r11
 10217 00006A09 49FFCA                  	dec r10
 10218 00006A0C 4983E808                	sub r8, 8
 10219 00006A10 4983E908                	sub r9, 8
 10220 00006A14 EBE7                    	jmp .L_tc_recycle_frame_loop_0046
 10221                                  .L_tc_recycle_frame_done_0046:
 10222 00006A16 498D6008                	lea rsp, [r8 + 8]
 10223 00006A1A 5D                      	pop rbp
 10224 00006A1B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10225 00006A1E EB52                    	jmp .L_if_end_001d
 10226                                  .L_if_else_001d:
 10227                                  	; Initiating tail-call optimization
 10228 00006A20 6A00                    	push 0	; Number of arguments
 10229 00006A22 488B4510                	mov rax, ENV
 10230 00006A26 488B00                  	mov rax, qword [rax + 8 * 0]
 10231 00006A29 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10232 00006A2C 803804                  	cmp byte [rax], T_closure
 10233 00006A2F 0F8544E40000            	jne L_error_non_closure
 10234 00006A35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10235                                  
 10236                                  	; Reclaiming the current stack frame
 10237 00006A38 FF7508                  	push qword [rbp + 8]
 10238 00006A3B FF7500                  	push qword [rbp]
 10239 00006A3E 41BA04000000            	mov r10, 0 + 4
 10240 00006A44 4C8B4518                	mov r8, COUNT
 10241 00006A48 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10242 00006A4D 4C8D4DF8                	lea r9, [rbp - 8]
 10243                                  .L_tc_recycle_frame_loop_0047:
 10244 00006A51 4983FA00                	cmp r10, 0
 10245 00006A55 7413                    	je .L_tc_recycle_frame_done_0047
 10246 00006A57 4D8B19                  	mov r11, qword [r9]
 10247 00006A5A 4D8918                  	mov qword [r8], r11
 10248 00006A5D 49FFCA                  	dec r10
 10249 00006A60 4983E808                	sub r8, 8
 10250 00006A64 4983E908                	sub r9, 8
 10251 00006A68 EBE7                    	jmp .L_tc_recycle_frame_loop_0047
 10252                                  .L_tc_recycle_frame_done_0047:
 10253 00006A6A 498D6008                	lea rsp, [r8 + 8]
 10254 00006A6E 5D                      	pop rbp
 10255 00006A6F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10256                                  .L_if_end_001d:
 10257                                  .L_if_end_001e:
 10258                                  .L_if_end_001f:
 10259 00006A72 E983050000              	jmp .L_if_end_0028
 10260                                  .L_if_else_0028:
 10261                                  	; preparing a non-tail-call
 10262 00006A77 488B4520                	mov rax, PARAM(0)	; param a
 10263 00006A7B 50                      	push rax
 10264 00006A7C 6A01                    	push 1	; arg count
 10265 00006A7E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10266 00006A86 803805                  	cmp byte [rax], T_undefined
 10267 00006A89 0F8466E30000            	je L_error_fvar_undefined
 10268 00006A8F 803804                  	cmp byte [rax], T_closure
 10269 00006A92 0F85E1E30000            	jne L_error_non_closure
 10270 00006A98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10271 00006A9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10272 00006A9E 483D[02000000]          	cmp rax, sob_boolean_false
 10273 00006AA4 0F8467020000            	je .L_if_else_0027
 10274                                  	; preparing a non-tail-call
 10275 00006AAA 488B4528                	mov rax, PARAM(1)	; param b
 10276 00006AAE 50                      	push rax
 10277 00006AAF 6A01                    	push 1	; arg count
 10278 00006AB1 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10279 00006AB9 803805                  	cmp byte [rax], T_undefined
 10280 00006ABC 0F8433E30000            	je L_error_fvar_undefined
 10281 00006AC2 803804                  	cmp byte [rax], T_closure
 10282 00006AC5 0F85AEE30000            	jne L_error_non_closure
 10283 00006ACB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10284 00006ACE FF5009                  	call SOB_CLOSURE_CODE(rax)
 10285 00006AD1 483D[02000000]          	cmp rax, sob_boolean_false
 10286 00006AD7 0F848B000000            	je .L_if_else_0022
 10287                                  	; Initiating tail-call optimization
 10288                                  	; preparing a non-tail-call
 10289 00006ADD 488B4528                	mov rax, PARAM(1)	; param b
 10290 00006AE1 50                      	push rax
 10291 00006AE2 6A01                    	push 1	; arg count
 10292 00006AE4 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10293 00006AEC 803805                  	cmp byte [rax], T_undefined
 10294 00006AEF 0F8400E30000            	je L_error_fvar_undefined
 10295 00006AF5 803804                  	cmp byte [rax], T_closure
 10296 00006AF8 0F857BE30000            	jne L_error_non_closure
 10297 00006AFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10298 00006B01 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10299 00006B04 50                      	push rax
 10300 00006B05 488B4520                	mov rax, PARAM(0)	; param a
 10301 00006B09 50                      	push rax
 10302 00006B0A 6A02                    	push 2	; Number of arguments
 10303 00006B0C 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10304 00006B14 803805                  	cmp byte [rax], T_undefined
 10305 00006B17 0F84D8E20000            	je L_error_fvar_undefined
 10306 00006B1D 803804                  	cmp byte [rax], T_closure
 10307 00006B20 0F8553E30000            	jne L_error_non_closure
 10308 00006B26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10309                                  
 10310                                  	; Reclaiming the current stack frame
 10311 00006B29 FF7508                  	push qword [rbp + 8]
 10312 00006B2C FF7500                  	push qword [rbp]
 10313 00006B2F 41BA06000000            	mov r10, 2 + 4
 10314 00006B35 4C8B4518                	mov r8, COUNT
 10315 00006B39 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10316 00006B3E 4C8D4DF8                	lea r9, [rbp - 8]
 10317                                  .L_tc_recycle_frame_loop_0048:
 10318 00006B42 4983FA00                	cmp r10, 0
 10319 00006B46 7413                    	je .L_tc_recycle_frame_done_0048
 10320 00006B48 4D8B19                  	mov r11, qword [r9]
 10321 00006B4B 4D8918                  	mov qword [r8], r11
 10322 00006B4E 49FFCA                  	dec r10
 10323 00006B51 4983E808                	sub r8, 8
 10324 00006B55 4983E908                	sub r9, 8
 10325 00006B59 EBE7                    	jmp .L_tc_recycle_frame_loop_0048
 10326                                  .L_tc_recycle_frame_done_0048:
 10327 00006B5B 498D6008                	lea rsp, [r8 + 8]
 10328 00006B5F 5D                      	pop rbp
 10329 00006B60 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10330 00006B63 E9A4010000              	jmp .L_if_end_0022
 10331                                  .L_if_else_0022:
 10332                                  	; preparing a non-tail-call
 10333 00006B68 488B4528                	mov rax, PARAM(1)	; param b
 10334 00006B6C 50                      	push rax
 10335 00006B6D 6A01                    	push 1	; arg count
 10336 00006B6F 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10337 00006B77 803805                  	cmp byte [rax], T_undefined
 10338 00006B7A 0F8475E20000            	je L_error_fvar_undefined
 10339 00006B80 803804                  	cmp byte [rax], T_closure
 10340 00006B83 0F85F0E20000            	jne L_error_non_closure
 10341 00006B89 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10342 00006B8C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10343 00006B8F 483D[02000000]          	cmp rax, sob_boolean_false
 10344 00006B95 7468                    	je .L_if_else_0021
 10345                                  	; Initiating tail-call optimization
 10346 00006B97 488B4528                	mov rax, PARAM(1)	; param b
 10347 00006B9B 50                      	push rax
 10348 00006B9C 488B4520                	mov rax, PARAM(0)	; param a
 10349 00006BA0 50                      	push rax
 10350 00006BA1 6A02                    	push 2	; Number of arguments
 10351 00006BA3 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10352 00006BAB 803805                  	cmp byte [rax], T_undefined
 10353 00006BAE 0F8441E20000            	je L_error_fvar_undefined
 10354 00006BB4 803804                  	cmp byte [rax], T_closure
 10355 00006BB7 0F85BCE20000            	jne L_error_non_closure
 10356 00006BBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 10357                                  
 10358                                  	; Reclaiming the current stack frame
 10359 00006BC0 FF7508                  	push qword [rbp + 8]
 10360 00006BC3 FF7500                  	push qword [rbp]
 10361 00006BC6 41BA06000000            	mov r10, 2 + 4
 10362 00006BCC 4C8B4518                	mov r8, COUNT
 10363 00006BD0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10364 00006BD5 4C8D4DF8                	lea r9, [rbp - 8]
 10365                                  .L_tc_recycle_frame_loop_0049:
 10366 00006BD9 4983FA00                	cmp r10, 0
 10367 00006BDD 7413                    	je .L_tc_recycle_frame_done_0049
 10368 00006BDF 4D8B19                  	mov r11, qword [r9]
 10369 00006BE2 4D8918                  	mov qword [r8], r11
 10370 00006BE5 49FFCA                  	dec r10
 10371 00006BE8 4983E808                	sub r8, 8
 10372 00006BEC 4983E908                	sub r9, 8
 10373 00006BF0 EBE7                    	jmp .L_tc_recycle_frame_loop_0049
 10374                                  .L_tc_recycle_frame_done_0049:
 10375 00006BF2 498D6008                	lea rsp, [r8 + 8]
 10376 00006BF6 5D                      	pop rbp
 10377 00006BF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10378 00006BFA E90D010000              	jmp .L_if_end_0021
 10379                                  .L_if_else_0021:
 10380                                  	; preparing a non-tail-call
 10381 00006BFF 488B4528                	mov rax, PARAM(1)	; param b
 10382 00006C03 50                      	push rax
 10383 00006C04 6A01                    	push 1	; arg count
 10384 00006C06 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10385 00006C0E 803805                  	cmp byte [rax], T_undefined
 10386 00006C11 0F84DEE10000            	je L_error_fvar_undefined
 10387 00006C17 803804                  	cmp byte [rax], T_closure
 10388 00006C1A 0F8559E20000            	jne L_error_non_closure
 10389 00006C20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10390 00006C23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10391 00006C26 483D[02000000]          	cmp rax, sob_boolean_false
 10392 00006C2C 0F8488000000            	je .L_if_else_0020
 10393                                  	; Initiating tail-call optimization
 10394 00006C32 488B4528                	mov rax, PARAM(1)	; param b
 10395 00006C36 50                      	push rax
 10396                                  	; preparing a non-tail-call
 10397 00006C37 488B4520                	mov rax, PARAM(0)	; param a
 10398 00006C3B 50                      	push rax
 10399 00006C3C 6A01                    	push 1	; arg count
 10400 00006C3E 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10401 00006C46 803805                  	cmp byte [rax], T_undefined
 10402 00006C49 0F84A6E10000            	je L_error_fvar_undefined
 10403 00006C4F 803804                  	cmp byte [rax], T_closure
 10404 00006C52 0F8521E20000            	jne L_error_non_closure
 10405 00006C58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10406 00006C5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10407 00006C5E 50                      	push rax
 10408 00006C5F 6A02                    	push 2	; Number of arguments
 10409 00006C61 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10410 00006C69 803805                  	cmp byte [rax], T_undefined
 10411 00006C6C 0F8483E10000            	je L_error_fvar_undefined
 10412 00006C72 803804                  	cmp byte [rax], T_closure
 10413 00006C75 0F85FEE10000            	jne L_error_non_closure
 10414 00006C7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10415                                  
 10416                                  	; Reclaiming the current stack frame
 10417 00006C7E FF7508                  	push qword [rbp + 8]
 10418 00006C81 FF7500                  	push qword [rbp]
 10419 00006C84 41BA06000000            	mov r10, 2 + 4
 10420 00006C8A 4C8B4518                	mov r8, COUNT
 10421 00006C8E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10422 00006C93 4C8D4DF8                	lea r9, [rbp - 8]
 10423                                  .L_tc_recycle_frame_loop_004a:
 10424 00006C97 4983FA00                	cmp r10, 0
 10425 00006C9B 7413                    	je .L_tc_recycle_frame_done_004a
 10426 00006C9D 4D8B19                  	mov r11, qword [r9]
 10427 00006CA0 4D8918                  	mov qword [r8], r11
 10428 00006CA3 49FFCA                  	dec r10
 10429 00006CA6 4983E808                	sub r8, 8
 10430 00006CAA 4983E908                	sub r9, 8
 10431 00006CAE EBE7                    	jmp .L_tc_recycle_frame_loop_004a
 10432                                  .L_tc_recycle_frame_done_004a:
 10433 00006CB0 498D6008                	lea rsp, [r8 + 8]
 10434 00006CB4 5D                      	pop rbp
 10435 00006CB5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10436 00006CB8 EB52                    	jmp .L_if_end_0020
 10437                                  .L_if_else_0020:
 10438                                  	; Initiating tail-call optimization
 10439 00006CBA 6A00                    	push 0	; Number of arguments
 10440 00006CBC 488B4510                	mov rax, ENV
 10441 00006CC0 488B00                  	mov rax, qword [rax + 8 * 0]
 10442 00006CC3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10443 00006CC6 803804                  	cmp byte [rax], T_closure
 10444 00006CC9 0F85AAE10000            	jne L_error_non_closure
 10445 00006CCF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10446                                  
 10447                                  	; Reclaiming the current stack frame
 10448 00006CD2 FF7508                  	push qword [rbp + 8]
 10449 00006CD5 FF7500                  	push qword [rbp]
 10450 00006CD8 41BA04000000            	mov r10, 0 + 4
 10451 00006CDE 4C8B4518                	mov r8, COUNT
 10452 00006CE2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10453 00006CE7 4C8D4DF8                	lea r9, [rbp - 8]
 10454                                  .L_tc_recycle_frame_loop_004b:
 10455 00006CEB 4983FA00                	cmp r10, 0
 10456 00006CEF 7413                    	je .L_tc_recycle_frame_done_004b
 10457 00006CF1 4D8B19                  	mov r11, qword [r9]
 10458 00006CF4 4D8918                  	mov qword [r8], r11
 10459 00006CF7 49FFCA                  	dec r10
 10460 00006CFA 4983E808                	sub r8, 8
 10461 00006CFE 4983E908                	sub r9, 8
 10462 00006D02 EBE7                    	jmp .L_tc_recycle_frame_loop_004b
 10463                                  .L_tc_recycle_frame_done_004b:
 10464 00006D04 498D6008                	lea rsp, [r8 + 8]
 10465 00006D08 5D                      	pop rbp
 10466 00006D09 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10467                                  .L_if_end_0020:
 10468                                  .L_if_end_0021:
 10469                                  .L_if_end_0022:
 10470 00006D0C E9E9020000              	jmp .L_if_end_0027
 10471                                  .L_if_else_0027:
 10472                                  	; preparing a non-tail-call
 10473 00006D11 488B4520                	mov rax, PARAM(0)	; param a
 10474 00006D15 50                      	push rax
 10475 00006D16 6A01                    	push 1	; arg count
 10476 00006D18 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10477 00006D20 803805                  	cmp byte [rax], T_undefined
 10478 00006D23 0F84CCE00000            	je L_error_fvar_undefined
 10479 00006D29 803804                  	cmp byte [rax], T_closure
 10480 00006D2C 0F8547E10000            	jne L_error_non_closure
 10481 00006D32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10482 00006D35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10483 00006D38 483D[02000000]          	cmp rax, sob_boolean_false
 10484 00006D3E 0F8464020000            	je .L_if_else_0026
 10485                                  	; preparing a non-tail-call
 10486 00006D44 488B4528                	mov rax, PARAM(1)	; param b
 10487 00006D48 50                      	push rax
 10488 00006D49 6A01                    	push 1	; arg count
 10489 00006D4B 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10490 00006D53 803805                  	cmp byte [rax], T_undefined
 10491 00006D56 0F8499E00000            	je L_error_fvar_undefined
 10492 00006D5C 803804                  	cmp byte [rax], T_closure
 10493 00006D5F 0F8514E10000            	jne L_error_non_closure
 10494 00006D65 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10495 00006D68 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10496 00006D6B 483D[02000000]          	cmp rax, sob_boolean_false
 10497 00006D71 0F848B000000            	je .L_if_else_0025
 10498                                  	; Initiating tail-call optimization
 10499                                  	; preparing a non-tail-call
 10500 00006D77 488B4528                	mov rax, PARAM(1)	; param b
 10501 00006D7B 50                      	push rax
 10502 00006D7C 6A01                    	push 1	; arg count
 10503 00006D7E 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10504 00006D86 803805                  	cmp byte [rax], T_undefined
 10505 00006D89 0F8466E00000            	je L_error_fvar_undefined
 10506 00006D8F 803804                  	cmp byte [rax], T_closure
 10507 00006D92 0F85E1E00000            	jne L_error_non_closure
 10508 00006D98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10509 00006D9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10510 00006D9E 50                      	push rax
 10511 00006D9F 488B4520                	mov rax, PARAM(0)	; param a
 10512 00006DA3 50                      	push rax
 10513 00006DA4 6A02                    	push 2	; Number of arguments
 10514 00006DA6 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10515 00006DAE 803805                  	cmp byte [rax], T_undefined
 10516 00006DB1 0F843EE00000            	je L_error_fvar_undefined
 10517 00006DB7 803804                  	cmp byte [rax], T_closure
 10518 00006DBA 0F85B9E00000            	jne L_error_non_closure
 10519 00006DC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10520                                  
 10521                                  	; Reclaiming the current stack frame
 10522 00006DC3 FF7508                  	push qword [rbp + 8]
 10523 00006DC6 FF7500                  	push qword [rbp]
 10524 00006DC9 41BA06000000            	mov r10, 2 + 4
 10525 00006DCF 4C8B4518                	mov r8, COUNT
 10526 00006DD3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10527 00006DD8 4C8D4DF8                	lea r9, [rbp - 8]
 10528                                  .L_tc_recycle_frame_loop_004c:
 10529 00006DDC 4983FA00                	cmp r10, 0
 10530 00006DE0 7413                    	je .L_tc_recycle_frame_done_004c
 10531 00006DE2 4D8B19                  	mov r11, qword [r9]
 10532 00006DE5 4D8918                  	mov qword [r8], r11
 10533 00006DE8 49FFCA                  	dec r10
 10534 00006DEB 4983E808                	sub r8, 8
 10535 00006DEF 4983E908                	sub r9, 8
 10536 00006DF3 EBE7                    	jmp .L_tc_recycle_frame_loop_004c
 10537                                  .L_tc_recycle_frame_done_004c:
 10538 00006DF5 498D6008                	lea rsp, [r8 + 8]
 10539 00006DF9 5D                      	pop rbp
 10540 00006DFA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10541 00006DFD E9A4010000              	jmp .L_if_end_0025
 10542                                  .L_if_else_0025:
 10543                                  	; preparing a non-tail-call
 10544 00006E02 488B4528                	mov rax, PARAM(1)	; param b
 10545 00006E06 50                      	push rax
 10546 00006E07 6A01                    	push 1	; arg count
 10547 00006E09 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10548 00006E11 803805                  	cmp byte [rax], T_undefined
 10549 00006E14 0F84DBDF0000            	je L_error_fvar_undefined
 10550 00006E1A 803804                  	cmp byte [rax], T_closure
 10551 00006E1D 0F8556E00000            	jne L_error_non_closure
 10552 00006E23 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10553 00006E26 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10554 00006E29 483D[02000000]          	cmp rax, sob_boolean_false
 10555 00006E2F 0F848B000000            	je .L_if_else_0024
 10556                                  	; Initiating tail-call optimization
 10557                                  	; preparing a non-tail-call
 10558 00006E35 488B4528                	mov rax, PARAM(1)	; param b
 10559 00006E39 50                      	push rax
 10560 00006E3A 6A01                    	push 1	; arg count
 10561 00006E3C 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10562 00006E44 803805                  	cmp byte [rax], T_undefined
 10563 00006E47 0F84A8DF0000            	je L_error_fvar_undefined
 10564 00006E4D 803804                  	cmp byte [rax], T_closure
 10565 00006E50 0F8523E00000            	jne L_error_non_closure
 10566 00006E56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10567 00006E59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10568 00006E5C 50                      	push rax
 10569 00006E5D 488B4520                	mov rax, PARAM(0)	; param a
 10570 00006E61 50                      	push rax
 10571 00006E62 6A02                    	push 2	; Number of arguments
 10572 00006E64 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10573 00006E6C 803805                  	cmp byte [rax], T_undefined
 10574 00006E6F 0F8480DF0000            	je L_error_fvar_undefined
 10575 00006E75 803804                  	cmp byte [rax], T_closure
 10576 00006E78 0F85FBDF0000            	jne L_error_non_closure
 10577 00006E7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10578                                  
 10579                                  	; Reclaiming the current stack frame
 10580 00006E81 FF7508                  	push qword [rbp + 8]
 10581 00006E84 FF7500                  	push qword [rbp]
 10582 00006E87 41BA06000000            	mov r10, 2 + 4
 10583 00006E8D 4C8B4518                	mov r8, COUNT
 10584 00006E91 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10585 00006E96 4C8D4DF8                	lea r9, [rbp - 8]
 10586                                  .L_tc_recycle_frame_loop_004d:
 10587 00006E9A 4983FA00                	cmp r10, 0
 10588 00006E9E 7413                    	je .L_tc_recycle_frame_done_004d
 10589 00006EA0 4D8B19                  	mov r11, qword [r9]
 10590 00006EA3 4D8918                  	mov qword [r8], r11
 10591 00006EA6 49FFCA                  	dec r10
 10592 00006EA9 4983E808                	sub r8, 8
 10593 00006EAD 4983E908                	sub r9, 8
 10594 00006EB1 EBE7                    	jmp .L_tc_recycle_frame_loop_004d
 10595                                  .L_tc_recycle_frame_done_004d:
 10596 00006EB3 498D6008                	lea rsp, [r8 + 8]
 10597 00006EB7 5D                      	pop rbp
 10598 00006EB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10599 00006EBB E9E6000000              	jmp .L_if_end_0024
 10600                                  .L_if_else_0024:
 10601                                  	; preparing a non-tail-call
 10602 00006EC0 488B4528                	mov rax, PARAM(1)	; param b
 10603 00006EC4 50                      	push rax
 10604 00006EC5 6A01                    	push 1	; arg count
 10605 00006EC7 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10606 00006ECF 803805                  	cmp byte [rax], T_undefined
 10607 00006ED2 0F841DDF0000            	je L_error_fvar_undefined
 10608 00006ED8 803804                  	cmp byte [rax], T_closure
 10609 00006EDB 0F8598DF0000            	jne L_error_non_closure
 10610 00006EE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10611 00006EE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10612 00006EE7 483D[02000000]          	cmp rax, sob_boolean_false
 10613 00006EED 7465                    	je .L_if_else_0023
 10614                                  	; Initiating tail-call optimization
 10615 00006EEF 488B4528                	mov rax, PARAM(1)	; param b
 10616 00006EF3 50                      	push rax
 10617 00006EF4 488B4520                	mov rax, PARAM(0)	; param a
 10618 00006EF8 50                      	push rax
 10619 00006EF9 6A02                    	push 2	; Number of arguments
 10620 00006EFB 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10621 00006F03 803805                  	cmp byte [rax], T_undefined
 10622 00006F06 0F84E9DE0000            	je L_error_fvar_undefined
 10623 00006F0C 803804                  	cmp byte [rax], T_closure
 10624 00006F0F 0F8564DF0000            	jne L_error_non_closure
 10625 00006F15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10626                                  
 10627                                  	; Reclaiming the current stack frame
 10628 00006F18 FF7508                  	push qword [rbp + 8]
 10629 00006F1B FF7500                  	push qword [rbp]
 10630 00006F1E 41BA06000000            	mov r10, 2 + 4
 10631 00006F24 4C8B4518                	mov r8, COUNT
 10632 00006F28 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10633 00006F2D 4C8D4DF8                	lea r9, [rbp - 8]
 10634                                  .L_tc_recycle_frame_loop_004e:
 10635 00006F31 4983FA00                	cmp r10, 0
 10636 00006F35 7413                    	je .L_tc_recycle_frame_done_004e
 10637 00006F37 4D8B19                  	mov r11, qword [r9]
 10638 00006F3A 4D8918                  	mov qword [r8], r11
 10639 00006F3D 49FFCA                  	dec r10
 10640 00006F40 4983E808                	sub r8, 8
 10641 00006F44 4983E908                	sub r9, 8
 10642 00006F48 EBE7                    	jmp .L_tc_recycle_frame_loop_004e
 10643                                  .L_tc_recycle_frame_done_004e:
 10644 00006F4A 498D6008                	lea rsp, [r8 + 8]
 10645 00006F4E 5D                      	pop rbp
 10646 00006F4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10647 00006F52 EB52                    	jmp .L_if_end_0023
 10648                                  .L_if_else_0023:
 10649                                  	; Initiating tail-call optimization
 10650 00006F54 6A00                    	push 0	; Number of arguments
 10651 00006F56 488B4510                	mov rax, ENV
 10652 00006F5A 488B00                  	mov rax, qword [rax + 8 * 0]
 10653 00006F5D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10654 00006F60 803804                  	cmp byte [rax], T_closure
 10655 00006F63 0F8510DF0000            	jne L_error_non_closure
 10656 00006F69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10657                                  
 10658                                  	; Reclaiming the current stack frame
 10659 00006F6C FF7508                  	push qword [rbp + 8]
 10660 00006F6F FF7500                  	push qword [rbp]
 10661 00006F72 41BA04000000            	mov r10, 0 + 4
 10662 00006F78 4C8B4518                	mov r8, COUNT
 10663 00006F7C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10664 00006F81 4C8D4DF8                	lea r9, [rbp - 8]
 10665                                  .L_tc_recycle_frame_loop_004f:
 10666 00006F85 4983FA00                	cmp r10, 0
 10667 00006F89 7413                    	je .L_tc_recycle_frame_done_004f
 10668 00006F8B 4D8B19                  	mov r11, qword [r9]
 10669 00006F8E 4D8918                  	mov qword [r8], r11
 10670 00006F91 49FFCA                  	dec r10
 10671 00006F94 4983E808                	sub r8, 8
 10672 00006F98 4983E908                	sub r9, 8
 10673 00006F9C EBE7                    	jmp .L_tc_recycle_frame_loop_004f
 10674                                  .L_tc_recycle_frame_done_004f:
 10675 00006F9E 498D6008                	lea rsp, [r8 + 8]
 10676 00006FA2 5D                      	pop rbp
 10677 00006FA3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10678                                  .L_if_end_0023:
 10679                                  .L_if_end_0024:
 10680                                  .L_if_end_0025:
 10681 00006FA6 EB52                    	jmp .L_if_end_0026
 10682                                  .L_if_else_0026:
 10683                                  	; Initiating tail-call optimization
 10684 00006FA8 6A00                    	push 0	; Number of arguments
 10685 00006FAA 488B4510                	mov rax, ENV
 10686 00006FAE 488B00                  	mov rax, qword [rax + 8 * 0]
 10687 00006FB1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10688 00006FB4 803804                  	cmp byte [rax], T_closure
 10689 00006FB7 0F85BCDE0000            	jne L_error_non_closure
 10690 00006FBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 10691                                  
 10692                                  	; Reclaiming the current stack frame
 10693 00006FC0 FF7508                  	push qword [rbp + 8]
 10694 00006FC3 FF7500                  	push qword [rbp]
 10695 00006FC6 41BA04000000            	mov r10, 0 + 4
 10696 00006FCC 4C8B4518                	mov r8, COUNT
 10697 00006FD0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10698 00006FD5 4C8D4DF8                	lea r9, [rbp - 8]
 10699                                  .L_tc_recycle_frame_loop_0050:
 10700 00006FD9 4983FA00                	cmp r10, 0
 10701 00006FDD 7413                    	je .L_tc_recycle_frame_done_0050
 10702 00006FDF 4D8B19                  	mov r11, qword [r9]
 10703 00006FE2 4D8918                  	mov qword [r8], r11
 10704 00006FE5 49FFCA                  	dec r10
 10705 00006FE8 4983E808                	sub r8, 8
 10706 00006FEC 4983E908                	sub r9, 8
 10707 00006FF0 EBE7                    	jmp .L_tc_recycle_frame_loop_0050
 10708                                  .L_tc_recycle_frame_done_0050:
 10709 00006FF2 498D6008                	lea rsp, [r8 + 8]
 10710 00006FF6 5D                      	pop rbp
 10711 00006FF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10712                                  .L_if_end_0026:
 10713                                  .L_if_end_0027:
 10714                                  .L_if_end_0028:
 10715 00006FFA C9                      	leave
 10716 00006FFB C22000                  	ret AND_KILL_FRAME(2)
 10717                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10718 00006FFE 50                      	push rax
 10719 00006FFF 6A01                    	push 1	; Number of arguments
 10720 00007001 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10721 00007006 E817DF0000              	call malloc
 10722 0000700B 50                      	push rax
 10723 0000700C BF08000000              	mov rdi, 8 * 1	; new rib
 10724 00007011 E80CDF0000              	call malloc
 10725 00007016 50                      	push rax
 10726 00007017 BF10000000              	mov rdi, 8 * 2	; extended env
 10727 0000701C E801DF0000              	call malloc
 10728 00007021 488B7D10                	mov rdi, ENV
 10729 00007025 BE00000000              	mov rsi, 0
 10730 0000702A BA01000000              	mov rdx, 1
 10731                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10732 0000702F 4883FE01                	cmp rsi, 1
 10733 00007033 7410                    	je .L_lambda_simple_env_end_003b
 10734 00007035 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10735 00007039 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10736 0000703D 48FFC6                  	inc rsi
 10737 00007040 48FFC2                  	inc rdx
 10738 00007043 EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10739                                  .L_lambda_simple_env_end_003b:
 10740 00007045 5B                      	pop rbx
 10741 00007046 BE00000000              	mov rsi, 0
 10742                                  .L_lambda_simple_params_loop_003b:	; copy params
 10743 0000704B 4883FE01                	cmp rsi, 1
 10744 0000704F 740E                    	je .L_lambda_simple_params_end_003b
 10745 00007051 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10746 00007056 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10747 0000705A 48FFC6                  	inc rsi
 10748 0000705D EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10749                                  .L_lambda_simple_params_end_003b:
 10750 0000705F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10751 00007062 4889C3                  	mov rbx, rax
 10752 00007065 58                      	pop rax
 10753 00007066 C60004                  	mov byte [rax], T_closure
 10754 00007069 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10755 0000706D 48C74009[7A700000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10756 00007075 E9AD030000              	jmp .L_lambda_simple_end_003b
 10757                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10758 0000707A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10759 00007080 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10760 00007082 FF742410                	push qword [rsp + 8 * 2]
 10761 00007086 6A01                    	push 1
 10762 00007088 E94EDE0000              	jmp L_error_incorrect_arity_simple
 10763                                  .L_lambda_simple_arity_check_ok_003b:
 10764 0000708D C8000000                	enter 0, 0
 10765 00007091 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10766 00007096 E887DE0000              	call malloc
 10767 0000709B 50                      	push rax
 10768 0000709C BF08000000              	mov rdi, 8 * 1	; new rib
 10769 000070A1 E87CDE0000              	call malloc
 10770 000070A6 50                      	push rax
 10771 000070A7 BF18000000              	mov rdi, 8 * 3	; extended env
 10772 000070AC E871DE0000              	call malloc
 10773 000070B1 488B7D10                	mov rdi, ENV
 10774 000070B5 BE00000000              	mov rsi, 0
 10775 000070BA BA01000000              	mov rdx, 1
 10776                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 10777 000070BF 4883FE02                	cmp rsi, 2
 10778 000070C3 7410                    	je .L_lambda_opt_env_end_000b
 10779 000070C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10780 000070C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10781 000070CD 48FFC6                  	inc rsi
 10782 000070D0 48FFC2                  	inc rdx
 10783 000070D3 EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10784                                  .L_lambda_opt_env_end_000b:
 10785 000070D5 5B                      	pop rbx
 10786 000070D6 BE00000000              	mov rsi, 0
 10787                                  .L_lambda_opt_params_loop_000b:	; copy params
 10788 000070DB 4883FE01                	cmp rsi, 1
 10789 000070DF 740E                    	je .L_lambda_opt_params_end_000b
 10790 000070E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10791 000070E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10792 000070EA 48FFC6                  	inc rsi
 10793 000070ED EBEC                    	jmp .L_lambda_opt_params_loop_000b
 10794                                  .L_lambda_opt_params_end_000b:
 10795 000070EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10796 000070F2 4889C3                  	mov rbx, rax
 10797 000070F5 58                      	pop rax
 10798 000070F6 C60004                  	mov byte [rax], T_closure
 10799 000070F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10800 000070FD 48C74009[0A710000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10801 00007105 E919030000              	jmp .L_lambda_opt_end_000b
 10802                                  .L_lambda_opt_code_000b:
 10803 0000710A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 10804 0000710F 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 10805 00007113 7407                    	je .L_lambda_opt_arity_check_exact_000b	; Jump if arity matches
 10806 00007115 7F4C                    	jg .L_lambda_opt_arity_check_more_000b	; Jump if more arguments passed
 10807 00007117 E9D3DD0000              	jmp L_error_incorrect_arity_opt
 10808                                  .L_lambda_opt_arity_check_exact_000b:
 10809 0000711C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 10810 0000711F 4983C603                	add r14, 3 ; add 3 first stack values
 10811 00007123 41BF00000000            	mov r15, 0 ; r15 = index
 10812 00007129 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 10813 0000712D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 10814 00007135 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 10815                                  .L_lambda_opt_stack_shrink_loop_000b:
 10816 00007137 4983FE00                	cmp r14, 0
 10817 0000713B 7E11                    	jle .L_make_lambda_opt_exact_finish_000b
 10818 0000713D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 10819 00007142 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 10820 00007146 49FFCE                  	dec r14 ; next loop value
 10821 00007149 49FFC7                  	inc r15 ; update i
 10822 0000714C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 10823                                  .L_make_lambda_opt_exact_finish_000b:
 10824 0000714E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 10825 00007156 49FFC2                  	inc r10
 10826 00007159 4C89542410              	mov qword [rsp + 8 * 2], r10
 10827 0000715E E99E000000              	jmp .L_lambda_opt_stack_adjusted_000b
 10828                                  .L_lambda_opt_arity_check_more_000b:
 10829 00007163 4D89D6                  	mov r14, r10 ; r14 = num args
 10830 00007166 4D89D7                  	mov r15, r10 ; r15 = num args
 10831 00007169 41B901000000            	mov r9, 1; r9 = number of params 
 10832 0000716F 4D29CE                  	sub r14, r9 ; r14 = extra args
 10833 00007172 4D01F1                  	add r9, r14 ; r9 = num args
 10834 00007175 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 10834 00007177 [0100000000000000] 
 10835 0000717F EB00                    	jmp .L_make_lambda_opt_arg_list_000b
 10836                                  .L_make_lambda_opt_arg_list_000b:
 10837 00007181 4983FE00                	cmp r14, 0
 10838 00007185 7E25                    	jle .L_make_lambda_opt_stack_fixed_000b
 10839 00007187 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 10840 0000718C BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 10841 00007191 E88CDD0000              	call malloc                         ; Allocate memory, result in rax
 10842 00007196 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 10843 00007199 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 10844 0000719D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 10845 000071A1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 10846 000071A4 49FFC9                  	dec r9                              ; args index minus 1
 10847 000071A7 49FFCE                  	dec r14                             ; next iteration
 10848 000071AA EBD5                    	jmp .L_make_lambda_opt_arg_list_000b
 10849                                  .L_make_lambda_opt_stack_fixed_000b:
 10850 000071AC 4D89FE                  	mov r14, r15 ; r14 = num args
 10851 000071AF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 10852 000071B2 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 10853 000071B6 41BA01000000            	mov r10, 1; r10 = num of params
 10854 000071BC 4D29D6                  	sub r14, r10 ; r14 = extra args
 10855 000071BF 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 10856 000071C2 49FFCE                  	dec r14 ; how much we need to change stack wise?
 10857 000071C5 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 10858 000071CA EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000b
 10859                                  .L_lambda_opt_stack_shrink_loop_more_000b:
 10860 000071CC 4983F800                	cmp r8, 0
 10861 000071D0 7E15                    	jle .L_make_lambda_opt_more_finish_000b
 10862 000071D2 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 10863 000071D6 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 10864 000071DA 4D8D26                  	lea r12, [r14]
 10865 000071DD 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 10866 000071E2 49FFC8                  	dec r8 ; next iteration
 10867 000071E5 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000b
 10868                                  .L_make_lambda_opt_more_finish_000b:
 10869 000071E7 4D89F8                  	mov r8, r15 ; num of args
 10870 000071EA 41BA01000000            	mov r10, 1
 10871 000071F0 4D29D0                  	sub r8, r10 ; num of new args
 10872 000071F3 49FFC0                  	inc r8
 10873 000071F6 4C89442420              	mov qword [rsp + 8 * 4], r8
 10874 000071FB 4883C410                	add rsp, 8 * 2  ; 
 10875 000071FF EB00                    	jmp .L_lambda_opt_stack_adjusted_000b
 10876                                  .L_lambda_opt_stack_adjusted_000b:
 10877 00007201 C8000000                	enter 0, 0
 10878                                  	; preparing a non-tail-call
 10879 00007205 488B4528                	mov rax, PARAM(1)	; param s
 10880 00007209 50                      	push rax
 10881 0000720A 6A01                    	push 1	; arg count
 10882 0000720C 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 10883 00007214 803805                  	cmp byte [rax], T_undefined
 10884 00007217 0F84D8DB0000            	je L_error_fvar_undefined
 10885 0000721D 803804                  	cmp byte [rax], T_closure
 10886 00007220 0F8553DC0000            	jne L_error_non_closure
 10887 00007226 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10888 00007229 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10889 0000722C 483D[02000000]          	cmp rax, sob_boolean_false
 10890 00007232 7467                    	je .L_if_else_0029
 10891                                  	; Initiating tail-call optimization
 10892 00007234 488B4520                	mov rax, PARAM(0)	; param a
 10893 00007238 50                      	push rax
 10894 00007239 48B8-                   	mov rax, L_constants + 2135
 10894 0000723B [5708000000000000] 
 10895 00007243 50                      	push rax
 10896 00007244 6A02                    	push 2	; Number of arguments
 10897 00007246 488B4510                	mov rax, ENV
 10898 0000724A 488B00                  	mov rax, qword [rax + 8 * 0]
 10899 0000724D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10900 00007250 803804                  	cmp byte [rax], T_closure
 10901 00007253 0F8520DC0000            	jne L_error_non_closure
 10902 00007259 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10903                                  
 10904                                  	; Reclaiming the current stack frame
 10905 0000725C FF7508                  	push qword [rbp + 8]
 10906 0000725F FF7500                  	push qword [rbp]
 10907 00007262 41BA06000000            	mov r10, 2 + 4
 10908 00007268 4C8B4518                	mov r8, COUNT
 10909 0000726C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10910 00007271 4C8D4DF8                	lea r9, [rbp - 8]
 10911                                  .L_tc_recycle_frame_loop_0051:
 10912 00007275 4983FA00                	cmp r10, 0
 10913 00007279 7413                    	je .L_tc_recycle_frame_done_0051
 10914 0000727B 4D8B19                  	mov r11, qword [r9]
 10915 0000727E 4D8918                  	mov qword [r8], r11
 10916 00007281 49FFCA                  	dec r10
 10917 00007284 4983E808                	sub r8, 8
 10918 00007288 4983E908                	sub r9, 8
 10919 0000728C EBE7                    	jmp .L_tc_recycle_frame_loop_0051
 10920                                  .L_tc_recycle_frame_done_0051:
 10921 0000728E 498D6008                	lea rsp, [r8 + 8]
 10922 00007292 5D                      	pop rbp
 10923 00007293 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10924 00007296 E984010000              	jmp .L_if_end_0029
 10925                                  .L_if_else_0029:
 10926                                  	; Initiating tail-call optimization
 10927                                  	; preparing a non-tail-call
 10928 0000729B 488B4528                	mov rax, PARAM(1)	; param s
 10929 0000729F 50                      	push rax
 10930 000072A0 48B8-                   	mov rax, L_constants + 2135
 10930 000072A2 [5708000000000000] 
 10931 000072AA 50                      	push rax
 10932 000072AB 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 10933 000072B3 803805                  	cmp byte [rax], T_undefined
 10934 000072B6 0F8439DB0000            	je L_error_fvar_undefined
 10935 000072BC 50                      	push rax
 10936 000072BD 6A03                    	push 3	; arg count
 10937 000072BF 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10938 000072C7 803805                  	cmp byte [rax], T_undefined
 10939 000072CA 0F8425DB0000            	je L_error_fvar_undefined
 10940 000072D0 803804                  	cmp byte [rax], T_closure
 10941 000072D3 0F85A0DB0000            	jne L_error_non_closure
 10942 000072D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10943 000072DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10944 000072DF 50                      	push rax
 10945 000072E0 6A01                    	push 1	; Number of arguments
 10946 000072E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10947 000072E7 E836DC0000              	call malloc
 10948 000072EC 50                      	push rax
 10949 000072ED BF10000000              	mov rdi, 8 * 2	; new rib
 10950 000072F2 E82BDC0000              	call malloc
 10951 000072F7 50                      	push rax
 10952 000072F8 BF20000000              	mov rdi, 8 * 4	; extended env
 10953 000072FD E820DC0000              	call malloc
 10954 00007302 488B7D10                	mov rdi, ENV
 10955 00007306 BE00000000              	mov rsi, 0
 10956 0000730B BA01000000              	mov rdx, 1
 10957                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 10958 00007310 4883FE03                	cmp rsi, 3
 10959 00007314 7410                    	je .L_lambda_simple_env_end_003c
 10960 00007316 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10961 0000731A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10962 0000731E 48FFC6                  	inc rsi
 10963 00007321 48FFC2                  	inc rdx
 10964 00007324 EBEA                    	jmp .L_lambda_simple_env_loop_003c
 10965                                  .L_lambda_simple_env_end_003c:
 10966 00007326 5B                      	pop rbx
 10967 00007327 BE00000000              	mov rsi, 0
 10968                                  .L_lambda_simple_params_loop_003c:	; copy params
 10969 0000732C 4883FE02                	cmp rsi, 2
 10970 00007330 740E                    	je .L_lambda_simple_params_end_003c
 10971 00007332 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10972 00007337 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10973 0000733B 48FFC6                  	inc rsi
 10974 0000733E EBEC                    	jmp .L_lambda_simple_params_loop_003c
 10975                                  .L_lambda_simple_params_end_003c:
 10976 00007340 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10977 00007343 4889C3                  	mov rbx, rax
 10978 00007346 58                      	pop rax
 10979 00007347 C60004                  	mov byte [rax], T_closure
 10980 0000734A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10981 0000734E 48C74009[5B730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 10982 00007356 E97E000000              	jmp .L_lambda_simple_end_003c
 10983                                  .L_lambda_simple_code_003c:	; lambda-simple body
 10984 0000735B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10985 00007361 740B                    	je .L_lambda_simple_arity_check_ok_003c
 10986 00007363 FF742410                	push qword [rsp + 8 * 2]
 10987 00007367 6A01                    	push 1
 10988 00007369 E96DDB0000              	jmp L_error_incorrect_arity_simple
 10989                                  .L_lambda_simple_arity_check_ok_003c:
 10990 0000736E C8000000                	enter 0, 0
 10991                                  	; Initiating tail-call optimization
 10992 00007372 488B4520                	mov rax, PARAM(0)	; param b
 10993 00007376 50                      	push rax
 10994 00007377 488B4510                	mov rax, ENV
 10995 0000737B 488B00                  	mov rax, qword [rax + 8 * 0]
 10996 0000737E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 10997 00007381 50                      	push rax
 10998 00007382 6A02                    	push 2	; Number of arguments
 10999 00007384 488B4510                	mov rax, ENV
 11000 00007388 488B4008                	mov rax, qword [rax + 8 * 1]
 11001 0000738C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11002 0000738F 803804                  	cmp byte [rax], T_closure
 11003 00007392 0F85E1DA0000            	jne L_error_non_closure
 11004 00007398 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11005                                  
 11006                                  	; Reclaiming the current stack frame
 11007 0000739B FF7508                  	push qword [rbp + 8]
 11008 0000739E FF7500                  	push qword [rbp]
 11009 000073A1 41BA06000000            	mov r10, 2 + 4
 11010 000073A7 4C8B4518                	mov r8, COUNT
 11011 000073AB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11012 000073B0 4C8D4DF8                	lea r9, [rbp - 8]
 11013                                  .L_tc_recycle_frame_loop_0052:
 11014 000073B4 4983FA00                	cmp r10, 0
 11015 000073B8 7413                    	je .L_tc_recycle_frame_done_0052
 11016 000073BA 4D8B19                  	mov r11, qword [r9]
 11017 000073BD 4D8918                  	mov qword [r8], r11
 11018 000073C0 49FFCA                  	dec r10
 11019 000073C3 4983E808                	sub r8, 8
 11020 000073C7 4983E908                	sub r9, 8
 11021 000073CB EBE7                    	jmp .L_tc_recycle_frame_loop_0052
 11022                                  .L_tc_recycle_frame_done_0052:
 11023 000073CD 498D6008                	lea rsp, [r8 + 8]
 11024 000073D1 5D                      	pop rbp
 11025 000073D2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11026 000073D5 C9                      	leave
 11027 000073D6 C21800                  	ret AND_KILL_FRAME(1)
 11028                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11029 000073D9 803804                  	cmp byte [rax], T_closure
 11030 000073DC 0F8597DA0000            	jne L_error_non_closure
 11031 000073E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11032                                  
 11033                                  	; Reclaiming the current stack frame
 11034 000073E5 FF7508                  	push qword [rbp + 8]
 11035 000073E8 FF7500                  	push qword [rbp]
 11036 000073EB 41BA05000000            	mov r10, 1 + 4
 11037 000073F1 4C8B4518                	mov r8, COUNT
 11038 000073F5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11039 000073FA 4C8D4DF8                	lea r9, [rbp - 8]
 11040                                  .L_tc_recycle_frame_loop_0053:
 11041 000073FE 4983FA00                	cmp r10, 0
 11042 00007402 7413                    	je .L_tc_recycle_frame_done_0053
 11043 00007404 4D8B19                  	mov r11, qword [r9]
 11044 00007407 4D8918                  	mov qword [r8], r11
 11045 0000740A 49FFCA                  	dec r10
 11046 0000740D 4983E808                	sub r8, 8
 11047 00007411 4983E908                	sub r9, 8
 11048 00007415 EBE7                    	jmp .L_tc_recycle_frame_loop_0053
 11049                                  .L_tc_recycle_frame_done_0053:
 11050 00007417 498D6008                	lea rsp, [r8 + 8]
 11051 0000741B 5D                      	pop rbp
 11052 0000741C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11053                                  .L_if_end_0029:
 11054 0000741F C9                      	leave
 11055 00007420 C22000                  	ret AND_KILL_FRAME(2)
 11056                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11057 00007423 C9                      	leave
 11058 00007424 C21800                  	ret AND_KILL_FRAME(1)
 11059                                  .L_lambda_simple_end_003b:	; new closure is in rax
 11060 00007427 803804                  	cmp byte [rax], T_closure
 11061 0000742A 0F8549DA0000            	jne L_error_non_closure
 11062 00007430 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11063                                  
 11064                                  	; Reclaiming the current stack frame
 11065 00007433 FF7508                  	push qword [rbp + 8]
 11066 00007436 FF7500                  	push qword [rbp]
 11067 00007439 41BA05000000            	mov r10, 1 + 4
 11068 0000743F 4C8B4518                	mov r8, COUNT
 11069 00007443 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11070 00007448 4C8D4DF8                	lea r9, [rbp - 8]
 11071                                  .L_tc_recycle_frame_loop_0054:
 11072 0000744C 4983FA00                	cmp r10, 0
 11073 00007450 7413                    	je .L_tc_recycle_frame_done_0054
 11074 00007452 4D8B19                  	mov r11, qword [r9]
 11075 00007455 4D8918                  	mov qword [r8], r11
 11076 00007458 49FFCA                  	dec r10
 11077 0000745B 4983E808                	sub r8, 8
 11078 0000745F 4983E908                	sub r9, 8
 11079 00007463 EBE7                    	jmp .L_tc_recycle_frame_loop_0054
 11080                                  .L_tc_recycle_frame_done_0054:
 11081 00007465 498D6008                	lea rsp, [r8 + 8]
 11082 00007469 5D                      	pop rbp
 11083 0000746A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11084 0000746D C9                      	leave
 11085 0000746E C21800                  	ret AND_KILL_FRAME(1)
 11086                                  .L_lambda_simple_end_0039:	; new closure is in rax
 11087 00007471 803804                  	cmp byte [rax], T_closure
 11088 00007474 0F85FFD90000            	jne L_error_non_closure
 11089 0000747A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11090 0000747D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11091 00007480 48890425[E70D0000]      	mov qword [free_var_2], rax
 11092 00007488 48B8-                   	mov rax, sob_void
 11092 0000748A [0000000000000000] 
 11093                                  
 11094 00007492 4889C7                  	mov rdi, rax
 11095 00007495 E8DDDC0000              	call print_sexpr_if_not_void
 11096                                  	; preparing a non-tail-call
 11097 0000749A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11098 0000749F E87EDA0000              	call malloc
 11099 000074A4 50                      	push rax
 11100 000074A5 BF00000000              	mov rdi, 8 * 0	; new rib
 11101 000074AA E873DA0000              	call malloc
 11102 000074AF 50                      	push rax
 11103 000074B0 BF08000000              	mov rdi, 8 * 1	; extended env
 11104 000074B5 E868DA0000              	call malloc
 11105 000074BA 488B7D10                	mov rdi, ENV
 11106 000074BE BE00000000              	mov rsi, 0
 11107 000074C3 BA01000000              	mov rdx, 1
 11108                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 11109 000074C8 4883FE00                	cmp rsi, 0
 11110 000074CC 7410                    	je .L_lambda_simple_env_end_003d
 11111 000074CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11112 000074D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11113 000074D6 48FFC6                  	inc rsi
 11114 000074D9 48FFC2                  	inc rdx
 11115 000074DC EBEA                    	jmp .L_lambda_simple_env_loop_003d
 11116                                  .L_lambda_simple_env_end_003d:
 11117 000074DE 5B                      	pop rbx
 11118 000074DF BE00000000              	mov rsi, 0
 11119                                  .L_lambda_simple_params_loop_003d:	; copy params
 11120 000074E4 4883FE00                	cmp rsi, 0
 11121 000074E8 740E                    	je .L_lambda_simple_params_end_003d
 11122 000074EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11123 000074EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11124 000074F3 48FFC6                  	inc rsi
 11125 000074F6 EBEC                    	jmp .L_lambda_simple_params_loop_003d
 11126                                  .L_lambda_simple_params_end_003d:
 11127 000074F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11128 000074FB 4889C3                  	mov rbx, rax
 11129 000074FE 58                      	pop rax
 11130 000074FF C60004                  	mov byte [rax], T_closure
 11131 00007502 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11132 00007506 48C74009[13750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 11133 0000750E E98A000000              	jmp .L_lambda_simple_end_003d
 11134                                  .L_lambda_simple_code_003d:	; lambda-simple body
 11135 00007513 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11136 00007519 740B                    	je .L_lambda_simple_arity_check_ok_003d
 11137 0000751B FF742410                	push qword [rsp + 8 * 2]
 11138 0000751F 6A00                    	push 0
 11139 00007521 E9B5D90000              	jmp L_error_incorrect_arity_simple
 11140                                  .L_lambda_simple_arity_check_ok_003d:
 11141 00007526 C8000000                	enter 0, 0
 11142                                  	; Initiating tail-call optimization
 11143 0000752A 48B8-                   	mov rax, L_constants + 2187
 11143 0000752C [8B08000000000000] 
 11144 00007534 50                      	push rax
 11145 00007535 48B8-                   	mov rax, L_constants + 2279
 11145 00007537 [E708000000000000] 
 11146 0000753F 50                      	push rax
 11147 00007540 6A02                    	push 2	; Number of arguments
 11148 00007542 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 11149 0000754A 803805                  	cmp byte [rax], T_undefined
 11150 0000754D 0F84A2D80000            	je L_error_fvar_undefined
 11151 00007553 803804                  	cmp byte [rax], T_closure
 11152 00007556 0F851DD90000            	jne L_error_non_closure
 11153 0000755C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11154                                  
 11155                                  	; Reclaiming the current stack frame
 11156 0000755F FF7508                  	push qword [rbp + 8]
 11157 00007562 FF7500                  	push qword [rbp]
 11158 00007565 41BA06000000            	mov r10, 2 + 4
 11159 0000756B 4C8B4518                	mov r8, COUNT
 11160 0000756F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11161 00007574 4C8D4DF8                	lea r9, [rbp - 8]
 11162                                  .L_tc_recycle_frame_loop_0055:
 11163 00007578 4983FA00                	cmp r10, 0
 11164 0000757C 7413                    	je .L_tc_recycle_frame_done_0055
 11165 0000757E 4D8B19                  	mov r11, qword [r9]
 11166 00007581 4D8918                  	mov qword [r8], r11
 11167 00007584 49FFCA                  	dec r10
 11168 00007587 4983E808                	sub r8, 8
 11169 0000758B 4983E908                	sub r9, 8
 11170 0000758F EBE7                    	jmp .L_tc_recycle_frame_loop_0055
 11171                                  .L_tc_recycle_frame_done_0055:
 11172 00007591 498D6008                	lea rsp, [r8 + 8]
 11173 00007595 5D                      	pop rbp
 11174 00007596 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11175 00007599 C9                      	leave
 11176 0000759A C21000                  	ret AND_KILL_FRAME(0)
 11177                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11178 0000759D 50                      	push rax
 11179 0000759E 6A01                    	push 1	; arg count
 11180 000075A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11181 000075A5 E878D90000              	call malloc
 11182 000075AA 50                      	push rax
 11183 000075AB BF00000000              	mov rdi, 8 * 0	; new rib
 11184 000075B0 E86DD90000              	call malloc
 11185 000075B5 50                      	push rax
 11186 000075B6 BF08000000              	mov rdi, 8 * 1	; extended env
 11187 000075BB E862D90000              	call malloc
 11188 000075C0 488B7D10                	mov rdi, ENV
 11189 000075C4 BE00000000              	mov rsi, 0
 11190 000075C9 BA01000000              	mov rdx, 1
 11191                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11192 000075CE 4883FE00                	cmp rsi, 0
 11193 000075D2 7410                    	je .L_lambda_simple_env_end_003e
 11194 000075D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11195 000075D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11196 000075DC 48FFC6                  	inc rsi
 11197 000075DF 48FFC2                  	inc rdx
 11198 000075E2 EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11199                                  .L_lambda_simple_env_end_003e:
 11200 000075E4 5B                      	pop rbx
 11201 000075E5 BE00000000              	mov rsi, 0
 11202                                  .L_lambda_simple_params_loop_003e:	; copy params
 11203 000075EA 4883FE00                	cmp rsi, 0
 11204 000075EE 740E                    	je .L_lambda_simple_params_end_003e
 11205 000075F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11206 000075F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11207 000075F9 48FFC6                  	inc rsi
 11208 000075FC EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11209                                  .L_lambda_simple_params_end_003e:
 11210 000075FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11211 00007601 4889C3                  	mov rbx, rax
 11212 00007604 58                      	pop rax
 11213 00007605 C60004                  	mov byte [rax], T_closure
 11214 00007608 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11215 0000760C 48C74009[19760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11216 00007614 E9950B0000              	jmp .L_lambda_simple_end_003e
 11217                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11218 00007619 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11219 0000761F 740B                    	je .L_lambda_simple_arity_check_ok_003e
 11220 00007621 FF742410                	push qword [rsp + 8 * 2]
 11221 00007625 6A01                    	push 1
 11222 00007627 E9AFD80000              	jmp L_error_incorrect_arity_simple
 11223                                  .L_lambda_simple_arity_check_ok_003e:
 11224 0000762C C8000000                	enter 0, 0
 11225                                  	; Initiating tail-call optimization
 11226 00007630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11227 00007635 E8E8D80000              	call malloc
 11228 0000763A 50                      	push rax
 11229 0000763B BF08000000              	mov rdi, 8 * 1	; new rib
 11230 00007640 E8DDD80000              	call malloc
 11231 00007645 50                      	push rax
 11232 00007646 BF10000000              	mov rdi, 8 * 2	; extended env
 11233 0000764B E8D2D80000              	call malloc
 11234 00007650 488B7D10                	mov rdi, ENV
 11235 00007654 BE00000000              	mov rsi, 0
 11236 00007659 BA01000000              	mov rdx, 1
 11237                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11238 0000765E 4883FE01                	cmp rsi, 1
 11239 00007662 7410                    	je .L_lambda_simple_env_end_003f
 11240 00007664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11241 00007668 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11242 0000766C 48FFC6                  	inc rsi
 11243 0000766F 48FFC2                  	inc rdx
 11244 00007672 EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11245                                  .L_lambda_simple_env_end_003f:
 11246 00007674 5B                      	pop rbx
 11247 00007675 BE00000000              	mov rsi, 0
 11248                                  .L_lambda_simple_params_loop_003f:	; copy params
 11249 0000767A 4883FE01                	cmp rsi, 1
 11250 0000767E 740E                    	je .L_lambda_simple_params_end_003f
 11251 00007680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11252 00007685 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11253 00007689 48FFC6                  	inc rsi
 11254 0000768C EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11255                                  .L_lambda_simple_params_end_003f:
 11256 0000768E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11257 00007691 4889C3                  	mov rbx, rax
 11258 00007694 58                      	pop rax
 11259 00007695 C60004                  	mov byte [rax], T_closure
 11260 00007698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11261 0000769C 48C74009[A9760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11262 000076A4 E938080000              	jmp .L_lambda_simple_end_003f
 11263                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11264 000076A9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11265 000076AF 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11266 000076B1 FF742410                	push qword [rsp + 8 * 2]
 11267 000076B5 6A02                    	push 2
 11268 000076B7 E91FD80000              	jmp L_error_incorrect_arity_simple
 11269                                  .L_lambda_simple_arity_check_ok_003f:
 11270 000076BC C8000000                	enter 0, 0
 11271                                  	; preparing a non-tail-call
 11272 000076C0 488B4520                	mov rax, PARAM(0)	; param a
 11273 000076C4 50                      	push rax
 11274 000076C5 6A01                    	push 1	; arg count
 11275 000076C7 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11276 000076CF 803805                  	cmp byte [rax], T_undefined
 11277 000076D2 0F841DD70000            	je L_error_fvar_undefined
 11278 000076D8 803804                  	cmp byte [rax], T_closure
 11279 000076DB 0F8598D70000            	jne L_error_non_closure
 11280 000076E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11281 000076E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11282 000076E7 483D[02000000]          	cmp rax, sob_boolean_false
 11283 000076ED 0F8467020000            	je .L_if_else_0035
 11284                                  	; preparing a non-tail-call
 11285 000076F3 488B4528                	mov rax, PARAM(1)	; param b
 11286 000076F7 50                      	push rax
 11287 000076F8 6A01                    	push 1	; arg count
 11288 000076FA 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11289 00007702 803805                  	cmp byte [rax], T_undefined
 11290 00007705 0F84EAD60000            	je L_error_fvar_undefined
 11291 0000770B 803804                  	cmp byte [rax], T_closure
 11292 0000770E 0F8565D70000            	jne L_error_non_closure
 11293 00007714 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11294 00007717 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11295 0000771A 483D[02000000]          	cmp rax, sob_boolean_false
 11296 00007720 7468                    	je .L_if_else_002c
 11297                                  	; Initiating tail-call optimization
 11298 00007722 488B4528                	mov rax, PARAM(1)	; param b
 11299 00007726 50                      	push rax
 11300 00007727 488B4520                	mov rax, PARAM(0)	; param a
 11301 0000772B 50                      	push rax
 11302 0000772C 6A02                    	push 2	; Number of arguments
 11303 0000772E 488B0425[5D0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11304 00007736 803805                  	cmp byte [rax], T_undefined
 11305 00007739 0F84B6D60000            	je L_error_fvar_undefined
 11306 0000773F 803804                  	cmp byte [rax], T_closure
 11307 00007742 0F8531D70000            	jne L_error_non_closure
 11308 00007748 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11309                                  
 11310                                  	; Reclaiming the current stack frame
 11311 0000774B FF7508                  	push qword [rbp + 8]
 11312 0000774E FF7500                  	push qword [rbp]
 11313 00007751 41BA06000000            	mov r10, 2 + 4
 11314 00007757 4C8B4518                	mov r8, COUNT
 11315 0000775B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11316 00007760 4C8D4DF8                	lea r9, [rbp - 8]
 11317                                  .L_tc_recycle_frame_loop_0056:
 11318 00007764 4983FA00                	cmp r10, 0
 11319 00007768 7413                    	je .L_tc_recycle_frame_done_0056
 11320 0000776A 4D8B19                  	mov r11, qword [r9]
 11321 0000776D 4D8918                  	mov qword [r8], r11
 11322 00007770 49FFCA                  	dec r10
 11323 00007773 4983E808                	sub r8, 8
 11324 00007777 4983E908                	sub r9, 8
 11325 0000777B EBE7                    	jmp .L_tc_recycle_frame_loop_0056
 11326                                  .L_tc_recycle_frame_done_0056:
 11327 0000777D 498D6008                	lea rsp, [r8 + 8]
 11328 00007781 5D                      	pop rbp
 11329 00007782 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11330 00007785 E9CB010000              	jmp .L_if_end_002c
 11331                                  .L_if_else_002c:
 11332                                  	; preparing a non-tail-call
 11333 0000778A 488B4528                	mov rax, PARAM(1)	; param b
 11334 0000778E 50                      	push rax
 11335 0000778F 6A01                    	push 1	; arg count
 11336 00007791 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11337 00007799 803805                  	cmp byte [rax], T_undefined
 11338 0000779C 0F8453D60000            	je L_error_fvar_undefined
 11339 000077A2 803804                  	cmp byte [rax], T_closure
 11340 000077A5 0F85CED60000            	jne L_error_non_closure
 11341 000077AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11342 000077AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11343 000077B1 483D[02000000]          	cmp rax, sob_boolean_false
 11344 000077B7 0F848B000000            	je .L_if_else_002b
 11345                                  	; Initiating tail-call optimization
 11346 000077BD 488B4528                	mov rax, PARAM(1)	; param b
 11347 000077C1 50                      	push rax
 11348                                  	; preparing a non-tail-call
 11349 000077C2 488B4520                	mov rax, PARAM(0)	; param a
 11350 000077C6 50                      	push rax
 11351 000077C7 6A01                    	push 1	; arg count
 11352 000077C9 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11353 000077D1 803805                  	cmp byte [rax], T_undefined
 11354 000077D4 0F841BD60000            	je L_error_fvar_undefined
 11355 000077DA 803804                  	cmp byte [rax], T_closure
 11356 000077DD 0F8596D60000            	jne L_error_non_closure
 11357 000077E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11358 000077E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11359 000077E9 50                      	push rax
 11360 000077EA 6A02                    	push 2	; Number of arguments
 11361 000077EC 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11362 000077F4 803805                  	cmp byte [rax], T_undefined
 11363 000077F7 0F84F8D50000            	je L_error_fvar_undefined
 11364 000077FD 803804                  	cmp byte [rax], T_closure
 11365 00007800 0F8573D60000            	jne L_error_non_closure
 11366 00007806 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11367                                  
 11368                                  	; Reclaiming the current stack frame
 11369 00007809 FF7508                  	push qword [rbp + 8]
 11370 0000780C FF7500                  	push qword [rbp]
 11371 0000780F 41BA06000000            	mov r10, 2 + 4
 11372 00007815 4C8B4518                	mov r8, COUNT
 11373 00007819 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11374 0000781E 4C8D4DF8                	lea r9, [rbp - 8]
 11375                                  .L_tc_recycle_frame_loop_0057:
 11376 00007822 4983FA00                	cmp r10, 0
 11377 00007826 7413                    	je .L_tc_recycle_frame_done_0057
 11378 00007828 4D8B19                  	mov r11, qword [r9]
 11379 0000782B 4D8918                  	mov qword [r8], r11
 11380 0000782E 49FFCA                  	dec r10
 11381 00007831 4983E808                	sub r8, 8
 11382 00007835 4983E908                	sub r9, 8
 11383 00007839 EBE7                    	jmp .L_tc_recycle_frame_loop_0057
 11384                                  .L_tc_recycle_frame_done_0057:
 11385 0000783B 498D6008                	lea rsp, [r8 + 8]
 11386 0000783F 5D                      	pop rbp
 11387 00007840 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11388 00007843 E90D010000              	jmp .L_if_end_002b
 11389                                  .L_if_else_002b:
 11390                                  	; preparing a non-tail-call
 11391 00007848 488B4528                	mov rax, PARAM(1)	; param b
 11392 0000784C 50                      	push rax
 11393 0000784D 6A01                    	push 1	; arg count
 11394 0000784F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11395 00007857 803805                  	cmp byte [rax], T_undefined
 11396 0000785A 0F8495D50000            	je L_error_fvar_undefined
 11397 00007860 803804                  	cmp byte [rax], T_closure
 11398 00007863 0F8510D60000            	jne L_error_non_closure
 11399 00007869 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11400 0000786C FF5009                  	call SOB_CLOSURE_CODE(rax)
 11401 0000786F 483D[02000000]          	cmp rax, sob_boolean_false
 11402 00007875 0F8488000000            	je .L_if_else_002a
 11403                                  	; Initiating tail-call optimization
 11404 0000787B 488B4528                	mov rax, PARAM(1)	; param b
 11405 0000787F 50                      	push rax
 11406                                  	; preparing a non-tail-call
 11407 00007880 488B4520                	mov rax, PARAM(0)	; param a
 11408 00007884 50                      	push rax
 11409 00007885 6A01                    	push 1	; arg count
 11410 00007887 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11411 0000788F 803805                  	cmp byte [rax], T_undefined
 11412 00007892 0F845DD50000            	je L_error_fvar_undefined
 11413 00007898 803804                  	cmp byte [rax], T_closure
 11414 0000789B 0F85D8D50000            	jne L_error_non_closure
 11415 000078A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11416 000078A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11417 000078A7 50                      	push rax
 11418 000078A8 6A02                    	push 2	; Number of arguments
 11419 000078AA 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11420 000078B2 803805                  	cmp byte [rax], T_undefined
 11421 000078B5 0F843AD50000            	je L_error_fvar_undefined
 11422 000078BB 803804                  	cmp byte [rax], T_closure
 11423 000078BE 0F85B5D50000            	jne L_error_non_closure
 11424 000078C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11425                                  
 11426                                  	; Reclaiming the current stack frame
 11427 000078C7 FF7508                  	push qword [rbp + 8]
 11428 000078CA FF7500                  	push qword [rbp]
 11429 000078CD 41BA06000000            	mov r10, 2 + 4
 11430 000078D3 4C8B4518                	mov r8, COUNT
 11431 000078D7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11432 000078DC 4C8D4DF8                	lea r9, [rbp - 8]
 11433                                  .L_tc_recycle_frame_loop_0058:
 11434 000078E0 4983FA00                	cmp r10, 0
 11435 000078E4 7413                    	je .L_tc_recycle_frame_done_0058
 11436 000078E6 4D8B19                  	mov r11, qword [r9]
 11437 000078E9 4D8918                  	mov qword [r8], r11
 11438 000078EC 49FFCA                  	dec r10
 11439 000078EF 4983E808                	sub r8, 8
 11440 000078F3 4983E908                	sub r9, 8
 11441 000078F7 EBE7                    	jmp .L_tc_recycle_frame_loop_0058
 11442                                  .L_tc_recycle_frame_done_0058:
 11443 000078F9 498D6008                	lea rsp, [r8 + 8]
 11444 000078FD 5D                      	pop rbp
 11445 000078FE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11446 00007901 EB52                    	jmp .L_if_end_002a
 11447                                  .L_if_else_002a:
 11448                                  	; Initiating tail-call optimization
 11449 00007903 6A00                    	push 0	; Number of arguments
 11450 00007905 488B4510                	mov rax, ENV
 11451 00007909 488B00                  	mov rax, qword [rax + 8 * 0]
 11452 0000790C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11453 0000790F 803804                  	cmp byte [rax], T_closure
 11454 00007912 0F8561D50000            	jne L_error_non_closure
 11455 00007918 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11456                                  
 11457                                  	; Reclaiming the current stack frame
 11458 0000791B FF7508                  	push qword [rbp + 8]
 11459 0000791E FF7500                  	push qword [rbp]
 11460 00007921 41BA04000000            	mov r10, 0 + 4
 11461 00007927 4C8B4518                	mov r8, COUNT
 11462 0000792B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11463 00007930 4C8D4DF8                	lea r9, [rbp - 8]
 11464                                  .L_tc_recycle_frame_loop_0059:
 11465 00007934 4983FA00                	cmp r10, 0
 11466 00007938 7413                    	je .L_tc_recycle_frame_done_0059
 11467 0000793A 4D8B19                  	mov r11, qword [r9]
 11468 0000793D 4D8918                  	mov qword [r8], r11
 11469 00007940 49FFCA                  	dec r10
 11470 00007943 4983E808                	sub r8, 8
 11471 00007947 4983E908                	sub r9, 8
 11472 0000794B EBE7                    	jmp .L_tc_recycle_frame_loop_0059
 11473                                  .L_tc_recycle_frame_done_0059:
 11474 0000794D 498D6008                	lea rsp, [r8 + 8]
 11475 00007951 5D                      	pop rbp
 11476 00007952 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11477                                  .L_if_end_002a:
 11478                                  .L_if_end_002b:
 11479                                  .L_if_end_002c:
 11480 00007955 E983050000              	jmp .L_if_end_0035
 11481                                  .L_if_else_0035:
 11482                                  	; preparing a non-tail-call
 11483 0000795A 488B4520                	mov rax, PARAM(0)	; param a
 11484 0000795E 50                      	push rax
 11485 0000795F 6A01                    	push 1	; arg count
 11486 00007961 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11487 00007969 803805                  	cmp byte [rax], T_undefined
 11488 0000796C 0F8483D40000            	je L_error_fvar_undefined
 11489 00007972 803804                  	cmp byte [rax], T_closure
 11490 00007975 0F85FED40000            	jne L_error_non_closure
 11491 0000797B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11492 0000797E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11493 00007981 483D[02000000]          	cmp rax, sob_boolean_false
 11494 00007987 0F8467020000            	je .L_if_else_0034
 11495                                  	; preparing a non-tail-call
 11496 0000798D 488B4528                	mov rax, PARAM(1)	; param b
 11497 00007991 50                      	push rax
 11498 00007992 6A01                    	push 1	; arg count
 11499 00007994 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11500 0000799C 803805                  	cmp byte [rax], T_undefined
 11501 0000799F 0F8450D40000            	je L_error_fvar_undefined
 11502 000079A5 803804                  	cmp byte [rax], T_closure
 11503 000079A8 0F85CBD40000            	jne L_error_non_closure
 11504 000079AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11505 000079B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11506 000079B4 483D[02000000]          	cmp rax, sob_boolean_false
 11507 000079BA 0F848B000000            	je .L_if_else_002f
 11508                                  	; Initiating tail-call optimization
 11509                                  	; preparing a non-tail-call
 11510 000079C0 488B4528                	mov rax, PARAM(1)	; param b
 11511 000079C4 50                      	push rax
 11512 000079C5 6A01                    	push 1	; arg count
 11513 000079C7 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11514 000079CF 803805                  	cmp byte [rax], T_undefined
 11515 000079D2 0F841DD40000            	je L_error_fvar_undefined
 11516 000079D8 803804                  	cmp byte [rax], T_closure
 11517 000079DB 0F8598D40000            	jne L_error_non_closure
 11518 000079E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11519 000079E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11520 000079E7 50                      	push rax
 11521 000079E8 488B4520                	mov rax, PARAM(0)	; param a
 11522 000079EC 50                      	push rax
 11523 000079ED 6A02                    	push 2	; Number of arguments
 11524 000079EF 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11525 000079F7 803805                  	cmp byte [rax], T_undefined
 11526 000079FA 0F84F5D30000            	je L_error_fvar_undefined
 11527 00007A00 803804                  	cmp byte [rax], T_closure
 11528 00007A03 0F8570D40000            	jne L_error_non_closure
 11529 00007A09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11530                                  
 11531                                  	; Reclaiming the current stack frame
 11532 00007A0C FF7508                  	push qword [rbp + 8]
 11533 00007A0F FF7500                  	push qword [rbp]
 11534 00007A12 41BA06000000            	mov r10, 2 + 4
 11535 00007A18 4C8B4518                	mov r8, COUNT
 11536 00007A1C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11537 00007A21 4C8D4DF8                	lea r9, [rbp - 8]
 11538                                  .L_tc_recycle_frame_loop_005a:
 11539 00007A25 4983FA00                	cmp r10, 0
 11540 00007A29 7413                    	je .L_tc_recycle_frame_done_005a
 11541 00007A2B 4D8B19                  	mov r11, qword [r9]
 11542 00007A2E 4D8918                  	mov qword [r8], r11
 11543 00007A31 49FFCA                  	dec r10
 11544 00007A34 4983E808                	sub r8, 8
 11545 00007A38 4983E908                	sub r9, 8
 11546 00007A3C EBE7                    	jmp .L_tc_recycle_frame_loop_005a
 11547                                  .L_tc_recycle_frame_done_005a:
 11548 00007A3E 498D6008                	lea rsp, [r8 + 8]
 11549 00007A42 5D                      	pop rbp
 11550 00007A43 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11551 00007A46 E9A4010000              	jmp .L_if_end_002f
 11552                                  .L_if_else_002f:
 11553                                  	; preparing a non-tail-call
 11554 00007A4B 488B4528                	mov rax, PARAM(1)	; param b
 11555 00007A4F 50                      	push rax
 11556 00007A50 6A01                    	push 1	; arg count
 11557 00007A52 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11558 00007A5A 803805                  	cmp byte [rax], T_undefined
 11559 00007A5D 0F8492D30000            	je L_error_fvar_undefined
 11560 00007A63 803804                  	cmp byte [rax], T_closure
 11561 00007A66 0F850DD40000            	jne L_error_non_closure
 11562 00007A6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11563 00007A6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 11564 00007A72 483D[02000000]          	cmp rax, sob_boolean_false
 11565 00007A78 7468                    	je .L_if_else_002e
 11566                                  	; Initiating tail-call optimization
 11567 00007A7A 488B4528                	mov rax, PARAM(1)	; param b
 11568 00007A7E 50                      	push rax
 11569 00007A7F 488B4520                	mov rax, PARAM(0)	; param a
 11570 00007A83 50                      	push rax
 11571 00007A84 6A02                    	push 2	; Number of arguments
 11572 00007A86 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11573 00007A8E 803805                  	cmp byte [rax], T_undefined
 11574 00007A91 0F845ED30000            	je L_error_fvar_undefined
 11575 00007A97 803804                  	cmp byte [rax], T_closure
 11576 00007A9A 0F85D9D30000            	jne L_error_non_closure
 11577 00007AA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11578                                  
 11579                                  	; Reclaiming the current stack frame
 11580 00007AA3 FF7508                  	push qword [rbp + 8]
 11581 00007AA6 FF7500                  	push qword [rbp]
 11582 00007AA9 41BA06000000            	mov r10, 2 + 4
 11583 00007AAF 4C8B4518                	mov r8, COUNT
 11584 00007AB3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11585 00007AB8 4C8D4DF8                	lea r9, [rbp - 8]
 11586                                  .L_tc_recycle_frame_loop_005b:
 11587 00007ABC 4983FA00                	cmp r10, 0
 11588 00007AC0 7413                    	je .L_tc_recycle_frame_done_005b
 11589 00007AC2 4D8B19                  	mov r11, qword [r9]
 11590 00007AC5 4D8918                  	mov qword [r8], r11
 11591 00007AC8 49FFCA                  	dec r10
 11592 00007ACB 4983E808                	sub r8, 8
 11593 00007ACF 4983E908                	sub r9, 8
 11594 00007AD3 EBE7                    	jmp .L_tc_recycle_frame_loop_005b
 11595                                  .L_tc_recycle_frame_done_005b:
 11596 00007AD5 498D6008                	lea rsp, [r8 + 8]
 11597 00007AD9 5D                      	pop rbp
 11598 00007ADA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11599 00007ADD E90D010000              	jmp .L_if_end_002e
 11600                                  .L_if_else_002e:
 11601                                  	; preparing a non-tail-call
 11602 00007AE2 488B4528                	mov rax, PARAM(1)	; param b
 11603 00007AE6 50                      	push rax
 11604 00007AE7 6A01                    	push 1	; arg count
 11605 00007AE9 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11606 00007AF1 803805                  	cmp byte [rax], T_undefined
 11607 00007AF4 0F84FBD20000            	je L_error_fvar_undefined
 11608 00007AFA 803804                  	cmp byte [rax], T_closure
 11609 00007AFD 0F8576D30000            	jne L_error_non_closure
 11610 00007B03 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11611 00007B06 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11612 00007B09 483D[02000000]          	cmp rax, sob_boolean_false
 11613 00007B0F 0F8488000000            	je .L_if_else_002d
 11614                                  	; Initiating tail-call optimization
 11615 00007B15 488B4528                	mov rax, PARAM(1)	; param b
 11616 00007B19 50                      	push rax
 11617                                  	; preparing a non-tail-call
 11618 00007B1A 488B4520                	mov rax, PARAM(0)	; param a
 11619 00007B1E 50                      	push rax
 11620 00007B1F 6A01                    	push 1	; arg count
 11621 00007B21 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11622 00007B29 803805                  	cmp byte [rax], T_undefined
 11623 00007B2C 0F84C3D20000            	je L_error_fvar_undefined
 11624 00007B32 803804                  	cmp byte [rax], T_closure
 11625 00007B35 0F853ED30000            	jne L_error_non_closure
 11626 00007B3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11627 00007B3E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11628 00007B41 50                      	push rax
 11629 00007B42 6A02                    	push 2	; Number of arguments
 11630 00007B44 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11631 00007B4C 803805                  	cmp byte [rax], T_undefined
 11632 00007B4F 0F84A0D20000            	je L_error_fvar_undefined
 11633 00007B55 803804                  	cmp byte [rax], T_closure
 11634 00007B58 0F851BD30000            	jne L_error_non_closure
 11635 00007B5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11636                                  
 11637                                  	; Reclaiming the current stack frame
 11638 00007B61 FF7508                  	push qword [rbp + 8]
 11639 00007B64 FF7500                  	push qword [rbp]
 11640 00007B67 41BA06000000            	mov r10, 2 + 4
 11641 00007B6D 4C8B4518                	mov r8, COUNT
 11642 00007B71 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11643 00007B76 4C8D4DF8                	lea r9, [rbp - 8]
 11644                                  .L_tc_recycle_frame_loop_005c:
 11645 00007B7A 4983FA00                	cmp r10, 0
 11646 00007B7E 7413                    	je .L_tc_recycle_frame_done_005c
 11647 00007B80 4D8B19                  	mov r11, qword [r9]
 11648 00007B83 4D8918                  	mov qword [r8], r11
 11649 00007B86 49FFCA                  	dec r10
 11650 00007B89 4983E808                	sub r8, 8
 11651 00007B8D 4983E908                	sub r9, 8
 11652 00007B91 EBE7                    	jmp .L_tc_recycle_frame_loop_005c
 11653                                  .L_tc_recycle_frame_done_005c:
 11654 00007B93 498D6008                	lea rsp, [r8 + 8]
 11655 00007B97 5D                      	pop rbp
 11656 00007B98 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11657 00007B9B EB52                    	jmp .L_if_end_002d
 11658                                  .L_if_else_002d:
 11659                                  	; Initiating tail-call optimization
 11660 00007B9D 6A00                    	push 0	; Number of arguments
 11661 00007B9F 488B4510                	mov rax, ENV
 11662 00007BA3 488B00                  	mov rax, qword [rax + 8 * 0]
 11663 00007BA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11664 00007BA9 803804                  	cmp byte [rax], T_closure
 11665 00007BAC 0F85C7D20000            	jne L_error_non_closure
 11666 00007BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11667                                  
 11668                                  	; Reclaiming the current stack frame
 11669 00007BB5 FF7508                  	push qword [rbp + 8]
 11670 00007BB8 FF7500                  	push qword [rbp]
 11671 00007BBB 41BA04000000            	mov r10, 0 + 4
 11672 00007BC1 4C8B4518                	mov r8, COUNT
 11673 00007BC5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11674 00007BCA 4C8D4DF8                	lea r9, [rbp - 8]
 11675                                  .L_tc_recycle_frame_loop_005d:
 11676 00007BCE 4983FA00                	cmp r10, 0
 11677 00007BD2 7413                    	je .L_tc_recycle_frame_done_005d
 11678 00007BD4 4D8B19                  	mov r11, qword [r9]
 11679 00007BD7 4D8918                  	mov qword [r8], r11
 11680 00007BDA 49FFCA                  	dec r10
 11681 00007BDD 4983E808                	sub r8, 8
 11682 00007BE1 4983E908                	sub r9, 8
 11683 00007BE5 EBE7                    	jmp .L_tc_recycle_frame_loop_005d
 11684                                  .L_tc_recycle_frame_done_005d:
 11685 00007BE7 498D6008                	lea rsp, [r8 + 8]
 11686 00007BEB 5D                      	pop rbp
 11687 00007BEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11688                                  .L_if_end_002d:
 11689                                  .L_if_end_002e:
 11690                                  .L_if_end_002f:
 11691 00007BEF E9E9020000              	jmp .L_if_end_0034
 11692                                  .L_if_else_0034:
 11693                                  	; preparing a non-tail-call
 11694 00007BF4 488B4520                	mov rax, PARAM(0)	; param a
 11695 00007BF8 50                      	push rax
 11696 00007BF9 6A01                    	push 1	; arg count
 11697 00007BFB 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11698 00007C03 803805                  	cmp byte [rax], T_undefined
 11699 00007C06 0F84E9D10000            	je L_error_fvar_undefined
 11700 00007C0C 803804                  	cmp byte [rax], T_closure
 11701 00007C0F 0F8564D20000            	jne L_error_non_closure
 11702 00007C15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11703 00007C18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11704 00007C1B 483D[02000000]          	cmp rax, sob_boolean_false
 11705 00007C21 0F8464020000            	je .L_if_else_0033
 11706                                  	; preparing a non-tail-call
 11707 00007C27 488B4528                	mov rax, PARAM(1)	; param b
 11708 00007C2B 50                      	push rax
 11709 00007C2C 6A01                    	push 1	; arg count
 11710 00007C2E 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11711 00007C36 803805                  	cmp byte [rax], T_undefined
 11712 00007C39 0F84B6D10000            	je L_error_fvar_undefined
 11713 00007C3F 803804                  	cmp byte [rax], T_closure
 11714 00007C42 0F8531D20000            	jne L_error_non_closure
 11715 00007C48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11716 00007C4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11717 00007C4E 483D[02000000]          	cmp rax, sob_boolean_false
 11718 00007C54 0F848B000000            	je .L_if_else_0032
 11719                                  	; Initiating tail-call optimization
 11720                                  	; preparing a non-tail-call
 11721 00007C5A 488B4528                	mov rax, PARAM(1)	; param b
 11722 00007C5E 50                      	push rax
 11723 00007C5F 6A01                    	push 1	; arg count
 11724 00007C61 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11725 00007C69 803805                  	cmp byte [rax], T_undefined
 11726 00007C6C 0F8483D10000            	je L_error_fvar_undefined
 11727 00007C72 803804                  	cmp byte [rax], T_closure
 11728 00007C75 0F85FED10000            	jne L_error_non_closure
 11729 00007C7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11730 00007C7E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11731 00007C81 50                      	push rax
 11732 00007C82 488B4520                	mov rax, PARAM(0)	; param a
 11733 00007C86 50                      	push rax
 11734 00007C87 6A02                    	push 2	; Number of arguments
 11735 00007C89 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11736 00007C91 803805                  	cmp byte [rax], T_undefined
 11737 00007C94 0F845BD10000            	je L_error_fvar_undefined
 11738 00007C9A 803804                  	cmp byte [rax], T_closure
 11739 00007C9D 0F85D6D10000            	jne L_error_non_closure
 11740 00007CA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11741                                  
 11742                                  	; Reclaiming the current stack frame
 11743 00007CA6 FF7508                  	push qword [rbp + 8]
 11744 00007CA9 FF7500                  	push qword [rbp]
 11745 00007CAC 41BA06000000            	mov r10, 2 + 4
 11746 00007CB2 4C8B4518                	mov r8, COUNT
 11747 00007CB6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11748 00007CBB 4C8D4DF8                	lea r9, [rbp - 8]
 11749                                  .L_tc_recycle_frame_loop_005e:
 11750 00007CBF 4983FA00                	cmp r10, 0
 11751 00007CC3 7413                    	je .L_tc_recycle_frame_done_005e
 11752 00007CC5 4D8B19                  	mov r11, qword [r9]
 11753 00007CC8 4D8918                  	mov qword [r8], r11
 11754 00007CCB 49FFCA                  	dec r10
 11755 00007CCE 4983E808                	sub r8, 8
 11756 00007CD2 4983E908                	sub r9, 8
 11757 00007CD6 EBE7                    	jmp .L_tc_recycle_frame_loop_005e
 11758                                  .L_tc_recycle_frame_done_005e:
 11759 00007CD8 498D6008                	lea rsp, [r8 + 8]
 11760 00007CDC 5D                      	pop rbp
 11761 00007CDD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11762 00007CE0 E9A4010000              	jmp .L_if_end_0032
 11763                                  .L_if_else_0032:
 11764                                  	; preparing a non-tail-call
 11765 00007CE5 488B4528                	mov rax, PARAM(1)	; param b
 11766 00007CE9 50                      	push rax
 11767 00007CEA 6A01                    	push 1	; arg count
 11768 00007CEC 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11769 00007CF4 803805                  	cmp byte [rax], T_undefined
 11770 00007CF7 0F84F8D00000            	je L_error_fvar_undefined
 11771 00007CFD 803804                  	cmp byte [rax], T_closure
 11772 00007D00 0F8573D10000            	jne L_error_non_closure
 11773 00007D06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11774 00007D09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11775 00007D0C 483D[02000000]          	cmp rax, sob_boolean_false
 11776 00007D12 0F848B000000            	je .L_if_else_0031
 11777                                  	; Initiating tail-call optimization
 11778                                  	; preparing a non-tail-call
 11779 00007D18 488B4528                	mov rax, PARAM(1)	; param b
 11780 00007D1C 50                      	push rax
 11781 00007D1D 6A01                    	push 1	; arg count
 11782 00007D1F 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11783 00007D27 803805                  	cmp byte [rax], T_undefined
 11784 00007D2A 0F84C5D00000            	je L_error_fvar_undefined
 11785 00007D30 803804                  	cmp byte [rax], T_closure
 11786 00007D33 0F8540D10000            	jne L_error_non_closure
 11787 00007D39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11788 00007D3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 11789 00007D3F 50                      	push rax
 11790 00007D40 488B4520                	mov rax, PARAM(0)	; param a
 11791 00007D44 50                      	push rax
 11792 00007D45 6A02                    	push 2	; Number of arguments
 11793 00007D47 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11794 00007D4F 803805                  	cmp byte [rax], T_undefined
 11795 00007D52 0F849DD00000            	je L_error_fvar_undefined
 11796 00007D58 803804                  	cmp byte [rax], T_closure
 11797 00007D5B 0F8518D10000            	jne L_error_non_closure
 11798 00007D61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11799                                  
 11800                                  	; Reclaiming the current stack frame
 11801 00007D64 FF7508                  	push qword [rbp + 8]
 11802 00007D67 FF7500                  	push qword [rbp]
 11803 00007D6A 41BA06000000            	mov r10, 2 + 4
 11804 00007D70 4C8B4518                	mov r8, COUNT
 11805 00007D74 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11806 00007D79 4C8D4DF8                	lea r9, [rbp - 8]
 11807                                  .L_tc_recycle_frame_loop_005f:
 11808 00007D7D 4983FA00                	cmp r10, 0
 11809 00007D81 7413                    	je .L_tc_recycle_frame_done_005f
 11810 00007D83 4D8B19                  	mov r11, qword [r9]
 11811 00007D86 4D8918                  	mov qword [r8], r11
 11812 00007D89 49FFCA                  	dec r10
 11813 00007D8C 4983E808                	sub r8, 8
 11814 00007D90 4983E908                	sub r9, 8
 11815 00007D94 EBE7                    	jmp .L_tc_recycle_frame_loop_005f
 11816                                  .L_tc_recycle_frame_done_005f:
 11817 00007D96 498D6008                	lea rsp, [r8 + 8]
 11818 00007D9A 5D                      	pop rbp
 11819 00007D9B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11820 00007D9E E9E6000000              	jmp .L_if_end_0031
 11821                                  .L_if_else_0031:
 11822                                  	; preparing a non-tail-call
 11823 00007DA3 488B4528                	mov rax, PARAM(1)	; param b
 11824 00007DA7 50                      	push rax
 11825 00007DA8 6A01                    	push 1	; arg count
 11826 00007DAA 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11827 00007DB2 803805                  	cmp byte [rax], T_undefined
 11828 00007DB5 0F843AD00000            	je L_error_fvar_undefined
 11829 00007DBB 803804                  	cmp byte [rax], T_closure
 11830 00007DBE 0F85B5D00000            	jne L_error_non_closure
 11831 00007DC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11832 00007DC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11833 00007DCA 483D[02000000]          	cmp rax, sob_boolean_false
 11834 00007DD0 7465                    	je .L_if_else_0030
 11835                                  	; Initiating tail-call optimization
 11836 00007DD2 488B4528                	mov rax, PARAM(1)	; param b
 11837 00007DD6 50                      	push rax
 11838 00007DD7 488B4520                	mov rax, PARAM(0)	; param a
 11839 00007DDB 50                      	push rax
 11840 00007DDC 6A02                    	push 2	; Number of arguments
 11841 00007DDE 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11842 00007DE6 803805                  	cmp byte [rax], T_undefined
 11843 00007DE9 0F8406D00000            	je L_error_fvar_undefined
 11844 00007DEF 803804                  	cmp byte [rax], T_closure
 11845 00007DF2 0F8581D00000            	jne L_error_non_closure
 11846 00007DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11847                                  
 11848                                  	; Reclaiming the current stack frame
 11849 00007DFB FF7508                  	push qword [rbp + 8]
 11850 00007DFE FF7500                  	push qword [rbp]
 11851 00007E01 41BA06000000            	mov r10, 2 + 4
 11852 00007E07 4C8B4518                	mov r8, COUNT
 11853 00007E0B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11854 00007E10 4C8D4DF8                	lea r9, [rbp - 8]
 11855                                  .L_tc_recycle_frame_loop_0060:
 11856 00007E14 4983FA00                	cmp r10, 0
 11857 00007E18 7413                    	je .L_tc_recycle_frame_done_0060
 11858 00007E1A 4D8B19                  	mov r11, qword [r9]
 11859 00007E1D 4D8918                  	mov qword [r8], r11
 11860 00007E20 49FFCA                  	dec r10
 11861 00007E23 4983E808                	sub r8, 8
 11862 00007E27 4983E908                	sub r9, 8
 11863 00007E2B EBE7                    	jmp .L_tc_recycle_frame_loop_0060
 11864                                  .L_tc_recycle_frame_done_0060:
 11865 00007E2D 498D6008                	lea rsp, [r8 + 8]
 11866 00007E31 5D                      	pop rbp
 11867 00007E32 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11868 00007E35 EB52                    	jmp .L_if_end_0030
 11869                                  .L_if_else_0030:
 11870                                  	; Initiating tail-call optimization
 11871 00007E37 6A00                    	push 0	; Number of arguments
 11872 00007E39 488B4510                	mov rax, ENV
 11873 00007E3D 488B00                  	mov rax, qword [rax + 8 * 0]
 11874 00007E40 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11875 00007E43 803804                  	cmp byte [rax], T_closure
 11876 00007E46 0F852DD00000            	jne L_error_non_closure
 11877 00007E4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11878                                  
 11879                                  	; Reclaiming the current stack frame
 11880 00007E4F FF7508                  	push qword [rbp + 8]
 11881 00007E52 FF7500                  	push qword [rbp]
 11882 00007E55 41BA04000000            	mov r10, 0 + 4
 11883 00007E5B 4C8B4518                	mov r8, COUNT
 11884 00007E5F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11885 00007E64 4C8D4DF8                	lea r9, [rbp - 8]
 11886                                  .L_tc_recycle_frame_loop_0061:
 11887 00007E68 4983FA00                	cmp r10, 0
 11888 00007E6C 7413                    	je .L_tc_recycle_frame_done_0061
 11889 00007E6E 4D8B19                  	mov r11, qword [r9]
 11890 00007E71 4D8918                  	mov qword [r8], r11
 11891 00007E74 49FFCA                  	dec r10
 11892 00007E77 4983E808                	sub r8, 8
 11893 00007E7B 4983E908                	sub r9, 8
 11894 00007E7F EBE7                    	jmp .L_tc_recycle_frame_loop_0061
 11895                                  .L_tc_recycle_frame_done_0061:
 11896 00007E81 498D6008                	lea rsp, [r8 + 8]
 11897 00007E85 5D                      	pop rbp
 11898 00007E86 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11899                                  .L_if_end_0030:
 11900                                  .L_if_end_0031:
 11901                                  .L_if_end_0032:
 11902 00007E89 EB52                    	jmp .L_if_end_0033
 11903                                  .L_if_else_0033:
 11904                                  	; Initiating tail-call optimization
 11905 00007E8B 6A00                    	push 0	; Number of arguments
 11906 00007E8D 488B4510                	mov rax, ENV
 11907 00007E91 488B00                  	mov rax, qword [rax + 8 * 0]
 11908 00007E94 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11909 00007E97 803804                  	cmp byte [rax], T_closure
 11910 00007E9A 0F85D9CF0000            	jne L_error_non_closure
 11911 00007EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11912                                  
 11913                                  	; Reclaiming the current stack frame
 11914 00007EA3 FF7508                  	push qword [rbp + 8]
 11915 00007EA6 FF7500                  	push qword [rbp]
 11916 00007EA9 41BA04000000            	mov r10, 0 + 4
 11917 00007EAF 4C8B4518                	mov r8, COUNT
 11918 00007EB3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11919 00007EB8 4C8D4DF8                	lea r9, [rbp - 8]
 11920                                  .L_tc_recycle_frame_loop_0062:
 11921 00007EBC 4983FA00                	cmp r10, 0
 11922 00007EC0 7413                    	je .L_tc_recycle_frame_done_0062
 11923 00007EC2 4D8B19                  	mov r11, qword [r9]
 11924 00007EC5 4D8918                  	mov qword [r8], r11
 11925 00007EC8 49FFCA                  	dec r10
 11926 00007ECB 4983E808                	sub r8, 8
 11927 00007ECF 4983E908                	sub r9, 8
 11928 00007ED3 EBE7                    	jmp .L_tc_recycle_frame_loop_0062
 11929                                  .L_tc_recycle_frame_done_0062:
 11930 00007ED5 498D6008                	lea rsp, [r8 + 8]
 11931 00007ED9 5D                      	pop rbp
 11932 00007EDA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11933                                  .L_if_end_0033:
 11934                                  .L_if_end_0034:
 11935                                  .L_if_end_0035:
 11936 00007EDD C9                      	leave
 11937 00007EDE C22000                  	ret AND_KILL_FRAME(2)
 11938                                  .L_lambda_simple_end_003f:	; new closure is in rax
 11939 00007EE1 50                      	push rax
 11940 00007EE2 6A01                    	push 1	; Number of arguments
 11941 00007EE4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11942 00007EE9 E834D00000              	call malloc
 11943 00007EEE 50                      	push rax
 11944 00007EEF BF08000000              	mov rdi, 8 * 1	; new rib
 11945 00007EF4 E829D00000              	call malloc
 11946 00007EF9 50                      	push rax
 11947 00007EFA BF10000000              	mov rdi, 8 * 2	; extended env
 11948 00007EFF E81ED00000              	call malloc
 11949 00007F04 488B7D10                	mov rdi, ENV
 11950 00007F08 BE00000000              	mov rsi, 0
 11951 00007F0D BA01000000              	mov rdx, 1
 11952                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 11953 00007F12 4883FE01                	cmp rsi, 1
 11954 00007F16 7410                    	je .L_lambda_simple_env_end_0040
 11955 00007F18 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11956 00007F1C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11957 00007F20 48FFC6                  	inc rsi
 11958 00007F23 48FFC2                  	inc rdx
 11959 00007F26 EBEA                    	jmp .L_lambda_simple_env_loop_0040
 11960                                  .L_lambda_simple_env_end_0040:
 11961 00007F28 5B                      	pop rbx
 11962 00007F29 BE00000000              	mov rsi, 0
 11963                                  .L_lambda_simple_params_loop_0040:	; copy params
 11964 00007F2E 4883FE01                	cmp rsi, 1
 11965 00007F32 740E                    	je .L_lambda_simple_params_end_0040
 11966 00007F34 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11967 00007F39 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11968 00007F3D 48FFC6                  	inc rsi
 11969 00007F40 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 11970                                  .L_lambda_simple_params_end_0040:
 11971 00007F42 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11972 00007F45 4889C3                  	mov rbx, rax
 11973 00007F48 58                      	pop rax
 11974 00007F49 C60004                  	mov byte [rax], T_closure
 11975 00007F4C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11976 00007F50 48C74009[5D7F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 11977 00007F58 E907020000              	jmp .L_lambda_simple_end_0040
 11978                                  .L_lambda_simple_code_0040:	; lambda-simple body
 11979 00007F5D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11980 00007F63 740B                    	je .L_lambda_simple_arity_check_ok_0040
 11981 00007F65 FF742410                	push qword [rsp + 8 * 2]
 11982 00007F69 6A01                    	push 1
 11983 00007F6B E96BCF0000              	jmp L_error_incorrect_arity_simple
 11984                                  .L_lambda_simple_arity_check_ok_0040:
 11985 00007F70 C8000000                	enter 0, 0
 11986 00007F74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11987 00007F79 E8A4CF0000              	call malloc
 11988 00007F7E 50                      	push rax
 11989 00007F7F BF08000000              	mov rdi, 8 * 1	; new rib
 11990 00007F84 E899CF0000              	call malloc
 11991 00007F89 50                      	push rax
 11992 00007F8A BF18000000              	mov rdi, 8 * 3	; extended env
 11993 00007F8F E88ECF0000              	call malloc
 11994 00007F94 488B7D10                	mov rdi, ENV
 11995 00007F98 BE00000000              	mov rsi, 0
 11996 00007F9D BA01000000              	mov rdx, 1
 11997                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 11998 00007FA2 4883FE02                	cmp rsi, 2
 11999 00007FA6 7410                    	je .L_lambda_opt_env_end_000c
 12000 00007FA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12001 00007FAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12002 00007FB0 48FFC6                  	inc rsi
 12003 00007FB3 48FFC2                  	inc rdx
 12004 00007FB6 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12005                                  .L_lambda_opt_env_end_000c:
 12006 00007FB8 5B                      	pop rbx
 12007 00007FB9 BE00000000              	mov rsi, 0
 12008                                  .L_lambda_opt_params_loop_000c:	; copy params
 12009 00007FBE 4883FE01                	cmp rsi, 1
 12010 00007FC2 740E                    	je .L_lambda_opt_params_end_000c
 12011 00007FC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12012 00007FC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12013 00007FCD 48FFC6                  	inc rsi
 12014 00007FD0 EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12015                                  .L_lambda_opt_params_end_000c:
 12016 00007FD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12017 00007FD5 4889C3                  	mov rbx, rax
 12018 00007FD8 58                      	pop rax
 12019 00007FD9 C60004                  	mov byte [rax], T_closure
 12020 00007FDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12021 00007FE0 48C74009[ED7F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12022 00007FE8 E973010000              	jmp .L_lambda_opt_end_000c
 12023                                  .L_lambda_opt_code_000c:
 12024 00007FED 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 12025 00007FF2 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 12026 00007FF6 7407                    	je .L_lambda_opt_arity_check_exact_000c	; Jump if arity matches
 12027 00007FF8 7F4C                    	jg .L_lambda_opt_arity_check_more_000c	; Jump if more arguments passed
 12028 00007FFA E9F0CE0000              	jmp L_error_incorrect_arity_opt
 12029                                  .L_lambda_opt_arity_check_exact_000c:
 12030 00007FFF 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 12031 00008002 4983C603                	add r14, 3 ; add 3 first stack values
 12032 00008006 41BF00000000            	mov r15, 0 ; r15 = index
 12033 0000800C 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 12034 00008010 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 12035 00008018 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12036                                  .L_lambda_opt_stack_shrink_loop_000c:
 12037 0000801A 4983FE00                	cmp r14, 0
 12038 0000801E 7E11                    	jle .L_make_lambda_opt_exact_finish_000c
 12039 00008020 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 12040 00008025 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 12041 00008029 49FFCE                  	dec r14 ; next loop value
 12042 0000802C 49FFC7                  	inc r15 ; update i
 12043 0000802F EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12044                                  .L_make_lambda_opt_exact_finish_000c:
 12045 00008031 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 12046 00008039 49FFC2                  	inc r10
 12047 0000803C 4C89542410              	mov qword [rsp + 8 * 2], r10
 12048 00008041 E99E000000              	jmp .L_lambda_opt_stack_adjusted_000c
 12049                                  .L_lambda_opt_arity_check_more_000c:
 12050 00008046 4D89D6                  	mov r14, r10 ; r14 = num args
 12051 00008049 4D89D7                  	mov r15, r10 ; r15 = num args
 12052 0000804C 41B900000000            	mov r9, 0; r9 = number of params 
 12053 00008052 4D29CE                  	sub r14, r9 ; r14 = extra args
 12054 00008055 4D01F1                  	add r9, r14 ; r9 = num args
 12055 00008058 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 12055 0000805A [0100000000000000] 
 12056 00008062 EB00                    	jmp .L_make_lambda_opt_arg_list_000c
 12057                                  .L_make_lambda_opt_arg_list_000c:
 12058 00008064 4983FE00                	cmp r14, 0
 12059 00008068 7E25                    	jle .L_make_lambda_opt_stack_fixed_000c
 12060 0000806A 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 12061 0000806F BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 12062 00008074 E8A9CE0000              	call malloc                         ; Allocate memory, result in rax
 12063 00008079 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 12064 0000807C 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 12065 00008080 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 12066 00008084 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 12067 00008087 49FFC9                  	dec r9                              ; args index minus 1
 12068 0000808A 49FFCE                  	dec r14                             ; next iteration
 12069 0000808D EBD5                    	jmp .L_make_lambda_opt_arg_list_000c
 12070                                  .L_make_lambda_opt_stack_fixed_000c:
 12071 0000808F 4D89FE                  	mov r14, r15 ; r14 = num args
 12072 00008092 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 12073 00008095 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 12074 00008099 41BA00000000            	mov r10, 0; r10 = num of params
 12075 0000809F 4D29D6                  	sub r14, r10 ; r14 = extra args
 12076 000080A2 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 12077 000080A5 49FFCE                  	dec r14 ; how much we need to change stack wise?
 12078 000080A8 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 12079 000080AD EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000c
 12080                                  .L_lambda_opt_stack_shrink_loop_more_000c:
 12081 000080AF 4983F800                	cmp r8, 0
 12082 000080B3 7E15                    	jle .L_make_lambda_opt_more_finish_000c
 12083 000080B5 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 12084 000080B9 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 12085 000080BD 4D8D26                  	lea r12, [r14]
 12086 000080C0 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 12087 000080C5 49FFC8                  	dec r8 ; next iteration
 12088 000080C8 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000c
 12089                                  .L_make_lambda_opt_more_finish_000c:
 12090 000080CA 4D89F8                  	mov r8, r15 ; num of args
 12091 000080CD 41BA00000000            	mov r10, 0
 12092 000080D3 4D29D0                  	sub r8, r10 ; num of new args
 12093 000080D6 49FFC0                  	inc r8
 12094 000080D9 4C89442420              	mov qword [rsp + 8 * 4], r8
 12095 000080DE 4883C410                	add rsp, 8 * 2  ; 
 12096 000080E2 EB00                    	jmp .L_lambda_opt_stack_adjusted_000c
 12097                                  .L_lambda_opt_stack_adjusted_000c:
 12098 000080E4 C8000000                	enter 0, 0
 12099                                  	; Initiating tail-call optimization
 12100 000080E8 488B4520                	mov rax, PARAM(0)	; param s
 12101 000080EC 50                      	push rax
 12102 000080ED 48B8-                   	mov rax, L_constants + 2270
 12102 000080EF [DE08000000000000] 
 12103 000080F7 50                      	push rax
 12104 000080F8 488B4510                	mov rax, ENV
 12105 000080FC 488B00                  	mov rax, qword [rax + 8 * 0]
 12106 000080FF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12107 00008102 50                      	push rax
 12108 00008103 6A03                    	push 3	; Number of arguments
 12109 00008105 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12110 0000810D 803805                  	cmp byte [rax], T_undefined
 12111 00008110 0F84DFCC0000            	je L_error_fvar_undefined
 12112 00008116 803804                  	cmp byte [rax], T_closure
 12113 00008119 0F855ACD0000            	jne L_error_non_closure
 12114 0000811F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12115                                  
 12116                                  	; Reclaiming the current stack frame
 12117 00008122 FF7508                  	push qword [rbp + 8]
 12118 00008125 FF7500                  	push qword [rbp]
 12119 00008128 41BA07000000            	mov r10, 3 + 4
 12120 0000812E 4C8B4518                	mov r8, COUNT
 12121 00008132 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12122 00008137 4C8D4DF8                	lea r9, [rbp - 8]
 12123                                  .L_tc_recycle_frame_loop_0063:
 12124 0000813B 4983FA00                	cmp r10, 0
 12125 0000813F 7413                    	je .L_tc_recycle_frame_done_0063
 12126 00008141 4D8B19                  	mov r11, qword [r9]
 12127 00008144 4D8918                  	mov qword [r8], r11
 12128 00008147 49FFCA                  	dec r10
 12129 0000814A 4983E808                	sub r8, 8
 12130 0000814E 4983E908                	sub r9, 8
 12131 00008152 EBE7                    	jmp .L_tc_recycle_frame_loop_0063
 12132                                  .L_tc_recycle_frame_done_0063:
 12133 00008154 498D6008                	lea rsp, [r8 + 8]
 12134 00008158 5D                      	pop rbp
 12135 00008159 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12136 0000815C C9                      	leave
 12137 0000815D C21800                  	ret AND_KILL_FRAME(1)
 12138                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12139 00008160 C9                      	leave
 12140 00008161 C21800                  	ret AND_KILL_FRAME(1)
 12141                                  .L_lambda_simple_end_0040:	; new closure is in rax
 12142 00008164 803804                  	cmp byte [rax], T_closure
 12143 00008167 0F850CCD0000            	jne L_error_non_closure
 12144 0000816D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12145                                  
 12146                                  	; Reclaiming the current stack frame
 12147 00008170 FF7508                  	push qword [rbp + 8]
 12148 00008173 FF7500                  	push qword [rbp]
 12149 00008176 41BA05000000            	mov r10, 1 + 4
 12150 0000817C 4C8B4518                	mov r8, COUNT
 12151 00008180 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12152 00008185 4C8D4DF8                	lea r9, [rbp - 8]
 12153                                  .L_tc_recycle_frame_loop_0064:
 12154 00008189 4983FA00                	cmp r10, 0
 12155 0000818D 7413                    	je .L_tc_recycle_frame_done_0064
 12156 0000818F 4D8B19                  	mov r11, qword [r9]
 12157 00008192 4D8918                  	mov qword [r8], r11
 12158 00008195 49FFCA                  	dec r10
 12159 00008198 4983E808                	sub r8, 8
 12160 0000819C 4983E908                	sub r9, 8
 12161 000081A0 EBE7                    	jmp .L_tc_recycle_frame_loop_0064
 12162                                  .L_tc_recycle_frame_done_0064:
 12163 000081A2 498D6008                	lea rsp, [r8 + 8]
 12164 000081A6 5D                      	pop rbp
 12165 000081A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12166 000081AA C9                      	leave
 12167 000081AB C21800                  	ret AND_KILL_FRAME(1)
 12168                                  .L_lambda_simple_end_003e:	; new closure is in rax
 12169 000081AE 803804                  	cmp byte [rax], T_closure
 12170 000081B1 0F85C2CC0000            	jne L_error_non_closure
 12171 000081B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12172 000081BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12173 000081BD 48890425[C50D0000]      	mov qword [free_var_0], rax
 12174 000081C5 48B8-                   	mov rax, sob_void
 12174 000081C7 [0000000000000000] 
 12175                                  
 12176 000081CF 4889C7                  	mov rdi, rax
 12177 000081D2 E8A0CF0000              	call print_sexpr_if_not_void
 12178                                  	; preparing a non-tail-call
 12179 000081D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12180 000081DC E841CD0000              	call malloc
 12181 000081E1 50                      	push rax
 12182 000081E2 BF00000000              	mov rdi, 8 * 0	; new rib
 12183 000081E7 E836CD0000              	call malloc
 12184 000081EC 50                      	push rax
 12185 000081ED BF08000000              	mov rdi, 8 * 1	; extended env
 12186 000081F2 E82BCD0000              	call malloc
 12187 000081F7 488B7D10                	mov rdi, ENV
 12188 000081FB BE00000000              	mov rsi, 0
 12189 00008200 BA01000000              	mov rdx, 1
 12190                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 12191 00008205 4883FE00                	cmp rsi, 0
 12192 00008209 7410                    	je .L_lambda_simple_env_end_0041
 12193 0000820B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12194 0000820F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12195 00008213 48FFC6                  	inc rsi
 12196 00008216 48FFC2                  	inc rdx
 12197 00008219 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 12198                                  .L_lambda_simple_env_end_0041:
 12199 0000821B 5B                      	pop rbx
 12200 0000821C BE00000000              	mov rsi, 0
 12201                                  .L_lambda_simple_params_loop_0041:	; copy params
 12202 00008221 4883FE00                	cmp rsi, 0
 12203 00008225 740E                    	je .L_lambda_simple_params_end_0041
 12204 00008227 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12205 0000822C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12206 00008230 48FFC6                  	inc rsi
 12207 00008233 EBEC                    	jmp .L_lambda_simple_params_loop_0041
 12208                                  .L_lambda_simple_params_end_0041:
 12209 00008235 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12210 00008238 4889C3                  	mov rbx, rax
 12211 0000823B 58                      	pop rax
 12212 0000823C C60004                  	mov byte [rax], T_closure
 12213 0000823F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12214 00008243 48C74009[50820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 12215 0000824B E98A000000              	jmp .L_lambda_simple_end_0041
 12216                                  .L_lambda_simple_code_0041:	; lambda-simple body
 12217 00008250 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12218 00008256 740B                    	je .L_lambda_simple_arity_check_ok_0041
 12219 00008258 FF742410                	push qword [rsp + 8 * 2]
 12220 0000825C 6A00                    	push 0
 12221 0000825E E978CC0000              	jmp L_error_incorrect_arity_simple
 12222                                  .L_lambda_simple_arity_check_ok_0041:
 12223 00008263 C8000000                	enter 0, 0
 12224                                  	; Initiating tail-call optimization
 12225 00008267 48B8-                   	mov rax, L_constants + 2187
 12225 00008269 [8B08000000000000] 
 12226 00008271 50                      	push rax
 12227 00008272 48B8-                   	mov rax, L_constants + 2298
 12227 00008274 [FA08000000000000] 
 12228 0000827C 50                      	push rax
 12229 0000827D 6A02                    	push 2	; Number of arguments
 12230 0000827F 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 12231 00008287 803805                  	cmp byte [rax], T_undefined
 12232 0000828A 0F8465CB0000            	je L_error_fvar_undefined
 12233 00008290 803804                  	cmp byte [rax], T_closure
 12234 00008293 0F85E0CB0000            	jne L_error_non_closure
 12235 00008299 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12236                                  
 12237                                  	; Reclaiming the current stack frame
 12238 0000829C FF7508                  	push qword [rbp + 8]
 12239 0000829F FF7500                  	push qword [rbp]
 12240 000082A2 41BA06000000            	mov r10, 2 + 4
 12241 000082A8 4C8B4518                	mov r8, COUNT
 12242 000082AC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12243 000082B1 4C8D4DF8                	lea r9, [rbp - 8]
 12244                                  .L_tc_recycle_frame_loop_0065:
 12245 000082B5 4983FA00                	cmp r10, 0
 12246 000082B9 7413                    	je .L_tc_recycle_frame_done_0065
 12247 000082BB 4D8B19                  	mov r11, qword [r9]
 12248 000082BE 4D8918                  	mov qword [r8], r11
 12249 000082C1 49FFCA                  	dec r10
 12250 000082C4 4983E808                	sub r8, 8
 12251 000082C8 4983E908                	sub r9, 8
 12252 000082CC EBE7                    	jmp .L_tc_recycle_frame_loop_0065
 12253                                  .L_tc_recycle_frame_done_0065:
 12254 000082CE 498D6008                	lea rsp, [r8 + 8]
 12255 000082D2 5D                      	pop rbp
 12256 000082D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12257 000082D6 C9                      	leave
 12258 000082D7 C21000                  	ret AND_KILL_FRAME(0)
 12259                                  .L_lambda_simple_end_0041:	; new closure is in rax
 12260 000082DA 50                      	push rax
 12261 000082DB 6A01                    	push 1	; arg count
 12262 000082DD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12263 000082E2 E83BCC0000              	call malloc
 12264 000082E7 50                      	push rax
 12265 000082E8 BF00000000              	mov rdi, 8 * 0	; new rib
 12266 000082ED E830CC0000              	call malloc
 12267 000082F2 50                      	push rax
 12268 000082F3 BF08000000              	mov rdi, 8 * 1	; extended env
 12269 000082F8 E825CC0000              	call malloc
 12270 000082FD 488B7D10                	mov rdi, ENV
 12271 00008301 BE00000000              	mov rsi, 0
 12272 00008306 BA01000000              	mov rdx, 1
 12273                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 12274 0000830B 4883FE00                	cmp rsi, 0
 12275 0000830F 7410                    	je .L_lambda_simple_env_end_0042
 12276 00008311 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12277 00008315 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12278 00008319 48FFC6                  	inc rsi
 12279 0000831C 48FFC2                  	inc rdx
 12280 0000831F EBEA                    	jmp .L_lambda_simple_env_loop_0042
 12281                                  .L_lambda_simple_env_end_0042:
 12282 00008321 5B                      	pop rbx
 12283 00008322 BE00000000              	mov rsi, 0
 12284                                  .L_lambda_simple_params_loop_0042:	; copy params
 12285 00008327 4883FE00                	cmp rsi, 0
 12286 0000832B 740E                    	je .L_lambda_simple_params_end_0042
 12287 0000832D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12288 00008332 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12289 00008336 48FFC6                  	inc rsi
 12290 00008339 EBEC                    	jmp .L_lambda_simple_params_loop_0042
 12291                                  .L_lambda_simple_params_end_0042:
 12292 0000833B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12293 0000833E 4889C3                  	mov rbx, rax
 12294 00008341 58                      	pop rax
 12295 00008342 C60004                  	mov byte [rax], T_closure
 12296 00008345 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12297 00008349 48C74009[56830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 12298 00008351 E93B0D0000              	jmp .L_lambda_simple_end_0042
 12299                                  .L_lambda_simple_code_0042:	; lambda-simple body
 12300 00008356 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12301 0000835C 740B                    	je .L_lambda_simple_arity_check_ok_0042
 12302 0000835E FF742410                	push qword [rsp + 8 * 2]
 12303 00008362 6A01                    	push 1
 12304 00008364 E972CB0000              	jmp L_error_incorrect_arity_simple
 12305                                  .L_lambda_simple_arity_check_ok_0042:
 12306 00008369 C8000000                	enter 0, 0
 12307                                  	; Initiating tail-call optimization
 12308 0000836D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12309 00008372 E8ABCB0000              	call malloc
 12310 00008377 50                      	push rax
 12311 00008378 BF08000000              	mov rdi, 8 * 1	; new rib
 12312 0000837D E8A0CB0000              	call malloc
 12313 00008382 50                      	push rax
 12314 00008383 BF10000000              	mov rdi, 8 * 2	; extended env
 12315 00008388 E895CB0000              	call malloc
 12316 0000838D 488B7D10                	mov rdi, ENV
 12317 00008391 BE00000000              	mov rsi, 0
 12318 00008396 BA01000000              	mov rdx, 1
 12319                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 12320 0000839B 4883FE01                	cmp rsi, 1
 12321 0000839F 7410                    	je .L_lambda_simple_env_end_0043
 12322 000083A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12323 000083A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12324 000083A9 48FFC6                  	inc rsi
 12325 000083AC 48FFC2                  	inc rdx
 12326 000083AF EBEA                    	jmp .L_lambda_simple_env_loop_0043
 12327                                  .L_lambda_simple_env_end_0043:
 12328 000083B1 5B                      	pop rbx
 12329 000083B2 BE00000000              	mov rsi, 0
 12330                                  .L_lambda_simple_params_loop_0043:	; copy params
 12331 000083B7 4883FE01                	cmp rsi, 1
 12332 000083BB 740E                    	je .L_lambda_simple_params_end_0043
 12333 000083BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12334 000083C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12335 000083C6 48FFC6                  	inc rsi
 12336 000083C9 EBEC                    	jmp .L_lambda_simple_params_loop_0043
 12337                                  .L_lambda_simple_params_end_0043:
 12338 000083CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12339 000083CE 4889C3                  	mov rbx, rax
 12340 000083D1 58                      	pop rax
 12341 000083D2 C60004                  	mov byte [rax], T_closure
 12342 000083D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12343 000083D9 48C74009[E6830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 12344 000083E1 E938080000              	jmp .L_lambda_simple_end_0043
 12345                                  .L_lambda_simple_code_0043:	; lambda-simple body
 12346 000083E6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12347 000083EC 740B                    	je .L_lambda_simple_arity_check_ok_0043
 12348 000083EE FF742410                	push qword [rsp + 8 * 2]
 12349 000083F2 6A02                    	push 2
 12350 000083F4 E9E2CA0000              	jmp L_error_incorrect_arity_simple
 12351                                  .L_lambda_simple_arity_check_ok_0043:
 12352 000083F9 C8000000                	enter 0, 0
 12353                                  	; preparing a non-tail-call
 12354 000083FD 488B4520                	mov rax, PARAM(0)	; param a
 12355 00008401 50                      	push rax
 12356 00008402 6A01                    	push 1	; arg count
 12357 00008404 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12358 0000840C 803805                  	cmp byte [rax], T_undefined
 12359 0000840F 0F84E0C90000            	je L_error_fvar_undefined
 12360 00008415 803804                  	cmp byte [rax], T_closure
 12361 00008418 0F855BCA0000            	jne L_error_non_closure
 12362 0000841E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12363 00008421 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12364 00008424 483D[02000000]          	cmp rax, sob_boolean_false
 12365 0000842A 0F8467020000            	je .L_if_else_0041
 12366                                  	; preparing a non-tail-call
 12367 00008430 488B4528                	mov rax, PARAM(1)	; param b
 12368 00008434 50                      	push rax
 12369 00008435 6A01                    	push 1	; arg count
 12370 00008437 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12371 0000843F 803805                  	cmp byte [rax], T_undefined
 12372 00008442 0F84ADC90000            	je L_error_fvar_undefined
 12373 00008448 803804                  	cmp byte [rax], T_closure
 12374 0000844B 0F8528CA0000            	jne L_error_non_closure
 12375 00008451 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12376 00008454 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12377 00008457 483D[02000000]          	cmp rax, sob_boolean_false
 12378 0000845D 7468                    	je .L_if_else_0038
 12379                                  	; Initiating tail-call optimization
 12380 0000845F 488B4528                	mov rax, PARAM(1)	; param b
 12381 00008463 50                      	push rax
 12382 00008464 488B4520                	mov rax, PARAM(0)	; param a
 12383 00008468 50                      	push rax
 12384 00008469 6A02                    	push 2	; Number of arguments
 12385 0000846B 488B0425[C40E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12386 00008473 803805                  	cmp byte [rax], T_undefined
 12387 00008476 0F8479C90000            	je L_error_fvar_undefined
 12388 0000847C 803804                  	cmp byte [rax], T_closure
 12389 0000847F 0F85F4C90000            	jne L_error_non_closure
 12390 00008485 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12391                                  
 12392                                  	; Reclaiming the current stack frame
 12393 00008488 FF7508                  	push qword [rbp + 8]
 12394 0000848B FF7500                  	push qword [rbp]
 12395 0000848E 41BA06000000            	mov r10, 2 + 4
 12396 00008494 4C8B4518                	mov r8, COUNT
 12397 00008498 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12398 0000849D 4C8D4DF8                	lea r9, [rbp - 8]
 12399                                  .L_tc_recycle_frame_loop_0066:
 12400 000084A1 4983FA00                	cmp r10, 0
 12401 000084A5 7413                    	je .L_tc_recycle_frame_done_0066
 12402 000084A7 4D8B19                  	mov r11, qword [r9]
 12403 000084AA 4D8918                  	mov qword [r8], r11
 12404 000084AD 49FFCA                  	dec r10
 12405 000084B0 4983E808                	sub r8, 8
 12406 000084B4 4983E908                	sub r9, 8
 12407 000084B8 EBE7                    	jmp .L_tc_recycle_frame_loop_0066
 12408                                  .L_tc_recycle_frame_done_0066:
 12409 000084BA 498D6008                	lea rsp, [r8 + 8]
 12410 000084BE 5D                      	pop rbp
 12411 000084BF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12412 000084C2 E9CB010000              	jmp .L_if_end_0038
 12413                                  .L_if_else_0038:
 12414                                  	; preparing a non-tail-call
 12415 000084C7 488B4528                	mov rax, PARAM(1)	; param b
 12416 000084CB 50                      	push rax
 12417 000084CC 6A01                    	push 1	; arg count
 12418 000084CE 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12419 000084D6 803805                  	cmp byte [rax], T_undefined
 12420 000084D9 0F8416C90000            	je L_error_fvar_undefined
 12421 000084DF 803804                  	cmp byte [rax], T_closure
 12422 000084E2 0F8591C90000            	jne L_error_non_closure
 12423 000084E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12424 000084EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12425 000084EE 483D[02000000]          	cmp rax, sob_boolean_false
 12426 000084F4 0F848B000000            	je .L_if_else_0037
 12427                                  	; Initiating tail-call optimization
 12428 000084FA 488B4528                	mov rax, PARAM(1)	; param b
 12429 000084FE 50                      	push rax
 12430                                  	; preparing a non-tail-call
 12431 000084FF 488B4520                	mov rax, PARAM(0)	; param a
 12432 00008503 50                      	push rax
 12433 00008504 6A01                    	push 1	; arg count
 12434 00008506 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12435 0000850E 803805                  	cmp byte [rax], T_undefined
 12436 00008511 0F84DEC80000            	je L_error_fvar_undefined
 12437 00008517 803804                  	cmp byte [rax], T_closure
 12438 0000851A 0F8559C90000            	jne L_error_non_closure
 12439 00008520 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12440 00008523 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12441 00008526 50                      	push rax
 12442 00008527 6A02                    	push 2	; Number of arguments
 12443 00008529 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12444 00008531 803805                  	cmp byte [rax], T_undefined
 12445 00008534 0F84BBC80000            	je L_error_fvar_undefined
 12446 0000853A 803804                  	cmp byte [rax], T_closure
 12447 0000853D 0F8536C90000            	jne L_error_non_closure
 12448 00008543 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12449                                  
 12450                                  	; Reclaiming the current stack frame
 12451 00008546 FF7508                  	push qword [rbp + 8]
 12452 00008549 FF7500                  	push qword [rbp]
 12453 0000854C 41BA06000000            	mov r10, 2 + 4
 12454 00008552 4C8B4518                	mov r8, COUNT
 12455 00008556 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12456 0000855B 4C8D4DF8                	lea r9, [rbp - 8]
 12457                                  .L_tc_recycle_frame_loop_0067:
 12458 0000855F 4983FA00                	cmp r10, 0
 12459 00008563 7413                    	je .L_tc_recycle_frame_done_0067
 12460 00008565 4D8B19                  	mov r11, qword [r9]
 12461 00008568 4D8918                  	mov qword [r8], r11
 12462 0000856B 49FFCA                  	dec r10
 12463 0000856E 4983E808                	sub r8, 8
 12464 00008572 4983E908                	sub r9, 8
 12465 00008576 EBE7                    	jmp .L_tc_recycle_frame_loop_0067
 12466                                  .L_tc_recycle_frame_done_0067:
 12467 00008578 498D6008                	lea rsp, [r8 + 8]
 12468 0000857C 5D                      	pop rbp
 12469 0000857D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12470 00008580 E90D010000              	jmp .L_if_end_0037
 12471                                  .L_if_else_0037:
 12472                                  	; preparing a non-tail-call
 12473 00008585 488B4528                	mov rax, PARAM(1)	; param b
 12474 00008589 50                      	push rax
 12475 0000858A 6A01                    	push 1	; arg count
 12476 0000858C 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12477 00008594 803805                  	cmp byte [rax], T_undefined
 12478 00008597 0F8458C80000            	je L_error_fvar_undefined
 12479 0000859D 803804                  	cmp byte [rax], T_closure
 12480 000085A0 0F85D3C80000            	jne L_error_non_closure
 12481 000085A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12482 000085A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12483 000085AC 483D[02000000]          	cmp rax, sob_boolean_false
 12484 000085B2 0F8488000000            	je .L_if_else_0036
 12485                                  	; Initiating tail-call optimization
 12486 000085B8 488B4528                	mov rax, PARAM(1)	; param b
 12487 000085BC 50                      	push rax
 12488                                  	; preparing a non-tail-call
 12489 000085BD 488B4520                	mov rax, PARAM(0)	; param a
 12490 000085C1 50                      	push rax
 12491 000085C2 6A01                    	push 1	; arg count
 12492 000085C4 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12493 000085CC 803805                  	cmp byte [rax], T_undefined
 12494 000085CF 0F8420C80000            	je L_error_fvar_undefined
 12495 000085D5 803804                  	cmp byte [rax], T_closure
 12496 000085D8 0F859BC80000            	jne L_error_non_closure
 12497 000085DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12498 000085E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12499 000085E4 50                      	push rax
 12500 000085E5 6A02                    	push 2	; Number of arguments
 12501 000085E7 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12502 000085EF 803805                  	cmp byte [rax], T_undefined
 12503 000085F2 0F84FDC70000            	je L_error_fvar_undefined
 12504 000085F8 803804                  	cmp byte [rax], T_closure
 12505 000085FB 0F8578C80000            	jne L_error_non_closure
 12506 00008601 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12507                                  
 12508                                  	; Reclaiming the current stack frame
 12509 00008604 FF7508                  	push qword [rbp + 8]
 12510 00008607 FF7500                  	push qword [rbp]
 12511 0000860A 41BA06000000            	mov r10, 2 + 4
 12512 00008610 4C8B4518                	mov r8, COUNT
 12513 00008614 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12514 00008619 4C8D4DF8                	lea r9, [rbp - 8]
 12515                                  .L_tc_recycle_frame_loop_0068:
 12516 0000861D 4983FA00                	cmp r10, 0
 12517 00008621 7413                    	je .L_tc_recycle_frame_done_0068
 12518 00008623 4D8B19                  	mov r11, qword [r9]
 12519 00008626 4D8918                  	mov qword [r8], r11
 12520 00008629 49FFCA                  	dec r10
 12521 0000862C 4983E808                	sub r8, 8
 12522 00008630 4983E908                	sub r9, 8
 12523 00008634 EBE7                    	jmp .L_tc_recycle_frame_loop_0068
 12524                                  .L_tc_recycle_frame_done_0068:
 12525 00008636 498D6008                	lea rsp, [r8 + 8]
 12526 0000863A 5D                      	pop rbp
 12527 0000863B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12528 0000863E EB52                    	jmp .L_if_end_0036
 12529                                  .L_if_else_0036:
 12530                                  	; Initiating tail-call optimization
 12531 00008640 6A00                    	push 0	; Number of arguments
 12532 00008642 488B4510                	mov rax, ENV
 12533 00008646 488B00                  	mov rax, qword [rax + 8 * 0]
 12534 00008649 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12535 0000864C 803804                  	cmp byte [rax], T_closure
 12536 0000864F 0F8524C80000            	jne L_error_non_closure
 12537 00008655 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12538                                  
 12539                                  	; Reclaiming the current stack frame
 12540 00008658 FF7508                  	push qword [rbp + 8]
 12541 0000865B FF7500                  	push qword [rbp]
 12542 0000865E 41BA04000000            	mov r10, 0 + 4
 12543 00008664 4C8B4518                	mov r8, COUNT
 12544 00008668 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12545 0000866D 4C8D4DF8                	lea r9, [rbp - 8]
 12546                                  .L_tc_recycle_frame_loop_0069:
 12547 00008671 4983FA00                	cmp r10, 0
 12548 00008675 7413                    	je .L_tc_recycle_frame_done_0069
 12549 00008677 4D8B19                  	mov r11, qword [r9]
 12550 0000867A 4D8918                  	mov qword [r8], r11
 12551 0000867D 49FFCA                  	dec r10
 12552 00008680 4983E808                	sub r8, 8
 12553 00008684 4983E908                	sub r9, 8
 12554 00008688 EBE7                    	jmp .L_tc_recycle_frame_loop_0069
 12555                                  .L_tc_recycle_frame_done_0069:
 12556 0000868A 498D6008                	lea rsp, [r8 + 8]
 12557 0000868E 5D                      	pop rbp
 12558 0000868F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12559                                  .L_if_end_0036:
 12560                                  .L_if_end_0037:
 12561                                  .L_if_end_0038:
 12562 00008692 E983050000              	jmp .L_if_end_0041
 12563                                  .L_if_else_0041:
 12564                                  	; preparing a non-tail-call
 12565 00008697 488B4520                	mov rax, PARAM(0)	; param a
 12566 0000869B 50                      	push rax
 12567 0000869C 6A01                    	push 1	; arg count
 12568 0000869E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12569 000086A6 803805                  	cmp byte [rax], T_undefined
 12570 000086A9 0F8446C70000            	je L_error_fvar_undefined
 12571 000086AF 803804                  	cmp byte [rax], T_closure
 12572 000086B2 0F85C1C70000            	jne L_error_non_closure
 12573 000086B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12574 000086BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12575 000086BE 483D[02000000]          	cmp rax, sob_boolean_false
 12576 000086C4 0F8467020000            	je .L_if_else_0040
 12577                                  	; preparing a non-tail-call
 12578 000086CA 488B4528                	mov rax, PARAM(1)	; param b
 12579 000086CE 50                      	push rax
 12580 000086CF 6A01                    	push 1	; arg count
 12581 000086D1 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12582 000086D9 803805                  	cmp byte [rax], T_undefined
 12583 000086DC 0F8413C70000            	je L_error_fvar_undefined
 12584 000086E2 803804                  	cmp byte [rax], T_closure
 12585 000086E5 0F858EC70000            	jne L_error_non_closure
 12586 000086EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12587 000086EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 12588 000086F1 483D[02000000]          	cmp rax, sob_boolean_false
 12589 000086F7 0F848B000000            	je .L_if_else_003b
 12590                                  	; Initiating tail-call optimization
 12591                                  	; preparing a non-tail-call
 12592 000086FD 488B4528                	mov rax, PARAM(1)	; param b
 12593 00008701 50                      	push rax
 12594 00008702 6A01                    	push 1	; arg count
 12595 00008704 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12596 0000870C 803805                  	cmp byte [rax], T_undefined
 12597 0000870F 0F84E0C60000            	je L_error_fvar_undefined
 12598 00008715 803804                  	cmp byte [rax], T_closure
 12599 00008718 0F855BC70000            	jne L_error_non_closure
 12600 0000871E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12601 00008721 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12602 00008724 50                      	push rax
 12603 00008725 488B4520                	mov rax, PARAM(0)	; param a
 12604 00008729 50                      	push rax
 12605 0000872A 6A02                    	push 2	; Number of arguments
 12606 0000872C 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12607 00008734 803805                  	cmp byte [rax], T_undefined
 12608 00008737 0F84B8C60000            	je L_error_fvar_undefined
 12609 0000873D 803804                  	cmp byte [rax], T_closure
 12610 00008740 0F8533C70000            	jne L_error_non_closure
 12611 00008746 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12612                                  
 12613                                  	; Reclaiming the current stack frame
 12614 00008749 FF7508                  	push qword [rbp + 8]
 12615 0000874C FF7500                  	push qword [rbp]
 12616 0000874F 41BA06000000            	mov r10, 2 + 4
 12617 00008755 4C8B4518                	mov r8, COUNT
 12618 00008759 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12619 0000875E 4C8D4DF8                	lea r9, [rbp - 8]
 12620                                  .L_tc_recycle_frame_loop_006a:
 12621 00008762 4983FA00                	cmp r10, 0
 12622 00008766 7413                    	je .L_tc_recycle_frame_done_006a
 12623 00008768 4D8B19                  	mov r11, qword [r9]
 12624 0000876B 4D8918                  	mov qword [r8], r11
 12625 0000876E 49FFCA                  	dec r10
 12626 00008771 4983E808                	sub r8, 8
 12627 00008775 4983E908                	sub r9, 8
 12628 00008779 EBE7                    	jmp .L_tc_recycle_frame_loop_006a
 12629                                  .L_tc_recycle_frame_done_006a:
 12630 0000877B 498D6008                	lea rsp, [r8 + 8]
 12631 0000877F 5D                      	pop rbp
 12632 00008780 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12633 00008783 E9A4010000              	jmp .L_if_end_003b
 12634                                  .L_if_else_003b:
 12635                                  	; preparing a non-tail-call
 12636 00008788 488B4528                	mov rax, PARAM(1)	; param b
 12637 0000878C 50                      	push rax
 12638 0000878D 6A01                    	push 1	; arg count
 12639 0000878F 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12640 00008797 803805                  	cmp byte [rax], T_undefined
 12641 0000879A 0F8455C60000            	je L_error_fvar_undefined
 12642 000087A0 803804                  	cmp byte [rax], T_closure
 12643 000087A3 0F85D0C60000            	jne L_error_non_closure
 12644 000087A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12645 000087AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12646 000087AF 483D[02000000]          	cmp rax, sob_boolean_false
 12647 000087B5 7468                    	je .L_if_else_003a
 12648                                  	; Initiating tail-call optimization
 12649 000087B7 488B4528                	mov rax, PARAM(1)	; param b
 12650 000087BB 50                      	push rax
 12651 000087BC 488B4520                	mov rax, PARAM(0)	; param a
 12652 000087C0 50                      	push rax
 12653 000087C1 6A02                    	push 2	; Number of arguments
 12654 000087C3 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12655 000087CB 803805                  	cmp byte [rax], T_undefined
 12656 000087CE 0F8421C60000            	je L_error_fvar_undefined
 12657 000087D4 803804                  	cmp byte [rax], T_closure
 12658 000087D7 0F859CC60000            	jne L_error_non_closure
 12659 000087DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12660                                  
 12661                                  	; Reclaiming the current stack frame
 12662 000087E0 FF7508                  	push qword [rbp + 8]
 12663 000087E3 FF7500                  	push qword [rbp]
 12664 000087E6 41BA06000000            	mov r10, 2 + 4
 12665 000087EC 4C8B4518                	mov r8, COUNT
 12666 000087F0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12667 000087F5 4C8D4DF8                	lea r9, [rbp - 8]
 12668                                  .L_tc_recycle_frame_loop_006b:
 12669 000087F9 4983FA00                	cmp r10, 0
 12670 000087FD 7413                    	je .L_tc_recycle_frame_done_006b
 12671 000087FF 4D8B19                  	mov r11, qword [r9]
 12672 00008802 4D8918                  	mov qword [r8], r11
 12673 00008805 49FFCA                  	dec r10
 12674 00008808 4983E808                	sub r8, 8
 12675 0000880C 4983E908                	sub r9, 8
 12676 00008810 EBE7                    	jmp .L_tc_recycle_frame_loop_006b
 12677                                  .L_tc_recycle_frame_done_006b:
 12678 00008812 498D6008                	lea rsp, [r8 + 8]
 12679 00008816 5D                      	pop rbp
 12680 00008817 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12681 0000881A E90D010000              	jmp .L_if_end_003a
 12682                                  .L_if_else_003a:
 12683                                  	; preparing a non-tail-call
 12684 0000881F 488B4528                	mov rax, PARAM(1)	; param b
 12685 00008823 50                      	push rax
 12686 00008824 6A01                    	push 1	; arg count
 12687 00008826 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12688 0000882E 803805                  	cmp byte [rax], T_undefined
 12689 00008831 0F84BEC50000            	je L_error_fvar_undefined
 12690 00008837 803804                  	cmp byte [rax], T_closure
 12691 0000883A 0F8539C60000            	jne L_error_non_closure
 12692 00008840 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12693 00008843 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12694 00008846 483D[02000000]          	cmp rax, sob_boolean_false
 12695 0000884C 0F8488000000            	je .L_if_else_0039
 12696                                  	; Initiating tail-call optimization
 12697 00008852 488B4528                	mov rax, PARAM(1)	; param b
 12698 00008856 50                      	push rax
 12699                                  	; preparing a non-tail-call
 12700 00008857 488B4520                	mov rax, PARAM(0)	; param a
 12701 0000885B 50                      	push rax
 12702 0000885C 6A01                    	push 1	; arg count
 12703 0000885E 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12704 00008866 803805                  	cmp byte [rax], T_undefined
 12705 00008869 0F8486C50000            	je L_error_fvar_undefined
 12706 0000886F 803804                  	cmp byte [rax], T_closure
 12707 00008872 0F8501C60000            	jne L_error_non_closure
 12708 00008878 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12709 0000887B FF5009                  	call SOB_CLOSURE_CODE(rax)
 12710 0000887E 50                      	push rax
 12711 0000887F 6A02                    	push 2	; Number of arguments
 12712 00008881 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12713 00008889 803805                  	cmp byte [rax], T_undefined
 12714 0000888C 0F8463C50000            	je L_error_fvar_undefined
 12715 00008892 803804                  	cmp byte [rax], T_closure
 12716 00008895 0F85DEC50000            	jne L_error_non_closure
 12717 0000889B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12718                                  
 12719                                  	; Reclaiming the current stack frame
 12720 0000889E FF7508                  	push qword [rbp + 8]
 12721 000088A1 FF7500                  	push qword [rbp]
 12722 000088A4 41BA06000000            	mov r10, 2 + 4
 12723 000088AA 4C8B4518                	mov r8, COUNT
 12724 000088AE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12725 000088B3 4C8D4DF8                	lea r9, [rbp - 8]
 12726                                  .L_tc_recycle_frame_loop_006c:
 12727 000088B7 4983FA00                	cmp r10, 0
 12728 000088BB 7413                    	je .L_tc_recycle_frame_done_006c
 12729 000088BD 4D8B19                  	mov r11, qword [r9]
 12730 000088C0 4D8918                  	mov qword [r8], r11
 12731 000088C3 49FFCA                  	dec r10
 12732 000088C6 4983E808                	sub r8, 8
 12733 000088CA 4983E908                	sub r9, 8
 12734 000088CE EBE7                    	jmp .L_tc_recycle_frame_loop_006c
 12735                                  .L_tc_recycle_frame_done_006c:
 12736 000088D0 498D6008                	lea rsp, [r8 + 8]
 12737 000088D4 5D                      	pop rbp
 12738 000088D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12739 000088D8 EB52                    	jmp .L_if_end_0039
 12740                                  .L_if_else_0039:
 12741                                  	; Initiating tail-call optimization
 12742 000088DA 6A00                    	push 0	; Number of arguments
 12743 000088DC 488B4510                	mov rax, ENV
 12744 000088E0 488B00                  	mov rax, qword [rax + 8 * 0]
 12745 000088E3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12746 000088E6 803804                  	cmp byte [rax], T_closure
 12747 000088E9 0F858AC50000            	jne L_error_non_closure
 12748 000088EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12749                                  
 12750                                  	; Reclaiming the current stack frame
 12751 000088F2 FF7508                  	push qword [rbp + 8]
 12752 000088F5 FF7500                  	push qword [rbp]
 12753 000088F8 41BA04000000            	mov r10, 0 + 4
 12754 000088FE 4C8B4518                	mov r8, COUNT
 12755 00008902 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12756 00008907 4C8D4DF8                	lea r9, [rbp - 8]
 12757                                  .L_tc_recycle_frame_loop_006d:
 12758 0000890B 4983FA00                	cmp r10, 0
 12759 0000890F 7413                    	je .L_tc_recycle_frame_done_006d
 12760 00008911 4D8B19                  	mov r11, qword [r9]
 12761 00008914 4D8918                  	mov qword [r8], r11
 12762 00008917 49FFCA                  	dec r10
 12763 0000891A 4983E808                	sub r8, 8
 12764 0000891E 4983E908                	sub r9, 8
 12765 00008922 EBE7                    	jmp .L_tc_recycle_frame_loop_006d
 12766                                  .L_tc_recycle_frame_done_006d:
 12767 00008924 498D6008                	lea rsp, [r8 + 8]
 12768 00008928 5D                      	pop rbp
 12769 00008929 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12770                                  .L_if_end_0039:
 12771                                  .L_if_end_003a:
 12772                                  .L_if_end_003b:
 12773 0000892C E9E9020000              	jmp .L_if_end_0040
 12774                                  .L_if_else_0040:
 12775                                  	; preparing a non-tail-call
 12776 00008931 488B4520                	mov rax, PARAM(0)	; param a
 12777 00008935 50                      	push rax
 12778 00008936 6A01                    	push 1	; arg count
 12779 00008938 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12780 00008940 803805                  	cmp byte [rax], T_undefined
 12781 00008943 0F84ACC40000            	je L_error_fvar_undefined
 12782 00008949 803804                  	cmp byte [rax], T_closure
 12783 0000894C 0F8527C50000            	jne L_error_non_closure
 12784 00008952 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12785 00008955 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12786 00008958 483D[02000000]          	cmp rax, sob_boolean_false
 12787 0000895E 0F8464020000            	je .L_if_else_003f
 12788                                  	; preparing a non-tail-call
 12789 00008964 488B4528                	mov rax, PARAM(1)	; param b
 12790 00008968 50                      	push rax
 12791 00008969 6A01                    	push 1	; arg count
 12792 0000896B 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12793 00008973 803805                  	cmp byte [rax], T_undefined
 12794 00008976 0F8479C40000            	je L_error_fvar_undefined
 12795 0000897C 803804                  	cmp byte [rax], T_closure
 12796 0000897F 0F85F4C40000            	jne L_error_non_closure
 12797 00008985 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12798 00008988 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12799 0000898B 483D[02000000]          	cmp rax, sob_boolean_false
 12800 00008991 0F848B000000            	je .L_if_else_003e
 12801                                  	; Initiating tail-call optimization
 12802                                  	; preparing a non-tail-call
 12803 00008997 488B4528                	mov rax, PARAM(1)	; param b
 12804 0000899B 50                      	push rax
 12805 0000899C 6A01                    	push 1	; arg count
 12806 0000899E 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12807 000089A6 803805                  	cmp byte [rax], T_undefined
 12808 000089A9 0F8446C40000            	je L_error_fvar_undefined
 12809 000089AF 803804                  	cmp byte [rax], T_closure
 12810 000089B2 0F85C1C40000            	jne L_error_non_closure
 12811 000089B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12812 000089BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12813 000089BE 50                      	push rax
 12814 000089BF 488B4520                	mov rax, PARAM(0)	; param a
 12815 000089C3 50                      	push rax
 12816 000089C4 6A02                    	push 2	; Number of arguments
 12817 000089C6 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12818 000089CE 803805                  	cmp byte [rax], T_undefined
 12819 000089D1 0F841EC40000            	je L_error_fvar_undefined
 12820 000089D7 803804                  	cmp byte [rax], T_closure
 12821 000089DA 0F8599C40000            	jne L_error_non_closure
 12822 000089E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12823                                  
 12824                                  	; Reclaiming the current stack frame
 12825 000089E3 FF7508                  	push qword [rbp + 8]
 12826 000089E6 FF7500                  	push qword [rbp]
 12827 000089E9 41BA06000000            	mov r10, 2 + 4
 12828 000089EF 4C8B4518                	mov r8, COUNT
 12829 000089F3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12830 000089F8 4C8D4DF8                	lea r9, [rbp - 8]
 12831                                  .L_tc_recycle_frame_loop_006e:
 12832 000089FC 4983FA00                	cmp r10, 0
 12833 00008A00 7413                    	je .L_tc_recycle_frame_done_006e
 12834 00008A02 4D8B19                  	mov r11, qword [r9]
 12835 00008A05 4D8918                  	mov qword [r8], r11
 12836 00008A08 49FFCA                  	dec r10
 12837 00008A0B 4983E808                	sub r8, 8
 12838 00008A0F 4983E908                	sub r9, 8
 12839 00008A13 EBE7                    	jmp .L_tc_recycle_frame_loop_006e
 12840                                  .L_tc_recycle_frame_done_006e:
 12841 00008A15 498D6008                	lea rsp, [r8 + 8]
 12842 00008A19 5D                      	pop rbp
 12843 00008A1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12844 00008A1D E9A4010000              	jmp .L_if_end_003e
 12845                                  .L_if_else_003e:
 12846                                  	; preparing a non-tail-call
 12847 00008A22 488B4528                	mov rax, PARAM(1)	; param b
 12848 00008A26 50                      	push rax
 12849 00008A27 6A01                    	push 1	; arg count
 12850 00008A29 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12851 00008A31 803805                  	cmp byte [rax], T_undefined
 12852 00008A34 0F84BBC30000            	je L_error_fvar_undefined
 12853 00008A3A 803804                  	cmp byte [rax], T_closure
 12854 00008A3D 0F8536C40000            	jne L_error_non_closure
 12855 00008A43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12856 00008A46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12857 00008A49 483D[02000000]          	cmp rax, sob_boolean_false
 12858 00008A4F 0F848B000000            	je .L_if_else_003d
 12859                                  	; Initiating tail-call optimization
 12860                                  	; preparing a non-tail-call
 12861 00008A55 488B4528                	mov rax, PARAM(1)	; param b
 12862 00008A59 50                      	push rax
 12863 00008A5A 6A01                    	push 1	; arg count
 12864 00008A5C 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12865 00008A64 803805                  	cmp byte [rax], T_undefined
 12866 00008A67 0F8488C30000            	je L_error_fvar_undefined
 12867 00008A6D 803804                  	cmp byte [rax], T_closure
 12868 00008A70 0F8503C40000            	jne L_error_non_closure
 12869 00008A76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12870 00008A79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12871 00008A7C 50                      	push rax
 12872 00008A7D 488B4520                	mov rax, PARAM(0)	; param a
 12873 00008A81 50                      	push rax
 12874 00008A82 6A02                    	push 2	; Number of arguments
 12875 00008A84 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12876 00008A8C 803805                  	cmp byte [rax], T_undefined
 12877 00008A8F 0F8460C30000            	je L_error_fvar_undefined
 12878 00008A95 803804                  	cmp byte [rax], T_closure
 12879 00008A98 0F85DBC30000            	jne L_error_non_closure
 12880 00008A9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12881                                  
 12882                                  	; Reclaiming the current stack frame
 12883 00008AA1 FF7508                  	push qword [rbp + 8]
 12884 00008AA4 FF7500                  	push qword [rbp]
 12885 00008AA7 41BA06000000            	mov r10, 2 + 4
 12886 00008AAD 4C8B4518                	mov r8, COUNT
 12887 00008AB1 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12888 00008AB6 4C8D4DF8                	lea r9, [rbp - 8]
 12889                                  .L_tc_recycle_frame_loop_006f:
 12890 00008ABA 4983FA00                	cmp r10, 0
 12891 00008ABE 7413                    	je .L_tc_recycle_frame_done_006f
 12892 00008AC0 4D8B19                  	mov r11, qword [r9]
 12893 00008AC3 4D8918                  	mov qword [r8], r11
 12894 00008AC6 49FFCA                  	dec r10
 12895 00008AC9 4983E808                	sub r8, 8
 12896 00008ACD 4983E908                	sub r9, 8
 12897 00008AD1 EBE7                    	jmp .L_tc_recycle_frame_loop_006f
 12898                                  .L_tc_recycle_frame_done_006f:
 12899 00008AD3 498D6008                	lea rsp, [r8 + 8]
 12900 00008AD7 5D                      	pop rbp
 12901 00008AD8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12902 00008ADB E9E6000000              	jmp .L_if_end_003d
 12903                                  .L_if_else_003d:
 12904                                  	; preparing a non-tail-call
 12905 00008AE0 488B4528                	mov rax, PARAM(1)	; param b
 12906 00008AE4 50                      	push rax
 12907 00008AE5 6A01                    	push 1	; arg count
 12908 00008AE7 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12909 00008AEF 803805                  	cmp byte [rax], T_undefined
 12910 00008AF2 0F84FDC20000            	je L_error_fvar_undefined
 12911 00008AF8 803804                  	cmp byte [rax], T_closure
 12912 00008AFB 0F8578C30000            	jne L_error_non_closure
 12913 00008B01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12914 00008B04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12915 00008B07 483D[02000000]          	cmp rax, sob_boolean_false
 12916 00008B0D 7465                    	je .L_if_else_003c
 12917                                  	; Initiating tail-call optimization
 12918 00008B0F 488B4528                	mov rax, PARAM(1)	; param b
 12919 00008B13 50                      	push rax
 12920 00008B14 488B4520                	mov rax, PARAM(0)	; param a
 12921 00008B18 50                      	push rax
 12922 00008B19 6A02                    	push 2	; Number of arguments
 12923 00008B1B 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12924 00008B23 803805                  	cmp byte [rax], T_undefined
 12925 00008B26 0F84C9C20000            	je L_error_fvar_undefined
 12926 00008B2C 803804                  	cmp byte [rax], T_closure
 12927 00008B2F 0F8544C30000            	jne L_error_non_closure
 12928 00008B35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12929                                  
 12930                                  	; Reclaiming the current stack frame
 12931 00008B38 FF7508                  	push qword [rbp + 8]
 12932 00008B3B FF7500                  	push qword [rbp]
 12933 00008B3E 41BA06000000            	mov r10, 2 + 4
 12934 00008B44 4C8B4518                	mov r8, COUNT
 12935 00008B48 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12936 00008B4D 4C8D4DF8                	lea r9, [rbp - 8]
 12937                                  .L_tc_recycle_frame_loop_0070:
 12938 00008B51 4983FA00                	cmp r10, 0
 12939 00008B55 7413                    	je .L_tc_recycle_frame_done_0070
 12940 00008B57 4D8B19                  	mov r11, qword [r9]
 12941 00008B5A 4D8918                  	mov qword [r8], r11
 12942 00008B5D 49FFCA                  	dec r10
 12943 00008B60 4983E808                	sub r8, 8
 12944 00008B64 4983E908                	sub r9, 8
 12945 00008B68 EBE7                    	jmp .L_tc_recycle_frame_loop_0070
 12946                                  .L_tc_recycle_frame_done_0070:
 12947 00008B6A 498D6008                	lea rsp, [r8 + 8]
 12948 00008B6E 5D                      	pop rbp
 12949 00008B6F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12950 00008B72 EB52                    	jmp .L_if_end_003c
 12951                                  .L_if_else_003c:
 12952                                  	; Initiating tail-call optimization
 12953 00008B74 6A00                    	push 0	; Number of arguments
 12954 00008B76 488B4510                	mov rax, ENV
 12955 00008B7A 488B00                  	mov rax, qword [rax + 8 * 0]
 12956 00008B7D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12957 00008B80 803804                  	cmp byte [rax], T_closure
 12958 00008B83 0F85F0C20000            	jne L_error_non_closure
 12959 00008B89 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12960                                  
 12961                                  	; Reclaiming the current stack frame
 12962 00008B8C FF7508                  	push qword [rbp + 8]
 12963 00008B8F FF7500                  	push qword [rbp]
 12964 00008B92 41BA04000000            	mov r10, 0 + 4
 12965 00008B98 4C8B4518                	mov r8, COUNT
 12966 00008B9C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12967 00008BA1 4C8D4DF8                	lea r9, [rbp - 8]
 12968                                  .L_tc_recycle_frame_loop_0071:
 12969 00008BA5 4983FA00                	cmp r10, 0
 12970 00008BA9 7413                    	je .L_tc_recycle_frame_done_0071
 12971 00008BAB 4D8B19                  	mov r11, qword [r9]
 12972 00008BAE 4D8918                  	mov qword [r8], r11
 12973 00008BB1 49FFCA                  	dec r10
 12974 00008BB4 4983E808                	sub r8, 8
 12975 00008BB8 4983E908                	sub r9, 8
 12976 00008BBC EBE7                    	jmp .L_tc_recycle_frame_loop_0071
 12977                                  .L_tc_recycle_frame_done_0071:
 12978 00008BBE 498D6008                	lea rsp, [r8 + 8]
 12979 00008BC2 5D                      	pop rbp
 12980 00008BC3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12981                                  .L_if_end_003c:
 12982                                  .L_if_end_003d:
 12983                                  .L_if_end_003e:
 12984 00008BC6 EB52                    	jmp .L_if_end_003f
 12985                                  .L_if_else_003f:
 12986                                  	; Initiating tail-call optimization
 12987 00008BC8 6A00                    	push 0	; Number of arguments
 12988 00008BCA 488B4510                	mov rax, ENV
 12989 00008BCE 488B00                  	mov rax, qword [rax + 8 * 0]
 12990 00008BD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12991 00008BD4 803804                  	cmp byte [rax], T_closure
 12992 00008BD7 0F859CC20000            	jne L_error_non_closure
 12993 00008BDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12994                                  
 12995                                  	; Reclaiming the current stack frame
 12996 00008BE0 FF7508                  	push qword [rbp + 8]
 12997 00008BE3 FF7500                  	push qword [rbp]
 12998 00008BE6 41BA04000000            	mov r10, 0 + 4
 12999 00008BEC 4C8B4518                	mov r8, COUNT
 13000 00008BF0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13001 00008BF5 4C8D4DF8                	lea r9, [rbp - 8]
 13002                                  .L_tc_recycle_frame_loop_0072:
 13003 00008BF9 4983FA00                	cmp r10, 0
 13004 00008BFD 7413                    	je .L_tc_recycle_frame_done_0072
 13005 00008BFF 4D8B19                  	mov r11, qword [r9]
 13006 00008C02 4D8918                  	mov qword [r8], r11
 13007 00008C05 49FFCA                  	dec r10
 13008 00008C08 4983E808                	sub r8, 8
 13009 00008C0C 4983E908                	sub r9, 8
 13010 00008C10 EBE7                    	jmp .L_tc_recycle_frame_loop_0072
 13011                                  .L_tc_recycle_frame_done_0072:
 13012 00008C12 498D6008                	lea rsp, [r8 + 8]
 13013 00008C16 5D                      	pop rbp
 13014 00008C17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13015                                  .L_if_end_003f:
 13016                                  .L_if_end_0040:
 13017                                  .L_if_end_0041:
 13018 00008C1A C9                      	leave
 13019 00008C1B C22000                  	ret AND_KILL_FRAME(2)
 13020                                  .L_lambda_simple_end_0043:	; new closure is in rax
 13021 00008C1E 50                      	push rax
 13022 00008C1F 6A01                    	push 1	; Number of arguments
 13023 00008C21 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13024 00008C26 E8F7C20000              	call malloc
 13025 00008C2B 50                      	push rax
 13026 00008C2C BF08000000              	mov rdi, 8 * 1	; new rib
 13027 00008C31 E8ECC20000              	call malloc
 13028 00008C36 50                      	push rax
 13029 00008C37 BF10000000              	mov rdi, 8 * 2	; extended env
 13030 00008C3C E8E1C20000              	call malloc
 13031 00008C41 488B7D10                	mov rdi, ENV
 13032 00008C45 BE00000000              	mov rsi, 0
 13033 00008C4A BA01000000              	mov rdx, 1
 13034                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 13035 00008C4F 4883FE01                	cmp rsi, 1
 13036 00008C53 7410                    	je .L_lambda_simple_env_end_0044
 13037 00008C55 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13038 00008C59 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13039 00008C5D 48FFC6                  	inc rsi
 13040 00008C60 48FFC2                  	inc rdx
 13041 00008C63 EBEA                    	jmp .L_lambda_simple_env_loop_0044
 13042                                  .L_lambda_simple_env_end_0044:
 13043 00008C65 5B                      	pop rbx
 13044 00008C66 BE00000000              	mov rsi, 0
 13045                                  .L_lambda_simple_params_loop_0044:	; copy params
 13046 00008C6B 4883FE01                	cmp rsi, 1
 13047 00008C6F 740E                    	je .L_lambda_simple_params_end_0044
 13048 00008C71 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13049 00008C76 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13050 00008C7A 48FFC6                  	inc rsi
 13051 00008C7D EBEC                    	jmp .L_lambda_simple_params_loop_0044
 13052                                  .L_lambda_simple_params_end_0044:
 13053 00008C7F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13054 00008C82 4889C3                  	mov rbx, rax
 13055 00008C85 58                      	pop rax
 13056 00008C86 C60004                  	mov byte [rax], T_closure
 13057 00008C89 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13058 00008C8D 48C74009[9A8C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 13059 00008C95 E9AD030000              	jmp .L_lambda_simple_end_0044
 13060                                  .L_lambda_simple_code_0044:	; lambda-simple body
 13061 00008C9A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13062 00008CA0 740B                    	je .L_lambda_simple_arity_check_ok_0044
 13063 00008CA2 FF742410                	push qword [rsp + 8 * 2]
 13064 00008CA6 6A01                    	push 1
 13065 00008CA8 E92EC20000              	jmp L_error_incorrect_arity_simple
 13066                                  .L_lambda_simple_arity_check_ok_0044:
 13067 00008CAD C8000000                	enter 0, 0
 13068 00008CB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13069 00008CB6 E867C20000              	call malloc
 13070 00008CBB 50                      	push rax
 13071 00008CBC BF08000000              	mov rdi, 8 * 1	; new rib
 13072 00008CC1 E85CC20000              	call malloc
 13073 00008CC6 50                      	push rax
 13074 00008CC7 BF18000000              	mov rdi, 8 * 3	; extended env
 13075 00008CCC E851C20000              	call malloc
 13076 00008CD1 488B7D10                	mov rdi, ENV
 13077 00008CD5 BE00000000              	mov rsi, 0
 13078 00008CDA BA01000000              	mov rdx, 1
 13079                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13080 00008CDF 4883FE02                	cmp rsi, 2
 13081 00008CE3 7410                    	je .L_lambda_opt_env_end_000d
 13082 00008CE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13083 00008CE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13084 00008CED 48FFC6                  	inc rsi
 13085 00008CF0 48FFC2                  	inc rdx
 13086 00008CF3 EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13087                                  .L_lambda_opt_env_end_000d:
 13088 00008CF5 5B                      	pop rbx
 13089 00008CF6 BE00000000              	mov rsi, 0
 13090                                  .L_lambda_opt_params_loop_000d:	; copy params
 13091 00008CFB 4883FE01                	cmp rsi, 1
 13092 00008CFF 740E                    	je .L_lambda_opt_params_end_000d
 13093 00008D01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13094 00008D06 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13095 00008D0A 48FFC6                  	inc rsi
 13096 00008D0D EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13097                                  .L_lambda_opt_params_end_000d:
 13098 00008D0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13099 00008D12 4889C3                  	mov rbx, rax
 13100 00008D15 58                      	pop rax
 13101 00008D16 C60004                  	mov byte [rax], T_closure
 13102 00008D19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13103 00008D1D 48C74009[2A8D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13104 00008D25 E919030000              	jmp .L_lambda_opt_end_000d
 13105                                  .L_lambda_opt_code_000d:
 13106 00008D2A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 13107 00008D2F 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 13108 00008D33 7407                    	je .L_lambda_opt_arity_check_exact_000d	; Jump if arity matches
 13109 00008D35 7F4C                    	jg .L_lambda_opt_arity_check_more_000d	; Jump if more arguments passed
 13110 00008D37 E9B3C10000              	jmp L_error_incorrect_arity_opt
 13111                                  .L_lambda_opt_arity_check_exact_000d:
 13112 00008D3C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 13113 00008D3F 4983C603                	add r14, 3 ; add 3 first stack values
 13114 00008D43 41BF00000000            	mov r15, 0 ; r15 = index
 13115 00008D49 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 13116 00008D4D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 13117 00008D55 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13118                                  .L_lambda_opt_stack_shrink_loop_000d:
 13119 00008D57 4983FE00                	cmp r14, 0
 13120 00008D5B 7E11                    	jle .L_make_lambda_opt_exact_finish_000d
 13121 00008D5D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 13122 00008D62 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 13123 00008D66 49FFCE                  	dec r14 ; next loop value
 13124 00008D69 49FFC7                  	inc r15 ; update i
 13125 00008D6C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13126                                  .L_make_lambda_opt_exact_finish_000d:
 13127 00008D6E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 13128 00008D76 49FFC2                  	inc r10
 13129 00008D79 4C89542410              	mov qword [rsp + 8 * 2], r10
 13130 00008D7E E99E000000              	jmp .L_lambda_opt_stack_adjusted_000d
 13131                                  .L_lambda_opt_arity_check_more_000d:
 13132 00008D83 4D89D6                  	mov r14, r10 ; r14 = num args
 13133 00008D86 4D89D7                  	mov r15, r10 ; r15 = num args
 13134 00008D89 41B901000000            	mov r9, 1; r9 = number of params 
 13135 00008D8F 4D29CE                  	sub r14, r9 ; r14 = extra args
 13136 00008D92 4D01F1                  	add r9, r14 ; r9 = num args
 13137 00008D95 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 13137 00008D97 [0100000000000000] 
 13138 00008D9F EB00                    	jmp .L_make_lambda_opt_arg_list_000d
 13139                                  .L_make_lambda_opt_arg_list_000d:
 13140 00008DA1 4983FE00                	cmp r14, 0
 13141 00008DA5 7E25                    	jle .L_make_lambda_opt_stack_fixed_000d
 13142 00008DA7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 13143 00008DAC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 13144 00008DB1 E86CC10000              	call malloc                         ; Allocate memory, result in rax
 13145 00008DB6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 13146 00008DB9 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 13147 00008DBD 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 13148 00008DC1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 13149 00008DC4 49FFC9                  	dec r9                              ; args index minus 1
 13150 00008DC7 49FFCE                  	dec r14                             ; next iteration
 13151 00008DCA EBD5                    	jmp .L_make_lambda_opt_arg_list_000d
 13152                                  .L_make_lambda_opt_stack_fixed_000d:
 13153 00008DCC 4D89FE                  	mov r14, r15 ; r14 = num args
 13154 00008DCF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 13155 00008DD2 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 13156 00008DD6 41BA01000000            	mov r10, 1; r10 = num of params
 13157 00008DDC 4D29D6                  	sub r14, r10 ; r14 = extra args
 13158 00008DDF 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 13159 00008DE2 49FFCE                  	dec r14 ; how much we need to change stack wise?
 13160 00008DE5 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 13161 00008DEA EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000d
 13162                                  .L_lambda_opt_stack_shrink_loop_more_000d:
 13163 00008DEC 4983F800                	cmp r8, 0
 13164 00008DF0 7E15                    	jle .L_make_lambda_opt_more_finish_000d
 13165 00008DF2 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 13166 00008DF6 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 13167 00008DFA 4D8D26                  	lea r12, [r14]
 13168 00008DFD 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 13169 00008E02 49FFC8                  	dec r8 ; next iteration
 13170 00008E05 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000d
 13171                                  .L_make_lambda_opt_more_finish_000d:
 13172 00008E07 4D89F8                  	mov r8, r15 ; num of args
 13173 00008E0A 41BA01000000            	mov r10, 1
 13174 00008E10 4D29D0                  	sub r8, r10 ; num of new args
 13175 00008E13 49FFC0                  	inc r8
 13176 00008E16 4C89442420              	mov qword [rsp + 8 * 4], r8
 13177 00008E1B 4883C410                	add rsp, 8 * 2  ; 
 13178 00008E1F EB00                    	jmp .L_lambda_opt_stack_adjusted_000d
 13179                                  .L_lambda_opt_stack_adjusted_000d:
 13180 00008E21 C8000000                	enter 0, 0
 13181                                  	; preparing a non-tail-call
 13182 00008E25 488B4528                	mov rax, PARAM(1)	; param s
 13183 00008E29 50                      	push rax
 13184 00008E2A 6A01                    	push 1	; arg count
 13185 00008E2C 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13186 00008E34 803805                  	cmp byte [rax], T_undefined
 13187 00008E37 0F84B8BF0000            	je L_error_fvar_undefined
 13188 00008E3D 803804                  	cmp byte [rax], T_closure
 13189 00008E40 0F8533C00000            	jne L_error_non_closure
 13190 00008E46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13191 00008E49 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13192 00008E4C 483D[02000000]          	cmp rax, sob_boolean_false
 13193 00008E52 7467                    	je .L_if_else_0042
 13194                                  	; Initiating tail-call optimization
 13195 00008E54 488B4520                	mov rax, PARAM(0)	; param a
 13196 00008E58 50                      	push rax
 13197 00008E59 48B8-                   	mov rax, L_constants + 2270
 13197 00008E5B [DE08000000000000] 
 13198 00008E63 50                      	push rax
 13199 00008E64 6A02                    	push 2	; Number of arguments
 13200 00008E66 488B4510                	mov rax, ENV
 13201 00008E6A 488B00                  	mov rax, qword [rax + 8 * 0]
 13202 00008E6D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13203 00008E70 803804                  	cmp byte [rax], T_closure
 13204 00008E73 0F8500C00000            	jne L_error_non_closure
 13205 00008E79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13206                                  
 13207                                  	; Reclaiming the current stack frame
 13208 00008E7C FF7508                  	push qword [rbp + 8]
 13209 00008E7F FF7500                  	push qword [rbp]
 13210 00008E82 41BA06000000            	mov r10, 2 + 4
 13211 00008E88 4C8B4518                	mov r8, COUNT
 13212 00008E8C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13213 00008E91 4C8D4DF8                	lea r9, [rbp - 8]
 13214                                  .L_tc_recycle_frame_loop_0073:
 13215 00008E95 4983FA00                	cmp r10, 0
 13216 00008E99 7413                    	je .L_tc_recycle_frame_done_0073
 13217 00008E9B 4D8B19                  	mov r11, qword [r9]
 13218 00008E9E 4D8918                  	mov qword [r8], r11
 13219 00008EA1 49FFCA                  	dec r10
 13220 00008EA4 4983E808                	sub r8, 8
 13221 00008EA8 4983E908                	sub r9, 8
 13222 00008EAC EBE7                    	jmp .L_tc_recycle_frame_loop_0073
 13223                                  .L_tc_recycle_frame_done_0073:
 13224 00008EAE 498D6008                	lea rsp, [r8 + 8]
 13225 00008EB2 5D                      	pop rbp
 13226 00008EB3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13227 00008EB6 E984010000              	jmp .L_if_end_0042
 13228                                  .L_if_else_0042:
 13229                                  	; Initiating tail-call optimization
 13230                                  	; preparing a non-tail-call
 13231 00008EBB 488B4528                	mov rax, PARAM(1)	; param s
 13232 00008EBF 50                      	push rax
 13233 00008EC0 48B8-                   	mov rax, L_constants + 2270
 13233 00008EC2 [DE08000000000000] 
 13234 00008ECA 50                      	push rax
 13235 00008ECB 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13236 00008ED3 803805                  	cmp byte [rax], T_undefined
 13237 00008ED6 0F8419BF0000            	je L_error_fvar_undefined
 13238 00008EDC 50                      	push rax
 13239 00008EDD 6A03                    	push 3	; arg count
 13240 00008EDF 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13241 00008EE7 803805                  	cmp byte [rax], T_undefined
 13242 00008EEA 0F8405BF0000            	je L_error_fvar_undefined
 13243 00008EF0 803804                  	cmp byte [rax], T_closure
 13244 00008EF3 0F8580BF0000            	jne L_error_non_closure
 13245 00008EF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13246 00008EFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13247 00008EFF 50                      	push rax
 13248 00008F00 6A01                    	push 1	; Number of arguments
 13249 00008F02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13250 00008F07 E816C00000              	call malloc
 13251 00008F0C 50                      	push rax
 13252 00008F0D BF10000000              	mov rdi, 8 * 2	; new rib
 13253 00008F12 E80BC00000              	call malloc
 13254 00008F17 50                      	push rax
 13255 00008F18 BF20000000              	mov rdi, 8 * 4	; extended env
 13256 00008F1D E800C00000              	call malloc
 13257 00008F22 488B7D10                	mov rdi, ENV
 13258 00008F26 BE00000000              	mov rsi, 0
 13259 00008F2B BA01000000              	mov rdx, 1
 13260                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 13261 00008F30 4883FE03                	cmp rsi, 3
 13262 00008F34 7410                    	je .L_lambda_simple_env_end_0045
 13263 00008F36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13264 00008F3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13265 00008F3E 48FFC6                  	inc rsi
 13266 00008F41 48FFC2                  	inc rdx
 13267 00008F44 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 13268                                  .L_lambda_simple_env_end_0045:
 13269 00008F46 5B                      	pop rbx
 13270 00008F47 BE00000000              	mov rsi, 0
 13271                                  .L_lambda_simple_params_loop_0045:	; copy params
 13272 00008F4C 4883FE02                	cmp rsi, 2
 13273 00008F50 740E                    	je .L_lambda_simple_params_end_0045
 13274 00008F52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13275 00008F57 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13276 00008F5B 48FFC6                  	inc rsi
 13277 00008F5E EBEC                    	jmp .L_lambda_simple_params_loop_0045
 13278                                  .L_lambda_simple_params_end_0045:
 13279 00008F60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13280 00008F63 4889C3                  	mov rbx, rax
 13281 00008F66 58                      	pop rax
 13282 00008F67 C60004                  	mov byte [rax], T_closure
 13283 00008F6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13284 00008F6E 48C74009[7B8F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 13285 00008F76 E97E000000              	jmp .L_lambda_simple_end_0045
 13286                                  .L_lambda_simple_code_0045:	; lambda-simple body
 13287 00008F7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13288 00008F81 740B                    	je .L_lambda_simple_arity_check_ok_0045
 13289 00008F83 FF742410                	push qword [rsp + 8 * 2]
 13290 00008F87 6A01                    	push 1
 13291 00008F89 E94DBF0000              	jmp L_error_incorrect_arity_simple
 13292                                  .L_lambda_simple_arity_check_ok_0045:
 13293 00008F8E C8000000                	enter 0, 0
 13294                                  	; Initiating tail-call optimization
 13295 00008F92 488B4520                	mov rax, PARAM(0)	; param b
 13296 00008F96 50                      	push rax
 13297 00008F97 488B4510                	mov rax, ENV
 13298 00008F9B 488B00                  	mov rax, qword [rax + 8 * 0]
 13299 00008F9E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13300 00008FA1 50                      	push rax
 13301 00008FA2 6A02                    	push 2	; Number of arguments
 13302 00008FA4 488B4510                	mov rax, ENV
 13303 00008FA8 488B4008                	mov rax, qword [rax + 8 * 1]
 13304 00008FAC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13305 00008FAF 803804                  	cmp byte [rax], T_closure
 13306 00008FB2 0F85C1BE0000            	jne L_error_non_closure
 13307 00008FB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13308                                  
 13309                                  	; Reclaiming the current stack frame
 13310 00008FBB FF7508                  	push qword [rbp + 8]
 13311 00008FBE FF7500                  	push qword [rbp]
 13312 00008FC1 41BA06000000            	mov r10, 2 + 4
 13313 00008FC7 4C8B4518                	mov r8, COUNT
 13314 00008FCB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13315 00008FD0 4C8D4DF8                	lea r9, [rbp - 8]
 13316                                  .L_tc_recycle_frame_loop_0074:
 13317 00008FD4 4983FA00                	cmp r10, 0
 13318 00008FD8 7413                    	je .L_tc_recycle_frame_done_0074
 13319 00008FDA 4D8B19                  	mov r11, qword [r9]
 13320 00008FDD 4D8918                  	mov qword [r8], r11
 13321 00008FE0 49FFCA                  	dec r10
 13322 00008FE3 4983E808                	sub r8, 8
 13323 00008FE7 4983E908                	sub r9, 8
 13324 00008FEB EBE7                    	jmp .L_tc_recycle_frame_loop_0074
 13325                                  .L_tc_recycle_frame_done_0074:
 13326 00008FED 498D6008                	lea rsp, [r8 + 8]
 13327 00008FF1 5D                      	pop rbp
 13328 00008FF2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13329 00008FF5 C9                      	leave
 13330 00008FF6 C21800                  	ret AND_KILL_FRAME(1)
 13331                                  .L_lambda_simple_end_0045:	; new closure is in rax
 13332 00008FF9 803804                  	cmp byte [rax], T_closure
 13333 00008FFC 0F8577BE0000            	jne L_error_non_closure
 13334 00009002 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13335                                  
 13336                                  	; Reclaiming the current stack frame
 13337 00009005 FF7508                  	push qword [rbp + 8]
 13338 00009008 FF7500                  	push qword [rbp]
 13339 0000900B 41BA05000000            	mov r10, 1 + 4
 13340 00009011 4C8B4518                	mov r8, COUNT
 13341 00009015 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13342 0000901A 4C8D4DF8                	lea r9, [rbp - 8]
 13343                                  .L_tc_recycle_frame_loop_0075:
 13344 0000901E 4983FA00                	cmp r10, 0
 13345 00009022 7413                    	je .L_tc_recycle_frame_done_0075
 13346 00009024 4D8B19                  	mov r11, qword [r9]
 13347 00009027 4D8918                  	mov qword [r8], r11
 13348 0000902A 49FFCA                  	dec r10
 13349 0000902D 4983E808                	sub r8, 8
 13350 00009031 4983E908                	sub r9, 8
 13351 00009035 EBE7                    	jmp .L_tc_recycle_frame_loop_0075
 13352                                  .L_tc_recycle_frame_done_0075:
 13353 00009037 498D6008                	lea rsp, [r8 + 8]
 13354 0000903B 5D                      	pop rbp
 13355 0000903C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13356                                  .L_if_end_0042:
 13357 0000903F C9                      	leave
 13358 00009040 C22000                  	ret AND_KILL_FRAME(2)
 13359                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13360 00009043 C9                      	leave
 13361 00009044 C21800                  	ret AND_KILL_FRAME(1)
 13362                                  .L_lambda_simple_end_0044:	; new closure is in rax
 13363 00009047 803804                  	cmp byte [rax], T_closure
 13364 0000904A 0F8529BE0000            	jne L_error_non_closure
 13365 00009050 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13366                                  
 13367                                  	; Reclaiming the current stack frame
 13368 00009053 FF7508                  	push qword [rbp + 8]
 13369 00009056 FF7500                  	push qword [rbp]
 13370 00009059 41BA05000000            	mov r10, 1 + 4
 13371 0000905F 4C8B4518                	mov r8, COUNT
 13372 00009063 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13373 00009068 4C8D4DF8                	lea r9, [rbp - 8]
 13374                                  .L_tc_recycle_frame_loop_0076:
 13375 0000906C 4983FA00                	cmp r10, 0
 13376 00009070 7413                    	je .L_tc_recycle_frame_done_0076
 13377 00009072 4D8B19                  	mov r11, qword [r9]
 13378 00009075 4D8918                  	mov qword [r8], r11
 13379 00009078 49FFCA                  	dec r10
 13380 0000907B 4983E808                	sub r8, 8
 13381 0000907F 4983E908                	sub r9, 8
 13382 00009083 EBE7                    	jmp .L_tc_recycle_frame_loop_0076
 13383                                  .L_tc_recycle_frame_done_0076:
 13384 00009085 498D6008                	lea rsp, [r8 + 8]
 13385 00009089 5D                      	pop rbp
 13386 0000908A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13387 0000908D C9                      	leave
 13388 0000908E C21800                  	ret AND_KILL_FRAME(1)
 13389                                  .L_lambda_simple_end_0042:	; new closure is in rax
 13390 00009091 803804                  	cmp byte [rax], T_closure
 13391 00009094 0F85DFBD0000            	jne L_error_non_closure
 13392 0000909A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13393 0000909D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13394 000090A0 48890425[F80D0000]      	mov qword [free_var_3], rax
 13395 000090A8 48B8-                   	mov rax, sob_void
 13395 000090AA [0000000000000000] 
 13396                                  
 13397 000090B2 4889C7                  	mov rdi, rax
 13398 000090B5 E8BDC00000              	call print_sexpr_if_not_void
 13399 000090BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13400 000090BF E85EBE0000              	call malloc
 13401 000090C4 50                      	push rax
 13402 000090C5 BF00000000              	mov rdi, 8 * 0	; new rib
 13403 000090CA E853BE0000              	call malloc
 13404 000090CF 50                      	push rax
 13405 000090D0 BF08000000              	mov rdi, 8 * 1	; extended env
 13406 000090D5 E848BE0000              	call malloc
 13407 000090DA 488B7D10                	mov rdi, ENV
 13408 000090DE BE00000000              	mov rsi, 0
 13409 000090E3 BA01000000              	mov rdx, 1
 13410                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 13411 000090E8 4883FE00                	cmp rsi, 0
 13412 000090EC 7410                    	je .L_lambda_simple_env_end_0046
 13413 000090EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13414 000090F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13415 000090F6 48FFC6                  	inc rsi
 13416 000090F9 48FFC2                  	inc rdx
 13417 000090FC EBEA                    	jmp .L_lambda_simple_env_loop_0046
 13418                                  .L_lambda_simple_env_end_0046:
 13419 000090FE 5B                      	pop rbx
 13420 000090FF BE00000000              	mov rsi, 0
 13421                                  .L_lambda_simple_params_loop_0046:	; copy params
 13422 00009104 4883FE00                	cmp rsi, 0
 13423 00009108 740E                    	je .L_lambda_simple_params_end_0046
 13424 0000910A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13425 0000910F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13426 00009113 48FFC6                  	inc rsi
 13427 00009116 EBEC                    	jmp .L_lambda_simple_params_loop_0046
 13428                                  .L_lambda_simple_params_end_0046:
 13429 00009118 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13430 0000911B 4889C3                  	mov rbx, rax
 13431 0000911E 58                      	pop rax
 13432 0000911F C60004                  	mov byte [rax], T_closure
 13433 00009122 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13434 00009126 48C74009[33910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 13435 0000912E E90D010000              	jmp .L_lambda_simple_end_0046
 13436                                  .L_lambda_simple_code_0046:	; lambda-simple body
 13437 00009133 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13438 00009139 740B                    	je .L_lambda_simple_arity_check_ok_0046
 13439 0000913B FF742410                	push qword [rsp + 8 * 2]
 13440 0000913F 6A01                    	push 1
 13441 00009141 E995BD0000              	jmp L_error_incorrect_arity_simple
 13442                                  .L_lambda_simple_arity_check_ok_0046:
 13443 00009146 C8000000                	enter 0, 0
 13444                                  	; preparing a non-tail-call
 13445 0000914A 488B4520                	mov rax, PARAM(0)	; param n
 13446 0000914E 50                      	push rax
 13447 0000914F 6A01                    	push 1	; arg count
 13448 00009151 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 13449 00009159 803805                  	cmp byte [rax], T_undefined
 13450 0000915C 0F8493BC0000            	je L_error_fvar_undefined
 13451 00009162 803804                  	cmp byte [rax], T_closure
 13452 00009165 0F850EBD0000            	jne L_error_non_closure
 13453 0000916B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13454 0000916E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13455 00009171 483D[02000000]          	cmp rax, sob_boolean_false
 13456 00009177 740F                    	je .L_if_else_0043
 13457 00009179 48B8-                   	mov rax, L_constants + 2270
 13457 0000917B [DE08000000000000] 
 13458 00009183 E9B4000000              	jmp .L_if_end_0043
 13459                                  .L_if_else_0043:
 13460                                  	; Initiating tail-call optimization
 13461                                  	; preparing a non-tail-call
 13462                                  	; preparing a non-tail-call
 13463 00009188 48B8-                   	mov rax, L_constants + 2270
 13463 0000918A [DE08000000000000] 
 13464 00009192 50                      	push rax
 13465 00009193 488B4520                	mov rax, PARAM(0)	; param n
 13466 00009197 50                      	push rax
 13467 00009198 6A02                    	push 2	; arg count
 13468 0000919A 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 13469 000091A2 803805                  	cmp byte [rax], T_undefined
 13470 000091A5 0F844ABC0000            	je L_error_fvar_undefined
 13471 000091AB 803804                  	cmp byte [rax], T_closure
 13472 000091AE 0F85C5BC0000            	jne L_error_non_closure
 13473 000091B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13474 000091B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13475 000091BA 50                      	push rax
 13476 000091BB 6A01                    	push 1	; arg count
 13477 000091BD 488B0425[59130000]      	mov rax, qword [free_var_84]	; free var fact
 13478 000091C5 803805                  	cmp byte [rax], T_undefined
 13479 000091C8 0F8427BC0000            	je L_error_fvar_undefined
 13480 000091CE 803804                  	cmp byte [rax], T_closure
 13481 000091D1 0F85A2BC0000            	jne L_error_non_closure
 13482 000091D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13483 000091DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 13484 000091DD 50                      	push rax
 13485 000091DE 488B4520                	mov rax, PARAM(0)	; param n
 13486 000091E2 50                      	push rax
 13487 000091E3 6A02                    	push 2	; Number of arguments
 13488 000091E5 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13489 000091ED 803805                  	cmp byte [rax], T_undefined
 13490 000091F0 0F84FFBB0000            	je L_error_fvar_undefined
 13491 000091F6 803804                  	cmp byte [rax], T_closure
 13492 000091F9 0F857ABC0000            	jne L_error_non_closure
 13493 000091FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13494                                  
 13495                                  	; Reclaiming the current stack frame
 13496 00009202 FF7508                  	push qword [rbp + 8]
 13497 00009205 FF7500                  	push qword [rbp]
 13498 00009208 41BA06000000            	mov r10, 2 + 4
 13499 0000920E 4C8B4518                	mov r8, COUNT
 13500 00009212 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13501 00009217 4C8D4DF8                	lea r9, [rbp - 8]
 13502                                  .L_tc_recycle_frame_loop_0077:
 13503 0000921B 4983FA00                	cmp r10, 0
 13504 0000921F 7413                    	je .L_tc_recycle_frame_done_0077
 13505 00009221 4D8B19                  	mov r11, qword [r9]
 13506 00009224 4D8918                  	mov qword [r8], r11
 13507 00009227 49FFCA                  	dec r10
 13508 0000922A 4983E808                	sub r8, 8
 13509 0000922E 4983E908                	sub r9, 8
 13510 00009232 EBE7                    	jmp .L_tc_recycle_frame_loop_0077
 13511                                  .L_tc_recycle_frame_done_0077:
 13512 00009234 498D6008                	lea rsp, [r8 + 8]
 13513 00009238 5D                      	pop rbp
 13514 00009239 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13515                                  .L_if_end_0043:
 13516 0000923C C9                      	leave
 13517 0000923D C21800                  	ret AND_KILL_FRAME(1)
 13518                                  .L_lambda_simple_end_0046:	; new closure is in rax
 13519 00009240 48890425[59130000]      	mov qword [free_var_84], rax
 13520 00009248 48B8-                   	mov rax, sob_void
 13520 0000924A [0000000000000000] 
 13521                                  
 13522 00009252 4889C7                  	mov rdi, rax
 13523 00009255 E81DBF0000              	call print_sexpr_if_not_void
 13524 0000925A 48B8-                   	mov rax, L_constants + 0
 13524 0000925C [0000000000000000] 
 13525 00009264 48890425[090E0000]      	mov qword [free_var_4], rax
 13526 0000926C 48B8-                   	mov rax, sob_void
 13526 0000926E [0000000000000000] 
 13527                                  
 13528 00009276 4889C7                  	mov rdi, rax
 13529 00009279 E8F9BE0000              	call print_sexpr_if_not_void
 13530 0000927E 48B8-                   	mov rax, L_constants + 0
 13530 00009280 [0000000000000000] 
 13531 00009288 48890425[1A0E0000]      	mov qword [free_var_5], rax
 13532 00009290 48B8-                   	mov rax, sob_void
 13532 00009292 [0000000000000000] 
 13533                                  
 13534 0000929A 4889C7                  	mov rdi, rax
 13535 0000929D E8D5BE0000              	call print_sexpr_if_not_void
 13536 000092A2 48B8-                   	mov rax, L_constants + 0
 13536 000092A4 [0000000000000000] 
 13537 000092AC 48890425[3C0E0000]      	mov qword [free_var_7], rax
 13538 000092B4 48B8-                   	mov rax, sob_void
 13538 000092B6 [0000000000000000] 
 13539                                  
 13540 000092BE 4889C7                  	mov rdi, rax
 13541 000092C1 E8B1BE0000              	call print_sexpr_if_not_void
 13542 000092C6 48B8-                   	mov rax, L_constants + 0
 13542 000092C8 [0000000000000000] 
 13543 000092D0 48890425[4D0E0000]      	mov qword [free_var_8], rax
 13544 000092D8 48B8-                   	mov rax, sob_void
 13544 000092DA [0000000000000000] 
 13545                                  
 13546 000092E2 4889C7                  	mov rdi, rax
 13547 000092E5 E88DBE0000              	call print_sexpr_if_not_void
 13548 000092EA 48B8-                   	mov rax, L_constants + 0
 13548 000092EC [0000000000000000] 
 13549 000092F4 48890425[2B0E0000]      	mov qword [free_var_6], rax
 13550 000092FC 48B8-                   	mov rax, sob_void
 13550 000092FE [0000000000000000] 
 13551                                  
 13552 00009306 4889C7                  	mov rdi, rax
 13553 00009309 E869BE0000              	call print_sexpr_if_not_void
 13554                                  	; preparing a non-tail-call
 13555 0000930E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13556 00009313 E80ABC0000              	call malloc
 13557 00009318 50                      	push rax
 13558 00009319 BF00000000              	mov rdi, 8 * 0	; new rib
 13559 0000931E E8FFBB0000              	call malloc
 13560 00009323 50                      	push rax
 13561 00009324 BF08000000              	mov rdi, 8 * 1	; extended env
 13562 00009329 E8F4BB0000              	call malloc
 13563 0000932E 488B7D10                	mov rdi, ENV
 13564 00009332 BE00000000              	mov rsi, 0
 13565 00009337 BA01000000              	mov rdx, 1
 13566                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 13567 0000933C 4883FE00                	cmp rsi, 0
 13568 00009340 7410                    	je .L_lambda_simple_env_end_0047
 13569 00009342 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13570 00009346 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13571 0000934A 48FFC6                  	inc rsi
 13572 0000934D 48FFC2                  	inc rdx
 13573 00009350 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 13574                                  .L_lambda_simple_env_end_0047:
 13575 00009352 5B                      	pop rbx
 13576 00009353 BE00000000              	mov rsi, 0
 13577                                  .L_lambda_simple_params_loop_0047:	; copy params
 13578 00009358 4883FE00                	cmp rsi, 0
 13579 0000935C 740E                    	je .L_lambda_simple_params_end_0047
 13580 0000935E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13581 00009363 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13582 00009367 48FFC6                  	inc rsi
 13583 0000936A EBEC                    	jmp .L_lambda_simple_params_loop_0047
 13584                                  .L_lambda_simple_params_end_0047:
 13585 0000936C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13586 0000936F 4889C3                  	mov rbx, rax
 13587 00009372 58                      	pop rax
 13588 00009373 C60004                  	mov byte [rax], T_closure
 13589 00009376 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13590 0000937A 48C74009[87930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 13591 00009382 E98A000000              	jmp .L_lambda_simple_end_0047
 13592                                  .L_lambda_simple_code_0047:	; lambda-simple body
 13593 00009387 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13594 0000938D 740B                    	je .L_lambda_simple_arity_check_ok_0047
 13595 0000938F FF742410                	push qword [rsp + 8 * 2]
 13596 00009393 6A00                    	push 0
 13597 00009395 E941BB0000              	jmp L_error_incorrect_arity_simple
 13598                                  .L_lambda_simple_arity_check_ok_0047:
 13599 0000939A C8000000                	enter 0, 0
 13600                                  	; Initiating tail-call optimization
 13601 0000939E 48B8-                   	mov rax, L_constants + 2408
 13601 000093A0 [6809000000000000] 
 13602 000093A8 50                      	push rax
 13603 000093A9 48B8-                   	mov rax, L_constants + 2399
 13603 000093AB [5F09000000000000] 
 13604 000093B3 50                      	push rax
 13605 000093B4 6A02                    	push 2	; Number of arguments
 13606 000093B6 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 13607 000093BE 803805                  	cmp byte [rax], T_undefined
 13608 000093C1 0F842EBA0000            	je L_error_fvar_undefined
 13609 000093C7 803804                  	cmp byte [rax], T_closure
 13610 000093CA 0F85A9BA0000            	jne L_error_non_closure
 13611 000093D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13612                                  
 13613                                  	; Reclaiming the current stack frame
 13614 000093D3 FF7508                  	push qword [rbp + 8]
 13615 000093D6 FF7500                  	push qword [rbp]
 13616 000093D9 41BA06000000            	mov r10, 2 + 4
 13617 000093DF 4C8B4518                	mov r8, COUNT
 13618 000093E3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13619 000093E8 4C8D4DF8                	lea r9, [rbp - 8]
 13620                                  .L_tc_recycle_frame_loop_0078:
 13621 000093EC 4983FA00                	cmp r10, 0
 13622 000093F0 7413                    	je .L_tc_recycle_frame_done_0078
 13623 000093F2 4D8B19                  	mov r11, qword [r9]
 13624 000093F5 4D8918                  	mov qword [r8], r11
 13625 000093F8 49FFCA                  	dec r10
 13626 000093FB 4983E808                	sub r8, 8
 13627 000093FF 4983E908                	sub r9, 8
 13628 00009403 EBE7                    	jmp .L_tc_recycle_frame_loop_0078
 13629                                  .L_tc_recycle_frame_done_0078:
 13630 00009405 498D6008                	lea rsp, [r8 + 8]
 13631 00009409 5D                      	pop rbp
 13632 0000940A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13633 0000940D C9                      	leave
 13634 0000940E C21000                  	ret AND_KILL_FRAME(0)
 13635                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13636 00009411 50                      	push rax
 13637 00009412 6A01                    	push 1	; arg count
 13638 00009414 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13639 00009419 E804BB0000              	call malloc
 13640 0000941E 50                      	push rax
 13641 0000941F BF00000000              	mov rdi, 8 * 0	; new rib
 13642 00009424 E8F9BA0000              	call malloc
 13643 00009429 50                      	push rax
 13644 0000942A BF08000000              	mov rdi, 8 * 1	; extended env
 13645 0000942F E8EEBA0000              	call malloc
 13646 00009434 488B7D10                	mov rdi, ENV
 13647 00009438 BE00000000              	mov rsi, 0
 13648 0000943D BA01000000              	mov rdx, 1
 13649                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 13650 00009442 4883FE00                	cmp rsi, 0
 13651 00009446 7410                    	je .L_lambda_simple_env_end_0048
 13652 00009448 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13653 0000944C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13654 00009450 48FFC6                  	inc rsi
 13655 00009453 48FFC2                  	inc rdx
 13656 00009456 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 13657                                  .L_lambda_simple_env_end_0048:
 13658 00009458 5B                      	pop rbx
 13659 00009459 BE00000000              	mov rsi, 0
 13660                                  .L_lambda_simple_params_loop_0048:	; copy params
 13661 0000945E 4883FE00                	cmp rsi, 0
 13662 00009462 740E                    	je .L_lambda_simple_params_end_0048
 13663 00009464 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13664 00009469 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13665 0000946D 48FFC6                  	inc rsi
 13666 00009470 EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13667                                  .L_lambda_simple_params_end_0048:
 13668 00009472 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13669 00009475 4889C3                  	mov rbx, rax
 13670 00009478 58                      	pop rax
 13671 00009479 C60004                  	mov byte [rax], T_closure
 13672 0000947C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13673 00009480 48C74009[8D940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13674 00009488 E936190000              	jmp .L_lambda_simple_end_0048
 13675                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13676 0000948D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13677 00009493 740B                    	je .L_lambda_simple_arity_check_ok_0048
 13678 00009495 FF742410                	push qword [rsp + 8 * 2]
 13679 00009499 6A01                    	push 1
 13680 0000949B E93BBA0000              	jmp L_error_incorrect_arity_simple
 13681                                  .L_lambda_simple_arity_check_ok_0048:
 13682 000094A0 C8000000                	enter 0, 0
 13683                                  	; Initiating tail-call optimization
 13684 000094A4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13685 000094A9 E874BA0000              	call malloc
 13686 000094AE 50                      	push rax
 13687 000094AF BF08000000              	mov rdi, 8 * 1	; new rib
 13688 000094B4 E869BA0000              	call malloc
 13689 000094B9 50                      	push rax
 13690 000094BA BF10000000              	mov rdi, 8 * 2	; extended env
 13691 000094BF E85EBA0000              	call malloc
 13692 000094C4 488B7D10                	mov rdi, ENV
 13693 000094C8 BE00000000              	mov rsi, 0
 13694 000094CD BA01000000              	mov rdx, 1
 13695                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13696 000094D2 4883FE01                	cmp rsi, 1
 13697 000094D6 7410                    	je .L_lambda_simple_env_end_0049
 13698 000094D8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13699 000094DC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13700 000094E0 48FFC6                  	inc rsi
 13701 000094E3 48FFC2                  	inc rdx
 13702 000094E6 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13703                                  .L_lambda_simple_env_end_0049:
 13704 000094E8 5B                      	pop rbx
 13705 000094E9 BE00000000              	mov rsi, 0
 13706                                  .L_lambda_simple_params_loop_0049:	; copy params
 13707 000094EE 4883FE01                	cmp rsi, 1
 13708 000094F2 740E                    	je .L_lambda_simple_params_end_0049
 13709 000094F4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13710 000094F9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13711 000094FD 48FFC6                  	inc rsi
 13712 00009500 EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13713                                  .L_lambda_simple_params_end_0049:
 13714 00009502 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13715 00009505 4889C3                  	mov rbx, rax
 13716 00009508 58                      	pop rax
 13717 00009509 C60004                  	mov byte [rax], T_closure
 13718 0000950C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13719 00009510 48C74009[1D950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13720 00009518 E999080000              	jmp .L_lambda_simple_end_0049
 13721                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13722 0000951D 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13723 00009523 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13724 00009525 FF742410                	push qword [rsp + 8 * 2]
 13725 00009529 6A03                    	push 3
 13726 0000952B E9ABB90000              	jmp L_error_incorrect_arity_simple
 13727                                  .L_lambda_simple_arity_check_ok_0049:
 13728 00009530 C8000000                	enter 0, 0
 13729 00009534 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13730 00009539 E8E4B90000              	call malloc
 13731 0000953E 50                      	push rax
 13732 0000953F BF18000000              	mov rdi, 8 * 3	; new rib
 13733 00009544 E8D9B90000              	call malloc
 13734 00009549 50                      	push rax
 13735 0000954A BF18000000              	mov rdi, 8 * 3	; extended env
 13736 0000954F E8CEB90000              	call malloc
 13737 00009554 488B7D10                	mov rdi, ENV
 13738 00009558 BE00000000              	mov rsi, 0
 13739 0000955D BA01000000              	mov rdx, 1
 13740                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13741 00009562 4883FE02                	cmp rsi, 2
 13742 00009566 7410                    	je .L_lambda_simple_env_end_004a
 13743 00009568 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13744 0000956C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13745 00009570 48FFC6                  	inc rsi
 13746 00009573 48FFC2                  	inc rdx
 13747 00009576 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13748                                  .L_lambda_simple_env_end_004a:
 13749 00009578 5B                      	pop rbx
 13750 00009579 BE00000000              	mov rsi, 0
 13751                                  .L_lambda_simple_params_loop_004a:	; copy params
 13752 0000957E 4883FE03                	cmp rsi, 3
 13753 00009582 740E                    	je .L_lambda_simple_params_end_004a
 13754 00009584 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13755 00009589 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13756 0000958D 48FFC6                  	inc rsi
 13757 00009590 EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13758                                  .L_lambda_simple_params_end_004a:
 13759 00009592 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13760 00009595 4889C3                  	mov rbx, rax
 13761 00009598 58                      	pop rax
 13762 00009599 C60004                  	mov byte [rax], T_closure
 13763 0000959C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13764 000095A0 48C74009[AD950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13765 000095A8 E905080000              	jmp .L_lambda_simple_end_004a
 13766                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13767 000095AD 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13768 000095B3 740B                    	je .L_lambda_simple_arity_check_ok_004a
 13769 000095B5 FF742410                	push qword [rsp + 8 * 2]
 13770 000095B9 6A02                    	push 2
 13771 000095BB E91BB90000              	jmp L_error_incorrect_arity_simple
 13772                                  .L_lambda_simple_arity_check_ok_004a:
 13773 000095C0 C8000000                	enter 0, 0
 13774                                  	; preparing a non-tail-call
 13775 000095C4 488B4520                	mov rax, PARAM(0)	; param a
 13776 000095C8 50                      	push rax
 13777 000095C9 6A01                    	push 1	; arg count
 13778 000095CB 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13779 000095D3 803805                  	cmp byte [rax], T_undefined
 13780 000095D6 0F8419B80000            	je L_error_fvar_undefined
 13781 000095DC 803804                  	cmp byte [rax], T_closure
 13782 000095DF 0F8594B80000            	jne L_error_non_closure
 13783 000095E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13784 000095E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13785 000095EB 483D[02000000]          	cmp rax, sob_boolean_false
 13786 000095F1 0F8455020000            	je .L_if_else_004f
 13787                                  	; preparing a non-tail-call
 13788 000095F7 488B4528                	mov rax, PARAM(1)	; param b
 13789 000095FB 50                      	push rax
 13790 000095FC 6A01                    	push 1	; arg count
 13791 000095FE 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13792 00009606 803805                  	cmp byte [rax], T_undefined
 13793 00009609 0F84E6B70000            	je L_error_fvar_undefined
 13794 0000960F 803804                  	cmp byte [rax], T_closure
 13795 00009612 0F8561B80000            	jne L_error_non_closure
 13796 00009618 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13797 0000961B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13798 0000961E 483D[02000000]          	cmp rax, sob_boolean_false
 13799 00009624 7461                    	je .L_if_else_0046
 13800                                  	; Initiating tail-call optimization
 13801 00009626 488B4528                	mov rax, PARAM(1)	; param b
 13802 0000962A 50                      	push rax
 13803 0000962B 488B4520                	mov rax, PARAM(0)	; param a
 13804 0000962F 50                      	push rax
 13805 00009630 6A02                    	push 2	; Number of arguments
 13806 00009632 488B4510                	mov rax, ENV
 13807 00009636 488B00                  	mov rax, qword [rax + 8 * 0]
 13808 00009639 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 13809 0000963C 803804                  	cmp byte [rax], T_closure
 13810 0000963F 0F8534B80000            	jne L_error_non_closure
 13811 00009645 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13812                                  
 13813                                  	; Reclaiming the current stack frame
 13814 00009648 FF7508                  	push qword [rbp + 8]
 13815 0000964B FF7500                  	push qword [rbp]
 13816 0000964E 41BA06000000            	mov r10, 2 + 4
 13817 00009654 4C8B4518                	mov r8, COUNT
 13818 00009658 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13819 0000965D 4C8D4DF8                	lea r9, [rbp - 8]
 13820                                  .L_tc_recycle_frame_loop_0079:
 13821 00009661 4983FA00                	cmp r10, 0
 13822 00009665 7413                    	je .L_tc_recycle_frame_done_0079
 13823 00009667 4D8B19                  	mov r11, qword [r9]
 13824 0000966A 4D8918                  	mov qword [r8], r11
 13825 0000966D 49FFCA                  	dec r10
 13826 00009670 4983E808                	sub r8, 8
 13827 00009674 4983E908                	sub r9, 8
 13828 00009678 EBE7                    	jmp .L_tc_recycle_frame_loop_0079
 13829                                  .L_tc_recycle_frame_done_0079:
 13830 0000967A 498D6008                	lea rsp, [r8 + 8]
 13831 0000967E 5D                      	pop rbp
 13832 0000967F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13833 00009682 E9C0010000              	jmp .L_if_end_0046
 13834                                  .L_if_else_0046:
 13835                                  	; preparing a non-tail-call
 13836 00009687 488B4528                	mov rax, PARAM(1)	; param b
 13837 0000968B 50                      	push rax
 13838 0000968C 6A01                    	push 1	; arg count
 13839 0000968E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13840 00009696 803805                  	cmp byte [rax], T_undefined
 13841 00009699 0F8456B70000            	je L_error_fvar_undefined
 13842 0000969F 803804                  	cmp byte [rax], T_closure
 13843 000096A2 0F85D1B70000            	jne L_error_non_closure
 13844 000096A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13845 000096AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13846 000096AE 483D[02000000]          	cmp rax, sob_boolean_false
 13847 000096B4 0F8485000000            	je .L_if_else_0045
 13848                                  	; Initiating tail-call optimization
 13849 000096BA 488B4528                	mov rax, PARAM(1)	; param b
 13850 000096BE 50                      	push rax
 13851                                  	; preparing a non-tail-call
 13852 000096BF 488B4520                	mov rax, PARAM(0)	; param a
 13853 000096C3 50                      	push rax
 13854 000096C4 6A01                    	push 1	; arg count
 13855 000096C6 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13856 000096CE 803805                  	cmp byte [rax], T_undefined
 13857 000096D1 0F841EB70000            	je L_error_fvar_undefined
 13858 000096D7 803804                  	cmp byte [rax], T_closure
 13859 000096DA 0F8599B70000            	jne L_error_non_closure
 13860 000096E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13861 000096E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13862 000096E6 50                      	push rax
 13863 000096E7 6A02                    	push 2	; Number of arguments
 13864 000096E9 488B4510                	mov rax, ENV
 13865 000096ED 488B00                  	mov rax, qword [rax + 8 * 0]
 13866 000096F0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13867 000096F4 803804                  	cmp byte [rax], T_closure
 13868 000096F7 0F857CB70000            	jne L_error_non_closure
 13869 000096FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 13870                                  
 13871                                  	; Reclaiming the current stack frame
 13872 00009700 FF7508                  	push qword [rbp + 8]
 13873 00009703 FF7500                  	push qword [rbp]
 13874 00009706 41BA06000000            	mov r10, 2 + 4
 13875 0000970C 4C8B4518                	mov r8, COUNT
 13876 00009710 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13877 00009715 4C8D4DF8                	lea r9, [rbp - 8]
 13878                                  .L_tc_recycle_frame_loop_007a:
 13879 00009719 4983FA00                	cmp r10, 0
 13880 0000971D 7413                    	je .L_tc_recycle_frame_done_007a
 13881 0000971F 4D8B19                  	mov r11, qword [r9]
 13882 00009722 4D8918                  	mov qword [r8], r11
 13883 00009725 49FFCA                  	dec r10
 13884 00009728 4983E808                	sub r8, 8
 13885 0000972C 4983E908                	sub r9, 8
 13886 00009730 EBE7                    	jmp .L_tc_recycle_frame_loop_007a
 13887                                  .L_tc_recycle_frame_done_007a:
 13888 00009732 498D6008                	lea rsp, [r8 + 8]
 13889 00009736 5D                      	pop rbp
 13890 00009737 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13891 0000973A E908010000              	jmp .L_if_end_0045
 13892                                  .L_if_else_0045:
 13893                                  	; preparing a non-tail-call
 13894 0000973F 488B4528                	mov rax, PARAM(1)	; param b
 13895 00009743 50                      	push rax
 13896 00009744 6A01                    	push 1	; arg count
 13897 00009746 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13898 0000974E 803805                  	cmp byte [rax], T_undefined
 13899 00009751 0F849EB60000            	je L_error_fvar_undefined
 13900 00009757 803804                  	cmp byte [rax], T_closure
 13901 0000975A 0F8519B70000            	jne L_error_non_closure
 13902 00009760 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13903 00009763 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13904 00009766 483D[02000000]          	cmp rax, sob_boolean_false
 13905 0000976C 0F8482000000            	je .L_if_else_0044
 13906                                  	; Initiating tail-call optimization
 13907 00009772 488B4528                	mov rax, PARAM(1)	; param b
 13908 00009776 50                      	push rax
 13909                                  	; preparing a non-tail-call
 13910 00009777 488B4520                	mov rax, PARAM(0)	; param a
 13911 0000977B 50                      	push rax
 13912 0000977C 6A01                    	push 1	; arg count
 13913 0000977E 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13914 00009786 803805                  	cmp byte [rax], T_undefined
 13915 00009789 0F8466B60000            	je L_error_fvar_undefined
 13916 0000978F 803804                  	cmp byte [rax], T_closure
 13917 00009792 0F85E1B60000            	jne L_error_non_closure
 13918 00009798 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13919 0000979B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13920 0000979E 50                      	push rax
 13921 0000979F 6A02                    	push 2	; Number of arguments
 13922 000097A1 488B4510                	mov rax, ENV
 13923 000097A5 488B00                  	mov rax, qword [rax + 8 * 0]
 13924 000097A8 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13925 000097AC 803804                  	cmp byte [rax], T_closure
 13926 000097AF 0F85C4B60000            	jne L_error_non_closure
 13927 000097B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13928                                  
 13929                                  	; Reclaiming the current stack frame
 13930 000097B8 FF7508                  	push qword [rbp + 8]
 13931 000097BB FF7500                  	push qword [rbp]
 13932 000097BE 41BA06000000            	mov r10, 2 + 4
 13933 000097C4 4C8B4518                	mov r8, COUNT
 13934 000097C8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13935 000097CD 4C8D4DF8                	lea r9, [rbp - 8]
 13936                                  .L_tc_recycle_frame_loop_007b:
 13937 000097D1 4983FA00                	cmp r10, 0
 13938 000097D5 7413                    	je .L_tc_recycle_frame_done_007b
 13939 000097D7 4D8B19                  	mov r11, qword [r9]
 13940 000097DA 4D8918                  	mov qword [r8], r11
 13941 000097DD 49FFCA                  	dec r10
 13942 000097E0 4983E808                	sub r8, 8
 13943 000097E4 4983E908                	sub r9, 8
 13944 000097E8 EBE7                    	jmp .L_tc_recycle_frame_loop_007b
 13945                                  .L_tc_recycle_frame_done_007b:
 13946 000097EA 498D6008                	lea rsp, [r8 + 8]
 13947 000097EE 5D                      	pop rbp
 13948 000097EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13949 000097F2 EB53                    	jmp .L_if_end_0044
 13950                                  .L_if_else_0044:
 13951                                  	; Initiating tail-call optimization
 13952 000097F4 6A00                    	push 0	; Number of arguments
 13953 000097F6 488B4510                	mov rax, ENV
 13954 000097FA 488B4008                	mov rax, qword [rax + 8 * 1]
 13955 000097FE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13956 00009801 803804                  	cmp byte [rax], T_closure
 13957 00009804 0F856FB60000            	jne L_error_non_closure
 13958 0000980A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13959                                  
 13960                                  	; Reclaiming the current stack frame
 13961 0000980D FF7508                  	push qword [rbp + 8]
 13962 00009810 FF7500                  	push qword [rbp]
 13963 00009813 41BA04000000            	mov r10, 0 + 4
 13964 00009819 4C8B4518                	mov r8, COUNT
 13965 0000981D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13966 00009822 4C8D4DF8                	lea r9, [rbp - 8]
 13967                                  .L_tc_recycle_frame_loop_007c:
 13968 00009826 4983FA00                	cmp r10, 0
 13969 0000982A 7413                    	je .L_tc_recycle_frame_done_007c
 13970 0000982C 4D8B19                  	mov r11, qword [r9]
 13971 0000982F 4D8918                  	mov qword [r8], r11
 13972 00009832 49FFCA                  	dec r10
 13973 00009835 4983E808                	sub r8, 8
 13974 00009839 4983E908                	sub r9, 8
 13975 0000983D EBE7                    	jmp .L_tc_recycle_frame_loop_007c
 13976                                  .L_tc_recycle_frame_done_007c:
 13977 0000983F 498D6008                	lea rsp, [r8 + 8]
 13978 00009843 5D                      	pop rbp
 13979 00009844 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13980                                  .L_if_end_0044:
 13981                                  .L_if_end_0045:
 13982                                  .L_if_end_0046:
 13983 00009847 E962050000              	jmp .L_if_end_004f
 13984                                  .L_if_else_004f:
 13985                                  	; preparing a non-tail-call
 13986 0000984C 488B4520                	mov rax, PARAM(0)	; param a
 13987 00009850 50                      	push rax
 13988 00009851 6A01                    	push 1	; arg count
 13989 00009853 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13990 0000985B 803805                  	cmp byte [rax], T_undefined
 13991 0000985E 0F8491B50000            	je L_error_fvar_undefined
 13992 00009864 803804                  	cmp byte [rax], T_closure
 13993 00009867 0F850CB60000            	jne L_error_non_closure
 13994 0000986D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13995 00009870 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13996 00009873 483D[02000000]          	cmp rax, sob_boolean_false
 13997 00009879 0F8456020000            	je .L_if_else_004e
 13998                                  	; preparing a non-tail-call
 13999 0000987F 488B4528                	mov rax, PARAM(1)	; param b
 14000 00009883 50                      	push rax
 14001 00009884 6A01                    	push 1	; arg count
 14002 00009886 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14003 0000988E 803805                  	cmp byte [rax], T_undefined
 14004 00009891 0F845EB50000            	je L_error_fvar_undefined
 14005 00009897 803804                  	cmp byte [rax], T_closure
 14006 0000989A 0F85D9B50000            	jne L_error_non_closure
 14007 000098A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14008 000098A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14009 000098A6 483D[02000000]          	cmp rax, sob_boolean_false
 14010 000098AC 0F8485000000            	je .L_if_else_0049
 14011                                  	; Initiating tail-call optimization
 14012                                  	; preparing a non-tail-call
 14013 000098B2 488B4528                	mov rax, PARAM(1)	; param b
 14014 000098B6 50                      	push rax
 14015 000098B7 6A01                    	push 1	; arg count
 14016 000098B9 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14017 000098C1 803805                  	cmp byte [rax], T_undefined
 14018 000098C4 0F842BB50000            	je L_error_fvar_undefined
 14019 000098CA 803804                  	cmp byte [rax], T_closure
 14020 000098CD 0F85A6B50000            	jne L_error_non_closure
 14021 000098D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14022 000098D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14023 000098D9 50                      	push rax
 14024 000098DA 488B4520                	mov rax, PARAM(0)	; param a
 14025 000098DE 50                      	push rax
 14026 000098DF 6A02                    	push 2	; Number of arguments
 14027 000098E1 488B4510                	mov rax, ENV
 14028 000098E5 488B00                  	mov rax, qword [rax + 8 * 0]
 14029 000098E8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14030 000098EC 803804                  	cmp byte [rax], T_closure
 14031 000098EF 0F8584B50000            	jne L_error_non_closure
 14032 000098F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14033                                  
 14034                                  	; Reclaiming the current stack frame
 14035 000098F8 FF7508                  	push qword [rbp + 8]
 14036 000098FB FF7500                  	push qword [rbp]
 14037 000098FE 41BA06000000            	mov r10, 2 + 4
 14038 00009904 4C8B4518                	mov r8, COUNT
 14039 00009908 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14040 0000990D 4C8D4DF8                	lea r9, [rbp - 8]
 14041                                  .L_tc_recycle_frame_loop_007d:
 14042 00009911 4983FA00                	cmp r10, 0
 14043 00009915 7413                    	je .L_tc_recycle_frame_done_007d
 14044 00009917 4D8B19                  	mov r11, qword [r9]
 14045 0000991A 4D8918                  	mov qword [r8], r11
 14046 0000991D 49FFCA                  	dec r10
 14047 00009920 4983E808                	sub r8, 8
 14048 00009924 4983E908                	sub r9, 8
 14049 00009928 EBE7                    	jmp .L_tc_recycle_frame_loop_007d
 14050                                  .L_tc_recycle_frame_done_007d:
 14051 0000992A 498D6008                	lea rsp, [r8 + 8]
 14052 0000992E 5D                      	pop rbp
 14053 0000992F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14054 00009932 E999010000              	jmp .L_if_end_0049
 14055                                  .L_if_else_0049:
 14056                                  	; preparing a non-tail-call
 14057 00009937 488B4528                	mov rax, PARAM(1)	; param b
 14058 0000993B 50                      	push rax
 14059 0000993C 6A01                    	push 1	; arg count
 14060 0000993E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14061 00009946 803805                  	cmp byte [rax], T_undefined
 14062 00009949 0F84A6B40000            	je L_error_fvar_undefined
 14063 0000994F 803804                  	cmp byte [rax], T_closure
 14064 00009952 0F8521B50000            	jne L_error_non_closure
 14065 00009958 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14066 0000995B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14067 0000995E 483D[02000000]          	cmp rax, sob_boolean_false
 14068 00009964 7462                    	je .L_if_else_0048
 14069                                  	; Initiating tail-call optimization
 14070 00009966 488B4528                	mov rax, PARAM(1)	; param b
 14071 0000996A 50                      	push rax
 14072 0000996B 488B4520                	mov rax, PARAM(0)	; param a
 14073 0000996F 50                      	push rax
 14074 00009970 6A02                    	push 2	; Number of arguments
 14075 00009972 488B4510                	mov rax, ENV
 14076 00009976 488B00                  	mov rax, qword [rax + 8 * 0]
 14077 00009979 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14078 0000997D 803804                  	cmp byte [rax], T_closure
 14079 00009980 0F85F3B40000            	jne L_error_non_closure
 14080 00009986 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14081                                  
 14082                                  	; Reclaiming the current stack frame
 14083 00009989 FF7508                  	push qword [rbp + 8]
 14084 0000998C FF7500                  	push qword [rbp]
 14085 0000998F 41BA06000000            	mov r10, 2 + 4
 14086 00009995 4C8B4518                	mov r8, COUNT
 14087 00009999 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14088 0000999E 4C8D4DF8                	lea r9, [rbp - 8]
 14089                                  .L_tc_recycle_frame_loop_007e:
 14090 000099A2 4983FA00                	cmp r10, 0
 14091 000099A6 7413                    	je .L_tc_recycle_frame_done_007e
 14092 000099A8 4D8B19                  	mov r11, qword [r9]
 14093 000099AB 4D8918                  	mov qword [r8], r11
 14094 000099AE 49FFCA                  	dec r10
 14095 000099B1 4983E808                	sub r8, 8
 14096 000099B5 4983E908                	sub r9, 8
 14097 000099B9 EBE7                    	jmp .L_tc_recycle_frame_loop_007e
 14098                                  .L_tc_recycle_frame_done_007e:
 14099 000099BB 498D6008                	lea rsp, [r8 + 8]
 14100 000099BF 5D                      	pop rbp
 14101 000099C0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14102 000099C3 E908010000              	jmp .L_if_end_0048
 14103                                  .L_if_else_0048:
 14104                                  	; preparing a non-tail-call
 14105 000099C8 488B4528                	mov rax, PARAM(1)	; param b
 14106 000099CC 50                      	push rax
 14107 000099CD 6A01                    	push 1	; arg count
 14108 000099CF 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14109 000099D7 803805                  	cmp byte [rax], T_undefined
 14110 000099DA 0F8415B40000            	je L_error_fvar_undefined
 14111 000099E0 803804                  	cmp byte [rax], T_closure
 14112 000099E3 0F8590B40000            	jne L_error_non_closure
 14113 000099E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14114 000099EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 14115 000099EF 483D[02000000]          	cmp rax, sob_boolean_false
 14116 000099F5 0F8482000000            	je .L_if_else_0047
 14117                                  	; Initiating tail-call optimization
 14118 000099FB 488B4528                	mov rax, PARAM(1)	; param b
 14119 000099FF 50                      	push rax
 14120                                  	; preparing a non-tail-call
 14121 00009A00 488B4520                	mov rax, PARAM(0)	; param a
 14122 00009A04 50                      	push rax
 14123 00009A05 6A01                    	push 1	; arg count
 14124 00009A07 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14125 00009A0F 803805                  	cmp byte [rax], T_undefined
 14126 00009A12 0F84DDB30000            	je L_error_fvar_undefined
 14127 00009A18 803804                  	cmp byte [rax], T_closure
 14128 00009A1B 0F8558B40000            	jne L_error_non_closure
 14129 00009A21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14130 00009A24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14131 00009A27 50                      	push rax
 14132 00009A28 6A02                    	push 2	; Number of arguments
 14133 00009A2A 488B4510                	mov rax, ENV
 14134 00009A2E 488B00                  	mov rax, qword [rax + 8 * 0]
 14135 00009A31 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14136 00009A35 803804                  	cmp byte [rax], T_closure
 14137 00009A38 0F853BB40000            	jne L_error_non_closure
 14138 00009A3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14139                                  
 14140                                  	; Reclaiming the current stack frame
 14141 00009A41 FF7508                  	push qword [rbp + 8]
 14142 00009A44 FF7500                  	push qword [rbp]
 14143 00009A47 41BA06000000            	mov r10, 2 + 4
 14144 00009A4D 4C8B4518                	mov r8, COUNT
 14145 00009A51 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14146 00009A56 4C8D4DF8                	lea r9, [rbp - 8]
 14147                                  .L_tc_recycle_frame_loop_007f:
 14148 00009A5A 4983FA00                	cmp r10, 0
 14149 00009A5E 7413                    	je .L_tc_recycle_frame_done_007f
 14150 00009A60 4D8B19                  	mov r11, qword [r9]
 14151 00009A63 4D8918                  	mov qword [r8], r11
 14152 00009A66 49FFCA                  	dec r10
 14153 00009A69 4983E808                	sub r8, 8
 14154 00009A6D 4983E908                	sub r9, 8
 14155 00009A71 EBE7                    	jmp .L_tc_recycle_frame_loop_007f
 14156                                  .L_tc_recycle_frame_done_007f:
 14157 00009A73 498D6008                	lea rsp, [r8 + 8]
 14158 00009A77 5D                      	pop rbp
 14159 00009A78 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14160 00009A7B EB53                    	jmp .L_if_end_0047
 14161                                  .L_if_else_0047:
 14162                                  	; Initiating tail-call optimization
 14163 00009A7D 6A00                    	push 0	; Number of arguments
 14164 00009A7F 488B4510                	mov rax, ENV
 14165 00009A83 488B4008                	mov rax, qword [rax + 8 * 1]
 14166 00009A87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14167 00009A8A 803804                  	cmp byte [rax], T_closure
 14168 00009A8D 0F85E6B30000            	jne L_error_non_closure
 14169 00009A93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14170                                  
 14171                                  	; Reclaiming the current stack frame
 14172 00009A96 FF7508                  	push qword [rbp + 8]
 14173 00009A99 FF7500                  	push qword [rbp]
 14174 00009A9C 41BA04000000            	mov r10, 0 + 4
 14175 00009AA2 4C8B4518                	mov r8, COUNT
 14176 00009AA6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14177 00009AAB 4C8D4DF8                	lea r9, [rbp - 8]
 14178                                  .L_tc_recycle_frame_loop_0080:
 14179 00009AAF 4983FA00                	cmp r10, 0
 14180 00009AB3 7413                    	je .L_tc_recycle_frame_done_0080
 14181 00009AB5 4D8B19                  	mov r11, qword [r9]
 14182 00009AB8 4D8918                  	mov qword [r8], r11
 14183 00009ABB 49FFCA                  	dec r10
 14184 00009ABE 4983E808                	sub r8, 8
 14185 00009AC2 4983E908                	sub r9, 8
 14186 00009AC6 EBE7                    	jmp .L_tc_recycle_frame_loop_0080
 14187                                  .L_tc_recycle_frame_done_0080:
 14188 00009AC8 498D6008                	lea rsp, [r8 + 8]
 14189 00009ACC 5D                      	pop rbp
 14190 00009ACD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14191                                  .L_if_end_0047:
 14192                                  .L_if_end_0048:
 14193                                  .L_if_end_0049:
 14194 00009AD0 E9D9020000              	jmp .L_if_end_004e
 14195                                  .L_if_else_004e:
 14196                                  	; preparing a non-tail-call
 14197 00009AD5 488B4520                	mov rax, PARAM(0)	; param a
 14198 00009AD9 50                      	push rax
 14199 00009ADA 6A01                    	push 1	; arg count
 14200 00009ADC 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14201 00009AE4 803805                  	cmp byte [rax], T_undefined
 14202 00009AE7 0F8408B30000            	je L_error_fvar_undefined
 14203 00009AED 803804                  	cmp byte [rax], T_closure
 14204 00009AF0 0F8583B30000            	jne L_error_non_closure
 14205 00009AF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14206 00009AF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14207 00009AFC 483D[02000000]          	cmp rax, sob_boolean_false
 14208 00009B02 0F8453020000            	je .L_if_else_004d
 14209                                  	; preparing a non-tail-call
 14210 00009B08 488B4528                	mov rax, PARAM(1)	; param b
 14211 00009B0C 50                      	push rax
 14212 00009B0D 6A01                    	push 1	; arg count
 14213 00009B0F 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14214 00009B17 803805                  	cmp byte [rax], T_undefined
 14215 00009B1A 0F84D5B20000            	je L_error_fvar_undefined
 14216 00009B20 803804                  	cmp byte [rax], T_closure
 14217 00009B23 0F8550B30000            	jne L_error_non_closure
 14218 00009B29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14219 00009B2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14220 00009B2F 483D[02000000]          	cmp rax, sob_boolean_false
 14221 00009B35 0F8485000000            	je .L_if_else_004c
 14222                                  	; Initiating tail-call optimization
 14223                                  	; preparing a non-tail-call
 14224 00009B3B 488B4528                	mov rax, PARAM(1)	; param b
 14225 00009B3F 50                      	push rax
 14226 00009B40 6A01                    	push 1	; arg count
 14227 00009B42 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14228 00009B4A 803805                  	cmp byte [rax], T_undefined
 14229 00009B4D 0F84A2B20000            	je L_error_fvar_undefined
 14230 00009B53 803804                  	cmp byte [rax], T_closure
 14231 00009B56 0F851DB30000            	jne L_error_non_closure
 14232 00009B5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14233 00009B5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14234 00009B62 50                      	push rax
 14235 00009B63 488B4520                	mov rax, PARAM(0)	; param a
 14236 00009B67 50                      	push rax
 14237 00009B68 6A02                    	push 2	; Number of arguments
 14238 00009B6A 488B4510                	mov rax, ENV
 14239 00009B6E 488B00                  	mov rax, qword [rax + 8 * 0]
 14240 00009B71 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14241 00009B75 803804                  	cmp byte [rax], T_closure
 14242 00009B78 0F85FBB20000            	jne L_error_non_closure
 14243 00009B7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14244                                  
 14245                                  	; Reclaiming the current stack frame
 14246 00009B81 FF7508                  	push qword [rbp + 8]
 14247 00009B84 FF7500                  	push qword [rbp]
 14248 00009B87 41BA06000000            	mov r10, 2 + 4
 14249 00009B8D 4C8B4518                	mov r8, COUNT
 14250 00009B91 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14251 00009B96 4C8D4DF8                	lea r9, [rbp - 8]
 14252                                  .L_tc_recycle_frame_loop_0081:
 14253 00009B9A 4983FA00                	cmp r10, 0
 14254 00009B9E 7413                    	je .L_tc_recycle_frame_done_0081
 14255 00009BA0 4D8B19                  	mov r11, qword [r9]
 14256 00009BA3 4D8918                  	mov qword [r8], r11
 14257 00009BA6 49FFCA                  	dec r10
 14258 00009BA9 4983E808                	sub r8, 8
 14259 00009BAD 4983E908                	sub r9, 8
 14260 00009BB1 EBE7                    	jmp .L_tc_recycle_frame_loop_0081
 14261                                  .L_tc_recycle_frame_done_0081:
 14262 00009BB3 498D6008                	lea rsp, [r8 + 8]
 14263 00009BB7 5D                      	pop rbp
 14264 00009BB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14265 00009BBB E999010000              	jmp .L_if_end_004c
 14266                                  .L_if_else_004c:
 14267                                  	; preparing a non-tail-call
 14268 00009BC0 488B4528                	mov rax, PARAM(1)	; param b
 14269 00009BC4 50                      	push rax
 14270 00009BC5 6A01                    	push 1	; arg count
 14271 00009BC7 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14272 00009BCF 803805                  	cmp byte [rax], T_undefined
 14273 00009BD2 0F841DB20000            	je L_error_fvar_undefined
 14274 00009BD8 803804                  	cmp byte [rax], T_closure
 14275 00009BDB 0F8598B20000            	jne L_error_non_closure
 14276 00009BE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14277 00009BE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14278 00009BE7 483D[02000000]          	cmp rax, sob_boolean_false
 14279 00009BED 0F8485000000            	je .L_if_else_004b
 14280                                  	; Initiating tail-call optimization
 14281                                  	; preparing a non-tail-call
 14282 00009BF3 488B4528                	mov rax, PARAM(1)	; param b
 14283 00009BF7 50                      	push rax
 14284 00009BF8 6A01                    	push 1	; arg count
 14285 00009BFA 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14286 00009C02 803805                  	cmp byte [rax], T_undefined
 14287 00009C05 0F84EAB10000            	je L_error_fvar_undefined
 14288 00009C0B 803804                  	cmp byte [rax], T_closure
 14289 00009C0E 0F8565B20000            	jne L_error_non_closure
 14290 00009C14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14291 00009C17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14292 00009C1A 50                      	push rax
 14293 00009C1B 488B4520                	mov rax, PARAM(0)	; param a
 14294 00009C1F 50                      	push rax
 14295 00009C20 6A02                    	push 2	; Number of arguments
 14296 00009C22 488B4510                	mov rax, ENV
 14297 00009C26 488B00                  	mov rax, qword [rax + 8 * 0]
 14298 00009C29 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14299 00009C2D 803804                  	cmp byte [rax], T_closure
 14300 00009C30 0F8543B20000            	jne L_error_non_closure
 14301 00009C36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14302                                  
 14303                                  	; Reclaiming the current stack frame
 14304 00009C39 FF7508                  	push qword [rbp + 8]
 14305 00009C3C FF7500                  	push qword [rbp]
 14306 00009C3F 41BA06000000            	mov r10, 2 + 4
 14307 00009C45 4C8B4518                	mov r8, COUNT
 14308 00009C49 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14309 00009C4E 4C8D4DF8                	lea r9, [rbp - 8]
 14310                                  .L_tc_recycle_frame_loop_0082:
 14311 00009C52 4983FA00                	cmp r10, 0
 14312 00009C56 7413                    	je .L_tc_recycle_frame_done_0082
 14313 00009C58 4D8B19                  	mov r11, qword [r9]
 14314 00009C5B 4D8918                  	mov qword [r8], r11
 14315 00009C5E 49FFCA                  	dec r10
 14316 00009C61 4983E808                	sub r8, 8
 14317 00009C65 4983E908                	sub r9, 8
 14318 00009C69 EBE7                    	jmp .L_tc_recycle_frame_loop_0082
 14319                                  .L_tc_recycle_frame_done_0082:
 14320 00009C6B 498D6008                	lea rsp, [r8 + 8]
 14321 00009C6F 5D                      	pop rbp
 14322 00009C70 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14323 00009C73 E9E1000000              	jmp .L_if_end_004b
 14324                                  .L_if_else_004b:
 14325                                  	; preparing a non-tail-call
 14326 00009C78 488B4528                	mov rax, PARAM(1)	; param b
 14327 00009C7C 50                      	push rax
 14328 00009C7D 6A01                    	push 1	; arg count
 14329 00009C7F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14330 00009C87 803805                  	cmp byte [rax], T_undefined
 14331 00009C8A 0F8465B10000            	je L_error_fvar_undefined
 14332 00009C90 803804                  	cmp byte [rax], T_closure
 14333 00009C93 0F85E0B10000            	jne L_error_non_closure
 14334 00009C99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14335 00009C9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14336 00009C9F 483D[02000000]          	cmp rax, sob_boolean_false
 14337 00009CA5 745F                    	je .L_if_else_004a
 14338                                  	; Initiating tail-call optimization
 14339 00009CA7 488B4528                	mov rax, PARAM(1)	; param b
 14340 00009CAB 50                      	push rax
 14341 00009CAC 488B4520                	mov rax, PARAM(0)	; param a
 14342 00009CB0 50                      	push rax
 14343 00009CB1 6A02                    	push 2	; Number of arguments
 14344 00009CB3 488B4510                	mov rax, ENV
 14345 00009CB7 488B00                  	mov rax, qword [rax + 8 * 0]
 14346 00009CBA 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14347 00009CBE 803804                  	cmp byte [rax], T_closure
 14348 00009CC1 0F85B2B10000            	jne L_error_non_closure
 14349 00009CC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14350                                  
 14351                                  	; Reclaiming the current stack frame
 14352 00009CCA FF7508                  	push qword [rbp + 8]
 14353 00009CCD FF7500                  	push qword [rbp]
 14354 00009CD0 41BA06000000            	mov r10, 2 + 4
 14355 00009CD6 4C8B4518                	mov r8, COUNT
 14356 00009CDA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14357 00009CDF 4C8D4DF8                	lea r9, [rbp - 8]
 14358                                  .L_tc_recycle_frame_loop_0083:
 14359 00009CE3 4983FA00                	cmp r10, 0
 14360 00009CE7 7413                    	je .L_tc_recycle_frame_done_0083
 14361 00009CE9 4D8B19                  	mov r11, qword [r9]
 14362 00009CEC 4D8918                  	mov qword [r8], r11
 14363 00009CEF 49FFCA                  	dec r10
 14364 00009CF2 4983E808                	sub r8, 8
 14365 00009CF6 4983E908                	sub r9, 8
 14366 00009CFA EBE7                    	jmp .L_tc_recycle_frame_loop_0083
 14367                                  .L_tc_recycle_frame_done_0083:
 14368 00009CFC 498D6008                	lea rsp, [r8 + 8]
 14369 00009D00 5D                      	pop rbp
 14370 00009D01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14371 00009D04 EB53                    	jmp .L_if_end_004a
 14372                                  .L_if_else_004a:
 14373                                  	; Initiating tail-call optimization
 14374 00009D06 6A00                    	push 0	; Number of arguments
 14375 00009D08 488B4510                	mov rax, ENV
 14376 00009D0C 488B4008                	mov rax, qword [rax + 8 * 1]
 14377 00009D10 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14378 00009D13 803804                  	cmp byte [rax], T_closure
 14379 00009D16 0F855DB10000            	jne L_error_non_closure
 14380 00009D1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14381                                  
 14382                                  	; Reclaiming the current stack frame
 14383 00009D1F FF7508                  	push qword [rbp + 8]
 14384 00009D22 FF7500                  	push qword [rbp]
 14385 00009D25 41BA04000000            	mov r10, 0 + 4
 14386 00009D2B 4C8B4518                	mov r8, COUNT
 14387 00009D2F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14388 00009D34 4C8D4DF8                	lea r9, [rbp - 8]
 14389                                  .L_tc_recycle_frame_loop_0084:
 14390 00009D38 4983FA00                	cmp r10, 0
 14391 00009D3C 7413                    	je .L_tc_recycle_frame_done_0084
 14392 00009D3E 4D8B19                  	mov r11, qword [r9]
 14393 00009D41 4D8918                  	mov qword [r8], r11
 14394 00009D44 49FFCA                  	dec r10
 14395 00009D47 4983E808                	sub r8, 8
 14396 00009D4B 4983E908                	sub r9, 8
 14397 00009D4F EBE7                    	jmp .L_tc_recycle_frame_loop_0084
 14398                                  .L_tc_recycle_frame_done_0084:
 14399 00009D51 498D6008                	lea rsp, [r8 + 8]
 14400 00009D55 5D                      	pop rbp
 14401 00009D56 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14402                                  .L_if_end_004a:
 14403                                  .L_if_end_004b:
 14404                                  .L_if_end_004c:
 14405 00009D59 EB53                    	jmp .L_if_end_004d
 14406                                  .L_if_else_004d:
 14407                                  	; Initiating tail-call optimization
 14408 00009D5B 6A00                    	push 0	; Number of arguments
 14409 00009D5D 488B4510                	mov rax, ENV
 14410 00009D61 488B4008                	mov rax, qword [rax + 8 * 1]
 14411 00009D65 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14412 00009D68 803804                  	cmp byte [rax], T_closure
 14413 00009D6B 0F8508B10000            	jne L_error_non_closure
 14414 00009D71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14415                                  
 14416                                  	; Reclaiming the current stack frame
 14417 00009D74 FF7508                  	push qword [rbp + 8]
 14418 00009D77 FF7500                  	push qword [rbp]
 14419 00009D7A 41BA04000000            	mov r10, 0 + 4
 14420 00009D80 4C8B4518                	mov r8, COUNT
 14421 00009D84 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14422 00009D89 4C8D4DF8                	lea r9, [rbp - 8]
 14423                                  .L_tc_recycle_frame_loop_0085:
 14424 00009D8D 4983FA00                	cmp r10, 0
 14425 00009D91 7413                    	je .L_tc_recycle_frame_done_0085
 14426 00009D93 4D8B19                  	mov r11, qword [r9]
 14427 00009D96 4D8918                  	mov qword [r8], r11
 14428 00009D99 49FFCA                  	dec r10
 14429 00009D9C 4983E808                	sub r8, 8
 14430 00009DA0 4983E908                	sub r9, 8
 14431 00009DA4 EBE7                    	jmp .L_tc_recycle_frame_loop_0085
 14432                                  .L_tc_recycle_frame_done_0085:
 14433 00009DA6 498D6008                	lea rsp, [r8 + 8]
 14434 00009DAA 5D                      	pop rbp
 14435 00009DAB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14436                                  .L_if_end_004d:
 14437                                  .L_if_end_004e:
 14438                                  .L_if_end_004f:
 14439 00009DAE C9                      	leave
 14440 00009DAF C22000                  	ret AND_KILL_FRAME(2)
 14441                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14442 00009DB2 C9                      	leave
 14443 00009DB3 C22800                  	ret AND_KILL_FRAME(3)
 14444                                  .L_lambda_simple_end_0049:	; new closure is in rax
 14445 00009DB6 50                      	push rax
 14446 00009DB7 6A01                    	push 1	; Number of arguments
 14447 00009DB9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14448 00009DBE E85FB10000              	call malloc
 14449 00009DC3 50                      	push rax
 14450 00009DC4 BF08000000              	mov rdi, 8 * 1	; new rib
 14451 00009DC9 E854B10000              	call malloc
 14452 00009DCE 50                      	push rax
 14453 00009DCF BF10000000              	mov rdi, 8 * 2	; extended env
 14454 00009DD4 E849B10000              	call malloc
 14455 00009DD9 488B7D10                	mov rdi, ENV
 14456 00009DDD BE00000000              	mov rsi, 0
 14457 00009DE2 BA01000000              	mov rdx, 1
 14458                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 14459 00009DE7 4883FE01                	cmp rsi, 1
 14460 00009DEB 7410                    	je .L_lambda_simple_env_end_004b
 14461 00009DED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14462 00009DF1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14463 00009DF5 48FFC6                  	inc rsi
 14464 00009DF8 48FFC2                  	inc rdx
 14465 00009DFB EBEA                    	jmp .L_lambda_simple_env_loop_004b
 14466                                  .L_lambda_simple_env_end_004b:
 14467 00009DFD 5B                      	pop rbx
 14468 00009DFE BE00000000              	mov rsi, 0
 14469                                  .L_lambda_simple_params_loop_004b:	; copy params
 14470 00009E03 4883FE01                	cmp rsi, 1
 14471 00009E07 740E                    	je .L_lambda_simple_params_end_004b
 14472 00009E09 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14473 00009E0E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14474 00009E12 48FFC6                  	inc rsi
 14475 00009E15 EBEC                    	jmp .L_lambda_simple_params_loop_004b
 14476                                  .L_lambda_simple_params_end_004b:
 14477 00009E17 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14478 00009E1A 4889C3                  	mov rbx, rax
 14479 00009E1D 58                      	pop rax
 14480 00009E1E C60004                  	mov byte [rax], T_closure
 14481 00009E21 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14482 00009E25 48C74009[329E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 14483 00009E2D E9470F0000              	jmp .L_lambda_simple_end_004b
 14484                                  .L_lambda_simple_code_004b:	; lambda-simple body
 14485 00009E32 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14486 00009E38 740B                    	je .L_lambda_simple_arity_check_ok_004b
 14487 00009E3A FF742410                	push qword [rsp + 8 * 2]
 14488 00009E3E 6A01                    	push 1
 14489 00009E40 E996B00000              	jmp L_error_incorrect_arity_simple
 14490                                  .L_lambda_simple_arity_check_ok_004b:
 14491 00009E45 C8000000                	enter 0, 0
 14492                                  	; Initiating tail-call optimization
 14493                                  	; preparing a non-tail-call
 14494 00009E49 488B0425[190F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 14495 00009E51 803805                  	cmp byte [rax], T_undefined
 14496 00009E54 0F849BAF0000            	je L_error_fvar_undefined
 14497 00009E5A 50                      	push rax
 14498 00009E5B 488B0425[080F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 14499 00009E63 803805                  	cmp byte [rax], T_undefined
 14500 00009E66 0F8489AF0000            	je L_error_fvar_undefined
 14501 00009E6C 50                      	push rax
 14502 00009E6D 488B0425[2A0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 14503 00009E75 803805                  	cmp byte [rax], T_undefined
 14504 00009E78 0F8477AF0000            	je L_error_fvar_undefined
 14505 00009E7E 50                      	push rax
 14506 00009E7F 6A03                    	push 3	; arg count
 14507 00009E81 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 14508 00009E85 803804                  	cmp byte [rax], T_closure
 14509 00009E88 0F85EBAF0000            	jne L_error_non_closure
 14510 00009E8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14511 00009E91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14512 00009E94 50                      	push rax
 14513 00009E95 6A01                    	push 1	; Number of arguments
 14514 00009E97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14515 00009E9C E881B00000              	call malloc
 14516 00009EA1 50                      	push rax
 14517 00009EA2 BF08000000              	mov rdi, 8 * 1	; new rib
 14518 00009EA7 E876B00000              	call malloc
 14519 00009EAC 50                      	push rax
 14520 00009EAD BF18000000              	mov rdi, 8 * 3	; extended env
 14521 00009EB2 E86BB00000              	call malloc
 14522 00009EB7 488B7D10                	mov rdi, ENV
 14523 00009EBB BE00000000              	mov rsi, 0
 14524 00009EC0 BA01000000              	mov rdx, 1
 14525                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14526 00009EC5 4883FE02                	cmp rsi, 2
 14527 00009EC9 7410                    	je .L_lambda_simple_env_end_004c
 14528 00009ECB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14529 00009ECF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14530 00009ED3 48FFC6                  	inc rsi
 14531 00009ED6 48FFC2                  	inc rdx
 14532 00009ED9 EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14533                                  .L_lambda_simple_env_end_004c:
 14534 00009EDB 5B                      	pop rbx
 14535 00009EDC BE00000000              	mov rsi, 0
 14536                                  .L_lambda_simple_params_loop_004c:	; copy params
 14537 00009EE1 4883FE01                	cmp rsi, 1
 14538 00009EE5 740E                    	je .L_lambda_simple_params_end_004c
 14539 00009EE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14540 00009EEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14541 00009EF0 48FFC6                  	inc rsi
 14542 00009EF3 EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14543                                  .L_lambda_simple_params_end_004c:
 14544 00009EF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14545 00009EF8 4889C3                  	mov rbx, rax
 14546 00009EFB 58                      	pop rax
 14547 00009EFC C60004                  	mov byte [rax], T_closure
 14548 00009EFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14549 00009F03 48C74009[109F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14550 00009F0B E91F0E0000              	jmp .L_lambda_simple_end_004c
 14551                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14552 00009F10 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14553 00009F16 740B                    	je .L_lambda_simple_arity_check_ok_004c
 14554 00009F18 FF742410                	push qword [rsp + 8 * 2]
 14555 00009F1C 6A01                    	push 1
 14556 00009F1E E9B8AF0000              	jmp L_error_incorrect_arity_simple
 14557                                  .L_lambda_simple_arity_check_ok_004c:
 14558 00009F23 C8000000                	enter 0, 0
 14559                                  	; Initiating tail-call optimization
 14560                                  	; preparing a non-tail-call
 14561 00009F27 488B0425[E60E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 14562 00009F2F 803805                  	cmp byte [rax], T_undefined
 14563 00009F32 0F84BDAE0000            	je L_error_fvar_undefined
 14564 00009F38 50                      	push rax
 14565 00009F39 488B0425[D50E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 14566 00009F41 803805                  	cmp byte [rax], T_undefined
 14567 00009F44 0F84ABAE0000            	je L_error_fvar_undefined
 14568 00009F4A 50                      	push rax
 14569 00009F4B 488B0425[F70E0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 14570 00009F53 803805                  	cmp byte [rax], T_undefined
 14571 00009F56 0F8499AE0000            	je L_error_fvar_undefined
 14572 00009F5C 50                      	push rax
 14573 00009F5D 6A03                    	push 3	; arg count
 14574 00009F5F 488B4510                	mov rax, ENV
 14575 00009F63 488B00                  	mov rax, qword [rax + 8 * 0]
 14576 00009F66 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 14577 00009F69 803804                  	cmp byte [rax], T_closure
 14578 00009F6C 0F8507AF0000            	jne L_error_non_closure
 14579 00009F72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14580 00009F75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14581 00009F78 50                      	push rax
 14582 00009F79 6A01                    	push 1	; Number of arguments
 14583 00009F7B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14584 00009F80 E89DAF0000              	call malloc
 14585 00009F85 50                      	push rax
 14586 00009F86 BF08000000              	mov rdi, 8 * 1	; new rib
 14587 00009F8B E892AF0000              	call malloc
 14588 00009F90 50                      	push rax
 14589 00009F91 BF20000000              	mov rdi, 8 * 4	; extended env
 14590 00009F96 E887AF0000              	call malloc
 14591 00009F9B 488B7D10                	mov rdi, ENV
 14592 00009F9F BE00000000              	mov rsi, 0
 14593 00009FA4 BA01000000              	mov rdx, 1
 14594                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14595 00009FA9 4883FE03                	cmp rsi, 3
 14596 00009FAD 7410                    	je .L_lambda_simple_env_end_004d
 14597 00009FAF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14598 00009FB3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14599 00009FB7 48FFC6                  	inc rsi
 14600 00009FBA 48FFC2                  	inc rdx
 14601 00009FBD EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14602                                  .L_lambda_simple_env_end_004d:
 14603 00009FBF 5B                      	pop rbx
 14604 00009FC0 BE00000000              	mov rsi, 0
 14605                                  .L_lambda_simple_params_loop_004d:	; copy params
 14606 00009FC5 4883FE01                	cmp rsi, 1
 14607 00009FC9 740E                    	je .L_lambda_simple_params_end_004d
 14608 00009FCB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14609 00009FD0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14610 00009FD4 48FFC6                  	inc rsi
 14611 00009FD7 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14612                                  .L_lambda_simple_params_end_004d:
 14613 00009FD9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14614 00009FDC 4889C3                  	mov rbx, rax
 14615 00009FDF 58                      	pop rax
 14616 00009FE0 C60004                  	mov byte [rax], T_closure
 14617 00009FE3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14618 00009FE7 48C74009[F49F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14619 00009FEF E9F10C0000              	jmp .L_lambda_simple_end_004d
 14620                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14621 00009FF4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14622 00009FFA 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14623 00009FFC FF742410                	push qword [rsp + 8 * 2]
 14624 0000A000 6A01                    	push 1
 14625 0000A002 E9D4AE0000              	jmp L_error_incorrect_arity_simple
 14626                                  .L_lambda_simple_arity_check_ok_004d:
 14627 0000A007 C8000000                	enter 0, 0
 14628                                  	; Initiating tail-call optimization
 14629 0000A00B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14630 0000A010 E80DAF0000              	call malloc
 14631 0000A015 50                      	push rax
 14632 0000A016 BF08000000              	mov rdi, 8 * 1	; new rib
 14633 0000A01B E802AF0000              	call malloc
 14634 0000A020 50                      	push rax
 14635 0000A021 BF28000000              	mov rdi, 8 * 5	; extended env
 14636 0000A026 E8F7AE0000              	call malloc
 14637 0000A02B 488B7D10                	mov rdi, ENV
 14638 0000A02F BE00000000              	mov rsi, 0
 14639 0000A034 BA01000000              	mov rdx, 1
 14640                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14641 0000A039 4883FE04                	cmp rsi, 4
 14642 0000A03D 7410                    	je .L_lambda_simple_env_end_004e
 14643 0000A03F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14644 0000A043 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14645 0000A047 48FFC6                  	inc rsi
 14646 0000A04A 48FFC2                  	inc rdx
 14647 0000A04D EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14648                                  .L_lambda_simple_env_end_004e:
 14649 0000A04F 5B                      	pop rbx
 14650 0000A050 BE00000000              	mov rsi, 0
 14651                                  .L_lambda_simple_params_loop_004e:	; copy params
 14652 0000A055 4883FE01                	cmp rsi, 1
 14653 0000A059 740E                    	je .L_lambda_simple_params_end_004e
 14654 0000A05B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14655 0000A060 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14656 0000A064 48FFC6                  	inc rsi
 14657 0000A067 EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14658                                  .L_lambda_simple_params_end_004e:
 14659 0000A069 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14660 0000A06C 4889C3                  	mov rbx, rax
 14661 0000A06F 58                      	pop rax
 14662 0000A070 C60004                  	mov byte [rax], T_closure
 14663 0000A073 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14664 0000A077 48C74009[84A00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14665 0000A07F E99B000000              	jmp .L_lambda_simple_end_004e
 14666                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14667 0000A084 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14668 0000A08A 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14669 0000A08C FF742410                	push qword [rsp + 8 * 2]
 14670 0000A090 6A02                    	push 2
 14671 0000A092 E944AE0000              	jmp L_error_incorrect_arity_simple
 14672                                  .L_lambda_simple_arity_check_ok_004e:
 14673 0000A097 C8000000                	enter 0, 0
 14674                                  	; Initiating tail-call optimization
 14675                                  	; preparing a non-tail-call
 14676 0000A09B 488B4528                	mov rax, PARAM(1)	; param b
 14677 0000A09F 50                      	push rax
 14678 0000A0A0 488B4520                	mov rax, PARAM(0)	; param a
 14679 0000A0A4 50                      	push rax
 14680 0000A0A5 6A02                    	push 2	; arg count
 14681 0000A0A7 488B4510                	mov rax, ENV
 14682 0000A0AB 488B4008                	mov rax, qword [rax + 8 * 1]
 14683 0000A0AF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14684 0000A0B2 803804                  	cmp byte [rax], T_closure
 14685 0000A0B5 0F85BEAD0000            	jne L_error_non_closure
 14686 0000A0BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14687 0000A0BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 14688 0000A0C1 50                      	push rax
 14689 0000A0C2 6A01                    	push 1	; Number of arguments
 14690 0000A0C4 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 14691 0000A0CC 803805                  	cmp byte [rax], T_undefined
 14692 0000A0CF 0F8420AD0000            	je L_error_fvar_undefined
 14693 0000A0D5 803804                  	cmp byte [rax], T_closure
 14694 0000A0D8 0F859BAD0000            	jne L_error_non_closure
 14695 0000A0DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14696                                  
 14697                                  	; Reclaiming the current stack frame
 14698 0000A0E1 FF7508                  	push qword [rbp + 8]
 14699 0000A0E4 FF7500                  	push qword [rbp]
 14700 0000A0E7 41BA05000000            	mov r10, 1 + 4
 14701 0000A0ED 4C8B4518                	mov r8, COUNT
 14702 0000A0F1 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14703 0000A0F6 4C8D4DF8                	lea r9, [rbp - 8]
 14704                                  .L_tc_recycle_frame_loop_0086:
 14705 0000A0FA 4983FA00                	cmp r10, 0
 14706 0000A0FE 7413                    	je .L_tc_recycle_frame_done_0086
 14707 0000A100 4D8B19                  	mov r11, qword [r9]
 14708 0000A103 4D8918                  	mov qword [r8], r11
 14709 0000A106 49FFCA                  	dec r10
 14710 0000A109 4983E808                	sub r8, 8
 14711 0000A10D 4983E908                	sub r9, 8
 14712 0000A111 EBE7                    	jmp .L_tc_recycle_frame_loop_0086
 14713                                  .L_tc_recycle_frame_done_0086:
 14714 0000A113 498D6008                	lea rsp, [r8 + 8]
 14715 0000A117 5D                      	pop rbp
 14716 0000A118 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14717 0000A11B C9                      	leave
 14718 0000A11C C22000                  	ret AND_KILL_FRAME(2)
 14719                                  .L_lambda_simple_end_004e:	; new closure is in rax
 14720 0000A11F 50                      	push rax
 14721 0000A120 6A01                    	push 1	; Number of arguments
 14722 0000A122 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14723 0000A127 E8F6AD0000              	call malloc
 14724 0000A12C 50                      	push rax
 14725 0000A12D BF08000000              	mov rdi, 8 * 1	; new rib
 14726 0000A132 E8EBAD0000              	call malloc
 14727 0000A137 50                      	push rax
 14728 0000A138 BF28000000              	mov rdi, 8 * 5	; extended env
 14729 0000A13D E8E0AD0000              	call malloc
 14730 0000A142 488B7D10                	mov rdi, ENV
 14731 0000A146 BE00000000              	mov rsi, 0
 14732 0000A14B BA01000000              	mov rdx, 1
 14733                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14734 0000A150 4883FE04                	cmp rsi, 4
 14735 0000A154 7410                    	je .L_lambda_simple_env_end_004f
 14736 0000A156 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14737 0000A15A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14738 0000A15E 48FFC6                  	inc rsi
 14739 0000A161 48FFC2                  	inc rdx
 14740 0000A164 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14741                                  .L_lambda_simple_env_end_004f:
 14742 0000A166 5B                      	pop rbx
 14743 0000A167 BE00000000              	mov rsi, 0
 14744                                  .L_lambda_simple_params_loop_004f:	; copy params
 14745 0000A16C 4883FE01                	cmp rsi, 1
 14746 0000A170 740E                    	je .L_lambda_simple_params_end_004f
 14747 0000A172 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14748 0000A177 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14749 0000A17B 48FFC6                  	inc rsi
 14750 0000A17E EBEC                    	jmp .L_lambda_simple_params_loop_004f
 14751                                  .L_lambda_simple_params_end_004f:
 14752 0000A180 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14753 0000A183 4889C3                  	mov rbx, rax
 14754 0000A186 58                      	pop rax
 14755 0000A187 C60004                  	mov byte [rax], T_closure
 14756 0000A18A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14757 0000A18E 48C74009[9BA10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 14758 0000A196 E9000B0000              	jmp .L_lambda_simple_end_004f
 14759                                  .L_lambda_simple_code_004f:	; lambda-simple body
 14760 0000A19B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14761 0000A1A1 740B                    	je .L_lambda_simple_arity_check_ok_004f
 14762 0000A1A3 FF742410                	push qword [rsp + 8 * 2]
 14763 0000A1A7 6A01                    	push 1
 14764 0000A1A9 E92DAD0000              	jmp L_error_incorrect_arity_simple
 14765                                  .L_lambda_simple_arity_check_ok_004f:
 14766 0000A1AE C8000000                	enter 0, 0
 14767                                  	; Initiating tail-call optimization
 14768 0000A1B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14769 0000A1B7 E866AD0000              	call malloc
 14770 0000A1BC 50                      	push rax
 14771 0000A1BD BF08000000              	mov rdi, 8 * 1	; new rib
 14772 0000A1C2 E85BAD0000              	call malloc
 14773 0000A1C7 50                      	push rax
 14774 0000A1C8 BF30000000              	mov rdi, 8 * 6	; extended env
 14775 0000A1CD E850AD0000              	call malloc
 14776 0000A1D2 488B7D10                	mov rdi, ENV
 14777 0000A1D6 BE00000000              	mov rsi, 0
 14778 0000A1DB BA01000000              	mov rdx, 1
 14779                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 14780 0000A1E0 4883FE05                	cmp rsi, 5
 14781 0000A1E4 7410                    	je .L_lambda_simple_env_end_0050
 14782 0000A1E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14783 0000A1EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14784 0000A1EE 48FFC6                  	inc rsi
 14785 0000A1F1 48FFC2                  	inc rdx
 14786 0000A1F4 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 14787                                  .L_lambda_simple_env_end_0050:
 14788 0000A1F6 5B                      	pop rbx
 14789 0000A1F7 BE00000000              	mov rsi, 0
 14790                                  .L_lambda_simple_params_loop_0050:	; copy params
 14791 0000A1FC 4883FE01                	cmp rsi, 1
 14792 0000A200 740E                    	je .L_lambda_simple_params_end_0050
 14793 0000A202 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14794 0000A207 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14795 0000A20B 48FFC6                  	inc rsi
 14796 0000A20E EBEC                    	jmp .L_lambda_simple_params_loop_0050
 14797                                  .L_lambda_simple_params_end_0050:
 14798 0000A210 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14799 0000A213 4889C3                  	mov rbx, rax
 14800 0000A216 58                      	pop rax
 14801 0000A217 C60004                  	mov byte [rax], T_closure
 14802 0000A21A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14803 0000A21E 48C74009[28A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 14804 0000A226 EB78                    	jmp .L_lambda_simple_end_0050
 14805                                  .L_lambda_simple_code_0050:	; lambda-simple body
 14806 0000A228 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14807 0000A22E 740B                    	je .L_lambda_simple_arity_check_ok_0050
 14808 0000A230 FF742410                	push qword [rsp + 8 * 2]
 14809 0000A234 6A02                    	push 2
 14810 0000A236 E9A0AC0000              	jmp L_error_incorrect_arity_simple
 14811                                  .L_lambda_simple_arity_check_ok_0050:
 14812 0000A23B C8000000                	enter 0, 0
 14813                                  	; Initiating tail-call optimization
 14814 0000A23F 488B4520                	mov rax, PARAM(0)	; param a
 14815 0000A243 50                      	push rax
 14816 0000A244 488B4528                	mov rax, PARAM(1)	; param b
 14817 0000A248 50                      	push rax
 14818 0000A249 6A02                    	push 2	; Number of arguments
 14819 0000A24B 488B4510                	mov rax, ENV
 14820 0000A24F 488B4010                	mov rax, qword [rax + 8 * 2]
 14821 0000A253 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14822 0000A256 803804                  	cmp byte [rax], T_closure
 14823 0000A259 0F851AAC0000            	jne L_error_non_closure
 14824 0000A25F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14825                                  
 14826                                  	; Reclaiming the current stack frame
 14827 0000A262 FF7508                  	push qword [rbp + 8]
 14828 0000A265 FF7500                  	push qword [rbp]
 14829 0000A268 41BA06000000            	mov r10, 2 + 4
 14830 0000A26E 4C8B4518                	mov r8, COUNT
 14831 0000A272 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14832 0000A277 4C8D4DF8                	lea r9, [rbp - 8]
 14833                                  .L_tc_recycle_frame_loop_0087:
 14834 0000A27B 4983FA00                	cmp r10, 0
 14835 0000A27F 7413                    	je .L_tc_recycle_frame_done_0087
 14836 0000A281 4D8B19                  	mov r11, qword [r9]
 14837 0000A284 4D8918                  	mov qword [r8], r11
 14838 0000A287 49FFCA                  	dec r10
 14839 0000A28A 4983E808                	sub r8, 8
 14840 0000A28E 4983E908                	sub r9, 8
 14841 0000A292 EBE7                    	jmp .L_tc_recycle_frame_loop_0087
 14842                                  .L_tc_recycle_frame_done_0087:
 14843 0000A294 498D6008                	lea rsp, [r8 + 8]
 14844 0000A298 5D                      	pop rbp
 14845 0000A299 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14846 0000A29C C9                      	leave
 14847 0000A29D C22000                  	ret AND_KILL_FRAME(2)
 14848                                  .L_lambda_simple_end_0050:	; new closure is in rax
 14849 0000A2A0 50                      	push rax
 14850 0000A2A1 6A01                    	push 1	; Number of arguments
 14851 0000A2A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14852 0000A2A8 E875AC0000              	call malloc
 14853 0000A2AD 50                      	push rax
 14854 0000A2AE BF08000000              	mov rdi, 8 * 1	; new rib
 14855 0000A2B3 E86AAC0000              	call malloc
 14856 0000A2B8 50                      	push rax
 14857 0000A2B9 BF30000000              	mov rdi, 8 * 6	; extended env
 14858 0000A2BE E85FAC0000              	call malloc
 14859 0000A2C3 488B7D10                	mov rdi, ENV
 14860 0000A2C7 BE00000000              	mov rsi, 0
 14861 0000A2CC BA01000000              	mov rdx, 1
 14862                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 14863 0000A2D1 4883FE05                	cmp rsi, 5
 14864 0000A2D5 7410                    	je .L_lambda_simple_env_end_0051
 14865 0000A2D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14866 0000A2DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14867 0000A2DF 48FFC6                  	inc rsi
 14868 0000A2E2 48FFC2                  	inc rdx
 14869 0000A2E5 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 14870                                  .L_lambda_simple_env_end_0051:
 14871 0000A2E7 5B                      	pop rbx
 14872 0000A2E8 BE00000000              	mov rsi, 0
 14873                                  .L_lambda_simple_params_loop_0051:	; copy params
 14874 0000A2ED 4883FE01                	cmp rsi, 1
 14875 0000A2F1 740E                    	je .L_lambda_simple_params_end_0051
 14876 0000A2F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14877 0000A2F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14878 0000A2FC 48FFC6                  	inc rsi
 14879 0000A2FF EBEC                    	jmp .L_lambda_simple_params_loop_0051
 14880                                  .L_lambda_simple_params_end_0051:
 14881 0000A301 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14882 0000A304 4889C3                  	mov rbx, rax
 14883 0000A307 58                      	pop rax
 14884 0000A308 C60004                  	mov byte [rax], T_closure
 14885 0000A30B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14886 0000A30F 48C74009[1CA30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 14887 0000A317 E935090000              	jmp .L_lambda_simple_end_0051
 14888                                  .L_lambda_simple_code_0051:	; lambda-simple body
 14889 0000A31C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14890 0000A322 740B                    	je .L_lambda_simple_arity_check_ok_0051
 14891 0000A324 FF742410                	push qword [rsp + 8 * 2]
 14892 0000A328 6A01                    	push 1
 14893 0000A32A E9ACAB0000              	jmp L_error_incorrect_arity_simple
 14894                                  .L_lambda_simple_arity_check_ok_0051:
 14895 0000A32F C8000000                	enter 0, 0
 14896                                  	; Initiating tail-call optimization
 14897 0000A333 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14898 0000A338 E8E5AB0000              	call malloc
 14899 0000A33D 50                      	push rax
 14900 0000A33E BF08000000              	mov rdi, 8 * 1	; new rib
 14901 0000A343 E8DAAB0000              	call malloc
 14902 0000A348 50                      	push rax
 14903 0000A349 BF38000000              	mov rdi, 8 * 7	; extended env
 14904 0000A34E E8CFAB0000              	call malloc
 14905 0000A353 488B7D10                	mov rdi, ENV
 14906 0000A357 BE00000000              	mov rsi, 0
 14907 0000A35C BA01000000              	mov rdx, 1
 14908                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 14909 0000A361 4883FE06                	cmp rsi, 6
 14910 0000A365 7410                    	je .L_lambda_simple_env_end_0052
 14911 0000A367 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14912 0000A36B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14913 0000A36F 48FFC6                  	inc rsi
 14914 0000A372 48FFC2                  	inc rdx
 14915 0000A375 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 14916                                  .L_lambda_simple_env_end_0052:
 14917 0000A377 5B                      	pop rbx
 14918 0000A378 BE00000000              	mov rsi, 0
 14919                                  .L_lambda_simple_params_loop_0052:	; copy params
 14920 0000A37D 4883FE01                	cmp rsi, 1
 14921 0000A381 740E                    	je .L_lambda_simple_params_end_0052
 14922 0000A383 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14923 0000A388 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14924 0000A38C 48FFC6                  	inc rsi
 14925 0000A38F EBEC                    	jmp .L_lambda_simple_params_loop_0052
 14926                                  .L_lambda_simple_params_end_0052:
 14927 0000A391 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14928 0000A394 4889C3                  	mov rbx, rax
 14929 0000A397 58                      	pop rax
 14930 0000A398 C60004                  	mov byte [rax], T_closure
 14931 0000A39B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14932 0000A39F 48C74009[ACA30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 14933 0000A3A7 E99A000000              	jmp .L_lambda_simple_end_0052
 14934                                  .L_lambda_simple_code_0052:	; lambda-simple body
 14935 0000A3AC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14936 0000A3B2 740B                    	je .L_lambda_simple_arity_check_ok_0052
 14937 0000A3B4 FF742410                	push qword [rsp + 8 * 2]
 14938 0000A3B8 6A02                    	push 2
 14939 0000A3BA E91CAB0000              	jmp L_error_incorrect_arity_simple
 14940                                  .L_lambda_simple_arity_check_ok_0052:
 14941 0000A3BF C8000000                	enter 0, 0
 14942                                  	; Initiating tail-call optimization
 14943                                  	; preparing a non-tail-call
 14944 0000A3C3 488B4528                	mov rax, PARAM(1)	; param b
 14945 0000A3C7 50                      	push rax
 14946 0000A3C8 488B4520                	mov rax, PARAM(0)	; param a
 14947 0000A3CC 50                      	push rax
 14948 0000A3CD 6A02                    	push 2	; arg count
 14949 0000A3CF 488B4510                	mov rax, ENV
 14950 0000A3D3 488B00                  	mov rax, qword [rax + 8 * 0]
 14951 0000A3D6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 14952 0000A3D9 803804                  	cmp byte [rax], T_closure
 14953 0000A3DC 0F8597AA0000            	jne L_error_non_closure
 14954 0000A3E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14955 0000A3E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14956 0000A3E8 50                      	push rax
 14957 0000A3E9 6A01                    	push 1	; Number of arguments
 14958 0000A3EB 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 14959 0000A3F3 803805                  	cmp byte [rax], T_undefined
 14960 0000A3F6 0F84F9A90000            	je L_error_fvar_undefined
 14961 0000A3FC 803804                  	cmp byte [rax], T_closure
 14962 0000A3FF 0F8574AA0000            	jne L_error_non_closure
 14963 0000A405 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14964                                  
 14965                                  	; Reclaiming the current stack frame
 14966 0000A408 FF7508                  	push qword [rbp + 8]
 14967 0000A40B FF7500                  	push qword [rbp]
 14968 0000A40E 41BA05000000            	mov r10, 1 + 4
 14969 0000A414 4C8B4518                	mov r8, COUNT
 14970 0000A418 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14971 0000A41D 4C8D4DF8                	lea r9, [rbp - 8]
 14972                                  .L_tc_recycle_frame_loop_0088:
 14973 0000A421 4983FA00                	cmp r10, 0
 14974 0000A425 7413                    	je .L_tc_recycle_frame_done_0088
 14975 0000A427 4D8B19                  	mov r11, qword [r9]
 14976 0000A42A 4D8918                  	mov qword [r8], r11
 14977 0000A42D 49FFCA                  	dec r10
 14978 0000A430 4983E808                	sub r8, 8
 14979 0000A434 4983E908                	sub r9, 8
 14980 0000A438 EBE7                    	jmp .L_tc_recycle_frame_loop_0088
 14981                                  .L_tc_recycle_frame_done_0088:
 14982 0000A43A 498D6008                	lea rsp, [r8 + 8]
 14983 0000A43E 5D                      	pop rbp
 14984 0000A43F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14985 0000A442 C9                      	leave
 14986 0000A443 C22000                  	ret AND_KILL_FRAME(2)
 14987                                  .L_lambda_simple_end_0052:	; new closure is in rax
 14988 0000A446 50                      	push rax
 14989 0000A447 6A01                    	push 1	; Number of arguments
 14990 0000A449 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14991 0000A44E E8CFAA0000              	call malloc
 14992 0000A453 50                      	push rax
 14993 0000A454 BF08000000              	mov rdi, 8 * 1	; new rib
 14994 0000A459 E8C4AA0000              	call malloc
 14995 0000A45E 50                      	push rax
 14996 0000A45F BF38000000              	mov rdi, 8 * 7	; extended env
 14997 0000A464 E8B9AA0000              	call malloc
 14998 0000A469 488B7D10                	mov rdi, ENV
 14999 0000A46D BE00000000              	mov rsi, 0
 15000 0000A472 BA01000000              	mov rdx, 1
 15001                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15002 0000A477 4883FE06                	cmp rsi, 6
 15003 0000A47B 7410                    	je .L_lambda_simple_env_end_0053
 15004 0000A47D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15005 0000A481 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15006 0000A485 48FFC6                  	inc rsi
 15007 0000A488 48FFC2                  	inc rdx
 15008 0000A48B EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15009                                  .L_lambda_simple_env_end_0053:
 15010 0000A48D 5B                      	pop rbx
 15011 0000A48E BE00000000              	mov rsi, 0
 15012                                  .L_lambda_simple_params_loop_0053:	; copy params
 15013 0000A493 4883FE01                	cmp rsi, 1
 15014 0000A497 740E                    	je .L_lambda_simple_params_end_0053
 15015 0000A499 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15016 0000A49E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15017 0000A4A2 48FFC6                  	inc rsi
 15018 0000A4A5 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15019                                  .L_lambda_simple_params_end_0053:
 15020 0000A4A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15021 0000A4AA 4889C3                  	mov rbx, rax
 15022 0000A4AD 58                      	pop rax
 15023 0000A4AE C60004                  	mov byte [rax], T_closure
 15024 0000A4B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15025 0000A4B5 48C74009[C2A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15026 0000A4BD E945070000              	jmp .L_lambda_simple_end_0053
 15027                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15028 0000A4C2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15029 0000A4C8 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15030 0000A4CA FF742410                	push qword [rsp + 8 * 2]
 15031 0000A4CE 6A01                    	push 1
 15032 0000A4D0 E906AA0000              	jmp L_error_incorrect_arity_simple
 15033                                  .L_lambda_simple_arity_check_ok_0053:
 15034 0000A4D5 C8000000                	enter 0, 0
 15035                                  	; Initiating tail-call optimization
 15036 0000A4D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15037 0000A4DE E83FAA0000              	call malloc
 15038 0000A4E3 50                      	push rax
 15039 0000A4E4 BF08000000              	mov rdi, 8 * 1	; new rib
 15040 0000A4E9 E834AA0000              	call malloc
 15041 0000A4EE 50                      	push rax
 15042 0000A4EF BF40000000              	mov rdi, 8 * 8	; extended env
 15043 0000A4F4 E829AA0000              	call malloc
 15044 0000A4F9 488B7D10                	mov rdi, ENV
 15045 0000A4FD BE00000000              	mov rsi, 0
 15046 0000A502 BA01000000              	mov rdx, 1
 15047                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15048 0000A507 4883FE07                	cmp rsi, 7
 15049 0000A50B 7410                    	je .L_lambda_simple_env_end_0054
 15050 0000A50D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15051 0000A511 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15052 0000A515 48FFC6                  	inc rsi
 15053 0000A518 48FFC2                  	inc rdx
 15054 0000A51B EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15055                                  .L_lambda_simple_env_end_0054:
 15056 0000A51D 5B                      	pop rbx
 15057 0000A51E BE00000000              	mov rsi, 0
 15058                                  .L_lambda_simple_params_loop_0054:	; copy params
 15059 0000A523 4883FE01                	cmp rsi, 1
 15060 0000A527 740E                    	je .L_lambda_simple_params_end_0054
 15061 0000A529 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15062 0000A52E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15063 0000A532 48FFC6                  	inc rsi
 15064 0000A535 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15065                                  .L_lambda_simple_params_end_0054:
 15066 0000A537 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15067 0000A53A 4889C3                  	mov rbx, rax
 15068 0000A53D 58                      	pop rax
 15069 0000A53E C60004                  	mov byte [rax], T_closure
 15070 0000A541 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15071 0000A545 48C74009[52A50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15072 0000A54D E9D6040000              	jmp .L_lambda_simple_end_0054
 15073                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15074 0000A552 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15075 0000A558 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15076 0000A55A FF742410                	push qword [rsp + 8 * 2]
 15077 0000A55E 6A01                    	push 1
 15078 0000A560 E976A90000              	jmp L_error_incorrect_arity_simple
 15079                                  .L_lambda_simple_arity_check_ok_0054:
 15080 0000A565 C8000000                	enter 0, 0
 15081                                  	; Initiating tail-call optimization
 15082 0000A569 48B8-                   	mov rax, L_constants + 2007
 15082 0000A56B [D707000000000000] 
 15083 0000A573 50                      	push rax
 15084 0000A574 6A01                    	push 1	; Number of arguments
 15085 0000A576 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15086 0000A57B E8A2A90000              	call malloc
 15087 0000A580 50                      	push rax
 15088 0000A581 BF08000000              	mov rdi, 8 * 1	; new rib
 15089 0000A586 E897A90000              	call malloc
 15090 0000A58B 50                      	push rax
 15091 0000A58C BF48000000              	mov rdi, 8 * 9	; extended env
 15092 0000A591 E88CA90000              	call malloc
 15093 0000A596 488B7D10                	mov rdi, ENV
 15094 0000A59A BE00000000              	mov rsi, 0
 15095 0000A59F BA01000000              	mov rdx, 1
 15096                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15097 0000A5A4 4883FE08                	cmp rsi, 8
 15098 0000A5A8 7410                    	je .L_lambda_simple_env_end_0055
 15099 0000A5AA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15100 0000A5AE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15101 0000A5B2 48FFC6                  	inc rsi
 15102 0000A5B5 48FFC2                  	inc rdx
 15103 0000A5B8 EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15104                                  .L_lambda_simple_env_end_0055:
 15105 0000A5BA 5B                      	pop rbx
 15106 0000A5BB BE00000000              	mov rsi, 0
 15107                                  .L_lambda_simple_params_loop_0055:	; copy params
 15108 0000A5C0 4883FE01                	cmp rsi, 1
 15109 0000A5C4 740E                    	je .L_lambda_simple_params_end_0055
 15110 0000A5C6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15111 0000A5CB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15112 0000A5CF 48FFC6                  	inc rsi
 15113 0000A5D2 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15114                                  .L_lambda_simple_params_end_0055:
 15115 0000A5D4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15116 0000A5D7 4889C3                  	mov rbx, rax
 15117 0000A5DA 58                      	pop rax
 15118 0000A5DB C60004                  	mov byte [rax], T_closure
 15119 0000A5DE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15120 0000A5E2 48C74009[EFA50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15121 0000A5EA E9EF030000              	jmp .L_lambda_simple_end_0055
 15122                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15123 0000A5EF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15124 0000A5F5 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15125 0000A5F7 FF742410                	push qword [rsp + 8 * 2]
 15126 0000A5FB 6A01                    	push 1
 15127 0000A5FD E9D9A80000              	jmp L_error_incorrect_arity_simple
 15128                                  .L_lambda_simple_arity_check_ok_0055:
 15129 0000A602 C8000000                	enter 0, 0
 15130 0000A606 BF08000000              	mov rdi, 8 * 1
 15131 0000A60B E812A90000              	call malloc
 15132 0000A610 488B5D20                	mov rbx, PARAM(0)
 15133 0000A614 488918                  	mov qword [rax], rbx
 15134 0000A617 48894520                	mov PARAM(0), rax
 15135 0000A61B 48B8-                   	mov rax, sob_void
 15135 0000A61D [0000000000000000] 
 15136                                  
 15137 0000A625 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15138 0000A62A E8F3A80000              	call malloc
 15139 0000A62F 50                      	push rax
 15140 0000A630 BF08000000              	mov rdi, 8 * 1	; new rib
 15141 0000A635 E8E8A80000              	call malloc
 15142 0000A63A 50                      	push rax
 15143 0000A63B BF50000000              	mov rdi, 8 * 10	; extended env
 15144 0000A640 E8DDA80000              	call malloc
 15145 0000A645 488B7D10                	mov rdi, ENV
 15146 0000A649 BE00000000              	mov rsi, 0
 15147 0000A64E BA01000000              	mov rdx, 1
 15148                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15149 0000A653 4883FE09                	cmp rsi, 9
 15150 0000A657 7410                    	je .L_lambda_simple_env_end_0056
 15151 0000A659 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15152 0000A65D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15153 0000A661 48FFC6                  	inc rsi
 15154 0000A664 48FFC2                  	inc rdx
 15155 0000A667 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15156                                  .L_lambda_simple_env_end_0056:
 15157 0000A669 5B                      	pop rbx
 15158 0000A66A BE00000000              	mov rsi, 0
 15159                                  .L_lambda_simple_params_loop_0056:	; copy params
 15160 0000A66F 4883FE01                	cmp rsi, 1
 15161 0000A673 740E                    	je .L_lambda_simple_params_end_0056
 15162 0000A675 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15163 0000A67A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15164 0000A67E 48FFC6                  	inc rsi
 15165 0000A681 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15166                                  .L_lambda_simple_params_end_0056:
 15167 0000A683 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15168 0000A686 4889C3                  	mov rbx, rax
 15169 0000A689 58                      	pop rax
 15170 0000A68A C60004                  	mov byte [rax], T_closure
 15171 0000A68D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15172 0000A691 48C74009[9EA60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15173 0000A699 E954010000              	jmp .L_lambda_simple_end_0056
 15174                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15175 0000A69E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15176 0000A6A4 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15177 0000A6A6 FF742410                	push qword [rsp + 8 * 2]
 15178 0000A6AA 6A02                    	push 2
 15179 0000A6AC E92AA80000              	jmp L_error_incorrect_arity_simple
 15180                                  .L_lambda_simple_arity_check_ok_0056:
 15181 0000A6B1 C8000000                	enter 0, 0
 15182                                  	; preparing a non-tail-call
 15183 0000A6B5 488B4528                	mov rax, PARAM(1)	; param s
 15184 0000A6B9 50                      	push rax
 15185 0000A6BA 6A01                    	push 1	; arg count
 15186 0000A6BC 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 15187 0000A6C4 803805                  	cmp byte [rax], T_undefined
 15188 0000A6C7 0F8428A70000            	je L_error_fvar_undefined
 15189 0000A6CD 803804                  	cmp byte [rax], T_closure
 15190 0000A6D0 0F85A3A70000            	jne L_error_non_closure
 15191 0000A6D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15192 0000A6D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15193 0000A6DC 483D[02000000]          	cmp rax, sob_boolean_false
 15194 0000A6E2 0F8506010000            	jne .L_or_end_0006
 15195                                  
 15196                                  	; preparing a non-tail-call
 15197                                  	; preparing a non-tail-call
 15198 0000A6E8 488B4528                	mov rax, PARAM(1)	; param s
 15199 0000A6EC 50                      	push rax
 15200 0000A6ED 6A01                    	push 1	; arg count
 15201 0000A6EF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15202 0000A6F7 803805                  	cmp byte [rax], T_undefined
 15203 0000A6FA 0F84F5A60000            	je L_error_fvar_undefined
 15204 0000A700 803804                  	cmp byte [rax], T_closure
 15205 0000A703 0F8570A70000            	jne L_error_non_closure
 15206 0000A709 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15207 0000A70C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15208 0000A70F 50                      	push rax
 15209 0000A710 488B4520                	mov rax, PARAM(0)	; param a
 15210 0000A714 50                      	push rax
 15211 0000A715 6A02                    	push 2	; arg count
 15212 0000A717 488B4510                	mov rax, ENV
 15213 0000A71B 488B4008                	mov rax, qword [rax + 8 * 1]
 15214 0000A71F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15215 0000A722 803804                  	cmp byte [rax], T_closure
 15216 0000A725 0F854EA70000            	jne L_error_non_closure
 15217 0000A72B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15218 0000A72E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15219 0000A731 483D[02000000]          	cmp rax, sob_boolean_false
 15220 0000A737 0F84A7000000            	je .L_if_else_0050
 15221                                  	; Initiating tail-call optimization
 15222                                  	; preparing a non-tail-call
 15223 0000A73D 488B4528                	mov rax, PARAM(1)	; param s
 15224 0000A741 50                      	push rax
 15225 0000A742 6A01                    	push 1	; arg count
 15226 0000A744 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 15227 0000A74C 803805                  	cmp byte [rax], T_undefined
 15228 0000A74F 0F84A0A60000            	je L_error_fvar_undefined
 15229 0000A755 803804                  	cmp byte [rax], T_closure
 15230 0000A758 0F851BA70000            	jne L_error_non_closure
 15231 0000A75E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15232 0000A761 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15233 0000A764 50                      	push rax
 15234                                  	; preparing a non-tail-call
 15235 0000A765 488B4528                	mov rax, PARAM(1)	; param s
 15236 0000A769 50                      	push rax
 15237 0000A76A 6A01                    	push 1	; arg count
 15238 0000A76C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15239 0000A774 803805                  	cmp byte [rax], T_undefined
 15240 0000A777 0F8478A60000            	je L_error_fvar_undefined
 15241 0000A77D 803804                  	cmp byte [rax], T_closure
 15242 0000A780 0F85F3A60000            	jne L_error_non_closure
 15243 0000A786 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15244 0000A789 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15245 0000A78C 50                      	push rax
 15246 0000A78D 6A02                    	push 2	; Number of arguments
 15247 0000A78F 488B4510                	mov rax, ENV
 15248 0000A793 488B00                  	mov rax, qword [rax + 8 * 0]
 15249 0000A796 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15250 0000A799 488B00                  	mov rax, qword [rax]
 15251 0000A79C 803804                  	cmp byte [rax], T_closure
 15252 0000A79F 0F85D4A60000            	jne L_error_non_closure
 15253 0000A7A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15254                                  
 15255                                  	; Reclaiming the current stack frame
 15256 0000A7A8 FF7508                  	push qword [rbp + 8]
 15257 0000A7AB FF7500                  	push qword [rbp]
 15258 0000A7AE 41BA06000000            	mov r10, 2 + 4
 15259 0000A7B4 4C8B4518                	mov r8, COUNT
 15260 0000A7B8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15261 0000A7BD 4C8D4DF8                	lea r9, [rbp - 8]
 15262                                  .L_tc_recycle_frame_loop_0089:
 15263 0000A7C1 4983FA00                	cmp r10, 0
 15264 0000A7C5 7413                    	je .L_tc_recycle_frame_done_0089
 15265 0000A7C7 4D8B19                  	mov r11, qword [r9]
 15266 0000A7CA 4D8918                  	mov qword [r8], r11
 15267 0000A7CD 49FFCA                  	dec r10
 15268 0000A7D0 4983E808                	sub r8, 8
 15269 0000A7D4 4983E908                	sub r9, 8
 15270 0000A7D8 EBE7                    	jmp .L_tc_recycle_frame_loop_0089
 15271                                  .L_tc_recycle_frame_done_0089:
 15272 0000A7DA 498D6008                	lea rsp, [r8 + 8]
 15273 0000A7DE 5D                      	pop rbp
 15274 0000A7DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15275 0000A7E2 EB0A                    	jmp .L_if_end_0050
 15276                                  .L_if_else_0050:
 15277 0000A7E4 48B8-                   	mov rax, L_constants + 2
 15277 0000A7E6 [0200000000000000] 
 15278                                  .L_if_end_0050:
 15279                                  .L_or_end_0006:
 15280 0000A7EE C9                      	leave
 15281 0000A7EF C22000                  	ret AND_KILL_FRAME(2)
 15282                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15283 0000A7F2 50                      	push rax
 15284 0000A7F3 488B4520                	mov rax, PARAM(0)	; param run
 15285 0000A7F7 8F00                    	pop qword [rax]
 15286 0000A7F9 48B8-                   	mov rax, sob_void
 15286 0000A7FB [0000000000000000] 
 15287                                  
 15288 0000A803 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15289 0000A808 E815A70000              	call malloc
 15290 0000A80D 50                      	push rax
 15291 0000A80E BF08000000              	mov rdi, 8 * 1	; new rib
 15292 0000A813 E80AA70000              	call malloc
 15293 0000A818 50                      	push rax
 15294 0000A819 BF50000000              	mov rdi, 8 * 10	; extended env
 15295 0000A81E E8FFA60000              	call malloc
 15296 0000A823 488B7D10                	mov rdi, ENV
 15297 0000A827 BE00000000              	mov rsi, 0
 15298 0000A82C BA01000000              	mov rdx, 1
 15299                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 15300 0000A831 4883FE09                	cmp rsi, 9
 15301 0000A835 7410                    	je .L_lambda_opt_env_end_000e
 15302 0000A837 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15303 0000A83B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15304 0000A83F 48FFC6                  	inc rsi
 15305 0000A842 48FFC2                  	inc rdx
 15306 0000A845 EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15307                                  .L_lambda_opt_env_end_000e:
 15308 0000A847 5B                      	pop rbx
 15309 0000A848 BE00000000              	mov rsi, 0
 15310                                  .L_lambda_opt_params_loop_000e:	; copy params
 15311 0000A84D 4883FE01                	cmp rsi, 1
 15312 0000A851 740E                    	je .L_lambda_opt_params_end_000e
 15313 0000A853 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15314 0000A858 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15315 0000A85C 48FFC6                  	inc rsi
 15316 0000A85F EBEC                    	jmp .L_lambda_opt_params_loop_000e
 15317                                  .L_lambda_opt_params_end_000e:
 15318 0000A861 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15319 0000A864 4889C3                  	mov rbx, rax
 15320 0000A867 58                      	pop rax
 15321 0000A868 C60004                  	mov byte [rax], T_closure
 15322 0000A86B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15323 0000A86F 48C74009[7CA80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15324 0000A877 E95E010000              	jmp .L_lambda_opt_end_000e
 15325                                  .L_lambda_opt_code_000e:
 15326 0000A87C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 15327 0000A881 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 15328 0000A885 7407                    	je .L_lambda_opt_arity_check_exact_000e	; Jump if arity matches
 15329 0000A887 7F4C                    	jg .L_lambda_opt_arity_check_more_000e	; Jump if more arguments passed
 15330 0000A889 E961A60000              	jmp L_error_incorrect_arity_opt
 15331                                  .L_lambda_opt_arity_check_exact_000e:
 15332 0000A88E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 15333 0000A891 4983C603                	add r14, 3 ; add 3 first stack values
 15334 0000A895 41BF00000000            	mov r15, 0 ; r15 = index
 15335 0000A89B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 15336 0000A89F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 15337 0000A8A7 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15338                                  .L_lambda_opt_stack_shrink_loop_000e:
 15339 0000A8A9 4983FE00                	cmp r14, 0
 15340 0000A8AD 7E11                    	jle .L_make_lambda_opt_exact_finish_000e
 15341 0000A8AF 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 15342 0000A8B4 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 15343 0000A8B8 49FFCE                  	dec r14 ; next loop value
 15344 0000A8BB 49FFC7                  	inc r15 ; update i
 15345 0000A8BE EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15346                                  .L_make_lambda_opt_exact_finish_000e:
 15347 0000A8C0 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 15348 0000A8C8 49FFC2                  	inc r10
 15349 0000A8CB 4C89542410              	mov qword [rsp + 8 * 2], r10
 15350 0000A8D0 E99E000000              	jmp .L_lambda_opt_stack_adjusted_000e
 15351                                  .L_lambda_opt_arity_check_more_000e:
 15352 0000A8D5 4D89D6                  	mov r14, r10 ; r14 = num args
 15353 0000A8D8 4D89D7                  	mov r15, r10 ; r15 = num args
 15354 0000A8DB 41B901000000            	mov r9, 1; r9 = number of params 
 15355 0000A8E1 4D29CE                  	sub r14, r9 ; r14 = extra args
 15356 0000A8E4 4D01F1                  	add r9, r14 ; r9 = num args
 15357 0000A8E7 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 15357 0000A8E9 [0100000000000000] 
 15358 0000A8F1 EB00                    	jmp .L_make_lambda_opt_arg_list_000e
 15359                                  .L_make_lambda_opt_arg_list_000e:
 15360 0000A8F3 4983FE00                	cmp r14, 0
 15361 0000A8F7 7E25                    	jle .L_make_lambda_opt_stack_fixed_000e
 15362 0000A8F9 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 15363 0000A8FE BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 15364 0000A903 E81AA60000              	call malloc                         ; Allocate memory, result in rax
 15365 0000A908 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 15366 0000A90B 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 15367 0000A90F 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 15368 0000A913 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 15369 0000A916 49FFC9                  	dec r9                              ; args index minus 1
 15370 0000A919 49FFCE                  	dec r14                             ; next iteration
 15371 0000A91C EBD5                    	jmp .L_make_lambda_opt_arg_list_000e
 15372                                  .L_make_lambda_opt_stack_fixed_000e:
 15373 0000A91E 4D89FE                  	mov r14, r15 ; r14 = num args
 15374 0000A921 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 15375 0000A924 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 15376 0000A928 41BA01000000            	mov r10, 1; r10 = num of params
 15377 0000A92E 4D29D6                  	sub r14, r10 ; r14 = extra args
 15378 0000A931 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 15379 0000A934 49FFCE                  	dec r14 ; how much we need to change stack wise?
 15380 0000A937 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 15381 0000A93C EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000e
 15382                                  .L_lambda_opt_stack_shrink_loop_more_000e:
 15383 0000A93E 4983F800                	cmp r8, 0
 15384 0000A942 7E15                    	jle .L_make_lambda_opt_more_finish_000e
 15385 0000A944 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 15386 0000A948 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 15387 0000A94C 4D8D26                  	lea r12, [r14]
 15388 0000A94F 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 15389 0000A954 49FFC8                  	dec r8 ; next iteration
 15390 0000A957 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000e
 15391                                  .L_make_lambda_opt_more_finish_000e:
 15392 0000A959 4D89F8                  	mov r8, r15 ; num of args
 15393 0000A95C 41BA01000000            	mov r10, 1
 15394 0000A962 4D29D0                  	sub r8, r10 ; num of new args
 15395 0000A965 49FFC0                  	inc r8
 15396 0000A968 4C89442420              	mov qword [rsp + 8 * 4], r8
 15397 0000A96D 4883C410                	add rsp, 8 * 2  ; 
 15398 0000A971 EB00                    	jmp .L_lambda_opt_stack_adjusted_000e
 15399                                  .L_lambda_opt_stack_adjusted_000e:
 15400 0000A973 C8000000                	enter 0, 0
 15401                                  	; Initiating tail-call optimization
 15402 0000A977 488B4528                	mov rax, PARAM(1)	; param s
 15403 0000A97B 50                      	push rax
 15404 0000A97C 488B4520                	mov rax, PARAM(0)	; param a
 15405 0000A980 50                      	push rax
 15406 0000A981 6A02                    	push 2	; Number of arguments
 15407 0000A983 488B4510                	mov rax, ENV
 15408 0000A987 488B00                  	mov rax, qword [rax + 8 * 0]
 15409 0000A98A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15410 0000A98D 488B00                  	mov rax, qword [rax]
 15411 0000A990 803804                  	cmp byte [rax], T_closure
 15412 0000A993 0F85E0A40000            	jne L_error_non_closure
 15413 0000A999 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15414                                  
 15415                                  	; Reclaiming the current stack frame
 15416 0000A99C FF7508                  	push qword [rbp + 8]
 15417 0000A99F FF7500                  	push qword [rbp]
 15418 0000A9A2 41BA06000000            	mov r10, 2 + 4
 15419 0000A9A8 4C8B4518                	mov r8, COUNT
 15420 0000A9AC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15421 0000A9B1 4C8D4DF8                	lea r9, [rbp - 8]
 15422                                  .L_tc_recycle_frame_loop_008a:
 15423 0000A9B5 4983FA00                	cmp r10, 0
 15424 0000A9B9 7413                    	je .L_tc_recycle_frame_done_008a
 15425 0000A9BB 4D8B19                  	mov r11, qword [r9]
 15426 0000A9BE 4D8918                  	mov qword [r8], r11
 15427 0000A9C1 49FFCA                  	dec r10
 15428 0000A9C4 4983E808                	sub r8, 8
 15429 0000A9C8 4983E908                	sub r9, 8
 15430 0000A9CC EBE7                    	jmp .L_tc_recycle_frame_loop_008a
 15431                                  .L_tc_recycle_frame_done_008a:
 15432 0000A9CE 498D6008                	lea rsp, [r8 + 8]
 15433 0000A9D2 5D                      	pop rbp
 15434 0000A9D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15435 0000A9D6 C9                      	leave
 15436 0000A9D7 C22000                  	ret AND_KILL_FRAME(2)
 15437                                  .L_lambda_opt_end_000e:	; new closure is in rax
 15438 0000A9DA C9                      	leave
 15439 0000A9DB C21800                  	ret AND_KILL_FRAME(1)
 15440                                  .L_lambda_simple_end_0055:	; new closure is in rax
 15441 0000A9DE 803804                  	cmp byte [rax], T_closure
 15442 0000A9E1 0F8592A40000            	jne L_error_non_closure
 15443 0000A9E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15444                                  
 15445                                  	; Reclaiming the current stack frame
 15446 0000A9EA FF7508                  	push qword [rbp + 8]
 15447 0000A9ED FF7500                  	push qword [rbp]
 15448 0000A9F0 41BA05000000            	mov r10, 1 + 4
 15449 0000A9F6 4C8B4518                	mov r8, COUNT
 15450 0000A9FA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15451 0000A9FF 4C8D4DF8                	lea r9, [rbp - 8]
 15452                                  .L_tc_recycle_frame_loop_008b:
 15453 0000AA03 4983FA00                	cmp r10, 0
 15454 0000AA07 7413                    	je .L_tc_recycle_frame_done_008b
 15455 0000AA09 4D8B19                  	mov r11, qword [r9]
 15456 0000AA0C 4D8918                  	mov qword [r8], r11
 15457 0000AA0F 49FFCA                  	dec r10
 15458 0000AA12 4983E808                	sub r8, 8
 15459 0000AA16 4983E908                	sub r9, 8
 15460 0000AA1A EBE7                    	jmp .L_tc_recycle_frame_loop_008b
 15461                                  .L_tc_recycle_frame_done_008b:
 15462 0000AA1C 498D6008                	lea rsp, [r8 + 8]
 15463 0000AA20 5D                      	pop rbp
 15464 0000AA21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15465 0000AA24 C9                      	leave
 15466 0000AA25 C21800                  	ret AND_KILL_FRAME(1)
 15467                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15468 0000AA28 50                      	push rax
 15469 0000AA29 6A01                    	push 1	; Number of arguments
 15470 0000AA2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15471 0000AA30 E8EDA40000              	call malloc
 15472 0000AA35 50                      	push rax
 15473 0000AA36 BF08000000              	mov rdi, 8 * 1	; new rib
 15474 0000AA3B E8E2A40000              	call malloc
 15475 0000AA40 50                      	push rax
 15476 0000AA41 BF40000000              	mov rdi, 8 * 8	; extended env
 15477 0000AA46 E8D7A40000              	call malloc
 15478 0000AA4B 488B7D10                	mov rdi, ENV
 15479 0000AA4F BE00000000              	mov rsi, 0
 15480 0000AA54 BA01000000              	mov rdx, 1
 15481                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15482 0000AA59 4883FE07                	cmp rsi, 7
 15483 0000AA5D 7410                    	je .L_lambda_simple_env_end_0057
 15484 0000AA5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15485 0000AA63 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15486 0000AA67 48FFC6                  	inc rsi
 15487 0000AA6A 48FFC2                  	inc rdx
 15488 0000AA6D EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15489                                  .L_lambda_simple_env_end_0057:
 15490 0000AA6F 5B                      	pop rbx
 15491 0000AA70 BE00000000              	mov rsi, 0
 15492                                  .L_lambda_simple_params_loop_0057:	; copy params
 15493 0000AA75 4883FE01                	cmp rsi, 1
 15494 0000AA79 740E                    	je .L_lambda_simple_params_end_0057
 15495 0000AA7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15496 0000AA80 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15497 0000AA84 48FFC6                  	inc rsi
 15498 0000AA87 EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15499                                  .L_lambda_simple_params_end_0057:
 15500 0000AA89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15501 0000AA8C 4889C3                  	mov rbx, rax
 15502 0000AA8F 58                      	pop rax
 15503 0000AA90 C60004                  	mov byte [rax], T_closure
 15504 0000AA93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15505 0000AA97 48C74009[A4AA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15506 0000AA9F E919010000              	jmp .L_lambda_simple_end_0057
 15507                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15508 0000AAA4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15509 0000AAAA 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15510 0000AAAC FF742410                	push qword [rsp + 8 * 2]
 15511 0000AAB0 6A01                    	push 1
 15512 0000AAB2 E924A40000              	jmp L_error_incorrect_arity_simple
 15513                                  .L_lambda_simple_arity_check_ok_0057:
 15514 0000AAB7 C8000000                	enter 0, 0
 15515                                  	; preparing a non-tail-call
 15516 0000AABB 488B4510                	mov rax, ENV
 15517 0000AABF 488B4020                	mov rax, qword [rax + 8 * 4]
 15518 0000AAC3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15519 0000AAC6 50                      	push rax
 15520 0000AAC7 6A01                    	push 1	; arg count
 15521 0000AAC9 488B4520                	mov rax, PARAM(0)	; param make-run
 15522 0000AACD 803804                  	cmp byte [rax], T_closure
 15523 0000AAD0 0F85A3A30000            	jne L_error_non_closure
 15524 0000AAD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15525 0000AAD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15526 0000AADC 48890425[090E0000]      	mov qword [free_var_4], rax
 15527 0000AAE4 48B8-                   	mov rax, sob_void
 15527 0000AAE6 [0000000000000000] 
 15528                                  
 15529                                  	; preparing a non-tail-call
 15530 0000AAEE 488B4510                	mov rax, ENV
 15531 0000AAF2 488B00                  	mov rax, qword [rax + 8 * 0]
 15532 0000AAF5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 15533 0000AAF8 50                      	push rax
 15534 0000AAF9 6A01                    	push 1	; arg count
 15535 0000AAFB 488B4520                	mov rax, PARAM(0)	; param make-run
 15536 0000AAFF 803804                  	cmp byte [rax], T_closure
 15537 0000AB02 0F8571A30000            	jne L_error_non_closure
 15538 0000AB08 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15539 0000AB0B FF5009                  	call SOB_CLOSURE_CODE(rax)
 15540 0000AB0E 48890425[1A0E0000]      	mov qword [free_var_5], rax
 15541 0000AB16 48B8-                   	mov rax, sob_void
 15541 0000AB18 [0000000000000000] 
 15542                                  
 15543                                  	; preparing a non-tail-call
 15544 0000AB20 488B4510                	mov rax, ENV
 15545 0000AB24 488B4008                	mov rax, qword [rax + 8 * 1]
 15546 0000AB28 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15547 0000AB2B 50                      	push rax
 15548 0000AB2C 6A01                    	push 1	; arg count
 15549 0000AB2E 488B4520                	mov rax, PARAM(0)	; param make-run
 15550 0000AB32 803804                  	cmp byte [rax], T_closure
 15551 0000AB35 0F853EA30000            	jne L_error_non_closure
 15552 0000AB3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15553 0000AB3E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15554 0000AB41 48890425[3C0E0000]      	mov qword [free_var_7], rax
 15555 0000AB49 48B8-                   	mov rax, sob_void
 15555 0000AB4B [0000000000000000] 
 15556                                  
 15557                                  	; preparing a non-tail-call
 15558 0000AB53 488B4510                	mov rax, ENV
 15559 0000AB57 488B4010                	mov rax, qword [rax + 8 * 2]
 15560 0000AB5B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 15561 0000AB5E 50                      	push rax
 15562 0000AB5F 6A01                    	push 1	; arg count
 15563 0000AB61 488B4520                	mov rax, PARAM(0)	; param make-run
 15564 0000AB65 803804                  	cmp byte [rax], T_closure
 15565 0000AB68 0F850BA30000            	jne L_error_non_closure
 15566 0000AB6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15567 0000AB71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15568 0000AB74 48890425[4D0E0000]      	mov qword [free_var_8], rax
 15569 0000AB7C 48B8-                   	mov rax, sob_void
 15569 0000AB7E [0000000000000000] 
 15570                                  
 15571                                  	; preparing a non-tail-call
 15572 0000AB86 488B4510                	mov rax, ENV
 15573 0000AB8A 488B4018                	mov rax, qword [rax + 8 * 3]
 15574 0000AB8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 15575 0000AB91 50                      	push rax
 15576 0000AB92 6A01                    	push 1	; arg count
 15577 0000AB94 488B4520                	mov rax, PARAM(0)	; param make-run
 15578 0000AB98 803804                  	cmp byte [rax], T_closure
 15579 0000AB9B 0F85D8A20000            	jne L_error_non_closure
 15580 0000ABA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15581 0000ABA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15582 0000ABA7 48890425[2B0E0000]      	mov qword [free_var_6], rax
 15583 0000ABAF 48B8-                   	mov rax, sob_void
 15583 0000ABB1 [0000000000000000] 
 15584 0000ABB9 C9                      	leave
 15585 0000ABBA C21800                  	ret AND_KILL_FRAME(1)
 15586                                  .L_lambda_simple_end_0057:	; new closure is in rax
 15587 0000ABBD 803804                  	cmp byte [rax], T_closure
 15588 0000ABC0 0F85B3A20000            	jne L_error_non_closure
 15589 0000ABC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15590                                  
 15591                                  	; Reclaiming the current stack frame
 15592 0000ABC9 FF7508                  	push qword [rbp + 8]
 15593 0000ABCC FF7500                  	push qword [rbp]
 15594 0000ABCF 41BA05000000            	mov r10, 1 + 4
 15595 0000ABD5 4C8B4518                	mov r8, COUNT
 15596 0000ABD9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15597 0000ABDE 4C8D4DF8                	lea r9, [rbp - 8]
 15598                                  .L_tc_recycle_frame_loop_008c:
 15599 0000ABE2 4983FA00                	cmp r10, 0
 15600 0000ABE6 7413                    	je .L_tc_recycle_frame_done_008c
 15601 0000ABE8 4D8B19                  	mov r11, qword [r9]
 15602 0000ABEB 4D8918                  	mov qword [r8], r11
 15603 0000ABEE 49FFCA                  	dec r10
 15604 0000ABF1 4983E808                	sub r8, 8
 15605 0000ABF5 4983E908                	sub r9, 8
 15606 0000ABF9 EBE7                    	jmp .L_tc_recycle_frame_loop_008c
 15607                                  .L_tc_recycle_frame_done_008c:
 15608 0000ABFB 498D6008                	lea rsp, [r8 + 8]
 15609 0000ABFF 5D                      	pop rbp
 15610 0000AC00 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15611 0000AC03 C9                      	leave
 15612 0000AC04 C21800                  	ret AND_KILL_FRAME(1)
 15613                                  .L_lambda_simple_end_0053:	; new closure is in rax
 15614 0000AC07 803804                  	cmp byte [rax], T_closure
 15615 0000AC0A 0F8569A20000            	jne L_error_non_closure
 15616 0000AC10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15617                                  
 15618                                  	; Reclaiming the current stack frame
 15619 0000AC13 FF7508                  	push qword [rbp + 8]
 15620 0000AC16 FF7500                  	push qword [rbp]
 15621 0000AC19 41BA05000000            	mov r10, 1 + 4
 15622 0000AC1F 4C8B4518                	mov r8, COUNT
 15623 0000AC23 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15624 0000AC28 4C8D4DF8                	lea r9, [rbp - 8]
 15625                                  .L_tc_recycle_frame_loop_008d:
 15626 0000AC2C 4983FA00                	cmp r10, 0
 15627 0000AC30 7413                    	je .L_tc_recycle_frame_done_008d
 15628 0000AC32 4D8B19                  	mov r11, qword [r9]
 15629 0000AC35 4D8918                  	mov qword [r8], r11
 15630 0000AC38 49FFCA                  	dec r10
 15631 0000AC3B 4983E808                	sub r8, 8
 15632 0000AC3F 4983E908                	sub r9, 8
 15633 0000AC43 EBE7                    	jmp .L_tc_recycle_frame_loop_008d
 15634                                  .L_tc_recycle_frame_done_008d:
 15635 0000AC45 498D6008                	lea rsp, [r8 + 8]
 15636 0000AC49 5D                      	pop rbp
 15637 0000AC4A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15638 0000AC4D C9                      	leave
 15639 0000AC4E C21800                  	ret AND_KILL_FRAME(1)
 15640                                  .L_lambda_simple_end_0051:	; new closure is in rax
 15641 0000AC51 803804                  	cmp byte [rax], T_closure
 15642 0000AC54 0F851FA20000            	jne L_error_non_closure
 15643 0000AC5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15644                                  
 15645                                  	; Reclaiming the current stack frame
 15646 0000AC5D FF7508                  	push qword [rbp + 8]
 15647 0000AC60 FF7500                  	push qword [rbp]
 15648 0000AC63 41BA05000000            	mov r10, 1 + 4
 15649 0000AC69 4C8B4518                	mov r8, COUNT
 15650 0000AC6D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15651 0000AC72 4C8D4DF8                	lea r9, [rbp - 8]
 15652                                  .L_tc_recycle_frame_loop_008e:
 15653 0000AC76 4983FA00                	cmp r10, 0
 15654 0000AC7A 7413                    	je .L_tc_recycle_frame_done_008e
 15655 0000AC7C 4D8B19                  	mov r11, qword [r9]
 15656 0000AC7F 4D8918                  	mov qword [r8], r11
 15657 0000AC82 49FFCA                  	dec r10
 15658 0000AC85 4983E808                	sub r8, 8
 15659 0000AC89 4983E908                	sub r9, 8
 15660 0000AC8D EBE7                    	jmp .L_tc_recycle_frame_loop_008e
 15661                                  .L_tc_recycle_frame_done_008e:
 15662 0000AC8F 498D6008                	lea rsp, [r8 + 8]
 15663 0000AC93 5D                      	pop rbp
 15664 0000AC94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15665 0000AC97 C9                      	leave
 15666 0000AC98 C21800                  	ret AND_KILL_FRAME(1)
 15667                                  .L_lambda_simple_end_004f:	; new closure is in rax
 15668 0000AC9B 803804                  	cmp byte [rax], T_closure
 15669 0000AC9E 0F85D5A10000            	jne L_error_non_closure
 15670 0000ACA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15671                                  
 15672                                  	; Reclaiming the current stack frame
 15673 0000ACA7 FF7508                  	push qword [rbp + 8]
 15674 0000ACAA FF7500                  	push qword [rbp]
 15675 0000ACAD 41BA05000000            	mov r10, 1 + 4
 15676 0000ACB3 4C8B4518                	mov r8, COUNT
 15677 0000ACB7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15678 0000ACBC 4C8D4DF8                	lea r9, [rbp - 8]
 15679                                  .L_tc_recycle_frame_loop_008f:
 15680 0000ACC0 4983FA00                	cmp r10, 0
 15681 0000ACC4 7413                    	je .L_tc_recycle_frame_done_008f
 15682 0000ACC6 4D8B19                  	mov r11, qword [r9]
 15683 0000ACC9 4D8918                  	mov qword [r8], r11
 15684 0000ACCC 49FFCA                  	dec r10
 15685 0000ACCF 4983E808                	sub r8, 8
 15686 0000ACD3 4983E908                	sub r9, 8
 15687 0000ACD7 EBE7                    	jmp .L_tc_recycle_frame_loop_008f
 15688                                  .L_tc_recycle_frame_done_008f:
 15689 0000ACD9 498D6008                	lea rsp, [r8 + 8]
 15690 0000ACDD 5D                      	pop rbp
 15691 0000ACDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15692 0000ACE1 C9                      	leave
 15693 0000ACE2 C21800                  	ret AND_KILL_FRAME(1)
 15694                                  .L_lambda_simple_end_004d:	; new closure is in rax
 15695 0000ACE5 803804                  	cmp byte [rax], T_closure
 15696 0000ACE8 0F858BA10000            	jne L_error_non_closure
 15697 0000ACEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15698                                  
 15699                                  	; Reclaiming the current stack frame
 15700 0000ACF1 FF7508                  	push qword [rbp + 8]
 15701 0000ACF4 FF7500                  	push qword [rbp]
 15702 0000ACF7 41BA05000000            	mov r10, 1 + 4
 15703 0000ACFD 4C8B4518                	mov r8, COUNT
 15704 0000AD01 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15705 0000AD06 4C8D4DF8                	lea r9, [rbp - 8]
 15706                                  .L_tc_recycle_frame_loop_0090:
 15707 0000AD0A 4983FA00                	cmp r10, 0
 15708 0000AD0E 7413                    	je .L_tc_recycle_frame_done_0090
 15709 0000AD10 4D8B19                  	mov r11, qword [r9]
 15710 0000AD13 4D8918                  	mov qword [r8], r11
 15711 0000AD16 49FFCA                  	dec r10
 15712 0000AD19 4983E808                	sub r8, 8
 15713 0000AD1D 4983E908                	sub r9, 8
 15714 0000AD21 EBE7                    	jmp .L_tc_recycle_frame_loop_0090
 15715                                  .L_tc_recycle_frame_done_0090:
 15716 0000AD23 498D6008                	lea rsp, [r8 + 8]
 15717 0000AD27 5D                      	pop rbp
 15718 0000AD28 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15719 0000AD2B C9                      	leave
 15720 0000AD2C C21800                  	ret AND_KILL_FRAME(1)
 15721                                  .L_lambda_simple_end_004c:	; new closure is in rax
 15722 0000AD2F 803804                  	cmp byte [rax], T_closure
 15723 0000AD32 0F8541A10000            	jne L_error_non_closure
 15724 0000AD38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15725                                  
 15726                                  	; Reclaiming the current stack frame
 15727 0000AD3B FF7508                  	push qword [rbp + 8]
 15728 0000AD3E FF7500                  	push qword [rbp]
 15729 0000AD41 41BA05000000            	mov r10, 1 + 4
 15730 0000AD47 4C8B4518                	mov r8, COUNT
 15731 0000AD4B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15732 0000AD50 4C8D4DF8                	lea r9, [rbp - 8]
 15733                                  .L_tc_recycle_frame_loop_0091:
 15734 0000AD54 4983FA00                	cmp r10, 0
 15735 0000AD58 7413                    	je .L_tc_recycle_frame_done_0091
 15736 0000AD5A 4D8B19                  	mov r11, qword [r9]
 15737 0000AD5D 4D8918                  	mov qword [r8], r11
 15738 0000AD60 49FFCA                  	dec r10
 15739 0000AD63 4983E808                	sub r8, 8
 15740 0000AD67 4983E908                	sub r9, 8
 15741 0000AD6B EBE7                    	jmp .L_tc_recycle_frame_loop_0091
 15742                                  .L_tc_recycle_frame_done_0091:
 15743 0000AD6D 498D6008                	lea rsp, [r8 + 8]
 15744 0000AD71 5D                      	pop rbp
 15745 0000AD72 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15746 0000AD75 C9                      	leave
 15747 0000AD76 C21800                  	ret AND_KILL_FRAME(1)
 15748                                  .L_lambda_simple_end_004b:	; new closure is in rax
 15749 0000AD79 803804                  	cmp byte [rax], T_closure
 15750 0000AD7C 0F85F7A00000            	jne L_error_non_closure
 15751 0000AD82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15752                                  
 15753                                  	; Reclaiming the current stack frame
 15754 0000AD85 FF7508                  	push qword [rbp + 8]
 15755 0000AD88 FF7500                  	push qword [rbp]
 15756 0000AD8B 41BA05000000            	mov r10, 1 + 4
 15757 0000AD91 4C8B4518                	mov r8, COUNT
 15758 0000AD95 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15759 0000AD9A 4C8D4DF8                	lea r9, [rbp - 8]
 15760                                  .L_tc_recycle_frame_loop_0092:
 15761 0000AD9E 4983FA00                	cmp r10, 0
 15762 0000ADA2 7413                    	je .L_tc_recycle_frame_done_0092
 15763 0000ADA4 4D8B19                  	mov r11, qword [r9]
 15764 0000ADA7 4D8918                  	mov qword [r8], r11
 15765 0000ADAA 49FFCA                  	dec r10
 15766 0000ADAD 4983E808                	sub r8, 8
 15767 0000ADB1 4983E908                	sub r9, 8
 15768 0000ADB5 EBE7                    	jmp .L_tc_recycle_frame_loop_0092
 15769                                  .L_tc_recycle_frame_done_0092:
 15770 0000ADB7 498D6008                	lea rsp, [r8 + 8]
 15771 0000ADBB 5D                      	pop rbp
 15772 0000ADBC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15773 0000ADBF C9                      	leave
 15774 0000ADC0 C21800                  	ret AND_KILL_FRAME(1)
 15775                                  .L_lambda_simple_end_0048:	; new closure is in rax
 15776 0000ADC3 803804                  	cmp byte [rax], T_closure
 15777 0000ADC6 0F85ADA00000            	jne L_error_non_closure
 15778 0000ADCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15779 0000ADCF FF5009                  	call SOB_CLOSURE_CODE(rax)
 15780                                  
 15781 0000ADD2 4889C7                  	mov rdi, rax
 15782 0000ADD5 E89DA30000              	call print_sexpr_if_not_void
 15783 0000ADDA 48B8-                   	mov rax, L_constants + 0
 15783 0000ADDC [0000000000000000] 
 15784 0000ADE4 48890425[AF120000]      	mov qword [free_var_74], rax
 15785 0000ADEC 48B8-                   	mov rax, sob_void
 15785 0000ADEE [0000000000000000] 
 15786                                  
 15787 0000ADF6 4889C7                  	mov rdi, rax
 15788 0000ADF9 E879A30000              	call print_sexpr_if_not_void
 15789 0000ADFE 48B8-                   	mov rax, L_constants + 0
 15789 0000AE00 [0000000000000000] 
 15790 0000AE08 48890425[9E120000]      	mov qword [free_var_73], rax
 15791 0000AE10 48B8-                   	mov rax, sob_void
 15791 0000AE12 [0000000000000000] 
 15792                                  
 15793 0000AE1A 4889C7                  	mov rdi, rax
 15794 0000AE1D E855A30000              	call print_sexpr_if_not_void
 15795 0000AE22 48B8-                   	mov rax, L_constants + 0
 15795 0000AE24 [0000000000000000] 
 15796 0000AE2C 48890425[C0120000]      	mov qword [free_var_75], rax
 15797 0000AE34 48B8-                   	mov rax, sob_void
 15797 0000AE36 [0000000000000000] 
 15798                                  
 15799 0000AE3E 4889C7                  	mov rdi, rax
 15800 0000AE41 E831A30000              	call print_sexpr_if_not_void
 15801 0000AE46 48B8-                   	mov rax, L_constants + 0
 15801 0000AE48 [0000000000000000] 
 15802 0000AE50 48890425[E2120000]      	mov qword [free_var_77], rax
 15803 0000AE58 48B8-                   	mov rax, sob_void
 15803 0000AE5A [0000000000000000] 
 15804                                  
 15805 0000AE62 4889C7                  	mov rdi, rax
 15806 0000AE65 E80DA30000              	call print_sexpr_if_not_void
 15807 0000AE6A 48B8-                   	mov rax, L_constants + 0
 15807 0000AE6C [0000000000000000] 
 15808 0000AE74 48890425[D1120000]      	mov qword [free_var_76], rax
 15809 0000AE7C 48B8-                   	mov rax, sob_void
 15809 0000AE7E [0000000000000000] 
 15810                                  
 15811 0000AE86 4889C7                  	mov rdi, rax
 15812 0000AE89 E8E9A20000              	call print_sexpr_if_not_void
 15813                                  	; preparing a non-tail-call
 15814 0000AE8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15815 0000AE93 E88AA00000              	call malloc
 15816 0000AE98 50                      	push rax
 15817 0000AE99 BF00000000              	mov rdi, 8 * 0	; new rib
 15818 0000AE9E E87FA00000              	call malloc
 15819 0000AEA3 50                      	push rax
 15820 0000AEA4 BF08000000              	mov rdi, 8 * 1	; extended env
 15821 0000AEA9 E874A00000              	call malloc
 15822 0000AEAE 488B7D10                	mov rdi, ENV
 15823 0000AEB2 BE00000000              	mov rsi, 0
 15824 0000AEB7 BA01000000              	mov rdx, 1
 15825                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 15826 0000AEBC 4883FE00                	cmp rsi, 0
 15827 0000AEC0 7410                    	je .L_lambda_simple_env_end_0058
 15828 0000AEC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15829 0000AEC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15830 0000AECA 48FFC6                  	inc rsi
 15831 0000AECD 48FFC2                  	inc rdx
 15832 0000AED0 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 15833                                  .L_lambda_simple_env_end_0058:
 15834 0000AED2 5B                      	pop rbx
 15835 0000AED3 BE00000000              	mov rsi, 0
 15836                                  .L_lambda_simple_params_loop_0058:	; copy params
 15837 0000AED8 4883FE00                	cmp rsi, 0
 15838 0000AEDC 740E                    	je .L_lambda_simple_params_end_0058
 15839 0000AEDE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15840 0000AEE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15841 0000AEE7 48FFC6                  	inc rsi
 15842 0000AEEA EBEC                    	jmp .L_lambda_simple_params_loop_0058
 15843                                  .L_lambda_simple_params_end_0058:
 15844 0000AEEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15845 0000AEEF 4889C3                  	mov rbx, rax
 15846 0000AEF2 58                      	pop rax
 15847 0000AEF3 C60004                  	mov byte [rax], T_closure
 15848 0000AEF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15849 0000AEFA 48C74009[07AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 15850 0000AF02 E931020000              	jmp .L_lambda_simple_end_0058
 15851                                  .L_lambda_simple_code_0058:	; lambda-simple body
 15852 0000AF07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15853 0000AF0D 740B                    	je .L_lambda_simple_arity_check_ok_0058
 15854 0000AF0F FF742410                	push qword [rsp + 8 * 2]
 15855 0000AF13 6A01                    	push 1
 15856 0000AF15 E9C19F0000              	jmp L_error_incorrect_arity_simple
 15857                                  .L_lambda_simple_arity_check_ok_0058:
 15858 0000AF1A C8000000                	enter 0, 0
 15859 0000AF1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15860 0000AF23 E8FA9F0000              	call malloc
 15861 0000AF28 50                      	push rax
 15862 0000AF29 BF08000000              	mov rdi, 8 * 1	; new rib
 15863 0000AF2E E8EF9F0000              	call malloc
 15864 0000AF33 50                      	push rax
 15865 0000AF34 BF10000000              	mov rdi, 8 * 2	; extended env
 15866 0000AF39 E8E49F0000              	call malloc
 15867 0000AF3E 488B7D10                	mov rdi, ENV
 15868 0000AF42 BE00000000              	mov rsi, 0
 15869 0000AF47 BA01000000              	mov rdx, 1
 15870                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 15871 0000AF4C 4883FE01                	cmp rsi, 1
 15872 0000AF50 7410                    	je .L_lambda_opt_env_end_000f
 15873 0000AF52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15874 0000AF56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15875 0000AF5A 48FFC6                  	inc rsi
 15876 0000AF5D 48FFC2                  	inc rdx
 15877 0000AF60 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 15878                                  .L_lambda_opt_env_end_000f:
 15879 0000AF62 5B                      	pop rbx
 15880 0000AF63 BE00000000              	mov rsi, 0
 15881                                  .L_lambda_opt_params_loop_000f:	; copy params
 15882 0000AF68 4883FE01                	cmp rsi, 1
 15883 0000AF6C 740E                    	je .L_lambda_opt_params_end_000f
 15884 0000AF6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15885 0000AF73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15886 0000AF77 48FFC6                  	inc rsi
 15887 0000AF7A EBEC                    	jmp .L_lambda_opt_params_loop_000f
 15888                                  .L_lambda_opt_params_end_000f:
 15889 0000AF7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15890 0000AF7F 4889C3                  	mov rbx, rax
 15891 0000AF82 58                      	pop rax
 15892 0000AF83 C60004                  	mov byte [rax], T_closure
 15893 0000AF86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15894 0000AF8A 48C74009[97AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 15895 0000AF92 E99D010000              	jmp .L_lambda_opt_end_000f
 15896                                  .L_lambda_opt_code_000f:
 15897 0000AF97 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 15898 0000AF9C 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 15899 0000AFA0 7407                    	je .L_lambda_opt_arity_check_exact_000f	; Jump if arity matches
 15900 0000AFA2 7F4C                    	jg .L_lambda_opt_arity_check_more_000f	; Jump if more arguments passed
 15901 0000AFA4 E9469F0000              	jmp L_error_incorrect_arity_opt
 15902                                  .L_lambda_opt_arity_check_exact_000f:
 15903 0000AFA9 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 15904 0000AFAC 4983C603                	add r14, 3 ; add 3 first stack values
 15905 0000AFB0 41BF00000000            	mov r15, 0 ; r15 = index
 15906 0000AFB6 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 15907 0000AFBA 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 15908 0000AFC2 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 15909                                  .L_lambda_opt_stack_shrink_loop_000f:
 15910 0000AFC4 4983FE00                	cmp r14, 0
 15911 0000AFC8 7E11                    	jle .L_make_lambda_opt_exact_finish_000f
 15912 0000AFCA 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 15913 0000AFCF 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 15914 0000AFD3 49FFCE                  	dec r14 ; next loop value
 15915 0000AFD6 49FFC7                  	inc r15 ; update i
 15916 0000AFD9 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 15917                                  .L_make_lambda_opt_exact_finish_000f:
 15918 0000AFDB 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 15919 0000AFE3 49FFC2                  	inc r10
 15920 0000AFE6 4C89542410              	mov qword [rsp + 8 * 2], r10
 15921 0000AFEB E99E000000              	jmp .L_lambda_opt_stack_adjusted_000f
 15922                                  .L_lambda_opt_arity_check_more_000f:
 15923 0000AFF0 4D89D6                  	mov r14, r10 ; r14 = num args
 15924 0000AFF3 4D89D7                  	mov r15, r10 ; r15 = num args
 15925 0000AFF6 41B900000000            	mov r9, 0; r9 = number of params 
 15926 0000AFFC 4D29CE                  	sub r14, r9 ; r14 = extra args
 15927 0000AFFF 4D01F1                  	add r9, r14 ; r9 = num args
 15928 0000B002 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 15928 0000B004 [0100000000000000] 
 15929 0000B00C EB00                    	jmp .L_make_lambda_opt_arg_list_000f
 15930                                  .L_make_lambda_opt_arg_list_000f:
 15931 0000B00E 4983FE00                	cmp r14, 0
 15932 0000B012 7E25                    	jle .L_make_lambda_opt_stack_fixed_000f
 15933 0000B014 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 15934 0000B019 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 15935 0000B01E E8FF9E0000              	call malloc                         ; Allocate memory, result in rax
 15936 0000B023 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 15937 0000B026 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 15938 0000B02A 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 15939 0000B02E 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 15940 0000B031 49FFC9                  	dec r9                              ; args index minus 1
 15941 0000B034 49FFCE                  	dec r14                             ; next iteration
 15942 0000B037 EBD5                    	jmp .L_make_lambda_opt_arg_list_000f
 15943                                  .L_make_lambda_opt_stack_fixed_000f:
 15944 0000B039 4D89FE                  	mov r14, r15 ; r14 = num args
 15945 0000B03C 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 15946 0000B03F 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 15947 0000B043 41BA00000000            	mov r10, 0; r10 = num of params
 15948 0000B049 4D29D6                  	sub r14, r10 ; r14 = extra args
 15949 0000B04C 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 15950 0000B04F 49FFCE                  	dec r14 ; how much we need to change stack wise?
 15951 0000B052 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 15952 0000B057 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_000f
 15953                                  .L_lambda_opt_stack_shrink_loop_more_000f:
 15954 0000B059 4983F800                	cmp r8, 0
 15955 0000B05D 7E15                    	jle .L_make_lambda_opt_more_finish_000f
 15956 0000B05F 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 15957 0000B063 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 15958 0000B067 4D8D26                  	lea r12, [r14]
 15959 0000B06A 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 15960 0000B06F 49FFC8                  	dec r8 ; next iteration
 15961 0000B072 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_000f
 15962                                  .L_make_lambda_opt_more_finish_000f:
 15963 0000B074 4D89F8                  	mov r8, r15 ; num of args
 15964 0000B077 41BA00000000            	mov r10, 0
 15965 0000B07D 4D29D0                  	sub r8, r10 ; num of new args
 15966 0000B080 49FFC0                  	inc r8
 15967 0000B083 4C89442420              	mov qword [rsp + 8 * 4], r8
 15968 0000B088 4883C410                	add rsp, 8 * 2  ; 
 15969 0000B08C EB00                    	jmp .L_lambda_opt_stack_adjusted_000f
 15970                                  .L_lambda_opt_stack_adjusted_000f:
 15971 0000B08E C8000000                	enter 0, 0
 15972                                  	; Initiating tail-call optimization
 15973                                  	; preparing a non-tail-call
 15974 0000B092 488B4520                	mov rax, PARAM(0)	; param s
 15975 0000B096 50                      	push rax
 15976 0000B097 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 15977 0000B09F 803805                  	cmp byte [rax], T_undefined
 15978 0000B0A2 0F844D9D0000            	je L_error_fvar_undefined
 15979 0000B0A8 50                      	push rax
 15980 0000B0A9 6A02                    	push 2	; arg count
 15981 0000B0AB 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 15982 0000B0B3 803805                  	cmp byte [rax], T_undefined
 15983 0000B0B6 0F84399D0000            	je L_error_fvar_undefined
 15984 0000B0BC 803804                  	cmp byte [rax], T_closure
 15985 0000B0BF 0F85B49D0000            	jne L_error_non_closure
 15986 0000B0C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15987 0000B0C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15988 0000B0CB 50                      	push rax
 15989 0000B0CC 488B4510                	mov rax, ENV
 15990 0000B0D0 488B00                  	mov rax, qword [rax + 8 * 0]
 15991 0000B0D3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 15992 0000B0D6 50                      	push rax
 15993 0000B0D7 6A02                    	push 2	; Number of arguments
 15994 0000B0D9 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 15995 0000B0E1 803805                  	cmp byte [rax], T_undefined
 15996 0000B0E4 0F840B9D0000            	je L_error_fvar_undefined
 15997 0000B0EA 803804                  	cmp byte [rax], T_closure
 15998 0000B0ED 0F85869D0000            	jne L_error_non_closure
 15999 0000B0F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16000                                  
 16001                                  	; Reclaiming the current stack frame
 16002 0000B0F6 FF7508                  	push qword [rbp + 8]
 16003 0000B0F9 FF7500                  	push qword [rbp]
 16004 0000B0FC 41BA06000000            	mov r10, 2 + 4
 16005 0000B102 4C8B4518                	mov r8, COUNT
 16006 0000B106 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16007 0000B10B 4C8D4DF8                	lea r9, [rbp - 8]
 16008                                  .L_tc_recycle_frame_loop_0093:
 16009 0000B10F 4983FA00                	cmp r10, 0
 16010 0000B113 7413                    	je .L_tc_recycle_frame_done_0093
 16011 0000B115 4D8B19                  	mov r11, qword [r9]
 16012 0000B118 4D8918                  	mov qword [r8], r11
 16013 0000B11B 49FFCA                  	dec r10
 16014 0000B11E 4983E808                	sub r8, 8
 16015 0000B122 4983E908                	sub r9, 8
 16016 0000B126 EBE7                    	jmp .L_tc_recycle_frame_loop_0093
 16017                                  .L_tc_recycle_frame_done_0093:
 16018 0000B128 498D6008                	lea rsp, [r8 + 8]
 16019 0000B12C 5D                      	pop rbp
 16020 0000B12D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16021 0000B130 C9                      	leave
 16022 0000B131 C21800                  	ret AND_KILL_FRAME(1)
 16023                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16024 0000B134 C9                      	leave
 16025 0000B135 C21800                  	ret AND_KILL_FRAME(1)
 16026                                  .L_lambda_simple_end_0058:	; new closure is in rax
 16027 0000B138 50                      	push rax
 16028 0000B139 6A01                    	push 1	; arg count
 16029 0000B13B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16030 0000B140 E8DD9D0000              	call malloc
 16031 0000B145 50                      	push rax
 16032 0000B146 BF00000000              	mov rdi, 8 * 0	; new rib
 16033 0000B14B E8D29D0000              	call malloc
 16034 0000B150 50                      	push rax
 16035 0000B151 BF08000000              	mov rdi, 8 * 1	; extended env
 16036 0000B156 E8C79D0000              	call malloc
 16037 0000B15B 488B7D10                	mov rdi, ENV
 16038 0000B15F BE00000000              	mov rsi, 0
 16039 0000B164 BA01000000              	mov rdx, 1
 16040                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 16041 0000B169 4883FE00                	cmp rsi, 0
 16042 0000B16D 7410                    	je .L_lambda_simple_env_end_0059
 16043 0000B16F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16044 0000B173 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16045 0000B177 48FFC6                  	inc rsi
 16046 0000B17A 48FFC2                  	inc rdx
 16047 0000B17D EBEA                    	jmp .L_lambda_simple_env_loop_0059
 16048                                  .L_lambda_simple_env_end_0059:
 16049 0000B17F 5B                      	pop rbx
 16050 0000B180 BE00000000              	mov rsi, 0
 16051                                  .L_lambda_simple_params_loop_0059:	; copy params
 16052 0000B185 4883FE00                	cmp rsi, 0
 16053 0000B189 740E                    	je .L_lambda_simple_params_end_0059
 16054 0000B18B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16055 0000B190 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16056 0000B194 48FFC6                  	inc rsi
 16057 0000B197 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 16058                                  .L_lambda_simple_params_end_0059:
 16059 0000B199 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16060 0000B19C 4889C3                  	mov rbx, rax
 16061 0000B19F 58                      	pop rax
 16062 0000B1A0 C60004                  	mov byte [rax], T_closure
 16063 0000B1A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16064 0000B1A7 48C74009[B4B10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 16065 0000B1AF E938010000              	jmp .L_lambda_simple_end_0059
 16066                                  .L_lambda_simple_code_0059:	; lambda-simple body
 16067 0000B1B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16068 0000B1BA 740B                    	je .L_lambda_simple_arity_check_ok_0059
 16069 0000B1BC FF742410                	push qword [rsp + 8 * 2]
 16070 0000B1C0 6A01                    	push 1
 16071 0000B1C2 E9149D0000              	jmp L_error_incorrect_arity_simple
 16072                                  .L_lambda_simple_arity_check_ok_0059:
 16073 0000B1C7 C8000000                	enter 0, 0
 16074                                  	; preparing a non-tail-call
 16075 0000B1CB 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16076 0000B1D3 803805                  	cmp byte [rax], T_undefined
 16077 0000B1D6 0F84199C0000            	je L_error_fvar_undefined
 16078 0000B1DC 50                      	push rax
 16079 0000B1DD 6A01                    	push 1	; arg count
 16080 0000B1DF 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16081 0000B1E3 803804                  	cmp byte [rax], T_closure
 16082 0000B1E6 0F858D9C0000            	jne L_error_non_closure
 16083 0000B1EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16084 0000B1EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 16085 0000B1F2 48890425[AF120000]      	mov qword [free_var_74], rax
 16086 0000B1FA 48B8-                   	mov rax, sob_void
 16086 0000B1FC [0000000000000000] 
 16087                                  
 16088                                  	; preparing a non-tail-call
 16089 0000B204 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16090 0000B20C 803805                  	cmp byte [rax], T_undefined
 16091 0000B20F 0F84E09B0000            	je L_error_fvar_undefined
 16092 0000B215 50                      	push rax
 16093 0000B216 6A01                    	push 1	; arg count
 16094 0000B218 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16095 0000B21C 803804                  	cmp byte [rax], T_closure
 16096 0000B21F 0F85549C0000            	jne L_error_non_closure
 16097 0000B225 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16098 0000B228 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16099 0000B22B 48890425[9E120000]      	mov qword [free_var_73], rax
 16100 0000B233 48B8-                   	mov rax, sob_void
 16100 0000B235 [0000000000000000] 
 16101                                  
 16102                                  	; preparing a non-tail-call
 16103 0000B23D 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16104 0000B245 803805                  	cmp byte [rax], T_undefined
 16105 0000B248 0F84A79B0000            	je L_error_fvar_undefined
 16106 0000B24E 50                      	push rax
 16107 0000B24F 6A01                    	push 1	; arg count
 16108 0000B251 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16109 0000B255 803804                  	cmp byte [rax], T_closure
 16110 0000B258 0F851B9C0000            	jne L_error_non_closure
 16111 0000B25E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16112 0000B261 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16113 0000B264 48890425[C0120000]      	mov qword [free_var_75], rax
 16114 0000B26C 48B8-                   	mov rax, sob_void
 16114 0000B26E [0000000000000000] 
 16115                                  
 16116                                  	; preparing a non-tail-call
 16117 0000B276 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 16118 0000B27E 803805                  	cmp byte [rax], T_undefined
 16119 0000B281 0F846E9B0000            	je L_error_fvar_undefined
 16120 0000B287 50                      	push rax
 16121 0000B288 6A01                    	push 1	; arg count
 16122 0000B28A 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16123 0000B28E 803804                  	cmp byte [rax], T_closure
 16124 0000B291 0F85E29B0000            	jne L_error_non_closure
 16125 0000B297 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16126 0000B29A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16127 0000B29D 48890425[E2120000]      	mov qword [free_var_77], rax
 16128 0000B2A5 48B8-                   	mov rax, sob_void
 16128 0000B2A7 [0000000000000000] 
 16129                                  
 16130                                  	; preparing a non-tail-call
 16131 0000B2AF 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16132 0000B2B7 803805                  	cmp byte [rax], T_undefined
 16133 0000B2BA 0F84359B0000            	je L_error_fvar_undefined
 16134 0000B2C0 50                      	push rax
 16135 0000B2C1 6A01                    	push 1	; arg count
 16136 0000B2C3 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16137 0000B2C7 803804                  	cmp byte [rax], T_closure
 16138 0000B2CA 0F85A99B0000            	jne L_error_non_closure
 16139 0000B2D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16140 0000B2D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16141 0000B2D6 48890425[D1120000]      	mov qword [free_var_76], rax
 16142 0000B2DE 48B8-                   	mov rax, sob_void
 16142 0000B2E0 [0000000000000000] 
 16143 0000B2E8 C9                      	leave
 16144 0000B2E9 C21800                  	ret AND_KILL_FRAME(1)
 16145                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16146 0000B2EC 803804                  	cmp byte [rax], T_closure
 16147 0000B2EF 0F85849B0000            	jne L_error_non_closure
 16148 0000B2F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16149 0000B2F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16150                                  
 16151 0000B2FB 4889C7                  	mov rdi, rax
 16152 0000B2FE E8749E0000              	call print_sexpr_if_not_void
 16153 0000B303 48B8-                   	mov rax, L_constants + 0
 16153 0000B305 [0000000000000000] 
 16154 0000B30D 48890425[7C120000]      	mov qword [free_var_71], rax
 16155 0000B315 48B8-                   	mov rax, sob_void
 16155 0000B317 [0000000000000000] 
 16156                                  
 16157 0000B31F 4889C7                  	mov rdi, rax
 16158 0000B322 E8509E0000              	call print_sexpr_if_not_void
 16159 0000B327 48B8-                   	mov rax, L_constants + 0
 16159 0000B329 [0000000000000000] 
 16160 0000B331 48890425[8D120000]      	mov qword [free_var_72], rax
 16161 0000B339 48B8-                   	mov rax, sob_void
 16161 0000B33B [0000000000000000] 
 16162                                  
 16163 0000B343 4889C7                  	mov rdi, rax
 16164 0000B346 E82C9E0000              	call print_sexpr_if_not_void
 16165                                  	; preparing a non-tail-call
 16166                                  	; preparing a non-tail-call
 16167                                  	; preparing a non-tail-call
 16168 0000B34B 48B8-                   	mov rax, L_constants + 2569
 16168 0000B34D [090A000000000000] 
 16169 0000B355 50                      	push rax
 16170 0000B356 6A01                    	push 1	; arg count
 16171 0000B358 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16172 0000B360 803805                  	cmp byte [rax], T_undefined
 16173 0000B363 0F848C9A0000            	je L_error_fvar_undefined
 16174 0000B369 803804                  	cmp byte [rax], T_closure
 16175 0000B36C 0F85079B0000            	jne L_error_non_closure
 16176 0000B372 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16177 0000B375 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16178 0000B378 50                      	push rax
 16179                                  	; preparing a non-tail-call
 16180 0000B379 48B8-                   	mov rax, L_constants + 2573
 16180 0000B37B [0D0A000000000000] 
 16181 0000B383 50                      	push rax
 16182 0000B384 6A01                    	push 1	; arg count
 16183 0000B386 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16184 0000B38E 803805                  	cmp byte [rax], T_undefined
 16185 0000B391 0F845E9A0000            	je L_error_fvar_undefined
 16186 0000B397 803804                  	cmp byte [rax], T_closure
 16187 0000B39A 0F85D99A0000            	jne L_error_non_closure
 16188 0000B3A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16189 0000B3A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16190 0000B3A6 50                      	push rax
 16191 0000B3A7 6A02                    	push 2	; arg count
 16192 0000B3A9 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16193 0000B3B1 803805                  	cmp byte [rax], T_undefined
 16194 0000B3B4 0F843B9A0000            	je L_error_fvar_undefined
 16195 0000B3BA 803804                  	cmp byte [rax], T_closure
 16196 0000B3BD 0F85B69A0000            	jne L_error_non_closure
 16197 0000B3C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16198 0000B3C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16199 0000B3C9 50                      	push rax
 16200 0000B3CA 6A01                    	push 1	; arg count
 16201 0000B3CC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16202 0000B3D1 E84C9B0000              	call malloc
 16203 0000B3D6 50                      	push rax
 16204 0000B3D7 BF00000000              	mov rdi, 8 * 0	; new rib
 16205 0000B3DC E8419B0000              	call malloc
 16206 0000B3E1 50                      	push rax
 16207 0000B3E2 BF08000000              	mov rdi, 8 * 1	; extended env
 16208 0000B3E7 E8369B0000              	call malloc
 16209 0000B3EC 488B7D10                	mov rdi, ENV
 16210 0000B3F0 BE00000000              	mov rsi, 0
 16211 0000B3F5 BA01000000              	mov rdx, 1
 16212                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 16213 0000B3FA 4883FE00                	cmp rsi, 0
 16214 0000B3FE 7410                    	je .L_lambda_simple_env_end_005a
 16215 0000B400 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16216 0000B404 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16217 0000B408 48FFC6                  	inc rsi
 16218 0000B40B 48FFC2                  	inc rdx
 16219 0000B40E EBEA                    	jmp .L_lambda_simple_env_loop_005a
 16220                                  .L_lambda_simple_env_end_005a:
 16221 0000B410 5B                      	pop rbx
 16222 0000B411 BE00000000              	mov rsi, 0
 16223                                  .L_lambda_simple_params_loop_005a:	; copy params
 16224 0000B416 4883FE00                	cmp rsi, 0
 16225 0000B41A 740E                    	je .L_lambda_simple_params_end_005a
 16226 0000B41C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16227 0000B421 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16228 0000B425 48FFC6                  	inc rsi
 16229 0000B428 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 16230                                  .L_lambda_simple_params_end_005a:
 16231 0000B42A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16232 0000B42D 4889C3                  	mov rbx, rax
 16233 0000B430 58                      	pop rax
 16234 0000B431 C60004                  	mov byte [rax], T_closure
 16235 0000B434 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16236 0000B438 48C74009[45B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 16237 0000B440 E963030000              	jmp .L_lambda_simple_end_005a
 16238                                  .L_lambda_simple_code_005a:	; lambda-simple body
 16239 0000B445 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16240 0000B44B 740B                    	je .L_lambda_simple_arity_check_ok_005a
 16241 0000B44D FF742410                	push qword [rsp + 8 * 2]
 16242 0000B451 6A01                    	push 1
 16243 0000B453 E9839A0000              	jmp L_error_incorrect_arity_simple
 16244                                  .L_lambda_simple_arity_check_ok_005a:
 16245 0000B458 C8000000                	enter 0, 0
 16246 0000B45C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16247 0000B461 E8BC9A0000              	call malloc
 16248 0000B466 50                      	push rax
 16249 0000B467 BF08000000              	mov rdi, 8 * 1	; new rib
 16250 0000B46C E8B19A0000              	call malloc
 16251 0000B471 50                      	push rax
 16252 0000B472 BF10000000              	mov rdi, 8 * 2	; extended env
 16253 0000B477 E8A69A0000              	call malloc
 16254 0000B47C 488B7D10                	mov rdi, ENV
 16255 0000B480 BE00000000              	mov rsi, 0
 16256 0000B485 BA01000000              	mov rdx, 1
 16257                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 16258 0000B48A 4883FE01                	cmp rsi, 1
 16259 0000B48E 7410                    	je .L_lambda_simple_env_end_005b
 16260 0000B490 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16261 0000B494 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16262 0000B498 48FFC6                  	inc rsi
 16263 0000B49B 48FFC2                  	inc rdx
 16264 0000B49E EBEA                    	jmp .L_lambda_simple_env_loop_005b
 16265                                  .L_lambda_simple_env_end_005b:
 16266 0000B4A0 5B                      	pop rbx
 16267 0000B4A1 BE00000000              	mov rsi, 0
 16268                                  .L_lambda_simple_params_loop_005b:	; copy params
 16269 0000B4A6 4883FE01                	cmp rsi, 1
 16270 0000B4AA 740E                    	je .L_lambda_simple_params_end_005b
 16271 0000B4AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16272 0000B4B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16273 0000B4B5 48FFC6                  	inc rsi
 16274 0000B4B8 EBEC                    	jmp .L_lambda_simple_params_loop_005b
 16275                                  .L_lambda_simple_params_end_005b:
 16276 0000B4BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16277 0000B4BD 4889C3                  	mov rbx, rax
 16278 0000B4C0 58                      	pop rax
 16279 0000B4C1 C60004                  	mov byte [rax], T_closure
 16280 0000B4C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16281 0000B4C8 48C74009[D5B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 16282 0000B4D0 E919010000              	jmp .L_lambda_simple_end_005b
 16283                                  .L_lambda_simple_code_005b:	; lambda-simple body
 16284 0000B4D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16285 0000B4DB 740B                    	je .L_lambda_simple_arity_check_ok_005b
 16286 0000B4DD FF742410                	push qword [rsp + 8 * 2]
 16287 0000B4E1 6A01                    	push 1
 16288 0000B4E3 E9F3990000              	jmp L_error_incorrect_arity_simple
 16289                                  .L_lambda_simple_arity_check_ok_005b:
 16290 0000B4E8 C8000000                	enter 0, 0
 16291                                  	; preparing a non-tail-call
 16292 0000B4EC 48B8-                   	mov rax, L_constants + 2571
 16292 0000B4EE [0B0A000000000000] 
 16293 0000B4F6 50                      	push rax
 16294 0000B4F7 488B4520                	mov rax, PARAM(0)	; param ch
 16295 0000B4FB 50                      	push rax
 16296 0000B4FC 48B8-                   	mov rax, L_constants + 2569
 16296 0000B4FE [090A000000000000] 
 16297 0000B506 50                      	push rax
 16298 0000B507 6A03                    	push 3	; arg count
 16299 0000B509 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16300 0000B511 803805                  	cmp byte [rax], T_undefined
 16301 0000B514 0F84DB980000            	je L_error_fvar_undefined
 16302 0000B51A 803804                  	cmp byte [rax], T_closure
 16303 0000B51D 0F8556990000            	jne L_error_non_closure
 16304 0000B523 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16305 0000B526 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16306 0000B529 483D[02000000]          	cmp rax, sob_boolean_false
 16307 0000B52F 0F84B1000000            	je .L_if_else_0051
 16308                                  	; Initiating tail-call optimization
 16309                                  	; preparing a non-tail-call
 16310 0000B535 488B4510                	mov rax, ENV
 16311 0000B539 488B00                  	mov rax, qword [rax + 8 * 0]
 16312 0000B53C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16313 0000B53F 50                      	push rax
 16314                                  	; preparing a non-tail-call
 16315 0000B540 488B4520                	mov rax, PARAM(0)	; param ch
 16316 0000B544 50                      	push rax
 16317 0000B545 6A01                    	push 1	; arg count
 16318 0000B547 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16319 0000B54F 803805                  	cmp byte [rax], T_undefined
 16320 0000B552 0F849D980000            	je L_error_fvar_undefined
 16321 0000B558 803804                  	cmp byte [rax], T_closure
 16322 0000B55B 0F8518990000            	jne L_error_non_closure
 16323 0000B561 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16324 0000B564 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16325 0000B567 50                      	push rax
 16326 0000B568 6A02                    	push 2	; arg count
 16327 0000B56A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 16328 0000B572 803805                  	cmp byte [rax], T_undefined
 16329 0000B575 0F847A980000            	je L_error_fvar_undefined
 16330 0000B57B 803804                  	cmp byte [rax], T_closure
 16331 0000B57E 0F85F5980000            	jne L_error_non_closure
 16332 0000B584 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16333 0000B587 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16334 0000B58A 50                      	push rax
 16335 0000B58B 6A01                    	push 1	; Number of arguments
 16336 0000B58D 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16337 0000B595 803805                  	cmp byte [rax], T_undefined
 16338 0000B598 0F8457980000            	je L_error_fvar_undefined
 16339 0000B59E 803804                  	cmp byte [rax], T_closure
 16340 0000B5A1 0F85D2980000            	jne L_error_non_closure
 16341 0000B5A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16342                                  
 16343                                  	; Reclaiming the current stack frame
 16344 0000B5AA FF7508                  	push qword [rbp + 8]
 16345 0000B5AD FF7500                  	push qword [rbp]
 16346 0000B5B0 41BA05000000            	mov r10, 1 + 4
 16347 0000B5B6 4C8B4518                	mov r8, COUNT
 16348 0000B5BA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16349 0000B5BF 4C8D4DF8                	lea r9, [rbp - 8]
 16350                                  .L_tc_recycle_frame_loop_0094:
 16351 0000B5C3 4983FA00                	cmp r10, 0
 16352 0000B5C7 7413                    	je .L_tc_recycle_frame_done_0094
 16353 0000B5C9 4D8B19                  	mov r11, qword [r9]
 16354 0000B5CC 4D8918                  	mov qword [r8], r11
 16355 0000B5CF 49FFCA                  	dec r10
 16356 0000B5D2 4983E808                	sub r8, 8
 16357 0000B5D6 4983E908                	sub r9, 8
 16358 0000B5DA EBE7                    	jmp .L_tc_recycle_frame_loop_0094
 16359                                  .L_tc_recycle_frame_done_0094:
 16360 0000B5DC 498D6008                	lea rsp, [r8 + 8]
 16361 0000B5E0 5D                      	pop rbp
 16362 0000B5E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16363 0000B5E4 EB04                    	jmp .L_if_end_0051
 16364                                  .L_if_else_0051:
 16365 0000B5E6 488B4520                	mov rax, PARAM(0)	; param ch
 16366                                  .L_if_end_0051:
 16367 0000B5EA C9                      	leave
 16368 0000B5EB C21800                  	ret AND_KILL_FRAME(1)
 16369                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16370 0000B5EE 48890425[7C120000]      	mov qword [free_var_71], rax
 16371 0000B5F6 48B8-                   	mov rax, sob_void
 16371 0000B5F8 [0000000000000000] 
 16372                                  
 16373 0000B600 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16374 0000B605 E818990000              	call malloc
 16375 0000B60A 50                      	push rax
 16376 0000B60B BF08000000              	mov rdi, 8 * 1	; new rib
 16377 0000B610 E80D990000              	call malloc
 16378 0000B615 50                      	push rax
 16379 0000B616 BF10000000              	mov rdi, 8 * 2	; extended env
 16380 0000B61B E802990000              	call malloc
 16381 0000B620 488B7D10                	mov rdi, ENV
 16382 0000B624 BE00000000              	mov rsi, 0
 16383 0000B629 BA01000000              	mov rdx, 1
 16384                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 16385 0000B62E 4883FE01                	cmp rsi, 1
 16386 0000B632 7410                    	je .L_lambda_simple_env_end_005c
 16387 0000B634 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16388 0000B638 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16389 0000B63C 48FFC6                  	inc rsi
 16390 0000B63F 48FFC2                  	inc rdx
 16391 0000B642 EBEA                    	jmp .L_lambda_simple_env_loop_005c
 16392                                  .L_lambda_simple_env_end_005c:
 16393 0000B644 5B                      	pop rbx
 16394 0000B645 BE00000000              	mov rsi, 0
 16395                                  .L_lambda_simple_params_loop_005c:	; copy params
 16396 0000B64A 4883FE01                	cmp rsi, 1
 16397 0000B64E 740E                    	je .L_lambda_simple_params_end_005c
 16398 0000B650 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16399 0000B655 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16400 0000B659 48FFC6                  	inc rsi
 16401 0000B65C EBEC                    	jmp .L_lambda_simple_params_loop_005c
 16402                                  .L_lambda_simple_params_end_005c:
 16403 0000B65E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16404 0000B661 4889C3                  	mov rbx, rax
 16405 0000B664 58                      	pop rax
 16406 0000B665 C60004                  	mov byte [rax], T_closure
 16407 0000B668 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16408 0000B66C 48C74009[79B60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 16409 0000B674 E919010000              	jmp .L_lambda_simple_end_005c
 16410                                  .L_lambda_simple_code_005c:	; lambda-simple body
 16411 0000B679 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16412 0000B67F 740B                    	je .L_lambda_simple_arity_check_ok_005c
 16413 0000B681 FF742410                	push qword [rsp + 8 * 2]
 16414 0000B685 6A01                    	push 1
 16415 0000B687 E94F980000              	jmp L_error_incorrect_arity_simple
 16416                                  .L_lambda_simple_arity_check_ok_005c:
 16417 0000B68C C8000000                	enter 0, 0
 16418                                  	; preparing a non-tail-call
 16419 0000B690 48B8-                   	mov rax, L_constants + 2575
 16419 0000B692 [0F0A000000000000] 
 16420 0000B69A 50                      	push rax
 16421 0000B69B 488B4520                	mov rax, PARAM(0)	; param ch
 16422 0000B69F 50                      	push rax
 16423 0000B6A0 48B8-                   	mov rax, L_constants + 2573
 16423 0000B6A2 [0D0A000000000000] 
 16424 0000B6AA 50                      	push rax
 16425 0000B6AB 6A03                    	push 3	; arg count
 16426 0000B6AD 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16427 0000B6B5 803805                  	cmp byte [rax], T_undefined
 16428 0000B6B8 0F8437970000            	je L_error_fvar_undefined
 16429 0000B6BE 803804                  	cmp byte [rax], T_closure
 16430 0000B6C1 0F85B2970000            	jne L_error_non_closure
 16431 0000B6C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16432 0000B6CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16433 0000B6CD 483D[02000000]          	cmp rax, sob_boolean_false
 16434 0000B6D3 0F84B1000000            	je .L_if_else_0052
 16435                                  	; Initiating tail-call optimization
 16436                                  	; preparing a non-tail-call
 16437 0000B6D9 488B4510                	mov rax, ENV
 16438 0000B6DD 488B00                  	mov rax, qword [rax + 8 * 0]
 16439 0000B6E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16440 0000B6E3 50                      	push rax
 16441                                  	; preparing a non-tail-call
 16442 0000B6E4 488B4520                	mov rax, PARAM(0)	; param ch
 16443 0000B6E8 50                      	push rax
 16444 0000B6E9 6A01                    	push 1	; arg count
 16445 0000B6EB 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16446 0000B6F3 803805                  	cmp byte [rax], T_undefined
 16447 0000B6F6 0F84F9960000            	je L_error_fvar_undefined
 16448 0000B6FC 803804                  	cmp byte [rax], T_closure
 16449 0000B6FF 0F8574970000            	jne L_error_non_closure
 16450 0000B705 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16451 0000B708 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16452 0000B70B 50                      	push rax
 16453 0000B70C 6A02                    	push 2	; arg count
 16454 0000B70E 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16455 0000B716 803805                  	cmp byte [rax], T_undefined
 16456 0000B719 0F84D6960000            	je L_error_fvar_undefined
 16457 0000B71F 803804                  	cmp byte [rax], T_closure
 16458 0000B722 0F8551970000            	jne L_error_non_closure
 16459 0000B728 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16460 0000B72B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16461 0000B72E 50                      	push rax
 16462 0000B72F 6A01                    	push 1	; Number of arguments
 16463 0000B731 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16464 0000B739 803805                  	cmp byte [rax], T_undefined
 16465 0000B73C 0F84B3960000            	je L_error_fvar_undefined
 16466 0000B742 803804                  	cmp byte [rax], T_closure
 16467 0000B745 0F852E970000            	jne L_error_non_closure
 16468 0000B74B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16469                                  
 16470                                  	; Reclaiming the current stack frame
 16471 0000B74E FF7508                  	push qword [rbp + 8]
 16472 0000B751 FF7500                  	push qword [rbp]
 16473 0000B754 41BA05000000            	mov r10, 1 + 4
 16474 0000B75A 4C8B4518                	mov r8, COUNT
 16475 0000B75E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16476 0000B763 4C8D4DF8                	lea r9, [rbp - 8]
 16477                                  .L_tc_recycle_frame_loop_0095:
 16478 0000B767 4983FA00                	cmp r10, 0
 16479 0000B76B 7413                    	je .L_tc_recycle_frame_done_0095
 16480 0000B76D 4D8B19                  	mov r11, qword [r9]
 16481 0000B770 4D8918                  	mov qword [r8], r11
 16482 0000B773 49FFCA                  	dec r10
 16483 0000B776 4983E808                	sub r8, 8
 16484 0000B77A 4983E908                	sub r9, 8
 16485 0000B77E EBE7                    	jmp .L_tc_recycle_frame_loop_0095
 16486                                  .L_tc_recycle_frame_done_0095:
 16487 0000B780 498D6008                	lea rsp, [r8 + 8]
 16488 0000B784 5D                      	pop rbp
 16489 0000B785 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16490 0000B788 EB04                    	jmp .L_if_end_0052
 16491                                  .L_if_else_0052:
 16492 0000B78A 488B4520                	mov rax, PARAM(0)	; param ch
 16493                                  .L_if_end_0052:
 16494 0000B78E C9                      	leave
 16495 0000B78F C21800                  	ret AND_KILL_FRAME(1)
 16496                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16497 0000B792 48890425[8D120000]      	mov qword [free_var_72], rax
 16498 0000B79A 48B8-                   	mov rax, sob_void
 16498 0000B79C [0000000000000000] 
 16499 0000B7A4 C9                      	leave
 16500 0000B7A5 C21800                  	ret AND_KILL_FRAME(1)
 16501                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16502 0000B7A8 803804                  	cmp byte [rax], T_closure
 16503 0000B7AB 0F85C8960000            	jne L_error_non_closure
 16504 0000B7B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16505 0000B7B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16506                                  
 16507 0000B7B7 4889C7                  	mov rdi, rax
 16508 0000B7BA E8B8990000              	call print_sexpr_if_not_void
 16509 0000B7BF 48B8-                   	mov rax, L_constants + 0
 16509 0000B7C1 [0000000000000000] 
 16510 0000B7C9 48890425[38120000]      	mov qword [free_var_67], rax
 16511 0000B7D1 48B8-                   	mov rax, sob_void
 16511 0000B7D3 [0000000000000000] 
 16512                                  
 16513 0000B7DB 4889C7                  	mov rdi, rax
 16514 0000B7DE E894990000              	call print_sexpr_if_not_void
 16515 0000B7E3 48B8-                   	mov rax, L_constants + 0
 16515 0000B7E5 [0000000000000000] 
 16516 0000B7ED 48890425[27120000]      	mov qword [free_var_66], rax
 16517 0000B7F5 48B8-                   	mov rax, sob_void
 16517 0000B7F7 [0000000000000000] 
 16518                                  
 16519 0000B7FF 4889C7                  	mov rdi, rax
 16520 0000B802 E870990000              	call print_sexpr_if_not_void
 16521 0000B807 48B8-                   	mov rax, L_constants + 0
 16521 0000B809 [0000000000000000] 
 16522 0000B811 48890425[49120000]      	mov qword [free_var_68], rax
 16523 0000B819 48B8-                   	mov rax, sob_void
 16523 0000B81B [0000000000000000] 
 16524                                  
 16525 0000B823 4889C7                  	mov rdi, rax
 16526 0000B826 E84C990000              	call print_sexpr_if_not_void
 16527 0000B82B 48B8-                   	mov rax, L_constants + 0
 16527 0000B82D [0000000000000000] 
 16528 0000B835 48890425[6B120000]      	mov qword [free_var_70], rax
 16529 0000B83D 48B8-                   	mov rax, sob_void
 16529 0000B83F [0000000000000000] 
 16530                                  
 16531 0000B847 4889C7                  	mov rdi, rax
 16532 0000B84A E828990000              	call print_sexpr_if_not_void
 16533 0000B84F 48B8-                   	mov rax, L_constants + 0
 16533 0000B851 [0000000000000000] 
 16534 0000B859 48890425[5A120000]      	mov qword [free_var_69], rax
 16535 0000B861 48B8-                   	mov rax, sob_void
 16535 0000B863 [0000000000000000] 
 16536                                  
 16537 0000B86B 4889C7                  	mov rdi, rax
 16538 0000B86E E804990000              	call print_sexpr_if_not_void
 16539                                  	; preparing a non-tail-call
 16540 0000B873 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16541 0000B878 E8A5960000              	call malloc
 16542 0000B87D 50                      	push rax
 16543 0000B87E BF00000000              	mov rdi, 8 * 0	; new rib
 16544 0000B883 E89A960000              	call malloc
 16545 0000B888 50                      	push rax
 16546 0000B889 BF08000000              	mov rdi, 8 * 1	; extended env
 16547 0000B88E E88F960000              	call malloc
 16548 0000B893 488B7D10                	mov rdi, ENV
 16549 0000B897 BE00000000              	mov rsi, 0
 16550 0000B89C BA01000000              	mov rdx, 1
 16551                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 16552 0000B8A1 4883FE00                	cmp rsi, 0
 16553 0000B8A5 7410                    	je .L_lambda_simple_env_end_005d
 16554 0000B8A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16555 0000B8AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16556 0000B8AF 48FFC6                  	inc rsi
 16557 0000B8B2 48FFC2                  	inc rdx
 16558 0000B8B5 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 16559                                  .L_lambda_simple_env_end_005d:
 16560 0000B8B7 5B                      	pop rbx
 16561 0000B8B8 BE00000000              	mov rsi, 0
 16562                                  .L_lambda_simple_params_loop_005d:	; copy params
 16563 0000B8BD 4883FE00                	cmp rsi, 0
 16564 0000B8C1 740E                    	je .L_lambda_simple_params_end_005d
 16565 0000B8C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16566 0000B8C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16567 0000B8CC 48FFC6                  	inc rsi
 16568 0000B8CF EBEC                    	jmp .L_lambda_simple_params_loop_005d
 16569                                  .L_lambda_simple_params_end_005d:
 16570 0000B8D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16571 0000B8D4 4889C3                  	mov rbx, rax
 16572 0000B8D7 58                      	pop rax
 16573 0000B8D8 C60004                  	mov byte [rax], T_closure
 16574 0000B8DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16575 0000B8DF 48C74009[ECB80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 16576 0000B8E7 E935030000              	jmp .L_lambda_simple_end_005d
 16577                                  .L_lambda_simple_code_005d:	; lambda-simple body
 16578 0000B8EC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16579 0000B8F2 740B                    	je .L_lambda_simple_arity_check_ok_005d
 16580 0000B8F4 FF742410                	push qword [rsp + 8 * 2]
 16581 0000B8F8 6A01                    	push 1
 16582 0000B8FA E9DC950000              	jmp L_error_incorrect_arity_simple
 16583                                  .L_lambda_simple_arity_check_ok_005d:
 16584 0000B8FF C8000000                	enter 0, 0
 16585 0000B903 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16586 0000B908 E815960000              	call malloc
 16587 0000B90D 50                      	push rax
 16588 0000B90E BF08000000              	mov rdi, 8 * 1	; new rib
 16589 0000B913 E80A960000              	call malloc
 16590 0000B918 50                      	push rax
 16591 0000B919 BF10000000              	mov rdi, 8 * 2	; extended env
 16592 0000B91E E8FF950000              	call malloc
 16593 0000B923 488B7D10                	mov rdi, ENV
 16594 0000B927 BE00000000              	mov rsi, 0
 16595 0000B92C BA01000000              	mov rdx, 1
 16596                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 16597 0000B931 4883FE01                	cmp rsi, 1
 16598 0000B935 7410                    	je .L_lambda_opt_env_end_0010
 16599 0000B937 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16600 0000B93B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16601 0000B93F 48FFC6                  	inc rsi
 16602 0000B942 48FFC2                  	inc rdx
 16603 0000B945 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 16604                                  .L_lambda_opt_env_end_0010:
 16605 0000B947 5B                      	pop rbx
 16606 0000B948 BE00000000              	mov rsi, 0
 16607                                  .L_lambda_opt_params_loop_0010:	; copy params
 16608 0000B94D 4883FE01                	cmp rsi, 1
 16609 0000B951 740E                    	je .L_lambda_opt_params_end_0010
 16610 0000B953 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16611 0000B958 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16612 0000B95C 48FFC6                  	inc rsi
 16613 0000B95F EBEC                    	jmp .L_lambda_opt_params_loop_0010
 16614                                  .L_lambda_opt_params_end_0010:
 16615 0000B961 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16616 0000B964 4889C3                  	mov rbx, rax
 16617 0000B967 58                      	pop rax
 16618 0000B968 C60004                  	mov byte [rax], T_closure
 16619 0000B96B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16620 0000B96F 48C74009[7CB90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 16621 0000B977 E9A1020000              	jmp .L_lambda_opt_end_0010
 16622                                  .L_lambda_opt_code_0010:
 16623 0000B97C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 16624 0000B981 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 16625 0000B985 7407                    	je .L_lambda_opt_arity_check_exact_0010	; Jump if arity matches
 16626 0000B987 7F4C                    	jg .L_lambda_opt_arity_check_more_0010	; Jump if more arguments passed
 16627 0000B989 E961950000              	jmp L_error_incorrect_arity_opt
 16628                                  .L_lambda_opt_arity_check_exact_0010:
 16629 0000B98E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 16630 0000B991 4983C603                	add r14, 3 ; add 3 first stack values
 16631 0000B995 41BF00000000            	mov r15, 0 ; r15 = index
 16632 0000B99B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 16633 0000B99F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 16634 0000B9A7 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 16635                                  .L_lambda_opt_stack_shrink_loop_0010:
 16636 0000B9A9 4983FE00                	cmp r14, 0
 16637 0000B9AD 7E11                    	jle .L_make_lambda_opt_exact_finish_0010
 16638 0000B9AF 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 16639 0000B9B4 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 16640 0000B9B8 49FFCE                  	dec r14 ; next loop value
 16641 0000B9BB 49FFC7                  	inc r15 ; update i
 16642 0000B9BE EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 16643                                  .L_make_lambda_opt_exact_finish_0010:
 16644 0000B9C0 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 16645 0000B9C8 49FFC2                  	inc r10
 16646 0000B9CB 4C89542410              	mov qword [rsp + 8 * 2], r10
 16647 0000B9D0 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0010
 16648                                  .L_lambda_opt_arity_check_more_0010:
 16649 0000B9D5 4D89D6                  	mov r14, r10 ; r14 = num args
 16650 0000B9D8 4D89D7                  	mov r15, r10 ; r15 = num args
 16651 0000B9DB 41B900000000            	mov r9, 0; r9 = number of params 
 16652 0000B9E1 4D29CE                  	sub r14, r9 ; r14 = extra args
 16653 0000B9E4 4D01F1                  	add r9, r14 ; r9 = num args
 16654 0000B9E7 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 16654 0000B9E9 [0100000000000000] 
 16655 0000B9F1 EB00                    	jmp .L_make_lambda_opt_arg_list_0010
 16656                                  .L_make_lambda_opt_arg_list_0010:
 16657 0000B9F3 4983FE00                	cmp r14, 0
 16658 0000B9F7 7E25                    	jle .L_make_lambda_opt_stack_fixed_0010
 16659 0000B9F9 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 16660 0000B9FE BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 16661 0000BA03 E81A950000              	call malloc                         ; Allocate memory, result in rax
 16662 0000BA08 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 16663 0000BA0B 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 16664 0000BA0F 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 16665 0000BA13 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 16666 0000BA16 49FFC9                  	dec r9                              ; args index minus 1
 16667 0000BA19 49FFCE                  	dec r14                             ; next iteration
 16668 0000BA1C EBD5                    	jmp .L_make_lambda_opt_arg_list_0010
 16669                                  .L_make_lambda_opt_stack_fixed_0010:
 16670 0000BA1E 4D89FE                  	mov r14, r15 ; r14 = num args
 16671 0000BA21 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 16672 0000BA24 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 16673 0000BA28 41BA00000000            	mov r10, 0; r10 = num of params
 16674 0000BA2E 4D29D6                  	sub r14, r10 ; r14 = extra args
 16675 0000BA31 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 16676 0000BA34 49FFCE                  	dec r14 ; how much we need to change stack wise?
 16677 0000BA37 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 16678 0000BA3C EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0010
 16679                                  .L_lambda_opt_stack_shrink_loop_more_0010:
 16680 0000BA3E 4983F800                	cmp r8, 0
 16681 0000BA42 7E15                    	jle .L_make_lambda_opt_more_finish_0010
 16682 0000BA44 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 16683 0000BA48 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 16684 0000BA4C 4D8D26                  	lea r12, [r14]
 16685 0000BA4F 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 16686 0000BA54 49FFC8                  	dec r8 ; next iteration
 16687 0000BA57 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0010
 16688                                  .L_make_lambda_opt_more_finish_0010:
 16689 0000BA59 4D89F8                  	mov r8, r15 ; num of args
 16690 0000BA5C 41BA00000000            	mov r10, 0
 16691 0000BA62 4D29D0                  	sub r8, r10 ; num of new args
 16692 0000BA65 49FFC0                  	inc r8
 16693 0000BA68 4C89442420              	mov qword [rsp + 8 * 4], r8
 16694 0000BA6D 4883C410                	add rsp, 8 * 2  ; 
 16695 0000BA71 EB00                    	jmp .L_lambda_opt_stack_adjusted_0010
 16696                                  .L_lambda_opt_stack_adjusted_0010:
 16697 0000BA73 C8000000                	enter 0, 0
 16698                                  	; Initiating tail-call optimization
 16699                                  	; preparing a non-tail-call
 16700 0000BA77 488B4520                	mov rax, PARAM(0)	; param s
 16701 0000BA7B 50                      	push rax
 16702 0000BA7C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16703 0000BA81 E89C940000              	call malloc
 16704 0000BA86 50                      	push rax
 16705 0000BA87 BF08000000              	mov rdi, 8 * 1	; new rib
 16706 0000BA8C E891940000              	call malloc
 16707 0000BA91 50                      	push rax
 16708 0000BA92 BF18000000              	mov rdi, 8 * 3	; extended env
 16709 0000BA97 E886940000              	call malloc
 16710 0000BA9C 488B7D10                	mov rdi, ENV
 16711 0000BAA0 BE00000000              	mov rsi, 0
 16712 0000BAA5 BA01000000              	mov rdx, 1
 16713                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16714 0000BAAA 4883FE02                	cmp rsi, 2
 16715 0000BAAE 7410                    	je .L_lambda_simple_env_end_005e
 16716 0000BAB0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16717 0000BAB4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16718 0000BAB8 48FFC6                  	inc rsi
 16719 0000BABB 48FFC2                  	inc rdx
 16720 0000BABE EBEA                    	jmp .L_lambda_simple_env_loop_005e
 16721                                  .L_lambda_simple_env_end_005e:
 16722 0000BAC0 5B                      	pop rbx
 16723 0000BAC1 BE00000000              	mov rsi, 0
 16724                                  .L_lambda_simple_params_loop_005e:	; copy params
 16725 0000BAC6 4883FE01                	cmp rsi, 1
 16726 0000BACA 740E                    	je .L_lambda_simple_params_end_005e
 16727 0000BACC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16728 0000BAD1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16729 0000BAD5 48FFC6                  	inc rsi
 16730 0000BAD8 EBEC                    	jmp .L_lambda_simple_params_loop_005e
 16731                                  .L_lambda_simple_params_end_005e:
 16732 0000BADA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16733 0000BADD 4889C3                  	mov rbx, rax
 16734 0000BAE0 58                      	pop rax
 16735 0000BAE1 C60004                  	mov byte [rax], T_closure
 16736 0000BAE4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16737 0000BAE8 48C74009[F5BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 16738 0000BAF0 E99C000000              	jmp .L_lambda_simple_end_005e
 16739                                  .L_lambda_simple_code_005e:	; lambda-simple body
 16740 0000BAF5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16741 0000BAFB 740B                    	je .L_lambda_simple_arity_check_ok_005e
 16742 0000BAFD FF742410                	push qword [rsp + 8 * 2]
 16743 0000BB01 6A01                    	push 1
 16744 0000BB03 E9D3930000              	jmp L_error_incorrect_arity_simple
 16745                                  .L_lambda_simple_arity_check_ok_005e:
 16746 0000BB08 C8000000                	enter 0, 0
 16747                                  	; Initiating tail-call optimization
 16748                                  	; preparing a non-tail-call
 16749 0000BB0C 488B4520                	mov rax, PARAM(0)	; param ch
 16750 0000BB10 50                      	push rax
 16751 0000BB11 6A01                    	push 1	; arg count
 16752 0000BB13 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 16753 0000BB1B 803805                  	cmp byte [rax], T_undefined
 16754 0000BB1E 0F84D1920000            	je L_error_fvar_undefined
 16755 0000BB24 803804                  	cmp byte [rax], T_closure
 16756 0000BB27 0F854C930000            	jne L_error_non_closure
 16757 0000BB2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16758 0000BB30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16759 0000BB33 50                      	push rax
 16760 0000BB34 6A01                    	push 1	; Number of arguments
 16761 0000BB36 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16762 0000BB3E 803805                  	cmp byte [rax], T_undefined
 16763 0000BB41 0F84AE920000            	je L_error_fvar_undefined
 16764 0000BB47 803804                  	cmp byte [rax], T_closure
 16765 0000BB4A 0F8529930000            	jne L_error_non_closure
 16766 0000BB50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16767                                  
 16768                                  	; Reclaiming the current stack frame
 16769 0000BB53 FF7508                  	push qword [rbp + 8]
 16770 0000BB56 FF7500                  	push qword [rbp]
 16771 0000BB59 41BA05000000            	mov r10, 1 + 4
 16772 0000BB5F 4C8B4518                	mov r8, COUNT
 16773 0000BB63 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16774 0000BB68 4C8D4DF8                	lea r9, [rbp - 8]
 16775                                  .L_tc_recycle_frame_loop_0096:
 16776 0000BB6C 4983FA00                	cmp r10, 0
 16777 0000BB70 7413                    	je .L_tc_recycle_frame_done_0096
 16778 0000BB72 4D8B19                  	mov r11, qword [r9]
 16779 0000BB75 4D8918                  	mov qword [r8], r11
 16780 0000BB78 49FFCA                  	dec r10
 16781 0000BB7B 4983E808                	sub r8, 8
 16782 0000BB7F 4983E908                	sub r9, 8
 16783 0000BB83 EBE7                    	jmp .L_tc_recycle_frame_loop_0096
 16784                                  .L_tc_recycle_frame_done_0096:
 16785 0000BB85 498D6008                	lea rsp, [r8 + 8]
 16786 0000BB89 5D                      	pop rbp
 16787 0000BB8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16788 0000BB8D C9                      	leave
 16789 0000BB8E C21800                  	ret AND_KILL_FRAME(1)
 16790                                  .L_lambda_simple_end_005e:	; new closure is in rax
 16791 0000BB91 50                      	push rax
 16792 0000BB92 6A02                    	push 2	; arg count
 16793 0000BB94 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 16794 0000BB9C 803805                  	cmp byte [rax], T_undefined
 16795 0000BB9F 0F8450920000            	je L_error_fvar_undefined
 16796 0000BBA5 803804                  	cmp byte [rax], T_closure
 16797 0000BBA8 0F85CB920000            	jne L_error_non_closure
 16798 0000BBAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16799 0000BBB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16800 0000BBB4 50                      	push rax
 16801 0000BBB5 488B4510                	mov rax, ENV
 16802 0000BBB9 488B00                  	mov rax, qword [rax + 8 * 0]
 16803 0000BBBC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16804 0000BBBF 50                      	push rax
 16805 0000BBC0 6A02                    	push 2	; Number of arguments
 16806 0000BBC2 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 16807 0000BBCA 803805                  	cmp byte [rax], T_undefined
 16808 0000BBCD 0F8422920000            	je L_error_fvar_undefined
 16809 0000BBD3 803804                  	cmp byte [rax], T_closure
 16810 0000BBD6 0F859D920000            	jne L_error_non_closure
 16811 0000BBDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16812                                  
 16813                                  	; Reclaiming the current stack frame
 16814 0000BBDF FF7508                  	push qword [rbp + 8]
 16815 0000BBE2 FF7500                  	push qword [rbp]
 16816 0000BBE5 41BA06000000            	mov r10, 2 + 4
 16817 0000BBEB 4C8B4518                	mov r8, COUNT
 16818 0000BBEF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16819 0000BBF4 4C8D4DF8                	lea r9, [rbp - 8]
 16820                                  .L_tc_recycle_frame_loop_0097:
 16821 0000BBF8 4983FA00                	cmp r10, 0
 16822 0000BBFC 7413                    	je .L_tc_recycle_frame_done_0097
 16823 0000BBFE 4D8B19                  	mov r11, qword [r9]
 16824 0000BC01 4D8918                  	mov qword [r8], r11
 16825 0000BC04 49FFCA                  	dec r10
 16826 0000BC07 4983E808                	sub r8, 8
 16827 0000BC0B 4983E908                	sub r9, 8
 16828 0000BC0F EBE7                    	jmp .L_tc_recycle_frame_loop_0097
 16829                                  .L_tc_recycle_frame_done_0097:
 16830 0000BC11 498D6008                	lea rsp, [r8 + 8]
 16831 0000BC15 5D                      	pop rbp
 16832 0000BC16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16833 0000BC19 C9                      	leave
 16834 0000BC1A C21800                  	ret AND_KILL_FRAME(1)
 16835                                  .L_lambda_opt_end_0010:	; new closure is in rax
 16836 0000BC1D C9                      	leave
 16837 0000BC1E C21800                  	ret AND_KILL_FRAME(1)
 16838                                  .L_lambda_simple_end_005d:	; new closure is in rax
 16839 0000BC21 50                      	push rax
 16840 0000BC22 6A01                    	push 1	; arg count
 16841 0000BC24 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16842 0000BC29 E8F4920000              	call malloc
 16843 0000BC2E 50                      	push rax
 16844 0000BC2F BF00000000              	mov rdi, 8 * 0	; new rib
 16845 0000BC34 E8E9920000              	call malloc
 16846 0000BC39 50                      	push rax
 16847 0000BC3A BF08000000              	mov rdi, 8 * 1	; extended env
 16848 0000BC3F E8DE920000              	call malloc
 16849 0000BC44 488B7D10                	mov rdi, ENV
 16850 0000BC48 BE00000000              	mov rsi, 0
 16851 0000BC4D BA01000000              	mov rdx, 1
 16852                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 16853 0000BC52 4883FE00                	cmp rsi, 0
 16854 0000BC56 7410                    	je .L_lambda_simple_env_end_005f
 16855 0000BC58 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16856 0000BC5C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16857 0000BC60 48FFC6                  	inc rsi
 16858 0000BC63 48FFC2                  	inc rdx
 16859 0000BC66 EBEA                    	jmp .L_lambda_simple_env_loop_005f
 16860                                  .L_lambda_simple_env_end_005f:
 16861 0000BC68 5B                      	pop rbx
 16862 0000BC69 BE00000000              	mov rsi, 0
 16863                                  .L_lambda_simple_params_loop_005f:	; copy params
 16864 0000BC6E 4883FE00                	cmp rsi, 0
 16865 0000BC72 740E                    	je .L_lambda_simple_params_end_005f
 16866 0000BC74 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16867 0000BC79 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16868 0000BC7D 48FFC6                  	inc rsi
 16869 0000BC80 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 16870                                  .L_lambda_simple_params_end_005f:
 16871 0000BC82 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16872 0000BC85 4889C3                  	mov rbx, rax
 16873 0000BC88 58                      	pop rax
 16874 0000BC89 C60004                  	mov byte [rax], T_closure
 16875 0000BC8C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16876 0000BC90 48C74009[9DBC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 16877 0000BC98 E938010000              	jmp .L_lambda_simple_end_005f
 16878                                  .L_lambda_simple_code_005f:	; lambda-simple body
 16879 0000BC9D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16880 0000BCA3 740B                    	je .L_lambda_simple_arity_check_ok_005f
 16881 0000BCA5 FF742410                	push qword [rsp + 8 * 2]
 16882 0000BCA9 6A01                    	push 1
 16883 0000BCAB E92B920000              	jmp L_error_incorrect_arity_simple
 16884                                  .L_lambda_simple_arity_check_ok_005f:
 16885 0000BCB0 C8000000                	enter 0, 0
 16886                                  	; preparing a non-tail-call
 16887 0000BCB4 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16888 0000BCBC 803805                  	cmp byte [rax], T_undefined
 16889 0000BCBF 0F8430910000            	je L_error_fvar_undefined
 16890 0000BCC5 50                      	push rax
 16891 0000BCC6 6A01                    	push 1	; arg count
 16892 0000BCC8 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16893 0000BCCC 803804                  	cmp byte [rax], T_closure
 16894 0000BCCF 0F85A4910000            	jne L_error_non_closure
 16895 0000BCD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16896 0000BCD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16897 0000BCDB 48890425[38120000]      	mov qword [free_var_67], rax
 16898 0000BCE3 48B8-                   	mov rax, sob_void
 16898 0000BCE5 [0000000000000000] 
 16899                                  
 16900                                  	; preparing a non-tail-call
 16901 0000BCED 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16902 0000BCF5 803805                  	cmp byte [rax], T_undefined
 16903 0000BCF8 0F84F7900000            	je L_error_fvar_undefined
 16904 0000BCFE 50                      	push rax
 16905 0000BCFF 6A01                    	push 1	; arg count
 16906 0000BD01 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16907 0000BD05 803804                  	cmp byte [rax], T_closure
 16908 0000BD08 0F856B910000            	jne L_error_non_closure
 16909 0000BD0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16910 0000BD11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16911 0000BD14 48890425[27120000]      	mov qword [free_var_66], rax
 16912 0000BD1C 48B8-                   	mov rax, sob_void
 16912 0000BD1E [0000000000000000] 
 16913                                  
 16914                                  	; preparing a non-tail-call
 16915 0000BD26 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16916 0000BD2E 803805                  	cmp byte [rax], T_undefined
 16917 0000BD31 0F84BE900000            	je L_error_fvar_undefined
 16918 0000BD37 50                      	push rax
 16919 0000BD38 6A01                    	push 1	; arg count
 16920 0000BD3A 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16921 0000BD3E 803804                  	cmp byte [rax], T_closure
 16922 0000BD41 0F8532910000            	jne L_error_non_closure
 16923 0000BD47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16924 0000BD4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16925 0000BD4D 48890425[49120000]      	mov qword [free_var_68], rax
 16926 0000BD55 48B8-                   	mov rax, sob_void
 16926 0000BD57 [0000000000000000] 
 16927                                  
 16928                                  	; preparing a non-tail-call
 16929 0000BD5F 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 16930 0000BD67 803805                  	cmp byte [rax], T_undefined
 16931 0000BD6A 0F8485900000            	je L_error_fvar_undefined
 16932 0000BD70 50                      	push rax
 16933 0000BD71 6A01                    	push 1	; arg count
 16934 0000BD73 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16935 0000BD77 803804                  	cmp byte [rax], T_closure
 16936 0000BD7A 0F85F9900000            	jne L_error_non_closure
 16937 0000BD80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16938 0000BD83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16939 0000BD86 48890425[6B120000]      	mov qword [free_var_70], rax
 16940 0000BD8E 48B8-                   	mov rax, sob_void
 16940 0000BD90 [0000000000000000] 
 16941                                  
 16942                                  	; preparing a non-tail-call
 16943 0000BD98 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16944 0000BDA0 803805                  	cmp byte [rax], T_undefined
 16945 0000BDA3 0F844C900000            	je L_error_fvar_undefined
 16946 0000BDA9 50                      	push rax
 16947 0000BDAA 6A01                    	push 1	; arg count
 16948 0000BDAC 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16949 0000BDB0 803804                  	cmp byte [rax], T_closure
 16950 0000BDB3 0F85C0900000            	jne L_error_non_closure
 16951 0000BDB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16952 0000BDBC FF5009                  	call SOB_CLOSURE_CODE(rax)
 16953 0000BDBF 48890425[5A120000]      	mov qword [free_var_69], rax
 16954 0000BDC7 48B8-                   	mov rax, sob_void
 16954 0000BDC9 [0000000000000000] 
 16955 0000BDD1 C9                      	leave
 16956 0000BDD2 C21800                  	ret AND_KILL_FRAME(1)
 16957                                  .L_lambda_simple_end_005f:	; new closure is in rax
 16958 0000BDD5 803804                  	cmp byte [rax], T_closure
 16959 0000BDD8 0F859B900000            	jne L_error_non_closure
 16960 0000BDDE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16961 0000BDE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16962                                  
 16963 0000BDE4 4889C7                  	mov rdi, rax
 16964 0000BDE7 E88B930000              	call print_sexpr_if_not_void
 16965 0000BDEC 48B8-                   	mov rax, L_constants + 0
 16965 0000BDEE [0000000000000000] 
 16966 0000BDF6 48890425[23160000]      	mov qword [free_var_126], rax
 16967 0000BDFE 48B8-                   	mov rax, sob_void
 16967 0000BE00 [0000000000000000] 
 16968                                  
 16969 0000BE08 4889C7                  	mov rdi, rax
 16970 0000BE0B E867930000              	call print_sexpr_if_not_void
 16971 0000BE10 48B8-                   	mov rax, L_constants + 0
 16971 0000BE12 [0000000000000000] 
 16972 0000BE1A 48890425[89160000]      	mov qword [free_var_132], rax
 16973 0000BE22 48B8-                   	mov rax, sob_void
 16973 0000BE24 [0000000000000000] 
 16974                                  
 16975 0000BE2C 4889C7                  	mov rdi, rax
 16976 0000BE2F E843930000              	call print_sexpr_if_not_void
 16977                                  	; preparing a non-tail-call
 16978 0000BE34 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16979 0000BE39 E8E4900000              	call malloc
 16980 0000BE3E 50                      	push rax
 16981 0000BE3F BF00000000              	mov rdi, 8 * 0	; new rib
 16982 0000BE44 E8D9900000              	call malloc
 16983 0000BE49 50                      	push rax
 16984 0000BE4A BF08000000              	mov rdi, 8 * 1	; extended env
 16985 0000BE4F E8CE900000              	call malloc
 16986 0000BE54 488B7D10                	mov rdi, ENV
 16987 0000BE58 BE00000000              	mov rsi, 0
 16988 0000BE5D BA01000000              	mov rdx, 1
 16989                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 16990 0000BE62 4883FE00                	cmp rsi, 0
 16991 0000BE66 7410                    	je .L_lambda_simple_env_end_0060
 16992 0000BE68 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16993 0000BE6C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16994 0000BE70 48FFC6                  	inc rsi
 16995 0000BE73 48FFC2                  	inc rdx
 16996 0000BE76 EBEA                    	jmp .L_lambda_simple_env_loop_0060
 16997                                  .L_lambda_simple_env_end_0060:
 16998 0000BE78 5B                      	pop rbx
 16999 0000BE79 BE00000000              	mov rsi, 0
 17000                                  .L_lambda_simple_params_loop_0060:	; copy params
 17001 0000BE7E 4883FE00                	cmp rsi, 0
 17002 0000BE82 740E                    	je .L_lambda_simple_params_end_0060
 17003 0000BE84 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17004 0000BE89 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17005 0000BE8D 48FFC6                  	inc rsi
 17006 0000BE90 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 17007                                  .L_lambda_simple_params_end_0060:
 17008 0000BE92 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17009 0000BE95 4889C3                  	mov rbx, rax
 17010 0000BE98 58                      	pop rax
 17011 0000BE99 C60004                  	mov byte [rax], T_closure
 17012 0000BE9C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17013 0000BEA0 48C74009[ADBE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 17014 0000BEA8 E95E010000              	jmp .L_lambda_simple_end_0060
 17015                                  .L_lambda_simple_code_0060:	; lambda-simple body
 17016 0000BEAD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17017 0000BEB3 740B                    	je .L_lambda_simple_arity_check_ok_0060
 17018 0000BEB5 FF742410                	push qword [rsp + 8 * 2]
 17019 0000BEB9 6A01                    	push 1
 17020 0000BEBB E91B900000              	jmp L_error_incorrect_arity_simple
 17021                                  .L_lambda_simple_arity_check_ok_0060:
 17022 0000BEC0 C8000000                	enter 0, 0
 17023 0000BEC4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17024 0000BEC9 E854900000              	call malloc
 17025 0000BECE 50                      	push rax
 17026 0000BECF BF08000000              	mov rdi, 8 * 1	; new rib
 17027 0000BED4 E849900000              	call malloc
 17028 0000BED9 50                      	push rax
 17029 0000BEDA BF10000000              	mov rdi, 8 * 2	; extended env
 17030 0000BEDF E83E900000              	call malloc
 17031 0000BEE4 488B7D10                	mov rdi, ENV
 17032 0000BEE8 BE00000000              	mov rsi, 0
 17033 0000BEED BA01000000              	mov rdx, 1
 17034                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17035 0000BEF2 4883FE01                	cmp rsi, 1
 17036 0000BEF6 7410                    	je .L_lambda_simple_env_end_0061
 17037 0000BEF8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17038 0000BEFC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17039 0000BF00 48FFC6                  	inc rsi
 17040 0000BF03 48FFC2                  	inc rdx
 17041 0000BF06 EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17042                                  .L_lambda_simple_env_end_0061:
 17043 0000BF08 5B                      	pop rbx
 17044 0000BF09 BE00000000              	mov rsi, 0
 17045                                  .L_lambda_simple_params_loop_0061:	; copy params
 17046 0000BF0E 4883FE01                	cmp rsi, 1
 17047 0000BF12 740E                    	je .L_lambda_simple_params_end_0061
 17048 0000BF14 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17049 0000BF19 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17050 0000BF1D 48FFC6                  	inc rsi
 17051 0000BF20 EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17052                                  .L_lambda_simple_params_end_0061:
 17053 0000BF22 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17054 0000BF25 4889C3                  	mov rbx, rax
 17055 0000BF28 58                      	pop rax
 17056 0000BF29 C60004                  	mov byte [rax], T_closure
 17057 0000BF2C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17058 0000BF30 48C74009[3DBF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17059 0000BF38 E9CA000000              	jmp .L_lambda_simple_end_0061
 17060                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17061 0000BF3D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17062 0000BF43 740B                    	je .L_lambda_simple_arity_check_ok_0061
 17063 0000BF45 FF742410                	push qword [rsp + 8 * 2]
 17064 0000BF49 6A01                    	push 1
 17065 0000BF4B E98B8F0000              	jmp L_error_incorrect_arity_simple
 17066                                  .L_lambda_simple_arity_check_ok_0061:
 17067 0000BF50 C8000000                	enter 0, 0
 17068                                  	; Initiating tail-call optimization
 17069                                  	; preparing a non-tail-call
 17070                                  	; preparing a non-tail-call
 17071 0000BF54 488B4520                	mov rax, PARAM(0)	; param str
 17072 0000BF58 50                      	push rax
 17073 0000BF59 6A01                    	push 1	; arg count
 17074 0000BF5B 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 17075 0000BF63 803805                  	cmp byte [rax], T_undefined
 17076 0000BF66 0F84898E0000            	je L_error_fvar_undefined
 17077 0000BF6C 803804                  	cmp byte [rax], T_closure
 17078 0000BF6F 0F85048F0000            	jne L_error_non_closure
 17079 0000BF75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17080 0000BF78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17081 0000BF7B 50                      	push rax
 17082 0000BF7C 488B4510                	mov rax, ENV
 17083 0000BF80 488B00                  	mov rax, qword [rax + 8 * 0]
 17084 0000BF83 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17085 0000BF86 50                      	push rax
 17086 0000BF87 6A02                    	push 2	; arg count
 17087 0000BF89 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17088 0000BF91 803805                  	cmp byte [rax], T_undefined
 17089 0000BF94 0F845B8E0000            	je L_error_fvar_undefined
 17090 0000BF9A 803804                  	cmp byte [rax], T_closure
 17091 0000BF9D 0F85D68E0000            	jne L_error_non_closure
 17092 0000BFA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17093 0000BFA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17094 0000BFA9 50                      	push rax
 17095 0000BFAA 6A01                    	push 1	; Number of arguments
 17096 0000BFAC 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 17097 0000BFB4 803805                  	cmp byte [rax], T_undefined
 17098 0000BFB7 0F84388E0000            	je L_error_fvar_undefined
 17099 0000BFBD 803804                  	cmp byte [rax], T_closure
 17100 0000BFC0 0F85B38E0000            	jne L_error_non_closure
 17101 0000BFC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17102                                  
 17103                                  	; Reclaiming the current stack frame
 17104 0000BFC9 FF7508                  	push qword [rbp + 8]
 17105 0000BFCC FF7500                  	push qword [rbp]
 17106 0000BFCF 41BA05000000            	mov r10, 1 + 4
 17107 0000BFD5 4C8B4518                	mov r8, COUNT
 17108 0000BFD9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17109 0000BFDE 4C8D4DF8                	lea r9, [rbp - 8]
 17110                                  .L_tc_recycle_frame_loop_0098:
 17111 0000BFE2 4983FA00                	cmp r10, 0
 17112 0000BFE6 7413                    	je .L_tc_recycle_frame_done_0098
 17113 0000BFE8 4D8B19                  	mov r11, qword [r9]
 17114 0000BFEB 4D8918                  	mov qword [r8], r11
 17115 0000BFEE 49FFCA                  	dec r10
 17116 0000BFF1 4983E808                	sub r8, 8
 17117 0000BFF5 4983E908                	sub r9, 8
 17118 0000BFF9 EBE7                    	jmp .L_tc_recycle_frame_loop_0098
 17119                                  .L_tc_recycle_frame_done_0098:
 17120 0000BFFB 498D6008                	lea rsp, [r8 + 8]
 17121 0000BFFF 5D                      	pop rbp
 17122 0000C000 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17123 0000C003 C9                      	leave
 17124 0000C004 C21800                  	ret AND_KILL_FRAME(1)
 17125                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17126 0000C007 C9                      	leave
 17127 0000C008 C21800                  	ret AND_KILL_FRAME(1)
 17128                                  .L_lambda_simple_end_0060:	; new closure is in rax
 17129 0000C00B 50                      	push rax
 17130 0000C00C 6A01                    	push 1	; arg count
 17131 0000C00E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17132 0000C013 E80A8F0000              	call malloc
 17133 0000C018 50                      	push rax
 17134 0000C019 BF00000000              	mov rdi, 8 * 0	; new rib
 17135 0000C01E E8FF8E0000              	call malloc
 17136 0000C023 50                      	push rax
 17137 0000C024 BF08000000              	mov rdi, 8 * 1	; extended env
 17138 0000C029 E8F48E0000              	call malloc
 17139 0000C02E 488B7D10                	mov rdi, ENV
 17140 0000C032 BE00000000              	mov rsi, 0
 17141 0000C037 BA01000000              	mov rdx, 1
 17142                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 17143 0000C03C 4883FE00                	cmp rsi, 0
 17144 0000C040 7410                    	je .L_lambda_simple_env_end_0062
 17145 0000C042 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17146 0000C046 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17147 0000C04A 48FFC6                  	inc rsi
 17148 0000C04D 48FFC2                  	inc rdx
 17149 0000C050 EBEA                    	jmp .L_lambda_simple_env_loop_0062
 17150                                  .L_lambda_simple_env_end_0062:
 17151 0000C052 5B                      	pop rbx
 17152 0000C053 BE00000000              	mov rsi, 0
 17153                                  .L_lambda_simple_params_loop_0062:	; copy params
 17154 0000C058 4883FE00                	cmp rsi, 0
 17155 0000C05C 740E                    	je .L_lambda_simple_params_end_0062
 17156 0000C05E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17157 0000C063 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17158 0000C067 48FFC6                  	inc rsi
 17159 0000C06A EBEC                    	jmp .L_lambda_simple_params_loop_0062
 17160                                  .L_lambda_simple_params_end_0062:
 17161 0000C06C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17162 0000C06F 4889C3                  	mov rbx, rax
 17163 0000C072 58                      	pop rax
 17164 0000C073 C60004                  	mov byte [rax], T_closure
 17165 0000C076 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17166 0000C07A 48C74009[87C00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 17167 0000C082 E98D000000              	jmp .L_lambda_simple_end_0062
 17168                                  .L_lambda_simple_code_0062:	; lambda-simple body
 17169 0000C087 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17170 0000C08D 740B                    	je .L_lambda_simple_arity_check_ok_0062
 17171 0000C08F FF742410                	push qword [rsp + 8 * 2]
 17172 0000C093 6A01                    	push 1
 17173 0000C095 E9418E0000              	jmp L_error_incorrect_arity_simple
 17174                                  .L_lambda_simple_arity_check_ok_0062:
 17175 0000C09A C8000000                	enter 0, 0
 17176                                  	; preparing a non-tail-call
 17177 0000C09E 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17178 0000C0A6 803805                  	cmp byte [rax], T_undefined
 17179 0000C0A9 0F84468D0000            	je L_error_fvar_undefined
 17180 0000C0AF 50                      	push rax
 17181 0000C0B0 6A01                    	push 1	; arg count
 17182 0000C0B2 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17183 0000C0B6 803804                  	cmp byte [rax], T_closure
 17184 0000C0B9 0F85BA8D0000            	jne L_error_non_closure
 17185 0000C0BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 17186 0000C0C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17187 0000C0C5 48890425[23160000]      	mov qword [free_var_126], rax
 17188 0000C0CD 48B8-                   	mov rax, sob_void
 17188 0000C0CF [0000000000000000] 
 17189                                  
 17190                                  	; preparing a non-tail-call
 17191 0000C0D7 488B0425[8D120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 17192 0000C0DF 803805                  	cmp byte [rax], T_undefined
 17193 0000C0E2 0F840D8D0000            	je L_error_fvar_undefined
 17194 0000C0E8 50                      	push rax
 17195 0000C0E9 6A01                    	push 1	; arg count
 17196 0000C0EB 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17197 0000C0EF 803804                  	cmp byte [rax], T_closure
 17198 0000C0F2 0F85818D0000            	jne L_error_non_closure
 17199 0000C0F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17200 0000C0FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 17201 0000C0FE 48890425[89160000]      	mov qword [free_var_132], rax
 17202 0000C106 48B8-                   	mov rax, sob_void
 17202 0000C108 [0000000000000000] 
 17203 0000C110 C9                      	leave
 17204 0000C111 C21800                  	ret AND_KILL_FRAME(1)
 17205                                  .L_lambda_simple_end_0062:	; new closure is in rax
 17206 0000C114 803804                  	cmp byte [rax], T_closure
 17207 0000C117 0F855C8D0000            	jne L_error_non_closure
 17208 0000C11D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17209 0000C120 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17210                                  
 17211 0000C123 4889C7                  	mov rdi, rax
 17212 0000C126 E84C900000              	call print_sexpr_if_not_void
 17213 0000C12B 48B8-                   	mov rax, L_constants + 0
 17213 0000C12D [0000000000000000] 
 17214 0000C135 48890425[AB160000]      	mov qword [free_var_134], rax
 17215 0000C13D 48B8-                   	mov rax, sob_void
 17215 0000C13F [0000000000000000] 
 17216                                  
 17217 0000C147 4889C7                  	mov rdi, rax
 17218 0000C14A E828900000              	call print_sexpr_if_not_void
 17219 0000C14F 48B8-                   	mov rax, L_constants + 0
 17219 0000C151 [0000000000000000] 
 17220 0000C159 48890425[9A160000]      	mov qword [free_var_133], rax
 17221 0000C161 48B8-                   	mov rax, sob_void
 17221 0000C163 [0000000000000000] 
 17222                                  
 17223 0000C16B 4889C7                  	mov rdi, rax
 17224 0000C16E E804900000              	call print_sexpr_if_not_void
 17225 0000C173 48B8-                   	mov rax, L_constants + 0
 17225 0000C175 [0000000000000000] 
 17226 0000C17D 48890425[BC160000]      	mov qword [free_var_135], rax
 17227 0000C185 48B8-                   	mov rax, sob_void
 17227 0000C187 [0000000000000000] 
 17228                                  
 17229 0000C18F 4889C7                  	mov rdi, rax
 17230 0000C192 E8E08F0000              	call print_sexpr_if_not_void
 17231 0000C197 48B8-                   	mov rax, L_constants + 0
 17231 0000C199 [0000000000000000] 
 17232 0000C1A1 48890425[CD160000]      	mov qword [free_var_136], rax
 17233 0000C1A9 48B8-                   	mov rax, sob_void
 17233 0000C1AB [0000000000000000] 
 17234                                  
 17235 0000C1B3 4889C7                  	mov rdi, rax
 17236 0000C1B6 E8BC8F0000              	call print_sexpr_if_not_void
 17237 0000C1BB 48B8-                   	mov rax, L_constants + 0
 17237 0000C1BD [0000000000000000] 
 17238 0000C1C5 48890425[DE160000]      	mov qword [free_var_137], rax
 17239 0000C1CD 48B8-                   	mov rax, sob_void
 17239 0000C1CF [0000000000000000] 
 17240                                  
 17241 0000C1D7 4889C7                  	mov rdi, rax
 17242 0000C1DA E8988F0000              	call print_sexpr_if_not_void
 17243 0000C1DF 48B8-                   	mov rax, L_constants + 0
 17243 0000C1E1 [0000000000000000] 
 17244 0000C1E9 48890425[DF150000]      	mov qword [free_var_122], rax
 17245 0000C1F1 48B8-                   	mov rax, sob_void
 17245 0000C1F3 [0000000000000000] 
 17246                                  
 17247 0000C1FB 4889C7                  	mov rdi, rax
 17248 0000C1FE E8748F0000              	call print_sexpr_if_not_void
 17249 0000C203 48B8-                   	mov rax, L_constants + 0
 17249 0000C205 [0000000000000000] 
 17250 0000C20D 48890425[CE150000]      	mov qword [free_var_121], rax
 17251 0000C215 48B8-                   	mov rax, sob_void
 17251 0000C217 [0000000000000000] 
 17252                                  
 17253 0000C21F 4889C7                  	mov rdi, rax
 17254 0000C222 E8508F0000              	call print_sexpr_if_not_void
 17255 0000C227 48B8-                   	mov rax, L_constants + 0
 17255 0000C229 [0000000000000000] 
 17256 0000C231 48890425[F0150000]      	mov qword [free_var_123], rax
 17257 0000C239 48B8-                   	mov rax, sob_void
 17257 0000C23B [0000000000000000] 
 17258                                  
 17259 0000C243 4889C7                  	mov rdi, rax
 17260 0000C246 E82C8F0000              	call print_sexpr_if_not_void
 17261 0000C24B 48B8-                   	mov rax, L_constants + 0
 17261 0000C24D [0000000000000000] 
 17262 0000C255 48890425[01160000]      	mov qword [free_var_124], rax
 17263 0000C25D 48B8-                   	mov rax, sob_void
 17263 0000C25F [0000000000000000] 
 17264                                  
 17265 0000C267 4889C7                  	mov rdi, rax
 17266 0000C26A E8088F0000              	call print_sexpr_if_not_void
 17267 0000C26F 48B8-                   	mov rax, L_constants + 0
 17267 0000C271 [0000000000000000] 
 17268 0000C279 48890425[12160000]      	mov qword [free_var_125], rax
 17269 0000C281 48B8-                   	mov rax, sob_void
 17269 0000C283 [0000000000000000] 
 17270                                  
 17271 0000C28B 4889C7                  	mov rdi, rax
 17272 0000C28E E8E48E0000              	call print_sexpr_if_not_void
 17273                                  	; preparing a non-tail-call
 17274 0000C293 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17275 0000C298 E8858C0000              	call malloc
 17276 0000C29D 50                      	push rax
 17277 0000C29E BF00000000              	mov rdi, 8 * 0	; new rib
 17278 0000C2A3 E87A8C0000              	call malloc
 17279 0000C2A8 50                      	push rax
 17280 0000C2A9 BF08000000              	mov rdi, 8 * 1	; extended env
 17281 0000C2AE E86F8C0000              	call malloc
 17282 0000C2B3 488B7D10                	mov rdi, ENV
 17283 0000C2B7 BE00000000              	mov rsi, 0
 17284 0000C2BC BA01000000              	mov rdx, 1
 17285                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 17286 0000C2C1 4883FE00                	cmp rsi, 0
 17287 0000C2C5 7410                    	je .L_lambda_simple_env_end_0063
 17288 0000C2C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17289 0000C2CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17290 0000C2CF 48FFC6                  	inc rsi
 17291 0000C2D2 48FFC2                  	inc rdx
 17292 0000C2D5 EBEA                    	jmp .L_lambda_simple_env_loop_0063
 17293                                  .L_lambda_simple_env_end_0063:
 17294 0000C2D7 5B                      	pop rbx
 17295 0000C2D8 BE00000000              	mov rsi, 0
 17296                                  .L_lambda_simple_params_loop_0063:	; copy params
 17297 0000C2DD 4883FE00                	cmp rsi, 0
 17298 0000C2E1 740E                    	je .L_lambda_simple_params_end_0063
 17299 0000C2E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17300 0000C2E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17301 0000C2EC 48FFC6                  	inc rsi
 17302 0000C2EF EBEC                    	jmp .L_lambda_simple_params_loop_0063
 17303                                  .L_lambda_simple_params_end_0063:
 17304 0000C2F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17305 0000C2F4 4889C3                  	mov rbx, rax
 17306 0000C2F7 58                      	pop rax
 17307 0000C2F8 C60004                  	mov byte [rax], T_closure
 17308 0000C2FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17309 0000C2FF 48C74009[0CC30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17310 0000C307 E9910C0000              	jmp .L_lambda_simple_end_0063
 17311                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17312 0000C30C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17313 0000C312 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17314 0000C314 FF742410                	push qword [rsp + 8 * 2]
 17315 0000C318 6A02                    	push 2
 17316 0000C31A E9BC8B0000              	jmp L_error_incorrect_arity_simple
 17317                                  .L_lambda_simple_arity_check_ok_0063:
 17318 0000C31F C8000000                	enter 0, 0
 17319                                  	; Initiating tail-call optimization
 17320 0000C323 48B8-                   	mov rax, L_constants + 2007
 17320 0000C325 [D707000000000000] 
 17321 0000C32D 50                      	push rax
 17322 0000C32E 6A01                    	push 1	; Number of arguments
 17323 0000C330 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17324 0000C335 E8E88B0000              	call malloc
 17325 0000C33A 50                      	push rax
 17326 0000C33B BF10000000              	mov rdi, 8 * 2	; new rib
 17327 0000C340 E8DD8B0000              	call malloc
 17328 0000C345 50                      	push rax
 17329 0000C346 BF10000000              	mov rdi, 8 * 2	; extended env
 17330 0000C34B E8D28B0000              	call malloc
 17331 0000C350 488B7D10                	mov rdi, ENV
 17332 0000C354 BE00000000              	mov rsi, 0
 17333 0000C359 BA01000000              	mov rdx, 1
 17334                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17335 0000C35E 4883FE01                	cmp rsi, 1
 17336 0000C362 7410                    	je .L_lambda_simple_env_end_0064
 17337 0000C364 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17338 0000C368 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17339 0000C36C 48FFC6                  	inc rsi
 17340 0000C36F 48FFC2                  	inc rdx
 17341 0000C372 EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17342                                  .L_lambda_simple_env_end_0064:
 17343 0000C374 5B                      	pop rbx
 17344 0000C375 BE00000000              	mov rsi, 0
 17345                                  .L_lambda_simple_params_loop_0064:	; copy params
 17346 0000C37A 4883FE02                	cmp rsi, 2
 17347 0000C37E 740E                    	je .L_lambda_simple_params_end_0064
 17348 0000C380 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17349 0000C385 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17350 0000C389 48FFC6                  	inc rsi
 17351 0000C38C EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17352                                  .L_lambda_simple_params_end_0064:
 17353 0000C38E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17354 0000C391 4889C3                  	mov rbx, rax
 17355 0000C394 58                      	pop rax
 17356 0000C395 C60004                  	mov byte [rax], T_closure
 17357 0000C398 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17358 0000C39C 48C74009[A9C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17359 0000C3A4 E9AA0B0000              	jmp .L_lambda_simple_end_0064
 17360                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17361 0000C3A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17362 0000C3AF 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17363 0000C3B1 FF742410                	push qword [rsp + 8 * 2]
 17364 0000C3B5 6A01                    	push 1
 17365 0000C3B7 E91F8B0000              	jmp L_error_incorrect_arity_simple
 17366                                  .L_lambda_simple_arity_check_ok_0064:
 17367 0000C3BC C8000000                	enter 0, 0
 17368 0000C3C0 BF08000000              	mov rdi, 8 * 1
 17369 0000C3C5 E8588B0000              	call malloc
 17370 0000C3CA 488B5D20                	mov rbx, PARAM(0)
 17371 0000C3CE 488918                  	mov qword [rax], rbx
 17372 0000C3D1 48894520                	mov PARAM(0), rax
 17373 0000C3D5 48B8-                   	mov rax, sob_void
 17373 0000C3D7 [0000000000000000] 
 17374                                  
 17375 0000C3DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17376 0000C3E4 E8398B0000              	call malloc
 17377 0000C3E9 50                      	push rax
 17378 0000C3EA BF08000000              	mov rdi, 8 * 1	; new rib
 17379 0000C3EF E82E8B0000              	call malloc
 17380 0000C3F4 50                      	push rax
 17381 0000C3F5 BF18000000              	mov rdi, 8 * 3	; extended env
 17382 0000C3FA E8238B0000              	call malloc
 17383 0000C3FF 488B7D10                	mov rdi, ENV
 17384 0000C403 BE00000000              	mov rsi, 0
 17385 0000C408 BA01000000              	mov rdx, 1
 17386                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17387 0000C40D 4883FE02                	cmp rsi, 2
 17388 0000C411 7410                    	je .L_lambda_simple_env_end_0065
 17389 0000C413 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17390 0000C417 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17391 0000C41B 48FFC6                  	inc rsi
 17392 0000C41E 48FFC2                  	inc rdx
 17393 0000C421 EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17394                                  .L_lambda_simple_env_end_0065:
 17395 0000C423 5B                      	pop rbx
 17396 0000C424 BE00000000              	mov rsi, 0
 17397                                  .L_lambda_simple_params_loop_0065:	; copy params
 17398 0000C429 4883FE01                	cmp rsi, 1
 17399 0000C42D 740E                    	je .L_lambda_simple_params_end_0065
 17400 0000C42F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17401 0000C434 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17402 0000C438 48FFC6                  	inc rsi
 17403 0000C43B EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17404                                  .L_lambda_simple_params_end_0065:
 17405 0000C43D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17406 0000C440 4889C3                  	mov rbx, rax
 17407 0000C443 58                      	pop rax
 17408 0000C444 C60004                  	mov byte [rax], T_closure
 17409 0000C447 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17410 0000C44B 48C74009[58C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17411 0000C453 E984020000              	jmp .L_lambda_simple_end_0065
 17412                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17413 0000C458 48837C241005            	cmp qword [rsp + 8 * 2], 5
 17414 0000C45E 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17415 0000C460 FF742410                	push qword [rsp + 8 * 2]
 17416 0000C464 6A05                    	push 5
 17417 0000C466 E9708A0000              	jmp L_error_incorrect_arity_simple
 17418                                  .L_lambda_simple_arity_check_ok_0065:
 17419 0000C46B C8000000                	enter 0, 0
 17420                                  	; preparing a non-tail-call
 17421 0000C46F 488B4530                	mov rax, PARAM(2)	; param len1
 17422 0000C473 50                      	push rax
 17423 0000C474 488B4520                	mov rax, PARAM(0)	; param i
 17424 0000C478 50                      	push rax
 17425 0000C479 6A02                    	push 2	; arg count
 17426 0000C47B 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17427 0000C483 803805                  	cmp byte [rax], T_undefined
 17428 0000C486 0F8469890000            	je L_error_fvar_undefined
 17429 0000C48C 803804                  	cmp byte [rax], T_closure
 17430 0000C48F 0F85E4890000            	jne L_error_non_closure
 17431 0000C495 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17432 0000C498 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17433 0000C49B 483D[02000000]          	cmp rax, sob_boolean_false
 17434 0000C4A1 742E                    	je .L_if_else_0053
 17435                                  	; preparing a non-tail-call
 17436 0000C4A3 488B4540                	mov rax, PARAM(4)	; param len2
 17437 0000C4A7 50                      	push rax
 17438 0000C4A8 488B4530                	mov rax, PARAM(2)	; param len1
 17439 0000C4AC 50                      	push rax
 17440 0000C4AD 6A02                    	push 2	; arg count
 17441 0000C4AF 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17442 0000C4B7 803805                  	cmp byte [rax], T_undefined
 17443 0000C4BA 0F8435890000            	je L_error_fvar_undefined
 17444 0000C4C0 803804                  	cmp byte [rax], T_closure
 17445 0000C4C3 0F85B0890000            	jne L_error_non_closure
 17446 0000C4C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17447 0000C4CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17448 0000C4CF EB0A                    	jmp .L_if_end_0053
 17449                                  .L_if_else_0053:
 17450 0000C4D1 48B8-                   	mov rax, L_constants + 2
 17450 0000C4D3 [0200000000000000] 
 17451                                  .L_if_end_0053:
 17452 0000C4DB 483D[02000000]          	cmp rax, sob_boolean_false
 17453 0000C4E1 0F85F1010000            	jne .L_or_end_0007
 17454                                  
 17455                                  	; preparing a non-tail-call
 17456 0000C4E7 488B4530                	mov rax, PARAM(2)	; param len1
 17457 0000C4EB 50                      	push rax
 17458 0000C4EC 488B4520                	mov rax, PARAM(0)	; param i
 17459 0000C4F0 50                      	push rax
 17460 0000C4F1 6A02                    	push 2	; arg count
 17461 0000C4F3 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17462 0000C4FB 803805                  	cmp byte [rax], T_undefined
 17463 0000C4FE 0F84F1880000            	je L_error_fvar_undefined
 17464 0000C504 803804                  	cmp byte [rax], T_closure
 17465 0000C507 0F856C890000            	jne L_error_non_closure
 17466 0000C50D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17467 0000C510 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17468 0000C513 483D[02000000]          	cmp rax, sob_boolean_false
 17469 0000C519 0F84AF010000            	je .L_if_else_0055
 17470                                  	; preparing a non-tail-call
 17471                                  	; preparing a non-tail-call
 17472 0000C51F 488B4520                	mov rax, PARAM(0)	; param i
 17473 0000C523 50                      	push rax
 17474 0000C524 488B4538                	mov rax, PARAM(3)	; param str2
 17475 0000C528 50                      	push rax
 17476 0000C529 6A02                    	push 2	; arg count
 17477 0000C52B 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17478 0000C533 803805                  	cmp byte [rax], T_undefined
 17479 0000C536 0F84B9880000            	je L_error_fvar_undefined
 17480 0000C53C 803804                  	cmp byte [rax], T_closure
 17481 0000C53F 0F8534890000            	jne L_error_non_closure
 17482 0000C545 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17483 0000C548 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17484 0000C54B 50                      	push rax
 17485                                  	; preparing a non-tail-call
 17486 0000C54C 488B4520                	mov rax, PARAM(0)	; param i
 17487 0000C550 50                      	push rax
 17488 0000C551 488B4528                	mov rax, PARAM(1)	; param str1
 17489 0000C555 50                      	push rax
 17490 0000C556 6A02                    	push 2	; arg count
 17491 0000C558 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17492 0000C560 803805                  	cmp byte [rax], T_undefined
 17493 0000C563 0F848C880000            	je L_error_fvar_undefined
 17494 0000C569 803804                  	cmp byte [rax], T_closure
 17495 0000C56C 0F8507890000            	jne L_error_non_closure
 17496 0000C572 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17497 0000C575 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17498 0000C578 50                      	push rax
 17499 0000C579 6A02                    	push 2	; arg count
 17500 0000C57B 488B4510                	mov rax, ENV
 17501 0000C57F 488B4008                	mov rax, qword [rax + 8 * 1]
 17502 0000C583 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 17503 0000C586 803804                  	cmp byte [rax], T_closure
 17504 0000C589 0F85EA880000            	jne L_error_non_closure
 17505 0000C58F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17506 0000C592 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17507 0000C595 483D[02000000]          	cmp rax, sob_boolean_false
 17508 0000C59B 0F852B010000            	jne .L_or_end_0008
 17509                                  
 17510                                  	; preparing a non-tail-call
 17511                                  	; preparing a non-tail-call
 17512 0000C5A1 488B4520                	mov rax, PARAM(0)	; param i
 17513 0000C5A5 50                      	push rax
 17514 0000C5A6 488B4538                	mov rax, PARAM(3)	; param str2
 17515 0000C5AA 50                      	push rax
 17516 0000C5AB 6A02                    	push 2	; arg count
 17517 0000C5AD 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17518 0000C5B5 803805                  	cmp byte [rax], T_undefined
 17519 0000C5B8 0F8437880000            	je L_error_fvar_undefined
 17520 0000C5BE 803804                  	cmp byte [rax], T_closure
 17521 0000C5C1 0F85B2880000            	jne L_error_non_closure
 17522 0000C5C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17523 0000C5CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 17524 0000C5CD 50                      	push rax
 17525                                  	; preparing a non-tail-call
 17526 0000C5CE 488B4520                	mov rax, PARAM(0)	; param i
 17527 0000C5D2 50                      	push rax
 17528 0000C5D3 488B4528                	mov rax, PARAM(1)	; param str1
 17529 0000C5D7 50                      	push rax
 17530 0000C5D8 6A02                    	push 2	; arg count
 17531 0000C5DA 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17532 0000C5E2 803805                  	cmp byte [rax], T_undefined
 17533 0000C5E5 0F840A880000            	je L_error_fvar_undefined
 17534 0000C5EB 803804                  	cmp byte [rax], T_closure
 17535 0000C5EE 0F8585880000            	jne L_error_non_closure
 17536 0000C5F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17537 0000C5F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17538 0000C5FA 50                      	push rax
 17539 0000C5FB 6A02                    	push 2	; arg count
 17540 0000C5FD 488B4510                	mov rax, ENV
 17541 0000C601 488B4008                	mov rax, qword [rax + 8 * 1]
 17542 0000C605 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 17543 0000C609 803804                  	cmp byte [rax], T_closure
 17544 0000C60C 0F8567880000            	jne L_error_non_closure
 17545 0000C612 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17546 0000C615 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17547 0000C618 483D[02000000]          	cmp rax, sob_boolean_false
 17548 0000C61E 0F849E000000            	je .L_if_else_0054
 17549                                  	; Initiating tail-call optimization
 17550 0000C624 488B4540                	mov rax, PARAM(4)	; param len2
 17551 0000C628 50                      	push rax
 17552 0000C629 488B4538                	mov rax, PARAM(3)	; param str2
 17553 0000C62D 50                      	push rax
 17554 0000C62E 488B4530                	mov rax, PARAM(2)	; param len1
 17555 0000C632 50                      	push rax
 17556 0000C633 488B4528                	mov rax, PARAM(1)	; param str1
 17557 0000C637 50                      	push rax
 17558                                  	; preparing a non-tail-call
 17559 0000C638 48B8-                   	mov rax, L_constants + 2270
 17559 0000C63A [DE08000000000000] 
 17560 0000C642 50                      	push rax
 17561 0000C643 488B4520                	mov rax, PARAM(0)	; param i
 17562 0000C647 50                      	push rax
 17563 0000C648 6A02                    	push 2	; arg count
 17564 0000C64A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 17565 0000C652 803805                  	cmp byte [rax], T_undefined
 17566 0000C655 0F849A870000            	je L_error_fvar_undefined
 17567 0000C65B 803804                  	cmp byte [rax], T_closure
 17568 0000C65E 0F8515880000            	jne L_error_non_closure
 17569 0000C664 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17570 0000C667 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17571 0000C66A 50                      	push rax
 17572 0000C66B 6A05                    	push 5	; Number of arguments
 17573 0000C66D 488B4510                	mov rax, ENV
 17574 0000C671 488B00                  	mov rax, qword [rax + 8 * 0]
 17575 0000C674 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17576 0000C677 488B00                  	mov rax, qword [rax]
 17577 0000C67A 803804                  	cmp byte [rax], T_closure
 17578 0000C67D 0F85F6870000            	jne L_error_non_closure
 17579 0000C683 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17580                                  
 17581                                  	; Reclaiming the current stack frame
 17582 0000C686 FF7508                  	push qword [rbp + 8]
 17583 0000C689 FF7500                  	push qword [rbp]
 17584 0000C68C 41BA09000000            	mov r10, 5 + 4
 17585 0000C692 4C8B4518                	mov r8, COUNT
 17586 0000C696 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17587 0000C69B 4C8D4DF8                	lea r9, [rbp - 8]
 17588                                  .L_tc_recycle_frame_loop_0099:
 17589 0000C69F 4983FA00                	cmp r10, 0
 17590 0000C6A3 7413                    	je .L_tc_recycle_frame_done_0099
 17591 0000C6A5 4D8B19                  	mov r11, qword [r9]
 17592 0000C6A8 4D8918                  	mov qword [r8], r11
 17593 0000C6AB 49FFCA                  	dec r10
 17594 0000C6AE 4983E808                	sub r8, 8
 17595 0000C6B2 4983E908                	sub r9, 8
 17596 0000C6B6 EBE7                    	jmp .L_tc_recycle_frame_loop_0099
 17597                                  .L_tc_recycle_frame_done_0099:
 17598 0000C6B8 498D6008                	lea rsp, [r8 + 8]
 17599 0000C6BC 5D                      	pop rbp
 17600 0000C6BD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17601 0000C6C0 EB0A                    	jmp .L_if_end_0054
 17602                                  .L_if_else_0054:
 17603 0000C6C2 48B8-                   	mov rax, L_constants + 2
 17603 0000C6C4 [0200000000000000] 
 17604                                  .L_if_end_0054:
 17605                                  .L_or_end_0008:
 17606 0000C6CC EB0A                    	jmp .L_if_end_0055
 17607                                  .L_if_else_0055:
 17608 0000C6CE 48B8-                   	mov rax, L_constants + 2
 17608 0000C6D0 [0200000000000000] 
 17609                                  .L_if_end_0055:
 17610                                  .L_or_end_0007:
 17611 0000C6D8 C9                      	leave
 17612 0000C6D9 C23800                  	ret AND_KILL_FRAME(5)
 17613                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17614 0000C6DC 50                      	push rax
 17615 0000C6DD 488B4520                	mov rax, PARAM(0)	; param run
 17616 0000C6E1 8F00                    	pop qword [rax]
 17617 0000C6E3 48B8-                   	mov rax, sob_void
 17617 0000C6E5 [0000000000000000] 
 17618                                  
 17619                                  	; preparing a non-tail-call
 17620 0000C6ED BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17621 0000C6F2 E82B880000              	call malloc
 17622 0000C6F7 50                      	push rax
 17623 0000C6F8 BF08000000              	mov rdi, 8 * 1	; new rib
 17624 0000C6FD E820880000              	call malloc
 17625 0000C702 50                      	push rax
 17626 0000C703 BF18000000              	mov rdi, 8 * 3	; extended env
 17627 0000C708 E815880000              	call malloc
 17628 0000C70D 488B7D10                	mov rdi, ENV
 17629 0000C711 BE00000000              	mov rsi, 0
 17630 0000C716 BA01000000              	mov rdx, 1
 17631                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17632 0000C71B 4883FE02                	cmp rsi, 2
 17633 0000C71F 7410                    	je .L_lambda_simple_env_end_0066
 17634 0000C721 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17635 0000C725 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17636 0000C729 48FFC6                  	inc rsi
 17637 0000C72C 48FFC2                  	inc rdx
 17638 0000C72F EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17639                                  .L_lambda_simple_env_end_0066:
 17640 0000C731 5B                      	pop rbx
 17641 0000C732 BE00000000              	mov rsi, 0
 17642                                  .L_lambda_simple_params_loop_0066:	; copy params
 17643 0000C737 4883FE01                	cmp rsi, 1
 17644 0000C73B 740E                    	je .L_lambda_simple_params_end_0066
 17645 0000C73D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17646 0000C742 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17647 0000C746 48FFC6                  	inc rsi
 17648 0000C749 EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17649                                  .L_lambda_simple_params_end_0066:
 17650 0000C74B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17651 0000C74E 4889C3                  	mov rbx, rax
 17652 0000C751 58                      	pop rax
 17653 0000C752 C60004                  	mov byte [rax], T_closure
 17654 0000C755 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17655 0000C759 48C74009[66C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17656 0000C761 E988020000              	jmp .L_lambda_simple_end_0066
 17657                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17658 0000C766 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17659 0000C76C 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17660 0000C76E FF742410                	push qword [rsp + 8 * 2]
 17661 0000C772 6A02                    	push 2
 17662 0000C774 E962870000              	jmp L_error_incorrect_arity_simple
 17663                                  .L_lambda_simple_arity_check_ok_0066:
 17664 0000C779 C8000000                	enter 0, 0
 17665                                  	; Initiating tail-call optimization
 17666                                  	; preparing a non-tail-call
 17667 0000C77D 488B4528                	mov rax, PARAM(1)	; param str2
 17668 0000C781 50                      	push rax
 17669 0000C782 6A01                    	push 1	; arg count
 17670 0000C784 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17671 0000C78C 803805                  	cmp byte [rax], T_undefined
 17672 0000C78F 0F8460860000            	je L_error_fvar_undefined
 17673 0000C795 803804                  	cmp byte [rax], T_closure
 17674 0000C798 0F85DB860000            	jne L_error_non_closure
 17675 0000C79E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17676 0000C7A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17677 0000C7A4 50                      	push rax
 17678                                  	; preparing a non-tail-call
 17679 0000C7A5 488B4520                	mov rax, PARAM(0)	; param str1
 17680 0000C7A9 50                      	push rax
 17681 0000C7AA 6A01                    	push 1	; arg count
 17682 0000C7AC 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17683 0000C7B4 803805                  	cmp byte [rax], T_undefined
 17684 0000C7B7 0F8438860000            	je L_error_fvar_undefined
 17685 0000C7BD 803804                  	cmp byte [rax], T_closure
 17686 0000C7C0 0F85B3860000            	jne L_error_non_closure
 17687 0000C7C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17688 0000C7C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17689 0000C7CC 50                      	push rax
 17690 0000C7CD 6A02                    	push 2	; Number of arguments
 17691 0000C7CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17692 0000C7D4 E849870000              	call malloc
 17693 0000C7D9 50                      	push rax
 17694 0000C7DA BF10000000              	mov rdi, 8 * 2	; new rib
 17695 0000C7DF E83E870000              	call malloc
 17696 0000C7E4 50                      	push rax
 17697 0000C7E5 BF20000000              	mov rdi, 8 * 4	; extended env
 17698 0000C7EA E833870000              	call malloc
 17699 0000C7EF 488B7D10                	mov rdi, ENV
 17700 0000C7F3 BE00000000              	mov rsi, 0
 17701 0000C7F8 BA01000000              	mov rdx, 1
 17702                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17703 0000C7FD 4883FE03                	cmp rsi, 3
 17704 0000C801 7410                    	je .L_lambda_simple_env_end_0067
 17705 0000C803 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17706 0000C807 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17707 0000C80B 48FFC6                  	inc rsi
 17708 0000C80E 48FFC2                  	inc rdx
 17709 0000C811 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17710                                  .L_lambda_simple_env_end_0067:
 17711 0000C813 5B                      	pop rbx
 17712 0000C814 BE00000000              	mov rsi, 0
 17713                                  .L_lambda_simple_params_loop_0067:	; copy params
 17714 0000C819 4883FE02                	cmp rsi, 2
 17715 0000C81D 740E                    	je .L_lambda_simple_params_end_0067
 17716 0000C81F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17717 0000C824 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17718 0000C828 48FFC6                  	inc rsi
 17719 0000C82B EBEC                    	jmp .L_lambda_simple_params_loop_0067
 17720                                  .L_lambda_simple_params_end_0067:
 17721 0000C82D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17722 0000C830 4889C3                  	mov rbx, rax
 17723 0000C833 58                      	pop rax
 17724 0000C834 C60004                  	mov byte [rax], T_closure
 17725 0000C837 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17726 0000C83B 48C74009[48C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 17727 0000C843 E95C010000              	jmp .L_lambda_simple_end_0067
 17728                                  .L_lambda_simple_code_0067:	; lambda-simple body
 17729 0000C848 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17730 0000C84E 740B                    	je .L_lambda_simple_arity_check_ok_0067
 17731 0000C850 FF742410                	push qword [rsp + 8 * 2]
 17732 0000C854 6A02                    	push 2
 17733 0000C856 E980860000              	jmp L_error_incorrect_arity_simple
 17734                                  .L_lambda_simple_arity_check_ok_0067:
 17735 0000C85B C8000000                	enter 0, 0
 17736                                  	; preparing a non-tail-call
 17737 0000C85F 488B4528                	mov rax, PARAM(1)	; param len2
 17738 0000C863 50                      	push rax
 17739 0000C864 488B4520                	mov rax, PARAM(0)	; param len1
 17740 0000C868 50                      	push rax
 17741 0000C869 6A02                    	push 2	; arg count
 17742 0000C86B 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17743 0000C873 803805                  	cmp byte [rax], T_undefined
 17744 0000C876 0F8479850000            	je L_error_fvar_undefined
 17745 0000C87C 803804                  	cmp byte [rax], T_closure
 17746 0000C87F 0F85F4850000            	jne L_error_non_closure
 17747 0000C885 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17748 0000C888 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17749 0000C88B 483D[02000000]          	cmp rax, sob_boolean_false
 17750 0000C891 0F8487000000            	je .L_if_else_0056
 17751                                  	; Initiating tail-call optimization
 17752 0000C897 488B4528                	mov rax, PARAM(1)	; param len2
 17753 0000C89B 50                      	push rax
 17754 0000C89C 488B4510                	mov rax, ENV
 17755 0000C8A0 488B00                  	mov rax, qword [rax + 8 * 0]
 17756 0000C8A3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 17757 0000C8A7 50                      	push rax
 17758 0000C8A8 488B4520                	mov rax, PARAM(0)	; param len1
 17759 0000C8AC 50                      	push rax
 17760 0000C8AD 488B4510                	mov rax, ENV
 17761 0000C8B1 488B00                  	mov rax, qword [rax + 8 * 0]
 17762 0000C8B4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 17763 0000C8B7 50                      	push rax
 17764 0000C8B8 48B8-                   	mov rax, L_constants + 2135
 17764 0000C8BA [5708000000000000] 
 17765 0000C8C2 50                      	push rax
 17766 0000C8C3 6A05                    	push 5	; Number of arguments
 17767 0000C8C5 488B4510                	mov rax, ENV
 17768 0000C8C9 488B4008                	mov rax, qword [rax + 8 * 1]
 17769 0000C8CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17770 0000C8D0 488B00                  	mov rax, qword [rax]
 17771 0000C8D3 803804                  	cmp byte [rax], T_closure
 17772 0000C8D6 0F859D850000            	jne L_error_non_closure
 17773 0000C8DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17774                                  
 17775                                  	; Reclaiming the current stack frame
 17776 0000C8DF FF7508                  	push qword [rbp + 8]
 17777 0000C8E2 FF7500                  	push qword [rbp]
 17778 0000C8E5 41BA09000000            	mov r10, 5 + 4
 17779 0000C8EB 4C8B4518                	mov r8, COUNT
 17780 0000C8EF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17781 0000C8F4 4C8D4DF8                	lea r9, [rbp - 8]
 17782                                  .L_tc_recycle_frame_loop_009a:
 17783 0000C8F8 4983FA00                	cmp r10, 0
 17784 0000C8FC 7413                    	je .L_tc_recycle_frame_done_009a
 17785 0000C8FE 4D8B19                  	mov r11, qword [r9]
 17786 0000C901 4D8918                  	mov qword [r8], r11
 17787 0000C904 49FFCA                  	dec r10
 17788 0000C907 4983E808                	sub r8, 8
 17789 0000C90B 4983E908                	sub r9, 8
 17790 0000C90F EBE7                    	jmp .L_tc_recycle_frame_loop_009a
 17791                                  .L_tc_recycle_frame_done_009a:
 17792 0000C911 498D6008                	lea rsp, [r8 + 8]
 17793 0000C915 5D                      	pop rbp
 17794 0000C916 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17795 0000C919 E982000000              	jmp .L_if_end_0056
 17796                                  .L_if_else_0056:
 17797                                  	; Initiating tail-call optimization
 17798 0000C91E 488B4520                	mov rax, PARAM(0)	; param len1
 17799 0000C922 50                      	push rax
 17800 0000C923 488B4510                	mov rax, ENV
 17801 0000C927 488B00                  	mov rax, qword [rax + 8 * 0]
 17802 0000C92A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 17803 0000C92D 50                      	push rax
 17804 0000C92E 488B4528                	mov rax, PARAM(1)	; param len2
 17805 0000C932 50                      	push rax
 17806 0000C933 488B4510                	mov rax, ENV
 17807 0000C937 488B00                  	mov rax, qword [rax + 8 * 0]
 17808 0000C93A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 17809 0000C93E 50                      	push rax
 17810 0000C93F 48B8-                   	mov rax, L_constants + 2135
 17810 0000C941 [5708000000000000] 
 17811 0000C949 50                      	push rax
 17812 0000C94A 6A05                    	push 5	; Number of arguments
 17813 0000C94C 488B4510                	mov rax, ENV
 17814 0000C950 488B4008                	mov rax, qword [rax + 8 * 1]
 17815 0000C954 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17816 0000C957 488B00                  	mov rax, qword [rax]
 17817 0000C95A 803804                  	cmp byte [rax], T_closure
 17818 0000C95D 0F8516850000            	jne L_error_non_closure
 17819 0000C963 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17820                                  
 17821                                  	; Reclaiming the current stack frame
 17822 0000C966 FF7508                  	push qword [rbp + 8]
 17823 0000C969 FF7500                  	push qword [rbp]
 17824 0000C96C 41BA09000000            	mov r10, 5 + 4
 17825 0000C972 4C8B4518                	mov r8, COUNT
 17826 0000C976 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17827 0000C97B 4C8D4DF8                	lea r9, [rbp - 8]
 17828                                  .L_tc_recycle_frame_loop_009b:
 17829 0000C97F 4983FA00                	cmp r10, 0
 17830 0000C983 7413                    	je .L_tc_recycle_frame_done_009b
 17831 0000C985 4D8B19                  	mov r11, qword [r9]
 17832 0000C988 4D8918                  	mov qword [r8], r11
 17833 0000C98B 49FFCA                  	dec r10
 17834 0000C98E 4983E808                	sub r8, 8
 17835 0000C992 4983E908                	sub r9, 8
 17836 0000C996 EBE7                    	jmp .L_tc_recycle_frame_loop_009b
 17837                                  .L_tc_recycle_frame_done_009b:
 17838 0000C998 498D6008                	lea rsp, [r8 + 8]
 17839 0000C99C 5D                      	pop rbp
 17840 0000C99D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17841                                  .L_if_end_0056:
 17842 0000C9A0 C9                      	leave
 17843 0000C9A1 C22000                  	ret AND_KILL_FRAME(2)
 17844                                  .L_lambda_simple_end_0067:	; new closure is in rax
 17845 0000C9A4 803804                  	cmp byte [rax], T_closure
 17846 0000C9A7 0F85CC840000            	jne L_error_non_closure
 17847 0000C9AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17848                                  
 17849                                  	; Reclaiming the current stack frame
 17850 0000C9B0 FF7508                  	push qword [rbp + 8]
 17851 0000C9B3 FF7500                  	push qword [rbp]
 17852 0000C9B6 41BA06000000            	mov r10, 2 + 4
 17853 0000C9BC 4C8B4518                	mov r8, COUNT
 17854 0000C9C0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17855 0000C9C5 4C8D4DF8                	lea r9, [rbp - 8]
 17856                                  .L_tc_recycle_frame_loop_009c:
 17857 0000C9C9 4983FA00                	cmp r10, 0
 17858 0000C9CD 7413                    	je .L_tc_recycle_frame_done_009c
 17859 0000C9CF 4D8B19                  	mov r11, qword [r9]
 17860 0000C9D2 4D8918                  	mov qword [r8], r11
 17861 0000C9D5 49FFCA                  	dec r10
 17862 0000C9D8 4983E808                	sub r8, 8
 17863 0000C9DC 4983E908                	sub r9, 8
 17864 0000C9E0 EBE7                    	jmp .L_tc_recycle_frame_loop_009c
 17865                                  .L_tc_recycle_frame_done_009c:
 17866 0000C9E2 498D6008                	lea rsp, [r8 + 8]
 17867 0000C9E6 5D                      	pop rbp
 17868 0000C9E7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17869 0000C9EA C9                      	leave
 17870 0000C9EB C22000                  	ret AND_KILL_FRAME(2)
 17871                                  .L_lambda_simple_end_0066:	; new closure is in rax
 17872 0000C9EE 50                      	push rax
 17873 0000C9EF 6A01                    	push 1	; arg count
 17874 0000C9F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17875 0000C9F6 E827850000              	call malloc
 17876 0000C9FB 50                      	push rax
 17877 0000C9FC BF08000000              	mov rdi, 8 * 1	; new rib
 17878 0000CA01 E81C850000              	call malloc
 17879 0000CA06 50                      	push rax
 17880 0000CA07 BF18000000              	mov rdi, 8 * 3	; extended env
 17881 0000CA0C E811850000              	call malloc
 17882 0000CA11 488B7D10                	mov rdi, ENV
 17883 0000CA15 BE00000000              	mov rsi, 0
 17884 0000CA1A BA01000000              	mov rdx, 1
 17885                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 17886 0000CA1F 4883FE02                	cmp rsi, 2
 17887 0000CA23 7410                    	je .L_lambda_simple_env_end_0068
 17888 0000CA25 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17889 0000CA29 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17890 0000CA2D 48FFC6                  	inc rsi
 17891 0000CA30 48FFC2                  	inc rdx
 17892 0000CA33 EBEA                    	jmp .L_lambda_simple_env_loop_0068
 17893                                  .L_lambda_simple_env_end_0068:
 17894 0000CA35 5B                      	pop rbx
 17895 0000CA36 BE00000000              	mov rsi, 0
 17896                                  .L_lambda_simple_params_loop_0068:	; copy params
 17897 0000CA3B 4883FE01                	cmp rsi, 1
 17898 0000CA3F 740E                    	je .L_lambda_simple_params_end_0068
 17899 0000CA41 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17900 0000CA46 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17901 0000CA4A 48FFC6                  	inc rsi
 17902 0000CA4D EBEC                    	jmp .L_lambda_simple_params_loop_0068
 17903                                  .L_lambda_simple_params_end_0068:
 17904 0000CA4F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17905 0000CA52 4889C3                  	mov rbx, rax
 17906 0000CA55 58                      	pop rax
 17907 0000CA56 C60004                  	mov byte [rax], T_closure
 17908 0000CA59 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17909 0000CA5D 48C74009[6ACA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 17910 0000CA65 E9D6040000              	jmp .L_lambda_simple_end_0068
 17911                                  .L_lambda_simple_code_0068:	; lambda-simple body
 17912 0000CA6A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17913 0000CA70 740B                    	je .L_lambda_simple_arity_check_ok_0068
 17914 0000CA72 FF742410                	push qword [rsp + 8 * 2]
 17915 0000CA76 6A01                    	push 1
 17916 0000CA78 E95E840000              	jmp L_error_incorrect_arity_simple
 17917                                  .L_lambda_simple_arity_check_ok_0068:
 17918 0000CA7D C8000000                	enter 0, 0
 17919                                  	; Initiating tail-call optimization
 17920 0000CA81 48B8-                   	mov rax, L_constants + 2007
 17920 0000CA83 [D707000000000000] 
 17921 0000CA8B 50                      	push rax
 17922 0000CA8C 6A01                    	push 1	; Number of arguments
 17923 0000CA8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17924 0000CA93 E88A840000              	call malloc
 17925 0000CA98 50                      	push rax
 17926 0000CA99 BF08000000              	mov rdi, 8 * 1	; new rib
 17927 0000CA9E E87F840000              	call malloc
 17928 0000CAA3 50                      	push rax
 17929 0000CAA4 BF20000000              	mov rdi, 8 * 4	; extended env
 17930 0000CAA9 E874840000              	call malloc
 17931 0000CAAE 488B7D10                	mov rdi, ENV
 17932 0000CAB2 BE00000000              	mov rsi, 0
 17933 0000CAB7 BA01000000              	mov rdx, 1
 17934                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 17935 0000CABC 4883FE03                	cmp rsi, 3
 17936 0000CAC0 7410                    	je .L_lambda_simple_env_end_0069
 17937 0000CAC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17938 0000CAC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17939 0000CACA 48FFC6                  	inc rsi
 17940 0000CACD 48FFC2                  	inc rdx
 17941 0000CAD0 EBEA                    	jmp .L_lambda_simple_env_loop_0069
 17942                                  .L_lambda_simple_env_end_0069:
 17943 0000CAD2 5B                      	pop rbx
 17944 0000CAD3 BE00000000              	mov rsi, 0
 17945                                  .L_lambda_simple_params_loop_0069:	; copy params
 17946 0000CAD8 4883FE01                	cmp rsi, 1
 17947 0000CADC 740E                    	je .L_lambda_simple_params_end_0069
 17948 0000CADE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17949 0000CAE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17950 0000CAE7 48FFC6                  	inc rsi
 17951 0000CAEA EBEC                    	jmp .L_lambda_simple_params_loop_0069
 17952                                  .L_lambda_simple_params_end_0069:
 17953 0000CAEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17954 0000CAEF 4889C3                  	mov rbx, rax
 17955 0000CAF2 58                      	pop rax
 17956 0000CAF3 C60004                  	mov byte [rax], T_closure
 17957 0000CAF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17958 0000CAFA 48C74009[07CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 17959 0000CB02 E9EF030000              	jmp .L_lambda_simple_end_0069
 17960                                  .L_lambda_simple_code_0069:	; lambda-simple body
 17961 0000CB07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17962 0000CB0D 740B                    	je .L_lambda_simple_arity_check_ok_0069
 17963 0000CB0F FF742410                	push qword [rsp + 8 * 2]
 17964 0000CB13 6A01                    	push 1
 17965 0000CB15 E9C1830000              	jmp L_error_incorrect_arity_simple
 17966                                  .L_lambda_simple_arity_check_ok_0069:
 17967 0000CB1A C8000000                	enter 0, 0
 17968 0000CB1E BF08000000              	mov rdi, 8 * 1
 17969 0000CB23 E8FA830000              	call malloc
 17970 0000CB28 488B5D20                	mov rbx, PARAM(0)
 17971 0000CB2C 488918                  	mov qword [rax], rbx
 17972 0000CB2F 48894520                	mov PARAM(0), rax
 17973 0000CB33 48B8-                   	mov rax, sob_void
 17973 0000CB35 [0000000000000000] 
 17974                                  
 17975 0000CB3D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17976 0000CB42 E8DB830000              	call malloc
 17977 0000CB47 50                      	push rax
 17978 0000CB48 BF08000000              	mov rdi, 8 * 1	; new rib
 17979 0000CB4D E8D0830000              	call malloc
 17980 0000CB52 50                      	push rax
 17981 0000CB53 BF28000000              	mov rdi, 8 * 5	; extended env
 17982 0000CB58 E8C5830000              	call malloc
 17983 0000CB5D 488B7D10                	mov rdi, ENV
 17984 0000CB61 BE00000000              	mov rsi, 0
 17985 0000CB66 BA01000000              	mov rdx, 1
 17986                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 17987 0000CB6B 4883FE04                	cmp rsi, 4
 17988 0000CB6F 7410                    	je .L_lambda_simple_env_end_006a
 17989 0000CB71 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17990 0000CB75 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17991 0000CB79 48FFC6                  	inc rsi
 17992 0000CB7C 48FFC2                  	inc rdx
 17993 0000CB7F EBEA                    	jmp .L_lambda_simple_env_loop_006a
 17994                                  .L_lambda_simple_env_end_006a:
 17995 0000CB81 5B                      	pop rbx
 17996 0000CB82 BE00000000              	mov rsi, 0
 17997                                  .L_lambda_simple_params_loop_006a:	; copy params
 17998 0000CB87 4883FE01                	cmp rsi, 1
 17999 0000CB8B 740E                    	je .L_lambda_simple_params_end_006a
 18000 0000CB8D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18001 0000CB92 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18002 0000CB96 48FFC6                  	inc rsi
 18003 0000CB99 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 18004                                  .L_lambda_simple_params_end_006a:
 18005 0000CB9B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18006 0000CB9E 4889C3                  	mov rbx, rax
 18007 0000CBA1 58                      	pop rax
 18008 0000CBA2 C60004                  	mov byte [rax], T_closure
 18009 0000CBA5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18010 0000CBA9 48C74009[B6CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 18011 0000CBB1 E954010000              	jmp .L_lambda_simple_end_006a
 18012                                  .L_lambda_simple_code_006a:	; lambda-simple body
 18013 0000CBB6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18014 0000CBBC 740B                    	je .L_lambda_simple_arity_check_ok_006a
 18015 0000CBBE FF742410                	push qword [rsp + 8 * 2]
 18016 0000CBC2 6A02                    	push 2
 18017 0000CBC4 E912830000              	jmp L_error_incorrect_arity_simple
 18018                                  .L_lambda_simple_arity_check_ok_006a:
 18019 0000CBC9 C8000000                	enter 0, 0
 18020                                  	; preparing a non-tail-call
 18021 0000CBCD 488B4528                	mov rax, PARAM(1)	; param strs
 18022 0000CBD1 50                      	push rax
 18023 0000CBD2 6A01                    	push 1	; arg count
 18024 0000CBD4 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18025 0000CBDC 803805                  	cmp byte [rax], T_undefined
 18026 0000CBDF 0F8410820000            	je L_error_fvar_undefined
 18027 0000CBE5 803804                  	cmp byte [rax], T_closure
 18028 0000CBE8 0F858B820000            	jne L_error_non_closure
 18029 0000CBEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18030 0000CBF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18031 0000CBF4 483D[02000000]          	cmp rax, sob_boolean_false
 18032 0000CBFA 0F8506010000            	jne .L_or_end_0009
 18033                                  
 18034                                  	; preparing a non-tail-call
 18035                                  	; preparing a non-tail-call
 18036 0000CC00 488B4528                	mov rax, PARAM(1)	; param strs
 18037 0000CC04 50                      	push rax
 18038 0000CC05 6A01                    	push 1	; arg count
 18039 0000CC07 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18040 0000CC0F 803805                  	cmp byte [rax], T_undefined
 18041 0000CC12 0F84DD810000            	je L_error_fvar_undefined
 18042 0000CC18 803804                  	cmp byte [rax], T_closure
 18043 0000CC1B 0F8558820000            	jne L_error_non_closure
 18044 0000CC21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18045 0000CC24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18046 0000CC27 50                      	push rax
 18047 0000CC28 488B4520                	mov rax, PARAM(0)	; param str
 18048 0000CC2C 50                      	push rax
 18049 0000CC2D 6A02                    	push 2	; arg count
 18050 0000CC2F 488B4510                	mov rax, ENV
 18051 0000CC33 488B4008                	mov rax, qword [rax + 8 * 1]
 18052 0000CC37 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18053 0000CC3A 803804                  	cmp byte [rax], T_closure
 18054 0000CC3D 0F8536820000            	jne L_error_non_closure
 18055 0000CC43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18056 0000CC46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18057 0000CC49 483D[02000000]          	cmp rax, sob_boolean_false
 18058 0000CC4F 0F84A7000000            	je .L_if_else_0057
 18059                                  	; Initiating tail-call optimization
 18060                                  	; preparing a non-tail-call
 18061 0000CC55 488B4528                	mov rax, PARAM(1)	; param strs
 18062 0000CC59 50                      	push rax
 18063 0000CC5A 6A01                    	push 1	; arg count
 18064 0000CC5C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18065 0000CC64 803805                  	cmp byte [rax], T_undefined
 18066 0000CC67 0F8488810000            	je L_error_fvar_undefined
 18067 0000CC6D 803804                  	cmp byte [rax], T_closure
 18068 0000CC70 0F8503820000            	jne L_error_non_closure
 18069 0000CC76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18070 0000CC79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18071 0000CC7C 50                      	push rax
 18072                                  	; preparing a non-tail-call
 18073 0000CC7D 488B4528                	mov rax, PARAM(1)	; param strs
 18074 0000CC81 50                      	push rax
 18075 0000CC82 6A01                    	push 1	; arg count
 18076 0000CC84 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18077 0000CC8C 803805                  	cmp byte [rax], T_undefined
 18078 0000CC8F 0F8460810000            	je L_error_fvar_undefined
 18079 0000CC95 803804                  	cmp byte [rax], T_closure
 18080 0000CC98 0F85DB810000            	jne L_error_non_closure
 18081 0000CC9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18082 0000CCA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18083 0000CCA4 50                      	push rax
 18084 0000CCA5 6A02                    	push 2	; Number of arguments
 18085 0000CCA7 488B4510                	mov rax, ENV
 18086 0000CCAB 488B00                  	mov rax, qword [rax + 8 * 0]
 18087 0000CCAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18088 0000CCB1 488B00                  	mov rax, qword [rax]
 18089 0000CCB4 803804                  	cmp byte [rax], T_closure
 18090 0000CCB7 0F85BC810000            	jne L_error_non_closure
 18091 0000CCBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18092                                  
 18093                                  	; Reclaiming the current stack frame
 18094 0000CCC0 FF7508                  	push qword [rbp + 8]
 18095 0000CCC3 FF7500                  	push qword [rbp]
 18096 0000CCC6 41BA06000000            	mov r10, 2 + 4
 18097 0000CCCC 4C8B4518                	mov r8, COUNT
 18098 0000CCD0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18099 0000CCD5 4C8D4DF8                	lea r9, [rbp - 8]
 18100                                  .L_tc_recycle_frame_loop_009d:
 18101 0000CCD9 4983FA00                	cmp r10, 0
 18102 0000CCDD 7413                    	je .L_tc_recycle_frame_done_009d
 18103 0000CCDF 4D8B19                  	mov r11, qword [r9]
 18104 0000CCE2 4D8918                  	mov qword [r8], r11
 18105 0000CCE5 49FFCA                  	dec r10
 18106 0000CCE8 4983E808                	sub r8, 8
 18107 0000CCEC 4983E908                	sub r9, 8
 18108 0000CCF0 EBE7                    	jmp .L_tc_recycle_frame_loop_009d
 18109                                  .L_tc_recycle_frame_done_009d:
 18110 0000CCF2 498D6008                	lea rsp, [r8 + 8]
 18111 0000CCF6 5D                      	pop rbp
 18112 0000CCF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18113 0000CCFA EB0A                    	jmp .L_if_end_0057
 18114                                  .L_if_else_0057:
 18115 0000CCFC 48B8-                   	mov rax, L_constants + 2
 18115 0000CCFE [0200000000000000] 
 18116                                  .L_if_end_0057:
 18117                                  .L_or_end_0009:
 18118 0000CD06 C9                      	leave
 18119 0000CD07 C22000                  	ret AND_KILL_FRAME(2)
 18120                                  .L_lambda_simple_end_006a:	; new closure is in rax
 18121 0000CD0A 50                      	push rax
 18122 0000CD0B 488B4520                	mov rax, PARAM(0)	; param run
 18123 0000CD0F 8F00                    	pop qword [rax]
 18124 0000CD11 48B8-                   	mov rax, sob_void
 18124 0000CD13 [0000000000000000] 
 18125                                  
 18126 0000CD1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18127 0000CD20 E8FD810000              	call malloc
 18128 0000CD25 50                      	push rax
 18129 0000CD26 BF08000000              	mov rdi, 8 * 1	; new rib
 18130 0000CD2B E8F2810000              	call malloc
 18131 0000CD30 50                      	push rax
 18132 0000CD31 BF28000000              	mov rdi, 8 * 5	; extended env
 18133 0000CD36 E8E7810000              	call malloc
 18134 0000CD3B 488B7D10                	mov rdi, ENV
 18135 0000CD3F BE00000000              	mov rsi, 0
 18136 0000CD44 BA01000000              	mov rdx, 1
 18137                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 18138 0000CD49 4883FE04                	cmp rsi, 4
 18139 0000CD4D 7410                    	je .L_lambda_opt_env_end_0011
 18140 0000CD4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18141 0000CD53 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18142 0000CD57 48FFC6                  	inc rsi
 18143 0000CD5A 48FFC2                  	inc rdx
 18144 0000CD5D EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18145                                  .L_lambda_opt_env_end_0011:
 18146 0000CD5F 5B                      	pop rbx
 18147 0000CD60 BE00000000              	mov rsi, 0
 18148                                  .L_lambda_opt_params_loop_0011:	; copy params
 18149 0000CD65 4883FE01                	cmp rsi, 1
 18150 0000CD69 740E                    	je .L_lambda_opt_params_end_0011
 18151 0000CD6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18152 0000CD70 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18153 0000CD74 48FFC6                  	inc rsi
 18154 0000CD77 EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18155                                  .L_lambda_opt_params_end_0011:
 18156 0000CD79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18157 0000CD7C 4889C3                  	mov rbx, rax
 18158 0000CD7F 58                      	pop rax
 18159 0000CD80 C60004                  	mov byte [rax], T_closure
 18160 0000CD83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18161 0000CD87 48C74009[94CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18162 0000CD8F E95E010000              	jmp .L_lambda_opt_end_0011
 18163                                  .L_lambda_opt_code_0011:
 18164 0000CD94 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 18165 0000CD99 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 18166 0000CD9D 7407                    	je .L_lambda_opt_arity_check_exact_0011	; Jump if arity matches
 18167 0000CD9F 7F4C                    	jg .L_lambda_opt_arity_check_more_0011	; Jump if more arguments passed
 18168 0000CDA1 E949810000              	jmp L_error_incorrect_arity_opt
 18169                                  .L_lambda_opt_arity_check_exact_0011:
 18170 0000CDA6 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 18171 0000CDA9 4983C603                	add r14, 3 ; add 3 first stack values
 18172 0000CDAD 41BF00000000            	mov r15, 0 ; r15 = index
 18173 0000CDB3 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 18174 0000CDB7 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 18175 0000CDBF EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18176                                  .L_lambda_opt_stack_shrink_loop_0011:
 18177 0000CDC1 4983FE00                	cmp r14, 0
 18178 0000CDC5 7E11                    	jle .L_make_lambda_opt_exact_finish_0011
 18179 0000CDC7 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 18180 0000CDCC 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 18181 0000CDD0 49FFCE                  	dec r14 ; next loop value
 18182 0000CDD3 49FFC7                  	inc r15 ; update i
 18183 0000CDD6 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18184                                  .L_make_lambda_opt_exact_finish_0011:
 18185 0000CDD8 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 18186 0000CDE0 49FFC2                  	inc r10
 18187 0000CDE3 4C89542410              	mov qword [rsp + 8 * 2], r10
 18188 0000CDE8 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0011
 18189                                  .L_lambda_opt_arity_check_more_0011:
 18190 0000CDED 4D89D6                  	mov r14, r10 ; r14 = num args
 18191 0000CDF0 4D89D7                  	mov r15, r10 ; r15 = num args
 18192 0000CDF3 41B901000000            	mov r9, 1; r9 = number of params 
 18193 0000CDF9 4D29CE                  	sub r14, r9 ; r14 = extra args
 18194 0000CDFC 4D01F1                  	add r9, r14 ; r9 = num args
 18195 0000CDFF 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 18195 0000CE01 [0100000000000000] 
 18196 0000CE09 EB00                    	jmp .L_make_lambda_opt_arg_list_0011
 18197                                  .L_make_lambda_opt_arg_list_0011:
 18198 0000CE0B 4983FE00                	cmp r14, 0
 18199 0000CE0F 7E25                    	jle .L_make_lambda_opt_stack_fixed_0011
 18200 0000CE11 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 18201 0000CE16 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 18202 0000CE1B E802810000              	call malloc                         ; Allocate memory, result in rax
 18203 0000CE20 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 18204 0000CE23 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 18205 0000CE27 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 18206 0000CE2B 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 18207 0000CE2E 49FFC9                  	dec r9                              ; args index minus 1
 18208 0000CE31 49FFCE                  	dec r14                             ; next iteration
 18209 0000CE34 EBD5                    	jmp .L_make_lambda_opt_arg_list_0011
 18210                                  .L_make_lambda_opt_stack_fixed_0011:
 18211 0000CE36 4D89FE                  	mov r14, r15 ; r14 = num args
 18212 0000CE39 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 18213 0000CE3C 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 18214 0000CE40 41BA01000000            	mov r10, 1; r10 = num of params
 18215 0000CE46 4D29D6                  	sub r14, r10 ; r14 = extra args
 18216 0000CE49 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 18217 0000CE4C 49FFCE                  	dec r14 ; how much we need to change stack wise?
 18218 0000CE4F 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 18219 0000CE54 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0011
 18220                                  .L_lambda_opt_stack_shrink_loop_more_0011:
 18221 0000CE56 4983F800                	cmp r8, 0
 18222 0000CE5A 7E15                    	jle .L_make_lambda_opt_more_finish_0011
 18223 0000CE5C 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 18224 0000CE60 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 18225 0000CE64 4D8D26                  	lea r12, [r14]
 18226 0000CE67 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 18227 0000CE6C 49FFC8                  	dec r8 ; next iteration
 18228 0000CE6F EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0011
 18229                                  .L_make_lambda_opt_more_finish_0011:
 18230 0000CE71 4D89F8                  	mov r8, r15 ; num of args
 18231 0000CE74 41BA01000000            	mov r10, 1
 18232 0000CE7A 4D29D0                  	sub r8, r10 ; num of new args
 18233 0000CE7D 49FFC0                  	inc r8
 18234 0000CE80 4C89442420              	mov qword [rsp + 8 * 4], r8
 18235 0000CE85 4883C410                	add rsp, 8 * 2  ; 
 18236 0000CE89 EB00                    	jmp .L_lambda_opt_stack_adjusted_0011
 18237                                  .L_lambda_opt_stack_adjusted_0011:
 18238 0000CE8B C8000000                	enter 0, 0
 18239                                  	; Initiating tail-call optimization
 18240 0000CE8F 488B4528                	mov rax, PARAM(1)	; param strs
 18241 0000CE93 50                      	push rax
 18242 0000CE94 488B4520                	mov rax, PARAM(0)	; param str
 18243 0000CE98 50                      	push rax
 18244 0000CE99 6A02                    	push 2	; Number of arguments
 18245 0000CE9B 488B4510                	mov rax, ENV
 18246 0000CE9F 488B00                  	mov rax, qword [rax + 8 * 0]
 18247 0000CEA2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18248 0000CEA5 488B00                  	mov rax, qword [rax]
 18249 0000CEA8 803804                  	cmp byte [rax], T_closure
 18250 0000CEAB 0F85C87F0000            	jne L_error_non_closure
 18251 0000CEB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18252                                  
 18253                                  	; Reclaiming the current stack frame
 18254 0000CEB4 FF7508                  	push qword [rbp + 8]
 18255 0000CEB7 FF7500                  	push qword [rbp]
 18256 0000CEBA 41BA06000000            	mov r10, 2 + 4
 18257 0000CEC0 4C8B4518                	mov r8, COUNT
 18258 0000CEC4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18259 0000CEC9 4C8D4DF8                	lea r9, [rbp - 8]
 18260                                  .L_tc_recycle_frame_loop_009e:
 18261 0000CECD 4983FA00                	cmp r10, 0
 18262 0000CED1 7413                    	je .L_tc_recycle_frame_done_009e
 18263 0000CED3 4D8B19                  	mov r11, qword [r9]
 18264 0000CED6 4D8918                  	mov qword [r8], r11
 18265 0000CED9 49FFCA                  	dec r10
 18266 0000CEDC 4983E808                	sub r8, 8
 18267 0000CEE0 4983E908                	sub r9, 8
 18268 0000CEE4 EBE7                    	jmp .L_tc_recycle_frame_loop_009e
 18269                                  .L_tc_recycle_frame_done_009e:
 18270 0000CEE6 498D6008                	lea rsp, [r8 + 8]
 18271 0000CEEA 5D                      	pop rbp
 18272 0000CEEB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18273 0000CEEE C9                      	leave
 18274 0000CEEF C22000                  	ret AND_KILL_FRAME(2)
 18275                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18276 0000CEF2 C9                      	leave
 18277 0000CEF3 C21800                  	ret AND_KILL_FRAME(1)
 18278                                  .L_lambda_simple_end_0069:	; new closure is in rax
 18279 0000CEF6 803804                  	cmp byte [rax], T_closure
 18280 0000CEF9 0F857A7F0000            	jne L_error_non_closure
 18281 0000CEFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18282                                  
 18283                                  	; Reclaiming the current stack frame
 18284 0000CF02 FF7508                  	push qword [rbp + 8]
 18285 0000CF05 FF7500                  	push qword [rbp]
 18286 0000CF08 41BA05000000            	mov r10, 1 + 4
 18287 0000CF0E 4C8B4518                	mov r8, COUNT
 18288 0000CF12 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18289 0000CF17 4C8D4DF8                	lea r9, [rbp - 8]
 18290                                  .L_tc_recycle_frame_loop_009f:
 18291 0000CF1B 4983FA00                	cmp r10, 0
 18292 0000CF1F 7413                    	je .L_tc_recycle_frame_done_009f
 18293 0000CF21 4D8B19                  	mov r11, qword [r9]
 18294 0000CF24 4D8918                  	mov qword [r8], r11
 18295 0000CF27 49FFCA                  	dec r10
 18296 0000CF2A 4983E808                	sub r8, 8
 18297 0000CF2E 4983E908                	sub r9, 8
 18298 0000CF32 EBE7                    	jmp .L_tc_recycle_frame_loop_009f
 18299                                  .L_tc_recycle_frame_done_009f:
 18300 0000CF34 498D6008                	lea rsp, [r8 + 8]
 18301 0000CF38 5D                      	pop rbp
 18302 0000CF39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18303 0000CF3C C9                      	leave
 18304 0000CF3D C21800                  	ret AND_KILL_FRAME(1)
 18305                                  .L_lambda_simple_end_0068:	; new closure is in rax
 18306 0000CF40 803804                  	cmp byte [rax], T_closure
 18307 0000CF43 0F85307F0000            	jne L_error_non_closure
 18308 0000CF49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18309 0000CF4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18310 0000CF4F C9                      	leave
 18311 0000CF50 C21800                  	ret AND_KILL_FRAME(1)
 18312                                  .L_lambda_simple_end_0064:	; new closure is in rax
 18313 0000CF53 803804                  	cmp byte [rax], T_closure
 18314 0000CF56 0F851D7F0000            	jne L_error_non_closure
 18315 0000CF5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18316                                  
 18317                                  	; Reclaiming the current stack frame
 18318 0000CF5F FF7508                  	push qword [rbp + 8]
 18319 0000CF62 FF7500                  	push qword [rbp]
 18320 0000CF65 41BA05000000            	mov r10, 1 + 4
 18321 0000CF6B 4C8B4518                	mov r8, COUNT
 18322 0000CF6F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18323 0000CF74 4C8D4DF8                	lea r9, [rbp - 8]
 18324                                  .L_tc_recycle_frame_loop_00a0:
 18325 0000CF78 4983FA00                	cmp r10, 0
 18326 0000CF7C 7413                    	je .L_tc_recycle_frame_done_00a0
 18327 0000CF7E 4D8B19                  	mov r11, qword [r9]
 18328 0000CF81 4D8918                  	mov qword [r8], r11
 18329 0000CF84 49FFCA                  	dec r10
 18330 0000CF87 4983E808                	sub r8, 8
 18331 0000CF8B 4983E908                	sub r9, 8
 18332 0000CF8F EBE7                    	jmp .L_tc_recycle_frame_loop_00a0
 18333                                  .L_tc_recycle_frame_done_00a0:
 18334 0000CF91 498D6008                	lea rsp, [r8 + 8]
 18335 0000CF95 5D                      	pop rbp
 18336 0000CF96 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18337 0000CF99 C9                      	leave
 18338 0000CF9A C22000                  	ret AND_KILL_FRAME(2)
 18339                                  .L_lambda_simple_end_0063:	; new closure is in rax
 18340 0000CF9D 50                      	push rax
 18341 0000CF9E 6A01                    	push 1	; arg count
 18342 0000CFA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18343 0000CFA5 E8787F0000              	call malloc
 18344 0000CFAA 50                      	push rax
 18345 0000CFAB BF00000000              	mov rdi, 8 * 0	; new rib
 18346 0000CFB0 E86D7F0000              	call malloc
 18347 0000CFB5 50                      	push rax
 18348 0000CFB6 BF08000000              	mov rdi, 8 * 1	; extended env
 18349 0000CFBB E8627F0000              	call malloc
 18350 0000CFC0 488B7D10                	mov rdi, ENV
 18351 0000CFC4 BE00000000              	mov rsi, 0
 18352 0000CFC9 BA01000000              	mov rdx, 1
 18353                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 18354 0000CFCE 4883FE00                	cmp rsi, 0
 18355 0000CFD2 7410                    	je .L_lambda_simple_env_end_006b
 18356 0000CFD4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18357 0000CFD8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18358 0000CFDC 48FFC6                  	inc rsi
 18359 0000CFDF 48FFC2                  	inc rdx
 18360 0000CFE2 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 18361                                  .L_lambda_simple_env_end_006b:
 18362 0000CFE4 5B                      	pop rbx
 18363 0000CFE5 BE00000000              	mov rsi, 0
 18364                                  .L_lambda_simple_params_loop_006b:	; copy params
 18365 0000CFEA 4883FE00                	cmp rsi, 0
 18366 0000CFEE 740E                    	je .L_lambda_simple_params_end_006b
 18367 0000CFF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18368 0000CFF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18369 0000CFF9 48FFC6                  	inc rsi
 18370 0000CFFC EBEC                    	jmp .L_lambda_simple_params_loop_006b
 18371                                  .L_lambda_simple_params_end_006b:
 18372 0000CFFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18373 0000D001 4889C3                  	mov rbx, rax
 18374 0000D004 58                      	pop rax
 18375 0000D005 C60004                  	mov byte [rax], T_closure
 18376 0000D008 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18377 0000D00C 48C74009[19D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 18378 0000D014 E947010000              	jmp .L_lambda_simple_end_006b
 18379                                  .L_lambda_simple_code_006b:	; lambda-simple body
 18380 0000D019 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18381 0000D01F 740B                    	je .L_lambda_simple_arity_check_ok_006b
 18382 0000D021 FF742410                	push qword [rsp + 8 * 2]
 18383 0000D025 6A01                    	push 1
 18384 0000D027 E9AF7E0000              	jmp L_error_incorrect_arity_simple
 18385                                  .L_lambda_simple_arity_check_ok_006b:
 18386 0000D02C C8000000                	enter 0, 0
 18387                                  	; preparing a non-tail-call
 18388 0000D030 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18389 0000D038 803805                  	cmp byte [rax], T_undefined
 18390 0000D03B 0F84B47D0000            	je L_error_fvar_undefined
 18391 0000D041 50                      	push rax
 18392 0000D042 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 18393 0000D04A 803805                  	cmp byte [rax], T_undefined
 18394 0000D04D 0F84A27D0000            	je L_error_fvar_undefined
 18395 0000D053 50                      	push rax
 18396 0000D054 6A02                    	push 2	; arg count
 18397 0000D056 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18398 0000D05A 803804                  	cmp byte [rax], T_closure
 18399 0000D05D 0F85167E0000            	jne L_error_non_closure
 18400 0000D063 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18401 0000D066 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18402 0000D069 48890425[AB160000]      	mov qword [free_var_134], rax
 18403 0000D071 48B8-                   	mov rax, sob_void
 18403 0000D073 [0000000000000000] 
 18404                                  
 18405                                  	; preparing a non-tail-call
 18406 0000D07B 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18407 0000D083 803805                  	cmp byte [rax], T_undefined
 18408 0000D086 0F84697D0000            	je L_error_fvar_undefined
 18409 0000D08C 50                      	push rax
 18410 0000D08D 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 18411 0000D095 803805                  	cmp byte [rax], T_undefined
 18412 0000D098 0F84577D0000            	je L_error_fvar_undefined
 18413 0000D09E 50                      	push rax
 18414 0000D09F 6A02                    	push 2	; arg count
 18415 0000D0A1 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18416 0000D0A5 803804                  	cmp byte [rax], T_closure
 18417 0000D0A8 0F85CB7D0000            	jne L_error_non_closure
 18418 0000D0AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18419 0000D0B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18420 0000D0B4 48890425[DF150000]      	mov qword [free_var_122], rax
 18421 0000D0BC 48B8-                   	mov rax, sob_void
 18421 0000D0BE [0000000000000000] 
 18422                                  
 18423                                  	; preparing a non-tail-call
 18424 0000D0C6 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18425 0000D0CE 803805                  	cmp byte [rax], T_undefined
 18426 0000D0D1 0F841E7D0000            	je L_error_fvar_undefined
 18427 0000D0D7 50                      	push rax
 18428 0000D0D8 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 18429 0000D0E0 803805                  	cmp byte [rax], T_undefined
 18430 0000D0E3 0F840C7D0000            	je L_error_fvar_undefined
 18431 0000D0E9 50                      	push rax
 18432 0000D0EA 6A02                    	push 2	; arg count
 18433 0000D0EC 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18434 0000D0F0 803804                  	cmp byte [rax], T_closure
 18435 0000D0F3 0F85807D0000            	jne L_error_non_closure
 18436 0000D0F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18437 0000D0FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18438 0000D0FF 48890425[DE160000]      	mov qword [free_var_137], rax
 18439 0000D107 48B8-                   	mov rax, sob_void
 18439 0000D109 [0000000000000000] 
 18440                                  
 18441                                  	; preparing a non-tail-call
 18442 0000D111 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18443 0000D119 803805                  	cmp byte [rax], T_undefined
 18444 0000D11C 0F84D37C0000            	je L_error_fvar_undefined
 18445 0000D122 50                      	push rax
 18446 0000D123 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 18447 0000D12B 803805                  	cmp byte [rax], T_undefined
 18448 0000D12E 0F84C17C0000            	je L_error_fvar_undefined
 18449 0000D134 50                      	push rax
 18450 0000D135 6A02                    	push 2	; arg count
 18451 0000D137 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18452 0000D13B 803804                  	cmp byte [rax], T_closure
 18453 0000D13E 0F85357D0000            	jne L_error_non_closure
 18454 0000D144 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18455 0000D147 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18456 0000D14A 48890425[12160000]      	mov qword [free_var_125], rax
 18457 0000D152 48B8-                   	mov rax, sob_void
 18457 0000D154 [0000000000000000] 
 18458 0000D15C C9                      	leave
 18459 0000D15D C21800                  	ret AND_KILL_FRAME(1)
 18460                                  .L_lambda_simple_end_006b:	; new closure is in rax
 18461 0000D160 803804                  	cmp byte [rax], T_closure
 18462 0000D163 0F85107D0000            	jne L_error_non_closure
 18463 0000D169 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18464 0000D16C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18465                                  
 18466 0000D16F 4889C7                  	mov rdi, rax
 18467 0000D172 E800800000              	call print_sexpr_if_not_void
 18468                                  	; preparing a non-tail-call
 18469 0000D177 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18470 0000D17C E8A17D0000              	call malloc
 18471 0000D181 50                      	push rax
 18472 0000D182 BF00000000              	mov rdi, 8 * 0	; new rib
 18473 0000D187 E8967D0000              	call malloc
 18474 0000D18C 50                      	push rax
 18475 0000D18D BF08000000              	mov rdi, 8 * 1	; extended env
 18476 0000D192 E88B7D0000              	call malloc
 18477 0000D197 488B7D10                	mov rdi, ENV
 18478 0000D19B BE00000000              	mov rsi, 0
 18479 0000D1A0 BA01000000              	mov rdx, 1
 18480                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 18481 0000D1A5 4883FE00                	cmp rsi, 0
 18482 0000D1A9 7410                    	je .L_lambda_simple_env_end_006c
 18483 0000D1AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18484 0000D1AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18485 0000D1B3 48FFC6                  	inc rsi
 18486 0000D1B6 48FFC2                  	inc rdx
 18487 0000D1B9 EBEA                    	jmp .L_lambda_simple_env_loop_006c
 18488                                  .L_lambda_simple_env_end_006c:
 18489 0000D1BB 5B                      	pop rbx
 18490 0000D1BC BE00000000              	mov rsi, 0
 18491                                  .L_lambda_simple_params_loop_006c:	; copy params
 18492 0000D1C1 4883FE00                	cmp rsi, 0
 18493 0000D1C5 740E                    	je .L_lambda_simple_params_end_006c
 18494 0000D1C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18495 0000D1CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18496 0000D1D0 48FFC6                  	inc rsi
 18497 0000D1D3 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18498                                  .L_lambda_simple_params_end_006c:
 18499 0000D1D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18500 0000D1D8 4889C3                  	mov rbx, rax
 18501 0000D1DB 58                      	pop rax
 18502 0000D1DC C60004                  	mov byte [rax], T_closure
 18503 0000D1DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18504 0000D1E3 48C74009[F0D10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18505 0000D1EB E9510C0000              	jmp .L_lambda_simple_end_006c
 18506                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18507 0000D1F0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18508 0000D1F6 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18509 0000D1F8 FF742410                	push qword [rsp + 8 * 2]
 18510 0000D1FC 6A02                    	push 2
 18511 0000D1FE E9D87C0000              	jmp L_error_incorrect_arity_simple
 18512                                  .L_lambda_simple_arity_check_ok_006c:
 18513 0000D203 C8000000                	enter 0, 0
 18514                                  	; Initiating tail-call optimization
 18515 0000D207 48B8-                   	mov rax, L_constants + 2007
 18515 0000D209 [D707000000000000] 
 18516 0000D211 50                      	push rax
 18517 0000D212 6A01                    	push 1	; Number of arguments
 18518 0000D214 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18519 0000D219 E8047D0000              	call malloc
 18520 0000D21E 50                      	push rax
 18521 0000D21F BF10000000              	mov rdi, 8 * 2	; new rib
 18522 0000D224 E8F97C0000              	call malloc
 18523 0000D229 50                      	push rax
 18524 0000D22A BF10000000              	mov rdi, 8 * 2	; extended env
 18525 0000D22F E8EE7C0000              	call malloc
 18526 0000D234 488B7D10                	mov rdi, ENV
 18527 0000D238 BE00000000              	mov rsi, 0
 18528 0000D23D BA01000000              	mov rdx, 1
 18529                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18530 0000D242 4883FE01                	cmp rsi, 1
 18531 0000D246 7410                    	je .L_lambda_simple_env_end_006d
 18532 0000D248 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18533 0000D24C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18534 0000D250 48FFC6                  	inc rsi
 18535 0000D253 48FFC2                  	inc rdx
 18536 0000D256 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18537                                  .L_lambda_simple_env_end_006d:
 18538 0000D258 5B                      	pop rbx
 18539 0000D259 BE00000000              	mov rsi, 0
 18540                                  .L_lambda_simple_params_loop_006d:	; copy params
 18541 0000D25E 4883FE02                	cmp rsi, 2
 18542 0000D262 740E                    	je .L_lambda_simple_params_end_006d
 18543 0000D264 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18544 0000D269 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18545 0000D26D 48FFC6                  	inc rsi
 18546 0000D270 EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18547                                  .L_lambda_simple_params_end_006d:
 18548 0000D272 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18549 0000D275 4889C3                  	mov rbx, rax
 18550 0000D278 58                      	pop rax
 18551 0000D279 C60004                  	mov byte [rax], T_closure
 18552 0000D27C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18553 0000D280 48C74009[8DD20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18554 0000D288 E96A0B0000              	jmp .L_lambda_simple_end_006d
 18555                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18556 0000D28D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18557 0000D293 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18558 0000D295 FF742410                	push qword [rsp + 8 * 2]
 18559 0000D299 6A01                    	push 1
 18560 0000D29B E93B7C0000              	jmp L_error_incorrect_arity_simple
 18561                                  .L_lambda_simple_arity_check_ok_006d:
 18562 0000D2A0 C8000000                	enter 0, 0
 18563 0000D2A4 BF08000000              	mov rdi, 8 * 1
 18564 0000D2A9 E8747C0000              	call malloc
 18565 0000D2AE 488B5D20                	mov rbx, PARAM(0)
 18566 0000D2B2 488918                  	mov qword [rax], rbx
 18567 0000D2B5 48894520                	mov PARAM(0), rax
 18568 0000D2B9 48B8-                   	mov rax, sob_void
 18568 0000D2BB [0000000000000000] 
 18569                                  
 18570 0000D2C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18571 0000D2C8 E8557C0000              	call malloc
 18572 0000D2CD 50                      	push rax
 18573 0000D2CE BF08000000              	mov rdi, 8 * 1	; new rib
 18574 0000D2D3 E84A7C0000              	call malloc
 18575 0000D2D8 50                      	push rax
 18576 0000D2D9 BF18000000              	mov rdi, 8 * 3	; extended env
 18577 0000D2DE E83F7C0000              	call malloc
 18578 0000D2E3 488B7D10                	mov rdi, ENV
 18579 0000D2E7 BE00000000              	mov rsi, 0
 18580 0000D2EC BA01000000              	mov rdx, 1
 18581                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18582 0000D2F1 4883FE02                	cmp rsi, 2
 18583 0000D2F5 7410                    	je .L_lambda_simple_env_end_006e
 18584 0000D2F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18585 0000D2FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18586 0000D2FF 48FFC6                  	inc rsi
 18587 0000D302 48FFC2                  	inc rdx
 18588 0000D305 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18589                                  .L_lambda_simple_env_end_006e:
 18590 0000D307 5B                      	pop rbx
 18591 0000D308 BE00000000              	mov rsi, 0
 18592                                  .L_lambda_simple_params_loop_006e:	; copy params
 18593 0000D30D 4883FE01                	cmp rsi, 1
 18594 0000D311 740E                    	je .L_lambda_simple_params_end_006e
 18595 0000D313 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18596 0000D318 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18597 0000D31C 48FFC6                  	inc rsi
 18598 0000D31F EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18599                                  .L_lambda_simple_params_end_006e:
 18600 0000D321 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18601 0000D324 4889C3                  	mov rbx, rax
 18602 0000D327 58                      	pop rax
 18603 0000D328 C60004                  	mov byte [rax], T_closure
 18604 0000D32B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18605 0000D32F 48C74009[3CD30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18606 0000D337 E944020000              	jmp .L_lambda_simple_end_006e
 18607                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18608 0000D33C 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18609 0000D342 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18610 0000D344 FF742410                	push qword [rsp + 8 * 2]
 18611 0000D348 6A05                    	push 5
 18612 0000D34A E98C7B0000              	jmp L_error_incorrect_arity_simple
 18613                                  .L_lambda_simple_arity_check_ok_006e:
 18614 0000D34F C8000000                	enter 0, 0
 18615                                  	; preparing a non-tail-call
 18616 0000D353 488B4530                	mov rax, PARAM(2)	; param len1
 18617 0000D357 50                      	push rax
 18618 0000D358 488B4520                	mov rax, PARAM(0)	; param i
 18619 0000D35C 50                      	push rax
 18620 0000D35D 6A02                    	push 2	; arg count
 18621 0000D35F 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 18622 0000D367 803805                  	cmp byte [rax], T_undefined
 18623 0000D36A 0F84857A0000            	je L_error_fvar_undefined
 18624 0000D370 803804                  	cmp byte [rax], T_closure
 18625 0000D373 0F85007B0000            	jne L_error_non_closure
 18626 0000D379 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18627 0000D37C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18628 0000D37F 483D[02000000]          	cmp rax, sob_boolean_false
 18629 0000D385 0F85F1010000            	jne .L_or_end_000a
 18630                                  
 18631                                  	; preparing a non-tail-call
 18632                                  	; preparing a non-tail-call
 18633 0000D38B 488B4520                	mov rax, PARAM(0)	; param i
 18634 0000D38F 50                      	push rax
 18635 0000D390 488B4538                	mov rax, PARAM(3)	; param str2
 18636 0000D394 50                      	push rax
 18637 0000D395 6A02                    	push 2	; arg count
 18638 0000D397 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18639 0000D39F 803805                  	cmp byte [rax], T_undefined
 18640 0000D3A2 0F844D7A0000            	je L_error_fvar_undefined
 18641 0000D3A8 803804                  	cmp byte [rax], T_closure
 18642 0000D3AB 0F85C87A0000            	jne L_error_non_closure
 18643 0000D3B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18644 0000D3B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18645 0000D3B7 50                      	push rax
 18646                                  	; preparing a non-tail-call
 18647 0000D3B8 488B4520                	mov rax, PARAM(0)	; param i
 18648 0000D3BC 50                      	push rax
 18649 0000D3BD 488B4528                	mov rax, PARAM(1)	; param str1
 18650 0000D3C1 50                      	push rax
 18651 0000D3C2 6A02                    	push 2	; arg count
 18652 0000D3C4 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18653 0000D3CC 803805                  	cmp byte [rax], T_undefined
 18654 0000D3CF 0F84207A0000            	je L_error_fvar_undefined
 18655 0000D3D5 803804                  	cmp byte [rax], T_closure
 18656 0000D3D8 0F859B7A0000            	jne L_error_non_closure
 18657 0000D3DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18658 0000D3E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18659 0000D3E4 50                      	push rax
 18660 0000D3E5 6A02                    	push 2	; arg count
 18661 0000D3E7 488B4510                	mov rax, ENV
 18662 0000D3EB 488B4008                	mov rax, qword [rax + 8 * 1]
 18663 0000D3EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18664 0000D3F2 803804                  	cmp byte [rax], T_closure
 18665 0000D3F5 0F857E7A0000            	jne L_error_non_closure
 18666 0000D3FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18667 0000D3FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 18668 0000D401 483D[02000000]          	cmp rax, sob_boolean_false
 18669 0000D407 0F856F010000            	jne .L_or_end_000a
 18670                                  
 18671                                  	; preparing a non-tail-call
 18672 0000D40D 488B4530                	mov rax, PARAM(2)	; param len1
 18673 0000D411 50                      	push rax
 18674 0000D412 488B4520                	mov rax, PARAM(0)	; param i
 18675 0000D416 50                      	push rax
 18676 0000D417 6A02                    	push 2	; arg count
 18677 0000D419 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 18678 0000D421 803805                  	cmp byte [rax], T_undefined
 18679 0000D424 0F84CB790000            	je L_error_fvar_undefined
 18680 0000D42A 803804                  	cmp byte [rax], T_closure
 18681 0000D42D 0F85467A0000            	jne L_error_non_closure
 18682 0000D433 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18683 0000D436 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18684 0000D439 483D[02000000]          	cmp rax, sob_boolean_false
 18685 0000D43F 0F842D010000            	je .L_if_else_0059
 18686                                  	; preparing a non-tail-call
 18687                                  	; preparing a non-tail-call
 18688 0000D445 488B4520                	mov rax, PARAM(0)	; param i
 18689 0000D449 50                      	push rax
 18690 0000D44A 488B4538                	mov rax, PARAM(3)	; param str2
 18691 0000D44E 50                      	push rax
 18692 0000D44F 6A02                    	push 2	; arg count
 18693 0000D451 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18694 0000D459 803805                  	cmp byte [rax], T_undefined
 18695 0000D45C 0F8493790000            	je L_error_fvar_undefined
 18696 0000D462 803804                  	cmp byte [rax], T_closure
 18697 0000D465 0F850E7A0000            	jne L_error_non_closure
 18698 0000D46B FF7001                  	push SOB_CLOSURE_ENV(rax)
 18699 0000D46E FF5009                  	call SOB_CLOSURE_CODE(rax)
 18700 0000D471 50                      	push rax
 18701                                  	; preparing a non-tail-call
 18702 0000D472 488B4520                	mov rax, PARAM(0)	; param i
 18703 0000D476 50                      	push rax
 18704 0000D477 488B4528                	mov rax, PARAM(1)	; param str1
 18705 0000D47B 50                      	push rax
 18706 0000D47C 6A02                    	push 2	; arg count
 18707 0000D47E 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18708 0000D486 803805                  	cmp byte [rax], T_undefined
 18709 0000D489 0F8466790000            	je L_error_fvar_undefined
 18710 0000D48F 803804                  	cmp byte [rax], T_closure
 18711 0000D492 0F85E1790000            	jne L_error_non_closure
 18712 0000D498 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18713 0000D49B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18714 0000D49E 50                      	push rax
 18715 0000D49F 6A02                    	push 2	; arg count
 18716 0000D4A1 488B4510                	mov rax, ENV
 18717 0000D4A5 488B4008                	mov rax, qword [rax + 8 * 1]
 18718 0000D4A9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18719 0000D4AD 803804                  	cmp byte [rax], T_closure
 18720 0000D4B0 0F85C3790000            	jne L_error_non_closure
 18721 0000D4B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18722 0000D4B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18723 0000D4BC 483D[02000000]          	cmp rax, sob_boolean_false
 18724 0000D4C2 0F849E000000            	je .L_if_else_0058
 18725                                  	; Initiating tail-call optimization
 18726 0000D4C8 488B4540                	mov rax, PARAM(4)	; param len2
 18727 0000D4CC 50                      	push rax
 18728 0000D4CD 488B4538                	mov rax, PARAM(3)	; param str2
 18729 0000D4D1 50                      	push rax
 18730 0000D4D2 488B4530                	mov rax, PARAM(2)	; param len1
 18731 0000D4D6 50                      	push rax
 18732 0000D4D7 488B4528                	mov rax, PARAM(1)	; param str1
 18733 0000D4DB 50                      	push rax
 18734                                  	; preparing a non-tail-call
 18735 0000D4DC 48B8-                   	mov rax, L_constants + 2270
 18735 0000D4DE [DE08000000000000] 
 18736 0000D4E6 50                      	push rax
 18737 0000D4E7 488B4520                	mov rax, PARAM(0)	; param i
 18738 0000D4EB 50                      	push rax
 18739 0000D4EC 6A02                    	push 2	; arg count
 18740 0000D4EE 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 18741 0000D4F6 803805                  	cmp byte [rax], T_undefined
 18742 0000D4F9 0F84F6780000            	je L_error_fvar_undefined
 18743 0000D4FF 803804                  	cmp byte [rax], T_closure
 18744 0000D502 0F8571790000            	jne L_error_non_closure
 18745 0000D508 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18746 0000D50B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18747 0000D50E 50                      	push rax
 18748 0000D50F 6A05                    	push 5	; Number of arguments
 18749 0000D511 488B4510                	mov rax, ENV
 18750 0000D515 488B00                  	mov rax, qword [rax + 8 * 0]
 18751 0000D518 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18752 0000D51B 488B00                  	mov rax, qword [rax]
 18753 0000D51E 803804                  	cmp byte [rax], T_closure
 18754 0000D521 0F8552790000            	jne L_error_non_closure
 18755 0000D527 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18756                                  
 18757                                  	; Reclaiming the current stack frame
 18758 0000D52A FF7508                  	push qword [rbp + 8]
 18759 0000D52D FF7500                  	push qword [rbp]
 18760 0000D530 41BA09000000            	mov r10, 5 + 4
 18761 0000D536 4C8B4518                	mov r8, COUNT
 18762 0000D53A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18763 0000D53F 4C8D4DF8                	lea r9, [rbp - 8]
 18764                                  .L_tc_recycle_frame_loop_00a1:
 18765 0000D543 4983FA00                	cmp r10, 0
 18766 0000D547 7413                    	je .L_tc_recycle_frame_done_00a1
 18767 0000D549 4D8B19                  	mov r11, qword [r9]
 18768 0000D54C 4D8918                  	mov qword [r8], r11
 18769 0000D54F 49FFCA                  	dec r10
 18770 0000D552 4983E808                	sub r8, 8
 18771 0000D556 4983E908                	sub r9, 8
 18772 0000D55A EBE7                    	jmp .L_tc_recycle_frame_loop_00a1
 18773                                  .L_tc_recycle_frame_done_00a1:
 18774 0000D55C 498D6008                	lea rsp, [r8 + 8]
 18775 0000D560 5D                      	pop rbp
 18776 0000D561 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18777 0000D564 EB0A                    	jmp .L_if_end_0058
 18778                                  .L_if_else_0058:
 18779 0000D566 48B8-                   	mov rax, L_constants + 2
 18779 0000D568 [0200000000000000] 
 18780                                  .L_if_end_0058:
 18781 0000D570 EB0A                    	jmp .L_if_end_0059
 18782                                  .L_if_else_0059:
 18783 0000D572 48B8-                   	mov rax, L_constants + 2
 18783 0000D574 [0200000000000000] 
 18784                                  .L_if_end_0059:
 18785                                  .L_or_end_000a:
 18786 0000D57C C9                      	leave
 18787 0000D57D C23800                  	ret AND_KILL_FRAME(5)
 18788                                  .L_lambda_simple_end_006e:	; new closure is in rax
 18789 0000D580 50                      	push rax
 18790 0000D581 488B4520                	mov rax, PARAM(0)	; param run
 18791 0000D585 8F00                    	pop qword [rax]
 18792 0000D587 48B8-                   	mov rax, sob_void
 18792 0000D589 [0000000000000000] 
 18793                                  
 18794                                  	; preparing a non-tail-call
 18795 0000D591 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18796 0000D596 E887790000              	call malloc
 18797 0000D59B 50                      	push rax
 18798 0000D59C BF08000000              	mov rdi, 8 * 1	; new rib
 18799 0000D5A1 E87C790000              	call malloc
 18800 0000D5A6 50                      	push rax
 18801 0000D5A7 BF18000000              	mov rdi, 8 * 3	; extended env
 18802 0000D5AC E871790000              	call malloc
 18803 0000D5B1 488B7D10                	mov rdi, ENV
 18804 0000D5B5 BE00000000              	mov rsi, 0
 18805 0000D5BA BA01000000              	mov rdx, 1
 18806                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 18807 0000D5BF 4883FE02                	cmp rsi, 2
 18808 0000D5C3 7410                    	je .L_lambda_simple_env_end_006f
 18809 0000D5C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18810 0000D5C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18811 0000D5CD 48FFC6                  	inc rsi
 18812 0000D5D0 48FFC2                  	inc rdx
 18813 0000D5D3 EBEA                    	jmp .L_lambda_simple_env_loop_006f
 18814                                  .L_lambda_simple_env_end_006f:
 18815 0000D5D5 5B                      	pop rbx
 18816 0000D5D6 BE00000000              	mov rsi, 0
 18817                                  .L_lambda_simple_params_loop_006f:	; copy params
 18818 0000D5DB 4883FE01                	cmp rsi, 1
 18819 0000D5DF 740E                    	je .L_lambda_simple_params_end_006f
 18820 0000D5E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18821 0000D5E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18822 0000D5EA 48FFC6                  	inc rsi
 18823 0000D5ED EBEC                    	jmp .L_lambda_simple_params_loop_006f
 18824                                  .L_lambda_simple_params_end_006f:
 18825 0000D5EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18826 0000D5F2 4889C3                  	mov rbx, rax
 18827 0000D5F5 58                      	pop rax
 18828 0000D5F6 C60004                  	mov byte [rax], T_closure
 18829 0000D5F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18830 0000D5FD 48C74009[0AD60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 18831 0000D605 E988020000              	jmp .L_lambda_simple_end_006f
 18832                                  .L_lambda_simple_code_006f:	; lambda-simple body
 18833 0000D60A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18834 0000D610 740B                    	je .L_lambda_simple_arity_check_ok_006f
 18835 0000D612 FF742410                	push qword [rsp + 8 * 2]
 18836 0000D616 6A02                    	push 2
 18837 0000D618 E9BE780000              	jmp L_error_incorrect_arity_simple
 18838                                  .L_lambda_simple_arity_check_ok_006f:
 18839 0000D61D C8000000                	enter 0, 0
 18840                                  	; Initiating tail-call optimization
 18841                                  	; preparing a non-tail-call
 18842 0000D621 488B4528                	mov rax, PARAM(1)	; param str2
 18843 0000D625 50                      	push rax
 18844 0000D626 6A01                    	push 1	; arg count
 18845 0000D628 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 18846 0000D630 803805                  	cmp byte [rax], T_undefined
 18847 0000D633 0F84BC770000            	je L_error_fvar_undefined
 18848 0000D639 803804                  	cmp byte [rax], T_closure
 18849 0000D63C 0F8537780000            	jne L_error_non_closure
 18850 0000D642 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18851 0000D645 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18852 0000D648 50                      	push rax
 18853                                  	; preparing a non-tail-call
 18854 0000D649 488B4520                	mov rax, PARAM(0)	; param str1
 18855 0000D64D 50                      	push rax
 18856 0000D64E 6A01                    	push 1	; arg count
 18857 0000D650 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 18858 0000D658 803805                  	cmp byte [rax], T_undefined
 18859 0000D65B 0F8494770000            	je L_error_fvar_undefined
 18860 0000D661 803804                  	cmp byte [rax], T_closure
 18861 0000D664 0F850F780000            	jne L_error_non_closure
 18862 0000D66A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18863 0000D66D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18864 0000D670 50                      	push rax
 18865 0000D671 6A02                    	push 2	; Number of arguments
 18866 0000D673 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18867 0000D678 E8A5780000              	call malloc
 18868 0000D67D 50                      	push rax
 18869 0000D67E BF10000000              	mov rdi, 8 * 2	; new rib
 18870 0000D683 E89A780000              	call malloc
 18871 0000D688 50                      	push rax
 18872 0000D689 BF20000000              	mov rdi, 8 * 4	; extended env
 18873 0000D68E E88F780000              	call malloc
 18874 0000D693 488B7D10                	mov rdi, ENV
 18875 0000D697 BE00000000              	mov rsi, 0
 18876 0000D69C BA01000000              	mov rdx, 1
 18877                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 18878 0000D6A1 4883FE03                	cmp rsi, 3
 18879 0000D6A5 7410                    	je .L_lambda_simple_env_end_0070
 18880 0000D6A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18881 0000D6AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18882 0000D6AF 48FFC6                  	inc rsi
 18883 0000D6B2 48FFC2                  	inc rdx
 18884 0000D6B5 EBEA                    	jmp .L_lambda_simple_env_loop_0070
 18885                                  .L_lambda_simple_env_end_0070:
 18886 0000D6B7 5B                      	pop rbx
 18887 0000D6B8 BE00000000              	mov rsi, 0
 18888                                  .L_lambda_simple_params_loop_0070:	; copy params
 18889 0000D6BD 4883FE02                	cmp rsi, 2
 18890 0000D6C1 740E                    	je .L_lambda_simple_params_end_0070
 18891 0000D6C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18892 0000D6C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18893 0000D6CC 48FFC6                  	inc rsi
 18894 0000D6CF EBEC                    	jmp .L_lambda_simple_params_loop_0070
 18895                                  .L_lambda_simple_params_end_0070:
 18896 0000D6D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18897 0000D6D4 4889C3                  	mov rbx, rax
 18898 0000D6D7 58                      	pop rax
 18899 0000D6D8 C60004                  	mov byte [rax], T_closure
 18900 0000D6DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18901 0000D6DF 48C74009[ECD60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 18902 0000D6E7 E95C010000              	jmp .L_lambda_simple_end_0070
 18903                                  .L_lambda_simple_code_0070:	; lambda-simple body
 18904 0000D6EC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18905 0000D6F2 740B                    	je .L_lambda_simple_arity_check_ok_0070
 18906 0000D6F4 FF742410                	push qword [rsp + 8 * 2]
 18907 0000D6F8 6A02                    	push 2
 18908 0000D6FA E9DC770000              	jmp L_error_incorrect_arity_simple
 18909                                  .L_lambda_simple_arity_check_ok_0070:
 18910 0000D6FF C8000000                	enter 0, 0
 18911                                  	; preparing a non-tail-call
 18912 0000D703 488B4528                	mov rax, PARAM(1)	; param len2
 18913 0000D707 50                      	push rax
 18914 0000D708 488B4520                	mov rax, PARAM(0)	; param len1
 18915 0000D70C 50                      	push rax
 18916 0000D70D 6A02                    	push 2	; arg count
 18917 0000D70F 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18918 0000D717 803805                  	cmp byte [rax], T_undefined
 18919 0000D71A 0F84D5760000            	je L_error_fvar_undefined
 18920 0000D720 803804                  	cmp byte [rax], T_closure
 18921 0000D723 0F8550770000            	jne L_error_non_closure
 18922 0000D729 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18923 0000D72C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18924 0000D72F 483D[02000000]          	cmp rax, sob_boolean_false
 18925 0000D735 0F8487000000            	je .L_if_else_005a
 18926                                  	; Initiating tail-call optimization
 18927 0000D73B 488B4528                	mov rax, PARAM(1)	; param len2
 18928 0000D73F 50                      	push rax
 18929 0000D740 488B4510                	mov rax, ENV
 18930 0000D744 488B00                  	mov rax, qword [rax + 8 * 0]
 18931 0000D747 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18932 0000D74B 50                      	push rax
 18933 0000D74C 488B4520                	mov rax, PARAM(0)	; param len1
 18934 0000D750 50                      	push rax
 18935 0000D751 488B4510                	mov rax, ENV
 18936 0000D755 488B00                  	mov rax, qword [rax + 8 * 0]
 18937 0000D758 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18938 0000D75B 50                      	push rax
 18939 0000D75C 48B8-                   	mov rax, L_constants + 2135
 18939 0000D75E [5708000000000000] 
 18940 0000D766 50                      	push rax
 18941 0000D767 6A05                    	push 5	; Number of arguments
 18942 0000D769 488B4510                	mov rax, ENV
 18943 0000D76D 488B4008                	mov rax, qword [rax + 8 * 1]
 18944 0000D771 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18945 0000D774 488B00                  	mov rax, qword [rax]
 18946 0000D777 803804                  	cmp byte [rax], T_closure
 18947 0000D77A 0F85F9760000            	jne L_error_non_closure
 18948 0000D780 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18949                                  
 18950                                  	; Reclaiming the current stack frame
 18951 0000D783 FF7508                  	push qword [rbp + 8]
 18952 0000D786 FF7500                  	push qword [rbp]
 18953 0000D789 41BA09000000            	mov r10, 5 + 4
 18954 0000D78F 4C8B4518                	mov r8, COUNT
 18955 0000D793 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18956 0000D798 4C8D4DF8                	lea r9, [rbp - 8]
 18957                                  .L_tc_recycle_frame_loop_00a2:
 18958 0000D79C 4983FA00                	cmp r10, 0
 18959 0000D7A0 7413                    	je .L_tc_recycle_frame_done_00a2
 18960 0000D7A2 4D8B19                  	mov r11, qword [r9]
 18961 0000D7A5 4D8918                  	mov qword [r8], r11
 18962 0000D7A8 49FFCA                  	dec r10
 18963 0000D7AB 4983E808                	sub r8, 8
 18964 0000D7AF 4983E908                	sub r9, 8
 18965 0000D7B3 EBE7                    	jmp .L_tc_recycle_frame_loop_00a2
 18966                                  .L_tc_recycle_frame_done_00a2:
 18967 0000D7B5 498D6008                	lea rsp, [r8 + 8]
 18968 0000D7B9 5D                      	pop rbp
 18969 0000D7BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18970 0000D7BD E982000000              	jmp .L_if_end_005a
 18971                                  .L_if_else_005a:
 18972                                  	; Initiating tail-call optimization
 18973 0000D7C2 488B4520                	mov rax, PARAM(0)	; param len1
 18974 0000D7C6 50                      	push rax
 18975 0000D7C7 488B4510                	mov rax, ENV
 18976 0000D7CB 488B00                  	mov rax, qword [rax + 8 * 0]
 18977 0000D7CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18978 0000D7D1 50                      	push rax
 18979 0000D7D2 488B4528                	mov rax, PARAM(1)	; param len2
 18980 0000D7D6 50                      	push rax
 18981 0000D7D7 488B4510                	mov rax, ENV
 18982 0000D7DB 488B00                  	mov rax, qword [rax + 8 * 0]
 18983 0000D7DE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18984 0000D7E2 50                      	push rax
 18985 0000D7E3 48B8-                   	mov rax, L_constants + 2135
 18985 0000D7E5 [5708000000000000] 
 18986 0000D7ED 50                      	push rax
 18987 0000D7EE 6A05                    	push 5	; Number of arguments
 18988 0000D7F0 488B4510                	mov rax, ENV
 18989 0000D7F4 488B4008                	mov rax, qword [rax + 8 * 1]
 18990 0000D7F8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18991 0000D7FB 488B00                  	mov rax, qword [rax]
 18992 0000D7FE 803804                  	cmp byte [rax], T_closure
 18993 0000D801 0F8572760000            	jne L_error_non_closure
 18994 0000D807 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18995                                  
 18996                                  	; Reclaiming the current stack frame
 18997 0000D80A FF7508                  	push qword [rbp + 8]
 18998 0000D80D FF7500                  	push qword [rbp]
 18999 0000D810 41BA09000000            	mov r10, 5 + 4
 19000 0000D816 4C8B4518                	mov r8, COUNT
 19001 0000D81A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19002 0000D81F 4C8D4DF8                	lea r9, [rbp - 8]
 19003                                  .L_tc_recycle_frame_loop_00a3:
 19004 0000D823 4983FA00                	cmp r10, 0
 19005 0000D827 7413                    	je .L_tc_recycle_frame_done_00a3
 19006 0000D829 4D8B19                  	mov r11, qword [r9]
 19007 0000D82C 4D8918                  	mov qword [r8], r11
 19008 0000D82F 49FFCA                  	dec r10
 19009 0000D832 4983E808                	sub r8, 8
 19010 0000D836 4983E908                	sub r9, 8
 19011 0000D83A EBE7                    	jmp .L_tc_recycle_frame_loop_00a3
 19012                                  .L_tc_recycle_frame_done_00a3:
 19013 0000D83C 498D6008                	lea rsp, [r8 + 8]
 19014 0000D840 5D                      	pop rbp
 19015 0000D841 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19016                                  .L_if_end_005a:
 19017 0000D844 C9                      	leave
 19018 0000D845 C22000                  	ret AND_KILL_FRAME(2)
 19019                                  .L_lambda_simple_end_0070:	; new closure is in rax
 19020 0000D848 803804                  	cmp byte [rax], T_closure
 19021 0000D84B 0F8528760000            	jne L_error_non_closure
 19022 0000D851 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19023                                  
 19024                                  	; Reclaiming the current stack frame
 19025 0000D854 FF7508                  	push qword [rbp + 8]
 19026 0000D857 FF7500                  	push qword [rbp]
 19027 0000D85A 41BA06000000            	mov r10, 2 + 4
 19028 0000D860 4C8B4518                	mov r8, COUNT
 19029 0000D864 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19030 0000D869 4C8D4DF8                	lea r9, [rbp - 8]
 19031                                  .L_tc_recycle_frame_loop_00a4:
 19032 0000D86D 4983FA00                	cmp r10, 0
 19033 0000D871 7413                    	je .L_tc_recycle_frame_done_00a4
 19034 0000D873 4D8B19                  	mov r11, qword [r9]
 19035 0000D876 4D8918                  	mov qword [r8], r11
 19036 0000D879 49FFCA                  	dec r10
 19037 0000D87C 4983E808                	sub r8, 8
 19038 0000D880 4983E908                	sub r9, 8
 19039 0000D884 EBE7                    	jmp .L_tc_recycle_frame_loop_00a4
 19040                                  .L_tc_recycle_frame_done_00a4:
 19041 0000D886 498D6008                	lea rsp, [r8 + 8]
 19042 0000D88A 5D                      	pop rbp
 19043 0000D88B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19044 0000D88E C9                      	leave
 19045 0000D88F C22000                  	ret AND_KILL_FRAME(2)
 19046                                  .L_lambda_simple_end_006f:	; new closure is in rax
 19047 0000D892 50                      	push rax
 19048 0000D893 6A01                    	push 1	; arg count
 19049 0000D895 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19050 0000D89A E883760000              	call malloc
 19051 0000D89F 50                      	push rax
 19052 0000D8A0 BF08000000              	mov rdi, 8 * 1	; new rib
 19053 0000D8A5 E878760000              	call malloc
 19054 0000D8AA 50                      	push rax
 19055 0000D8AB BF18000000              	mov rdi, 8 * 3	; extended env
 19056 0000D8B0 E86D760000              	call malloc
 19057 0000D8B5 488B7D10                	mov rdi, ENV
 19058 0000D8B9 BE00000000              	mov rsi, 0
 19059 0000D8BE BA01000000              	mov rdx, 1
 19060                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 19061 0000D8C3 4883FE02                	cmp rsi, 2
 19062 0000D8C7 7410                    	je .L_lambda_simple_env_end_0071
 19063 0000D8C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19064 0000D8CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19065 0000D8D1 48FFC6                  	inc rsi
 19066 0000D8D4 48FFC2                  	inc rdx
 19067 0000D8D7 EBEA                    	jmp .L_lambda_simple_env_loop_0071
 19068                                  .L_lambda_simple_env_end_0071:
 19069 0000D8D9 5B                      	pop rbx
 19070 0000D8DA BE00000000              	mov rsi, 0
 19071                                  .L_lambda_simple_params_loop_0071:	; copy params
 19072 0000D8DF 4883FE01                	cmp rsi, 1
 19073 0000D8E3 740E                    	je .L_lambda_simple_params_end_0071
 19074 0000D8E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19075 0000D8EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19076 0000D8EE 48FFC6                  	inc rsi
 19077 0000D8F1 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 19078                                  .L_lambda_simple_params_end_0071:
 19079 0000D8F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19080 0000D8F6 4889C3                  	mov rbx, rax
 19081 0000D8F9 58                      	pop rax
 19082 0000D8FA C60004                  	mov byte [rax], T_closure
 19083 0000D8FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19084 0000D901 48C74009[0ED90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 19085 0000D909 E9D6040000              	jmp .L_lambda_simple_end_0071
 19086                                  .L_lambda_simple_code_0071:	; lambda-simple body
 19087 0000D90E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19088 0000D914 740B                    	je .L_lambda_simple_arity_check_ok_0071
 19089 0000D916 FF742410                	push qword [rsp + 8 * 2]
 19090 0000D91A 6A01                    	push 1
 19091 0000D91C E9BA750000              	jmp L_error_incorrect_arity_simple
 19092                                  .L_lambda_simple_arity_check_ok_0071:
 19093 0000D921 C8000000                	enter 0, 0
 19094                                  	; Initiating tail-call optimization
 19095 0000D925 48B8-                   	mov rax, L_constants + 2007
 19095 0000D927 [D707000000000000] 
 19096 0000D92F 50                      	push rax
 19097 0000D930 6A01                    	push 1	; Number of arguments
 19098 0000D932 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19099 0000D937 E8E6750000              	call malloc
 19100 0000D93C 50                      	push rax
 19101 0000D93D BF08000000              	mov rdi, 8 * 1	; new rib
 19102 0000D942 E8DB750000              	call malloc
 19103 0000D947 50                      	push rax
 19104 0000D948 BF20000000              	mov rdi, 8 * 4	; extended env
 19105 0000D94D E8D0750000              	call malloc
 19106 0000D952 488B7D10                	mov rdi, ENV
 19107 0000D956 BE00000000              	mov rsi, 0
 19108 0000D95B BA01000000              	mov rdx, 1
 19109                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 19110 0000D960 4883FE03                	cmp rsi, 3
 19111 0000D964 7410                    	je .L_lambda_simple_env_end_0072
 19112 0000D966 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19113 0000D96A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19114 0000D96E 48FFC6                  	inc rsi
 19115 0000D971 48FFC2                  	inc rdx
 19116 0000D974 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 19117                                  .L_lambda_simple_env_end_0072:
 19118 0000D976 5B                      	pop rbx
 19119 0000D977 BE00000000              	mov rsi, 0
 19120                                  .L_lambda_simple_params_loop_0072:	; copy params
 19121 0000D97C 4883FE01                	cmp rsi, 1
 19122 0000D980 740E                    	je .L_lambda_simple_params_end_0072
 19123 0000D982 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19124 0000D987 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19125 0000D98B 48FFC6                  	inc rsi
 19126 0000D98E EBEC                    	jmp .L_lambda_simple_params_loop_0072
 19127                                  .L_lambda_simple_params_end_0072:
 19128 0000D990 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19129 0000D993 4889C3                  	mov rbx, rax
 19130 0000D996 58                      	pop rax
 19131 0000D997 C60004                  	mov byte [rax], T_closure
 19132 0000D99A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19133 0000D99E 48C74009[ABD90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 19134 0000D9A6 E9EF030000              	jmp .L_lambda_simple_end_0072
 19135                                  .L_lambda_simple_code_0072:	; lambda-simple body
 19136 0000D9AB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19137 0000D9B1 740B                    	je .L_lambda_simple_arity_check_ok_0072
 19138 0000D9B3 FF742410                	push qword [rsp + 8 * 2]
 19139 0000D9B7 6A01                    	push 1
 19140 0000D9B9 E91D750000              	jmp L_error_incorrect_arity_simple
 19141                                  .L_lambda_simple_arity_check_ok_0072:
 19142 0000D9BE C8000000                	enter 0, 0
 19143 0000D9C2 BF08000000              	mov rdi, 8 * 1
 19144 0000D9C7 E856750000              	call malloc
 19145 0000D9CC 488B5D20                	mov rbx, PARAM(0)
 19146 0000D9D0 488918                  	mov qword [rax], rbx
 19147 0000D9D3 48894520                	mov PARAM(0), rax
 19148 0000D9D7 48B8-                   	mov rax, sob_void
 19148 0000D9D9 [0000000000000000] 
 19149                                  
 19150 0000D9E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19151 0000D9E6 E837750000              	call malloc
 19152 0000D9EB 50                      	push rax
 19153 0000D9EC BF08000000              	mov rdi, 8 * 1	; new rib
 19154 0000D9F1 E82C750000              	call malloc
 19155 0000D9F6 50                      	push rax
 19156 0000D9F7 BF28000000              	mov rdi, 8 * 5	; extended env
 19157 0000D9FC E821750000              	call malloc
 19158 0000DA01 488B7D10                	mov rdi, ENV
 19159 0000DA05 BE00000000              	mov rsi, 0
 19160 0000DA0A BA01000000              	mov rdx, 1
 19161                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19162 0000DA0F 4883FE04                	cmp rsi, 4
 19163 0000DA13 7410                    	je .L_lambda_simple_env_end_0073
 19164 0000DA15 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19165 0000DA19 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19166 0000DA1D 48FFC6                  	inc rsi
 19167 0000DA20 48FFC2                  	inc rdx
 19168 0000DA23 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19169                                  .L_lambda_simple_env_end_0073:
 19170 0000DA25 5B                      	pop rbx
 19171 0000DA26 BE00000000              	mov rsi, 0
 19172                                  .L_lambda_simple_params_loop_0073:	; copy params
 19173 0000DA2B 4883FE01                	cmp rsi, 1
 19174 0000DA2F 740E                    	je .L_lambda_simple_params_end_0073
 19175 0000DA31 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19176 0000DA36 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19177 0000DA3A 48FFC6                  	inc rsi
 19178 0000DA3D EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19179                                  .L_lambda_simple_params_end_0073:
 19180 0000DA3F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19181 0000DA42 4889C3                  	mov rbx, rax
 19182 0000DA45 58                      	pop rax
 19183 0000DA46 C60004                  	mov byte [rax], T_closure
 19184 0000DA49 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19185 0000DA4D 48C74009[5ADA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19186 0000DA55 E954010000              	jmp .L_lambda_simple_end_0073
 19187                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19188 0000DA5A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19189 0000DA60 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19190 0000DA62 FF742410                	push qword [rsp + 8 * 2]
 19191 0000DA66 6A02                    	push 2
 19192 0000DA68 E96E740000              	jmp L_error_incorrect_arity_simple
 19193                                  .L_lambda_simple_arity_check_ok_0073:
 19194 0000DA6D C8000000                	enter 0, 0
 19195                                  	; preparing a non-tail-call
 19196 0000DA71 488B4528                	mov rax, PARAM(1)	; param strs
 19197 0000DA75 50                      	push rax
 19198 0000DA76 6A01                    	push 1	; arg count
 19199 0000DA78 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 19200 0000DA80 803805                  	cmp byte [rax], T_undefined
 19201 0000DA83 0F846C730000            	je L_error_fvar_undefined
 19202 0000DA89 803804                  	cmp byte [rax], T_closure
 19203 0000DA8C 0F85E7730000            	jne L_error_non_closure
 19204 0000DA92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19205 0000DA95 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19206 0000DA98 483D[02000000]          	cmp rax, sob_boolean_false
 19207 0000DA9E 0F8506010000            	jne .L_or_end_000b
 19208                                  
 19209                                  	; preparing a non-tail-call
 19210                                  	; preparing a non-tail-call
 19211 0000DAA4 488B4528                	mov rax, PARAM(1)	; param strs
 19212 0000DAA8 50                      	push rax
 19213 0000DAA9 6A01                    	push 1	; arg count
 19214 0000DAAB 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19215 0000DAB3 803805                  	cmp byte [rax], T_undefined
 19216 0000DAB6 0F8439730000            	je L_error_fvar_undefined
 19217 0000DABC 803804                  	cmp byte [rax], T_closure
 19218 0000DABF 0F85B4730000            	jne L_error_non_closure
 19219 0000DAC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19220 0000DAC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19221 0000DACB 50                      	push rax
 19222 0000DACC 488B4520                	mov rax, PARAM(0)	; param str
 19223 0000DAD0 50                      	push rax
 19224 0000DAD1 6A02                    	push 2	; arg count
 19225 0000DAD3 488B4510                	mov rax, ENV
 19226 0000DAD7 488B4008                	mov rax, qword [rax + 8 * 1]
 19227 0000DADB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19228 0000DADE 803804                  	cmp byte [rax], T_closure
 19229 0000DAE1 0F8592730000            	jne L_error_non_closure
 19230 0000DAE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19231 0000DAEA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19232 0000DAED 483D[02000000]          	cmp rax, sob_boolean_false
 19233 0000DAF3 0F84A7000000            	je .L_if_else_005b
 19234                                  	; Initiating tail-call optimization
 19235                                  	; preparing a non-tail-call
 19236 0000DAF9 488B4528                	mov rax, PARAM(1)	; param strs
 19237 0000DAFD 50                      	push rax
 19238 0000DAFE 6A01                    	push 1	; arg count
 19239 0000DB00 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 19240 0000DB08 803805                  	cmp byte [rax], T_undefined
 19241 0000DB0B 0F84E4720000            	je L_error_fvar_undefined
 19242 0000DB11 803804                  	cmp byte [rax], T_closure
 19243 0000DB14 0F855F730000            	jne L_error_non_closure
 19244 0000DB1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19245 0000DB1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19246 0000DB20 50                      	push rax
 19247                                  	; preparing a non-tail-call
 19248 0000DB21 488B4528                	mov rax, PARAM(1)	; param strs
 19249 0000DB25 50                      	push rax
 19250 0000DB26 6A01                    	push 1	; arg count
 19251 0000DB28 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19252 0000DB30 803805                  	cmp byte [rax], T_undefined
 19253 0000DB33 0F84BC720000            	je L_error_fvar_undefined
 19254 0000DB39 803804                  	cmp byte [rax], T_closure
 19255 0000DB3C 0F8537730000            	jne L_error_non_closure
 19256 0000DB42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19257 0000DB45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19258 0000DB48 50                      	push rax
 19259 0000DB49 6A02                    	push 2	; Number of arguments
 19260 0000DB4B 488B4510                	mov rax, ENV
 19261 0000DB4F 488B00                  	mov rax, qword [rax + 8 * 0]
 19262 0000DB52 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19263 0000DB55 488B00                  	mov rax, qword [rax]
 19264 0000DB58 803804                  	cmp byte [rax], T_closure
 19265 0000DB5B 0F8518730000            	jne L_error_non_closure
 19266 0000DB61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19267                                  
 19268                                  	; Reclaiming the current stack frame
 19269 0000DB64 FF7508                  	push qword [rbp + 8]
 19270 0000DB67 FF7500                  	push qword [rbp]
 19271 0000DB6A 41BA06000000            	mov r10, 2 + 4
 19272 0000DB70 4C8B4518                	mov r8, COUNT
 19273 0000DB74 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19274 0000DB79 4C8D4DF8                	lea r9, [rbp - 8]
 19275                                  .L_tc_recycle_frame_loop_00a5:
 19276 0000DB7D 4983FA00                	cmp r10, 0
 19277 0000DB81 7413                    	je .L_tc_recycle_frame_done_00a5
 19278 0000DB83 4D8B19                  	mov r11, qword [r9]
 19279 0000DB86 4D8918                  	mov qword [r8], r11
 19280 0000DB89 49FFCA                  	dec r10
 19281 0000DB8C 4983E808                	sub r8, 8
 19282 0000DB90 4983E908                	sub r9, 8
 19283 0000DB94 EBE7                    	jmp .L_tc_recycle_frame_loop_00a5
 19284                                  .L_tc_recycle_frame_done_00a5:
 19285 0000DB96 498D6008                	lea rsp, [r8 + 8]
 19286 0000DB9A 5D                      	pop rbp
 19287 0000DB9B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19288 0000DB9E EB0A                    	jmp .L_if_end_005b
 19289                                  .L_if_else_005b:
 19290 0000DBA0 48B8-                   	mov rax, L_constants + 2
 19290 0000DBA2 [0200000000000000] 
 19291                                  .L_if_end_005b:
 19292                                  .L_or_end_000b:
 19293 0000DBAA C9                      	leave
 19294 0000DBAB C22000                  	ret AND_KILL_FRAME(2)
 19295                                  .L_lambda_simple_end_0073:	; new closure is in rax
 19296 0000DBAE 50                      	push rax
 19297 0000DBAF 488B4520                	mov rax, PARAM(0)	; param run
 19298 0000DBB3 8F00                    	pop qword [rax]
 19299 0000DBB5 48B8-                   	mov rax, sob_void
 19299 0000DBB7 [0000000000000000] 
 19300                                  
 19301 0000DBBF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19302 0000DBC4 E859730000              	call malloc
 19303 0000DBC9 50                      	push rax
 19304 0000DBCA BF08000000              	mov rdi, 8 * 1	; new rib
 19305 0000DBCF E84E730000              	call malloc
 19306 0000DBD4 50                      	push rax
 19307 0000DBD5 BF28000000              	mov rdi, 8 * 5	; extended env
 19308 0000DBDA E843730000              	call malloc
 19309 0000DBDF 488B7D10                	mov rdi, ENV
 19310 0000DBE3 BE00000000              	mov rsi, 0
 19311 0000DBE8 BA01000000              	mov rdx, 1
 19312                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 19313 0000DBED 4883FE04                	cmp rsi, 4
 19314 0000DBF1 7410                    	je .L_lambda_opt_env_end_0012
 19315 0000DBF3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19316 0000DBF7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19317 0000DBFB 48FFC6                  	inc rsi
 19318 0000DBFE 48FFC2                  	inc rdx
 19319 0000DC01 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19320                                  .L_lambda_opt_env_end_0012:
 19321 0000DC03 5B                      	pop rbx
 19322 0000DC04 BE00000000              	mov rsi, 0
 19323                                  .L_lambda_opt_params_loop_0012:	; copy params
 19324 0000DC09 4883FE01                	cmp rsi, 1
 19325 0000DC0D 740E                    	je .L_lambda_opt_params_end_0012
 19326 0000DC0F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19327 0000DC14 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19328 0000DC18 48FFC6                  	inc rsi
 19329 0000DC1B EBEC                    	jmp .L_lambda_opt_params_loop_0012
 19330                                  .L_lambda_opt_params_end_0012:
 19331 0000DC1D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19332 0000DC20 4889C3                  	mov rbx, rax
 19333 0000DC23 58                      	pop rax
 19334 0000DC24 C60004                  	mov byte [rax], T_closure
 19335 0000DC27 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19336 0000DC2B 48C74009[38DC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19337 0000DC33 E95E010000              	jmp .L_lambda_opt_end_0012
 19338                                  .L_lambda_opt_code_0012:
 19339 0000DC38 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 19340 0000DC3D 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 19341 0000DC41 7407                    	je .L_lambda_opt_arity_check_exact_0012	; Jump if arity matches
 19342 0000DC43 7F4C                    	jg .L_lambda_opt_arity_check_more_0012	; Jump if more arguments passed
 19343 0000DC45 E9A5720000              	jmp L_error_incorrect_arity_opt
 19344                                  .L_lambda_opt_arity_check_exact_0012:
 19345 0000DC4A 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 19346 0000DC4D 4983C603                	add r14, 3 ; add 3 first stack values
 19347 0000DC51 41BF00000000            	mov r15, 0 ; r15 = index
 19348 0000DC57 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 19349 0000DC5B 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 19350 0000DC63 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19351                                  .L_lambda_opt_stack_shrink_loop_0012:
 19352 0000DC65 4983FE00                	cmp r14, 0
 19353 0000DC69 7E11                    	jle .L_make_lambda_opt_exact_finish_0012
 19354 0000DC6B 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 19355 0000DC70 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 19356 0000DC74 49FFCE                  	dec r14 ; next loop value
 19357 0000DC77 49FFC7                  	inc r15 ; update i
 19358 0000DC7A EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19359                                  .L_make_lambda_opt_exact_finish_0012:
 19360 0000DC7C 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 19361 0000DC84 49FFC2                  	inc r10
 19362 0000DC87 4C89542410              	mov qword [rsp + 8 * 2], r10
 19363 0000DC8C E99E000000              	jmp .L_lambda_opt_stack_adjusted_0012
 19364                                  .L_lambda_opt_arity_check_more_0012:
 19365 0000DC91 4D89D6                  	mov r14, r10 ; r14 = num args
 19366 0000DC94 4D89D7                  	mov r15, r10 ; r15 = num args
 19367 0000DC97 41B901000000            	mov r9, 1; r9 = number of params 
 19368 0000DC9D 4D29CE                  	sub r14, r9 ; r14 = extra args
 19369 0000DCA0 4D01F1                  	add r9, r14 ; r9 = num args
 19370 0000DCA3 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 19370 0000DCA5 [0100000000000000] 
 19371 0000DCAD EB00                    	jmp .L_make_lambda_opt_arg_list_0012
 19372                                  .L_make_lambda_opt_arg_list_0012:
 19373 0000DCAF 4983FE00                	cmp r14, 0
 19374 0000DCB3 7E25                    	jle .L_make_lambda_opt_stack_fixed_0012
 19375 0000DCB5 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 19376 0000DCBA BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 19377 0000DCBF E85E720000              	call malloc                         ; Allocate memory, result in rax
 19378 0000DCC4 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 19379 0000DCC7 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 19380 0000DCCB 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 19381 0000DCCF 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 19382 0000DCD2 49FFC9                  	dec r9                              ; args index minus 1
 19383 0000DCD5 49FFCE                  	dec r14                             ; next iteration
 19384 0000DCD8 EBD5                    	jmp .L_make_lambda_opt_arg_list_0012
 19385                                  .L_make_lambda_opt_stack_fixed_0012:
 19386 0000DCDA 4D89FE                  	mov r14, r15 ; r14 = num args
 19387 0000DCDD 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 19388 0000DCE0 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 19389 0000DCE4 41BA01000000            	mov r10, 1; r10 = num of params
 19390 0000DCEA 4D29D6                  	sub r14, r10 ; r14 = extra args
 19391 0000DCED 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 19392 0000DCF0 49FFCE                  	dec r14 ; how much we need to change stack wise?
 19393 0000DCF3 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 19394 0000DCF8 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0012
 19395                                  .L_lambda_opt_stack_shrink_loop_more_0012:
 19396 0000DCFA 4983F800                	cmp r8, 0
 19397 0000DCFE 7E15                    	jle .L_make_lambda_opt_more_finish_0012
 19398 0000DD00 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 19399 0000DD04 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 19400 0000DD08 4D8D26                  	lea r12, [r14]
 19401 0000DD0B 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 19402 0000DD10 49FFC8                  	dec r8 ; next iteration
 19403 0000DD13 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0012
 19404                                  .L_make_lambda_opt_more_finish_0012:
 19405 0000DD15 4D89F8                  	mov r8, r15 ; num of args
 19406 0000DD18 41BA01000000            	mov r10, 1
 19407 0000DD1E 4D29D0                  	sub r8, r10 ; num of new args
 19408 0000DD21 49FFC0                  	inc r8
 19409 0000DD24 4C89442420              	mov qword [rsp + 8 * 4], r8
 19410 0000DD29 4883C410                	add rsp, 8 * 2  ; 
 19411 0000DD2D EB00                    	jmp .L_lambda_opt_stack_adjusted_0012
 19412                                  .L_lambda_opt_stack_adjusted_0012:
 19413 0000DD2F C8000000                	enter 0, 0
 19414                                  	; Initiating tail-call optimization
 19415 0000DD33 488B4528                	mov rax, PARAM(1)	; param strs
 19416 0000DD37 50                      	push rax
 19417 0000DD38 488B4520                	mov rax, PARAM(0)	; param str
 19418 0000DD3C 50                      	push rax
 19419 0000DD3D 6A02                    	push 2	; Number of arguments
 19420 0000DD3F 488B4510                	mov rax, ENV
 19421 0000DD43 488B00                  	mov rax, qword [rax + 8 * 0]
 19422 0000DD46 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19423 0000DD49 488B00                  	mov rax, qword [rax]
 19424 0000DD4C 803804                  	cmp byte [rax], T_closure
 19425 0000DD4F 0F8524710000            	jne L_error_non_closure
 19426 0000DD55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19427                                  
 19428                                  	; Reclaiming the current stack frame
 19429 0000DD58 FF7508                  	push qword [rbp + 8]
 19430 0000DD5B FF7500                  	push qword [rbp]
 19431 0000DD5E 41BA06000000            	mov r10, 2 + 4
 19432 0000DD64 4C8B4518                	mov r8, COUNT
 19433 0000DD68 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19434 0000DD6D 4C8D4DF8                	lea r9, [rbp - 8]
 19435                                  .L_tc_recycle_frame_loop_00a6:
 19436 0000DD71 4983FA00                	cmp r10, 0
 19437 0000DD75 7413                    	je .L_tc_recycle_frame_done_00a6
 19438 0000DD77 4D8B19                  	mov r11, qword [r9]
 19439 0000DD7A 4D8918                  	mov qword [r8], r11
 19440 0000DD7D 49FFCA                  	dec r10
 19441 0000DD80 4983E808                	sub r8, 8
 19442 0000DD84 4983E908                	sub r9, 8
 19443 0000DD88 EBE7                    	jmp .L_tc_recycle_frame_loop_00a6
 19444                                  .L_tc_recycle_frame_done_00a6:
 19445 0000DD8A 498D6008                	lea rsp, [r8 + 8]
 19446 0000DD8E 5D                      	pop rbp
 19447 0000DD8F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19448 0000DD92 C9                      	leave
 19449 0000DD93 C22000                  	ret AND_KILL_FRAME(2)
 19450                                  .L_lambda_opt_end_0012:	; new closure is in rax
 19451 0000DD96 C9                      	leave
 19452 0000DD97 C21800                  	ret AND_KILL_FRAME(1)
 19453                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19454 0000DD9A 803804                  	cmp byte [rax], T_closure
 19455 0000DD9D 0F85D6700000            	jne L_error_non_closure
 19456 0000DDA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19457                                  
 19458                                  	; Reclaiming the current stack frame
 19459 0000DDA6 FF7508                  	push qword [rbp + 8]
 19460 0000DDA9 FF7500                  	push qword [rbp]
 19461 0000DDAC 41BA05000000            	mov r10, 1 + 4
 19462 0000DDB2 4C8B4518                	mov r8, COUNT
 19463 0000DDB6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19464 0000DDBB 4C8D4DF8                	lea r9, [rbp - 8]
 19465                                  .L_tc_recycle_frame_loop_00a7:
 19466 0000DDBF 4983FA00                	cmp r10, 0
 19467 0000DDC3 7413                    	je .L_tc_recycle_frame_done_00a7
 19468 0000DDC5 4D8B19                  	mov r11, qword [r9]
 19469 0000DDC8 4D8918                  	mov qword [r8], r11
 19470 0000DDCB 49FFCA                  	dec r10
 19471 0000DDCE 4983E808                	sub r8, 8
 19472 0000DDD2 4983E908                	sub r9, 8
 19473 0000DDD6 EBE7                    	jmp .L_tc_recycle_frame_loop_00a7
 19474                                  .L_tc_recycle_frame_done_00a7:
 19475 0000DDD8 498D6008                	lea rsp, [r8 + 8]
 19476 0000DDDC 5D                      	pop rbp
 19477 0000DDDD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19478 0000DDE0 C9                      	leave
 19479 0000DDE1 C21800                  	ret AND_KILL_FRAME(1)
 19480                                  .L_lambda_simple_end_0071:	; new closure is in rax
 19481 0000DDE4 803804                  	cmp byte [rax], T_closure
 19482 0000DDE7 0F858C700000            	jne L_error_non_closure
 19483 0000DDED FF7001                  	push SOB_CLOSURE_ENV(rax)
 19484 0000DDF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19485 0000DDF3 C9                      	leave
 19486 0000DDF4 C21800                  	ret AND_KILL_FRAME(1)
 19487                                  .L_lambda_simple_end_006d:	; new closure is in rax
 19488 0000DDF7 803804                  	cmp byte [rax], T_closure
 19489 0000DDFA 0F8579700000            	jne L_error_non_closure
 19490 0000DE00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19491                                  
 19492                                  	; Reclaiming the current stack frame
 19493 0000DE03 FF7508                  	push qword [rbp + 8]
 19494 0000DE06 FF7500                  	push qword [rbp]
 19495 0000DE09 41BA05000000            	mov r10, 1 + 4
 19496 0000DE0F 4C8B4518                	mov r8, COUNT
 19497 0000DE13 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19498 0000DE18 4C8D4DF8                	lea r9, [rbp - 8]
 19499                                  .L_tc_recycle_frame_loop_00a8:
 19500 0000DE1C 4983FA00                	cmp r10, 0
 19501 0000DE20 7413                    	je .L_tc_recycle_frame_done_00a8
 19502 0000DE22 4D8B19                  	mov r11, qword [r9]
 19503 0000DE25 4D8918                  	mov qword [r8], r11
 19504 0000DE28 49FFCA                  	dec r10
 19505 0000DE2B 4983E808                	sub r8, 8
 19506 0000DE2F 4983E908                	sub r9, 8
 19507 0000DE33 EBE7                    	jmp .L_tc_recycle_frame_loop_00a8
 19508                                  .L_tc_recycle_frame_done_00a8:
 19509 0000DE35 498D6008                	lea rsp, [r8 + 8]
 19510 0000DE39 5D                      	pop rbp
 19511 0000DE3A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19512 0000DE3D C9                      	leave
 19513 0000DE3E C22000                  	ret AND_KILL_FRAME(2)
 19514                                  .L_lambda_simple_end_006c:	; new closure is in rax
 19515 0000DE41 50                      	push rax
 19516 0000DE42 6A01                    	push 1	; arg count
 19517 0000DE44 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19518 0000DE49 E8D4700000              	call malloc
 19519 0000DE4E 50                      	push rax
 19520 0000DE4F BF00000000              	mov rdi, 8 * 0	; new rib
 19521 0000DE54 E8C9700000              	call malloc
 19522 0000DE59 50                      	push rax
 19523 0000DE5A BF08000000              	mov rdi, 8 * 1	; extended env
 19524 0000DE5F E8BE700000              	call malloc
 19525 0000DE64 488B7D10                	mov rdi, ENV
 19526 0000DE68 BE00000000              	mov rsi, 0
 19527 0000DE6D BA01000000              	mov rdx, 1
 19528                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19529 0000DE72 4883FE00                	cmp rsi, 0
 19530 0000DE76 7410                    	je .L_lambda_simple_env_end_0074
 19531 0000DE78 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19532 0000DE7C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19533 0000DE80 48FFC6                  	inc rsi
 19534 0000DE83 48FFC2                  	inc rdx
 19535 0000DE86 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19536                                  .L_lambda_simple_env_end_0074:
 19537 0000DE88 5B                      	pop rbx
 19538 0000DE89 BE00000000              	mov rsi, 0
 19539                                  .L_lambda_simple_params_loop_0074:	; copy params
 19540 0000DE8E 4883FE00                	cmp rsi, 0
 19541 0000DE92 740E                    	je .L_lambda_simple_params_end_0074
 19542 0000DE94 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19543 0000DE99 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19544 0000DE9D 48FFC6                  	inc rsi
 19545 0000DEA0 EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19546                                  .L_lambda_simple_params_end_0074:
 19547 0000DEA2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19548 0000DEA5 4889C3                  	mov rbx, rax
 19549 0000DEA8 58                      	pop rax
 19550 0000DEA9 C60004                  	mov byte [rax], T_closure
 19551 0000DEAC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19552 0000DEB0 48C74009[BDDE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19553 0000DEB8 E947010000              	jmp .L_lambda_simple_end_0074
 19554                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19555 0000DEBD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19556 0000DEC3 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19557 0000DEC5 FF742410                	push qword [rsp + 8 * 2]
 19558 0000DEC9 6A01                    	push 1
 19559 0000DECB E90B700000              	jmp L_error_incorrect_arity_simple
 19560                                  .L_lambda_simple_arity_check_ok_0074:
 19561 0000DED0 C8000000                	enter 0, 0
 19562                                  	; preparing a non-tail-call
 19563 0000DED4 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19564 0000DEDC 803805                  	cmp byte [rax], T_undefined
 19565 0000DEDF 0F84106F0000            	je L_error_fvar_undefined
 19566 0000DEE5 50                      	push rax
 19567 0000DEE6 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 19568 0000DEEE 803805                  	cmp byte [rax], T_undefined
 19569 0000DEF1 0F84FE6E0000            	je L_error_fvar_undefined
 19570 0000DEF7 50                      	push rax
 19571 0000DEF8 6A02                    	push 2	; arg count
 19572 0000DEFA 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19573 0000DEFE 803804                  	cmp byte [rax], T_closure
 19574 0000DF01 0F85726F0000            	jne L_error_non_closure
 19575 0000DF07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19576 0000DF0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19577 0000DF0D 48890425[9A160000]      	mov qword [free_var_133], rax
 19578 0000DF15 48B8-                   	mov rax, sob_void
 19578 0000DF17 [0000000000000000] 
 19579                                  
 19580                                  	; preparing a non-tail-call
 19581 0000DF1F 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19582 0000DF27 803805                  	cmp byte [rax], T_undefined
 19583 0000DF2A 0F84C56E0000            	je L_error_fvar_undefined
 19584 0000DF30 50                      	push rax
 19585 0000DF31 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19586 0000DF39 803805                  	cmp byte [rax], T_undefined
 19587 0000DF3C 0F84B36E0000            	je L_error_fvar_undefined
 19588 0000DF42 50                      	push rax
 19589 0000DF43 6A02                    	push 2	; arg count
 19590 0000DF45 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19591 0000DF49 803804                  	cmp byte [rax], T_closure
 19592 0000DF4C 0F85276F0000            	jne L_error_non_closure
 19593 0000DF52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19594 0000DF55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19595 0000DF58 48890425[CE150000]      	mov qword [free_var_121], rax
 19596 0000DF60 48B8-                   	mov rax, sob_void
 19596 0000DF62 [0000000000000000] 
 19597                                  
 19598                                  	; preparing a non-tail-call
 19599 0000DF6A 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19600 0000DF72 803805                  	cmp byte [rax], T_undefined
 19601 0000DF75 0F847A6E0000            	je L_error_fvar_undefined
 19602 0000DF7B 50                      	push rax
 19603 0000DF7C 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 19604 0000DF84 803805                  	cmp byte [rax], T_undefined
 19605 0000DF87 0F84686E0000            	je L_error_fvar_undefined
 19606 0000DF8D 50                      	push rax
 19607 0000DF8E 6A02                    	push 2	; arg count
 19608 0000DF90 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19609 0000DF94 803804                  	cmp byte [rax], T_closure
 19610 0000DF97 0F85DC6E0000            	jne L_error_non_closure
 19611 0000DF9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19612 0000DFA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19613 0000DFA3 48890425[CD160000]      	mov qword [free_var_136], rax
 19614 0000DFAB 48B8-                   	mov rax, sob_void
 19614 0000DFAD [0000000000000000] 
 19615                                  
 19616                                  	; preparing a non-tail-call
 19617 0000DFB5 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19618 0000DFBD 803805                  	cmp byte [rax], T_undefined
 19619 0000DFC0 0F842F6E0000            	je L_error_fvar_undefined
 19620 0000DFC6 50                      	push rax
 19621 0000DFC7 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19622 0000DFCF 803805                  	cmp byte [rax], T_undefined
 19623 0000DFD2 0F841D6E0000            	je L_error_fvar_undefined
 19624 0000DFD8 50                      	push rax
 19625 0000DFD9 6A02                    	push 2	; arg count
 19626 0000DFDB 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19627 0000DFDF 803804                  	cmp byte [rax], T_closure
 19628 0000DFE2 0F85916E0000            	jne L_error_non_closure
 19629 0000DFE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19630 0000DFEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 19631 0000DFEE 48890425[01160000]      	mov qword [free_var_124], rax
 19632 0000DFF6 48B8-                   	mov rax, sob_void
 19632 0000DFF8 [0000000000000000] 
 19633 0000E000 C9                      	leave
 19634 0000E001 C21800                  	ret AND_KILL_FRAME(1)
 19635                                  .L_lambda_simple_end_0074:	; new closure is in rax
 19636 0000E004 803804                  	cmp byte [rax], T_closure
 19637 0000E007 0F856C6E0000            	jne L_error_non_closure
 19638 0000E00D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19639 0000E010 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19640                                  
 19641 0000E013 4889C7                  	mov rdi, rax
 19642 0000E016 E85C710000              	call print_sexpr_if_not_void
 19643                                  	; preparing a non-tail-call
 19644 0000E01B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19645 0000E020 E8FD6E0000              	call malloc
 19646 0000E025 50                      	push rax
 19647 0000E026 BF00000000              	mov rdi, 8 * 0	; new rib
 19648 0000E02B E8F26E0000              	call malloc
 19649 0000E030 50                      	push rax
 19650 0000E031 BF08000000              	mov rdi, 8 * 1	; extended env
 19651 0000E036 E8E76E0000              	call malloc
 19652 0000E03B 488B7D10                	mov rdi, ENV
 19653 0000E03F BE00000000              	mov rsi, 0
 19654 0000E044 BA01000000              	mov rdx, 1
 19655                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 19656 0000E049 4883FE00                	cmp rsi, 0
 19657 0000E04D 7410                    	je .L_lambda_simple_env_end_0075
 19658 0000E04F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19659 0000E053 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19660 0000E057 48FFC6                  	inc rsi
 19661 0000E05A 48FFC2                  	inc rdx
 19662 0000E05D EBEA                    	jmp .L_lambda_simple_env_loop_0075
 19663                                  .L_lambda_simple_env_end_0075:
 19664 0000E05F 5B                      	pop rbx
 19665 0000E060 BE00000000              	mov rsi, 0
 19666                                  .L_lambda_simple_params_loop_0075:	; copy params
 19667 0000E065 4883FE00                	cmp rsi, 0
 19668 0000E069 740E                    	je .L_lambda_simple_params_end_0075
 19669 0000E06B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19670 0000E070 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19671 0000E074 48FFC6                  	inc rsi
 19672 0000E077 EBEC                    	jmp .L_lambda_simple_params_loop_0075
 19673                                  .L_lambda_simple_params_end_0075:
 19674 0000E079 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19675 0000E07C 4889C3                  	mov rbx, rax
 19676 0000E07F 58                      	pop rax
 19677 0000E080 C60004                  	mov byte [rax], T_closure
 19678 0000E083 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19679 0000E087 48C74009[94E00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 19680 0000E08F E9490B0000              	jmp .L_lambda_simple_end_0075
 19681                                  .L_lambda_simple_code_0075:	; lambda-simple body
 19682 0000E094 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19683 0000E09A 740B                    	je .L_lambda_simple_arity_check_ok_0075
 19684 0000E09C FF742410                	push qword [rsp + 8 * 2]
 19685 0000E0A0 6A01                    	push 1
 19686 0000E0A2 E9346E0000              	jmp L_error_incorrect_arity_simple
 19687                                  .L_lambda_simple_arity_check_ok_0075:
 19688 0000E0A7 C8000000                	enter 0, 0
 19689                                  	; Initiating tail-call optimization
 19690 0000E0AB 48B8-                   	mov rax, L_constants + 2007
 19690 0000E0AD [D707000000000000] 
 19691 0000E0B5 50                      	push rax
 19692 0000E0B6 6A01                    	push 1	; Number of arguments
 19693 0000E0B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19694 0000E0BD E8606E0000              	call malloc
 19695 0000E0C2 50                      	push rax
 19696 0000E0C3 BF08000000              	mov rdi, 8 * 1	; new rib
 19697 0000E0C8 E8556E0000              	call malloc
 19698 0000E0CD 50                      	push rax
 19699 0000E0CE BF10000000              	mov rdi, 8 * 2	; extended env
 19700 0000E0D3 E84A6E0000              	call malloc
 19701 0000E0D8 488B7D10                	mov rdi, ENV
 19702 0000E0DC BE00000000              	mov rsi, 0
 19703 0000E0E1 BA01000000              	mov rdx, 1
 19704                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 19705 0000E0E6 4883FE01                	cmp rsi, 1
 19706 0000E0EA 7410                    	je .L_lambda_simple_env_end_0076
 19707 0000E0EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19708 0000E0F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19709 0000E0F4 48FFC6                  	inc rsi
 19710 0000E0F7 48FFC2                  	inc rdx
 19711 0000E0FA EBEA                    	jmp .L_lambda_simple_env_loop_0076
 19712                                  .L_lambda_simple_env_end_0076:
 19713 0000E0FC 5B                      	pop rbx
 19714 0000E0FD BE00000000              	mov rsi, 0
 19715                                  .L_lambda_simple_params_loop_0076:	; copy params
 19716 0000E102 4883FE01                	cmp rsi, 1
 19717 0000E106 740E                    	je .L_lambda_simple_params_end_0076
 19718 0000E108 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19719 0000E10D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19720 0000E111 48FFC6                  	inc rsi
 19721 0000E114 EBEC                    	jmp .L_lambda_simple_params_loop_0076
 19722                                  .L_lambda_simple_params_end_0076:
 19723 0000E116 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19724 0000E119 4889C3                  	mov rbx, rax
 19725 0000E11C 58                      	pop rax
 19726 0000E11D C60004                  	mov byte [rax], T_closure
 19727 0000E120 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19728 0000E124 48C74009[31E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 19729 0000E12C E9620A0000              	jmp .L_lambda_simple_end_0076
 19730                                  .L_lambda_simple_code_0076:	; lambda-simple body
 19731 0000E131 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19732 0000E137 740B                    	je .L_lambda_simple_arity_check_ok_0076
 19733 0000E139 FF742410                	push qword [rsp + 8 * 2]
 19734 0000E13D 6A01                    	push 1
 19735 0000E13F E9976D0000              	jmp L_error_incorrect_arity_simple
 19736                                  .L_lambda_simple_arity_check_ok_0076:
 19737 0000E144 C8000000                	enter 0, 0
 19738 0000E148 BF08000000              	mov rdi, 8 * 1
 19739 0000E14D E8D06D0000              	call malloc
 19740 0000E152 488B5D20                	mov rbx, PARAM(0)
 19741 0000E156 488918                  	mov qword [rax], rbx
 19742 0000E159 48894520                	mov PARAM(0), rax
 19743 0000E15D 48B8-                   	mov rax, sob_void
 19743 0000E15F [0000000000000000] 
 19744                                  
 19745 0000E167 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19746 0000E16C E8B16D0000              	call malloc
 19747 0000E171 50                      	push rax
 19748 0000E172 BF08000000              	mov rdi, 8 * 1	; new rib
 19749 0000E177 E8A66D0000              	call malloc
 19750 0000E17C 50                      	push rax
 19751 0000E17D BF18000000              	mov rdi, 8 * 3	; extended env
 19752 0000E182 E89B6D0000              	call malloc
 19753 0000E187 488B7D10                	mov rdi, ENV
 19754 0000E18B BE00000000              	mov rsi, 0
 19755 0000E190 BA01000000              	mov rdx, 1
 19756                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 19757 0000E195 4883FE02                	cmp rsi, 2
 19758 0000E199 7410                    	je .L_lambda_simple_env_end_0077
 19759 0000E19B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19760 0000E19F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19761 0000E1A3 48FFC6                  	inc rsi
 19762 0000E1A6 48FFC2                  	inc rdx
 19763 0000E1A9 EBEA                    	jmp .L_lambda_simple_env_loop_0077
 19764                                  .L_lambda_simple_env_end_0077:
 19765 0000E1AB 5B                      	pop rbx
 19766 0000E1AC BE00000000              	mov rsi, 0
 19767                                  .L_lambda_simple_params_loop_0077:	; copy params
 19768 0000E1B1 4883FE01                	cmp rsi, 1
 19769 0000E1B5 740E                    	je .L_lambda_simple_params_end_0077
 19770 0000E1B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19771 0000E1BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19772 0000E1C0 48FFC6                  	inc rsi
 19773 0000E1C3 EBEC                    	jmp .L_lambda_simple_params_loop_0077
 19774                                  .L_lambda_simple_params_end_0077:
 19775 0000E1C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19776 0000E1C8 4889C3                  	mov rbx, rax
 19777 0000E1CB 58                      	pop rax
 19778 0000E1CC C60004                  	mov byte [rax], T_closure
 19779 0000E1CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19780 0000E1D3 48C74009[E0E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 19781 0000E1DB E9BC010000              	jmp .L_lambda_simple_end_0077
 19782                                  .L_lambda_simple_code_0077:	; lambda-simple body
 19783 0000E1E0 48837C241004            	cmp qword [rsp + 8 * 2], 4
 19784 0000E1E6 740B                    	je .L_lambda_simple_arity_check_ok_0077
 19785 0000E1E8 FF742410                	push qword [rsp + 8 * 2]
 19786 0000E1EC 6A04                    	push 4
 19787 0000E1EE E9E86C0000              	jmp L_error_incorrect_arity_simple
 19788                                  .L_lambda_simple_arity_check_ok_0077:
 19789 0000E1F3 C8000000                	enter 0, 0
 19790                                  	; preparing a non-tail-call
 19791 0000E1F7 488B4538                	mov rax, PARAM(3)	; param len
 19792 0000E1FB 50                      	push rax
 19793 0000E1FC 488B4520                	mov rax, PARAM(0)	; param i
 19794 0000E200 50                      	push rax
 19795 0000E201 6A02                    	push 2	; arg count
 19796 0000E203 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 19797 0000E20B 803805                  	cmp byte [rax], T_undefined
 19798 0000E20E 0F84E16B0000            	je L_error_fvar_undefined
 19799 0000E214 803804                  	cmp byte [rax], T_closure
 19800 0000E217 0F855C6C0000            	jne L_error_non_closure
 19801 0000E21D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19802 0000E220 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19803 0000E223 483D[02000000]          	cmp rax, sob_boolean_false
 19804 0000E229 0F8569010000            	jne .L_or_end_000c
 19805                                  
 19806                                  	; preparing a non-tail-call
 19807 0000E22F 488B4538                	mov rax, PARAM(3)	; param len
 19808 0000E233 50                      	push rax
 19809 0000E234 488B4520                	mov rax, PARAM(0)	; param i
 19810 0000E238 50                      	push rax
 19811 0000E239 6A02                    	push 2	; arg count
 19812 0000E23B 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 19813 0000E243 803805                  	cmp byte [rax], T_undefined
 19814 0000E246 0F84A96B0000            	je L_error_fvar_undefined
 19815 0000E24C 803804                  	cmp byte [rax], T_closure
 19816 0000E24F 0F85246C0000            	jne L_error_non_closure
 19817 0000E255 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19818 0000E258 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19819 0000E25B 483D[02000000]          	cmp rax, sob_boolean_false
 19820 0000E261 0F8427010000            	je .L_if_else_005d
 19821                                  	; preparing a non-tail-call
 19822                                  	; preparing a non-tail-call
 19823 0000E267 488B4520                	mov rax, PARAM(0)	; param i
 19824 0000E26B 50                      	push rax
 19825 0000E26C 488B4530                	mov rax, PARAM(2)	; param str2
 19826 0000E270 50                      	push rax
 19827 0000E271 6A02                    	push 2	; arg count
 19828 0000E273 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19829 0000E27B 803805                  	cmp byte [rax], T_undefined
 19830 0000E27E 0F84716B0000            	je L_error_fvar_undefined
 19831 0000E284 803804                  	cmp byte [rax], T_closure
 19832 0000E287 0F85EC6B0000            	jne L_error_non_closure
 19833 0000E28D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19834 0000E290 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19835 0000E293 50                      	push rax
 19836                                  	; preparing a non-tail-call
 19837 0000E294 488B4520                	mov rax, PARAM(0)	; param i
 19838 0000E298 50                      	push rax
 19839 0000E299 488B4528                	mov rax, PARAM(1)	; param str1
 19840 0000E29D 50                      	push rax
 19841 0000E29E 6A02                    	push 2	; arg count
 19842 0000E2A0 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19843 0000E2A8 803805                  	cmp byte [rax], T_undefined
 19844 0000E2AB 0F84446B0000            	je L_error_fvar_undefined
 19845 0000E2B1 803804                  	cmp byte [rax], T_closure
 19846 0000E2B4 0F85BF6B0000            	jne L_error_non_closure
 19847 0000E2BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19848 0000E2BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 19849 0000E2C0 50                      	push rax
 19850 0000E2C1 6A02                    	push 2	; arg count
 19851 0000E2C3 488B4510                	mov rax, ENV
 19852 0000E2C7 488B4008                	mov rax, qword [rax + 8 * 1]
 19853 0000E2CB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 19854 0000E2CE 803804                  	cmp byte [rax], T_closure
 19855 0000E2D1 0F85A26B0000            	jne L_error_non_closure
 19856 0000E2D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19857 0000E2DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19858 0000E2DD 483D[02000000]          	cmp rax, sob_boolean_false
 19859 0000E2E3 0F8499000000            	je .L_if_else_005c
 19860                                  	; Initiating tail-call optimization
 19861 0000E2E9 488B4538                	mov rax, PARAM(3)	; param len
 19862 0000E2ED 50                      	push rax
 19863 0000E2EE 488B4530                	mov rax, PARAM(2)	; param str2
 19864 0000E2F2 50                      	push rax
 19865 0000E2F3 488B4528                	mov rax, PARAM(1)	; param str1
 19866 0000E2F7 50                      	push rax
 19867                                  	; preparing a non-tail-call
 19868 0000E2F8 48B8-                   	mov rax, L_constants + 2270
 19868 0000E2FA [DE08000000000000] 
 19869 0000E302 50                      	push rax
 19870 0000E303 488B4520                	mov rax, PARAM(0)	; param i
 19871 0000E307 50                      	push rax
 19872 0000E308 6A02                    	push 2	; arg count
 19873 0000E30A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19874 0000E312 803805                  	cmp byte [rax], T_undefined
 19875 0000E315 0F84DA6A0000            	je L_error_fvar_undefined
 19876 0000E31B 803804                  	cmp byte [rax], T_closure
 19877 0000E31E 0F85556B0000            	jne L_error_non_closure
 19878 0000E324 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19879 0000E327 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19880 0000E32A 50                      	push rax
 19881 0000E32B 6A04                    	push 4	; Number of arguments
 19882 0000E32D 488B4510                	mov rax, ENV
 19883 0000E331 488B00                  	mov rax, qword [rax + 8 * 0]
 19884 0000E334 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19885 0000E337 488B00                  	mov rax, qword [rax]
 19886 0000E33A 803804                  	cmp byte [rax], T_closure
 19887 0000E33D 0F85366B0000            	jne L_error_non_closure
 19888 0000E343 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19889                                  
 19890                                  	; Reclaiming the current stack frame
 19891 0000E346 FF7508                  	push qword [rbp + 8]
 19892 0000E349 FF7500                  	push qword [rbp]
 19893 0000E34C 41BA08000000            	mov r10, 4 + 4
 19894 0000E352 4C8B4518                	mov r8, COUNT
 19895 0000E356 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19896 0000E35B 4C8D4DF8                	lea r9, [rbp - 8]
 19897                                  .L_tc_recycle_frame_loop_00a9:
 19898 0000E35F 4983FA00                	cmp r10, 0
 19899 0000E363 7413                    	je .L_tc_recycle_frame_done_00a9
 19900 0000E365 4D8B19                  	mov r11, qword [r9]
 19901 0000E368 4D8918                  	mov qword [r8], r11
 19902 0000E36B 49FFCA                  	dec r10
 19903 0000E36E 4983E808                	sub r8, 8
 19904 0000E372 4983E908                	sub r9, 8
 19905 0000E376 EBE7                    	jmp .L_tc_recycle_frame_loop_00a9
 19906                                  .L_tc_recycle_frame_done_00a9:
 19907 0000E378 498D6008                	lea rsp, [r8 + 8]
 19908 0000E37C 5D                      	pop rbp
 19909 0000E37D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19910 0000E380 EB0A                    	jmp .L_if_end_005c
 19911                                  .L_if_else_005c:
 19912 0000E382 48B8-                   	mov rax, L_constants + 2
 19912 0000E384 [0200000000000000] 
 19913                                  .L_if_end_005c:
 19914 0000E38C EB0A                    	jmp .L_if_end_005d
 19915                                  .L_if_else_005d:
 19916 0000E38E 48B8-                   	mov rax, L_constants + 2
 19916 0000E390 [0200000000000000] 
 19917                                  .L_if_end_005d:
 19918                                  .L_or_end_000c:
 19919 0000E398 C9                      	leave
 19920 0000E399 C23000                  	ret AND_KILL_FRAME(4)
 19921                                  .L_lambda_simple_end_0077:	; new closure is in rax
 19922 0000E39C 50                      	push rax
 19923 0000E39D 488B4520                	mov rax, PARAM(0)	; param run
 19924 0000E3A1 8F00                    	pop qword [rax]
 19925 0000E3A3 48B8-                   	mov rax, sob_void
 19925 0000E3A5 [0000000000000000] 
 19926                                  
 19927                                  	; preparing a non-tail-call
 19928 0000E3AD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19929 0000E3B2 E86B6B0000              	call malloc
 19930 0000E3B7 50                      	push rax
 19931 0000E3B8 BF08000000              	mov rdi, 8 * 1	; new rib
 19932 0000E3BD E8606B0000              	call malloc
 19933 0000E3C2 50                      	push rax
 19934 0000E3C3 BF18000000              	mov rdi, 8 * 3	; extended env
 19935 0000E3C8 E8556B0000              	call malloc
 19936 0000E3CD 488B7D10                	mov rdi, ENV
 19937 0000E3D1 BE00000000              	mov rsi, 0
 19938 0000E3D6 BA01000000              	mov rdx, 1
 19939                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 19940 0000E3DB 4883FE02                	cmp rsi, 2
 19941 0000E3DF 7410                    	je .L_lambda_simple_env_end_0078
 19942 0000E3E1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19943 0000E3E5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19944 0000E3E9 48FFC6                  	inc rsi
 19945 0000E3EC 48FFC2                  	inc rdx
 19946 0000E3EF EBEA                    	jmp .L_lambda_simple_env_loop_0078
 19947                                  .L_lambda_simple_env_end_0078:
 19948 0000E3F1 5B                      	pop rbx
 19949 0000E3F2 BE00000000              	mov rsi, 0
 19950                                  .L_lambda_simple_params_loop_0078:	; copy params
 19951 0000E3F7 4883FE01                	cmp rsi, 1
 19952 0000E3FB 740E                    	je .L_lambda_simple_params_end_0078
 19953 0000E3FD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19954 0000E402 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19955 0000E406 48FFC6                  	inc rsi
 19956 0000E409 EBEC                    	jmp .L_lambda_simple_params_loop_0078
 19957                                  .L_lambda_simple_params_end_0078:
 19958 0000E40B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19959 0000E40E 4889C3                  	mov rbx, rax
 19960 0000E411 58                      	pop rax
 19961 0000E412 C60004                  	mov byte [rax], T_closure
 19962 0000E415 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19963 0000E419 48C74009[26E40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 19964 0000E421 E908020000              	jmp .L_lambda_simple_end_0078
 19965                                  .L_lambda_simple_code_0078:	; lambda-simple body
 19966 0000E426 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19967 0000E42C 740B                    	je .L_lambda_simple_arity_check_ok_0078
 19968 0000E42E FF742410                	push qword [rsp + 8 * 2]
 19969 0000E432 6A02                    	push 2
 19970 0000E434 E9A26A0000              	jmp L_error_incorrect_arity_simple
 19971                                  .L_lambda_simple_arity_check_ok_0078:
 19972 0000E439 C8000000                	enter 0, 0
 19973                                  	; Initiating tail-call optimization
 19974                                  	; preparing a non-tail-call
 19975 0000E43D 488B4528                	mov rax, PARAM(1)	; param str2
 19976 0000E441 50                      	push rax
 19977 0000E442 6A01                    	push 1	; arg count
 19978 0000E444 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19979 0000E44C 803805                  	cmp byte [rax], T_undefined
 19980 0000E44F 0F84A0690000            	je L_error_fvar_undefined
 19981 0000E455 803804                  	cmp byte [rax], T_closure
 19982 0000E458 0F851B6A0000            	jne L_error_non_closure
 19983 0000E45E FF7001                  	push SOB_CLOSURE_ENV(rax)
 19984 0000E461 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19985 0000E464 50                      	push rax
 19986                                  	; preparing a non-tail-call
 19987 0000E465 488B4520                	mov rax, PARAM(0)	; param str1
 19988 0000E469 50                      	push rax
 19989 0000E46A 6A01                    	push 1	; arg count
 19990 0000E46C 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19991 0000E474 803805                  	cmp byte [rax], T_undefined
 19992 0000E477 0F8478690000            	je L_error_fvar_undefined
 19993 0000E47D 803804                  	cmp byte [rax], T_closure
 19994 0000E480 0F85F3690000            	jne L_error_non_closure
 19995 0000E486 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19996 0000E489 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19997 0000E48C 50                      	push rax
 19998 0000E48D 6A02                    	push 2	; Number of arguments
 19999 0000E48F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20000 0000E494 E8896A0000              	call malloc
 20001 0000E499 50                      	push rax
 20002 0000E49A BF10000000              	mov rdi, 8 * 2	; new rib
 20003 0000E49F E87E6A0000              	call malloc
 20004 0000E4A4 50                      	push rax
 20005 0000E4A5 BF20000000              	mov rdi, 8 * 4	; extended env
 20006 0000E4AA E8736A0000              	call malloc
 20007 0000E4AF 488B7D10                	mov rdi, ENV
 20008 0000E4B3 BE00000000              	mov rsi, 0
 20009 0000E4B8 BA01000000              	mov rdx, 1
 20010                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 20011 0000E4BD 4883FE03                	cmp rsi, 3
 20012 0000E4C1 7410                    	je .L_lambda_simple_env_end_0079
 20013 0000E4C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20014 0000E4C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20015 0000E4CB 48FFC6                  	inc rsi
 20016 0000E4CE 48FFC2                  	inc rdx
 20017 0000E4D1 EBEA                    	jmp .L_lambda_simple_env_loop_0079
 20018                                  .L_lambda_simple_env_end_0079:
 20019 0000E4D3 5B                      	pop rbx
 20020 0000E4D4 BE00000000              	mov rsi, 0
 20021                                  .L_lambda_simple_params_loop_0079:	; copy params
 20022 0000E4D9 4883FE02                	cmp rsi, 2
 20023 0000E4DD 740E                    	je .L_lambda_simple_params_end_0079
 20024 0000E4DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20025 0000E4E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20026 0000E4E8 48FFC6                  	inc rsi
 20027 0000E4EB EBEC                    	jmp .L_lambda_simple_params_loop_0079
 20028                                  .L_lambda_simple_params_end_0079:
 20029 0000E4ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20030 0000E4F0 4889C3                  	mov rbx, rax
 20031 0000E4F3 58                      	pop rax
 20032 0000E4F4 C60004                  	mov byte [rax], T_closure
 20033 0000E4F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20034 0000E4FB 48C74009[08E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 20035 0000E503 E9DC000000              	jmp .L_lambda_simple_end_0079
 20036                                  .L_lambda_simple_code_0079:	; lambda-simple body
 20037 0000E508 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20038 0000E50E 740B                    	je .L_lambda_simple_arity_check_ok_0079
 20039 0000E510 FF742410                	push qword [rsp + 8 * 2]
 20040 0000E514 6A02                    	push 2
 20041 0000E516 E9C0690000              	jmp L_error_incorrect_arity_simple
 20042                                  .L_lambda_simple_arity_check_ok_0079:
 20043 0000E51B C8000000                	enter 0, 0
 20044                                  	; preparing a non-tail-call
 20045 0000E51F 488B4528                	mov rax, PARAM(1)	; param len2
 20046 0000E523 50                      	push rax
 20047 0000E524 488B4520                	mov rax, PARAM(0)	; param len1
 20048 0000E528 50                      	push rax
 20049 0000E529 6A02                    	push 2	; arg count
 20050 0000E52B 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20051 0000E533 803805                  	cmp byte [rax], T_undefined
 20052 0000E536 0F84B9680000            	je L_error_fvar_undefined
 20053 0000E53C 803804                  	cmp byte [rax], T_closure
 20054 0000E53F 0F8534690000            	jne L_error_non_closure
 20055 0000E545 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20056 0000E548 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20057 0000E54B 483D[02000000]          	cmp rax, sob_boolean_false
 20058 0000E551 0F847F000000            	je .L_if_else_005e
 20059                                  	; Initiating tail-call optimization
 20060 0000E557 488B4520                	mov rax, PARAM(0)	; param len1
 20061 0000E55B 50                      	push rax
 20062 0000E55C 488B4510                	mov rax, ENV
 20063 0000E560 488B00                  	mov rax, qword [rax + 8 * 0]
 20064 0000E563 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20065 0000E567 50                      	push rax
 20066 0000E568 488B4510                	mov rax, ENV
 20067 0000E56C 488B00                  	mov rax, qword [rax + 8 * 0]
 20068 0000E56F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20069 0000E572 50                      	push rax
 20070 0000E573 48B8-                   	mov rax, L_constants + 2135
 20070 0000E575 [5708000000000000] 
 20071 0000E57D 50                      	push rax
 20072 0000E57E 6A04                    	push 4	; Number of arguments
 20073 0000E580 488B4510                	mov rax, ENV
 20074 0000E584 488B4008                	mov rax, qword [rax + 8 * 1]
 20075 0000E588 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20076 0000E58B 488B00                  	mov rax, qword [rax]
 20077 0000E58E 803804                  	cmp byte [rax], T_closure
 20078 0000E591 0F85E2680000            	jne L_error_non_closure
 20079 0000E597 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20080                                  
 20081                                  	; Reclaiming the current stack frame
 20082 0000E59A FF7508                  	push qword [rbp + 8]
 20083 0000E59D FF7500                  	push qword [rbp]
 20084 0000E5A0 41BA08000000            	mov r10, 4 + 4
 20085 0000E5A6 4C8B4518                	mov r8, COUNT
 20086 0000E5AA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20087 0000E5AF 4C8D4DF8                	lea r9, [rbp - 8]
 20088                                  .L_tc_recycle_frame_loop_00aa:
 20089 0000E5B3 4983FA00                	cmp r10, 0
 20090 0000E5B7 7413                    	je .L_tc_recycle_frame_done_00aa
 20091 0000E5B9 4D8B19                  	mov r11, qword [r9]
 20092 0000E5BC 4D8918                  	mov qword [r8], r11
 20093 0000E5BF 49FFCA                  	dec r10
 20094 0000E5C2 4983E808                	sub r8, 8
 20095 0000E5C6 4983E908                	sub r9, 8
 20096 0000E5CA EBE7                    	jmp .L_tc_recycle_frame_loop_00aa
 20097                                  .L_tc_recycle_frame_done_00aa:
 20098 0000E5CC 498D6008                	lea rsp, [r8 + 8]
 20099 0000E5D0 5D                      	pop rbp
 20100 0000E5D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20101 0000E5D4 EB0A                    	jmp .L_if_end_005e
 20102                                  .L_if_else_005e:
 20103 0000E5D6 48B8-                   	mov rax, L_constants + 2
 20103 0000E5D8 [0200000000000000] 
 20104                                  .L_if_end_005e:
 20105 0000E5E0 C9                      	leave
 20106 0000E5E1 C22000                  	ret AND_KILL_FRAME(2)
 20107                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20108 0000E5E4 803804                  	cmp byte [rax], T_closure
 20109 0000E5E7 0F858C680000            	jne L_error_non_closure
 20110 0000E5ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 20111                                  
 20112                                  	; Reclaiming the current stack frame
 20113 0000E5F0 FF7508                  	push qword [rbp + 8]
 20114 0000E5F3 FF7500                  	push qword [rbp]
 20115 0000E5F6 41BA06000000            	mov r10, 2 + 4
 20116 0000E5FC 4C8B4518                	mov r8, COUNT
 20117 0000E600 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20118 0000E605 4C8D4DF8                	lea r9, [rbp - 8]
 20119                                  .L_tc_recycle_frame_loop_00ab:
 20120 0000E609 4983FA00                	cmp r10, 0
 20121 0000E60D 7413                    	je .L_tc_recycle_frame_done_00ab
 20122 0000E60F 4D8B19                  	mov r11, qword [r9]
 20123 0000E612 4D8918                  	mov qword [r8], r11
 20124 0000E615 49FFCA                  	dec r10
 20125 0000E618 4983E808                	sub r8, 8
 20126 0000E61C 4983E908                	sub r9, 8
 20127 0000E620 EBE7                    	jmp .L_tc_recycle_frame_loop_00ab
 20128                                  .L_tc_recycle_frame_done_00ab:
 20129 0000E622 498D6008                	lea rsp, [r8 + 8]
 20130 0000E626 5D                      	pop rbp
 20131 0000E627 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20132 0000E62A C9                      	leave
 20133 0000E62B C22000                  	ret AND_KILL_FRAME(2)
 20134                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20135 0000E62E 50                      	push rax
 20136 0000E62F 6A01                    	push 1	; arg count
 20137 0000E631 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20138 0000E636 E8E7680000              	call malloc
 20139 0000E63B 50                      	push rax
 20140 0000E63C BF08000000              	mov rdi, 8 * 1	; new rib
 20141 0000E641 E8DC680000              	call malloc
 20142 0000E646 50                      	push rax
 20143 0000E647 BF18000000              	mov rdi, 8 * 3	; extended env
 20144 0000E64C E8D1680000              	call malloc
 20145 0000E651 488B7D10                	mov rdi, ENV
 20146 0000E655 BE00000000              	mov rsi, 0
 20147 0000E65A BA01000000              	mov rdx, 1
 20148                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 20149 0000E65F 4883FE02                	cmp rsi, 2
 20150 0000E663 7410                    	je .L_lambda_simple_env_end_007a
 20151 0000E665 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20152 0000E669 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20153 0000E66D 48FFC6                  	inc rsi
 20154 0000E670 48FFC2                  	inc rdx
 20155 0000E673 EBEA                    	jmp .L_lambda_simple_env_loop_007a
 20156                                  .L_lambda_simple_env_end_007a:
 20157 0000E675 5B                      	pop rbx
 20158 0000E676 BE00000000              	mov rsi, 0
 20159                                  .L_lambda_simple_params_loop_007a:	; copy params
 20160 0000E67B 4883FE01                	cmp rsi, 1
 20161 0000E67F 740E                    	je .L_lambda_simple_params_end_007a
 20162 0000E681 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20163 0000E686 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20164 0000E68A 48FFC6                  	inc rsi
 20165 0000E68D EBEC                    	jmp .L_lambda_simple_params_loop_007a
 20166                                  .L_lambda_simple_params_end_007a:
 20167 0000E68F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20168 0000E692 4889C3                  	mov rbx, rax
 20169 0000E695 58                      	pop rax
 20170 0000E696 C60004                  	mov byte [rax], T_closure
 20171 0000E699 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20172 0000E69D 48C74009[AAE60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 20173 0000E6A5 E9D6040000              	jmp .L_lambda_simple_end_007a
 20174                                  .L_lambda_simple_code_007a:	; lambda-simple body
 20175 0000E6AA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20176 0000E6B0 740B                    	je .L_lambda_simple_arity_check_ok_007a
 20177 0000E6B2 FF742410                	push qword [rsp + 8 * 2]
 20178 0000E6B6 6A01                    	push 1
 20179 0000E6B8 E91E680000              	jmp L_error_incorrect_arity_simple
 20180                                  .L_lambda_simple_arity_check_ok_007a:
 20181 0000E6BD C8000000                	enter 0, 0
 20182                                  	; Initiating tail-call optimization
 20183 0000E6C1 48B8-                   	mov rax, L_constants + 2007
 20183 0000E6C3 [D707000000000000] 
 20184 0000E6CB 50                      	push rax
 20185 0000E6CC 6A01                    	push 1	; Number of arguments
 20186 0000E6CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20187 0000E6D3 E84A680000              	call malloc
 20188 0000E6D8 50                      	push rax
 20189 0000E6D9 BF08000000              	mov rdi, 8 * 1	; new rib
 20190 0000E6DE E83F680000              	call malloc
 20191 0000E6E3 50                      	push rax
 20192 0000E6E4 BF20000000              	mov rdi, 8 * 4	; extended env
 20193 0000E6E9 E834680000              	call malloc
 20194 0000E6EE 488B7D10                	mov rdi, ENV
 20195 0000E6F2 BE00000000              	mov rsi, 0
 20196 0000E6F7 BA01000000              	mov rdx, 1
 20197                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20198 0000E6FC 4883FE03                	cmp rsi, 3
 20199 0000E700 7410                    	je .L_lambda_simple_env_end_007b
 20200 0000E702 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20201 0000E706 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20202 0000E70A 48FFC6                  	inc rsi
 20203 0000E70D 48FFC2                  	inc rdx
 20204 0000E710 EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20205                                  .L_lambda_simple_env_end_007b:
 20206 0000E712 5B                      	pop rbx
 20207 0000E713 BE00000000              	mov rsi, 0
 20208                                  .L_lambda_simple_params_loop_007b:	; copy params
 20209 0000E718 4883FE01                	cmp rsi, 1
 20210 0000E71C 740E                    	je .L_lambda_simple_params_end_007b
 20211 0000E71E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20212 0000E723 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20213 0000E727 48FFC6                  	inc rsi
 20214 0000E72A EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20215                                  .L_lambda_simple_params_end_007b:
 20216 0000E72C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20217 0000E72F 4889C3                  	mov rbx, rax
 20218 0000E732 58                      	pop rax
 20219 0000E733 C60004                  	mov byte [rax], T_closure
 20220 0000E736 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20221 0000E73A 48C74009[47E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20222 0000E742 E9EF030000              	jmp .L_lambda_simple_end_007b
 20223                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20224 0000E747 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20225 0000E74D 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20226 0000E74F FF742410                	push qword [rsp + 8 * 2]
 20227 0000E753 6A01                    	push 1
 20228 0000E755 E981670000              	jmp L_error_incorrect_arity_simple
 20229                                  .L_lambda_simple_arity_check_ok_007b:
 20230 0000E75A C8000000                	enter 0, 0
 20231 0000E75E BF08000000              	mov rdi, 8 * 1
 20232 0000E763 E8BA670000              	call malloc
 20233 0000E768 488B5D20                	mov rbx, PARAM(0)
 20234 0000E76C 488918                  	mov qword [rax], rbx
 20235 0000E76F 48894520                	mov PARAM(0), rax
 20236 0000E773 48B8-                   	mov rax, sob_void
 20236 0000E775 [0000000000000000] 
 20237                                  
 20238 0000E77D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20239 0000E782 E89B670000              	call malloc
 20240 0000E787 50                      	push rax
 20241 0000E788 BF08000000              	mov rdi, 8 * 1	; new rib
 20242 0000E78D E890670000              	call malloc
 20243 0000E792 50                      	push rax
 20244 0000E793 BF28000000              	mov rdi, 8 * 5	; extended env
 20245 0000E798 E885670000              	call malloc
 20246 0000E79D 488B7D10                	mov rdi, ENV
 20247 0000E7A1 BE00000000              	mov rsi, 0
 20248 0000E7A6 BA01000000              	mov rdx, 1
 20249                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20250 0000E7AB 4883FE04                	cmp rsi, 4
 20251 0000E7AF 7410                    	je .L_lambda_simple_env_end_007c
 20252 0000E7B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20253 0000E7B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20254 0000E7B9 48FFC6                  	inc rsi
 20255 0000E7BC 48FFC2                  	inc rdx
 20256 0000E7BF EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20257                                  .L_lambda_simple_env_end_007c:
 20258 0000E7C1 5B                      	pop rbx
 20259 0000E7C2 BE00000000              	mov rsi, 0
 20260                                  .L_lambda_simple_params_loop_007c:	; copy params
 20261 0000E7C7 4883FE01                	cmp rsi, 1
 20262 0000E7CB 740E                    	je .L_lambda_simple_params_end_007c
 20263 0000E7CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20264 0000E7D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20265 0000E7D6 48FFC6                  	inc rsi
 20266 0000E7D9 EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20267                                  .L_lambda_simple_params_end_007c:
 20268 0000E7DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20269 0000E7DE 4889C3                  	mov rbx, rax
 20270 0000E7E1 58                      	pop rax
 20271 0000E7E2 C60004                  	mov byte [rax], T_closure
 20272 0000E7E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20273 0000E7E9 48C74009[F6E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20274 0000E7F1 E954010000              	jmp .L_lambda_simple_end_007c
 20275                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20276 0000E7F6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20277 0000E7FC 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20278 0000E7FE FF742410                	push qword [rsp + 8 * 2]
 20279 0000E802 6A02                    	push 2
 20280 0000E804 E9D2660000              	jmp L_error_incorrect_arity_simple
 20281                                  .L_lambda_simple_arity_check_ok_007c:
 20282 0000E809 C8000000                	enter 0, 0
 20283                                  	; preparing a non-tail-call
 20284 0000E80D 488B4528                	mov rax, PARAM(1)	; param strs
 20285 0000E811 50                      	push rax
 20286 0000E812 6A01                    	push 1	; arg count
 20287 0000E814 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20288 0000E81C 803805                  	cmp byte [rax], T_undefined
 20289 0000E81F 0F84D0650000            	je L_error_fvar_undefined
 20290 0000E825 803804                  	cmp byte [rax], T_closure
 20291 0000E828 0F854B660000            	jne L_error_non_closure
 20292 0000E82E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20293 0000E831 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20294 0000E834 483D[02000000]          	cmp rax, sob_boolean_false
 20295 0000E83A 0F8506010000            	jne .L_or_end_000d
 20296                                  
 20297                                  	; preparing a non-tail-call
 20298                                  	; preparing a non-tail-call
 20299 0000E840 488B4528                	mov rax, PARAM(1)	; param strs
 20300 0000E844 50                      	push rax
 20301 0000E845 6A01                    	push 1	; arg count
 20302 0000E847 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20303 0000E84F 803805                  	cmp byte [rax], T_undefined
 20304 0000E852 0F849D650000            	je L_error_fvar_undefined
 20305 0000E858 803804                  	cmp byte [rax], T_closure
 20306 0000E85B 0F8518660000            	jne L_error_non_closure
 20307 0000E861 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20308 0000E864 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20309 0000E867 50                      	push rax
 20310 0000E868 488B4520                	mov rax, PARAM(0)	; param str
 20311 0000E86C 50                      	push rax
 20312 0000E86D 6A02                    	push 2	; arg count
 20313 0000E86F 488B4510                	mov rax, ENV
 20314 0000E873 488B4008                	mov rax, qword [rax + 8 * 1]
 20315 0000E877 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20316 0000E87A 803804                  	cmp byte [rax], T_closure
 20317 0000E87D 0F85F6650000            	jne L_error_non_closure
 20318 0000E883 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20319 0000E886 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20320 0000E889 483D[02000000]          	cmp rax, sob_boolean_false
 20321 0000E88F 0F84A7000000            	je .L_if_else_005f
 20322                                  	; Initiating tail-call optimization
 20323                                  	; preparing a non-tail-call
 20324 0000E895 488B4528                	mov rax, PARAM(1)	; param strs
 20325 0000E899 50                      	push rax
 20326 0000E89A 6A01                    	push 1	; arg count
 20327 0000E89C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20328 0000E8A4 803805                  	cmp byte [rax], T_undefined
 20329 0000E8A7 0F8448650000            	je L_error_fvar_undefined
 20330 0000E8AD 803804                  	cmp byte [rax], T_closure
 20331 0000E8B0 0F85C3650000            	jne L_error_non_closure
 20332 0000E8B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20333 0000E8B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20334 0000E8BC 50                      	push rax
 20335                                  	; preparing a non-tail-call
 20336 0000E8BD 488B4528                	mov rax, PARAM(1)	; param strs
 20337 0000E8C1 50                      	push rax
 20338 0000E8C2 6A01                    	push 1	; arg count
 20339 0000E8C4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20340 0000E8CC 803805                  	cmp byte [rax], T_undefined
 20341 0000E8CF 0F8420650000            	je L_error_fvar_undefined
 20342 0000E8D5 803804                  	cmp byte [rax], T_closure
 20343 0000E8D8 0F859B650000            	jne L_error_non_closure
 20344 0000E8DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20345 0000E8E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20346 0000E8E4 50                      	push rax
 20347 0000E8E5 6A02                    	push 2	; Number of arguments
 20348 0000E8E7 488B4510                	mov rax, ENV
 20349 0000E8EB 488B00                  	mov rax, qword [rax + 8 * 0]
 20350 0000E8EE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20351 0000E8F1 488B00                  	mov rax, qword [rax]
 20352 0000E8F4 803804                  	cmp byte [rax], T_closure
 20353 0000E8F7 0F857C650000            	jne L_error_non_closure
 20354 0000E8FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20355                                  
 20356                                  	; Reclaiming the current stack frame
 20357 0000E900 FF7508                  	push qword [rbp + 8]
 20358 0000E903 FF7500                  	push qword [rbp]
 20359 0000E906 41BA06000000            	mov r10, 2 + 4
 20360 0000E90C 4C8B4518                	mov r8, COUNT
 20361 0000E910 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20362 0000E915 4C8D4DF8                	lea r9, [rbp - 8]
 20363                                  .L_tc_recycle_frame_loop_00ac:
 20364 0000E919 4983FA00                	cmp r10, 0
 20365 0000E91D 7413                    	je .L_tc_recycle_frame_done_00ac
 20366 0000E91F 4D8B19                  	mov r11, qword [r9]
 20367 0000E922 4D8918                  	mov qword [r8], r11
 20368 0000E925 49FFCA                  	dec r10
 20369 0000E928 4983E808                	sub r8, 8
 20370 0000E92C 4983E908                	sub r9, 8
 20371 0000E930 EBE7                    	jmp .L_tc_recycle_frame_loop_00ac
 20372                                  .L_tc_recycle_frame_done_00ac:
 20373 0000E932 498D6008                	lea rsp, [r8 + 8]
 20374 0000E936 5D                      	pop rbp
 20375 0000E937 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20376 0000E93A EB0A                    	jmp .L_if_end_005f
 20377                                  .L_if_else_005f:
 20378 0000E93C 48B8-                   	mov rax, L_constants + 2
 20378 0000E93E [0200000000000000] 
 20379                                  .L_if_end_005f:
 20380                                  .L_or_end_000d:
 20381 0000E946 C9                      	leave
 20382 0000E947 C22000                  	ret AND_KILL_FRAME(2)
 20383                                  .L_lambda_simple_end_007c:	; new closure is in rax
 20384 0000E94A 50                      	push rax
 20385 0000E94B 488B4520                	mov rax, PARAM(0)	; param run
 20386 0000E94F 8F00                    	pop qword [rax]
 20387 0000E951 48B8-                   	mov rax, sob_void
 20387 0000E953 [0000000000000000] 
 20388                                  
 20389 0000E95B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20390 0000E960 E8BD650000              	call malloc
 20391 0000E965 50                      	push rax
 20392 0000E966 BF08000000              	mov rdi, 8 * 1	; new rib
 20393 0000E96B E8B2650000              	call malloc
 20394 0000E970 50                      	push rax
 20395 0000E971 BF28000000              	mov rdi, 8 * 5	; extended env
 20396 0000E976 E8A7650000              	call malloc
 20397 0000E97B 488B7D10                	mov rdi, ENV
 20398 0000E97F BE00000000              	mov rsi, 0
 20399 0000E984 BA01000000              	mov rdx, 1
 20400                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 20401 0000E989 4883FE04                	cmp rsi, 4
 20402 0000E98D 7410                    	je .L_lambda_opt_env_end_0013
 20403 0000E98F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20404 0000E993 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20405 0000E997 48FFC6                  	inc rsi
 20406 0000E99A 48FFC2                  	inc rdx
 20407 0000E99D EBEA                    	jmp .L_lambda_opt_env_loop_0013
 20408                                  .L_lambda_opt_env_end_0013:
 20409 0000E99F 5B                      	pop rbx
 20410 0000E9A0 BE00000000              	mov rsi, 0
 20411                                  .L_lambda_opt_params_loop_0013:	; copy params
 20412 0000E9A5 4883FE01                	cmp rsi, 1
 20413 0000E9A9 740E                    	je .L_lambda_opt_params_end_0013
 20414 0000E9AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20415 0000E9B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20416 0000E9B4 48FFC6                  	inc rsi
 20417 0000E9B7 EBEC                    	jmp .L_lambda_opt_params_loop_0013
 20418                                  .L_lambda_opt_params_end_0013:
 20419 0000E9B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20420 0000E9BC 4889C3                  	mov rbx, rax
 20421 0000E9BF 58                      	pop rax
 20422 0000E9C0 C60004                  	mov byte [rax], T_closure
 20423 0000E9C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20424 0000E9C7 48C74009[D4E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 20425 0000E9CF E95E010000              	jmp .L_lambda_opt_end_0013
 20426                                  .L_lambda_opt_code_0013:
 20427 0000E9D4 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 20428 0000E9D9 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 20429 0000E9DD 7407                    	je .L_lambda_opt_arity_check_exact_0013	; Jump if arity matches
 20430 0000E9DF 7F4C                    	jg .L_lambda_opt_arity_check_more_0013	; Jump if more arguments passed
 20431 0000E9E1 E909650000              	jmp L_error_incorrect_arity_opt
 20432                                  .L_lambda_opt_arity_check_exact_0013:
 20433 0000E9E6 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 20434 0000E9E9 4983C603                	add r14, 3 ; add 3 first stack values
 20435 0000E9ED 41BF00000000            	mov r15, 0 ; r15 = index
 20436 0000E9F3 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 20437 0000E9F7 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 20438 0000E9FF EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 20439                                  .L_lambda_opt_stack_shrink_loop_0013:
 20440 0000EA01 4983FE00                	cmp r14, 0
 20441 0000EA05 7E11                    	jle .L_make_lambda_opt_exact_finish_0013
 20442 0000EA07 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 20443 0000EA0C 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 20444 0000EA10 49FFCE                  	dec r14 ; next loop value
 20445 0000EA13 49FFC7                  	inc r15 ; update i
 20446 0000EA16 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 20447                                  .L_make_lambda_opt_exact_finish_0013:
 20448 0000EA18 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 20449 0000EA20 49FFC2                  	inc r10
 20450 0000EA23 4C89542410              	mov qword [rsp + 8 * 2], r10
 20451 0000EA28 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0013
 20452                                  .L_lambda_opt_arity_check_more_0013:
 20453 0000EA2D 4D89D6                  	mov r14, r10 ; r14 = num args
 20454 0000EA30 4D89D7                  	mov r15, r10 ; r15 = num args
 20455 0000EA33 41B901000000            	mov r9, 1; r9 = number of params 
 20456 0000EA39 4D29CE                  	sub r14, r9 ; r14 = extra args
 20457 0000EA3C 4D01F1                  	add r9, r14 ; r9 = num args
 20458 0000EA3F 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 20458 0000EA41 [0100000000000000] 
 20459 0000EA49 EB00                    	jmp .L_make_lambda_opt_arg_list_0013
 20460                                  .L_make_lambda_opt_arg_list_0013:
 20461 0000EA4B 4983FE00                	cmp r14, 0
 20462 0000EA4F 7E25                    	jle .L_make_lambda_opt_stack_fixed_0013
 20463 0000EA51 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 20464 0000EA56 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 20465 0000EA5B E8C2640000              	call malloc                         ; Allocate memory, result in rax
 20466 0000EA60 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 20467 0000EA63 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 20468 0000EA67 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 20469 0000EA6B 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 20470 0000EA6E 49FFC9                  	dec r9                              ; args index minus 1
 20471 0000EA71 49FFCE                  	dec r14                             ; next iteration
 20472 0000EA74 EBD5                    	jmp .L_make_lambda_opt_arg_list_0013
 20473                                  .L_make_lambda_opt_stack_fixed_0013:
 20474 0000EA76 4D89FE                  	mov r14, r15 ; r14 = num args
 20475 0000EA79 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 20476 0000EA7C 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 20477 0000EA80 41BA01000000            	mov r10, 1; r10 = num of params
 20478 0000EA86 4D29D6                  	sub r14, r10 ; r14 = extra args
 20479 0000EA89 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 20480 0000EA8C 49FFCE                  	dec r14 ; how much we need to change stack wise?
 20481 0000EA8F 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 20482 0000EA94 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0013
 20483                                  .L_lambda_opt_stack_shrink_loop_more_0013:
 20484 0000EA96 4983F800                	cmp r8, 0
 20485 0000EA9A 7E15                    	jle .L_make_lambda_opt_more_finish_0013
 20486 0000EA9C 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 20487 0000EAA0 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 20488 0000EAA4 4D8D26                  	lea r12, [r14]
 20489 0000EAA7 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 20490 0000EAAC 49FFC8                  	dec r8 ; next iteration
 20491 0000EAAF EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0013
 20492                                  .L_make_lambda_opt_more_finish_0013:
 20493 0000EAB1 4D89F8                  	mov r8, r15 ; num of args
 20494 0000EAB4 41BA01000000            	mov r10, 1
 20495 0000EABA 4D29D0                  	sub r8, r10 ; num of new args
 20496 0000EABD 49FFC0                  	inc r8
 20497 0000EAC0 4C89442420              	mov qword [rsp + 8 * 4], r8
 20498 0000EAC5 4883C410                	add rsp, 8 * 2  ; 
 20499 0000EAC9 EB00                    	jmp .L_lambda_opt_stack_adjusted_0013
 20500                                  .L_lambda_opt_stack_adjusted_0013:
 20501 0000EACB C8000000                	enter 0, 0
 20502                                  	; Initiating tail-call optimization
 20503 0000EACF 488B4528                	mov rax, PARAM(1)	; param strs
 20504 0000EAD3 50                      	push rax
 20505 0000EAD4 488B4520                	mov rax, PARAM(0)	; param str
 20506 0000EAD8 50                      	push rax
 20507 0000EAD9 6A02                    	push 2	; Number of arguments
 20508 0000EADB 488B4510                	mov rax, ENV
 20509 0000EADF 488B00                  	mov rax, qword [rax + 8 * 0]
 20510 0000EAE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20511 0000EAE5 488B00                  	mov rax, qword [rax]
 20512 0000EAE8 803804                  	cmp byte [rax], T_closure
 20513 0000EAEB 0F8588630000            	jne L_error_non_closure
 20514 0000EAF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20515                                  
 20516                                  	; Reclaiming the current stack frame
 20517 0000EAF4 FF7508                  	push qword [rbp + 8]
 20518 0000EAF7 FF7500                  	push qword [rbp]
 20519 0000EAFA 41BA06000000            	mov r10, 2 + 4
 20520 0000EB00 4C8B4518                	mov r8, COUNT
 20521 0000EB04 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20522 0000EB09 4C8D4DF8                	lea r9, [rbp - 8]
 20523                                  .L_tc_recycle_frame_loop_00ad:
 20524 0000EB0D 4983FA00                	cmp r10, 0
 20525 0000EB11 7413                    	je .L_tc_recycle_frame_done_00ad
 20526 0000EB13 4D8B19                  	mov r11, qword [r9]
 20527 0000EB16 4D8918                  	mov qword [r8], r11
 20528 0000EB19 49FFCA                  	dec r10
 20529 0000EB1C 4983E808                	sub r8, 8
 20530 0000EB20 4983E908                	sub r9, 8
 20531 0000EB24 EBE7                    	jmp .L_tc_recycle_frame_loop_00ad
 20532                                  .L_tc_recycle_frame_done_00ad:
 20533 0000EB26 498D6008                	lea rsp, [r8 + 8]
 20534 0000EB2A 5D                      	pop rbp
 20535 0000EB2B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20536 0000EB2E C9                      	leave
 20537 0000EB2F C22000                  	ret AND_KILL_FRAME(2)
 20538                                  .L_lambda_opt_end_0013:	; new closure is in rax
 20539 0000EB32 C9                      	leave
 20540 0000EB33 C21800                  	ret AND_KILL_FRAME(1)
 20541                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20542 0000EB36 803804                  	cmp byte [rax], T_closure
 20543 0000EB39 0F853A630000            	jne L_error_non_closure
 20544 0000EB3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20545                                  
 20546                                  	; Reclaiming the current stack frame
 20547 0000EB42 FF7508                  	push qword [rbp + 8]
 20548 0000EB45 FF7500                  	push qword [rbp]
 20549 0000EB48 41BA05000000            	mov r10, 1 + 4
 20550 0000EB4E 4C8B4518                	mov r8, COUNT
 20551 0000EB52 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20552 0000EB57 4C8D4DF8                	lea r9, [rbp - 8]
 20553                                  .L_tc_recycle_frame_loop_00ae:
 20554 0000EB5B 4983FA00                	cmp r10, 0
 20555 0000EB5F 7413                    	je .L_tc_recycle_frame_done_00ae
 20556 0000EB61 4D8B19                  	mov r11, qword [r9]
 20557 0000EB64 4D8918                  	mov qword [r8], r11
 20558 0000EB67 49FFCA                  	dec r10
 20559 0000EB6A 4983E808                	sub r8, 8
 20560 0000EB6E 4983E908                	sub r9, 8
 20561 0000EB72 EBE7                    	jmp .L_tc_recycle_frame_loop_00ae
 20562                                  .L_tc_recycle_frame_done_00ae:
 20563 0000EB74 498D6008                	lea rsp, [r8 + 8]
 20564 0000EB78 5D                      	pop rbp
 20565 0000EB79 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20566 0000EB7C C9                      	leave
 20567 0000EB7D C21800                  	ret AND_KILL_FRAME(1)
 20568                                  .L_lambda_simple_end_007a:	; new closure is in rax
 20569 0000EB80 803804                  	cmp byte [rax], T_closure
 20570 0000EB83 0F85F0620000            	jne L_error_non_closure
 20571 0000EB89 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20572 0000EB8C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20573 0000EB8F C9                      	leave
 20574 0000EB90 C21800                  	ret AND_KILL_FRAME(1)
 20575                                  .L_lambda_simple_end_0076:	; new closure is in rax
 20576 0000EB93 803804                  	cmp byte [rax], T_closure
 20577 0000EB96 0F85DD620000            	jne L_error_non_closure
 20578 0000EB9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20579                                  
 20580                                  	; Reclaiming the current stack frame
 20581 0000EB9F FF7508                  	push qword [rbp + 8]
 20582 0000EBA2 FF7500                  	push qword [rbp]
 20583 0000EBA5 41BA05000000            	mov r10, 1 + 4
 20584 0000EBAB 4C8B4518                	mov r8, COUNT
 20585 0000EBAF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20586 0000EBB4 4C8D4DF8                	lea r9, [rbp - 8]
 20587                                  .L_tc_recycle_frame_loop_00af:
 20588 0000EBB8 4983FA00                	cmp r10, 0
 20589 0000EBBC 7413                    	je .L_tc_recycle_frame_done_00af
 20590 0000EBBE 4D8B19                  	mov r11, qword [r9]
 20591 0000EBC1 4D8918                  	mov qword [r8], r11
 20592 0000EBC4 49FFCA                  	dec r10
 20593 0000EBC7 4983E808                	sub r8, 8
 20594 0000EBCB 4983E908                	sub r9, 8
 20595 0000EBCF EBE7                    	jmp .L_tc_recycle_frame_loop_00af
 20596                                  .L_tc_recycle_frame_done_00af:
 20597 0000EBD1 498D6008                	lea rsp, [r8 + 8]
 20598 0000EBD5 5D                      	pop rbp
 20599 0000EBD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20600 0000EBD9 C9                      	leave
 20601 0000EBDA C21800                  	ret AND_KILL_FRAME(1)
 20602                                  .L_lambda_simple_end_0075:	; new closure is in rax
 20603 0000EBDD 50                      	push rax
 20604 0000EBDE 6A01                    	push 1	; arg count
 20605 0000EBE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20606 0000EBE5 E838630000              	call malloc
 20607 0000EBEA 50                      	push rax
 20608 0000EBEB BF00000000              	mov rdi, 8 * 0	; new rib
 20609 0000EBF0 E82D630000              	call malloc
 20610 0000EBF5 50                      	push rax
 20611 0000EBF6 BF08000000              	mov rdi, 8 * 1	; extended env
 20612 0000EBFB E822630000              	call malloc
 20613 0000EC00 488B7D10                	mov rdi, ENV
 20614 0000EC04 BE00000000              	mov rsi, 0
 20615 0000EC09 BA01000000              	mov rdx, 1
 20616                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 20617 0000EC0E 4883FE00                	cmp rsi, 0
 20618 0000EC12 7410                    	je .L_lambda_simple_env_end_007d
 20619 0000EC14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20620 0000EC18 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20621 0000EC1C 48FFC6                  	inc rsi
 20622 0000EC1F 48FFC2                  	inc rdx
 20623 0000EC22 EBEA                    	jmp .L_lambda_simple_env_loop_007d
 20624                                  .L_lambda_simple_env_end_007d:
 20625 0000EC24 5B                      	pop rbx
 20626 0000EC25 BE00000000              	mov rsi, 0
 20627                                  .L_lambda_simple_params_loop_007d:	; copy params
 20628 0000EC2A 4883FE00                	cmp rsi, 0
 20629 0000EC2E 740E                    	je .L_lambda_simple_params_end_007d
 20630 0000EC30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20631 0000EC35 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20632 0000EC39 48FFC6                  	inc rsi
 20633 0000EC3C EBEC                    	jmp .L_lambda_simple_params_loop_007d
 20634                                  .L_lambda_simple_params_end_007d:
 20635 0000EC3E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20636 0000EC41 4889C3                  	mov rbx, rax
 20637 0000EC44 58                      	pop rax
 20638 0000EC45 C60004                  	mov byte [rax], T_closure
 20639 0000EC48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20640 0000EC4C 48C74009[59EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 20641 0000EC54 E98D000000              	jmp .L_lambda_simple_end_007d
 20642                                  .L_lambda_simple_code_007d:	; lambda-simple body
 20643 0000EC59 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20644 0000EC5F 740B                    	je .L_lambda_simple_arity_check_ok_007d
 20645 0000EC61 FF742410                	push qword [rsp + 8 * 2]
 20646 0000EC65 6A01                    	push 1
 20647 0000EC67 E96F620000              	jmp L_error_incorrect_arity_simple
 20648                                  .L_lambda_simple_arity_check_ok_007d:
 20649 0000EC6C C8000000                	enter 0, 0
 20650                                  	; preparing a non-tail-call
 20651 0000EC70 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 20652 0000EC78 803805                  	cmp byte [rax], T_undefined
 20653 0000EC7B 0F8474610000            	je L_error_fvar_undefined
 20654 0000EC81 50                      	push rax
 20655 0000EC82 6A01                    	push 1	; arg count
 20656 0000EC84 488B4520                	mov rax, PARAM(0)	; param make-string=?
 20657 0000EC88 803804                  	cmp byte [rax], T_closure
 20658 0000EC8B 0F85E8610000            	jne L_error_non_closure
 20659 0000EC91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20660 0000EC94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20661 0000EC97 48890425[BC160000]      	mov qword [free_var_135], rax
 20662 0000EC9F 48B8-                   	mov rax, sob_void
 20662 0000ECA1 [0000000000000000] 
 20663                                  
 20664                                  	; preparing a non-tail-call
 20665 0000ECA9 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20666 0000ECB1 803805                  	cmp byte [rax], T_undefined
 20667 0000ECB4 0F843B610000            	je L_error_fvar_undefined
 20668 0000ECBA 50                      	push rax
 20669 0000ECBB 6A01                    	push 1	; arg count
 20670 0000ECBD 488B4520                	mov rax, PARAM(0)	; param make-string=?
 20671 0000ECC1 803804                  	cmp byte [rax], T_closure
 20672 0000ECC4 0F85AF610000            	jne L_error_non_closure
 20673 0000ECCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20674 0000ECCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 20675 0000ECD0 48890425[F0150000]      	mov qword [free_var_123], rax
 20676 0000ECD8 48B8-                   	mov rax, sob_void
 20676 0000ECDA [0000000000000000] 
 20677 0000ECE2 C9                      	leave
 20678 0000ECE3 C21800                  	ret AND_KILL_FRAME(1)
 20679                                  .L_lambda_simple_end_007d:	; new closure is in rax
 20680 0000ECE6 803804                  	cmp byte [rax], T_closure
 20681 0000ECE9 0F858A610000            	jne L_error_non_closure
 20682 0000ECEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20683 0000ECF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20684                                  
 20685 0000ECF5 4889C7                  	mov rdi, rax
 20686 0000ECF8 E87A640000              	call print_sexpr_if_not_void
 20687 0000ECFD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20688 0000ED02 E81B620000              	call malloc
 20689 0000ED07 50                      	push rax
 20690 0000ED08 BF00000000              	mov rdi, 8 * 0	; new rib
 20691 0000ED0D E810620000              	call malloc
 20692 0000ED12 50                      	push rax
 20693 0000ED13 BF08000000              	mov rdi, 8 * 1	; extended env
 20694 0000ED18 E805620000              	call malloc
 20695 0000ED1D 488B7D10                	mov rdi, ENV
 20696 0000ED21 BE00000000              	mov rsi, 0
 20697 0000ED26 BA01000000              	mov rdx, 1
 20698                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 20699 0000ED2B 4883FE00                	cmp rsi, 0
 20700 0000ED2F 7410                    	je .L_lambda_simple_env_end_007e
 20701 0000ED31 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20702 0000ED35 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20703 0000ED39 48FFC6                  	inc rsi
 20704 0000ED3C 48FFC2                  	inc rdx
 20705 0000ED3F EBEA                    	jmp .L_lambda_simple_env_loop_007e
 20706                                  .L_lambda_simple_env_end_007e:
 20707 0000ED41 5B                      	pop rbx
 20708 0000ED42 BE00000000              	mov rsi, 0
 20709                                  .L_lambda_simple_params_loop_007e:	; copy params
 20710 0000ED47 4883FE00                	cmp rsi, 0
 20711 0000ED4B 740E                    	je .L_lambda_simple_params_end_007e
 20712 0000ED4D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20713 0000ED52 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20714 0000ED56 48FFC6                  	inc rsi
 20715 0000ED59 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 20716                                  .L_lambda_simple_params_end_007e:
 20717 0000ED5B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20718 0000ED5E 4889C3                  	mov rbx, rax
 20719 0000ED61 58                      	pop rax
 20720 0000ED62 C60004                  	mov byte [rax], T_closure
 20721 0000ED65 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20722 0000ED69 48C74009[76ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 20723 0000ED71 E90E010000              	jmp .L_lambda_simple_end_007e
 20724                                  .L_lambda_simple_code_007e:	; lambda-simple body
 20725 0000ED76 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20726 0000ED7C 740B                    	je .L_lambda_simple_arity_check_ok_007e
 20727 0000ED7E FF742410                	push qword [rsp + 8 * 2]
 20728 0000ED82 6A01                    	push 1
 20729 0000ED84 E952610000              	jmp L_error_incorrect_arity_simple
 20730                                  .L_lambda_simple_arity_check_ok_007e:
 20731 0000ED89 C8000000                	enter 0, 0
 20732                                  	; preparing a non-tail-call
 20733 0000ED8D 488B4520                	mov rax, PARAM(0)	; param e
 20734 0000ED91 50                      	push rax
 20735 0000ED92 6A01                    	push 1	; arg count
 20736 0000ED94 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20737 0000ED9C 803805                  	cmp byte [rax], T_undefined
 20738 0000ED9F 0F8450600000            	je L_error_fvar_undefined
 20739 0000EDA5 803804                  	cmp byte [rax], T_closure
 20740 0000EDA8 0F85CB600000            	jne L_error_non_closure
 20741 0000EDAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20742 0000EDB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20743 0000EDB4 483D[02000000]          	cmp rax, sob_boolean_false
 20744 0000EDBA 0F85C0000000            	jne .L_or_end_000e
 20745                                  
 20746                                  	; preparing a non-tail-call
 20747 0000EDC0 488B4520                	mov rax, PARAM(0)	; param e
 20748 0000EDC4 50                      	push rax
 20749 0000EDC5 6A01                    	push 1	; arg count
 20750 0000EDC7 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 20751 0000EDCF 803805                  	cmp byte [rax], T_undefined
 20752 0000EDD2 0F841D600000            	je L_error_fvar_undefined
 20753 0000EDD8 803804                  	cmp byte [rax], T_closure
 20754 0000EDDB 0F8598600000            	jne L_error_non_closure
 20755 0000EDE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20756 0000EDE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20757 0000EDE7 483D[02000000]          	cmp rax, sob_boolean_false
 20758 0000EDED 0F8483000000            	je .L_if_else_0060
 20759                                  	; Initiating tail-call optimization
 20760                                  	; preparing a non-tail-call
 20761 0000EDF3 488B4520                	mov rax, PARAM(0)	; param e
 20762 0000EDF7 50                      	push rax
 20763 0000EDF8 6A01                    	push 1	; arg count
 20764 0000EDFA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20765 0000EE02 803805                  	cmp byte [rax], T_undefined
 20766 0000EE05 0F84EA5F0000            	je L_error_fvar_undefined
 20767 0000EE0B 803804                  	cmp byte [rax], T_closure
 20768 0000EE0E 0F8565600000            	jne L_error_non_closure
 20769 0000EE14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20770 0000EE17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20771 0000EE1A 50                      	push rax
 20772 0000EE1B 6A01                    	push 1	; Number of arguments
 20773 0000EE1D 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
 20774 0000EE25 803805                  	cmp byte [rax], T_undefined
 20775 0000EE28 0F84C75F0000            	je L_error_fvar_undefined
 20776 0000EE2E 803804                  	cmp byte [rax], T_closure
 20777 0000EE31 0F8542600000            	jne L_error_non_closure
 20778 0000EE37 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20779                                  
 20780                                  	; Reclaiming the current stack frame
 20781 0000EE3A FF7508                  	push qword [rbp + 8]
 20782 0000EE3D FF7500                  	push qword [rbp]
 20783 0000EE40 41BA05000000            	mov r10, 1 + 4
 20784 0000EE46 4C8B4518                	mov r8, COUNT
 20785 0000EE4A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20786 0000EE4F 4C8D4DF8                	lea r9, [rbp - 8]
 20787                                  .L_tc_recycle_frame_loop_00b0:
 20788 0000EE53 4983FA00                	cmp r10, 0
 20789 0000EE57 7413                    	je .L_tc_recycle_frame_done_00b0
 20790 0000EE59 4D8B19                  	mov r11, qword [r9]
 20791 0000EE5C 4D8918                  	mov qword [r8], r11
 20792 0000EE5F 49FFCA                  	dec r10
 20793 0000EE62 4983E808                	sub r8, 8
 20794 0000EE66 4983E908                	sub r9, 8
 20795 0000EE6A EBE7                    	jmp .L_tc_recycle_frame_loop_00b0
 20796                                  .L_tc_recycle_frame_done_00b0:
 20797 0000EE6C 498D6008                	lea rsp, [r8 + 8]
 20798 0000EE70 5D                      	pop rbp
 20799 0000EE71 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20800 0000EE74 EB0A                    	jmp .L_if_end_0060
 20801                                  .L_if_else_0060:
 20802 0000EE76 48B8-                   	mov rax, L_constants + 2
 20802 0000EE78 [0200000000000000] 
 20803                                  .L_if_end_0060:
 20804                                  .L_or_end_000e:
 20805 0000EE80 C9                      	leave
 20806 0000EE81 C21800                  	ret AND_KILL_FRAME(1)
 20807                                  .L_lambda_simple_end_007e:	; new closure is in rax
 20808 0000EE84 48890425[25140000]      	mov qword [free_var_96], rax
 20809 0000EE8C 48B8-                   	mov rax, sob_void
 20809 0000EE8E [0000000000000000] 
 20810                                  
 20811 0000EE96 4889C7                  	mov rdi, rax
 20812 0000EE99 E8D9620000              	call print_sexpr_if_not_void
 20813                                  	; preparing a non-tail-call
 20814 0000EE9E 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 20815 0000EEA6 803805                  	cmp byte [rax], T_undefined
 20816 0000EEA9 0F84465F0000            	je L_error_fvar_undefined
 20817 0000EEAF 50                      	push rax
 20818 0000EEB0 6A01                    	push 1	; arg count
 20819 0000EEB2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20820 0000EEB7 E866600000              	call malloc
 20821 0000EEBC 50                      	push rax
 20822 0000EEBD BF00000000              	mov rdi, 8 * 0	; new rib
 20823 0000EEC2 E85B600000              	call malloc
 20824 0000EEC7 50                      	push rax
 20825 0000EEC8 BF08000000              	mov rdi, 8 * 1	; extended env
 20826 0000EECD E850600000              	call malloc
 20827 0000EED2 488B7D10                	mov rdi, ENV
 20828 0000EED6 BE00000000              	mov rsi, 0
 20829 0000EEDB BA01000000              	mov rdx, 1
 20830                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 20831 0000EEE0 4883FE00                	cmp rsi, 0
 20832 0000EEE4 7410                    	je .L_lambda_simple_env_end_007f
 20833 0000EEE6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20834 0000EEEA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20835 0000EEEE 48FFC6                  	inc rsi
 20836 0000EEF1 48FFC2                  	inc rdx
 20837 0000EEF4 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 20838                                  .L_lambda_simple_env_end_007f:
 20839 0000EEF6 5B                      	pop rbx
 20840 0000EEF7 BE00000000              	mov rsi, 0
 20841                                  .L_lambda_simple_params_loop_007f:	; copy params
 20842 0000EEFC 4883FE00                	cmp rsi, 0
 20843 0000EF00 740E                    	je .L_lambda_simple_params_end_007f
 20844 0000EF02 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20845 0000EF07 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20846 0000EF0B 48FFC6                  	inc rsi
 20847 0000EF0E EBEC                    	jmp .L_lambda_simple_params_loop_007f
 20848                                  .L_lambda_simple_params_end_007f:
 20849 0000EF10 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20850 0000EF13 4889C3                  	mov rbx, rax
 20851 0000EF16 58                      	pop rax
 20852 0000EF17 C60004                  	mov byte [rax], T_closure
 20853 0000EF1A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20854 0000EF1E 48C74009[2BEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 20855 0000EF26 E9FF030000              	jmp .L_lambda_simple_end_007f
 20856                                  .L_lambda_simple_code_007f:	; lambda-simple body
 20857 0000EF2B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20858 0000EF31 740B                    	je .L_lambda_simple_arity_check_ok_007f
 20859 0000EF33 FF742410                	push qword [rsp + 8 * 2]
 20860 0000EF37 6A01                    	push 1
 20861 0000EF39 E99D5F0000              	jmp L_error_incorrect_arity_simple
 20862                                  .L_lambda_simple_arity_check_ok_007f:
 20863 0000EF3E C8000000                	enter 0, 0
 20864 0000EF42 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20865 0000EF47 E8D65F0000              	call malloc
 20866 0000EF4C 50                      	push rax
 20867 0000EF4D BF08000000              	mov rdi, 8 * 1	; new rib
 20868 0000EF52 E8CB5F0000              	call malloc
 20869 0000EF57 50                      	push rax
 20870 0000EF58 BF10000000              	mov rdi, 8 * 2	; extended env
 20871 0000EF5D E8C05F0000              	call malloc
 20872 0000EF62 488B7D10                	mov rdi, ENV
 20873 0000EF66 BE00000000              	mov rsi, 0
 20874 0000EF6B BA01000000              	mov rdx, 1
 20875                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 20876 0000EF70 4883FE01                	cmp rsi, 1
 20877 0000EF74 7410                    	je .L_lambda_opt_env_end_0014
 20878 0000EF76 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20879 0000EF7A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20880 0000EF7E 48FFC6                  	inc rsi
 20881 0000EF81 48FFC2                  	inc rdx
 20882 0000EF84 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 20883                                  .L_lambda_opt_env_end_0014:
 20884 0000EF86 5B                      	pop rbx
 20885 0000EF87 BE00000000              	mov rsi, 0
 20886                                  .L_lambda_opt_params_loop_0014:	; copy params
 20887 0000EF8C 4883FE01                	cmp rsi, 1
 20888 0000EF90 740E                    	je .L_lambda_opt_params_end_0014
 20889 0000EF92 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20890 0000EF97 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20891 0000EF9B 48FFC6                  	inc rsi
 20892 0000EF9E EBEC                    	jmp .L_lambda_opt_params_loop_0014
 20893                                  .L_lambda_opt_params_end_0014:
 20894 0000EFA0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20895 0000EFA3 4889C3                  	mov rbx, rax
 20896 0000EFA6 58                      	pop rax
 20897 0000EFA7 C60004                  	mov byte [rax], T_closure
 20898 0000EFAA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20899 0000EFAE 48C74009[BBEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 20900 0000EFB6 E96B030000              	jmp .L_lambda_opt_end_0014
 20901                                  .L_lambda_opt_code_0014:
 20902 0000EFBB 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 20903 0000EFC0 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 20904 0000EFC4 7407                    	je .L_lambda_opt_arity_check_exact_0014	; Jump if arity matches
 20905 0000EFC6 7F4C                    	jg .L_lambda_opt_arity_check_more_0014	; Jump if more arguments passed
 20906 0000EFC8 E9225F0000              	jmp L_error_incorrect_arity_opt
 20907                                  .L_lambda_opt_arity_check_exact_0014:
 20908 0000EFCD 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 20909 0000EFD0 4983C603                	add r14, 3 ; add 3 first stack values
 20910 0000EFD4 41BF00000000            	mov r15, 0 ; r15 = index
 20911 0000EFDA 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 20912 0000EFDE 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 20913 0000EFE6 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 20914                                  .L_lambda_opt_stack_shrink_loop_0014:
 20915 0000EFE8 4983FE00                	cmp r14, 0
 20916 0000EFEC 7E11                    	jle .L_make_lambda_opt_exact_finish_0014
 20917 0000EFEE 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 20918 0000EFF3 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 20919 0000EFF7 49FFCE                  	dec r14 ; next loop value
 20920 0000EFFA 49FFC7                  	inc r15 ; update i
 20921 0000EFFD EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 20922                                  .L_make_lambda_opt_exact_finish_0014:
 20923 0000EFFF 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 20924 0000F007 49FFC2                  	inc r10
 20925 0000F00A 4C89542410              	mov qword [rsp + 8 * 2], r10
 20926 0000F00F E99E000000              	jmp .L_lambda_opt_stack_adjusted_0014
 20927                                  .L_lambda_opt_arity_check_more_0014:
 20928 0000F014 4D89D6                  	mov r14, r10 ; r14 = num args
 20929 0000F017 4D89D7                  	mov r15, r10 ; r15 = num args
 20930 0000F01A 41B901000000            	mov r9, 1; r9 = number of params 
 20931 0000F020 4D29CE                  	sub r14, r9 ; r14 = extra args
 20932 0000F023 4D01F1                  	add r9, r14 ; r9 = num args
 20933 0000F026 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 20933 0000F028 [0100000000000000] 
 20934 0000F030 EB00                    	jmp .L_make_lambda_opt_arg_list_0014
 20935                                  .L_make_lambda_opt_arg_list_0014:
 20936 0000F032 4983FE00                	cmp r14, 0
 20937 0000F036 7E25                    	jle .L_make_lambda_opt_stack_fixed_0014
 20938 0000F038 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 20939 0000F03D BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 20940 0000F042 E8DB5E0000              	call malloc                         ; Allocate memory, result in rax
 20941 0000F047 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 20942 0000F04A 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 20943 0000F04E 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 20944 0000F052 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 20945 0000F055 49FFC9                  	dec r9                              ; args index minus 1
 20946 0000F058 49FFCE                  	dec r14                             ; next iteration
 20947 0000F05B EBD5                    	jmp .L_make_lambda_opt_arg_list_0014
 20948                                  .L_make_lambda_opt_stack_fixed_0014:
 20949 0000F05D 4D89FE                  	mov r14, r15 ; r14 = num args
 20950 0000F060 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 20951 0000F063 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 20952 0000F067 41BA01000000            	mov r10, 1; r10 = num of params
 20953 0000F06D 4D29D6                  	sub r14, r10 ; r14 = extra args
 20954 0000F070 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 20955 0000F073 49FFCE                  	dec r14 ; how much we need to change stack wise?
 20956 0000F076 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 20957 0000F07B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0014
 20958                                  .L_lambda_opt_stack_shrink_loop_more_0014:
 20959 0000F07D 4983F800                	cmp r8, 0
 20960 0000F081 7E15                    	jle .L_make_lambda_opt_more_finish_0014
 20961 0000F083 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 20962 0000F087 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 20963 0000F08B 4D8D26                  	lea r12, [r14]
 20964 0000F08E 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 20965 0000F093 49FFC8                  	dec r8 ; next iteration
 20966 0000F096 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0014
 20967                                  .L_make_lambda_opt_more_finish_0014:
 20968 0000F098 4D89F8                  	mov r8, r15 ; num of args
 20969 0000F09B 41BA01000000            	mov r10, 1
 20970 0000F0A1 4D29D0                  	sub r8, r10 ; num of new args
 20971 0000F0A4 49FFC0                  	inc r8
 20972 0000F0A7 4C89442420              	mov qword [rsp + 8 * 4], r8
 20973 0000F0AC 4883C410                	add rsp, 8 * 2  ; 
 20974 0000F0B0 EB00                    	jmp .L_lambda_opt_stack_adjusted_0014
 20975                                  .L_lambda_opt_stack_adjusted_0014:
 20976 0000F0B2 C8000000                	enter 0, 0
 20977                                  	; Initiating tail-call optimization
 20978                                  	; preparing a non-tail-call
 20979 0000F0B6 488B4528                	mov rax, PARAM(1)	; param xs
 20980 0000F0BA 50                      	push rax
 20981 0000F0BB 6A01                    	push 1	; arg count
 20982 0000F0BD 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20983 0000F0C5 803805                  	cmp byte [rax], T_undefined
 20984 0000F0C8 0F84275D0000            	je L_error_fvar_undefined
 20985 0000F0CE 803804                  	cmp byte [rax], T_closure
 20986 0000F0D1 0F85A25D0000            	jne L_error_non_closure
 20987 0000F0D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20988 0000F0DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20989 0000F0DD 483D[02000000]          	cmp rax, sob_boolean_false
 20990 0000F0E3 740F                    	je .L_if_else_0063
 20991 0000F0E5 48B8-                   	mov rax, L_constants + 0
 20991 0000F0E7 [0000000000000000] 
 20992 0000F0EF E9EE000000              	jmp .L_if_end_0063
 20993                                  .L_if_else_0063:
 20994                                  	; preparing a non-tail-call
 20995 0000F0F4 488B4528                	mov rax, PARAM(1)	; param xs
 20996 0000F0F8 50                      	push rax
 20997 0000F0F9 6A01                    	push 1	; arg count
 20998 0000F0FB 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 20999 0000F103 803805                  	cmp byte [rax], T_undefined
 21000 0000F106 0F84E95C0000            	je L_error_fvar_undefined
 21001 0000F10C 803804                  	cmp byte [rax], T_closure
 21002 0000F10F 0F85645D0000            	jne L_error_non_closure
 21003 0000F115 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21004 0000F118 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21005 0000F11B 483D[02000000]          	cmp rax, sob_boolean_false
 21006 0000F121 744C                    	je .L_if_else_0061
 21007                                  	; preparing a non-tail-call
 21008                                  	; preparing a non-tail-call
 21009 0000F123 488B4528                	mov rax, PARAM(1)	; param xs
 21010 0000F127 50                      	push rax
 21011 0000F128 6A01                    	push 1	; arg count
 21012 0000F12A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21013 0000F132 803805                  	cmp byte [rax], T_undefined
 21014 0000F135 0F84BA5C0000            	je L_error_fvar_undefined
 21015 0000F13B 803804                  	cmp byte [rax], T_closure
 21016 0000F13E 0F85355D0000            	jne L_error_non_closure
 21017 0000F144 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21018 0000F147 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21019 0000F14A 50                      	push rax
 21020 0000F14B 6A01                    	push 1	; arg count
 21021 0000F14D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21022 0000F155 803805                  	cmp byte [rax], T_undefined
 21023 0000F158 0F84975C0000            	je L_error_fvar_undefined
 21024 0000F15E 803804                  	cmp byte [rax], T_closure
 21025 0000F161 0F85125D0000            	jne L_error_non_closure
 21026 0000F167 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21027 0000F16A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21028 0000F16D EB0A                    	jmp .L_if_end_0061
 21029                                  .L_if_else_0061:
 21030 0000F16F 48B8-                   	mov rax, L_constants + 2
 21030 0000F171 [0200000000000000] 
 21031                                  .L_if_end_0061:
 21032 0000F179 483D[02000000]          	cmp rax, sob_boolean_false
 21033 0000F17F 7429                    	je .L_if_else_0062
 21034                                  	; preparing a non-tail-call
 21035 0000F181 488B4528                	mov rax, PARAM(1)	; param xs
 21036 0000F185 50                      	push rax
 21037 0000F186 6A01                    	push 1	; arg count
 21038 0000F188 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21039 0000F190 803805                  	cmp byte [rax], T_undefined
 21040 0000F193 0F845C5C0000            	je L_error_fvar_undefined
 21041 0000F199 803804                  	cmp byte [rax], T_closure
 21042 0000F19C 0F85D75C0000            	jne L_error_non_closure
 21043 0000F1A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21044 0000F1A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21045 0000F1A8 EB38                    	jmp .L_if_end_0062
 21046                                  .L_if_else_0062:
 21047                                  	; preparing a non-tail-call
 21048 0000F1AA 48B8-                   	mov rax, L_constants + 2955
 21048 0000F1AC [8B0B000000000000] 
 21049 0000F1B4 50                      	push rax
 21050 0000F1B5 48B8-                   	mov rax, L_constants + 2946
 21050 0000F1B7 [820B000000000000] 
 21051 0000F1BF 50                      	push rax
 21052 0000F1C0 6A02                    	push 2	; arg count
 21053 0000F1C2 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21054 0000F1CA 803805                  	cmp byte [rax], T_undefined
 21055 0000F1CD 0F84225C0000            	je L_error_fvar_undefined
 21056 0000F1D3 803804                  	cmp byte [rax], T_closure
 21057 0000F1D6 0F859D5C0000            	jne L_error_non_closure
 21058 0000F1DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21059 0000F1DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21060                                  .L_if_end_0062:
 21061                                  .L_if_end_0063:
 21062 0000F1E2 50                      	push rax
 21063 0000F1E3 6A01                    	push 1	; Number of arguments
 21064 0000F1E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21065 0000F1EA E8335D0000              	call malloc
 21066 0000F1EF 50                      	push rax
 21067 0000F1F0 BF10000000              	mov rdi, 8 * 2	; new rib
 21068 0000F1F5 E8285D0000              	call malloc
 21069 0000F1FA 50                      	push rax
 21070 0000F1FB BF18000000              	mov rdi, 8 * 3	; extended env
 21071 0000F200 E81D5D0000              	call malloc
 21072 0000F205 488B7D10                	mov rdi, ENV
 21073 0000F209 BE00000000              	mov rsi, 0
 21074 0000F20E BA01000000              	mov rdx, 1
 21075                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 21076 0000F213 4883FE02                	cmp rsi, 2
 21077 0000F217 7410                    	je .L_lambda_simple_env_end_0080
 21078 0000F219 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21079 0000F21D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21080 0000F221 48FFC6                  	inc rsi
 21081 0000F224 48FFC2                  	inc rdx
 21082 0000F227 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 21083                                  .L_lambda_simple_env_end_0080:
 21084 0000F229 5B                      	pop rbx
 21085 0000F22A BE00000000              	mov rsi, 0
 21086                                  .L_lambda_simple_params_loop_0080:	; copy params
 21087 0000F22F 4883FE02                	cmp rsi, 2
 21088 0000F233 740E                    	je .L_lambda_simple_params_end_0080
 21089 0000F235 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21090 0000F23A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21091 0000F23E 48FFC6                  	inc rsi
 21092 0000F241 EBEC                    	jmp .L_lambda_simple_params_loop_0080
 21093                                  .L_lambda_simple_params_end_0080:
 21094 0000F243 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21095 0000F246 4889C3                  	mov rbx, rax
 21096 0000F249 58                      	pop rax
 21097 0000F24A C60004                  	mov byte [rax], T_closure
 21098 0000F24D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21099 0000F251 48C74009[5EF20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 21100 0000F259 E97E000000              	jmp .L_lambda_simple_end_0080
 21101                                  .L_lambda_simple_code_0080:	; lambda-simple body
 21102 0000F25E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21103 0000F264 740B                    	je .L_lambda_simple_arity_check_ok_0080
 21104 0000F266 FF742410                	push qword [rsp + 8 * 2]
 21105 0000F26A 6A01                    	push 1
 21106 0000F26C E96A5C0000              	jmp L_error_incorrect_arity_simple
 21107                                  .L_lambda_simple_arity_check_ok_0080:
 21108 0000F271 C8000000                	enter 0, 0
 21109                                  	; Initiating tail-call optimization
 21110 0000F275 488B4520                	mov rax, PARAM(0)	; param x
 21111 0000F279 50                      	push rax
 21112 0000F27A 488B4510                	mov rax, ENV
 21113 0000F27E 488B00                  	mov rax, qword [rax + 8 * 0]
 21114 0000F281 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21115 0000F284 50                      	push rax
 21116 0000F285 6A02                    	push 2	; Number of arguments
 21117 0000F287 488B4510                	mov rax, ENV
 21118 0000F28B 488B4008                	mov rax, qword [rax + 8 * 1]
 21119 0000F28F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21120 0000F292 803804                  	cmp byte [rax], T_closure
 21121 0000F295 0F85DE5B0000            	jne L_error_non_closure
 21122 0000F29B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21123                                  
 21124                                  	; Reclaiming the current stack frame
 21125 0000F29E FF7508                  	push qword [rbp + 8]
 21126 0000F2A1 FF7500                  	push qword [rbp]
 21127 0000F2A4 41BA06000000            	mov r10, 2 + 4
 21128 0000F2AA 4C8B4518                	mov r8, COUNT
 21129 0000F2AE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21130 0000F2B3 4C8D4DF8                	lea r9, [rbp - 8]
 21131                                  .L_tc_recycle_frame_loop_00b1:
 21132 0000F2B7 4983FA00                	cmp r10, 0
 21133 0000F2BB 7413                    	je .L_tc_recycle_frame_done_00b1
 21134 0000F2BD 4D8B19                  	mov r11, qword [r9]
 21135 0000F2C0 4D8918                  	mov qword [r8], r11
 21136 0000F2C3 49FFCA                  	dec r10
 21137 0000F2C6 4983E808                	sub r8, 8
 21138 0000F2CA 4983E908                	sub r9, 8
 21139 0000F2CE EBE7                    	jmp .L_tc_recycle_frame_loop_00b1
 21140                                  .L_tc_recycle_frame_done_00b1:
 21141 0000F2D0 498D6008                	lea rsp, [r8 + 8]
 21142 0000F2D4 5D                      	pop rbp
 21143 0000F2D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21144 0000F2D8 C9                      	leave
 21145 0000F2D9 C21800                  	ret AND_KILL_FRAME(1)
 21146                                  .L_lambda_simple_end_0080:	; new closure is in rax
 21147 0000F2DC 803804                  	cmp byte [rax], T_closure
 21148 0000F2DF 0F85945B0000            	jne L_error_non_closure
 21149 0000F2E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21150                                  
 21151                                  	; Reclaiming the current stack frame
 21152 0000F2E8 FF7508                  	push qword [rbp + 8]
 21153 0000F2EB FF7500                  	push qword [rbp]
 21154 0000F2EE 41BA05000000            	mov r10, 1 + 4
 21155 0000F2F4 4C8B4518                	mov r8, COUNT
 21156 0000F2F8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21157 0000F2FD 4C8D4DF8                	lea r9, [rbp - 8]
 21158                                  .L_tc_recycle_frame_loop_00b2:
 21159 0000F301 4983FA00                	cmp r10, 0
 21160 0000F305 7413                    	je .L_tc_recycle_frame_done_00b2
 21161 0000F307 4D8B19                  	mov r11, qword [r9]
 21162 0000F30A 4D8918                  	mov qword [r8], r11
 21163 0000F30D 49FFCA                  	dec r10
 21164 0000F310 4983E808                	sub r8, 8
 21165 0000F314 4983E908                	sub r9, 8
 21166 0000F318 EBE7                    	jmp .L_tc_recycle_frame_loop_00b2
 21167                                  .L_tc_recycle_frame_done_00b2:
 21168 0000F31A 498D6008                	lea rsp, [r8 + 8]
 21169 0000F31E 5D                      	pop rbp
 21170 0000F31F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21171 0000F322 C9                      	leave
 21172 0000F323 C22000                  	ret AND_KILL_FRAME(2)
 21173                                  .L_lambda_opt_end_0014:	; new closure is in rax
 21174 0000F326 C9                      	leave
 21175 0000F327 C21800                  	ret AND_KILL_FRAME(1)
 21176                                  .L_lambda_simple_end_007f:	; new closure is in rax
 21177 0000F32A 803804                  	cmp byte [rax], T_closure
 21178 0000F32D 0F85465B0000            	jne L_error_non_closure
 21179 0000F333 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21180 0000F336 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21181 0000F339 48890425[7A140000]      	mov qword [free_var_101], rax
 21182 0000F341 48B8-                   	mov rax, sob_void
 21182 0000F343 [0000000000000000] 
 21183                                  
 21184 0000F34B 4889C7                  	mov rdi, rax
 21185 0000F34E E8245E0000              	call print_sexpr_if_not_void
 21186                                  	; preparing a non-tail-call
 21187 0000F353 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 21188 0000F35B 803805                  	cmp byte [rax], T_undefined
 21189 0000F35E 0F84915A0000            	je L_error_fvar_undefined
 21190 0000F364 50                      	push rax
 21191 0000F365 6A01                    	push 1	; arg count
 21192 0000F367 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21193 0000F36C E8B15B0000              	call malloc
 21194 0000F371 50                      	push rax
 21195 0000F372 BF00000000              	mov rdi, 8 * 0	; new rib
 21196 0000F377 E8A65B0000              	call malloc
 21197 0000F37C 50                      	push rax
 21198 0000F37D BF08000000              	mov rdi, 8 * 1	; extended env
 21199 0000F382 E89B5B0000              	call malloc
 21200 0000F387 488B7D10                	mov rdi, ENV
 21201 0000F38B BE00000000              	mov rsi, 0
 21202 0000F390 BA01000000              	mov rdx, 1
 21203                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 21204 0000F395 4883FE00                	cmp rsi, 0
 21205 0000F399 7410                    	je .L_lambda_simple_env_end_0081
 21206 0000F39B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21207 0000F39F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21208 0000F3A3 48FFC6                  	inc rsi
 21209 0000F3A6 48FFC2                  	inc rdx
 21210 0000F3A9 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 21211                                  .L_lambda_simple_env_end_0081:
 21212 0000F3AB 5B                      	pop rbx
 21213 0000F3AC BE00000000              	mov rsi, 0
 21214                                  .L_lambda_simple_params_loop_0081:	; copy params
 21215 0000F3B1 4883FE00                	cmp rsi, 0
 21216 0000F3B5 740E                    	je .L_lambda_simple_params_end_0081
 21217 0000F3B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21218 0000F3BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21219 0000F3C0 48FFC6                  	inc rsi
 21220 0000F3C3 EBEC                    	jmp .L_lambda_simple_params_loop_0081
 21221                                  .L_lambda_simple_params_end_0081:
 21222 0000F3C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21223 0000F3C8 4889C3                  	mov rbx, rax
 21224 0000F3CB 58                      	pop rax
 21225 0000F3CC C60004                  	mov byte [rax], T_closure
 21226 0000F3CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21227 0000F3D3 48C74009[E0F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 21228 0000F3DB E9FF030000              	jmp .L_lambda_simple_end_0081
 21229                                  .L_lambda_simple_code_0081:	; lambda-simple body
 21230 0000F3E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21231 0000F3E6 740B                    	je .L_lambda_simple_arity_check_ok_0081
 21232 0000F3E8 FF742410                	push qword [rsp + 8 * 2]
 21233 0000F3EC 6A01                    	push 1
 21234 0000F3EE E9E85A0000              	jmp L_error_incorrect_arity_simple
 21235                                  .L_lambda_simple_arity_check_ok_0081:
 21236 0000F3F3 C8000000                	enter 0, 0
 21237 0000F3F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21238 0000F3FC E8215B0000              	call malloc
 21239 0000F401 50                      	push rax
 21240 0000F402 BF08000000              	mov rdi, 8 * 1	; new rib
 21241 0000F407 E8165B0000              	call malloc
 21242 0000F40C 50                      	push rax
 21243 0000F40D BF10000000              	mov rdi, 8 * 2	; extended env
 21244 0000F412 E80B5B0000              	call malloc
 21245 0000F417 488B7D10                	mov rdi, ENV
 21246 0000F41B BE00000000              	mov rsi, 0
 21247 0000F420 BA01000000              	mov rdx, 1
 21248                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 21249 0000F425 4883FE01                	cmp rsi, 1
 21250 0000F429 7410                    	je .L_lambda_opt_env_end_0015
 21251 0000F42B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21252 0000F42F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21253 0000F433 48FFC6                  	inc rsi
 21254 0000F436 48FFC2                  	inc rdx
 21255 0000F439 EBEA                    	jmp .L_lambda_opt_env_loop_0015
 21256                                  .L_lambda_opt_env_end_0015:
 21257 0000F43B 5B                      	pop rbx
 21258 0000F43C BE00000000              	mov rsi, 0
 21259                                  .L_lambda_opt_params_loop_0015:	; copy params
 21260 0000F441 4883FE01                	cmp rsi, 1
 21261 0000F445 740E                    	je .L_lambda_opt_params_end_0015
 21262 0000F447 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21263 0000F44C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21264 0000F450 48FFC6                  	inc rsi
 21265 0000F453 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 21266                                  .L_lambda_opt_params_end_0015:
 21267 0000F455 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21268 0000F458 4889C3                  	mov rbx, rax
 21269 0000F45B 58                      	pop rax
 21270 0000F45C C60004                  	mov byte [rax], T_closure
 21271 0000F45F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21272 0000F463 48C74009[70F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 21273 0000F46B E96B030000              	jmp .L_lambda_opt_end_0015
 21274                                  .L_lambda_opt_code_0015:
 21275 0000F470 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 21276 0000F475 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 21277 0000F479 7407                    	je .L_lambda_opt_arity_check_exact_0015	; Jump if arity matches
 21278 0000F47B 7F4C                    	jg .L_lambda_opt_arity_check_more_0015	; Jump if more arguments passed
 21279 0000F47D E96D5A0000              	jmp L_error_incorrect_arity_opt
 21280                                  .L_lambda_opt_arity_check_exact_0015:
 21281 0000F482 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 21282 0000F485 4983C603                	add r14, 3 ; add 3 first stack values
 21283 0000F489 41BF00000000            	mov r15, 0 ; r15 = index
 21284 0000F48F 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 21285 0000F493 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 21286 0000F49B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21287                                  .L_lambda_opt_stack_shrink_loop_0015:
 21288 0000F49D 4983FE00                	cmp r14, 0
 21289 0000F4A1 7E11                    	jle .L_make_lambda_opt_exact_finish_0015
 21290 0000F4A3 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 21291 0000F4A8 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 21292 0000F4AC 49FFCE                  	dec r14 ; next loop value
 21293 0000F4AF 49FFC7                  	inc r15 ; update i
 21294 0000F4B2 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21295                                  .L_make_lambda_opt_exact_finish_0015:
 21296 0000F4B4 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 21297 0000F4BC 49FFC2                  	inc r10
 21298 0000F4BF 4C89542410              	mov qword [rsp + 8 * 2], r10
 21299 0000F4C4 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0015
 21300                                  .L_lambda_opt_arity_check_more_0015:
 21301 0000F4C9 4D89D6                  	mov r14, r10 ; r14 = num args
 21302 0000F4CC 4D89D7                  	mov r15, r10 ; r15 = num args
 21303 0000F4CF 41B901000000            	mov r9, 1; r9 = number of params 
 21304 0000F4D5 4D29CE                  	sub r14, r9 ; r14 = extra args
 21305 0000F4D8 4D01F1                  	add r9, r14 ; r9 = num args
 21306 0000F4DB 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 21306 0000F4DD [0100000000000000] 
 21307 0000F4E5 EB00                    	jmp .L_make_lambda_opt_arg_list_0015
 21308                                  .L_make_lambda_opt_arg_list_0015:
 21309 0000F4E7 4983FE00                	cmp r14, 0
 21310 0000F4EB 7E25                    	jle .L_make_lambda_opt_stack_fixed_0015
 21311 0000F4ED 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 21312 0000F4F2 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 21313 0000F4F7 E8265A0000              	call malloc                         ; Allocate memory, result in rax
 21314 0000F4FC C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 21315 0000F4FF 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 21316 0000F503 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 21317 0000F507 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 21318 0000F50A 49FFC9                  	dec r9                              ; args index minus 1
 21319 0000F50D 49FFCE                  	dec r14                             ; next iteration
 21320 0000F510 EBD5                    	jmp .L_make_lambda_opt_arg_list_0015
 21321                                  .L_make_lambda_opt_stack_fixed_0015:
 21322 0000F512 4D89FE                  	mov r14, r15 ; r14 = num args
 21323 0000F515 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 21324 0000F518 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 21325 0000F51C 41BA01000000            	mov r10, 1; r10 = num of params
 21326 0000F522 4D29D6                  	sub r14, r10 ; r14 = extra args
 21327 0000F525 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 21328 0000F528 49FFCE                  	dec r14 ; how much we need to change stack wise?
 21329 0000F52B 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 21330 0000F530 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0015
 21331                                  .L_lambda_opt_stack_shrink_loop_more_0015:
 21332 0000F532 4983F800                	cmp r8, 0
 21333 0000F536 7E15                    	jle .L_make_lambda_opt_more_finish_0015
 21334 0000F538 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 21335 0000F53C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 21336 0000F540 4D8D26                  	lea r12, [r14]
 21337 0000F543 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 21338 0000F548 49FFC8                  	dec r8 ; next iteration
 21339 0000F54B EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0015
 21340                                  .L_make_lambda_opt_more_finish_0015:
 21341 0000F54D 4D89F8                  	mov r8, r15 ; num of args
 21342 0000F550 41BA01000000            	mov r10, 1
 21343 0000F556 4D29D0                  	sub r8, r10 ; num of new args
 21344 0000F559 49FFC0                  	inc r8
 21345 0000F55C 4C89442420              	mov qword [rsp + 8 * 4], r8
 21346 0000F561 4883C410                	add rsp, 8 * 2  ; 
 21347 0000F565 EB00                    	jmp .L_lambda_opt_stack_adjusted_0015
 21348                                  .L_lambda_opt_stack_adjusted_0015:
 21349 0000F567 C8000000                	enter 0, 0
 21350                                  	; Initiating tail-call optimization
 21351                                  	; preparing a non-tail-call
 21352 0000F56B 488B4528                	mov rax, PARAM(1)	; param chs
 21353 0000F56F 50                      	push rax
 21354 0000F570 6A01                    	push 1	; arg count
 21355 0000F572 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21356 0000F57A 803805                  	cmp byte [rax], T_undefined
 21357 0000F57D 0F8472580000            	je L_error_fvar_undefined
 21358 0000F583 803804                  	cmp byte [rax], T_closure
 21359 0000F586 0F85ED580000            	jne L_error_non_closure
 21360 0000F58C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21361 0000F58F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21362 0000F592 483D[02000000]          	cmp rax, sob_boolean_false
 21363 0000F598 740F                    	je .L_if_else_0066
 21364 0000F59A 48B8-                   	mov rax, L_constants + 4
 21364 0000F59C [0400000000000000] 
 21365 0000F5A4 E9EE000000              	jmp .L_if_end_0066
 21366                                  .L_if_else_0066:
 21367                                  	; preparing a non-tail-call
 21368 0000F5A9 488B4528                	mov rax, PARAM(1)	; param chs
 21369 0000F5AD 50                      	push rax
 21370 0000F5AE 6A01                    	push 1	; arg count
 21371 0000F5B0 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21372 0000F5B8 803805                  	cmp byte [rax], T_undefined
 21373 0000F5BB 0F8434580000            	je L_error_fvar_undefined
 21374 0000F5C1 803804                  	cmp byte [rax], T_closure
 21375 0000F5C4 0F85AF580000            	jne L_error_non_closure
 21376 0000F5CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 21377 0000F5CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 21378 0000F5D0 483D[02000000]          	cmp rax, sob_boolean_false
 21379 0000F5D6 744C                    	je .L_if_else_0064
 21380                                  	; preparing a non-tail-call
 21381                                  	; preparing a non-tail-call
 21382 0000F5D8 488B4528                	mov rax, PARAM(1)	; param chs
 21383 0000F5DC 50                      	push rax
 21384 0000F5DD 6A01                    	push 1	; arg count
 21385 0000F5DF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21386 0000F5E7 803805                  	cmp byte [rax], T_undefined
 21387 0000F5EA 0F8405580000            	je L_error_fvar_undefined
 21388 0000F5F0 803804                  	cmp byte [rax], T_closure
 21389 0000F5F3 0F8580580000            	jne L_error_non_closure
 21390 0000F5F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21391 0000F5FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 21392 0000F5FF 50                      	push rax
 21393 0000F600 6A01                    	push 1	; arg count
 21394 0000F602 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21395 0000F60A 803805                  	cmp byte [rax], T_undefined
 21396 0000F60D 0F84E2570000            	je L_error_fvar_undefined
 21397 0000F613 803804                  	cmp byte [rax], T_closure
 21398 0000F616 0F855D580000            	jne L_error_non_closure
 21399 0000F61C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21400 0000F61F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21401 0000F622 EB0A                    	jmp .L_if_end_0064
 21402                                  .L_if_else_0064:
 21403 0000F624 48B8-                   	mov rax, L_constants + 2
 21403 0000F626 [0200000000000000] 
 21404                                  .L_if_end_0064:
 21405 0000F62E 483D[02000000]          	cmp rax, sob_boolean_false
 21406 0000F634 7429                    	je .L_if_else_0065
 21407                                  	; preparing a non-tail-call
 21408 0000F636 488B4528                	mov rax, PARAM(1)	; param chs
 21409 0000F63A 50                      	push rax
 21410 0000F63B 6A01                    	push 1	; arg count
 21411 0000F63D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21412 0000F645 803805                  	cmp byte [rax], T_undefined
 21413 0000F648 0F84A7570000            	je L_error_fvar_undefined
 21414 0000F64E 803804                  	cmp byte [rax], T_closure
 21415 0000F651 0F8522580000            	jne L_error_non_closure
 21416 0000F657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21417 0000F65A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21418 0000F65D EB38                    	jmp .L_if_end_0065
 21419                                  .L_if_else_0065:
 21420                                  	; preparing a non-tail-call
 21421 0000F65F 48B8-                   	mov rax, L_constants + 3016
 21421 0000F661 [C80B000000000000] 
 21422 0000F669 50                      	push rax
 21423 0000F66A 48B8-                   	mov rax, L_constants + 3007
 21423 0000F66C [BF0B000000000000] 
 21424 0000F674 50                      	push rax
 21425 0000F675 6A02                    	push 2	; arg count
 21426 0000F677 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21427 0000F67F 803805                  	cmp byte [rax], T_undefined
 21428 0000F682 0F846D570000            	je L_error_fvar_undefined
 21429 0000F688 803804                  	cmp byte [rax], T_closure
 21430 0000F68B 0F85E8570000            	jne L_error_non_closure
 21431 0000F691 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21432 0000F694 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21433                                  .L_if_end_0065:
 21434                                  .L_if_end_0066:
 21435 0000F697 50                      	push rax
 21436 0000F698 6A01                    	push 1	; Number of arguments
 21437 0000F69A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21438 0000F69F E87E580000              	call malloc
 21439 0000F6A4 50                      	push rax
 21440 0000F6A5 BF10000000              	mov rdi, 8 * 2	; new rib
 21441 0000F6AA E873580000              	call malloc
 21442 0000F6AF 50                      	push rax
 21443 0000F6B0 BF18000000              	mov rdi, 8 * 3	; extended env
 21444 0000F6B5 E868580000              	call malloc
 21445 0000F6BA 488B7D10                	mov rdi, ENV
 21446 0000F6BE BE00000000              	mov rsi, 0
 21447 0000F6C3 BA01000000              	mov rdx, 1
 21448                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 21449 0000F6C8 4883FE02                	cmp rsi, 2
 21450 0000F6CC 7410                    	je .L_lambda_simple_env_end_0082
 21451 0000F6CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21452 0000F6D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21453 0000F6D6 48FFC6                  	inc rsi
 21454 0000F6D9 48FFC2                  	inc rdx
 21455 0000F6DC EBEA                    	jmp .L_lambda_simple_env_loop_0082
 21456                                  .L_lambda_simple_env_end_0082:
 21457 0000F6DE 5B                      	pop rbx
 21458 0000F6DF BE00000000              	mov rsi, 0
 21459                                  .L_lambda_simple_params_loop_0082:	; copy params
 21460 0000F6E4 4883FE02                	cmp rsi, 2
 21461 0000F6E8 740E                    	je .L_lambda_simple_params_end_0082
 21462 0000F6EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21463 0000F6EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21464 0000F6F3 48FFC6                  	inc rsi
 21465 0000F6F6 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 21466                                  .L_lambda_simple_params_end_0082:
 21467 0000F6F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21468 0000F6FB 4889C3                  	mov rbx, rax
 21469 0000F6FE 58                      	pop rax
 21470 0000F6FF C60004                  	mov byte [rax], T_closure
 21471 0000F702 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21472 0000F706 48C74009[13F70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 21473 0000F70E E97E000000              	jmp .L_lambda_simple_end_0082
 21474                                  .L_lambda_simple_code_0082:	; lambda-simple body
 21475 0000F713 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21476 0000F719 740B                    	je .L_lambda_simple_arity_check_ok_0082
 21477 0000F71B FF742410                	push qword [rsp + 8 * 2]
 21478 0000F71F 6A01                    	push 1
 21479 0000F721 E9B5570000              	jmp L_error_incorrect_arity_simple
 21480                                  .L_lambda_simple_arity_check_ok_0082:
 21481 0000F726 C8000000                	enter 0, 0
 21482                                  	; Initiating tail-call optimization
 21483 0000F72A 488B4520                	mov rax, PARAM(0)	; param ch
 21484 0000F72E 50                      	push rax
 21485 0000F72F 488B4510                	mov rax, ENV
 21486 0000F733 488B00                  	mov rax, qword [rax + 8 * 0]
 21487 0000F736 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21488 0000F739 50                      	push rax
 21489 0000F73A 6A02                    	push 2	; Number of arguments
 21490 0000F73C 488B4510                	mov rax, ENV
 21491 0000F740 488B4008                	mov rax, qword [rax + 8 * 1]
 21492 0000F744 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 21493 0000F747 803804                  	cmp byte [rax], T_closure
 21494 0000F74A 0F8529570000            	jne L_error_non_closure
 21495 0000F750 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21496                                  
 21497                                  	; Reclaiming the current stack frame
 21498 0000F753 FF7508                  	push qword [rbp + 8]
 21499 0000F756 FF7500                  	push qword [rbp]
 21500 0000F759 41BA06000000            	mov r10, 2 + 4
 21501 0000F75F 4C8B4518                	mov r8, COUNT
 21502 0000F763 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21503 0000F768 4C8D4DF8                	lea r9, [rbp - 8]
 21504                                  .L_tc_recycle_frame_loop_00b3:
 21505 0000F76C 4983FA00                	cmp r10, 0
 21506 0000F770 7413                    	je .L_tc_recycle_frame_done_00b3
 21507 0000F772 4D8B19                  	mov r11, qword [r9]
 21508 0000F775 4D8918                  	mov qword [r8], r11
 21509 0000F778 49FFCA                  	dec r10
 21510 0000F77B 4983E808                	sub r8, 8
 21511 0000F77F 4983E908                	sub r9, 8
 21512 0000F783 EBE7                    	jmp .L_tc_recycle_frame_loop_00b3
 21513                                  .L_tc_recycle_frame_done_00b3:
 21514 0000F785 498D6008                	lea rsp, [r8 + 8]
 21515 0000F789 5D                      	pop rbp
 21516 0000F78A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21517 0000F78D C9                      	leave
 21518 0000F78E C21800                  	ret AND_KILL_FRAME(1)
 21519                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21520 0000F791 803804                  	cmp byte [rax], T_closure
 21521 0000F794 0F85DF560000            	jne L_error_non_closure
 21522 0000F79A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21523                                  
 21524                                  	; Reclaiming the current stack frame
 21525 0000F79D FF7508                  	push qword [rbp + 8]
 21526 0000F7A0 FF7500                  	push qword [rbp]
 21527 0000F7A3 41BA05000000            	mov r10, 1 + 4
 21528 0000F7A9 4C8B4518                	mov r8, COUNT
 21529 0000F7AD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21530 0000F7B2 4C8D4DF8                	lea r9, [rbp - 8]
 21531                                  .L_tc_recycle_frame_loop_00b4:
 21532 0000F7B6 4983FA00                	cmp r10, 0
 21533 0000F7BA 7413                    	je .L_tc_recycle_frame_done_00b4
 21534 0000F7BC 4D8B19                  	mov r11, qword [r9]
 21535 0000F7BF 4D8918                  	mov qword [r8], r11
 21536 0000F7C2 49FFCA                  	dec r10
 21537 0000F7C5 4983E808                	sub r8, 8
 21538 0000F7C9 4983E908                	sub r9, 8
 21539 0000F7CD EBE7                    	jmp .L_tc_recycle_frame_loop_00b4
 21540                                  .L_tc_recycle_frame_done_00b4:
 21541 0000F7CF 498D6008                	lea rsp, [r8 + 8]
 21542 0000F7D3 5D                      	pop rbp
 21543 0000F7D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21544 0000F7D7 C9                      	leave
 21545 0000F7D8 C22000                  	ret AND_KILL_FRAME(2)
 21546                                  .L_lambda_opt_end_0015:	; new closure is in rax
 21547 0000F7DB C9                      	leave
 21548 0000F7DC C21800                  	ret AND_KILL_FRAME(1)
 21549                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21550 0000F7DF 803804                  	cmp byte [rax], T_closure
 21551 0000F7E2 0F8591560000            	jne L_error_non_closure
 21552 0000F7E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21553 0000F7EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 21554 0000F7EE 48890425[58140000]      	mov qword [free_var_99], rax
 21555 0000F7F6 48B8-                   	mov rax, sob_void
 21555 0000F7F8 [0000000000000000] 
 21556                                  
 21557 0000F800 4889C7                  	mov rdi, rax
 21558 0000F803 E86F590000              	call print_sexpr_if_not_void
 21559                                  	; preparing a non-tail-call
 21560 0000F808 48B8-                   	mov rax, L_constants + 2007
 21560 0000F80A [D707000000000000] 
 21561 0000F812 50                      	push rax
 21562 0000F813 6A01                    	push 1	; arg count
 21563 0000F815 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21564 0000F81A E803570000              	call malloc
 21565 0000F81F 50                      	push rax
 21566 0000F820 BF00000000              	mov rdi, 8 * 0	; new rib
 21567 0000F825 E8F8560000              	call malloc
 21568 0000F82A 50                      	push rax
 21569 0000F82B BF08000000              	mov rdi, 8 * 1	; extended env
 21570 0000F830 E8ED560000              	call malloc
 21571 0000F835 488B7D10                	mov rdi, ENV
 21572 0000F839 BE00000000              	mov rsi, 0
 21573 0000F83E BA01000000              	mov rdx, 1
 21574                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 21575 0000F843 4883FE00                	cmp rsi, 0
 21576 0000F847 7410                    	je .L_lambda_simple_env_end_0083
 21577 0000F849 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21578 0000F84D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21579 0000F851 48FFC6                  	inc rsi
 21580 0000F854 48FFC2                  	inc rdx
 21581 0000F857 EBEA                    	jmp .L_lambda_simple_env_loop_0083
 21582                                  .L_lambda_simple_env_end_0083:
 21583 0000F859 5B                      	pop rbx
 21584 0000F85A BE00000000              	mov rsi, 0
 21585                                  .L_lambda_simple_params_loop_0083:	; copy params
 21586 0000F85F 4883FE00                	cmp rsi, 0
 21587 0000F863 740E                    	je .L_lambda_simple_params_end_0083
 21588 0000F865 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21589 0000F86A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21590 0000F86E 48FFC6                  	inc rsi
 21591 0000F871 EBEC                    	jmp .L_lambda_simple_params_loop_0083
 21592                                  .L_lambda_simple_params_end_0083:
 21593 0000F873 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21594 0000F876 4889C3                  	mov rbx, rax
 21595 0000F879 58                      	pop rax
 21596 0000F87A C60004                  	mov byte [rax], T_closure
 21597 0000F87D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21598 0000F881 48C74009[8EF80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 21599 0000F889 E930040000              	jmp .L_lambda_simple_end_0083
 21600                                  .L_lambda_simple_code_0083:	; lambda-simple body
 21601 0000F88E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21602 0000F894 740B                    	je .L_lambda_simple_arity_check_ok_0083
 21603 0000F896 FF742410                	push qword [rsp + 8 * 2]
 21604 0000F89A 6A01                    	push 1
 21605 0000F89C E93A560000              	jmp L_error_incorrect_arity_simple
 21606                                  .L_lambda_simple_arity_check_ok_0083:
 21607 0000F8A1 C8000000                	enter 0, 0
 21608 0000F8A5 BF08000000              	mov rdi, 8 * 1
 21609 0000F8AA E873560000              	call malloc
 21610 0000F8AF 488B5D20                	mov rbx, PARAM(0)
 21611 0000F8B3 488918                  	mov qword [rax], rbx
 21612 0000F8B6 48894520                	mov PARAM(0), rax
 21613 0000F8BA 48B8-                   	mov rax, sob_void
 21613 0000F8BC [0000000000000000] 
 21614                                  
 21615 0000F8C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21616 0000F8C9 E854560000              	call malloc
 21617 0000F8CE 50                      	push rax
 21618 0000F8CF BF08000000              	mov rdi, 8 * 1	; new rib
 21619 0000F8D4 E849560000              	call malloc
 21620 0000F8D9 50                      	push rax
 21621 0000F8DA BF10000000              	mov rdi, 8 * 2	; extended env
 21622 0000F8DF E83E560000              	call malloc
 21623 0000F8E4 488B7D10                	mov rdi, ENV
 21624 0000F8E8 BE00000000              	mov rsi, 0
 21625 0000F8ED BA01000000              	mov rdx, 1
 21626                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 21627 0000F8F2 4883FE01                	cmp rsi, 1
 21628 0000F8F6 7410                    	je .L_lambda_simple_env_end_0084
 21629 0000F8F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21630 0000F8FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21631 0000F900 48FFC6                  	inc rsi
 21632 0000F903 48FFC2                  	inc rdx
 21633 0000F906 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 21634                                  .L_lambda_simple_env_end_0084:
 21635 0000F908 5B                      	pop rbx
 21636 0000F909 BE00000000              	mov rsi, 0
 21637                                  .L_lambda_simple_params_loop_0084:	; copy params
 21638 0000F90E 4883FE01                	cmp rsi, 1
 21639 0000F912 740E                    	je .L_lambda_simple_params_end_0084
 21640 0000F914 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21641 0000F919 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21642 0000F91D 48FFC6                  	inc rsi
 21643 0000F920 EBEC                    	jmp .L_lambda_simple_params_loop_0084
 21644                                  .L_lambda_simple_params_end_0084:
 21645 0000F922 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21646 0000F925 4889C3                  	mov rbx, rax
 21647 0000F928 58                      	pop rax
 21648 0000F929 C60004                  	mov byte [rax], T_closure
 21649 0000F92C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21650 0000F930 48C74009[3DF90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 21651 0000F938 E973020000              	jmp .L_lambda_simple_end_0084
 21652                                  .L_lambda_simple_code_0084:	; lambda-simple body
 21653 0000F93D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21654 0000F943 740B                    	je .L_lambda_simple_arity_check_ok_0084
 21655 0000F945 FF742410                	push qword [rsp + 8 * 2]
 21656 0000F949 6A02                    	push 2
 21657 0000F94B E98B550000              	jmp L_error_incorrect_arity_simple
 21658                                  .L_lambda_simple_arity_check_ok_0084:
 21659 0000F950 C8000000                	enter 0, 0
 21660                                  	; preparing a non-tail-call
 21661 0000F954 488B4520                	mov rax, PARAM(0)	; param s
 21662 0000F958 50                      	push rax
 21663 0000F959 6A01                    	push 1	; arg count
 21664 0000F95B 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21665 0000F963 803805                  	cmp byte [rax], T_undefined
 21666 0000F966 0F8489540000            	je L_error_fvar_undefined
 21667 0000F96C 803804                  	cmp byte [rax], T_closure
 21668 0000F96F 0F8504550000            	jne L_error_non_closure
 21669 0000F975 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21670 0000F978 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21671 0000F97B 483D[02000000]          	cmp rax, sob_boolean_false
 21672 0000F981 746E                    	je .L_if_else_0067
 21673                                  	; Initiating tail-call optimization
 21674 0000F983 48B8-                   	mov rax, L_constants + 0
 21674 0000F985 [0000000000000000] 
 21675 0000F98D 50                      	push rax
 21676 0000F98E 488B4528                	mov rax, PARAM(1)	; param i
 21677 0000F992 50                      	push rax
 21678 0000F993 6A02                    	push 2	; Number of arguments
 21679 0000F995 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21680 0000F99D 803805                  	cmp byte [rax], T_undefined
 21681 0000F9A0 0F844F540000            	je L_error_fvar_undefined
 21682 0000F9A6 803804                  	cmp byte [rax], T_closure
 21683 0000F9A9 0F85CA540000            	jne L_error_non_closure
 21684 0000F9AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21685                                  
 21686                                  	; Reclaiming the current stack frame
 21687 0000F9B2 FF7508                  	push qword [rbp + 8]
 21688 0000F9B5 FF7500                  	push qword [rbp]
 21689 0000F9B8 41BA06000000            	mov r10, 2 + 4
 21690 0000F9BE 4C8B4518                	mov r8, COUNT
 21691 0000F9C2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21692 0000F9C7 4C8D4DF8                	lea r9, [rbp - 8]
 21693                                  .L_tc_recycle_frame_loop_00b5:
 21694 0000F9CB 4983FA00                	cmp r10, 0
 21695 0000F9CF 7413                    	je .L_tc_recycle_frame_done_00b5
 21696 0000F9D1 4D8B19                  	mov r11, qword [r9]
 21697 0000F9D4 4D8918                  	mov qword [r8], r11
 21698 0000F9D7 49FFCA                  	dec r10
 21699 0000F9DA 4983E808                	sub r8, 8
 21700 0000F9DE 4983E908                	sub r9, 8
 21701 0000F9E2 EBE7                    	jmp .L_tc_recycle_frame_loop_00b5
 21702                                  .L_tc_recycle_frame_done_00b5:
 21703 0000F9E4 498D6008                	lea rsp, [r8 + 8]
 21704 0000F9E8 5D                      	pop rbp
 21705 0000F9E9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21706 0000F9EC E9BB010000              	jmp .L_if_end_0067
 21707                                  .L_if_else_0067:
 21708                                  	; Initiating tail-call optimization
 21709                                  	; preparing a non-tail-call
 21710                                  	; preparing a non-tail-call
 21711 0000F9F1 48B8-                   	mov rax, L_constants + 2270
 21711 0000F9F3 [DE08000000000000] 
 21712 0000F9FB 50                      	push rax
 21713 0000F9FC 488B4528                	mov rax, PARAM(1)	; param i
 21714 0000FA00 50                      	push rax
 21715 0000FA01 6A02                    	push 2	; arg count
 21716 0000FA03 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 21717 0000FA0B 803805                  	cmp byte [rax], T_undefined
 21718 0000FA0E 0F84E1530000            	je L_error_fvar_undefined
 21719 0000FA14 803804                  	cmp byte [rax], T_closure
 21720 0000FA17 0F855C540000            	jne L_error_non_closure
 21721 0000FA1D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21722 0000FA20 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21723 0000FA23 50                      	push rax
 21724                                  	; preparing a non-tail-call
 21725 0000FA24 488B4520                	mov rax, PARAM(0)	; param s
 21726 0000FA28 50                      	push rax
 21727 0000FA29 6A01                    	push 1	; arg count
 21728 0000FA2B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21729 0000FA33 803805                  	cmp byte [rax], T_undefined
 21730 0000FA36 0F84B9530000            	je L_error_fvar_undefined
 21731 0000FA3C 803804                  	cmp byte [rax], T_closure
 21732 0000FA3F 0F8534540000            	jne L_error_non_closure
 21733 0000FA45 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21734 0000FA48 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21735 0000FA4B 50                      	push rax
 21736 0000FA4C 6A02                    	push 2	; arg count
 21737 0000FA4E 488B4510                	mov rax, ENV
 21738 0000FA52 488B00                  	mov rax, qword [rax + 8 * 0]
 21739 0000FA55 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21740 0000FA58 488B00                  	mov rax, qword [rax]
 21741 0000FA5B 803804                  	cmp byte [rax], T_closure
 21742 0000FA5E 0F8515540000            	jne L_error_non_closure
 21743 0000FA64 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21744 0000FA67 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21745 0000FA6A 50                      	push rax
 21746 0000FA6B 6A01                    	push 1	; Number of arguments
 21747 0000FA6D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21748 0000FA72 E8AB540000              	call malloc
 21749 0000FA77 50                      	push rax
 21750 0000FA78 BF10000000              	mov rdi, 8 * 2	; new rib
 21751 0000FA7D E8A0540000              	call malloc
 21752 0000FA82 50                      	push rax
 21753 0000FA83 BF18000000              	mov rdi, 8 * 3	; extended env
 21754 0000FA88 E895540000              	call malloc
 21755 0000FA8D 488B7D10                	mov rdi, ENV
 21756 0000FA91 BE00000000              	mov rsi, 0
 21757 0000FA96 BA01000000              	mov rdx, 1
 21758                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 21759 0000FA9B 4883FE02                	cmp rsi, 2
 21760 0000FA9F 7410                    	je .L_lambda_simple_env_end_0085
 21761 0000FAA1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21762 0000FAA5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21763 0000FAA9 48FFC6                  	inc rsi
 21764 0000FAAC 48FFC2                  	inc rdx
 21765 0000FAAF EBEA                    	jmp .L_lambda_simple_env_loop_0085
 21766                                  .L_lambda_simple_env_end_0085:
 21767 0000FAB1 5B                      	pop rbx
 21768 0000FAB2 BE00000000              	mov rsi, 0
 21769                                  .L_lambda_simple_params_loop_0085:	; copy params
 21770 0000FAB7 4883FE02                	cmp rsi, 2
 21771 0000FABB 740E                    	je .L_lambda_simple_params_end_0085
 21772 0000FABD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21773 0000FAC2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21774 0000FAC6 48FFC6                  	inc rsi
 21775 0000FAC9 EBEC                    	jmp .L_lambda_simple_params_loop_0085
 21776                                  .L_lambda_simple_params_end_0085:
 21777 0000FACB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21778 0000FACE 4889C3                  	mov rbx, rax
 21779 0000FAD1 58                      	pop rax
 21780 0000FAD2 C60004                  	mov byte [rax], T_closure
 21781 0000FAD5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21782 0000FAD9 48C74009[E6FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 21783 0000FAE1 E980000000              	jmp .L_lambda_simple_end_0085
 21784                                  .L_lambda_simple_code_0085:	; lambda-simple body
 21785 0000FAE6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21786 0000FAEC 740B                    	je .L_lambda_simple_arity_check_ok_0085
 21787 0000FAEE FF742410                	push qword [rsp + 8 * 2]
 21788 0000FAF2 6A01                    	push 1
 21789 0000FAF4 E9E2530000              	jmp L_error_incorrect_arity_simple
 21790                                  .L_lambda_simple_arity_check_ok_0085:
 21791 0000FAF9 C8000000                	enter 0, 0
 21792                                  	; preparing a non-tail-call
 21793                                  	; preparing a non-tail-call
 21794 0000FAFD 488B4510                	mov rax, ENV
 21795 0000FB01 488B00                  	mov rax, qword [rax + 8 * 0]
 21796 0000FB04 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 21797 0000FB07 50                      	push rax
 21798 0000FB08 6A01                    	push 1	; arg count
 21799 0000FB0A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21800 0000FB12 803805                  	cmp byte [rax], T_undefined
 21801 0000FB15 0F84DA520000            	je L_error_fvar_undefined
 21802 0000FB1B 803804                  	cmp byte [rax], T_closure
 21803 0000FB1E 0F8555530000            	jne L_error_non_closure
 21804 0000FB24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21805 0000FB27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21806 0000FB2A 50                      	push rax
 21807 0000FB2B 488B4510                	mov rax, ENV
 21808 0000FB2F 488B00                  	mov rax, qword [rax + 8 * 0]
 21809 0000FB32 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 21810 0000FB36 50                      	push rax
 21811 0000FB37 488B4520                	mov rax, PARAM(0)	; param v
 21812 0000FB3B 50                      	push rax
 21813 0000FB3C 6A03                    	push 3	; arg count
 21814 0000FB3E 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 21815 0000FB46 803805                  	cmp byte [rax], T_undefined
 21816 0000FB49 0F84A6520000            	je L_error_fvar_undefined
 21817 0000FB4F 803804                  	cmp byte [rax], T_closure
 21818 0000FB52 0F8521530000            	jne L_error_non_closure
 21819 0000FB58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21820 0000FB5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 21821                                  
 21822 0000FB5E 488B4520                	mov rax, PARAM(0)	; param v
 21823 0000FB62 C9                      	leave
 21824 0000FB63 C21800                  	ret AND_KILL_FRAME(1)
 21825                                  .L_lambda_simple_end_0085:	; new closure is in rax
 21826 0000FB66 803804                  	cmp byte [rax], T_closure
 21827 0000FB69 0F850A530000            	jne L_error_non_closure
 21828 0000FB6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21829                                  
 21830                                  	; Reclaiming the current stack frame
 21831 0000FB72 FF7508                  	push qword [rbp + 8]
 21832 0000FB75 FF7500                  	push qword [rbp]
 21833 0000FB78 41BA05000000            	mov r10, 1 + 4
 21834 0000FB7E 4C8B4518                	mov r8, COUNT
 21835 0000FB82 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21836 0000FB87 4C8D4DF8                	lea r9, [rbp - 8]
 21837                                  .L_tc_recycle_frame_loop_00b6:
 21838 0000FB8B 4983FA00                	cmp r10, 0
 21839 0000FB8F 7413                    	je .L_tc_recycle_frame_done_00b6
 21840 0000FB91 4D8B19                  	mov r11, qword [r9]
 21841 0000FB94 4D8918                  	mov qword [r8], r11
 21842 0000FB97 49FFCA                  	dec r10
 21843 0000FB9A 4983E808                	sub r8, 8
 21844 0000FB9E 4983E908                	sub r9, 8
 21845 0000FBA2 EBE7                    	jmp .L_tc_recycle_frame_loop_00b6
 21846                                  .L_tc_recycle_frame_done_00b6:
 21847 0000FBA4 498D6008                	lea rsp, [r8 + 8]
 21848 0000FBA8 5D                      	pop rbp
 21849 0000FBA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21850                                  .L_if_end_0067:
 21851 0000FBAC C9                      	leave
 21852 0000FBAD C22000                  	ret AND_KILL_FRAME(2)
 21853                                  .L_lambda_simple_end_0084:	; new closure is in rax
 21854 0000FBB0 50                      	push rax
 21855 0000FBB1 488B4520                	mov rax, PARAM(0)	; param run
 21856 0000FBB5 8F00                    	pop qword [rax]
 21857 0000FBB7 48B8-                   	mov rax, sob_void
 21857 0000FBB9 [0000000000000000] 
 21858                                  
 21859 0000FBC1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21860 0000FBC6 E857530000              	call malloc
 21861 0000FBCB 50                      	push rax
 21862 0000FBCC BF08000000              	mov rdi, 8 * 1	; new rib
 21863 0000FBD1 E84C530000              	call malloc
 21864 0000FBD6 50                      	push rax
 21865 0000FBD7 BF10000000              	mov rdi, 8 * 2	; extended env
 21866 0000FBDC E841530000              	call malloc
 21867 0000FBE1 488B7D10                	mov rdi, ENV
 21868 0000FBE5 BE00000000              	mov rsi, 0
 21869 0000FBEA BA01000000              	mov rdx, 1
 21870                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 21871 0000FBEF 4883FE01                	cmp rsi, 1
 21872 0000FBF3 7410                    	je .L_lambda_simple_env_end_0086
 21873 0000FBF5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21874 0000FBF9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21875 0000FBFD 48FFC6                  	inc rsi
 21876 0000FC00 48FFC2                  	inc rdx
 21877 0000FC03 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 21878                                  .L_lambda_simple_env_end_0086:
 21879 0000FC05 5B                      	pop rbx
 21880 0000FC06 BE00000000              	mov rsi, 0
 21881                                  .L_lambda_simple_params_loop_0086:	; copy params
 21882 0000FC0B 4883FE01                	cmp rsi, 1
 21883 0000FC0F 740E                    	je .L_lambda_simple_params_end_0086
 21884 0000FC11 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21885 0000FC16 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21886 0000FC1A 48FFC6                  	inc rsi
 21887 0000FC1D EBEC                    	jmp .L_lambda_simple_params_loop_0086
 21888                                  .L_lambda_simple_params_end_0086:
 21889 0000FC1F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21890 0000FC22 4889C3                  	mov rbx, rax
 21891 0000FC25 58                      	pop rax
 21892 0000FC26 C60004                  	mov byte [rax], T_closure
 21893 0000FC29 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21894 0000FC2D 48C74009[3AFC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 21895 0000FC35 E980000000              	jmp .L_lambda_simple_end_0086
 21896                                  .L_lambda_simple_code_0086:	; lambda-simple body
 21897 0000FC3A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21898 0000FC40 740B                    	je .L_lambda_simple_arity_check_ok_0086
 21899 0000FC42 FF742410                	push qword [rsp + 8 * 2]
 21900 0000FC46 6A01                    	push 1
 21901 0000FC48 E98E520000              	jmp L_error_incorrect_arity_simple
 21902                                  .L_lambda_simple_arity_check_ok_0086:
 21903 0000FC4D C8000000                	enter 0, 0
 21904                                  	; Initiating tail-call optimization
 21905 0000FC51 48B8-                   	mov rax, L_constants + 2135
 21905 0000FC53 [5708000000000000] 
 21906 0000FC5B 50                      	push rax
 21907 0000FC5C 488B4520                	mov rax, PARAM(0)	; param s
 21908 0000FC60 50                      	push rax
 21909 0000FC61 6A02                    	push 2	; Number of arguments
 21910 0000FC63 488B4510                	mov rax, ENV
 21911 0000FC67 488B00                  	mov rax, qword [rax + 8 * 0]
 21912 0000FC6A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21913 0000FC6D 488B00                  	mov rax, qword [rax]
 21914 0000FC70 803804                  	cmp byte [rax], T_closure
 21915 0000FC73 0F8500520000            	jne L_error_non_closure
 21916 0000FC79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21917                                  
 21918                                  	; Reclaiming the current stack frame
 21919 0000FC7C FF7508                  	push qword [rbp + 8]
 21920 0000FC7F FF7500                  	push qword [rbp]
 21921 0000FC82 41BA06000000            	mov r10, 2 + 4
 21922 0000FC88 4C8B4518                	mov r8, COUNT
 21923 0000FC8C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21924 0000FC91 4C8D4DF8                	lea r9, [rbp - 8]
 21925                                  .L_tc_recycle_frame_loop_00b7:
 21926 0000FC95 4983FA00                	cmp r10, 0
 21927 0000FC99 7413                    	je .L_tc_recycle_frame_done_00b7
 21928 0000FC9B 4D8B19                  	mov r11, qword [r9]
 21929 0000FC9E 4D8918                  	mov qword [r8], r11
 21930 0000FCA1 49FFCA                  	dec r10
 21931 0000FCA4 4983E808                	sub r8, 8
 21932 0000FCA8 4983E908                	sub r9, 8
 21933 0000FCAC EBE7                    	jmp .L_tc_recycle_frame_loop_00b7
 21934                                  .L_tc_recycle_frame_done_00b7:
 21935 0000FCAE 498D6008                	lea rsp, [r8 + 8]
 21936 0000FCB2 5D                      	pop rbp
 21937 0000FCB3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21938 0000FCB6 C9                      	leave
 21939 0000FCB7 C21800                  	ret AND_KILL_FRAME(1)
 21940                                  .L_lambda_simple_end_0086:	; new closure is in rax
 21941 0000FCBA C9                      	leave
 21942 0000FCBB C21800                  	ret AND_KILL_FRAME(1)
 21943                                  .L_lambda_simple_end_0083:	; new closure is in rax
 21944 0000FCBE 803804                  	cmp byte [rax], T_closure
 21945 0000FCC1 0F85B2510000            	jne L_error_non_closure
 21946 0000FCC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21947 0000FCCA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21948 0000FCCD 48890425[14140000]      	mov qword [free_var_95], rax
 21949 0000FCD5 48B8-                   	mov rax, sob_void
 21949 0000FCD7 [0000000000000000] 
 21950                                  
 21951 0000FCDF 4889C7                  	mov rdi, rax
 21952 0000FCE2 E890540000              	call print_sexpr_if_not_void
 21953                                  	; preparing a non-tail-call
 21954 0000FCE7 48B8-                   	mov rax, L_constants + 2007
 21954 0000FCE9 [D707000000000000] 
 21955 0000FCF1 50                      	push rax
 21956 0000FCF2 6A01                    	push 1	; arg count
 21957 0000FCF4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21958 0000FCF9 E824520000              	call malloc
 21959 0000FCFE 50                      	push rax
 21960 0000FCFF BF00000000              	mov rdi, 8 * 0	; new rib
 21961 0000FD04 E819520000              	call malloc
 21962 0000FD09 50                      	push rax
 21963 0000FD0A BF08000000              	mov rdi, 8 * 1	; extended env
 21964 0000FD0F E80E520000              	call malloc
 21965 0000FD14 488B7D10                	mov rdi, ENV
 21966 0000FD18 BE00000000              	mov rsi, 0
 21967 0000FD1D BA01000000              	mov rdx, 1
 21968                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 21969 0000FD22 4883FE00                	cmp rsi, 0
 21970 0000FD26 7410                    	je .L_lambda_simple_env_end_0087
 21971 0000FD28 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21972 0000FD2C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21973 0000FD30 48FFC6                  	inc rsi
 21974 0000FD33 48FFC2                  	inc rdx
 21975 0000FD36 EBEA                    	jmp .L_lambda_simple_env_loop_0087
 21976                                  .L_lambda_simple_env_end_0087:
 21977 0000FD38 5B                      	pop rbx
 21978 0000FD39 BE00000000              	mov rsi, 0
 21979                                  .L_lambda_simple_params_loop_0087:	; copy params
 21980 0000FD3E 4883FE00                	cmp rsi, 0
 21981 0000FD42 740E                    	je .L_lambda_simple_params_end_0087
 21982 0000FD44 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21983 0000FD49 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21984 0000FD4D 48FFC6                  	inc rsi
 21985 0000FD50 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 21986                                  .L_lambda_simple_params_end_0087:
 21987 0000FD52 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21988 0000FD55 4889C3                  	mov rbx, rax
 21989 0000FD58 58                      	pop rax
 21990 0000FD59 C60004                  	mov byte [rax], T_closure
 21991 0000FD5C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21992 0000FD60 48C74009[6DFD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 21993 0000FD68 E930040000              	jmp .L_lambda_simple_end_0087
 21994                                  .L_lambda_simple_code_0087:	; lambda-simple body
 21995 0000FD6D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21996 0000FD73 740B                    	je .L_lambda_simple_arity_check_ok_0087
 21997 0000FD75 FF742410                	push qword [rsp + 8 * 2]
 21998 0000FD79 6A01                    	push 1
 21999 0000FD7B E95B510000              	jmp L_error_incorrect_arity_simple
 22000                                  .L_lambda_simple_arity_check_ok_0087:
 22001 0000FD80 C8000000                	enter 0, 0
 22002 0000FD84 BF08000000              	mov rdi, 8 * 1
 22003 0000FD89 E894510000              	call malloc
 22004 0000FD8E 488B5D20                	mov rbx, PARAM(0)
 22005 0000FD92 488918                  	mov qword [rax], rbx
 22006 0000FD95 48894520                	mov PARAM(0), rax
 22007 0000FD99 48B8-                   	mov rax, sob_void
 22007 0000FD9B [0000000000000000] 
 22008                                  
 22009 0000FDA3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22010 0000FDA8 E875510000              	call malloc
 22011 0000FDAD 50                      	push rax
 22012 0000FDAE BF08000000              	mov rdi, 8 * 1	; new rib
 22013 0000FDB3 E86A510000              	call malloc
 22014 0000FDB8 50                      	push rax
 22015 0000FDB9 BF10000000              	mov rdi, 8 * 2	; extended env
 22016 0000FDBE E85F510000              	call malloc
 22017 0000FDC3 488B7D10                	mov rdi, ENV
 22018 0000FDC7 BE00000000              	mov rsi, 0
 22019 0000FDCC BA01000000              	mov rdx, 1
 22020                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 22021 0000FDD1 4883FE01                	cmp rsi, 1
 22022 0000FDD5 7410                    	je .L_lambda_simple_env_end_0088
 22023 0000FDD7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22024 0000FDDB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22025 0000FDDF 48FFC6                  	inc rsi
 22026 0000FDE2 48FFC2                  	inc rdx
 22027 0000FDE5 EBEA                    	jmp .L_lambda_simple_env_loop_0088
 22028                                  .L_lambda_simple_env_end_0088:
 22029 0000FDE7 5B                      	pop rbx
 22030 0000FDE8 BE00000000              	mov rsi, 0
 22031                                  .L_lambda_simple_params_loop_0088:	; copy params
 22032 0000FDED 4883FE01                	cmp rsi, 1
 22033 0000FDF1 740E                    	je .L_lambda_simple_params_end_0088
 22034 0000FDF3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22035 0000FDF8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22036 0000FDFC 48FFC6                  	inc rsi
 22037 0000FDFF EBEC                    	jmp .L_lambda_simple_params_loop_0088
 22038                                  .L_lambda_simple_params_end_0088:
 22039 0000FE01 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22040 0000FE04 4889C3                  	mov rbx, rax
 22041 0000FE07 58                      	pop rax
 22042 0000FE08 C60004                  	mov byte [rax], T_closure
 22043 0000FE0B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22044 0000FE0F 48C74009[1CFE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 22045 0000FE17 E973020000              	jmp .L_lambda_simple_end_0088
 22046                                  .L_lambda_simple_code_0088:	; lambda-simple body
 22047 0000FE1C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22048 0000FE22 740B                    	je .L_lambda_simple_arity_check_ok_0088
 22049 0000FE24 FF742410                	push qword [rsp + 8 * 2]
 22050 0000FE28 6A02                    	push 2
 22051 0000FE2A E9AC500000              	jmp L_error_incorrect_arity_simple
 22052                                  .L_lambda_simple_arity_check_ok_0088:
 22053 0000FE2F C8000000                	enter 0, 0
 22054                                  	; preparing a non-tail-call
 22055 0000FE33 488B4520                	mov rax, PARAM(0)	; param s
 22056 0000FE37 50                      	push rax
 22057 0000FE38 6A01                    	push 1	; arg count
 22058 0000FE3A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22059 0000FE42 803805                  	cmp byte [rax], T_undefined
 22060 0000FE45 0F84AA4F0000            	je L_error_fvar_undefined
 22061 0000FE4B 803804                  	cmp byte [rax], T_closure
 22062 0000FE4E 0F8525500000            	jne L_error_non_closure
 22063 0000FE54 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22064 0000FE57 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22065 0000FE5A 483D[02000000]          	cmp rax, sob_boolean_false
 22066 0000FE60 746E                    	je .L_if_else_0068
 22067                                  	; Initiating tail-call optimization
 22068 0000FE62 48B8-                   	mov rax, L_constants + 4
 22068 0000FE64 [0400000000000000] 
 22069 0000FE6C 50                      	push rax
 22070 0000FE6D 488B4528                	mov rax, PARAM(1)	; param i
 22071 0000FE71 50                      	push rax
 22072 0000FE72 6A02                    	push 2	; Number of arguments
 22073 0000FE74 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 22074 0000FE7C 803805                  	cmp byte [rax], T_undefined
 22075 0000FE7F 0F84704F0000            	je L_error_fvar_undefined
 22076 0000FE85 803804                  	cmp byte [rax], T_closure
 22077 0000FE88 0F85EB4F0000            	jne L_error_non_closure
 22078 0000FE8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22079                                  
 22080                                  	; Reclaiming the current stack frame
 22081 0000FE91 FF7508                  	push qword [rbp + 8]
 22082 0000FE94 FF7500                  	push qword [rbp]
 22083 0000FE97 41BA06000000            	mov r10, 2 + 4
 22084 0000FE9D 4C8B4518                	mov r8, COUNT
 22085 0000FEA1 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22086 0000FEA6 4C8D4DF8                	lea r9, [rbp - 8]
 22087                                  .L_tc_recycle_frame_loop_00b8:
 22088 0000FEAA 4983FA00                	cmp r10, 0
 22089 0000FEAE 7413                    	je .L_tc_recycle_frame_done_00b8
 22090 0000FEB0 4D8B19                  	mov r11, qword [r9]
 22091 0000FEB3 4D8918                  	mov qword [r8], r11
 22092 0000FEB6 49FFCA                  	dec r10
 22093 0000FEB9 4983E808                	sub r8, 8
 22094 0000FEBD 4983E908                	sub r9, 8
 22095 0000FEC1 EBE7                    	jmp .L_tc_recycle_frame_loop_00b8
 22096                                  .L_tc_recycle_frame_done_00b8:
 22097 0000FEC3 498D6008                	lea rsp, [r8 + 8]
 22098 0000FEC7 5D                      	pop rbp
 22099 0000FEC8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22100 0000FECB E9BB010000              	jmp .L_if_end_0068
 22101                                  .L_if_else_0068:
 22102                                  	; Initiating tail-call optimization
 22103                                  	; preparing a non-tail-call
 22104                                  	; preparing a non-tail-call
 22105 0000FED0 48B8-                   	mov rax, L_constants + 2270
 22105 0000FED2 [DE08000000000000] 
 22106 0000FEDA 50                      	push rax
 22107 0000FEDB 488B4528                	mov rax, PARAM(1)	; param i
 22108 0000FEDF 50                      	push rax
 22109 0000FEE0 6A02                    	push 2	; arg count
 22110 0000FEE2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22111 0000FEEA 803805                  	cmp byte [rax], T_undefined
 22112 0000FEED 0F84024F0000            	je L_error_fvar_undefined
 22113 0000FEF3 803804                  	cmp byte [rax], T_closure
 22114 0000FEF6 0F857D4F0000            	jne L_error_non_closure
 22115 0000FEFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22116 0000FEFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22117 0000FF02 50                      	push rax
 22118                                  	; preparing a non-tail-call
 22119 0000FF03 488B4520                	mov rax, PARAM(0)	; param s
 22120 0000FF07 50                      	push rax
 22121 0000FF08 6A01                    	push 1	; arg count
 22122 0000FF0A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22123 0000FF12 803805                  	cmp byte [rax], T_undefined
 22124 0000FF15 0F84DA4E0000            	je L_error_fvar_undefined
 22125 0000FF1B 803804                  	cmp byte [rax], T_closure
 22126 0000FF1E 0F85554F0000            	jne L_error_non_closure
 22127 0000FF24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22128 0000FF27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22129 0000FF2A 50                      	push rax
 22130 0000FF2B 6A02                    	push 2	; arg count
 22131 0000FF2D 488B4510                	mov rax, ENV
 22132 0000FF31 488B00                  	mov rax, qword [rax + 8 * 0]
 22133 0000FF34 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22134 0000FF37 488B00                  	mov rax, qword [rax]
 22135 0000FF3A 803804                  	cmp byte [rax], T_closure
 22136 0000FF3D 0F85364F0000            	jne L_error_non_closure
 22137 0000FF43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22138 0000FF46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22139 0000FF49 50                      	push rax
 22140 0000FF4A 6A01                    	push 1	; Number of arguments
 22141 0000FF4C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22142 0000FF51 E8CC4F0000              	call malloc
 22143 0000FF56 50                      	push rax
 22144 0000FF57 BF10000000              	mov rdi, 8 * 2	; new rib
 22145 0000FF5C E8C14F0000              	call malloc
 22146 0000FF61 50                      	push rax
 22147 0000FF62 BF18000000              	mov rdi, 8 * 3	; extended env
 22148 0000FF67 E8B64F0000              	call malloc
 22149 0000FF6C 488B7D10                	mov rdi, ENV
 22150 0000FF70 BE00000000              	mov rsi, 0
 22151 0000FF75 BA01000000              	mov rdx, 1
 22152                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22153 0000FF7A 4883FE02                	cmp rsi, 2
 22154 0000FF7E 7410                    	je .L_lambda_simple_env_end_0089
 22155 0000FF80 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22156 0000FF84 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22157 0000FF88 48FFC6                  	inc rsi
 22158 0000FF8B 48FFC2                  	inc rdx
 22159 0000FF8E EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22160                                  .L_lambda_simple_env_end_0089:
 22161 0000FF90 5B                      	pop rbx
 22162 0000FF91 BE00000000              	mov rsi, 0
 22163                                  .L_lambda_simple_params_loop_0089:	; copy params
 22164 0000FF96 4883FE02                	cmp rsi, 2
 22165 0000FF9A 740E                    	je .L_lambda_simple_params_end_0089
 22166 0000FF9C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22167 0000FFA1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22168 0000FFA5 48FFC6                  	inc rsi
 22169 0000FFA8 EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22170                                  .L_lambda_simple_params_end_0089:
 22171 0000FFAA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22172 0000FFAD 4889C3                  	mov rbx, rax
 22173 0000FFB0 58                      	pop rax
 22174 0000FFB1 C60004                  	mov byte [rax], T_closure
 22175 0000FFB4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22176 0000FFB8 48C74009[C5FF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22177 0000FFC0 E980000000              	jmp .L_lambda_simple_end_0089
 22178                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22179 0000FFC5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22180 0000FFCB 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22181 0000FFCD FF742410                	push qword [rsp + 8 * 2]
 22182 0000FFD1 6A01                    	push 1
 22183 0000FFD3 E9034F0000              	jmp L_error_incorrect_arity_simple
 22184                                  .L_lambda_simple_arity_check_ok_0089:
 22185 0000FFD8 C8000000                	enter 0, 0
 22186                                  	; preparing a non-tail-call
 22187                                  	; preparing a non-tail-call
 22188 0000FFDC 488B4510                	mov rax, ENV
 22189 0000FFE0 488B00                  	mov rax, qword [rax + 8 * 0]
 22190 0000FFE3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22191 0000FFE6 50                      	push rax
 22192 0000FFE7 6A01                    	push 1	; arg count
 22193 0000FFE9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22194 0000FFF1 803805                  	cmp byte [rax], T_undefined
 22195 0000FFF4 0F84FB4D0000            	je L_error_fvar_undefined
 22196 0000FFFA 803804                  	cmp byte [rax], T_closure
 22197 0000FFFD 0F85764E0000            	jne L_error_non_closure
 22198 00010003 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22199 00010006 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22200 00010009 50                      	push rax
 22201 0001000A 488B4510                	mov rax, ENV
 22202 0001000E 488B00                  	mov rax, qword [rax + 8 * 0]
 22203 00010011 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22204 00010015 50                      	push rax
 22205 00010016 488B4520                	mov rax, PARAM(0)	; param str
 22206 0001001A 50                      	push rax
 22207 0001001B 6A03                    	push 3	; arg count
 22208 0001001D 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 22209 00010025 803805                  	cmp byte [rax], T_undefined
 22210 00010028 0F84C74D0000            	je L_error_fvar_undefined
 22211 0001002E 803804                  	cmp byte [rax], T_closure
 22212 00010031 0F85424E0000            	jne L_error_non_closure
 22213 00010037 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22214 0001003A FF5009                  	call SOB_CLOSURE_CODE(rax)
 22215                                  
 22216 0001003D 488B4520                	mov rax, PARAM(0)	; param str
 22217 00010041 C9                      	leave
 22218 00010042 C21800                  	ret AND_KILL_FRAME(1)
 22219                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22220 00010045 803804                  	cmp byte [rax], T_closure
 22221 00010048 0F852B4E0000            	jne L_error_non_closure
 22222 0001004E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22223                                  
 22224                                  	; Reclaiming the current stack frame
 22225 00010051 FF7508                  	push qword [rbp + 8]
 22226 00010054 FF7500                  	push qword [rbp]
 22227 00010057 41BA05000000            	mov r10, 1 + 4
 22228 0001005D 4C8B4518                	mov r8, COUNT
 22229 00010061 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22230 00010066 4C8D4DF8                	lea r9, [rbp - 8]
 22231                                  .L_tc_recycle_frame_loop_00b9:
 22232 0001006A 4983FA00                	cmp r10, 0
 22233 0001006E 7413                    	je .L_tc_recycle_frame_done_00b9
 22234 00010070 4D8B19                  	mov r11, qword [r9]
 22235 00010073 4D8918                  	mov qword [r8], r11
 22236 00010076 49FFCA                  	dec r10
 22237 00010079 4983E808                	sub r8, 8
 22238 0001007D 4983E908                	sub r9, 8
 22239 00010081 EBE7                    	jmp .L_tc_recycle_frame_loop_00b9
 22240                                  .L_tc_recycle_frame_done_00b9:
 22241 00010083 498D6008                	lea rsp, [r8 + 8]
 22242 00010087 5D                      	pop rbp
 22243 00010088 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22244                                  .L_if_end_0068:
 22245 0001008B C9                      	leave
 22246 0001008C C22000                  	ret AND_KILL_FRAME(2)
 22247                                  .L_lambda_simple_end_0088:	; new closure is in rax
 22248 0001008F 50                      	push rax
 22249 00010090 488B4520                	mov rax, PARAM(0)	; param run
 22250 00010094 8F00                    	pop qword [rax]
 22251 00010096 48B8-                   	mov rax, sob_void
 22251 00010098 [0000000000000000] 
 22252                                  
 22253 000100A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22254 000100A5 E8784E0000              	call malloc
 22255 000100AA 50                      	push rax
 22256 000100AB BF08000000              	mov rdi, 8 * 1	; new rib
 22257 000100B0 E86D4E0000              	call malloc
 22258 000100B5 50                      	push rax
 22259 000100B6 BF10000000              	mov rdi, 8 * 2	; extended env
 22260 000100BB E8624E0000              	call malloc
 22261 000100C0 488B7D10                	mov rdi, ENV
 22262 000100C4 BE00000000              	mov rsi, 0
 22263 000100C9 BA01000000              	mov rdx, 1
 22264                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22265 000100CE 4883FE01                	cmp rsi, 1
 22266 000100D2 7410                    	je .L_lambda_simple_env_end_008a
 22267 000100D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22268 000100D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22269 000100DC 48FFC6                  	inc rsi
 22270 000100DF 48FFC2                  	inc rdx
 22271 000100E2 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22272                                  .L_lambda_simple_env_end_008a:
 22273 000100E4 5B                      	pop rbx
 22274 000100E5 BE00000000              	mov rsi, 0
 22275                                  .L_lambda_simple_params_loop_008a:	; copy params
 22276 000100EA 4883FE01                	cmp rsi, 1
 22277 000100EE 740E                    	je .L_lambda_simple_params_end_008a
 22278 000100F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22279 000100F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22280 000100F9 48FFC6                  	inc rsi
 22281 000100FC EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22282                                  .L_lambda_simple_params_end_008a:
 22283 000100FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22284 00010101 4889C3                  	mov rbx, rax
 22285 00010104 58                      	pop rax
 22286 00010105 C60004                  	mov byte [rax], T_closure
 22287 00010108 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22288 0001010C 48C74009[19010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22289 00010114 E980000000              	jmp .L_lambda_simple_end_008a
 22290                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22291 00010119 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22292 0001011F 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22293 00010121 FF742410                	push qword [rsp + 8 * 2]
 22294 00010125 6A01                    	push 1
 22295 00010127 E9AF4D0000              	jmp L_error_incorrect_arity_simple
 22296                                  .L_lambda_simple_arity_check_ok_008a:
 22297 0001012C C8000000                	enter 0, 0
 22298                                  	; Initiating tail-call optimization
 22299 00010130 48B8-                   	mov rax, L_constants + 2135
 22299 00010132 [5708000000000000] 
 22300 0001013A 50                      	push rax
 22301 0001013B 488B4520                	mov rax, PARAM(0)	; param s
 22302 0001013F 50                      	push rax
 22303 00010140 6A02                    	push 2	; Number of arguments
 22304 00010142 488B4510                	mov rax, ENV
 22305 00010146 488B00                  	mov rax, qword [rax + 8 * 0]
 22306 00010149 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22307 0001014C 488B00                  	mov rax, qword [rax]
 22308 0001014F 803804                  	cmp byte [rax], T_closure
 22309 00010152 0F85214D0000            	jne L_error_non_closure
 22310 00010158 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22311                                  
 22312                                  	; Reclaiming the current stack frame
 22313 0001015B FF7508                  	push qword [rbp + 8]
 22314 0001015E FF7500                  	push qword [rbp]
 22315 00010161 41BA06000000            	mov r10, 2 + 4
 22316 00010167 4C8B4518                	mov r8, COUNT
 22317 0001016B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22318 00010170 4C8D4DF8                	lea r9, [rbp - 8]
 22319                                  .L_tc_recycle_frame_loop_00ba:
 22320 00010174 4983FA00                	cmp r10, 0
 22321 00010178 7413                    	je .L_tc_recycle_frame_done_00ba
 22322 0001017A 4D8B19                  	mov r11, qword [r9]
 22323 0001017D 4D8918                  	mov qword [r8], r11
 22324 00010180 49FFCA                  	dec r10
 22325 00010183 4983E808                	sub r8, 8
 22326 00010187 4983E908                	sub r9, 8
 22327 0001018B EBE7                    	jmp .L_tc_recycle_frame_loop_00ba
 22328                                  .L_tc_recycle_frame_done_00ba:
 22329 0001018D 498D6008                	lea rsp, [r8 + 8]
 22330 00010191 5D                      	pop rbp
 22331 00010192 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22332 00010195 C9                      	leave
 22333 00010196 C21800                  	ret AND_KILL_FRAME(1)
 22334                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22335 00010199 C9                      	leave
 22336 0001019A C21800                  	ret AND_KILL_FRAME(1)
 22337                                  .L_lambda_simple_end_0087:	; new closure is in rax
 22338 0001019D 803804                  	cmp byte [rax], T_closure
 22339 000101A0 0F85D34C0000            	jne L_error_non_closure
 22340 000101A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22341 000101A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22342 000101AC 48890425[03140000]      	mov qword [free_var_94], rax
 22343 000101B4 48B8-                   	mov rax, sob_void
 22343 000101B6 [0000000000000000] 
 22344                                  
 22345 000101BE 4889C7                  	mov rdi, rax
 22346 000101C1 E8B14F0000              	call print_sexpr_if_not_void
 22347 000101C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22348 000101CB E8524D0000              	call malloc
 22349 000101D0 50                      	push rax
 22350 000101D1 BF00000000              	mov rdi, 8 * 0	; new rib
 22351 000101D6 E8474D0000              	call malloc
 22352 000101DB 50                      	push rax
 22353 000101DC BF08000000              	mov rdi, 8 * 1	; extended env
 22354 000101E1 E83C4D0000              	call malloc
 22355 000101E6 488B7D10                	mov rdi, ENV
 22356 000101EA BE00000000              	mov rsi, 0
 22357 000101EF BA01000000              	mov rdx, 1
 22358                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 22359 000101F4 4883FE00                	cmp rsi, 0
 22360 000101F8 7410                    	je .L_lambda_opt_env_end_0016
 22361 000101FA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22362 000101FE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22363 00010202 48FFC6                  	inc rsi
 22364 00010205 48FFC2                  	inc rdx
 22365 00010208 EBEA                    	jmp .L_lambda_opt_env_loop_0016
 22366                                  .L_lambda_opt_env_end_0016:
 22367 0001020A 5B                      	pop rbx
 22368 0001020B BE00000000              	mov rsi, 0
 22369                                  .L_lambda_opt_params_loop_0016:	; copy params
 22370 00010210 4883FE00                	cmp rsi, 0
 22371 00010214 740E                    	je .L_lambda_opt_params_end_0016
 22372 00010216 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22373 0001021B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22374 0001021F 48FFC6                  	inc rsi
 22375 00010222 EBEC                    	jmp .L_lambda_opt_params_loop_0016
 22376                                  .L_lambda_opt_params_end_0016:
 22377 00010224 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22378 00010227 4889C3                  	mov rbx, rax
 22379 0001022A 58                      	pop rax
 22380 0001022B C60004                  	mov byte [rax], T_closure
 22381 0001022E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22382 00010232 48C74009[3F020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 22383 0001023A E95D010000              	jmp .L_lambda_opt_end_0016
 22384                                  .L_lambda_opt_code_0016:
 22385 0001023F 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 22386 00010244 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 22387 00010248 7407                    	je .L_lambda_opt_arity_check_exact_0016	; Jump if arity matches
 22388 0001024A 7F4C                    	jg .L_lambda_opt_arity_check_more_0016	; Jump if more arguments passed
 22389 0001024C E99E4C0000              	jmp L_error_incorrect_arity_opt
 22390                                  .L_lambda_opt_arity_check_exact_0016:
 22391 00010251 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 22392 00010254 4983C603                	add r14, 3 ; add 3 first stack values
 22393 00010258 41BF00000000            	mov r15, 0 ; r15 = index
 22394 0001025E 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 22395 00010262 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 22396 0001026A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 22397                                  .L_lambda_opt_stack_shrink_loop_0016:
 22398 0001026C 4983FE00                	cmp r14, 0
 22399 00010270 7E11                    	jle .L_make_lambda_opt_exact_finish_0016
 22400 00010272 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 22401 00010277 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 22402 0001027B 49FFCE                  	dec r14 ; next loop value
 22403 0001027E 49FFC7                  	inc r15 ; update i
 22404 00010281 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 22405                                  .L_make_lambda_opt_exact_finish_0016:
 22406 00010283 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 22407 0001028B 49FFC2                  	inc r10
 22408 0001028E 4C89542410              	mov qword [rsp + 8 * 2], r10
 22409 00010293 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0016
 22410                                  .L_lambda_opt_arity_check_more_0016:
 22411 00010298 4D89D6                  	mov r14, r10 ; r14 = num args
 22412 0001029B 4D89D7                  	mov r15, r10 ; r15 = num args
 22413 0001029E 41B900000000            	mov r9, 0; r9 = number of params 
 22414 000102A4 4D29CE                  	sub r14, r9 ; r14 = extra args
 22415 000102A7 4D01F1                  	add r9, r14 ; r9 = num args
 22416 000102AA 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 22416 000102AC [0100000000000000] 
 22417 000102B4 EB00                    	jmp .L_make_lambda_opt_arg_list_0016
 22418                                  .L_make_lambda_opt_arg_list_0016:
 22419 000102B6 4983FE00                	cmp r14, 0
 22420 000102BA 7E25                    	jle .L_make_lambda_opt_stack_fixed_0016
 22421 000102BC 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 22422 000102C1 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 22423 000102C6 E8574C0000              	call malloc                         ; Allocate memory, result in rax
 22424 000102CB C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 22425 000102CE 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 22426 000102D2 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 22427 000102D6 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 22428 000102D9 49FFC9                  	dec r9                              ; args index minus 1
 22429 000102DC 49FFCE                  	dec r14                             ; next iteration
 22430 000102DF EBD5                    	jmp .L_make_lambda_opt_arg_list_0016
 22431                                  .L_make_lambda_opt_stack_fixed_0016:
 22432 000102E1 4D89FE                  	mov r14, r15 ; r14 = num args
 22433 000102E4 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 22434 000102E7 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 22435 000102EB 41BA00000000            	mov r10, 0; r10 = num of params
 22436 000102F1 4D29D6                  	sub r14, r10 ; r14 = extra args
 22437 000102F4 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 22438 000102F7 49FFCE                  	dec r14 ; how much we need to change stack wise?
 22439 000102FA 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 22440 000102FF EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0016
 22441                                  .L_lambda_opt_stack_shrink_loop_more_0016:
 22442 00010301 4983F800                	cmp r8, 0
 22443 00010305 7E15                    	jle .L_make_lambda_opt_more_finish_0016
 22444 00010307 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 22445 0001030B 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 22446 0001030F 4D8D26                  	lea r12, [r14]
 22447 00010312 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 22448 00010317 49FFC8                  	dec r8 ; next iteration
 22449 0001031A EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0016
 22450                                  .L_make_lambda_opt_more_finish_0016:
 22451 0001031C 4D89F8                  	mov r8, r15 ; num of args
 22452 0001031F 41BA00000000            	mov r10, 0
 22453 00010325 4D29D0                  	sub r8, r10 ; num of new args
 22454 00010328 49FFC0                  	inc r8
 22455 0001032B 4C89442420              	mov qword [rsp + 8 * 4], r8
 22456 00010330 4883C410                	add rsp, 8 * 2  ; 
 22457 00010334 EB00                    	jmp .L_lambda_opt_stack_adjusted_0016
 22458                                  .L_lambda_opt_stack_adjusted_0016:
 22459 00010336 C8000000                	enter 0, 0
 22460                                  	; Initiating tail-call optimization
 22461 0001033A 488B4520                	mov rax, PARAM(0)	; param s
 22462 0001033E 50                      	push rax
 22463 0001033F 6A01                    	push 1	; Number of arguments
 22464 00010341 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22465 00010349 803805                  	cmp byte [rax], T_undefined
 22466 0001034C 0F84A34A0000            	je L_error_fvar_undefined
 22467 00010352 803804                  	cmp byte [rax], T_closure
 22468 00010355 0F851E4B0000            	jne L_error_non_closure
 22469 0001035B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22470                                  
 22471                                  	; Reclaiming the current stack frame
 22472 0001035E FF7508                  	push qword [rbp + 8]
 22473 00010361 FF7500                  	push qword [rbp]
 22474 00010364 41BA05000000            	mov r10, 1 + 4
 22475 0001036A 4C8B4518                	mov r8, COUNT
 22476 0001036E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22477 00010373 4C8D4DF8                	lea r9, [rbp - 8]
 22478                                  .L_tc_recycle_frame_loop_00bb:
 22479 00010377 4983FA00                	cmp r10, 0
 22480 0001037B 7413                    	je .L_tc_recycle_frame_done_00bb
 22481 0001037D 4D8B19                  	mov r11, qword [r9]
 22482 00010380 4D8918                  	mov qword [r8], r11
 22483 00010383 49FFCA                  	dec r10
 22484 00010386 4983E808                	sub r8, 8
 22485 0001038A 4983E908                	sub r9, 8
 22486 0001038E EBE7                    	jmp .L_tc_recycle_frame_loop_00bb
 22487                                  .L_tc_recycle_frame_done_00bb:
 22488 00010390 498D6008                	lea rsp, [r8 + 8]
 22489 00010394 5D                      	pop rbp
 22490 00010395 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22491 00010398 C9                      	leave
 22492 00010399 C21800                  	ret AND_KILL_FRAME(1)
 22493                                  .L_lambda_opt_end_0016:	; new closure is in rax
 22494 0001039C 48890425[11170000]      	mov qword [free_var_140], rax
 22495 000103A4 48B8-                   	mov rax, sob_void
 22495 000103A6 [0000000000000000] 
 22496                                  
 22497 000103AE 4889C7                  	mov rdi, rax
 22498 000103B1 E8C14D0000              	call print_sexpr_if_not_void
 22499                                  	; preparing a non-tail-call
 22500 000103B6 48B8-                   	mov rax, L_constants + 2007
 22500 000103B8 [D707000000000000] 
 22501 000103C0 50                      	push rax
 22502 000103C1 6A01                    	push 1	; arg count
 22503 000103C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22504 000103C8 E8554B0000              	call malloc
 22505 000103CD 50                      	push rax
 22506 000103CE BF00000000              	mov rdi, 8 * 0	; new rib
 22507 000103D3 E84A4B0000              	call malloc
 22508 000103D8 50                      	push rax
 22509 000103D9 BF08000000              	mov rdi, 8 * 1	; extended env
 22510 000103DE E83F4B0000              	call malloc
 22511 000103E3 488B7D10                	mov rdi, ENV
 22512 000103E7 BE00000000              	mov rsi, 0
 22513 000103EC BA01000000              	mov rdx, 1
 22514                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22515 000103F1 4883FE00                	cmp rsi, 0
 22516 000103F5 7410                    	je .L_lambda_simple_env_end_008b
 22517 000103F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22518 000103FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22519 000103FF 48FFC6                  	inc rsi
 22520 00010402 48FFC2                  	inc rdx
 22521 00010405 EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22522                                  .L_lambda_simple_env_end_008b:
 22523 00010407 5B                      	pop rbx
 22524 00010408 BE00000000              	mov rsi, 0
 22525                                  .L_lambda_simple_params_loop_008b:	; copy params
 22526 0001040D 4883FE00                	cmp rsi, 0
 22527 00010411 740E                    	je .L_lambda_simple_params_end_008b
 22528 00010413 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22529 00010418 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22530 0001041C 48FFC6                  	inc rsi
 22531 0001041F EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22532                                  .L_lambda_simple_params_end_008b:
 22533 00010421 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22534 00010424 4889C3                  	mov rbx, rax
 22535 00010427 58                      	pop rax
 22536 00010428 C60004                  	mov byte [rax], T_closure
 22537 0001042B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22538 0001042F 48C74009[3C040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22539 00010437 E926030000              	jmp .L_lambda_simple_end_008b
 22540                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22541 0001043C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22542 00010442 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22543 00010444 FF742410                	push qword [rsp + 8 * 2]
 22544 00010448 6A01                    	push 1
 22545 0001044A E98C4A0000              	jmp L_error_incorrect_arity_simple
 22546                                  .L_lambda_simple_arity_check_ok_008b:
 22547 0001044F C8000000                	enter 0, 0
 22548 00010453 BF08000000              	mov rdi, 8 * 1
 22549 00010458 E8C54A0000              	call malloc
 22550 0001045D 488B5D20                	mov rbx, PARAM(0)
 22551 00010461 488918                  	mov qword [rax], rbx
 22552 00010464 48894520                	mov PARAM(0), rax
 22553 00010468 48B8-                   	mov rax, sob_void
 22553 0001046A [0000000000000000] 
 22554                                  
 22555 00010472 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22556 00010477 E8A64A0000              	call malloc
 22557 0001047C 50                      	push rax
 22558 0001047D BF08000000              	mov rdi, 8 * 1	; new rib
 22559 00010482 E89B4A0000              	call malloc
 22560 00010487 50                      	push rax
 22561 00010488 BF10000000              	mov rdi, 8 * 2	; extended env
 22562 0001048D E8904A0000              	call malloc
 22563 00010492 488B7D10                	mov rdi, ENV
 22564 00010496 BE00000000              	mov rsi, 0
 22565 0001049B BA01000000              	mov rdx, 1
 22566                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22567 000104A0 4883FE01                	cmp rsi, 1
 22568 000104A4 7410                    	je .L_lambda_simple_env_end_008c
 22569 000104A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22570 000104AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22571 000104AE 48FFC6                  	inc rsi
 22572 000104B1 48FFC2                  	inc rdx
 22573 000104B4 EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22574                                  .L_lambda_simple_env_end_008c:
 22575 000104B6 5B                      	pop rbx
 22576 000104B7 BE00000000              	mov rsi, 0
 22577                                  .L_lambda_simple_params_loop_008c:	; copy params
 22578 000104BC 4883FE01                	cmp rsi, 1
 22579 000104C0 740E                    	je .L_lambda_simple_params_end_008c
 22580 000104C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22581 000104C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22582 000104CB 48FFC6                  	inc rsi
 22583 000104CE EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22584                                  .L_lambda_simple_params_end_008c:
 22585 000104D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22586 000104D3 4889C3                  	mov rbx, rax
 22587 000104D6 58                      	pop rax
 22588 000104D7 C60004                  	mov byte [rax], T_closure
 22589 000104DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22590 000104DE 48C74009[EB040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22591 000104E6 E941010000              	jmp .L_lambda_simple_end_008c
 22592                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22593 000104EB 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22594 000104F1 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22595 000104F3 FF742410                	push qword [rsp + 8 * 2]
 22596 000104F7 6A03                    	push 3
 22597 000104F9 E9DD490000              	jmp L_error_incorrect_arity_simple
 22598                                  .L_lambda_simple_arity_check_ok_008c:
 22599 000104FE C8000000                	enter 0, 0
 22600                                  	; preparing a non-tail-call
 22601 00010502 488B4530                	mov rax, PARAM(2)	; param n
 22602 00010506 50                      	push rax
 22603 00010507 488B4528                	mov rax, PARAM(1)	; param i
 22604 0001050B 50                      	push rax
 22605 0001050C 6A02                    	push 2	; arg count
 22606 0001050E 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 22607 00010516 803805                  	cmp byte [rax], T_undefined
 22608 00010519 0F84D6480000            	je L_error_fvar_undefined
 22609 0001051F 803804                  	cmp byte [rax], T_closure
 22610 00010522 0F8551490000            	jne L_error_non_closure
 22611 00010528 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22612 0001052B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22613 0001052E 483D[02000000]          	cmp rax, sob_boolean_false
 22614 00010534 0F84E4000000            	je .L_if_else_0069
 22615                                  	; Initiating tail-call optimization
 22616                                  	; preparing a non-tail-call
 22617 0001053A 488B4530                	mov rax, PARAM(2)	; param n
 22618 0001053E 50                      	push rax
 22619                                  	; preparing a non-tail-call
 22620 0001053F 48B8-                   	mov rax, L_constants + 2270
 22620 00010541 [DE08000000000000] 
 22621 00010549 50                      	push rax
 22622 0001054A 488B4528                	mov rax, PARAM(1)	; param i
 22623 0001054E 50                      	push rax
 22624 0001054F 6A02                    	push 2	; arg count
 22625 00010551 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22626 00010559 803805                  	cmp byte [rax], T_undefined
 22627 0001055C 0F8493480000            	je L_error_fvar_undefined
 22628 00010562 803804                  	cmp byte [rax], T_closure
 22629 00010565 0F850E490000            	jne L_error_non_closure
 22630 0001056B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22631 0001056E FF5009                  	call SOB_CLOSURE_CODE(rax)
 22632 00010571 50                      	push rax
 22633 00010572 488B4520                	mov rax, PARAM(0)	; param str
 22634 00010576 50                      	push rax
 22635 00010577 6A03                    	push 3	; arg count
 22636 00010579 488B4510                	mov rax, ENV
 22637 0001057D 488B00                  	mov rax, qword [rax + 8 * 0]
 22638 00010580 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22639 00010583 488B00                  	mov rax, qword [rax]
 22640 00010586 803804                  	cmp byte [rax], T_closure
 22641 00010589 0F85EA480000            	jne L_error_non_closure
 22642 0001058F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22643 00010592 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22644 00010595 50                      	push rax
 22645                                  	; preparing a non-tail-call
 22646 00010596 488B4528                	mov rax, PARAM(1)	; param i
 22647 0001059A 50                      	push rax
 22648 0001059B 488B4520                	mov rax, PARAM(0)	; param str
 22649 0001059F 50                      	push rax
 22650 000105A0 6A02                    	push 2	; arg count
 22651 000105A2 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 22652 000105AA 803805                  	cmp byte [rax], T_undefined
 22653 000105AD 0F8442480000            	je L_error_fvar_undefined
 22654 000105B3 803804                  	cmp byte [rax], T_closure
 22655 000105B6 0F85BD480000            	jne L_error_non_closure
 22656 000105BC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22657 000105BF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22658 000105C2 50                      	push rax
 22659 000105C3 6A02                    	push 2	; Number of arguments
 22660 000105C5 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 22661 000105CD 803805                  	cmp byte [rax], T_undefined
 22662 000105D0 0F841F480000            	je L_error_fvar_undefined
 22663 000105D6 803804                  	cmp byte [rax], T_closure
 22664 000105D9 0F859A480000            	jne L_error_non_closure
 22665 000105DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22666                                  
 22667                                  	; Reclaiming the current stack frame
 22668 000105E2 FF7508                  	push qword [rbp + 8]
 22669 000105E5 FF7500                  	push qword [rbp]
 22670 000105E8 41BA06000000            	mov r10, 2 + 4
 22671 000105EE 4C8B4518                	mov r8, COUNT
 22672 000105F2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22673 000105F7 4C8D4DF8                	lea r9, [rbp - 8]
 22674                                  .L_tc_recycle_frame_loop_00bc:
 22675 000105FB 4983FA00                	cmp r10, 0
 22676 000105FF 7413                    	je .L_tc_recycle_frame_done_00bc
 22677 00010601 4D8B19                  	mov r11, qword [r9]
 22678 00010604 4D8918                  	mov qword [r8], r11
 22679 00010607 49FFCA                  	dec r10
 22680 0001060A 4983E808                	sub r8, 8
 22681 0001060E 4983E908                	sub r9, 8
 22682 00010612 EBE7                    	jmp .L_tc_recycle_frame_loop_00bc
 22683                                  .L_tc_recycle_frame_done_00bc:
 22684 00010614 498D6008                	lea rsp, [r8 + 8]
 22685 00010618 5D                      	pop rbp
 22686 00010619 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22687 0001061C EB0A                    	jmp .L_if_end_0069
 22688                                  .L_if_else_0069:
 22689 0001061E 48B8-                   	mov rax, L_constants + 1
 22689 00010620 [0100000000000000] 
 22690                                  .L_if_end_0069:
 22691 00010628 C9                      	leave
 22692 00010629 C22800                  	ret AND_KILL_FRAME(3)
 22693                                  .L_lambda_simple_end_008c:	; new closure is in rax
 22694 0001062C 50                      	push rax
 22695 0001062D 488B4520                	mov rax, PARAM(0)	; param run
 22696 00010631 8F00                    	pop qword [rax]
 22697 00010633 48B8-                   	mov rax, sob_void
 22697 00010635 [0000000000000000] 
 22698                                  
 22699 0001063D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22700 00010642 E8DB480000              	call malloc
 22701 00010647 50                      	push rax
 22702 00010648 BF08000000              	mov rdi, 8 * 1	; new rib
 22703 0001064D E8D0480000              	call malloc
 22704 00010652 50                      	push rax
 22705 00010653 BF10000000              	mov rdi, 8 * 2	; extended env
 22706 00010658 E8C5480000              	call malloc
 22707 0001065D 488B7D10                	mov rdi, ENV
 22708 00010661 BE00000000              	mov rsi, 0
 22709 00010666 BA01000000              	mov rdx, 1
 22710                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 22711 0001066B 4883FE01                	cmp rsi, 1
 22712 0001066F 7410                    	je .L_lambda_simple_env_end_008d
 22713 00010671 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22714 00010675 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22715 00010679 48FFC6                  	inc rsi
 22716 0001067C 48FFC2                  	inc rdx
 22717 0001067F EBEA                    	jmp .L_lambda_simple_env_loop_008d
 22718                                  .L_lambda_simple_env_end_008d:
 22719 00010681 5B                      	pop rbx
 22720 00010682 BE00000000              	mov rsi, 0
 22721                                  .L_lambda_simple_params_loop_008d:	; copy params
 22722 00010687 4883FE01                	cmp rsi, 1
 22723 0001068B 740E                    	je .L_lambda_simple_params_end_008d
 22724 0001068D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22725 00010692 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22726 00010696 48FFC6                  	inc rsi
 22727 00010699 EBEC                    	jmp .L_lambda_simple_params_loop_008d
 22728                                  .L_lambda_simple_params_end_008d:
 22729 0001069B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22730 0001069E 4889C3                  	mov rbx, rax
 22731 000106A1 58                      	pop rax
 22732 000106A2 C60004                  	mov byte [rax], T_closure
 22733 000106A5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22734 000106A9 48C74009[B6060100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 22735 000106B1 E9A8000000              	jmp .L_lambda_simple_end_008d
 22736                                  .L_lambda_simple_code_008d:	; lambda-simple body
 22737 000106B6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22738 000106BC 740B                    	je .L_lambda_simple_arity_check_ok_008d
 22739 000106BE FF742410                	push qword [rsp + 8 * 2]
 22740 000106C2 6A01                    	push 1
 22741 000106C4 E912480000              	jmp L_error_incorrect_arity_simple
 22742                                  .L_lambda_simple_arity_check_ok_008d:
 22743 000106C9 C8000000                	enter 0, 0
 22744                                  	; Initiating tail-call optimization
 22745                                  	; preparing a non-tail-call
 22746 000106CD 488B4520                	mov rax, PARAM(0)	; param str
 22747 000106D1 50                      	push rax
 22748 000106D2 6A01                    	push 1	; arg count
 22749 000106D4 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 22750 000106DC 803805                  	cmp byte [rax], T_undefined
 22751 000106DF 0F8410470000            	je L_error_fvar_undefined
 22752 000106E5 803804                  	cmp byte [rax], T_closure
 22753 000106E8 0F858B470000            	jne L_error_non_closure
 22754 000106EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22755 000106F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22756 000106F4 50                      	push rax
 22757 000106F5 48B8-                   	mov rax, L_constants + 2135
 22757 000106F7 [5708000000000000] 
 22758 000106FF 50                      	push rax
 22759 00010700 488B4520                	mov rax, PARAM(0)	; param str
 22760 00010704 50                      	push rax
 22761 00010705 6A03                    	push 3	; Number of arguments
 22762 00010707 488B4510                	mov rax, ENV
 22763 0001070B 488B00                  	mov rax, qword [rax + 8 * 0]
 22764 0001070E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22765 00010711 488B00                  	mov rax, qword [rax]
 22766 00010714 803804                  	cmp byte [rax], T_closure
 22767 00010717 0F855C470000            	jne L_error_non_closure
 22768 0001071D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22769                                  
 22770                                  	; Reclaiming the current stack frame
 22771 00010720 FF7508                  	push qword [rbp + 8]
 22772 00010723 FF7500                  	push qword [rbp]
 22773 00010726 41BA07000000            	mov r10, 3 + 4
 22774 0001072C 4C8B4518                	mov r8, COUNT
 22775 00010730 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22776 00010735 4C8D4DF8                	lea r9, [rbp - 8]
 22777                                  .L_tc_recycle_frame_loop_00bd:
 22778 00010739 4983FA00                	cmp r10, 0
 22779 0001073D 7413                    	je .L_tc_recycle_frame_done_00bd
 22780 0001073F 4D8B19                  	mov r11, qword [r9]
 22781 00010742 4D8918                  	mov qword [r8], r11
 22782 00010745 49FFCA                  	dec r10
 22783 00010748 4983E808                	sub r8, 8
 22784 0001074C 4983E908                	sub r9, 8
 22785 00010750 EBE7                    	jmp .L_tc_recycle_frame_loop_00bd
 22786                                  .L_tc_recycle_frame_done_00bd:
 22787 00010752 498D6008                	lea rsp, [r8 + 8]
 22788 00010756 5D                      	pop rbp
 22789 00010757 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22790 0001075A C9                      	leave
 22791 0001075B C21800                  	ret AND_KILL_FRAME(1)
 22792                                  .L_lambda_simple_end_008d:	; new closure is in rax
 22793 0001075E C9                      	leave
 22794 0001075F C21800                  	ret AND_KILL_FRAME(1)
 22795                                  .L_lambda_simple_end_008b:	; new closure is in rax
 22796 00010762 803804                  	cmp byte [rax], T_closure
 22797 00010765 0F850E470000            	jne L_error_non_closure
 22798 0001076B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22799 0001076E FF5009                  	call SOB_CLOSURE_CODE(rax)
 22800 00010771 48890425[AC150000]      	mov qword [free_var_119], rax
 22801 00010779 48B8-                   	mov rax, sob_void
 22801 0001077B [0000000000000000] 
 22802                                  
 22803 00010783 4889C7                  	mov rdi, rax
 22804 00010786 E8EC490000              	call print_sexpr_if_not_void
 22805                                  	; preparing a non-tail-call
 22806 0001078B 48B8-                   	mov rax, L_constants + 2007
 22806 0001078D [D707000000000000] 
 22807 00010795 50                      	push rax
 22808 00010796 6A01                    	push 1	; arg count
 22809 00010798 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22810 0001079D E880470000              	call malloc
 22811 000107A2 50                      	push rax
 22812 000107A3 BF00000000              	mov rdi, 8 * 0	; new rib
 22813 000107A8 E875470000              	call malloc
 22814 000107AD 50                      	push rax
 22815 000107AE BF08000000              	mov rdi, 8 * 1	; extended env
 22816 000107B3 E86A470000              	call malloc
 22817 000107B8 488B7D10                	mov rdi, ENV
 22818 000107BC BE00000000              	mov rsi, 0
 22819 000107C1 BA01000000              	mov rdx, 1
 22820                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 22821 000107C6 4883FE00                	cmp rsi, 0
 22822 000107CA 7410                    	je .L_lambda_simple_env_end_008e
 22823 000107CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22824 000107D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22825 000107D4 48FFC6                  	inc rsi
 22826 000107D7 48FFC2                  	inc rdx
 22827 000107DA EBEA                    	jmp .L_lambda_simple_env_loop_008e
 22828                                  .L_lambda_simple_env_end_008e:
 22829 000107DC 5B                      	pop rbx
 22830 000107DD BE00000000              	mov rsi, 0
 22831                                  .L_lambda_simple_params_loop_008e:	; copy params
 22832 000107E2 4883FE00                	cmp rsi, 0
 22833 000107E6 740E                    	je .L_lambda_simple_params_end_008e
 22834 000107E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22835 000107ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22836 000107F1 48FFC6                  	inc rsi
 22837 000107F4 EBEC                    	jmp .L_lambda_simple_params_loop_008e
 22838                                  .L_lambda_simple_params_end_008e:
 22839 000107F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22840 000107F9 4889C3                  	mov rbx, rax
 22841 000107FC 58                      	pop rax
 22842 000107FD C60004                  	mov byte [rax], T_closure
 22843 00010800 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22844 00010804 48C74009[11080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 22845 0001080C E926030000              	jmp .L_lambda_simple_end_008e
 22846                                  .L_lambda_simple_code_008e:	; lambda-simple body
 22847 00010811 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22848 00010817 740B                    	je .L_lambda_simple_arity_check_ok_008e
 22849 00010819 FF742410                	push qword [rsp + 8 * 2]
 22850 0001081D 6A01                    	push 1
 22851 0001081F E9B7460000              	jmp L_error_incorrect_arity_simple
 22852                                  .L_lambda_simple_arity_check_ok_008e:
 22853 00010824 C8000000                	enter 0, 0
 22854 00010828 BF08000000              	mov rdi, 8 * 1
 22855 0001082D E8F0460000              	call malloc
 22856 00010832 488B5D20                	mov rbx, PARAM(0)
 22857 00010836 488918                  	mov qword [rax], rbx
 22858 00010839 48894520                	mov PARAM(0), rax
 22859 0001083D 48B8-                   	mov rax, sob_void
 22859 0001083F [0000000000000000] 
 22860                                  
 22861 00010847 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22862 0001084C E8D1460000              	call malloc
 22863 00010851 50                      	push rax
 22864 00010852 BF08000000              	mov rdi, 8 * 1	; new rib
 22865 00010857 E8C6460000              	call malloc
 22866 0001085C 50                      	push rax
 22867 0001085D BF10000000              	mov rdi, 8 * 2	; extended env
 22868 00010862 E8BB460000              	call malloc
 22869 00010867 488B7D10                	mov rdi, ENV
 22870 0001086B BE00000000              	mov rsi, 0
 22871 00010870 BA01000000              	mov rdx, 1
 22872                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 22873 00010875 4883FE01                	cmp rsi, 1
 22874 00010879 7410                    	je .L_lambda_simple_env_end_008f
 22875 0001087B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22876 0001087F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22877 00010883 48FFC6                  	inc rsi
 22878 00010886 48FFC2                  	inc rdx
 22879 00010889 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 22880                                  .L_lambda_simple_env_end_008f:
 22881 0001088B 5B                      	pop rbx
 22882 0001088C BE00000000              	mov rsi, 0
 22883                                  .L_lambda_simple_params_loop_008f:	; copy params
 22884 00010891 4883FE01                	cmp rsi, 1
 22885 00010895 740E                    	je .L_lambda_simple_params_end_008f
 22886 00010897 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22887 0001089C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22888 000108A0 48FFC6                  	inc rsi
 22889 000108A3 EBEC                    	jmp .L_lambda_simple_params_loop_008f
 22890                                  .L_lambda_simple_params_end_008f:
 22891 000108A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22892 000108A8 4889C3                  	mov rbx, rax
 22893 000108AB 58                      	pop rax
 22894 000108AC C60004                  	mov byte [rax], T_closure
 22895 000108AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22896 000108B3 48C74009[C0080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 22897 000108BB E941010000              	jmp .L_lambda_simple_end_008f
 22898                                  .L_lambda_simple_code_008f:	; lambda-simple body
 22899 000108C0 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22900 000108C6 740B                    	je .L_lambda_simple_arity_check_ok_008f
 22901 000108C8 FF742410                	push qword [rsp + 8 * 2]
 22902 000108CC 6A03                    	push 3
 22903 000108CE E908460000              	jmp L_error_incorrect_arity_simple
 22904                                  .L_lambda_simple_arity_check_ok_008f:
 22905 000108D3 C8000000                	enter 0, 0
 22906                                  	; preparing a non-tail-call
 22907 000108D7 488B4530                	mov rax, PARAM(2)	; param n
 22908 000108DB 50                      	push rax
 22909 000108DC 488B4528                	mov rax, PARAM(1)	; param i
 22910 000108E0 50                      	push rax
 22911 000108E1 6A02                    	push 2	; arg count
 22912 000108E3 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 22913 000108EB 803805                  	cmp byte [rax], T_undefined
 22914 000108EE 0F8401450000            	je L_error_fvar_undefined
 22915 000108F4 803804                  	cmp byte [rax], T_closure
 22916 000108F7 0F857C450000            	jne L_error_non_closure
 22917 000108FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 22918 00010900 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22919 00010903 483D[02000000]          	cmp rax, sob_boolean_false
 22920 00010909 0F84E4000000            	je .L_if_else_006a
 22921                                  	; Initiating tail-call optimization
 22922                                  	; preparing a non-tail-call
 22923 0001090F 488B4530                	mov rax, PARAM(2)	; param n
 22924 00010913 50                      	push rax
 22925                                  	; preparing a non-tail-call
 22926 00010914 48B8-                   	mov rax, L_constants + 2270
 22926 00010916 [DE08000000000000] 
 22927 0001091E 50                      	push rax
 22928 0001091F 488B4528                	mov rax, PARAM(1)	; param i
 22929 00010923 50                      	push rax
 22930 00010924 6A02                    	push 2	; arg count
 22931 00010926 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22932 0001092E 803805                  	cmp byte [rax], T_undefined
 22933 00010931 0F84BE440000            	je L_error_fvar_undefined
 22934 00010937 803804                  	cmp byte [rax], T_closure
 22935 0001093A 0F8539450000            	jne L_error_non_closure
 22936 00010940 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22937 00010943 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22938 00010946 50                      	push rax
 22939 00010947 488B4520                	mov rax, PARAM(0)	; param v
 22940 0001094B 50                      	push rax
 22941 0001094C 6A03                    	push 3	; arg count
 22942 0001094E 488B4510                	mov rax, ENV
 22943 00010952 488B00                  	mov rax, qword [rax + 8 * 0]
 22944 00010955 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22945 00010958 488B00                  	mov rax, qword [rax]
 22946 0001095B 803804                  	cmp byte [rax], T_closure
 22947 0001095E 0F8515450000            	jne L_error_non_closure
 22948 00010964 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22949 00010967 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22950 0001096A 50                      	push rax
 22951                                  	; preparing a non-tail-call
 22952 0001096B 488B4528                	mov rax, PARAM(1)	; param i
 22953 0001096F 50                      	push rax
 22954 00010970 488B4520                	mov rax, PARAM(0)	; param v
 22955 00010974 50                      	push rax
 22956 00010975 6A02                    	push 2	; arg count
 22957 00010977 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 22958 0001097F 803805                  	cmp byte [rax], T_undefined
 22959 00010982 0F846D440000            	je L_error_fvar_undefined
 22960 00010988 803804                  	cmp byte [rax], T_closure
 22961 0001098B 0F85E8440000            	jne L_error_non_closure
 22962 00010991 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22963 00010994 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22964 00010997 50                      	push rax
 22965 00010998 6A02                    	push 2	; Number of arguments
 22966 0001099A 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 22967 000109A2 803805                  	cmp byte [rax], T_undefined
 22968 000109A5 0F844A440000            	je L_error_fvar_undefined
 22969 000109AB 803804                  	cmp byte [rax], T_closure
 22970 000109AE 0F85C5440000            	jne L_error_non_closure
 22971 000109B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22972                                  
 22973                                  	; Reclaiming the current stack frame
 22974 000109B7 FF7508                  	push qword [rbp + 8]
 22975 000109BA FF7500                  	push qword [rbp]
 22976 000109BD 41BA06000000            	mov r10, 2 + 4
 22977 000109C3 4C8B4518                	mov r8, COUNT
 22978 000109C7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22979 000109CC 4C8D4DF8                	lea r9, [rbp - 8]
 22980                                  .L_tc_recycle_frame_loop_00be:
 22981 000109D0 4983FA00                	cmp r10, 0
 22982 000109D4 7413                    	je .L_tc_recycle_frame_done_00be
 22983 000109D6 4D8B19                  	mov r11, qword [r9]
 22984 000109D9 4D8918                  	mov qword [r8], r11
 22985 000109DC 49FFCA                  	dec r10
 22986 000109DF 4983E808                	sub r8, 8
 22987 000109E3 4983E908                	sub r9, 8
 22988 000109E7 EBE7                    	jmp .L_tc_recycle_frame_loop_00be
 22989                                  .L_tc_recycle_frame_done_00be:
 22990 000109E9 498D6008                	lea rsp, [r8 + 8]
 22991 000109ED 5D                      	pop rbp
 22992 000109EE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22993 000109F1 EB0A                    	jmp .L_if_end_006a
 22994                                  .L_if_else_006a:
 22995 000109F3 48B8-                   	mov rax, L_constants + 1
 22995 000109F5 [0100000000000000] 
 22996                                  .L_if_end_006a:
 22997 000109FD C9                      	leave
 22998 000109FE C22800                  	ret AND_KILL_FRAME(3)
 22999                                  .L_lambda_simple_end_008f:	; new closure is in rax
 23000 00010A01 50                      	push rax
 23001 00010A02 488B4520                	mov rax, PARAM(0)	; param run
 23002 00010A06 8F00                    	pop qword [rax]
 23003 00010A08 48B8-                   	mov rax, sob_void
 23003 00010A0A [0000000000000000] 
 23004                                  
 23005 00010A12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23006 00010A17 E806450000              	call malloc
 23007 00010A1C 50                      	push rax
 23008 00010A1D BF08000000              	mov rdi, 8 * 1	; new rib
 23009 00010A22 E8FB440000              	call malloc
 23010 00010A27 50                      	push rax
 23011 00010A28 BF10000000              	mov rdi, 8 * 2	; extended env
 23012 00010A2D E8F0440000              	call malloc
 23013 00010A32 488B7D10                	mov rdi, ENV
 23014 00010A36 BE00000000              	mov rsi, 0
 23015 00010A3B BA01000000              	mov rdx, 1
 23016                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 23017 00010A40 4883FE01                	cmp rsi, 1
 23018 00010A44 7410                    	je .L_lambda_simple_env_end_0090
 23019 00010A46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23020 00010A4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23021 00010A4E 48FFC6                  	inc rsi
 23022 00010A51 48FFC2                  	inc rdx
 23023 00010A54 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 23024                                  .L_lambda_simple_env_end_0090:
 23025 00010A56 5B                      	pop rbx
 23026 00010A57 BE00000000              	mov rsi, 0
 23027                                  .L_lambda_simple_params_loop_0090:	; copy params
 23028 00010A5C 4883FE01                	cmp rsi, 1
 23029 00010A60 740E                    	je .L_lambda_simple_params_end_0090
 23030 00010A62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23031 00010A67 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23032 00010A6B 48FFC6                  	inc rsi
 23033 00010A6E EBEC                    	jmp .L_lambda_simple_params_loop_0090
 23034                                  .L_lambda_simple_params_end_0090:
 23035 00010A70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23036 00010A73 4889C3                  	mov rbx, rax
 23037 00010A76 58                      	pop rax
 23038 00010A77 C60004                  	mov byte [rax], T_closure
 23039 00010A7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23040 00010A7E 48C74009[8B0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 23041 00010A86 E9A8000000              	jmp .L_lambda_simple_end_0090
 23042                                  .L_lambda_simple_code_0090:	; lambda-simple body
 23043 00010A8B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23044 00010A91 740B                    	je .L_lambda_simple_arity_check_ok_0090
 23045 00010A93 FF742410                	push qword [rsp + 8 * 2]
 23046 00010A97 6A01                    	push 1
 23047 00010A99 E93D440000              	jmp L_error_incorrect_arity_simple
 23048                                  .L_lambda_simple_arity_check_ok_0090:
 23049 00010A9E C8000000                	enter 0, 0
 23050                                  	; Initiating tail-call optimization
 23051                                  	; preparing a non-tail-call
 23052 00010AA2 488B4520                	mov rax, PARAM(0)	; param v
 23053 00010AA6 50                      	push rax
 23054 00010AA7 6A01                    	push 1	; arg count
 23055 00010AA9 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23056 00010AB1 803805                  	cmp byte [rax], T_undefined
 23057 00010AB4 0F843B430000            	je L_error_fvar_undefined
 23058 00010ABA 803804                  	cmp byte [rax], T_closure
 23059 00010ABD 0F85B6430000            	jne L_error_non_closure
 23060 00010AC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23061 00010AC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23062 00010AC9 50                      	push rax
 23063 00010ACA 48B8-                   	mov rax, L_constants + 2135
 23063 00010ACC [5708000000000000] 
 23064 00010AD4 50                      	push rax
 23065 00010AD5 488B4520                	mov rax, PARAM(0)	; param v
 23066 00010AD9 50                      	push rax
 23067 00010ADA 6A03                    	push 3	; Number of arguments
 23068 00010ADC 488B4510                	mov rax, ENV
 23069 00010AE0 488B00                  	mov rax, qword [rax + 8 * 0]
 23070 00010AE3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23071 00010AE6 488B00                  	mov rax, qword [rax]
 23072 00010AE9 803804                  	cmp byte [rax], T_closure
 23073 00010AEC 0F8587430000            	jne L_error_non_closure
 23074 00010AF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23075                                  
 23076                                  	; Reclaiming the current stack frame
 23077 00010AF5 FF7508                  	push qword [rbp + 8]
 23078 00010AF8 FF7500                  	push qword [rbp]
 23079 00010AFB 41BA07000000            	mov r10, 3 + 4
 23080 00010B01 4C8B4518                	mov r8, COUNT
 23081 00010B05 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23082 00010B0A 4C8D4DF8                	lea r9, [rbp - 8]
 23083                                  .L_tc_recycle_frame_loop_00bf:
 23084 00010B0E 4983FA00                	cmp r10, 0
 23085 00010B12 7413                    	je .L_tc_recycle_frame_done_00bf
 23086 00010B14 4D8B19                  	mov r11, qword [r9]
 23087 00010B17 4D8918                  	mov qword [r8], r11
 23088 00010B1A 49FFCA                  	dec r10
 23089 00010B1D 4983E808                	sub r8, 8
 23090 00010B21 4983E908                	sub r9, 8
 23091 00010B25 EBE7                    	jmp .L_tc_recycle_frame_loop_00bf
 23092                                  .L_tc_recycle_frame_done_00bf:
 23093 00010B27 498D6008                	lea rsp, [r8 + 8]
 23094 00010B2B 5D                      	pop rbp
 23095 00010B2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23096 00010B2F C9                      	leave
 23097 00010B30 C21800                  	ret AND_KILL_FRAME(1)
 23098                                  .L_lambda_simple_end_0090:	; new closure is in rax
 23099 00010B33 C9                      	leave
 23100 00010B34 C21800                  	ret AND_KILL_FRAME(1)
 23101                                  .L_lambda_simple_end_008e:	; new closure is in rax
 23102 00010B37 803804                  	cmp byte [rax], T_closure
 23103 00010B3A 0F8539430000            	jne L_error_non_closure
 23104 00010B40 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23105 00010B43 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23106 00010B46 48890425[22170000]      	mov qword [free_var_141], rax
 23107 00010B4E 48B8-                   	mov rax, sob_void
 23107 00010B50 [0000000000000000] 
 23108                                  
 23109 00010B58 4889C7                  	mov rdi, rax
 23110 00010B5B E817460000              	call print_sexpr_if_not_void
 23111 00010B60 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23112 00010B65 E8B8430000              	call malloc
 23113 00010B6A 50                      	push rax
 23114 00010B6B BF00000000              	mov rdi, 8 * 0	; new rib
 23115 00010B70 E8AD430000              	call malloc
 23116 00010B75 50                      	push rax
 23117 00010B76 BF08000000              	mov rdi, 8 * 1	; extended env
 23118 00010B7B E8A2430000              	call malloc
 23119 00010B80 488B7D10                	mov rdi, ENV
 23120 00010B84 BE00000000              	mov rsi, 0
 23121 00010B89 BA01000000              	mov rdx, 1
 23122                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 23123 00010B8E 4883FE00                	cmp rsi, 0
 23124 00010B92 7410                    	je .L_lambda_simple_env_end_0091
 23125 00010B94 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23126 00010B98 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23127 00010B9C 48FFC6                  	inc rsi
 23128 00010B9F 48FFC2                  	inc rdx
 23129 00010BA2 EBEA                    	jmp .L_lambda_simple_env_loop_0091
 23130                                  .L_lambda_simple_env_end_0091:
 23131 00010BA4 5B                      	pop rbx
 23132 00010BA5 BE00000000              	mov rsi, 0
 23133                                  .L_lambda_simple_params_loop_0091:	; copy params
 23134 00010BAA 4883FE00                	cmp rsi, 0
 23135 00010BAE 740E                    	je .L_lambda_simple_params_end_0091
 23136 00010BB0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23137 00010BB5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23138 00010BB9 48FFC6                  	inc rsi
 23139 00010BBC EBEC                    	jmp .L_lambda_simple_params_loop_0091
 23140                                  .L_lambda_simple_params_end_0091:
 23141 00010BBE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23142 00010BC1 4889C3                  	mov rbx, rax
 23143 00010BC4 58                      	pop rax
 23144 00010BC5 C60004                  	mov byte [rax], T_closure
 23145 00010BC8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23146 00010BCC 48C74009[D90B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 23147 00010BD4 E99C000000              	jmp .L_lambda_simple_end_0091
 23148                                  .L_lambda_simple_code_0091:	; lambda-simple body
 23149 00010BD9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23150 00010BDF 740B                    	je .L_lambda_simple_arity_check_ok_0091
 23151 00010BE1 FF742410                	push qword [rsp + 8 * 2]
 23152 00010BE5 6A01                    	push 1
 23153 00010BE7 E9EF420000              	jmp L_error_incorrect_arity_simple
 23154                                  .L_lambda_simple_arity_check_ok_0091:
 23155 00010BEC C8000000                	enter 0, 0
 23156                                  	; Initiating tail-call optimization
 23157 00010BF0 488B4520                	mov rax, PARAM(0)	; param n
 23158 00010BF4 50                      	push rax
 23159                                  	; preparing a non-tail-call
 23160 00010BF5 6A00                    	push 0	; arg count
 23161 00010BF7 488B0425[00170000]      	mov rax, qword [free_var_139]	; free var trng
 23162 00010BFF 803805                  	cmp byte [rax], T_undefined
 23163 00010C02 0F84ED410000            	je L_error_fvar_undefined
 23164 00010C08 803804                  	cmp byte [rax], T_closure
 23165 00010C0B 0F8568420000            	jne L_error_non_closure
 23166 00010C11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23167 00010C14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23168 00010C17 50                      	push rax
 23169 00010C18 6A02                    	push 2	; Number of arguments
 23170 00010C1A 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23171 00010C22 803805                  	cmp byte [rax], T_undefined
 23172 00010C25 0F84CA410000            	je L_error_fvar_undefined
 23173 00010C2B 803804                  	cmp byte [rax], T_closure
 23174 00010C2E 0F8545420000            	jne L_error_non_closure
 23175 00010C34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23176                                  
 23177                                  	; Reclaiming the current stack frame
 23178 00010C37 FF7508                  	push qword [rbp + 8]
 23179 00010C3A FF7500                  	push qword [rbp]
 23180 00010C3D 41BA06000000            	mov r10, 2 + 4
 23181 00010C43 4C8B4518                	mov r8, COUNT
 23182 00010C47 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23183 00010C4C 4C8D4DF8                	lea r9, [rbp - 8]
 23184                                  .L_tc_recycle_frame_loop_00c0:
 23185 00010C50 4983FA00                	cmp r10, 0
 23186 00010C54 7413                    	je .L_tc_recycle_frame_done_00c0
 23187 00010C56 4D8B19                  	mov r11, qword [r9]
 23188 00010C59 4D8918                  	mov qword [r8], r11
 23189 00010C5C 49FFCA                  	dec r10
 23190 00010C5F 4983E808                	sub r8, 8
 23191 00010C63 4983E908                	sub r9, 8
 23192 00010C67 EBE7                    	jmp .L_tc_recycle_frame_loop_00c0
 23193                                  .L_tc_recycle_frame_done_00c0:
 23194 00010C69 498D6008                	lea rsp, [r8 + 8]
 23195 00010C6D 5D                      	pop rbp
 23196 00010C6E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23197 00010C71 C9                      	leave
 23198 00010C72 C21800                  	ret AND_KILL_FRAME(1)
 23199                                  .L_lambda_simple_end_0091:	; new closure is in rax
 23200 00010C75 48890425[46150000]      	mov qword [free_var_113], rax
 23201 00010C7D 48B8-                   	mov rax, sob_void
 23201 00010C7F [0000000000000000] 
 23202                                  
 23203 00010C87 4889C7                  	mov rdi, rax
 23204 00010C8A E8E8440000              	call print_sexpr_if_not_void
 23205 00010C8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23206 00010C94 E889420000              	call malloc
 23207 00010C99 50                      	push rax
 23208 00010C9A BF00000000              	mov rdi, 8 * 0	; new rib
 23209 00010C9F E87E420000              	call malloc
 23210 00010CA4 50                      	push rax
 23211 00010CA5 BF08000000              	mov rdi, 8 * 1	; extended env
 23212 00010CAA E873420000              	call malloc
 23213 00010CAF 488B7D10                	mov rdi, ENV
 23214 00010CB3 BE00000000              	mov rsi, 0
 23215 00010CB8 BA01000000              	mov rdx, 1
 23216                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23217 00010CBD 4883FE00                	cmp rsi, 0
 23218 00010CC1 7410                    	je .L_lambda_simple_env_end_0092
 23219 00010CC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23220 00010CC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23221 00010CCB 48FFC6                  	inc rsi
 23222 00010CCE 48FFC2                  	inc rdx
 23223 00010CD1 EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23224                                  .L_lambda_simple_env_end_0092:
 23225 00010CD3 5B                      	pop rbx
 23226 00010CD4 BE00000000              	mov rsi, 0
 23227                                  .L_lambda_simple_params_loop_0092:	; copy params
 23228 00010CD9 4883FE00                	cmp rsi, 0
 23229 00010CDD 740E                    	je .L_lambda_simple_params_end_0092
 23230 00010CDF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23231 00010CE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23232 00010CE8 48FFC6                  	inc rsi
 23233 00010CEB EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23234                                  .L_lambda_simple_params_end_0092:
 23235 00010CED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23236 00010CF0 4889C3                  	mov rbx, rax
 23237 00010CF3 58                      	pop rax
 23238 00010CF4 C60004                  	mov byte [rax], T_closure
 23239 00010CF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23240 00010CFB 48C74009[080D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23241 00010D03 E984000000              	jmp .L_lambda_simple_end_0092
 23242                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23243 00010D08 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23244 00010D0E 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23245 00010D10 FF742410                	push qword [rsp + 8 * 2]
 23246 00010D14 6A01                    	push 1
 23247 00010D16 E9C0410000              	jmp L_error_incorrect_arity_simple
 23248                                  .L_lambda_simple_arity_check_ok_0092:
 23249 00010D1B C8000000                	enter 0, 0
 23250                                  	; Initiating tail-call optimization
 23251 00010D1F 488B4520                	mov rax, PARAM(0)	; param x
 23252 00010D23 50                      	push rax
 23253 00010D24 48B8-                   	mov rax, L_constants + 2135
 23253 00010D26 [5708000000000000] 
 23254 00010D2E 50                      	push rax
 23255 00010D2F 6A02                    	push 2	; Number of arguments
 23256 00010D31 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23257 00010D39 803805                  	cmp byte [rax], T_undefined
 23258 00010D3C 0F84B3400000            	je L_error_fvar_undefined
 23259 00010D42 803804                  	cmp byte [rax], T_closure
 23260 00010D45 0F852E410000            	jne L_error_non_closure
 23261 00010D4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23262                                  
 23263                                  	; Reclaiming the current stack frame
 23264 00010D4E FF7508                  	push qword [rbp + 8]
 23265 00010D51 FF7500                  	push qword [rbp]
 23266 00010D54 41BA06000000            	mov r10, 2 + 4
 23267 00010D5A 4C8B4518                	mov r8, COUNT
 23268 00010D5E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23269 00010D63 4C8D4DF8                	lea r9, [rbp - 8]
 23270                                  .L_tc_recycle_frame_loop_00c1:
 23271 00010D67 4983FA00                	cmp r10, 0
 23272 00010D6B 7413                    	je .L_tc_recycle_frame_done_00c1
 23273 00010D6D 4D8B19                  	mov r11, qword [r9]
 23274 00010D70 4D8918                  	mov qword [r8], r11
 23275 00010D73 49FFCA                  	dec r10
 23276 00010D76 4983E808                	sub r8, 8
 23277 00010D7A 4983E908                	sub r9, 8
 23278 00010D7E EBE7                    	jmp .L_tc_recycle_frame_loop_00c1
 23279                                  .L_tc_recycle_frame_done_00c1:
 23280 00010D80 498D6008                	lea rsp, [r8 + 8]
 23281 00010D84 5D                      	pop rbp
 23282 00010D85 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23283 00010D88 C9                      	leave
 23284 00010D89 C21800                  	ret AND_KILL_FRAME(1)
 23285                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23286 00010D8C 48890425[35150000]      	mov qword [free_var_112], rax
 23287 00010D94 48B8-                   	mov rax, sob_void
 23287 00010D96 [0000000000000000] 
 23288                                  
 23289 00010D9E 4889C7                  	mov rdi, rax
 23290 00010DA1 E8D1430000              	call print_sexpr_if_not_void
 23291 00010DA6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23292 00010DAB E872410000              	call malloc
 23293 00010DB0 50                      	push rax
 23294 00010DB1 BF00000000              	mov rdi, 8 * 0	; new rib
 23295 00010DB6 E867410000              	call malloc
 23296 00010DBB 50                      	push rax
 23297 00010DBC BF08000000              	mov rdi, 8 * 1	; extended env
 23298 00010DC1 E85C410000              	call malloc
 23299 00010DC6 488B7D10                	mov rdi, ENV
 23300 00010DCA BE00000000              	mov rsi, 0
 23301 00010DCF BA01000000              	mov rdx, 1
 23302                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23303 00010DD4 4883FE00                	cmp rsi, 0
 23304 00010DD8 7410                    	je .L_lambda_simple_env_end_0093
 23305 00010DDA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23306 00010DDE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23307 00010DE2 48FFC6                  	inc rsi
 23308 00010DE5 48FFC2                  	inc rdx
 23309 00010DE8 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23310                                  .L_lambda_simple_env_end_0093:
 23311 00010DEA 5B                      	pop rbx
 23312 00010DEB BE00000000              	mov rsi, 0
 23313                                  .L_lambda_simple_params_loop_0093:	; copy params
 23314 00010DF0 4883FE00                	cmp rsi, 0
 23315 00010DF4 740E                    	je .L_lambda_simple_params_end_0093
 23316 00010DF6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23317 00010DFB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23318 00010DFF 48FFC6                  	inc rsi
 23319 00010E02 EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23320                                  .L_lambda_simple_params_end_0093:
 23321 00010E04 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23322 00010E07 4889C3                  	mov rbx, rax
 23323 00010E0A 58                      	pop rax
 23324 00010E0B C60004                  	mov byte [rax], T_closure
 23325 00010E0E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23326 00010E12 48C74009[1F0E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23327 00010E1A E984000000              	jmp .L_lambda_simple_end_0093
 23328                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23329 00010E1F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23330 00010E25 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23331 00010E27 FF742410                	push qword [rsp + 8 * 2]
 23332 00010E2B 6A01                    	push 1
 23333 00010E2D E9A9400000              	jmp L_error_incorrect_arity_simple
 23334                                  .L_lambda_simple_arity_check_ok_0093:
 23335 00010E32 C8000000                	enter 0, 0
 23336                                  	; Initiating tail-call optimization
 23337 00010E36 48B8-                   	mov rax, L_constants + 2135
 23337 00010E38 [5708000000000000] 
 23338 00010E40 50                      	push rax
 23339 00010E41 488B4520                	mov rax, PARAM(0)	; param x
 23340 00010E45 50                      	push rax
 23341 00010E46 6A02                    	push 2	; Number of arguments
 23342 00010E48 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23343 00010E50 803805                  	cmp byte [rax], T_undefined
 23344 00010E53 0F849C3F0000            	je L_error_fvar_undefined
 23345 00010E59 803804                  	cmp byte [rax], T_closure
 23346 00010E5C 0F8517400000            	jne L_error_non_closure
 23347 00010E62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23348                                  
 23349                                  	; Reclaiming the current stack frame
 23350 00010E65 FF7508                  	push qword [rbp + 8]
 23351 00010E68 FF7500                  	push qword [rbp]
 23352 00010E6B 41BA06000000            	mov r10, 2 + 4
 23353 00010E71 4C8B4518                	mov r8, COUNT
 23354 00010E75 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23355 00010E7A 4C8D4DF8                	lea r9, [rbp - 8]
 23356                                  .L_tc_recycle_frame_loop_00c2:
 23357 00010E7E 4983FA00                	cmp r10, 0
 23358 00010E82 7413                    	je .L_tc_recycle_frame_done_00c2
 23359 00010E84 4D8B19                  	mov r11, qword [r9]
 23360 00010E87 4D8918                  	mov qword [r8], r11
 23361 00010E8A 49FFCA                  	dec r10
 23362 00010E8D 4983E808                	sub r8, 8
 23363 00010E91 4983E908                	sub r9, 8
 23364 00010E95 EBE7                    	jmp .L_tc_recycle_frame_loop_00c2
 23365                                  .L_tc_recycle_frame_done_00c2:
 23366 00010E97 498D6008                	lea rsp, [r8 + 8]
 23367 00010E9B 5D                      	pop rbp
 23368 00010E9C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23369 00010E9F C9                      	leave
 23370 00010EA0 C21800                  	ret AND_KILL_FRAME(1)
 23371                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23372 00010EA3 48890425[AD140000]      	mov qword [free_var_104], rax
 23373 00010EAB 48B8-                   	mov rax, sob_void
 23373 00010EAD [0000000000000000] 
 23374                                  
 23375 00010EB5 4889C7                  	mov rdi, rax
 23376 00010EB8 E8BA420000              	call print_sexpr_if_not_void
 23377 00010EBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23378 00010EC2 E85B400000              	call malloc
 23379 00010EC7 50                      	push rax
 23380 00010EC8 BF00000000              	mov rdi, 8 * 0	; new rib
 23381 00010ECD E850400000              	call malloc
 23382 00010ED2 50                      	push rax
 23383 00010ED3 BF08000000              	mov rdi, 8 * 1	; extended env
 23384 00010ED8 E845400000              	call malloc
 23385 00010EDD 488B7D10                	mov rdi, ENV
 23386 00010EE1 BE00000000              	mov rsi, 0
 23387 00010EE6 BA01000000              	mov rdx, 1
 23388                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23389 00010EEB 4883FE00                	cmp rsi, 0
 23390 00010EEF 7410                    	je .L_lambda_simple_env_end_0094
 23391 00010EF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23392 00010EF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23393 00010EF9 48FFC6                  	inc rsi
 23394 00010EFC 48FFC2                  	inc rdx
 23395 00010EFF EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23396                                  .L_lambda_simple_env_end_0094:
 23397 00010F01 5B                      	pop rbx
 23398 00010F02 BE00000000              	mov rsi, 0
 23399                                  .L_lambda_simple_params_loop_0094:	; copy params
 23400 00010F07 4883FE00                	cmp rsi, 0
 23401 00010F0B 740E                    	je .L_lambda_simple_params_end_0094
 23402 00010F0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23403 00010F12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23404 00010F16 48FFC6                  	inc rsi
 23405 00010F19 EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23406                                  .L_lambda_simple_params_end_0094:
 23407 00010F1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23408 00010F1E 4889C3                  	mov rbx, rax
 23409 00010F21 58                      	pop rax
 23410 00010F22 C60004                  	mov byte [rax], T_closure
 23411 00010F25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23412 00010F29 48C74009[360F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23413 00010F31 E9A7000000              	jmp .L_lambda_simple_end_0094
 23414                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23415 00010F36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23416 00010F3C 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23417 00010F3E FF742410                	push qword [rsp + 8 * 2]
 23418 00010F42 6A01                    	push 1
 23419 00010F44 E9923F0000              	jmp L_error_incorrect_arity_simple
 23420                                  .L_lambda_simple_arity_check_ok_0094:
 23421 00010F49 C8000000                	enter 0, 0
 23422                                  	; Initiating tail-call optimization
 23423                                  	; preparing a non-tail-call
 23424 00010F4D 48B8-                   	mov rax, L_constants + 3190
 23424 00010F4F [760C000000000000] 
 23425 00010F57 50                      	push rax
 23426 00010F58 488B4520                	mov rax, PARAM(0)	; param n
 23427 00010F5C 50                      	push rax
 23428 00010F5D 6A02                    	push 2	; arg count
 23429 00010F5F 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23430 00010F67 803805                  	cmp byte [rax], T_undefined
 23431 00010F6A 0F84853E0000            	je L_error_fvar_undefined
 23432 00010F70 803804                  	cmp byte [rax], T_closure
 23433 00010F73 0F85003F0000            	jne L_error_non_closure
 23434 00010F79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23435 00010F7C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23436 00010F7F 50                      	push rax
 23437 00010F80 6A01                    	push 1	; Number of arguments
 23438 00010F82 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 23439 00010F8A 803805                  	cmp byte [rax], T_undefined
 23440 00010F8D 0F84623E0000            	je L_error_fvar_undefined
 23441 00010F93 803804                  	cmp byte [rax], T_closure
 23442 00010F96 0F85DD3E0000            	jne L_error_non_closure
 23443 00010F9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23444                                  
 23445                                  	; Reclaiming the current stack frame
 23446 00010F9F FF7508                  	push qword [rbp + 8]
 23447 00010FA2 FF7500                  	push qword [rbp]
 23448 00010FA5 41BA05000000            	mov r10, 1 + 4
 23449 00010FAB 4C8B4518                	mov r8, COUNT
 23450 00010FAF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23451 00010FB4 4C8D4DF8                	lea r9, [rbp - 8]
 23452                                  .L_tc_recycle_frame_loop_00c3:
 23453 00010FB8 4983FA00                	cmp r10, 0
 23454 00010FBC 7413                    	je .L_tc_recycle_frame_done_00c3
 23455 00010FBE 4D8B19                  	mov r11, qword [r9]
 23456 00010FC1 4D8918                  	mov qword [r8], r11
 23457 00010FC4 49FFCA                  	dec r10
 23458 00010FC7 4983E808                	sub r8, 8
 23459 00010FCB 4983E908                	sub r9, 8
 23460 00010FCF EBE7                    	jmp .L_tc_recycle_frame_loop_00c3
 23461                                  .L_tc_recycle_frame_done_00c3:
 23462 00010FD1 498D6008                	lea rsp, [r8 + 8]
 23463 00010FD5 5D                      	pop rbp
 23464 00010FD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23465 00010FD9 C9                      	leave
 23466 00010FDA C21800                  	ret AND_KILL_FRAME(1)
 23467                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23468 00010FDD 48890425[48130000]      	mov qword [free_var_83], rax
 23469 00010FE5 48B8-                   	mov rax, sob_void
 23469 00010FE7 [0000000000000000] 
 23470                                  
 23471 00010FEF 4889C7                  	mov rdi, rax
 23472 00010FF2 E880410000              	call print_sexpr_if_not_void
 23473 00010FF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23474 00010FFC E8213F0000              	call malloc
 23475 00011001 50                      	push rax
 23476 00011002 BF00000000              	mov rdi, 8 * 0	; new rib
 23477 00011007 E8163F0000              	call malloc
 23478 0001100C 50                      	push rax
 23479 0001100D BF08000000              	mov rdi, 8 * 1	; extended env
 23480 00011012 E80B3F0000              	call malloc
 23481 00011017 488B7D10                	mov rdi, ENV
 23482 0001101B BE00000000              	mov rsi, 0
 23483 00011020 BA01000000              	mov rdx, 1
 23484                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23485 00011025 4883FE00                	cmp rsi, 0
 23486 00011029 7410                    	je .L_lambda_simple_env_end_0095
 23487 0001102B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23488 0001102F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23489 00011033 48FFC6                  	inc rsi
 23490 00011036 48FFC2                  	inc rdx
 23491 00011039 EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23492                                  .L_lambda_simple_env_end_0095:
 23493 0001103B 5B                      	pop rbx
 23494 0001103C BE00000000              	mov rsi, 0
 23495                                  .L_lambda_simple_params_loop_0095:	; copy params
 23496 00011041 4883FE00                	cmp rsi, 0
 23497 00011045 740E                    	je .L_lambda_simple_params_end_0095
 23498 00011047 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23499 0001104C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23500 00011050 48FFC6                  	inc rsi
 23501 00011053 EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23502                                  .L_lambda_simple_params_end_0095:
 23503 00011055 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23504 00011058 4889C3                  	mov rbx, rax
 23505 0001105B 58                      	pop rax
 23506 0001105C C60004                  	mov byte [rax], T_closure
 23507 0001105F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23508 00011063 48C74009[70100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23509 0001106B E99C000000              	jmp .L_lambda_simple_end_0095
 23510                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23511 00011070 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23512 00011076 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23513 00011078 FF742410                	push qword [rsp + 8 * 2]
 23514 0001107C 6A01                    	push 1
 23515 0001107E E9583E0000              	jmp L_error_incorrect_arity_simple
 23516                                  .L_lambda_simple_arity_check_ok_0095:
 23517 00011083 C8000000                	enter 0, 0
 23518                                  	; Initiating tail-call optimization
 23519                                  	; preparing a non-tail-call
 23520 00011087 488B4520                	mov rax, PARAM(0)	; param n
 23521 0001108B 50                      	push rax
 23522 0001108C 6A01                    	push 1	; arg count
 23523 0001108E 488B0425[48130000]      	mov rax, qword [free_var_83]	; free var even?
 23524 00011096 803805                  	cmp byte [rax], T_undefined
 23525 00011099 0F84563D0000            	je L_error_fvar_undefined
 23526 0001109F 803804                  	cmp byte [rax], T_closure
 23527 000110A2 0F85D13D0000            	jne L_error_non_closure
 23528 000110A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23529 000110AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 23530 000110AE 50                      	push rax
 23531 000110AF 6A01                    	push 1	; Number of arguments
 23532 000110B1 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 23533 000110B9 803805                  	cmp byte [rax], T_undefined
 23534 000110BC 0F84333D0000            	je L_error_fvar_undefined
 23535 000110C2 803804                  	cmp byte [rax], T_closure
 23536 000110C5 0F85AE3D0000            	jne L_error_non_closure
 23537 000110CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23538                                  
 23539                                  	; Reclaiming the current stack frame
 23540 000110CE FF7508                  	push qword [rbp + 8]
 23541 000110D1 FF7500                  	push qword [rbp]
 23542 000110D4 41BA05000000            	mov r10, 1 + 4
 23543 000110DA 4C8B4518                	mov r8, COUNT
 23544 000110DE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23545 000110E3 4C8D4DF8                	lea r9, [rbp - 8]
 23546                                  .L_tc_recycle_frame_loop_00c4:
 23547 000110E7 4983FA00                	cmp r10, 0
 23548 000110EB 7413                    	je .L_tc_recycle_frame_done_00c4
 23549 000110ED 4D8B19                  	mov r11, qword [r9]
 23550 000110F0 4D8918                  	mov qword [r8], r11
 23551 000110F3 49FFCA                  	dec r10
 23552 000110F6 4983E808                	sub r8, 8
 23553 000110FA 4983E908                	sub r9, 8
 23554 000110FE EBE7                    	jmp .L_tc_recycle_frame_loop_00c4
 23555                                  .L_tc_recycle_frame_done_00c4:
 23556 00011100 498D6008                	lea rsp, [r8 + 8]
 23557 00011104 5D                      	pop rbp
 23558 00011105 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23559 00011108 C9                      	leave
 23560 00011109 C21800                  	ret AND_KILL_FRAME(1)
 23561                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23562 0001110C 48890425[02150000]      	mov qword [free_var_109], rax
 23563 00011114 48B8-                   	mov rax, sob_void
 23563 00011116 [0000000000000000] 
 23564                                  
 23565 0001111E 4889C7                  	mov rdi, rax
 23566 00011121 E851400000              	call print_sexpr_if_not_void
 23567 00011126 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23568 0001112B E8F23D0000              	call malloc
 23569 00011130 50                      	push rax
 23570 00011131 BF00000000              	mov rdi, 8 * 0	; new rib
 23571 00011136 E8E73D0000              	call malloc
 23572 0001113B 50                      	push rax
 23573 0001113C BF08000000              	mov rdi, 8 * 1	; extended env
 23574 00011141 E8DC3D0000              	call malloc
 23575 00011146 488B7D10                	mov rdi, ENV
 23576 0001114A BE00000000              	mov rsi, 0
 23577 0001114F BA01000000              	mov rdx, 1
 23578                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23579 00011154 4883FE00                	cmp rsi, 0
 23580 00011158 7410                    	je .L_lambda_simple_env_end_0096
 23581 0001115A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23582 0001115E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23583 00011162 48FFC6                  	inc rsi
 23584 00011165 48FFC2                  	inc rdx
 23585 00011168 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 23586                                  .L_lambda_simple_env_end_0096:
 23587 0001116A 5B                      	pop rbx
 23588 0001116B BE00000000              	mov rsi, 0
 23589                                  .L_lambda_simple_params_loop_0096:	; copy params
 23590 00011170 4883FE00                	cmp rsi, 0
 23591 00011174 740E                    	je .L_lambda_simple_params_end_0096
 23592 00011176 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23593 0001117B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23594 0001117F 48FFC6                  	inc rsi
 23595 00011182 EBEC                    	jmp .L_lambda_simple_params_loop_0096
 23596                                  .L_lambda_simple_params_end_0096:
 23597 00011184 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23598 00011187 4889C3                  	mov rbx, rax
 23599 0001118A 58                      	pop rax
 23600 0001118B C60004                  	mov byte [rax], T_closure
 23601 0001118E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23602 00011192 48C74009[9F110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 23603 0001119A E9AE000000              	jmp .L_lambda_simple_end_0096
 23604                                  .L_lambda_simple_code_0096:	; lambda-simple body
 23605 0001119F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23606 000111A5 740B                    	je .L_lambda_simple_arity_check_ok_0096
 23607 000111A7 FF742410                	push qword [rsp + 8 * 2]
 23608 000111AB 6A01                    	push 1
 23609 000111AD E9293D0000              	jmp L_error_incorrect_arity_simple
 23610                                  .L_lambda_simple_arity_check_ok_0096:
 23611 000111B2 C8000000                	enter 0, 0
 23612                                  	; preparing a non-tail-call
 23613 000111B6 488B4520                	mov rax, PARAM(0)	; param x
 23614 000111BA 50                      	push rax
 23615 000111BB 6A01                    	push 1	; arg count
 23616 000111BD 488B0425[AD140000]      	mov rax, qword [free_var_104]	; free var negative?
 23617 000111C5 803805                  	cmp byte [rax], T_undefined
 23618 000111C8 0F84273C0000            	je L_error_fvar_undefined
 23619 000111CE 803804                  	cmp byte [rax], T_closure
 23620 000111D1 0F85A23C0000            	jne L_error_non_closure
 23621 000111D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23622 000111DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 23623 000111DD 483D[02000000]          	cmp rax, sob_boolean_false
 23624 000111E3 7460                    	je .L_if_else_006b
 23625                                  	; Initiating tail-call optimization
 23626 000111E5 488B4520                	mov rax, PARAM(0)	; param x
 23627 000111E9 50                      	push rax
 23628 000111EA 6A01                    	push 1	; Number of arguments
 23629 000111EC 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 23630 000111F4 803805                  	cmp byte [rax], T_undefined
 23631 000111F7 0F84F83B0000            	je L_error_fvar_undefined
 23632 000111FD 803804                  	cmp byte [rax], T_closure
 23633 00011200 0F85733C0000            	jne L_error_non_closure
 23634 00011206 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23635                                  
 23636                                  	; Reclaiming the current stack frame
 23637 00011209 FF7508                  	push qword [rbp + 8]
 23638 0001120C FF7500                  	push qword [rbp]
 23639 0001120F 41BA05000000            	mov r10, 1 + 4
 23640 00011215 4C8B4518                	mov r8, COUNT
 23641 00011219 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23642 0001121E 4C8D4DF8                	lea r9, [rbp - 8]
 23643                                  .L_tc_recycle_frame_loop_00c5:
 23644 00011222 4983FA00                	cmp r10, 0
 23645 00011226 7413                    	je .L_tc_recycle_frame_done_00c5
 23646 00011228 4D8B19                  	mov r11, qword [r9]
 23647 0001122B 4D8918                  	mov qword [r8], r11
 23648 0001122E 49FFCA                  	dec r10
 23649 00011231 4983E808                	sub r8, 8
 23650 00011235 4983E908                	sub r9, 8
 23651 00011239 EBE7                    	jmp .L_tc_recycle_frame_loop_00c5
 23652                                  .L_tc_recycle_frame_done_00c5:
 23653 0001123B 498D6008                	lea rsp, [r8 + 8]
 23654 0001123F 5D                      	pop rbp
 23655 00011240 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23656 00011243 EB04                    	jmp .L_if_end_006b
 23657                                  .L_if_else_006b:
 23658 00011245 488B4520                	mov rax, PARAM(0)	; param x
 23659                                  .L_if_end_006b:
 23660 00011249 C9                      	leave
 23661 0001124A C21800                  	ret AND_KILL_FRAME(1)
 23662                                  .L_lambda_simple_end_0096:	; new closure is in rax
 23663 0001124D 48890425[C30F0000]      	mov qword [free_var_30], rax
 23664 00011255 48B8-                   	mov rax, sob_void
 23664 00011257 [0000000000000000] 
 23665                                  
 23666 0001125F 4889C7                  	mov rdi, rax
 23667 00011262 E8103F0000              	call print_sexpr_if_not_void
 23668 00011267 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23669 0001126C E8B13C0000              	call malloc
 23670 00011271 50                      	push rax
 23671 00011272 BF00000000              	mov rdi, 8 * 0	; new rib
 23672 00011277 E8A63C0000              	call malloc
 23673 0001127C 50                      	push rax
 23674 0001127D BF08000000              	mov rdi, 8 * 1	; extended env
 23675 00011282 E89B3C0000              	call malloc
 23676 00011287 488B7D10                	mov rdi, ENV
 23677 0001128B BE00000000              	mov rsi, 0
 23678 00011290 BA01000000              	mov rdx, 1
 23679                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 23680 00011295 4883FE00                	cmp rsi, 0
 23681 00011299 7410                    	je .L_lambda_simple_env_end_0097
 23682 0001129B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23683 0001129F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23684 000112A3 48FFC6                  	inc rsi
 23685 000112A6 48FFC2                  	inc rdx
 23686 000112A9 EBEA                    	jmp .L_lambda_simple_env_loop_0097
 23687                                  .L_lambda_simple_env_end_0097:
 23688 000112AB 5B                      	pop rbx
 23689 000112AC BE00000000              	mov rsi, 0
 23690                                  .L_lambda_simple_params_loop_0097:	; copy params
 23691 000112B1 4883FE00                	cmp rsi, 0
 23692 000112B5 740E                    	je .L_lambda_simple_params_end_0097
 23693 000112B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23694 000112BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23695 000112C0 48FFC6                  	inc rsi
 23696 000112C3 EBEC                    	jmp .L_lambda_simple_params_loop_0097
 23697                                  .L_lambda_simple_params_end_0097:
 23698 000112C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23699 000112C8 4889C3                  	mov rbx, rax
 23700 000112CB 58                      	pop rax
 23701 000112CC C60004                  	mov byte [rax], T_closure
 23702 000112CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23703 000112D3 48C74009[E0120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 23704 000112DB E9C7060000              	jmp .L_lambda_simple_end_0097
 23705                                  .L_lambda_simple_code_0097:	; lambda-simple body
 23706 000112E0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23707 000112E6 740B                    	je .L_lambda_simple_arity_check_ok_0097
 23708 000112E8 FF742410                	push qword [rsp + 8 * 2]
 23709 000112EC 6A02                    	push 2
 23710 000112EE E9E83B0000              	jmp L_error_incorrect_arity_simple
 23711                                  .L_lambda_simple_arity_check_ok_0097:
 23712 000112F3 C8000000                	enter 0, 0
 23713                                  	; preparing a non-tail-call
 23714 000112F7 488B4520                	mov rax, PARAM(0)	; param e1
 23715 000112FB 50                      	push rax
 23716 000112FC 6A01                    	push 1	; arg count
 23717 000112FE 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 23718 00011306 803805                  	cmp byte [rax], T_undefined
 23719 00011309 0F84E63A0000            	je L_error_fvar_undefined
 23720 0001130F 803804                  	cmp byte [rax], T_closure
 23721 00011312 0F85613B0000            	jne L_error_non_closure
 23722 00011318 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23723 0001131B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23724 0001131E 483D[02000000]          	cmp rax, sob_boolean_false
 23725 00011324 7429                    	je .L_if_else_006c
 23726                                  	; preparing a non-tail-call
 23727 00011326 488B4528                	mov rax, PARAM(1)	; param e2
 23728 0001132A 50                      	push rax
 23729 0001132B 6A01                    	push 1	; arg count
 23730 0001132D 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 23731 00011335 803805                  	cmp byte [rax], T_undefined
 23732 00011338 0F84B73A0000            	je L_error_fvar_undefined
 23733 0001133E 803804                  	cmp byte [rax], T_closure
 23734 00011341 0F85323B0000            	jne L_error_non_closure
 23735 00011347 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23736 0001134A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23737 0001134D EB0A                    	jmp .L_if_end_006c
 23738                                  .L_if_else_006c:
 23739 0001134F 48B8-                   	mov rax, L_constants + 2
 23739 00011351 [0200000000000000] 
 23740                                  .L_if_end_006c:
 23741 00011359 483D[02000000]          	cmp rax, sob_boolean_false
 23742 0001135F 0F8438010000            	je .L_if_else_0078
 23743                                  	; preparing a non-tail-call
 23744                                  	; preparing a non-tail-call
 23745 00011365 488B4528                	mov rax, PARAM(1)	; param e2
 23746 00011369 50                      	push rax
 23747 0001136A 6A01                    	push 1	; arg count
 23748 0001136C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 23749 00011374 803805                  	cmp byte [rax], T_undefined
 23750 00011377 0F84783A0000            	je L_error_fvar_undefined
 23751 0001137D 803804                  	cmp byte [rax], T_closure
 23752 00011380 0F85F33A0000            	jne L_error_non_closure
 23753 00011386 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23754 00011389 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23755 0001138C 50                      	push rax
 23756                                  	; preparing a non-tail-call
 23757 0001138D 488B4520                	mov rax, PARAM(0)	; param e1
 23758 00011391 50                      	push rax
 23759 00011392 6A01                    	push 1	; arg count
 23760 00011394 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 23761 0001139C 803805                  	cmp byte [rax], T_undefined
 23762 0001139F 0F84503A0000            	je L_error_fvar_undefined
 23763 000113A5 803804                  	cmp byte [rax], T_closure
 23764 000113A8 0F85CB3A0000            	jne L_error_non_closure
 23765 000113AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23766 000113B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23767 000113B4 50                      	push rax
 23768 000113B5 6A02                    	push 2	; arg count
 23769 000113B7 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 23770 000113BF 803805                  	cmp byte [rax], T_undefined
 23771 000113C2 0F842D3A0000            	je L_error_fvar_undefined
 23772 000113C8 803804                  	cmp byte [rax], T_closure
 23773 000113CB 0F85A83A0000            	jne L_error_non_closure
 23774 000113D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23775 000113D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23776 000113D7 483D[02000000]          	cmp rax, sob_boolean_false
 23777 000113DD 0F84AB000000            	je .L_if_else_006d
 23778                                  	; Initiating tail-call optimization
 23779                                  	; preparing a non-tail-call
 23780 000113E3 488B4528                	mov rax, PARAM(1)	; param e2
 23781 000113E7 50                      	push rax
 23782 000113E8 6A01                    	push 1	; arg count
 23783 000113EA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 23784 000113F2 803805                  	cmp byte [rax], T_undefined
 23785 000113F5 0F84FA390000            	je L_error_fvar_undefined
 23786 000113FB 803804                  	cmp byte [rax], T_closure
 23787 000113FE 0F85753A0000            	jne L_error_non_closure
 23788 00011404 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23789 00011407 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23790 0001140A 50                      	push rax
 23791                                  	; preparing a non-tail-call
 23792 0001140B 488B4520                	mov rax, PARAM(0)	; param e1
 23793 0001140F 50                      	push rax
 23794 00011410 6A01                    	push 1	; arg count
 23795 00011412 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 23796 0001141A 803805                  	cmp byte [rax], T_undefined
 23797 0001141D 0F84D2390000            	je L_error_fvar_undefined
 23798 00011423 803804                  	cmp byte [rax], T_closure
 23799 00011426 0F854D3A0000            	jne L_error_non_closure
 23800 0001142C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23801 0001142F FF5009                  	call SOB_CLOSURE_CODE(rax)
 23802 00011432 50                      	push rax
 23803 00011433 6A02                    	push 2	; Number of arguments
 23804 00011435 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 23805 0001143D 803805                  	cmp byte [rax], T_undefined
 23806 00011440 0F84AF390000            	je L_error_fvar_undefined
 23807 00011446 803804                  	cmp byte [rax], T_closure
 23808 00011449 0F852A3A0000            	jne L_error_non_closure
 23809 0001144F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23810                                  
 23811                                  	; Reclaiming the current stack frame
 23812 00011452 FF7508                  	push qword [rbp + 8]
 23813 00011455 FF7500                  	push qword [rbp]
 23814 00011458 41BA06000000            	mov r10, 2 + 4
 23815 0001145E 4C8B4518                	mov r8, COUNT
 23816 00011462 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23817 00011467 4C8D4DF8                	lea r9, [rbp - 8]
 23818                                  .L_tc_recycle_frame_loop_00c6:
 23819 0001146B 4983FA00                	cmp r10, 0
 23820 0001146F 7413                    	je .L_tc_recycle_frame_done_00c6
 23821 00011471 4D8B19                  	mov r11, qword [r9]
 23822 00011474 4D8918                  	mov qword [r8], r11
 23823 00011477 49FFCA                  	dec r10
 23824 0001147A 4983E808                	sub r8, 8
 23825 0001147E 4983E908                	sub r9, 8
 23826 00011482 EBE7                    	jmp .L_tc_recycle_frame_loop_00c6
 23827                                  .L_tc_recycle_frame_done_00c6:
 23828 00011484 498D6008                	lea rsp, [r8 + 8]
 23829 00011488 5D                      	pop rbp
 23830 00011489 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23831 0001148C EB0A                    	jmp .L_if_end_006d
 23832                                  .L_if_else_006d:
 23833 0001148E 48B8-                   	mov rax, L_constants + 2
 23833 00011490 [0200000000000000] 
 23834                                  .L_if_end_006d:
 23835 00011498 E906050000              	jmp .L_if_end_0078
 23836                                  .L_if_else_0078:
 23837                                  	; preparing a non-tail-call
 23838 0001149D 488B4520                	mov rax, PARAM(0)	; param e1
 23839 000114A1 50                      	push rax
 23840 000114A2 6A01                    	push 1	; arg count
 23841 000114A4 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 23842 000114AC 803805                  	cmp byte [rax], T_undefined
 23843 000114AF 0F8440390000            	je L_error_fvar_undefined
 23844 000114B5 803804                  	cmp byte [rax], T_closure
 23845 000114B8 0F85BB390000            	jne L_error_non_closure
 23846 000114BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23847 000114C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23848 000114C4 483D[02000000]          	cmp rax, sob_boolean_false
 23849 000114CA 0F84AF000000            	je .L_if_else_006f
 23850                                  	; preparing a non-tail-call
 23851 000114D0 488B4528                	mov rax, PARAM(1)	; param e2
 23852 000114D4 50                      	push rax
 23853 000114D5 6A01                    	push 1	; arg count
 23854 000114D7 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 23855 000114DF 803805                  	cmp byte [rax], T_undefined
 23856 000114E2 0F840D390000            	je L_error_fvar_undefined
 23857 000114E8 803804                  	cmp byte [rax], T_closure
 23858 000114EB 0F8588390000            	jne L_error_non_closure
 23859 000114F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23860 000114F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23861 000114F7 483D[02000000]          	cmp rax, sob_boolean_false
 23862 000114FD 7474                    	je .L_if_else_006e
 23863                                  	; preparing a non-tail-call
 23864                                  	; preparing a non-tail-call
 23865 000114FF 488B4528                	mov rax, PARAM(1)	; param e2
 23866 00011503 50                      	push rax
 23867 00011504 6A01                    	push 1	; arg count
 23868 00011506 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23869 0001150E 803805                  	cmp byte [rax], T_undefined
 23870 00011511 0F84DE380000            	je L_error_fvar_undefined
 23871 00011517 803804                  	cmp byte [rax], T_closure
 23872 0001151A 0F8559390000            	jne L_error_non_closure
 23873 00011520 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23874 00011523 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23875 00011526 50                      	push rax
 23876                                  	; preparing a non-tail-call
 23877 00011527 488B4520                	mov rax, PARAM(0)	; param e1
 23878 0001152B 50                      	push rax
 23879 0001152C 6A01                    	push 1	; arg count
 23880 0001152E 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23881 00011536 803805                  	cmp byte [rax], T_undefined
 23882 00011539 0F84B6380000            	je L_error_fvar_undefined
 23883 0001153F 803804                  	cmp byte [rax], T_closure
 23884 00011542 0F8531390000            	jne L_error_non_closure
 23885 00011548 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23886 0001154B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23887 0001154E 50                      	push rax
 23888 0001154F 6A02                    	push 2	; arg count
 23889 00011551 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 23890 00011559 803805                  	cmp byte [rax], T_undefined
 23891 0001155C 0F8493380000            	je L_error_fvar_undefined
 23892 00011562 803804                  	cmp byte [rax], T_closure
 23893 00011565 0F850E390000            	jne L_error_non_closure
 23894 0001156B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23895 0001156E FF5009                  	call SOB_CLOSURE_CODE(rax)
 23896 00011571 EB0A                    	jmp .L_if_end_006e
 23897                                  .L_if_else_006e:
 23898 00011573 48B8-                   	mov rax, L_constants + 2
 23898 00011575 [0200000000000000] 
 23899                                  .L_if_end_006e:
 23900 0001157D EB0A                    	jmp .L_if_end_006f
 23901                                  .L_if_else_006f:
 23902 0001157F 48B8-                   	mov rax, L_constants + 2
 23902 00011581 [0200000000000000] 
 23903                                  .L_if_end_006f:
 23904 00011589 483D[02000000]          	cmp rax, sob_boolean_false
 23905 0001158F 0F84AE000000            	je .L_if_else_0077
 23906                                  	; Initiating tail-call optimization
 23907                                  	; preparing a non-tail-call
 23908 00011595 488B4528                	mov rax, PARAM(1)	; param e2
 23909 00011599 50                      	push rax
 23910 0001159A 6A01                    	push 1	; arg count
 23911 0001159C 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 23912 000115A4 803805                  	cmp byte [rax], T_undefined
 23913 000115A7 0F8448380000            	je L_error_fvar_undefined
 23914 000115AD 803804                  	cmp byte [rax], T_closure
 23915 000115B0 0F85C3380000            	jne L_error_non_closure
 23916 000115B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23917 000115B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23918 000115BC 50                      	push rax
 23919                                  	; preparing a non-tail-call
 23920 000115BD 488B4520                	mov rax, PARAM(0)	; param e1
 23921 000115C1 50                      	push rax
 23922 000115C2 6A01                    	push 1	; arg count
 23923 000115C4 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 23924 000115CC 803805                  	cmp byte [rax], T_undefined
 23925 000115CF 0F8420380000            	je L_error_fvar_undefined
 23926 000115D5 803804                  	cmp byte [rax], T_closure
 23927 000115D8 0F859B380000            	jne L_error_non_closure
 23928 000115DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23929 000115E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23930 000115E4 50                      	push rax
 23931 000115E5 6A02                    	push 2	; Number of arguments
 23932 000115E7 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 23933 000115EF 803805                  	cmp byte [rax], T_undefined
 23934 000115F2 0F84FD370000            	je L_error_fvar_undefined
 23935 000115F8 803804                  	cmp byte [rax], T_closure
 23936 000115FB 0F8578380000            	jne L_error_non_closure
 23937 00011601 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23938                                  
 23939                                  	; Reclaiming the current stack frame
 23940 00011604 FF7508                  	push qword [rbp + 8]
 23941 00011607 FF7500                  	push qword [rbp]
 23942 0001160A 41BA06000000            	mov r10, 2 + 4
 23943 00011610 4C8B4518                	mov r8, COUNT
 23944 00011614 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23945 00011619 4C8D4DF8                	lea r9, [rbp - 8]
 23946                                  .L_tc_recycle_frame_loop_00c7:
 23947 0001161D 4983FA00                	cmp r10, 0
 23948 00011621 7413                    	je .L_tc_recycle_frame_done_00c7
 23949 00011623 4D8B19                  	mov r11, qword [r9]
 23950 00011626 4D8918                  	mov qword [r8], r11
 23951 00011629 49FFCA                  	dec r10
 23952 0001162C 4983E808                	sub r8, 8
 23953 00011630 4983E908                	sub r9, 8
 23954 00011634 EBE7                    	jmp .L_tc_recycle_frame_loop_00c7
 23955                                  .L_tc_recycle_frame_done_00c7:
 23956 00011636 498D6008                	lea rsp, [r8 + 8]
 23957 0001163A 5D                      	pop rbp
 23958 0001163B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23959 0001163E E960030000              	jmp .L_if_end_0077
 23960                                  .L_if_else_0077:
 23961                                  	; preparing a non-tail-call
 23962 00011643 488B4520                	mov rax, PARAM(0)	; param e1
 23963 00011647 50                      	push rax
 23964 00011648 6A01                    	push 1	; arg count
 23965 0001164A 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 23966 00011652 803805                  	cmp byte [rax], T_undefined
 23967 00011655 0F849A370000            	je L_error_fvar_undefined
 23968 0001165B 803804                  	cmp byte [rax], T_closure
 23969 0001165E 0F8515380000            	jne L_error_non_closure
 23970 00011664 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23971 00011667 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23972 0001166A 483D[02000000]          	cmp rax, sob_boolean_false
 23973 00011670 0F84AF000000            	je .L_if_else_0071
 23974                                  	; preparing a non-tail-call
 23975 00011676 488B4528                	mov rax, PARAM(1)	; param e2
 23976 0001167A 50                      	push rax
 23977 0001167B 6A01                    	push 1	; arg count
 23978 0001167D 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 23979 00011685 803805                  	cmp byte [rax], T_undefined
 23980 00011688 0F8467370000            	je L_error_fvar_undefined
 23981 0001168E 803804                  	cmp byte [rax], T_closure
 23982 00011691 0F85E2370000            	jne L_error_non_closure
 23983 00011697 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23984 0001169A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23985 0001169D 483D[02000000]          	cmp rax, sob_boolean_false
 23986 000116A3 7474                    	je .L_if_else_0070
 23987                                  	; preparing a non-tail-call
 23988                                  	; preparing a non-tail-call
 23989 000116A5 488B4528                	mov rax, PARAM(1)	; param e2
 23990 000116A9 50                      	push rax
 23991 000116AA 6A01                    	push 1	; arg count
 23992 000116AC 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 23993 000116B4 803805                  	cmp byte [rax], T_undefined
 23994 000116B7 0F8438370000            	je L_error_fvar_undefined
 23995 000116BD 803804                  	cmp byte [rax], T_closure
 23996 000116C0 0F85B3370000            	jne L_error_non_closure
 23997 000116C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23998 000116C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23999 000116CC 50                      	push rax
 24000                                  	; preparing a non-tail-call
 24001 000116CD 488B4520                	mov rax, PARAM(0)	; param e1
 24002 000116D1 50                      	push rax
 24003 000116D2 6A01                    	push 1	; arg count
 24004 000116D4 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24005 000116DC 803805                  	cmp byte [rax], T_undefined
 24006 000116DF 0F8410370000            	je L_error_fvar_undefined
 24007 000116E5 803804                  	cmp byte [rax], T_closure
 24008 000116E8 0F858B370000            	jne L_error_non_closure
 24009 000116EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 24010 000116F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24011 000116F4 50                      	push rax
 24012 000116F5 6A02                    	push 2	; arg count
 24013 000116F7 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24014 000116FF 803805                  	cmp byte [rax], T_undefined
 24015 00011702 0F84ED360000            	je L_error_fvar_undefined
 24016 00011708 803804                  	cmp byte [rax], T_closure
 24017 0001170B 0F8568370000            	jne L_error_non_closure
 24018 00011711 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24019 00011714 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24020 00011717 EB0A                    	jmp .L_if_end_0070
 24021                                  .L_if_else_0070:
 24022 00011719 48B8-                   	mov rax, L_constants + 2
 24022 0001171B [0200000000000000] 
 24023                                  .L_if_end_0070:
 24024 00011723 EB0A                    	jmp .L_if_end_0071
 24025                                  .L_if_else_0071:
 24026 00011725 48B8-                   	mov rax, L_constants + 2
 24026 00011727 [0200000000000000] 
 24027                                  .L_if_end_0071:
 24028 0001172F 483D[02000000]          	cmp rax, sob_boolean_false
 24029 00011735 7468                    	je .L_if_else_0076
 24030                                  	; Initiating tail-call optimization
 24031 00011737 488B4528                	mov rax, PARAM(1)	; param e2
 24032 0001173B 50                      	push rax
 24033 0001173C 488B4520                	mov rax, PARAM(0)	; param e1
 24034 00011740 50                      	push rax
 24035 00011741 6A02                    	push 2	; Number of arguments
 24036 00011743 488B0425[BC160000]      	mov rax, qword [free_var_135]	; free var string=?
 24037 0001174B 803805                  	cmp byte [rax], T_undefined
 24038 0001174E 0F84A1360000            	je L_error_fvar_undefined
 24039 00011754 803804                  	cmp byte [rax], T_closure
 24040 00011757 0F851C370000            	jne L_error_non_closure
 24041 0001175D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24042                                  
 24043                                  	; Reclaiming the current stack frame
 24044 00011760 FF7508                  	push qword [rbp + 8]
 24045 00011763 FF7500                  	push qword [rbp]
 24046 00011766 41BA06000000            	mov r10, 2 + 4
 24047 0001176C 4C8B4518                	mov r8, COUNT
 24048 00011770 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24049 00011775 4C8D4DF8                	lea r9, [rbp - 8]
 24050                                  .L_tc_recycle_frame_loop_00c8:
 24051 00011779 4983FA00                	cmp r10, 0
 24052 0001177D 7413                    	je .L_tc_recycle_frame_done_00c8
 24053 0001177F 4D8B19                  	mov r11, qword [r9]
 24054 00011782 4D8918                  	mov qword [r8], r11
 24055 00011785 49FFCA                  	dec r10
 24056 00011788 4983E808                	sub r8, 8
 24057 0001178C 4983E908                	sub r9, 8
 24058 00011790 EBE7                    	jmp .L_tc_recycle_frame_loop_00c8
 24059                                  .L_tc_recycle_frame_done_00c8:
 24060 00011792 498D6008                	lea rsp, [r8 + 8]
 24061 00011796 5D                      	pop rbp
 24062 00011797 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24063 0001179A E904020000              	jmp .L_if_end_0076
 24064                                  .L_if_else_0076:
 24065                                  	; preparing a non-tail-call
 24066 0001179F 488B4520                	mov rax, PARAM(0)	; param e1
 24067 000117A3 50                      	push rax
 24068 000117A4 6A01                    	push 1	; arg count
 24069 000117A6 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24070 000117AE 803805                  	cmp byte [rax], T_undefined
 24071 000117B1 0F843E360000            	je L_error_fvar_undefined
 24072 000117B7 803804                  	cmp byte [rax], T_closure
 24073 000117BA 0F85B9360000            	jne L_error_non_closure
 24074 000117C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24075 000117C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24076 000117C6 483D[02000000]          	cmp rax, sob_boolean_false
 24077 000117CC 7429                    	je .L_if_else_0072
 24078                                  	; preparing a non-tail-call
 24079 000117CE 488B4528                	mov rax, PARAM(1)	; param e2
 24080 000117D2 50                      	push rax
 24081 000117D3 6A01                    	push 1	; arg count
 24082 000117D5 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24083 000117DD 803805                  	cmp byte [rax], T_undefined
 24084 000117E0 0F840F360000            	je L_error_fvar_undefined
 24085 000117E6 803804                  	cmp byte [rax], T_closure
 24086 000117E9 0F858A360000            	jne L_error_non_closure
 24087 000117EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24088 000117F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24089 000117F5 EB0A                    	jmp .L_if_end_0072
 24090                                  .L_if_else_0072:
 24091 000117F7 48B8-                   	mov rax, L_constants + 2
 24091 000117F9 [0200000000000000] 
 24092                                  .L_if_end_0072:
 24093 00011801 483D[02000000]          	cmp rax, sob_boolean_false
 24094 00011807 7468                    	je .L_if_else_0075
 24095                                  	; Initiating tail-call optimization
 24096 00011809 488B4528                	mov rax, PARAM(1)	; param e2
 24097 0001180D 50                      	push rax
 24098 0001180E 488B4520                	mov rax, PARAM(0)	; param e1
 24099 00011812 50                      	push rax
 24100 00011813 6A02                    	push 2	; Number of arguments
 24101 00011815 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24102 0001181D 803805                  	cmp byte [rax], T_undefined
 24103 00011820 0F84CF350000            	je L_error_fvar_undefined
 24104 00011826 803804                  	cmp byte [rax], T_closure
 24105 00011829 0F854A360000            	jne L_error_non_closure
 24106 0001182F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24107                                  
 24108                                  	; Reclaiming the current stack frame
 24109 00011832 FF7508                  	push qword [rbp + 8]
 24110 00011835 FF7500                  	push qword [rbp]
 24111 00011838 41BA06000000            	mov r10, 2 + 4
 24112 0001183E 4C8B4518                	mov r8, COUNT
 24113 00011842 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24114 00011847 4C8D4DF8                	lea r9, [rbp - 8]
 24115                                  .L_tc_recycle_frame_loop_00c9:
 24116 0001184B 4983FA00                	cmp r10, 0
 24117 0001184F 7413                    	je .L_tc_recycle_frame_done_00c9
 24118 00011851 4D8B19                  	mov r11, qword [r9]
 24119 00011854 4D8918                  	mov qword [r8], r11
 24120 00011857 49FFCA                  	dec r10
 24121 0001185A 4983E808                	sub r8, 8
 24122 0001185E 4983E908                	sub r9, 8
 24123 00011862 EBE7                    	jmp .L_tc_recycle_frame_loop_00c9
 24124                                  .L_tc_recycle_frame_done_00c9:
 24125 00011864 498D6008                	lea rsp, [r8 + 8]
 24126 00011868 5D                      	pop rbp
 24127 00011869 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24128 0001186C E932010000              	jmp .L_if_end_0075
 24129                                  .L_if_else_0075:
 24130                                  	; preparing a non-tail-call
 24131 00011871 488B4520                	mov rax, PARAM(0)	; param e1
 24132 00011875 50                      	push rax
 24133 00011876 6A01                    	push 1	; arg count
 24134 00011878 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24135 00011880 803805                  	cmp byte [rax], T_undefined
 24136 00011883 0F846C350000            	je L_error_fvar_undefined
 24137 00011889 803804                  	cmp byte [rax], T_closure
 24138 0001188C 0F85E7350000            	jne L_error_non_closure
 24139 00011892 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24140 00011895 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24141 00011898 483D[02000000]          	cmp rax, sob_boolean_false
 24142 0001189E 7429                    	je .L_if_else_0073
 24143                                  	; preparing a non-tail-call
 24144 000118A0 488B4528                	mov rax, PARAM(1)	; param e2
 24145 000118A4 50                      	push rax
 24146 000118A5 6A01                    	push 1	; arg count
 24147 000118A7 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24148 000118AF 803805                  	cmp byte [rax], T_undefined
 24149 000118B2 0F843D350000            	je L_error_fvar_undefined
 24150 000118B8 803804                  	cmp byte [rax], T_closure
 24151 000118BB 0F85B8350000            	jne L_error_non_closure
 24152 000118C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24153 000118C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24154 000118C7 EB0A                    	jmp .L_if_end_0073
 24155                                  .L_if_else_0073:
 24156 000118C9 48B8-                   	mov rax, L_constants + 2
 24156 000118CB [0200000000000000] 
 24157                                  .L_if_end_0073:
 24158 000118D3 483D[02000000]          	cmp rax, sob_boolean_false
 24159 000118D9 7465                    	je .L_if_else_0074
 24160                                  	; Initiating tail-call optimization
 24161 000118DB 488B4528                	mov rax, PARAM(1)	; param e2
 24162 000118DF 50                      	push rax
 24163 000118E0 488B4520                	mov rax, PARAM(0)	; param e1
 24164 000118E4 50                      	push rax
 24165 000118E5 6A02                    	push 2	; Number of arguments
 24166 000118E7 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 24167 000118EF 803805                  	cmp byte [rax], T_undefined
 24168 000118F2 0F84FD340000            	je L_error_fvar_undefined
 24169 000118F8 803804                  	cmp byte [rax], T_closure
 24170 000118FB 0F8578350000            	jne L_error_non_closure
 24171 00011901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24172                                  
 24173                                  	; Reclaiming the current stack frame
 24174 00011904 FF7508                  	push qword [rbp + 8]
 24175 00011907 FF7500                  	push qword [rbp]
 24176 0001190A 41BA06000000            	mov r10, 2 + 4
 24177 00011910 4C8B4518                	mov r8, COUNT
 24178 00011914 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24179 00011919 4C8D4DF8                	lea r9, [rbp - 8]
 24180                                  .L_tc_recycle_frame_loop_00ca:
 24181 0001191D 4983FA00                	cmp r10, 0
 24182 00011921 7413                    	je .L_tc_recycle_frame_done_00ca
 24183 00011923 4D8B19                  	mov r11, qword [r9]
 24184 00011926 4D8918                  	mov qword [r8], r11
 24185 00011929 49FFCA                  	dec r10
 24186 0001192C 4983E808                	sub r8, 8
 24187 00011930 4983E908                	sub r9, 8
 24188 00011934 EBE7                    	jmp .L_tc_recycle_frame_loop_00ca
 24189                                  .L_tc_recycle_frame_done_00ca:
 24190 00011936 498D6008                	lea rsp, [r8 + 8]
 24191 0001193A 5D                      	pop rbp
 24192 0001193B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24193 0001193E EB63                    	jmp .L_if_end_0074
 24194                                  .L_if_else_0074:
 24195                                  	; Initiating tail-call optimization
 24196 00011940 488B4528                	mov rax, PARAM(1)	; param e2
 24197 00011944 50                      	push rax
 24198 00011945 488B4520                	mov rax, PARAM(0)	; param e1
 24199 00011949 50                      	push rax
 24200 0001194A 6A02                    	push 2	; Number of arguments
 24201 0001194C 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24202 00011954 803805                  	cmp byte [rax], T_undefined
 24203 00011957 0F8498340000            	je L_error_fvar_undefined
 24204 0001195D 803804                  	cmp byte [rax], T_closure
 24205 00011960 0F8513350000            	jne L_error_non_closure
 24206 00011966 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24207                                  
 24208                                  	; Reclaiming the current stack frame
 24209 00011969 FF7508                  	push qword [rbp + 8]
 24210 0001196C FF7500                  	push qword [rbp]
 24211 0001196F 41BA06000000            	mov r10, 2 + 4
 24212 00011975 4C8B4518                	mov r8, COUNT
 24213 00011979 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24214 0001197E 4C8D4DF8                	lea r9, [rbp - 8]
 24215                                  .L_tc_recycle_frame_loop_00cb:
 24216 00011982 4983FA00                	cmp r10, 0
 24217 00011986 7413                    	je .L_tc_recycle_frame_done_00cb
 24218 00011988 4D8B19                  	mov r11, qword [r9]
 24219 0001198B 4D8918                  	mov qword [r8], r11
 24220 0001198E 49FFCA                  	dec r10
 24221 00011991 4983E808                	sub r8, 8
 24222 00011995 4983E908                	sub r9, 8
 24223 00011999 EBE7                    	jmp .L_tc_recycle_frame_loop_00cb
 24224                                  .L_tc_recycle_frame_done_00cb:
 24225 0001199B 498D6008                	lea rsp, [r8 + 8]
 24226 0001199F 5D                      	pop rbp
 24227 000119A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24228                                  .L_if_end_0074:
 24229                                  .L_if_end_0075:
 24230                                  .L_if_end_0076:
 24231                                  .L_if_end_0077:
 24232                                  .L_if_end_0078:
 24233 000119A3 C9                      	leave
 24234 000119A4 C22000                  	ret AND_KILL_FRAME(2)
 24235                                  .L_lambda_simple_end_0097:	; new closure is in rax
 24236 000119A7 48890425[26130000]      	mov qword [free_var_81], rax
 24237 000119AF 48B8-                   	mov rax, sob_void
 24237 000119B1 [0000000000000000] 
 24238                                  
 24239 000119B9 4889C7                  	mov rdi, rax
 24240 000119BC E8B6370000              	call print_sexpr_if_not_void
 24241 000119C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24242 000119C6 E857350000              	call malloc
 24243 000119CB 50                      	push rax
 24244 000119CC BF00000000              	mov rdi, 8 * 0	; new rib
 24245 000119D1 E84C350000              	call malloc
 24246 000119D6 50                      	push rax
 24247 000119D7 BF08000000              	mov rdi, 8 * 1	; extended env
 24248 000119DC E841350000              	call malloc
 24249 000119E1 488B7D10                	mov rdi, ENV
 24250 000119E5 BE00000000              	mov rsi, 0
 24251 000119EA BA01000000              	mov rdx, 1
 24252                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 24253 000119EF 4883FE00                	cmp rsi, 0
 24254 000119F3 7410                    	je .L_lambda_simple_env_end_0098
 24255 000119F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24256 000119F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24257 000119FD 48FFC6                  	inc rsi
 24258 00011A00 48FFC2                  	inc rdx
 24259 00011A03 EBEA                    	jmp .L_lambda_simple_env_loop_0098
 24260                                  .L_lambda_simple_env_end_0098:
 24261 00011A05 5B                      	pop rbx
 24262 00011A06 BE00000000              	mov rsi, 0
 24263                                  .L_lambda_simple_params_loop_0098:	; copy params
 24264 00011A0B 4883FE00                	cmp rsi, 0
 24265 00011A0F 740E                    	je .L_lambda_simple_params_end_0098
 24266 00011A11 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24267 00011A16 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24268 00011A1A 48FFC6                  	inc rsi
 24269 00011A1D EBEC                    	jmp .L_lambda_simple_params_loop_0098
 24270                                  .L_lambda_simple_params_end_0098:
 24271 00011A1F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24272 00011A22 4889C3                  	mov rbx, rax
 24273 00011A25 58                      	pop rax
 24274 00011A26 C60004                  	mov byte [rax], T_closure
 24275 00011A29 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24276 00011A2D 48C74009[3A1A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 24277 00011A35 E999010000              	jmp .L_lambda_simple_end_0098
 24278                                  .L_lambda_simple_code_0098:	; lambda-simple body
 24279 00011A3A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24280 00011A40 740B                    	je .L_lambda_simple_arity_check_ok_0098
 24281 00011A42 FF742410                	push qword [rsp + 8 * 2]
 24282 00011A46 6A02                    	push 2
 24283 00011A48 E98E340000              	jmp L_error_incorrect_arity_simple
 24284                                  .L_lambda_simple_arity_check_ok_0098:
 24285 00011A4D C8000000                	enter 0, 0
 24286                                  	; preparing a non-tail-call
 24287 00011A51 488B4528                	mov rax, PARAM(1)	; param s
 24288 00011A55 50                      	push rax
 24289 00011A56 6A01                    	push 1	; arg count
 24290 00011A58 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24291 00011A60 803805                  	cmp byte [rax], T_undefined
 24292 00011A63 0F848C330000            	je L_error_fvar_undefined
 24293 00011A69 803804                  	cmp byte [rax], T_closure
 24294 00011A6C 0F8507340000            	jne L_error_non_closure
 24295 00011A72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24296 00011A75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24297 00011A78 483D[02000000]          	cmp rax, sob_boolean_false
 24298 00011A7E 740F                    	je .L_if_else_007a
 24299 00011A80 48B8-                   	mov rax, L_constants + 2
 24299 00011A82 [0200000000000000] 
 24300 00011A8A E940010000              	jmp .L_if_end_007a
 24301                                  .L_if_else_007a:
 24302                                  	; preparing a non-tail-call
 24303 00011A8F 488B4520                	mov rax, PARAM(0)	; param a
 24304 00011A93 50                      	push rax
 24305                                  	; preparing a non-tail-call
 24306 00011A94 488B4528                	mov rax, PARAM(1)	; param s
 24307 00011A98 50                      	push rax
 24308 00011A99 6A01                    	push 1	; arg count
 24309 00011A9B 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
 24310 00011AA3 803805                  	cmp byte [rax], T_undefined
 24311 00011AA6 0F8449330000            	je L_error_fvar_undefined
 24312 00011AAC 803804                  	cmp byte [rax], T_closure
 24313 00011AAF 0F85C4330000            	jne L_error_non_closure
 24314 00011AB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24315 00011AB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24316 00011ABB 50                      	push rax
 24317 00011ABC 6A02                    	push 2	; arg count
 24318 00011ABE 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24319 00011AC6 803805                  	cmp byte [rax], T_undefined
 24320 00011AC9 0F8426330000            	je L_error_fvar_undefined
 24321 00011ACF 803804                  	cmp byte [rax], T_closure
 24322 00011AD2 0F85A1330000            	jne L_error_non_closure
 24323 00011AD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24324 00011ADB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24325 00011ADE 483D[02000000]          	cmp rax, sob_boolean_false
 24326 00011AE4 7463                    	je .L_if_else_0079
 24327                                  	; Initiating tail-call optimization
 24328 00011AE6 488B4528                	mov rax, PARAM(1)	; param s
 24329 00011AEA 50                      	push rax
 24330 00011AEB 6A01                    	push 1	; Number of arguments
 24331 00011AED 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24332 00011AF5 803805                  	cmp byte [rax], T_undefined
 24333 00011AF8 0F84F7320000            	je L_error_fvar_undefined
 24334 00011AFE 803804                  	cmp byte [rax], T_closure
 24335 00011B01 0F8572330000            	jne L_error_non_closure
 24336 00011B07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24337                                  
 24338                                  	; Reclaiming the current stack frame
 24339 00011B0A FF7508                  	push qword [rbp + 8]
 24340 00011B0D FF7500                  	push qword [rbp]
 24341 00011B10 41BA05000000            	mov r10, 1 + 4
 24342 00011B16 4C8B4518                	mov r8, COUNT
 24343 00011B1A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24344 00011B1F 4C8D4DF8                	lea r9, [rbp - 8]
 24345                                  .L_tc_recycle_frame_loop_00cc:
 24346 00011B23 4983FA00                	cmp r10, 0
 24347 00011B27 7413                    	je .L_tc_recycle_frame_done_00cc
 24348 00011B29 4D8B19                  	mov r11, qword [r9]
 24349 00011B2C 4D8918                  	mov qword [r8], r11
 24350 00011B2F 49FFCA                  	dec r10
 24351 00011B32 4983E808                	sub r8, 8
 24352 00011B36 4983E908                	sub r9, 8
 24353 00011B3A EBE7                    	jmp .L_tc_recycle_frame_loop_00cc
 24354                                  .L_tc_recycle_frame_done_00cc:
 24355 00011B3C 498D6008                	lea rsp, [r8 + 8]
 24356 00011B40 5D                      	pop rbp
 24357 00011B41 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24358 00011B44 E986000000              	jmp .L_if_end_0079
 24359                                  .L_if_else_0079:
 24360                                  	; Initiating tail-call optimization
 24361                                  	; preparing a non-tail-call
 24362 00011B49 488B4528                	mov rax, PARAM(1)	; param s
 24363 00011B4D 50                      	push rax
 24364 00011B4E 6A01                    	push 1	; arg count
 24365 00011B50 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24366 00011B58 803805                  	cmp byte [rax], T_undefined
 24367 00011B5B 0F8494320000            	je L_error_fvar_undefined
 24368 00011B61 803804                  	cmp byte [rax], T_closure
 24369 00011B64 0F850F330000            	jne L_error_non_closure
 24370 00011B6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24371 00011B6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24372 00011B70 50                      	push rax
 24373 00011B71 488B4520                	mov rax, PARAM(0)	; param a
 24374 00011B75 50                      	push rax
 24375 00011B76 6A02                    	push 2	; Number of arguments
 24376 00011B78 488B0425[07100000]      	mov rax, qword [free_var_34]	; free var assoc
 24377 00011B80 803805                  	cmp byte [rax], T_undefined
 24378 00011B83 0F846C320000            	je L_error_fvar_undefined
 24379 00011B89 803804                  	cmp byte [rax], T_closure
 24380 00011B8C 0F85E7320000            	jne L_error_non_closure
 24381 00011B92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24382                                  
 24383                                  	; Reclaiming the current stack frame
 24384 00011B95 FF7508                  	push qword [rbp + 8]
 24385 00011B98 FF7500                  	push qword [rbp]
 24386 00011B9B 41BA06000000            	mov r10, 2 + 4
 24387 00011BA1 4C8B4518                	mov r8, COUNT
 24388 00011BA5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24389 00011BAA 4C8D4DF8                	lea r9, [rbp - 8]
 24390                                  .L_tc_recycle_frame_loop_00cd:
 24391 00011BAE 4983FA00                	cmp r10, 0
 24392 00011BB2 7413                    	je .L_tc_recycle_frame_done_00cd
 24393 00011BB4 4D8B19                  	mov r11, qword [r9]
 24394 00011BB7 4D8918                  	mov qword [r8], r11
 24395 00011BBA 49FFCA                  	dec r10
 24396 00011BBD 4983E808                	sub r8, 8
 24397 00011BC1 4983E908                	sub r9, 8
 24398 00011BC5 EBE7                    	jmp .L_tc_recycle_frame_loop_00cd
 24399                                  .L_tc_recycle_frame_done_00cd:
 24400 00011BC7 498D6008                	lea rsp, [r8 + 8]
 24401 00011BCB 5D                      	pop rbp
 24402 00011BCC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24403                                  .L_if_end_0079:
 24404                                  .L_if_end_007a:
 24405 00011BCF C9                      	leave
 24406 00011BD0 C22000                  	ret AND_KILL_FRAME(2)
 24407                                  .L_lambda_simple_end_0098:	; new closure is in rax
 24408 00011BD3 48890425[07100000]      	mov qword [free_var_34], rax
 24409 00011BDB 48B8-                   	mov rax, sob_void
 24409 00011BDD [0000000000000000] 
 24410                                  
 24411 00011BE5 4889C7                  	mov rdi, rax
 24412 00011BE8 E88A350000              	call print_sexpr_if_not_void
 24413                                  	; preparing a non-tail-call
 24414 00011BED 48B8-                   	mov rax, L_constants + 2007
 24414 00011BEF [D707000000000000] 
 24415 00011BF7 50                      	push rax
 24416 00011BF8 48B8-                   	mov rax, L_constants + 2007
 24416 00011BFA [D707000000000000] 
 24417 00011C02 50                      	push rax
 24418 00011C03 6A02                    	push 2	; arg count
 24419 00011C05 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24420 00011C0A E813330000              	call malloc
 24421 00011C0F 50                      	push rax
 24422 00011C10 BF00000000              	mov rdi, 8 * 0	; new rib
 24423 00011C15 E808330000              	call malloc
 24424 00011C1A 50                      	push rax
 24425 00011C1B BF08000000              	mov rdi, 8 * 1	; extended env
 24426 00011C20 E8FD320000              	call malloc
 24427 00011C25 488B7D10                	mov rdi, ENV
 24428 00011C29 BE00000000              	mov rsi, 0
 24429 00011C2E BA01000000              	mov rdx, 1
 24430                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 24431 00011C33 4883FE00                	cmp rsi, 0
 24432 00011C37 7410                    	je .L_lambda_simple_env_end_0099
 24433 00011C39 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24434 00011C3D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24435 00011C41 48FFC6                  	inc rsi
 24436 00011C44 48FFC2                  	inc rdx
 24437 00011C47 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 24438                                  .L_lambda_simple_env_end_0099:
 24439 00011C49 5B                      	pop rbx
 24440 00011C4A BE00000000              	mov rsi, 0
 24441                                  .L_lambda_simple_params_loop_0099:	; copy params
 24442 00011C4F 4883FE00                	cmp rsi, 0
 24443 00011C53 740E                    	je .L_lambda_simple_params_end_0099
 24444 00011C55 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24445 00011C5A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24446 00011C5E 48FFC6                  	inc rsi
 24447 00011C61 EBEC                    	jmp .L_lambda_simple_params_loop_0099
 24448                                  .L_lambda_simple_params_end_0099:
 24449 00011C63 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24450 00011C66 4889C3                  	mov rbx, rax
 24451 00011C69 58                      	pop rax
 24452 00011C6A C60004                  	mov byte [rax], T_closure
 24453 00011C6D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24454 00011C71 48C74009[7E1C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 24455 00011C79 E98E070000              	jmp .L_lambda_simple_end_0099
 24456                                  .L_lambda_simple_code_0099:	; lambda-simple body
 24457 00011C7E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24458 00011C84 740B                    	je .L_lambda_simple_arity_check_ok_0099
 24459 00011C86 FF742410                	push qword [rsp + 8 * 2]
 24460 00011C8A 6A02                    	push 2
 24461 00011C8C E94A320000              	jmp L_error_incorrect_arity_simple
 24462                                  .L_lambda_simple_arity_check_ok_0099:
 24463 00011C91 C8000000                	enter 0, 0
 24464 00011C95 BF08000000              	mov rdi, 8 * 1
 24465 00011C9A E883320000              	call malloc
 24466 00011C9F 488B5D20                	mov rbx, PARAM(0)
 24467 00011CA3 488918                  	mov qword [rax], rbx
 24468 00011CA6 48894520                	mov PARAM(0), rax
 24469 00011CAA 48B8-                   	mov rax, sob_void
 24469 00011CAC [0000000000000000] 
 24470                                  
 24471 00011CB4 BF08000000              	mov rdi, 8 * 1
 24472 00011CB9 E864320000              	call malloc
 24473 00011CBE 488B5D28                	mov rbx, PARAM(1)
 24474 00011CC2 488918                  	mov qword [rax], rbx
 24475 00011CC5 48894528                	mov PARAM(1), rax
 24476 00011CC9 48B8-                   	mov rax, sob_void
 24476 00011CCB [0000000000000000] 
 24477                                  
 24478 00011CD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24479 00011CD8 E845320000              	call malloc
 24480 00011CDD 50                      	push rax
 24481 00011CDE BF10000000              	mov rdi, 8 * 2	; new rib
 24482 00011CE3 E83A320000              	call malloc
 24483 00011CE8 50                      	push rax
 24484 00011CE9 BF10000000              	mov rdi, 8 * 2	; extended env
 24485 00011CEE E82F320000              	call malloc
 24486 00011CF3 488B7D10                	mov rdi, ENV
 24487 00011CF7 BE00000000              	mov rsi, 0
 24488 00011CFC BA01000000              	mov rdx, 1
 24489                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 24490 00011D01 4883FE01                	cmp rsi, 1
 24491 00011D05 7410                    	je .L_lambda_simple_env_end_009a
 24492 00011D07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24493 00011D0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24494 00011D0F 48FFC6                  	inc rsi
 24495 00011D12 48FFC2                  	inc rdx
 24496 00011D15 EBEA                    	jmp .L_lambda_simple_env_loop_009a
 24497                                  .L_lambda_simple_env_end_009a:
 24498 00011D17 5B                      	pop rbx
 24499 00011D18 BE00000000              	mov rsi, 0
 24500                                  .L_lambda_simple_params_loop_009a:	; copy params
 24501 00011D1D 4883FE02                	cmp rsi, 2
 24502 00011D21 740E                    	je .L_lambda_simple_params_end_009a
 24503 00011D23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24504 00011D28 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24505 00011D2C 48FFC6                  	inc rsi
 24506 00011D2F EBEC                    	jmp .L_lambda_simple_params_loop_009a
 24507                                  .L_lambda_simple_params_end_009a:
 24508 00011D31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24509 00011D34 4889C3                  	mov rbx, rax
 24510 00011D37 58                      	pop rax
 24511 00011D38 C60004                  	mov byte [rax], T_closure
 24512 00011D3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24513 00011D3F 48C74009[4C1D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 24514 00011D47 E96C020000              	jmp .L_lambda_simple_end_009a
 24515                                  .L_lambda_simple_code_009a:	; lambda-simple body
 24516 00011D4C 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24517 00011D52 740B                    	je .L_lambda_simple_arity_check_ok_009a
 24518 00011D54 FF742410                	push qword [rsp + 8 * 2]
 24519 00011D58 6A03                    	push 3
 24520 00011D5A E97C310000              	jmp L_error_incorrect_arity_simple
 24521                                  .L_lambda_simple_arity_check_ok_009a:
 24522 00011D5F C8000000                	enter 0, 0
 24523                                  	; preparing a non-tail-call
 24524 00011D63 488B4530                	mov rax, PARAM(2)	; param s
 24525 00011D67 50                      	push rax
 24526 00011D68 6A01                    	push 1	; arg count
 24527 00011D6A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24528 00011D72 803805                  	cmp byte [rax], T_undefined
 24529 00011D75 0F847A300000            	je L_error_fvar_undefined
 24530 00011D7B 803804                  	cmp byte [rax], T_closure
 24531 00011D7E 0F85F5300000            	jne L_error_non_closure
 24532 00011D84 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24533 00011D87 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24534 00011D8A 483D[02000000]          	cmp rax, sob_boolean_false
 24535 00011D90 7409                    	je .L_if_else_007b
 24536 00011D92 488B4520                	mov rax, PARAM(0)	; param target
 24537 00011D96 E919020000              	jmp .L_if_end_007b
 24538                                  .L_if_else_007b:
 24539                                  	; Initiating tail-call optimization
 24540                                  	; preparing a non-tail-call
 24541                                  	; preparing a non-tail-call
 24542                                  	; preparing a non-tail-call
 24543 00011D9B 488B4530                	mov rax, PARAM(2)	; param s
 24544 00011D9F 50                      	push rax
 24545 00011DA0 6A01                    	push 1	; arg count
 24546 00011DA2 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24547 00011DAA 803805                  	cmp byte [rax], T_undefined
 24548 00011DAD 0F8442300000            	je L_error_fvar_undefined
 24549 00011DB3 803804                  	cmp byte [rax], T_closure
 24550 00011DB6 0F85BD300000            	jne L_error_non_closure
 24551 00011DBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24552 00011DBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24553 00011DC2 50                      	push rax
 24554 00011DC3 6A01                    	push 1	; arg count
 24555 00011DC5 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24556 00011DCD 803805                  	cmp byte [rax], T_undefined
 24557 00011DD0 0F841F300000            	je L_error_fvar_undefined
 24558 00011DD6 803804                  	cmp byte [rax], T_closure
 24559 00011DD9 0F859A300000            	jne L_error_non_closure
 24560 00011DDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24561 00011DE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24562 00011DE5 50                      	push rax
 24563 00011DE6 48B8-                   	mov rax, L_constants + 2135
 24563 00011DE8 [5708000000000000] 
 24564 00011DF0 50                      	push rax
 24565                                  	; preparing a non-tail-call
 24566 00011DF1 488B4530                	mov rax, PARAM(2)	; param s
 24567 00011DF5 50                      	push rax
 24568 00011DF6 6A01                    	push 1	; arg count
 24569 00011DF8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24570 00011E00 803805                  	cmp byte [rax], T_undefined
 24571 00011E03 0F84EC2F0000            	je L_error_fvar_undefined
 24572 00011E09 803804                  	cmp byte [rax], T_closure
 24573 00011E0C 0F8567300000            	jne L_error_non_closure
 24574 00011E12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24575 00011E15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24576 00011E18 50                      	push rax
 24577 00011E19 488B4528                	mov rax, PARAM(1)	; param i
 24578 00011E1D 50                      	push rax
 24579 00011E1E 488B4520                	mov rax, PARAM(0)	; param target
 24580 00011E22 50                      	push rax
 24581 00011E23 6A05                    	push 5	; arg count
 24582 00011E25 488B4510                	mov rax, ENV
 24583 00011E29 488B00                  	mov rax, qword [rax + 8 * 0]
 24584 00011E2C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24585 00011E30 488B00                  	mov rax, qword [rax]
 24586 00011E33 803804                  	cmp byte [rax], T_closure
 24587 00011E36 0F853D300000            	jne L_error_non_closure
 24588 00011E3C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24589 00011E3F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24590 00011E42 50                      	push rax
 24591 00011E43 6A01                    	push 1	; Number of arguments
 24592 00011E45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24593 00011E4A E8D3300000              	call malloc
 24594 00011E4F 50                      	push rax
 24595 00011E50 BF18000000              	mov rdi, 8 * 3	; new rib
 24596 00011E55 E8C8300000              	call malloc
 24597 00011E5A 50                      	push rax
 24598 00011E5B BF18000000              	mov rdi, 8 * 3	; extended env
 24599 00011E60 E8BD300000              	call malloc
 24600 00011E65 488B7D10                	mov rdi, ENV
 24601 00011E69 BE00000000              	mov rsi, 0
 24602 00011E6E BA01000000              	mov rdx, 1
 24603                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 24604 00011E73 4883FE02                	cmp rsi, 2
 24605 00011E77 7410                    	je .L_lambda_simple_env_end_009b
 24606 00011E79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24607 00011E7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24608 00011E81 48FFC6                  	inc rsi
 24609 00011E84 48FFC2                  	inc rdx
 24610 00011E87 EBEA                    	jmp .L_lambda_simple_env_loop_009b
 24611                                  .L_lambda_simple_env_end_009b:
 24612 00011E89 5B                      	pop rbx
 24613 00011E8A BE00000000              	mov rsi, 0
 24614                                  .L_lambda_simple_params_loop_009b:	; copy params
 24615 00011E8F 4883FE03                	cmp rsi, 3
 24616 00011E93 740E                    	je .L_lambda_simple_params_end_009b
 24617 00011E95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24618 00011E9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24619 00011E9E 48FFC6                  	inc rsi
 24620 00011EA1 EBEC                    	jmp .L_lambda_simple_params_loop_009b
 24621                                  .L_lambda_simple_params_end_009b:
 24622 00011EA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24623 00011EA6 4889C3                  	mov rbx, rax
 24624 00011EA9 58                      	pop rax
 24625 00011EAA C60004                  	mov byte [rax], T_closure
 24626 00011EAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24627 00011EB1 48C74009[BE1E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 24628 00011EB9 E9B0000000              	jmp .L_lambda_simple_end_009b
 24629                                  .L_lambda_simple_code_009b:	; lambda-simple body
 24630 00011EBE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24631 00011EC4 740B                    	je .L_lambda_simple_arity_check_ok_009b
 24632 00011EC6 FF742410                	push qword [rsp + 8 * 2]
 24633 00011ECA 6A01                    	push 1
 24634 00011ECC E90A300000              	jmp L_error_incorrect_arity_simple
 24635                                  .L_lambda_simple_arity_check_ok_009b:
 24636 00011ED1 C8000000                	enter 0, 0
 24637                                  	; Initiating tail-call optimization
 24638                                  	; preparing a non-tail-call
 24639 00011ED5 488B4510                	mov rax, ENV
 24640 00011ED9 488B00                  	mov rax, qword [rax + 8 * 0]
 24641 00011EDC 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 24642 00011EE0 50                      	push rax
 24643 00011EE1 6A01                    	push 1	; arg count
 24644 00011EE3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24645 00011EEB 803805                  	cmp byte [rax], T_undefined
 24646 00011EEE 0F84012F0000            	je L_error_fvar_undefined
 24647 00011EF4 803804                  	cmp byte [rax], T_closure
 24648 00011EF7 0F857C2F0000            	jne L_error_non_closure
 24649 00011EFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24650 00011F00 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24651 00011F03 50                      	push rax
 24652 00011F04 488B4520                	mov rax, PARAM(0)	; param i
 24653 00011F08 50                      	push rax
 24654 00011F09 488B4510                	mov rax, ENV
 24655 00011F0D 488B00                  	mov rax, qword [rax + 8 * 0]
 24656 00011F10 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 24657 00011F13 50                      	push rax
 24658 00011F14 6A03                    	push 3	; Number of arguments
 24659 00011F16 488B4510                	mov rax, ENV
 24660 00011F1A 488B4008                	mov rax, qword [rax + 8 * 1]
 24661 00011F1E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24662 00011F21 488B00                  	mov rax, qword [rax]
 24663 00011F24 803804                  	cmp byte [rax], T_closure
 24664 00011F27 0F854C2F0000            	jne L_error_non_closure
 24665 00011F2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24666                                  
 24667                                  	; Reclaiming the current stack frame
 24668 00011F30 FF7508                  	push qword [rbp + 8]
 24669 00011F33 FF7500                  	push qword [rbp]
 24670 00011F36 41BA07000000            	mov r10, 3 + 4
 24671 00011F3C 4C8B4518                	mov r8, COUNT
 24672 00011F40 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24673 00011F45 4C8D4DF8                	lea r9, [rbp - 8]
 24674                                  .L_tc_recycle_frame_loop_00ce:
 24675 00011F49 4983FA00                	cmp r10, 0
 24676 00011F4D 7413                    	je .L_tc_recycle_frame_done_00ce
 24677 00011F4F 4D8B19                  	mov r11, qword [r9]
 24678 00011F52 4D8918                  	mov qword [r8], r11
 24679 00011F55 49FFCA                  	dec r10
 24680 00011F58 4983E808                	sub r8, 8
 24681 00011F5C 4983E908                	sub r9, 8
 24682 00011F60 EBE7                    	jmp .L_tc_recycle_frame_loop_00ce
 24683                                  .L_tc_recycle_frame_done_00ce:
 24684 00011F62 498D6008                	lea rsp, [r8 + 8]
 24685 00011F66 5D                      	pop rbp
 24686 00011F67 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24687 00011F6A C9                      	leave
 24688 00011F6B C21800                  	ret AND_KILL_FRAME(1)
 24689                                  .L_lambda_simple_end_009b:	; new closure is in rax
 24690 00011F6E 803804                  	cmp byte [rax], T_closure
 24691 00011F71 0F85022F0000            	jne L_error_non_closure
 24692 00011F77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24693                                  
 24694                                  	; Reclaiming the current stack frame
 24695 00011F7A FF7508                  	push qword [rbp + 8]
 24696 00011F7D FF7500                  	push qword [rbp]
 24697 00011F80 41BA05000000            	mov r10, 1 + 4
 24698 00011F86 4C8B4518                	mov r8, COUNT
 24699 00011F8A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24700 00011F8F 4C8D4DF8                	lea r9, [rbp - 8]
 24701                                  .L_tc_recycle_frame_loop_00cf:
 24702 00011F93 4983FA00                	cmp r10, 0
 24703 00011F97 7413                    	je .L_tc_recycle_frame_done_00cf
 24704 00011F99 4D8B19                  	mov r11, qword [r9]
 24705 00011F9C 4D8918                  	mov qword [r8], r11
 24706 00011F9F 49FFCA                  	dec r10
 24707 00011FA2 4983E808                	sub r8, 8
 24708 00011FA6 4983E908                	sub r9, 8
 24709 00011FAA EBE7                    	jmp .L_tc_recycle_frame_loop_00cf
 24710                                  .L_tc_recycle_frame_done_00cf:
 24711 00011FAC 498D6008                	lea rsp, [r8 + 8]
 24712 00011FB0 5D                      	pop rbp
 24713 00011FB1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24714                                  .L_if_end_007b:
 24715 00011FB4 C9                      	leave
 24716 00011FB5 C22800                  	ret AND_KILL_FRAME(3)
 24717                                  .L_lambda_simple_end_009a:	; new closure is in rax
 24718 00011FB8 50                      	push rax
 24719 00011FB9 488B4520                	mov rax, PARAM(0)	; param run
 24720 00011FBD 8F00                    	pop qword [rax]
 24721 00011FBF 48B8-                   	mov rax, sob_void
 24721 00011FC1 [0000000000000000] 
 24722                                  
 24723 00011FC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24724 00011FCE E84F2F0000              	call malloc
 24725 00011FD3 50                      	push rax
 24726 00011FD4 BF10000000              	mov rdi, 8 * 2	; new rib
 24727 00011FD9 E8442F0000              	call malloc
 24728 00011FDE 50                      	push rax
 24729 00011FDF BF10000000              	mov rdi, 8 * 2	; extended env
 24730 00011FE4 E8392F0000              	call malloc
 24731 00011FE9 488B7D10                	mov rdi, ENV
 24732 00011FED BE00000000              	mov rsi, 0
 24733 00011FF2 BA01000000              	mov rdx, 1
 24734                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 24735 00011FF7 4883FE01                	cmp rsi, 1
 24736 00011FFB 7410                    	je .L_lambda_simple_env_end_009c
 24737 00011FFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24738 00012001 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24739 00012005 48FFC6                  	inc rsi
 24740 00012008 48FFC2                  	inc rdx
 24741 0001200B EBEA                    	jmp .L_lambda_simple_env_loop_009c
 24742                                  .L_lambda_simple_env_end_009c:
 24743 0001200D 5B                      	pop rbx
 24744 0001200E BE00000000              	mov rsi, 0
 24745                                  .L_lambda_simple_params_loop_009c:	; copy params
 24746 00012013 4883FE02                	cmp rsi, 2
 24747 00012017 740E                    	je .L_lambda_simple_params_end_009c
 24748 00012019 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24749 0001201E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24750 00012022 48FFC6                  	inc rsi
 24751 00012025 EBEC                    	jmp .L_lambda_simple_params_loop_009c
 24752                                  .L_lambda_simple_params_end_009c:
 24753 00012027 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24754 0001202A 4889C3                  	mov rbx, rax
 24755 0001202D 58                      	pop rax
 24756 0001202E C60004                  	mov byte [rax], T_closure
 24757 00012031 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24758 00012035 48C74009[42200100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 24759 0001203D E946010000              	jmp .L_lambda_simple_end_009c
 24760                                  .L_lambda_simple_code_009c:	; lambda-simple body
 24761 00012042 48837C241005            	cmp qword [rsp + 8 * 2], 5
 24762 00012048 740B                    	je .L_lambda_simple_arity_check_ok_009c
 24763 0001204A FF742410                	push qword [rsp + 8 * 2]
 24764 0001204E 6A05                    	push 5
 24765 00012050 E9862E0000              	jmp L_error_incorrect_arity_simple
 24766                                  .L_lambda_simple_arity_check_ok_009c:
 24767 00012055 C8000000                	enter 0, 0
 24768                                  	; preparing a non-tail-call
 24769 00012059 488B4540                	mov rax, PARAM(4)	; param limit
 24770 0001205D 50                      	push rax
 24771 0001205E 488B4538                	mov rax, PARAM(3)	; param j
 24772 00012062 50                      	push rax
 24773 00012063 6A02                    	push 2	; arg count
 24774 00012065 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24775 0001206D 803805                  	cmp byte [rax], T_undefined
 24776 00012070 0F847F2D0000            	je L_error_fvar_undefined
 24777 00012076 803804                  	cmp byte [rax], T_closure
 24778 00012079 0F85FA2D0000            	jne L_error_non_closure
 24779 0001207F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24780 00012082 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24781 00012085 483D[02000000]          	cmp rax, sob_boolean_false
 24782 0001208B 0F84EF000000            	je .L_if_else_007c
 24783                                  	; preparing a non-tail-call
 24784                                  	; preparing a non-tail-call
 24785 00012091 488B4538                	mov rax, PARAM(3)	; param j
 24786 00012095 50                      	push rax
 24787 00012096 488B4530                	mov rax, PARAM(2)	; param str
 24788 0001209A 50                      	push rax
 24789 0001209B 6A02                    	push 2	; arg count
 24790 0001209D 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 24791 000120A5 803805                  	cmp byte [rax], T_undefined
 24792 000120A8 0F84472D0000            	je L_error_fvar_undefined
 24793 000120AE 803804                  	cmp byte [rax], T_closure
 24794 000120B1 0F85C22D0000            	jne L_error_non_closure
 24795 000120B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24796 000120BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24797 000120BD 50                      	push rax
 24798 000120BE 488B4528                	mov rax, PARAM(1)	; param i
 24799 000120C2 50                      	push rax
 24800 000120C3 488B4520                	mov rax, PARAM(0)	; param target
 24801 000120C7 50                      	push rax
 24802 000120C8 6A03                    	push 3	; arg count
 24803 000120CA 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 24804 000120D2 803805                  	cmp byte [rax], T_undefined
 24805 000120D5 0F841A2D0000            	je L_error_fvar_undefined
 24806 000120DB 803804                  	cmp byte [rax], T_closure
 24807 000120DE 0F85952D0000            	jne L_error_non_closure
 24808 000120E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24809 000120E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24810                                  
 24811                                  	; preparing a non-tail-call
 24812 000120EA 488B4540                	mov rax, PARAM(4)	; param limit
 24813 000120EE 50                      	push rax
 24814                                  	; preparing a non-tail-call
 24815 000120EF 48B8-                   	mov rax, L_constants + 2270
 24815 000120F1 [DE08000000000000] 
 24816 000120F9 50                      	push rax
 24817 000120FA 488B4538                	mov rax, PARAM(3)	; param j
 24818 000120FE 50                      	push rax
 24819 000120FF 6A02                    	push 2	; arg count
 24820 00012101 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24821 00012109 803805                  	cmp byte [rax], T_undefined
 24822 0001210C 0F84E32C0000            	je L_error_fvar_undefined
 24823 00012112 803804                  	cmp byte [rax], T_closure
 24824 00012115 0F855E2D0000            	jne L_error_non_closure
 24825 0001211B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24826 0001211E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24827 00012121 50                      	push rax
 24828 00012122 488B4530                	mov rax, PARAM(2)	; param str
 24829 00012126 50                      	push rax
 24830                                  	; preparing a non-tail-call
 24831 00012127 48B8-                   	mov rax, L_constants + 2270
 24831 00012129 [DE08000000000000] 
 24832 00012131 50                      	push rax
 24833 00012132 488B4528                	mov rax, PARAM(1)	; param i
 24834 00012136 50                      	push rax
 24835 00012137 6A02                    	push 2	; arg count
 24836 00012139 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24837 00012141 803805                  	cmp byte [rax], T_undefined
 24838 00012144 0F84AB2C0000            	je L_error_fvar_undefined
 24839 0001214A 803804                  	cmp byte [rax], T_closure
 24840 0001214D 0F85262D0000            	jne L_error_non_closure
 24841 00012153 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24842 00012156 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24843 00012159 50                      	push rax
 24844 0001215A 488B4520                	mov rax, PARAM(0)	; param target
 24845 0001215E 50                      	push rax
 24846 0001215F 6A05                    	push 5	; arg count
 24847 00012161 488B4510                	mov rax, ENV
 24848 00012165 488B00                  	mov rax, qword [rax + 8 * 0]
 24849 00012168 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24850 0001216C 488B00                  	mov rax, qword [rax]
 24851 0001216F 803804                  	cmp byte [rax], T_closure
 24852 00012172 0F85012D0000            	jne L_error_non_closure
 24853 00012178 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24854 0001217B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24855 0001217E EB04                    	jmp .L_if_end_007c
 24856                                  .L_if_else_007c:
 24857 00012180 488B4528                	mov rax, PARAM(1)	; param i
 24858                                  .L_if_end_007c:
 24859 00012184 C9                      	leave
 24860 00012185 C23800                  	ret AND_KILL_FRAME(5)
 24861                                  .L_lambda_simple_end_009c:	; new closure is in rax
 24862 00012188 50                      	push rax
 24863 00012189 488B4528                	mov rax, PARAM(1)	; param add
 24864 0001218D 8F00                    	pop qword [rax]
 24865 0001218F 48B8-                   	mov rax, sob_void
 24865 00012191 [0000000000000000] 
 24866                                  
 24867 00012199 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24868 0001219E E87F2D0000              	call malloc
 24869 000121A3 50                      	push rax
 24870 000121A4 BF10000000              	mov rdi, 8 * 2	; new rib
 24871 000121A9 E8742D0000              	call malloc
 24872 000121AE 50                      	push rax
 24873 000121AF BF10000000              	mov rdi, 8 * 2	; extended env
 24874 000121B4 E8692D0000              	call malloc
 24875 000121B9 488B7D10                	mov rdi, ENV
 24876 000121BD BE00000000              	mov rsi, 0
 24877 000121C2 BA01000000              	mov rdx, 1
 24878                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 24879 000121C7 4883FE01                	cmp rsi, 1
 24880 000121CB 7410                    	je .L_lambda_opt_env_end_0017
 24881 000121CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24882 000121D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24883 000121D5 48FFC6                  	inc rsi
 24884 000121D8 48FFC2                  	inc rdx
 24885 000121DB EBEA                    	jmp .L_lambda_opt_env_loop_0017
 24886                                  .L_lambda_opt_env_end_0017:
 24887 000121DD 5B                      	pop rbx
 24888 000121DE BE00000000              	mov rsi, 0
 24889                                  .L_lambda_opt_params_loop_0017:	; copy params
 24890 000121E3 4883FE02                	cmp rsi, 2
 24891 000121E7 740E                    	je .L_lambda_opt_params_end_0017
 24892 000121E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24893 000121EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24894 000121F2 48FFC6                  	inc rsi
 24895 000121F5 EBEC                    	jmp .L_lambda_opt_params_loop_0017
 24896                                  .L_lambda_opt_params_end_0017:
 24897 000121F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24898 000121FA 4889C3                  	mov rbx, rax
 24899 000121FD 58                      	pop rax
 24900 000121FE C60004                  	mov byte [rax], T_closure
 24901 00012201 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24902 00012205 48C74009[12220100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 24903 0001220D E9F6010000              	jmp .L_lambda_opt_end_0017
 24904                                  .L_lambda_opt_code_0017:
 24905 00012212 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 24906 00012217 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 24907 0001221B 7407                    	je .L_lambda_opt_arity_check_exact_0017	; Jump if arity matches
 24908 0001221D 7F4C                    	jg .L_lambda_opt_arity_check_more_0017	; Jump if more arguments passed
 24909 0001221F E9CB2C0000              	jmp L_error_incorrect_arity_opt
 24910                                  .L_lambda_opt_arity_check_exact_0017:
 24911 00012224 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 24912 00012227 4983C603                	add r14, 3 ; add 3 first stack values
 24913 0001222B 41BF00000000            	mov r15, 0 ; r15 = index
 24914 00012231 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 24915 00012235 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 24916 0001223D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 24917                                  .L_lambda_opt_stack_shrink_loop_0017:
 24918 0001223F 4983FE00                	cmp r14, 0
 24919 00012243 7E11                    	jle .L_make_lambda_opt_exact_finish_0017
 24920 00012245 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 24921 0001224A 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 24922 0001224E 49FFCE                  	dec r14 ; next loop value
 24923 00012251 49FFC7                  	inc r15 ; update i
 24924 00012254 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 24925                                  .L_make_lambda_opt_exact_finish_0017:
 24926 00012256 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 24927 0001225E 49FFC2                  	inc r10
 24928 00012261 4C89542410              	mov qword [rsp + 8 * 2], r10
 24929 00012266 E99E000000              	jmp .L_lambda_opt_stack_adjusted_0017
 24930                                  .L_lambda_opt_arity_check_more_0017:
 24931 0001226B 4D89D6                  	mov r14, r10 ; r14 = num args
 24932 0001226E 4D89D7                  	mov r15, r10 ; r15 = num args
 24933 00012271 41B900000000            	mov r9, 0; r9 = number of params 
 24934 00012277 4D29CE                  	sub r14, r9 ; r14 = extra args
 24935 0001227A 4D01F1                  	add r9, r14 ; r9 = num args
 24936 0001227D 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 24936 0001227F [0100000000000000] 
 24937 00012287 EB00                    	jmp .L_make_lambda_opt_arg_list_0017
 24938                                  .L_make_lambda_opt_arg_list_0017:
 24939 00012289 4983FE00                	cmp r14, 0
 24940 0001228D 7E25                    	jle .L_make_lambda_opt_stack_fixed_0017
 24941 0001228F 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 24942 00012294 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 24943 00012299 E8842C0000              	call malloc                         ; Allocate memory, result in rax
 24944 0001229E C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 24945 000122A1 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 24946 000122A5 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 24947 000122A9 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 24948 000122AC 49FFC9                  	dec r9                              ; args index minus 1
 24949 000122AF 49FFCE                  	dec r14                             ; next iteration
 24950 000122B2 EBD5                    	jmp .L_make_lambda_opt_arg_list_0017
 24951                                  .L_make_lambda_opt_stack_fixed_0017:
 24952 000122B4 4D89FE                  	mov r14, r15 ; r14 = num args
 24953 000122B7 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 24954 000122BA 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 24955 000122BE 41BA00000000            	mov r10, 0; r10 = num of params
 24956 000122C4 4D29D6                  	sub r14, r10 ; r14 = extra args
 24957 000122C7 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 24958 000122CA 49FFCE                  	dec r14 ; how much we need to change stack wise?
 24959 000122CD 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 24960 000122D2 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0017
 24961                                  .L_lambda_opt_stack_shrink_loop_more_0017:
 24962 000122D4 4983F800                	cmp r8, 0
 24963 000122D8 7E15                    	jle .L_make_lambda_opt_more_finish_0017
 24964 000122DA 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 24965 000122DE 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 24966 000122E2 4D8D26                  	lea r12, [r14]
 24967 000122E5 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 24968 000122EA 49FFC8                  	dec r8 ; next iteration
 24969 000122ED EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0017
 24970                                  .L_make_lambda_opt_more_finish_0017:
 24971 000122EF 4D89F8                  	mov r8, r15 ; num of args
 24972 000122F2 41BA00000000            	mov r10, 0
 24973 000122F8 4D29D0                  	sub r8, r10 ; num of new args
 24974 000122FB 49FFC0                  	inc r8
 24975 000122FE 4C89442420              	mov qword [rsp + 8 * 4], r8
 24976 00012303 4883C410                	add rsp, 8 * 2  ; 
 24977 00012307 EB00                    	jmp .L_lambda_opt_stack_adjusted_0017
 24978                                  .L_lambda_opt_stack_adjusted_0017:
 24979 00012309 C8000000                	enter 0, 0
 24980                                  	; Initiating tail-call optimization
 24981 0001230D 488B4520                	mov rax, PARAM(0)	; param strings
 24982 00012311 50                      	push rax
 24983 00012312 48B8-                   	mov rax, L_constants + 2135
 24983 00012314 [5708000000000000] 
 24984 0001231C 50                      	push rax
 24985                                  	; preparing a non-tail-call
 24986                                  	; preparing a non-tail-call
 24987                                  	; preparing a non-tail-call
 24988 0001231D 488B4520                	mov rax, PARAM(0)	; param strings
 24989 00012321 50                      	push rax
 24990 00012322 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24991 0001232A 803805                  	cmp byte [rax], T_undefined
 24992 0001232D 0F84C22A0000            	je L_error_fvar_undefined
 24993 00012333 50                      	push rax
 24994 00012334 6A02                    	push 2	; arg count
 24995 00012336 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 24996 0001233E 803805                  	cmp byte [rax], T_undefined
 24997 00012341 0F84AE2A0000            	je L_error_fvar_undefined
 24998 00012347 803804                  	cmp byte [rax], T_closure
 24999 0001234A 0F85292B0000            	jne L_error_non_closure
 25000 00012350 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25001 00012353 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25002 00012356 50                      	push rax
 25003 00012357 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25004 0001235F 803805                  	cmp byte [rax], T_undefined
 25005 00012362 0F848D2A0000            	je L_error_fvar_undefined
 25006 00012368 50                      	push rax
 25007 00012369 6A02                    	push 2	; arg count
 25008 0001236B 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 25009 00012373 803805                  	cmp byte [rax], T_undefined
 25010 00012376 0F84792A0000            	je L_error_fvar_undefined
 25011 0001237C 803804                  	cmp byte [rax], T_closure
 25012 0001237F 0F85F42A0000            	jne L_error_non_closure
 25013 00012385 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25014 00012388 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25015 0001238B 50                      	push rax
 25016 0001238C 6A01                    	push 1	; arg count
 25017 0001238E 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 25018 00012396 803805                  	cmp byte [rax], T_undefined
 25019 00012399 0F84562A0000            	je L_error_fvar_undefined
 25020 0001239F 803804                  	cmp byte [rax], T_closure
 25021 000123A2 0F85D12A0000            	jne L_error_non_closure
 25022 000123A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25023 000123AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25024 000123AE 50                      	push rax
 25025 000123AF 6A03                    	push 3	; Number of arguments
 25026 000123B1 488B4510                	mov rax, ENV
 25027 000123B5 488B00                  	mov rax, qword [rax + 8 * 0]
 25028 000123B8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25029 000123BB 488B00                  	mov rax, qword [rax]
 25030 000123BE 803804                  	cmp byte [rax], T_closure
 25031 000123C1 0F85B22A0000            	jne L_error_non_closure
 25032 000123C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25033                                  
 25034                                  	; Reclaiming the current stack frame
 25035 000123CA FF7508                  	push qword [rbp + 8]
 25036 000123CD FF7500                  	push qword [rbp]
 25037 000123D0 41BA07000000            	mov r10, 3 + 4
 25038 000123D6 4C8B4518                	mov r8, COUNT
 25039 000123DA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25040 000123DF 4C8D4DF8                	lea r9, [rbp - 8]
 25041                                  .L_tc_recycle_frame_loop_00d0:
 25042 000123E3 4983FA00                	cmp r10, 0
 25043 000123E7 7413                    	je .L_tc_recycle_frame_done_00d0
 25044 000123E9 4D8B19                  	mov r11, qword [r9]
 25045 000123EC 4D8918                  	mov qword [r8], r11
 25046 000123EF 49FFCA                  	dec r10
 25047 000123F2 4983E808                	sub r8, 8
 25048 000123F6 4983E908                	sub r9, 8
 25049 000123FA EBE7                    	jmp .L_tc_recycle_frame_loop_00d0
 25050                                  .L_tc_recycle_frame_done_00d0:
 25051 000123FC 498D6008                	lea rsp, [r8 + 8]
 25052 00012400 5D                      	pop rbp
 25053 00012401 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25054 00012404 C9                      	leave
 25055 00012405 C21800                  	ret AND_KILL_FRAME(1)
 25056                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25057 00012408 C9                      	leave
 25058 00012409 C22000                  	ret AND_KILL_FRAME(2)
 25059                                  .L_lambda_simple_end_0099:	; new closure is in rax
 25060 0001240C 803804                  	cmp byte [rax], T_closure
 25061 0001240F 0F85642A0000            	jne L_error_non_closure
 25062 00012415 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25063 00012418 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25064 0001241B 48890425[BD150000]      	mov qword [free_var_120], rax
 25065 00012423 48B8-                   	mov rax, sob_void
 25065 00012425 [0000000000000000] 
 25066                                  
 25067 0001242D 4889C7                  	mov rdi, rax
 25068 00012430 E8422D0000              	call print_sexpr_if_not_void
 25069                                  	; preparing a non-tail-call
 25070 00012435 48B8-                   	mov rax, L_constants + 2007
 25070 00012437 [D707000000000000] 
 25071 0001243F 50                      	push rax
 25072 00012440 48B8-                   	mov rax, L_constants + 2007
 25072 00012442 [D707000000000000] 
 25073 0001244A 50                      	push rax
 25074 0001244B 6A02                    	push 2	; arg count
 25075 0001244D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25076 00012452 E8CB2A0000              	call malloc
 25077 00012457 50                      	push rax
 25078 00012458 BF00000000              	mov rdi, 8 * 0	; new rib
 25079 0001245D E8C02A0000              	call malloc
 25080 00012462 50                      	push rax
 25081 00012463 BF08000000              	mov rdi, 8 * 1	; extended env
 25082 00012468 E8B52A0000              	call malloc
 25083 0001246D 488B7D10                	mov rdi, ENV
 25084 00012471 BE00000000              	mov rsi, 0
 25085 00012476 BA01000000              	mov rdx, 1
 25086                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 25087 0001247B 4883FE00                	cmp rsi, 0
 25088 0001247F 7410                    	je .L_lambda_simple_env_end_009d
 25089 00012481 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25090 00012485 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25091 00012489 48FFC6                  	inc rsi
 25092 0001248C 48FFC2                  	inc rdx
 25093 0001248F EBEA                    	jmp .L_lambda_simple_env_loop_009d
 25094                                  .L_lambda_simple_env_end_009d:
 25095 00012491 5B                      	pop rbx
 25096 00012492 BE00000000              	mov rsi, 0
 25097                                  .L_lambda_simple_params_loop_009d:	; copy params
 25098 00012497 4883FE00                	cmp rsi, 0
 25099 0001249B 740E                    	je .L_lambda_simple_params_end_009d
 25100 0001249D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25101 000124A2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25102 000124A6 48FFC6                  	inc rsi
 25103 000124A9 EBEC                    	jmp .L_lambda_simple_params_loop_009d
 25104                                  .L_lambda_simple_params_end_009d:
 25105 000124AB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25106 000124AE 4889C3                  	mov rbx, rax
 25107 000124B1 58                      	pop rax
 25108 000124B2 C60004                  	mov byte [rax], T_closure
 25109 000124B5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25110 000124B9 48C74009[C6240100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 25111 000124C1 E98E070000              	jmp .L_lambda_simple_end_009d
 25112                                  .L_lambda_simple_code_009d:	; lambda-simple body
 25113 000124C6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25114 000124CC 740B                    	je .L_lambda_simple_arity_check_ok_009d
 25115 000124CE FF742410                	push qword [rsp + 8 * 2]
 25116 000124D2 6A02                    	push 2
 25117 000124D4 E9022A0000              	jmp L_error_incorrect_arity_simple
 25118                                  .L_lambda_simple_arity_check_ok_009d:
 25119 000124D9 C8000000                	enter 0, 0
 25120 000124DD BF08000000              	mov rdi, 8 * 1
 25121 000124E2 E83B2A0000              	call malloc
 25122 000124E7 488B5D20                	mov rbx, PARAM(0)
 25123 000124EB 488918                  	mov qword [rax], rbx
 25124 000124EE 48894520                	mov PARAM(0), rax
 25125 000124F2 48B8-                   	mov rax, sob_void
 25125 000124F4 [0000000000000000] 
 25126                                  
 25127 000124FC BF08000000              	mov rdi, 8 * 1
 25128 00012501 E81C2A0000              	call malloc
 25129 00012506 488B5D28                	mov rbx, PARAM(1)
 25130 0001250A 488918                  	mov qword [rax], rbx
 25131 0001250D 48894528                	mov PARAM(1), rax
 25132 00012511 48B8-                   	mov rax, sob_void
 25132 00012513 [0000000000000000] 
 25133                                  
 25134 0001251B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25135 00012520 E8FD290000              	call malloc
 25136 00012525 50                      	push rax
 25137 00012526 BF10000000              	mov rdi, 8 * 2	; new rib
 25138 0001252B E8F2290000              	call malloc
 25139 00012530 50                      	push rax
 25140 00012531 BF10000000              	mov rdi, 8 * 2	; extended env
 25141 00012536 E8E7290000              	call malloc
 25142 0001253B 488B7D10                	mov rdi, ENV
 25143 0001253F BE00000000              	mov rsi, 0
 25144 00012544 BA01000000              	mov rdx, 1
 25145                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 25146 00012549 4883FE01                	cmp rsi, 1
 25147 0001254D 7410                    	je .L_lambda_simple_env_end_009e
 25148 0001254F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25149 00012553 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25150 00012557 48FFC6                  	inc rsi
 25151 0001255A 48FFC2                  	inc rdx
 25152 0001255D EBEA                    	jmp .L_lambda_simple_env_loop_009e
 25153                                  .L_lambda_simple_env_end_009e:
 25154 0001255F 5B                      	pop rbx
 25155 00012560 BE00000000              	mov rsi, 0
 25156                                  .L_lambda_simple_params_loop_009e:	; copy params
 25157 00012565 4883FE02                	cmp rsi, 2
 25158 00012569 740E                    	je .L_lambda_simple_params_end_009e
 25159 0001256B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25160 00012570 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25161 00012574 48FFC6                  	inc rsi
 25162 00012577 EBEC                    	jmp .L_lambda_simple_params_loop_009e
 25163                                  .L_lambda_simple_params_end_009e:
 25164 00012579 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25165 0001257C 4889C3                  	mov rbx, rax
 25166 0001257F 58                      	pop rax
 25167 00012580 C60004                  	mov byte [rax], T_closure
 25168 00012583 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25169 00012587 48C74009[94250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 25170 0001258F E96C020000              	jmp .L_lambda_simple_end_009e
 25171                                  .L_lambda_simple_code_009e:	; lambda-simple body
 25172 00012594 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25173 0001259A 740B                    	je .L_lambda_simple_arity_check_ok_009e
 25174 0001259C FF742410                	push qword [rsp + 8 * 2]
 25175 000125A0 6A03                    	push 3
 25176 000125A2 E934290000              	jmp L_error_incorrect_arity_simple
 25177                                  .L_lambda_simple_arity_check_ok_009e:
 25178 000125A7 C8000000                	enter 0, 0
 25179                                  	; preparing a non-tail-call
 25180 000125AB 488B4530                	mov rax, PARAM(2)	; param s
 25181 000125AF 50                      	push rax
 25182 000125B0 6A01                    	push 1	; arg count
 25183 000125B2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 25184 000125BA 803805                  	cmp byte [rax], T_undefined
 25185 000125BD 0F8432280000            	je L_error_fvar_undefined
 25186 000125C3 803804                  	cmp byte [rax], T_closure
 25187 000125C6 0F85AD280000            	jne L_error_non_closure
 25188 000125CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25189 000125CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25190 000125D2 483D[02000000]          	cmp rax, sob_boolean_false
 25191 000125D8 7409                    	je .L_if_else_007d
 25192 000125DA 488B4520                	mov rax, PARAM(0)	; param target
 25193 000125DE E919020000              	jmp .L_if_end_007d
 25194                                  .L_if_else_007d:
 25195                                  	; Initiating tail-call optimization
 25196                                  	; preparing a non-tail-call
 25197                                  	; preparing a non-tail-call
 25198                                  	; preparing a non-tail-call
 25199 000125E3 488B4530                	mov rax, PARAM(2)	; param s
 25200 000125E7 50                      	push rax
 25201 000125E8 6A01                    	push 1	; arg count
 25202 000125EA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25203 000125F2 803805                  	cmp byte [rax], T_undefined
 25204 000125F5 0F84FA270000            	je L_error_fvar_undefined
 25205 000125FB 803804                  	cmp byte [rax], T_closure
 25206 000125FE 0F8575280000            	jne L_error_non_closure
 25207 00012604 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25208 00012607 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25209 0001260A 50                      	push rax
 25210 0001260B 6A01                    	push 1	; arg count
 25211 0001260D 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25212 00012615 803805                  	cmp byte [rax], T_undefined
 25213 00012618 0F84D7270000            	je L_error_fvar_undefined
 25214 0001261E 803804                  	cmp byte [rax], T_closure
 25215 00012621 0F8552280000            	jne L_error_non_closure
 25216 00012627 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25217 0001262A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25218 0001262D 50                      	push rax
 25219 0001262E 48B8-                   	mov rax, L_constants + 2135
 25219 00012630 [5708000000000000] 
 25220 00012638 50                      	push rax
 25221                                  	; preparing a non-tail-call
 25222 00012639 488B4530                	mov rax, PARAM(2)	; param s
 25223 0001263D 50                      	push rax
 25224 0001263E 6A01                    	push 1	; arg count
 25225 00012640 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25226 00012648 803805                  	cmp byte [rax], T_undefined
 25227 0001264B 0F84A4270000            	je L_error_fvar_undefined
 25228 00012651 803804                  	cmp byte [rax], T_closure
 25229 00012654 0F851F280000            	jne L_error_non_closure
 25230 0001265A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25231 0001265D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25232 00012660 50                      	push rax
 25233 00012661 488B4528                	mov rax, PARAM(1)	; param i
 25234 00012665 50                      	push rax
 25235 00012666 488B4520                	mov rax, PARAM(0)	; param target
 25236 0001266A 50                      	push rax
 25237 0001266B 6A05                    	push 5	; arg count
 25238 0001266D 488B4510                	mov rax, ENV
 25239 00012671 488B00                  	mov rax, qword [rax + 8 * 0]
 25240 00012674 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25241 00012678 488B00                  	mov rax, qword [rax]
 25242 0001267B 803804                  	cmp byte [rax], T_closure
 25243 0001267E 0F85F5270000            	jne L_error_non_closure
 25244 00012684 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25245 00012687 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25246 0001268A 50                      	push rax
 25247 0001268B 6A01                    	push 1	; Number of arguments
 25248 0001268D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25249 00012692 E88B280000              	call malloc
 25250 00012697 50                      	push rax
 25251 00012698 BF18000000              	mov rdi, 8 * 3	; new rib
 25252 0001269D E880280000              	call malloc
 25253 000126A2 50                      	push rax
 25254 000126A3 BF18000000              	mov rdi, 8 * 3	; extended env
 25255 000126A8 E875280000              	call malloc
 25256 000126AD 488B7D10                	mov rdi, ENV
 25257 000126B1 BE00000000              	mov rsi, 0
 25258 000126B6 BA01000000              	mov rdx, 1
 25259                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 25260 000126BB 4883FE02                	cmp rsi, 2
 25261 000126BF 7410                    	je .L_lambda_simple_env_end_009f
 25262 000126C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25263 000126C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25264 000126C9 48FFC6                  	inc rsi
 25265 000126CC 48FFC2                  	inc rdx
 25266 000126CF EBEA                    	jmp .L_lambda_simple_env_loop_009f
 25267                                  .L_lambda_simple_env_end_009f:
 25268 000126D1 5B                      	pop rbx
 25269 000126D2 BE00000000              	mov rsi, 0
 25270                                  .L_lambda_simple_params_loop_009f:	; copy params
 25271 000126D7 4883FE03                	cmp rsi, 3
 25272 000126DB 740E                    	je .L_lambda_simple_params_end_009f
 25273 000126DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25274 000126E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25275 000126E6 48FFC6                  	inc rsi
 25276 000126E9 EBEC                    	jmp .L_lambda_simple_params_loop_009f
 25277                                  .L_lambda_simple_params_end_009f:
 25278 000126EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25279 000126EE 4889C3                  	mov rbx, rax
 25280 000126F1 58                      	pop rax
 25281 000126F2 C60004                  	mov byte [rax], T_closure
 25282 000126F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25283 000126F9 48C74009[06270100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 25284 00012701 E9B0000000              	jmp .L_lambda_simple_end_009f
 25285                                  .L_lambda_simple_code_009f:	; lambda-simple body
 25286 00012706 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25287 0001270C 740B                    	je .L_lambda_simple_arity_check_ok_009f
 25288 0001270E FF742410                	push qword [rsp + 8 * 2]
 25289 00012712 6A01                    	push 1
 25290 00012714 E9C2270000              	jmp L_error_incorrect_arity_simple
 25291                                  .L_lambda_simple_arity_check_ok_009f:
 25292 00012719 C8000000                	enter 0, 0
 25293                                  	; Initiating tail-call optimization
 25294                                  	; preparing a non-tail-call
 25295 0001271D 488B4510                	mov rax, ENV
 25296 00012721 488B00                  	mov rax, qword [rax + 8 * 0]
 25297 00012724 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25298 00012728 50                      	push rax
 25299 00012729 6A01                    	push 1	; arg count
 25300 0001272B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25301 00012733 803805                  	cmp byte [rax], T_undefined
 25302 00012736 0F84B9260000            	je L_error_fvar_undefined
 25303 0001273C 803804                  	cmp byte [rax], T_closure
 25304 0001273F 0F8534270000            	jne L_error_non_closure
 25305 00012745 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25306 00012748 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25307 0001274B 50                      	push rax
 25308 0001274C 488B4520                	mov rax, PARAM(0)	; param i
 25309 00012750 50                      	push rax
 25310 00012751 488B4510                	mov rax, ENV
 25311 00012755 488B00                  	mov rax, qword [rax + 8 * 0]
 25312 00012758 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25313 0001275B 50                      	push rax
 25314 0001275C 6A03                    	push 3	; Number of arguments
 25315 0001275E 488B4510                	mov rax, ENV
 25316 00012762 488B4008                	mov rax, qword [rax + 8 * 1]
 25317 00012766 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25318 00012769 488B00                  	mov rax, qword [rax]
 25319 0001276C 803804                  	cmp byte [rax], T_closure
 25320 0001276F 0F8504270000            	jne L_error_non_closure
 25321 00012775 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25322                                  
 25323                                  	; Reclaiming the current stack frame
 25324 00012778 FF7508                  	push qword [rbp + 8]
 25325 0001277B FF7500                  	push qword [rbp]
 25326 0001277E 41BA07000000            	mov r10, 3 + 4
 25327 00012784 4C8B4518                	mov r8, COUNT
 25328 00012788 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25329 0001278D 4C8D4DF8                	lea r9, [rbp - 8]
 25330                                  .L_tc_recycle_frame_loop_00d1:
 25331 00012791 4983FA00                	cmp r10, 0
 25332 00012795 7413                    	je .L_tc_recycle_frame_done_00d1
 25333 00012797 4D8B19                  	mov r11, qword [r9]
 25334 0001279A 4D8918                  	mov qword [r8], r11
 25335 0001279D 49FFCA                  	dec r10
 25336 000127A0 4983E808                	sub r8, 8
 25337 000127A4 4983E908                	sub r9, 8
 25338 000127A8 EBE7                    	jmp .L_tc_recycle_frame_loop_00d1
 25339                                  .L_tc_recycle_frame_done_00d1:
 25340 000127AA 498D6008                	lea rsp, [r8 + 8]
 25341 000127AE 5D                      	pop rbp
 25342 000127AF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25343 000127B2 C9                      	leave
 25344 000127B3 C21800                  	ret AND_KILL_FRAME(1)
 25345                                  .L_lambda_simple_end_009f:	; new closure is in rax
 25346 000127B6 803804                  	cmp byte [rax], T_closure
 25347 000127B9 0F85BA260000            	jne L_error_non_closure
 25348 000127BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25349                                  
 25350                                  	; Reclaiming the current stack frame
 25351 000127C2 FF7508                  	push qword [rbp + 8]
 25352 000127C5 FF7500                  	push qword [rbp]
 25353 000127C8 41BA05000000            	mov r10, 1 + 4
 25354 000127CE 4C8B4518                	mov r8, COUNT
 25355 000127D2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25356 000127D7 4C8D4DF8                	lea r9, [rbp - 8]
 25357                                  .L_tc_recycle_frame_loop_00d2:
 25358 000127DB 4983FA00                	cmp r10, 0
 25359 000127DF 7413                    	je .L_tc_recycle_frame_done_00d2
 25360 000127E1 4D8B19                  	mov r11, qword [r9]
 25361 000127E4 4D8918                  	mov qword [r8], r11
 25362 000127E7 49FFCA                  	dec r10
 25363 000127EA 4983E808                	sub r8, 8
 25364 000127EE 4983E908                	sub r9, 8
 25365 000127F2 EBE7                    	jmp .L_tc_recycle_frame_loop_00d2
 25366                                  .L_tc_recycle_frame_done_00d2:
 25367 000127F4 498D6008                	lea rsp, [r8 + 8]
 25368 000127F8 5D                      	pop rbp
 25369 000127F9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25370                                  .L_if_end_007d:
 25371 000127FC C9                      	leave
 25372 000127FD C22800                  	ret AND_KILL_FRAME(3)
 25373                                  .L_lambda_simple_end_009e:	; new closure is in rax
 25374 00012800 50                      	push rax
 25375 00012801 488B4520                	mov rax, PARAM(0)	; param run
 25376 00012805 8F00                    	pop qword [rax]
 25377 00012807 48B8-                   	mov rax, sob_void
 25377 00012809 [0000000000000000] 
 25378                                  
 25379 00012811 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25380 00012816 E807270000              	call malloc
 25381 0001281B 50                      	push rax
 25382 0001281C BF10000000              	mov rdi, 8 * 2	; new rib
 25383 00012821 E8FC260000              	call malloc
 25384 00012826 50                      	push rax
 25385 00012827 BF10000000              	mov rdi, 8 * 2	; extended env
 25386 0001282C E8F1260000              	call malloc
 25387 00012831 488B7D10                	mov rdi, ENV
 25388 00012835 BE00000000              	mov rsi, 0
 25389 0001283A BA01000000              	mov rdx, 1
 25390                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 25391 0001283F 4883FE01                	cmp rsi, 1
 25392 00012843 7410                    	je .L_lambda_simple_env_end_00a0
 25393 00012845 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25394 00012849 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25395 0001284D 48FFC6                  	inc rsi
 25396 00012850 48FFC2                  	inc rdx
 25397 00012853 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 25398                                  .L_lambda_simple_env_end_00a0:
 25399 00012855 5B                      	pop rbx
 25400 00012856 BE00000000              	mov rsi, 0
 25401                                  .L_lambda_simple_params_loop_00a0:	; copy params
 25402 0001285B 4883FE02                	cmp rsi, 2
 25403 0001285F 740E                    	je .L_lambda_simple_params_end_00a0
 25404 00012861 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25405 00012866 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25406 0001286A 48FFC6                  	inc rsi
 25407 0001286D EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 25408                                  .L_lambda_simple_params_end_00a0:
 25409 0001286F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25410 00012872 4889C3                  	mov rbx, rax
 25411 00012875 58                      	pop rax
 25412 00012876 C60004                  	mov byte [rax], T_closure
 25413 00012879 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25414 0001287D 48C74009[8A280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 25415 00012885 E946010000              	jmp .L_lambda_simple_end_00a0
 25416                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 25417 0001288A 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25418 00012890 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 25419 00012892 FF742410                	push qword [rsp + 8 * 2]
 25420 00012896 6A05                    	push 5
 25421 00012898 E93E260000              	jmp L_error_incorrect_arity_simple
 25422                                  .L_lambda_simple_arity_check_ok_00a0:
 25423 0001289D C8000000                	enter 0, 0
 25424                                  	; preparing a non-tail-call
 25425 000128A1 488B4540                	mov rax, PARAM(4)	; param limit
 25426 000128A5 50                      	push rax
 25427 000128A6 488B4538                	mov rax, PARAM(3)	; param j
 25428 000128AA 50                      	push rax
 25429 000128AB 6A02                    	push 2	; arg count
 25430 000128AD 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25431 000128B5 803805                  	cmp byte [rax], T_undefined
 25432 000128B8 0F8437250000            	je L_error_fvar_undefined
 25433 000128BE 803804                  	cmp byte [rax], T_closure
 25434 000128C1 0F85B2250000            	jne L_error_non_closure
 25435 000128C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25436 000128CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 25437 000128CD 483D[02000000]          	cmp rax, sob_boolean_false
 25438 000128D3 0F84EF000000            	je .L_if_else_007e
 25439                                  	; preparing a non-tail-call
 25440                                  	; preparing a non-tail-call
 25441 000128D9 488B4538                	mov rax, PARAM(3)	; param j
 25442 000128DD 50                      	push rax
 25443 000128DE 488B4530                	mov rax, PARAM(2)	; param vec
 25444 000128E2 50                      	push rax
 25445 000128E3 6A02                    	push 2	; arg count
 25446 000128E5 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 25447 000128ED 803805                  	cmp byte [rax], T_undefined
 25448 000128F0 0F84FF240000            	je L_error_fvar_undefined
 25449 000128F6 803804                  	cmp byte [rax], T_closure
 25450 000128F9 0F857A250000            	jne L_error_non_closure
 25451 000128FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25452 00012902 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25453 00012905 50                      	push rax
 25454 00012906 488B4528                	mov rax, PARAM(1)	; param i
 25455 0001290A 50                      	push rax
 25456 0001290B 488B4520                	mov rax, PARAM(0)	; param target
 25457 0001290F 50                      	push rax
 25458 00012910 6A03                    	push 3	; arg count
 25459 00012912 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 25460 0001291A 803805                  	cmp byte [rax], T_undefined
 25461 0001291D 0F84D2240000            	je L_error_fvar_undefined
 25462 00012923 803804                  	cmp byte [rax], T_closure
 25463 00012926 0F854D250000            	jne L_error_non_closure
 25464 0001292C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25465 0001292F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25466                                  
 25467                                  	; preparing a non-tail-call
 25468 00012932 488B4540                	mov rax, PARAM(4)	; param limit
 25469 00012936 50                      	push rax
 25470                                  	; preparing a non-tail-call
 25471 00012937 48B8-                   	mov rax, L_constants + 2270
 25471 00012939 [DE08000000000000] 
 25472 00012941 50                      	push rax
 25473 00012942 488B4538                	mov rax, PARAM(3)	; param j
 25474 00012946 50                      	push rax
 25475 00012947 6A02                    	push 2	; arg count
 25476 00012949 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25477 00012951 803805                  	cmp byte [rax], T_undefined
 25478 00012954 0F849B240000            	je L_error_fvar_undefined
 25479 0001295A 803804                  	cmp byte [rax], T_closure
 25480 0001295D 0F8516250000            	jne L_error_non_closure
 25481 00012963 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25482 00012966 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25483 00012969 50                      	push rax
 25484 0001296A 488B4530                	mov rax, PARAM(2)	; param vec
 25485 0001296E 50                      	push rax
 25486                                  	; preparing a non-tail-call
 25487 0001296F 48B8-                   	mov rax, L_constants + 2270
 25487 00012971 [DE08000000000000] 
 25488 00012979 50                      	push rax
 25489 0001297A 488B4528                	mov rax, PARAM(1)	; param i
 25490 0001297E 50                      	push rax
 25491 0001297F 6A02                    	push 2	; arg count
 25492 00012981 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25493 00012989 803805                  	cmp byte [rax], T_undefined
 25494 0001298C 0F8463240000            	je L_error_fvar_undefined
 25495 00012992 803804                  	cmp byte [rax], T_closure
 25496 00012995 0F85DE240000            	jne L_error_non_closure
 25497 0001299B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25498 0001299E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25499 000129A1 50                      	push rax
 25500 000129A2 488B4520                	mov rax, PARAM(0)	; param target
 25501 000129A6 50                      	push rax
 25502 000129A7 6A05                    	push 5	; arg count
 25503 000129A9 488B4510                	mov rax, ENV
 25504 000129AD 488B00                  	mov rax, qword [rax + 8 * 0]
 25505 000129B0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25506 000129B4 488B00                  	mov rax, qword [rax]
 25507 000129B7 803804                  	cmp byte [rax], T_closure
 25508 000129BA 0F85B9240000            	jne L_error_non_closure
 25509 000129C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25510 000129C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25511 000129C6 EB04                    	jmp .L_if_end_007e
 25512                                  .L_if_else_007e:
 25513 000129C8 488B4528                	mov rax, PARAM(1)	; param i
 25514                                  .L_if_end_007e:
 25515 000129CC C9                      	leave
 25516 000129CD C23800                  	ret AND_KILL_FRAME(5)
 25517                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 25518 000129D0 50                      	push rax
 25519 000129D1 488B4528                	mov rax, PARAM(1)	; param add
 25520 000129D5 8F00                    	pop qword [rax]
 25521 000129D7 48B8-                   	mov rax, sob_void
 25521 000129D9 [0000000000000000] 
 25522                                  
 25523 000129E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25524 000129E6 E837250000              	call malloc
 25525 000129EB 50                      	push rax
 25526 000129EC BF10000000              	mov rdi, 8 * 2	; new rib
 25527 000129F1 E82C250000              	call malloc
 25528 000129F6 50                      	push rax
 25529 000129F7 BF10000000              	mov rdi, 8 * 2	; extended env
 25530 000129FC E821250000              	call malloc
 25531 00012A01 488B7D10                	mov rdi, ENV
 25532 00012A05 BE00000000              	mov rsi, 0
 25533 00012A0A BA01000000              	mov rdx, 1
 25534                                  .L_lambda_opt_env_loop_0018:	; ext_env[i + 1] <-- env[i]
 25535 00012A0F 4883FE01                	cmp rsi, 1
 25536 00012A13 7410                    	je .L_lambda_opt_env_end_0018
 25537 00012A15 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25538 00012A19 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25539 00012A1D 48FFC6                  	inc rsi
 25540 00012A20 48FFC2                  	inc rdx
 25541 00012A23 EBEA                    	jmp .L_lambda_opt_env_loop_0018
 25542                                  .L_lambda_opt_env_end_0018:
 25543 00012A25 5B                      	pop rbx
 25544 00012A26 BE00000000              	mov rsi, 0
 25545                                  .L_lambda_opt_params_loop_0018:	; copy params
 25546 00012A2B 4883FE02                	cmp rsi, 2
 25547 00012A2F 740E                    	je .L_lambda_opt_params_end_0018
 25548 00012A31 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25549 00012A36 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25550 00012A3A 48FFC6                  	inc rsi
 25551 00012A3D EBEC                    	jmp .L_lambda_opt_params_loop_0018
 25552                                  .L_lambda_opt_params_end_0018:
 25553 00012A3F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25554 00012A42 4889C3                  	mov rbx, rax
 25555 00012A45 58                      	pop rax
 25556 00012A46 C60004                  	mov byte [rax], T_closure
 25557 00012A49 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25558 00012A4D 48C74009[5A2A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 25559 00012A55 E9F6010000              	jmp .L_lambda_opt_end_0018
 25560                                  .L_lambda_opt_code_0018:
 25561 00012A5A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 25562 00012A5F 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 25563 00012A63 7407                    	je .L_lambda_opt_arity_check_exact_0018	; Jump if arity matches
 25564 00012A65 7F4C                    	jg .L_lambda_opt_arity_check_more_0018	; Jump if more arguments passed
 25565 00012A67 E983240000              	jmp L_error_incorrect_arity_opt
 25566                                  .L_lambda_opt_arity_check_exact_0018:
 25567 00012A6C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 25568 00012A6F 4983C603                	add r14, 3 ; add 3 first stack values
 25569 00012A73 41BF00000000            	mov r15, 0 ; r15 = index
 25570 00012A79 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 25571 00012A7D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 25572 00012A85 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 25573                                  .L_lambda_opt_stack_shrink_loop_0018:
 25574 00012A87 4983FE00                	cmp r14, 0
 25575 00012A8B 7E11                    	jle .L_make_lambda_opt_exact_finish_0018
 25576 00012A8D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 25577 00012A92 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 25578 00012A96 49FFCE                  	dec r14 ; next loop value
 25579 00012A99 49FFC7                  	inc r15 ; update i
 25580 00012A9C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 25581                                  .L_make_lambda_opt_exact_finish_0018:
 25582 00012A9E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 25583 00012AA6 49FFC2                  	inc r10
 25584 00012AA9 4C89542410              	mov qword [rsp + 8 * 2], r10
 25585 00012AAE E99E000000              	jmp .L_lambda_opt_stack_adjusted_0018
 25586                                  .L_lambda_opt_arity_check_more_0018:
 25587 00012AB3 4D89D6                  	mov r14, r10 ; r14 = num args
 25588 00012AB6 4D89D7                  	mov r15, r10 ; r15 = num args
 25589 00012AB9 41B900000000            	mov r9, 0; r9 = number of params 
 25590 00012ABF 4D29CE                  	sub r14, r9 ; r14 = extra args
 25591 00012AC2 4D01F1                  	add r9, r14 ; r9 = num args
 25592 00012AC5 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 25592 00012AC7 [0100000000000000] 
 25593 00012ACF EB00                    	jmp .L_make_lambda_opt_arg_list_0018
 25594                                  .L_make_lambda_opt_arg_list_0018:
 25595 00012AD1 4983FE00                	cmp r14, 0
 25596 00012AD5 7E25                    	jle .L_make_lambda_opt_stack_fixed_0018
 25597 00012AD7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 25598 00012ADC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 25599 00012AE1 E83C240000              	call malloc                         ; Allocate memory, result in rax
 25600 00012AE6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 25601 00012AE9 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 25602 00012AED 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 25603 00012AF1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 25604 00012AF4 49FFC9                  	dec r9                              ; args index minus 1
 25605 00012AF7 49FFCE                  	dec r14                             ; next iteration
 25606 00012AFA EBD5                    	jmp .L_make_lambda_opt_arg_list_0018
 25607                                  .L_make_lambda_opt_stack_fixed_0018:
 25608 00012AFC 4D89FE                  	mov r14, r15 ; r14 = num args
 25609 00012AFF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 25610 00012B02 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 25611 00012B06 41BA00000000            	mov r10, 0; r10 = num of params
 25612 00012B0C 4D29D6                  	sub r14, r10 ; r14 = extra args
 25613 00012B0F 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 25614 00012B12 49FFCE                  	dec r14 ; how much we need to change stack wise?
 25615 00012B15 4A8954C410              	mov qword [rsp + 8 * (r8 + 2)], rdx ; Add list to the right place
 25616 00012B1A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0018
 25617                                  .L_lambda_opt_stack_shrink_loop_more_0018:
 25618 00012B1C 4983F800                	cmp r8, 0
 25619 00012B20 7E15                    	jle .L_make_lambda_opt_more_finish_0018
 25620 00012B22 4D8D60FF                	lea r12, [r8 - 1]; r12 = position of the arg we need to move
 25621 00012B26 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 25622 00012B2A 4D8D26                  	lea r12, [r14]
 25623 00012B2D 4E895CC408              	mov qword [rsp + 8 * (r8 + 1)], r11 
 25624 00012B32 49FFC8                  	dec r8 ; next iteration
 25625 00012B35 EBE5                    	jmp .L_lambda_opt_stack_shrink_loop_more_0018
 25626                                  .L_make_lambda_opt_more_finish_0018:
 25627 00012B37 4D89F8                  	mov r8, r15 ; num of args
 25628 00012B3A 41BA00000000            	mov r10, 0
 25629 00012B40 4D29D0                  	sub r8, r10 ; num of new args
 25630 00012B43 49FFC0                  	inc r8
 25631 00012B46 4C89442420              	mov qword [rsp + 8 * 4], r8
 25632 00012B4B 4883C410                	add rsp, 8 * 2  ; 
 25633 00012B4F EB00                    	jmp .L_lambda_opt_stack_adjusted_0018
 25634                                  .L_lambda_opt_stack_adjusted_0018:
 25635 00012B51 C8000000                	enter 0, 0
 25636                                  	; Initiating tail-call optimization
 25637 00012B55 488B4520                	mov rax, PARAM(0)	; param vectors
 25638 00012B59 50                      	push rax
 25639 00012B5A 48B8-                   	mov rax, L_constants + 2135
 25639 00012B5C [5708000000000000] 
 25640 00012B64 50                      	push rax
 25641                                  	; preparing a non-tail-call
 25642                                  	; preparing a non-tail-call
 25643                                  	; preparing a non-tail-call
 25644 00012B65 488B4520                	mov rax, PARAM(0)	; param vectors
 25645 00012B69 50                      	push rax
 25646 00012B6A 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25647 00012B72 803805                  	cmp byte [rax], T_undefined
 25648 00012B75 0F847A220000            	je L_error_fvar_undefined
 25649 00012B7B 50                      	push rax
 25650 00012B7C 6A02                    	push 2	; arg count
 25651 00012B7E 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 25652 00012B86 803805                  	cmp byte [rax], T_undefined
 25653 00012B89 0F8466220000            	je L_error_fvar_undefined
 25654 00012B8F 803804                  	cmp byte [rax], T_closure
 25655 00012B92 0F85E1220000            	jne L_error_non_closure
 25656 00012B98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25657 00012B9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25658 00012B9E 50                      	push rax
 25659 00012B9F 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25660 00012BA7 803805                  	cmp byte [rax], T_undefined
 25661 00012BAA 0F8445220000            	je L_error_fvar_undefined
 25662 00012BB0 50                      	push rax
 25663 00012BB1 6A02                    	push 2	; arg count
 25664 00012BB3 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 25665 00012BBB 803805                  	cmp byte [rax], T_undefined
 25666 00012BBE 0F8431220000            	je L_error_fvar_undefined
 25667 00012BC4 803804                  	cmp byte [rax], T_closure
 25668 00012BC7 0F85AC220000            	jne L_error_non_closure
 25669 00012BCD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25670 00012BD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25671 00012BD3 50                      	push rax
 25672 00012BD4 6A01                    	push 1	; arg count
 25673 00012BD6 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 25674 00012BDE 803805                  	cmp byte [rax], T_undefined
 25675 00012BE1 0F840E220000            	je L_error_fvar_undefined
 25676 00012BE7 803804                  	cmp byte [rax], T_closure
 25677 00012BEA 0F8589220000            	jne L_error_non_closure
 25678 00012BF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25679 00012BF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25680 00012BF6 50                      	push rax
 25681 00012BF7 6A03                    	push 3	; Number of arguments
 25682 00012BF9 488B4510                	mov rax, ENV
 25683 00012BFD 488B00                  	mov rax, qword [rax + 8 * 0]
 25684 00012C00 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25685 00012C03 488B00                  	mov rax, qword [rax]
 25686 00012C06 803804                  	cmp byte [rax], T_closure
 25687 00012C09 0F856A220000            	jne L_error_non_closure
 25688 00012C0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25689                                  
 25690                                  	; Reclaiming the current stack frame
 25691 00012C12 FF7508                  	push qword [rbp + 8]
 25692 00012C15 FF7500                  	push qword [rbp]
 25693 00012C18 41BA07000000            	mov r10, 3 + 4
 25694 00012C1E 4C8B4518                	mov r8, COUNT
 25695 00012C22 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25696 00012C27 4C8D4DF8                	lea r9, [rbp - 8]
 25697                                  .L_tc_recycle_frame_loop_00d3:
 25698 00012C2B 4983FA00                	cmp r10, 0
 25699 00012C2F 7413                    	je .L_tc_recycle_frame_done_00d3
 25700 00012C31 4D8B19                  	mov r11, qword [r9]
 25701 00012C34 4D8918                  	mov qword [r8], r11
 25702 00012C37 49FFCA                  	dec r10
 25703 00012C3A 4983E808                	sub r8, 8
 25704 00012C3E 4983E908                	sub r9, 8
 25705 00012C42 EBE7                    	jmp .L_tc_recycle_frame_loop_00d3
 25706                                  .L_tc_recycle_frame_done_00d3:
 25707 00012C44 498D6008                	lea rsp, [r8 + 8]
 25708 00012C48 5D                      	pop rbp
 25709 00012C49 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25710 00012C4C C9                      	leave
 25711 00012C4D C21800                  	ret AND_KILL_FRAME(1)
 25712                                  .L_lambda_opt_end_0018:	; new closure is in rax
 25713 00012C50 C9                      	leave
 25714 00012C51 C22000                  	ret AND_KILL_FRAME(2)
 25715                                  .L_lambda_simple_end_009d:	; new closure is in rax
 25716 00012C54 803804                  	cmp byte [rax], T_closure
 25717 00012C57 0F851C220000            	jne L_error_non_closure
 25718 00012C5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25719 00012C60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25720 00012C63 48890425[33170000]      	mov qword [free_var_142], rax
 25721 00012C6B 48B8-                   	mov rax, sob_void
 25721 00012C6D [0000000000000000] 
 25722                                  
 25723 00012C75 4889C7                  	mov rdi, rax
 25724 00012C78 E8FA240000              	call print_sexpr_if_not_void
 25725 00012C7D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25726 00012C82 E89B220000              	call malloc
 25727 00012C87 50                      	push rax
 25728 00012C88 BF00000000              	mov rdi, 8 * 0	; new rib
 25729 00012C8D E890220000              	call malloc
 25730 00012C92 50                      	push rax
 25731 00012C93 BF08000000              	mov rdi, 8 * 1	; extended env
 25732 00012C98 E885220000              	call malloc
 25733 00012C9D 488B7D10                	mov rdi, ENV
 25734 00012CA1 BE00000000              	mov rsi, 0
 25735 00012CA6 BA01000000              	mov rdx, 1
 25736                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 25737 00012CAB 4883FE00                	cmp rsi, 0
 25738 00012CAF 7410                    	je .L_lambda_simple_env_end_00a1
 25739 00012CB1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25740 00012CB5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25741 00012CB9 48FFC6                  	inc rsi
 25742 00012CBC 48FFC2                  	inc rdx
 25743 00012CBF EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 25744                                  .L_lambda_simple_env_end_00a1:
 25745 00012CC1 5B                      	pop rbx
 25746 00012CC2 BE00000000              	mov rsi, 0
 25747                                  .L_lambda_simple_params_loop_00a1:	; copy params
 25748 00012CC7 4883FE00                	cmp rsi, 0
 25749 00012CCB 740E                    	je .L_lambda_simple_params_end_00a1
 25750 00012CCD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25751 00012CD2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25752 00012CD6 48FFC6                  	inc rsi
 25753 00012CD9 EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 25754                                  .L_lambda_simple_params_end_00a1:
 25755 00012CDB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25756 00012CDE 4889C3                  	mov rbx, rax
 25757 00012CE1 58                      	pop rax
 25758 00012CE2 C60004                  	mov byte [rax], T_closure
 25759 00012CE5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25760 00012CE9 48C74009[F62C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 25761 00012CF1 E9BF000000              	jmp .L_lambda_simple_end_00a1
 25762                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 25763 00012CF6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25764 00012CFC 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 25765 00012CFE FF742410                	push qword [rsp + 8 * 2]
 25766 00012D02 6A01                    	push 1
 25767 00012D04 E9D2210000              	jmp L_error_incorrect_arity_simple
 25768                                  .L_lambda_simple_arity_check_ok_00a1:
 25769 00012D09 C8000000                	enter 0, 0
 25770                                  	; Initiating tail-call optimization
 25771                                  	; preparing a non-tail-call
 25772                                  	; preparing a non-tail-call
 25773 00012D0D 488B4520                	mov rax, PARAM(0)	; param str
 25774 00012D11 50                      	push rax
 25775 00012D12 6A01                    	push 1	; arg count
 25776 00012D14 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 25777 00012D1C 803805                  	cmp byte [rax], T_undefined
 25778 00012D1F 0F84D0200000            	je L_error_fvar_undefined
 25779 00012D25 803804                  	cmp byte [rax], T_closure
 25780 00012D28 0F854B210000            	jne L_error_non_closure
 25781 00012D2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25782 00012D31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25783 00012D34 50                      	push rax
 25784 00012D35 6A01                    	push 1	; arg count
 25785 00012D37 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 25786 00012D3F 803805                  	cmp byte [rax], T_undefined
 25787 00012D42 0F84AD200000            	je L_error_fvar_undefined
 25788 00012D48 803804                  	cmp byte [rax], T_closure
 25789 00012D4B 0F8528210000            	jne L_error_non_closure
 25790 00012D51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25791 00012D54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25792 00012D57 50                      	push rax
 25793 00012D58 6A01                    	push 1	; Number of arguments
 25794 00012D5A 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 25795 00012D62 803805                  	cmp byte [rax], T_undefined
 25796 00012D65 0F848A200000            	je L_error_fvar_undefined
 25797 00012D6B 803804                  	cmp byte [rax], T_closure
 25798 00012D6E 0F8505210000            	jne L_error_non_closure
 25799 00012D74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25800                                  
 25801                                  	; Reclaiming the current stack frame
 25802 00012D77 FF7508                  	push qword [rbp + 8]
 25803 00012D7A FF7500                  	push qword [rbp]
 25804 00012D7D 41BA05000000            	mov r10, 1 + 4
 25805 00012D83 4C8B4518                	mov r8, COUNT
 25806 00012D87 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25807 00012D8C 4C8D4DF8                	lea r9, [rbp - 8]
 25808                                  .L_tc_recycle_frame_loop_00d4:
 25809 00012D90 4983FA00                	cmp r10, 0
 25810 00012D94 7413                    	je .L_tc_recycle_frame_done_00d4
 25811 00012D96 4D8B19                  	mov r11, qword [r9]
 25812 00012D99 4D8918                  	mov qword [r8], r11
 25813 00012D9C 49FFCA                  	dec r10
 25814 00012D9F 4983E808                	sub r8, 8
 25815 00012DA3 4983E908                	sub r9, 8
 25816 00012DA7 EBE7                    	jmp .L_tc_recycle_frame_loop_00d4
 25817                                  .L_tc_recycle_frame_done_00d4:
 25818 00012DA9 498D6008                	lea rsp, [r8 + 8]
 25819 00012DAD 5D                      	pop rbp
 25820 00012DAE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25821 00012DB1 C9                      	leave
 25822 00012DB2 C21800                  	ret AND_KILL_FRAME(1)
 25823                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 25824 00012DB5 48890425[56160000]      	mov qword [free_var_129], rax
 25825 00012DBD 48B8-                   	mov rax, sob_void
 25825 00012DBF [0000000000000000] 
 25826                                  
 25827 00012DC7 4889C7                  	mov rdi, rax
 25828 00012DCA E8A8230000              	call print_sexpr_if_not_void
 25829 00012DCF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25830 00012DD4 E849210000              	call malloc
 25831 00012DD9 50                      	push rax
 25832 00012DDA BF00000000              	mov rdi, 8 * 0	; new rib
 25833 00012DDF E83E210000              	call malloc
 25834 00012DE4 50                      	push rax
 25835 00012DE5 BF08000000              	mov rdi, 8 * 1	; extended env
 25836 00012DEA E833210000              	call malloc
 25837 00012DEF 488B7D10                	mov rdi, ENV
 25838 00012DF3 BE00000000              	mov rsi, 0
 25839 00012DF8 BA01000000              	mov rdx, 1
 25840                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 25841 00012DFD 4883FE00                	cmp rsi, 0
 25842 00012E01 7410                    	je .L_lambda_simple_env_end_00a2
 25843 00012E03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25844 00012E07 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25845 00012E0B 48FFC6                  	inc rsi
 25846 00012E0E 48FFC2                  	inc rdx
 25847 00012E11 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 25848                                  .L_lambda_simple_env_end_00a2:
 25849 00012E13 5B                      	pop rbx
 25850 00012E14 BE00000000              	mov rsi, 0
 25851                                  .L_lambda_simple_params_loop_00a2:	; copy params
 25852 00012E19 4883FE00                	cmp rsi, 0
 25853 00012E1D 740E                    	je .L_lambda_simple_params_end_00a2
 25854 00012E1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25855 00012E24 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25856 00012E28 48FFC6                  	inc rsi
 25857 00012E2B EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 25858                                  .L_lambda_simple_params_end_00a2:
 25859 00012E2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25860 00012E30 4889C3                  	mov rbx, rax
 25861 00012E33 58                      	pop rax
 25862 00012E34 C60004                  	mov byte [rax], T_closure
 25863 00012E37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25864 00012E3B 48C74009[482E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 25865 00012E43 E9BF000000              	jmp .L_lambda_simple_end_00a2
 25866                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 25867 00012E48 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25868 00012E4E 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 25869 00012E50 FF742410                	push qword [rsp + 8 * 2]
 25870 00012E54 6A01                    	push 1
 25871 00012E56 E980200000              	jmp L_error_incorrect_arity_simple
 25872                                  .L_lambda_simple_arity_check_ok_00a2:
 25873 00012E5B C8000000                	enter 0, 0
 25874                                  	; Initiating tail-call optimization
 25875                                  	; preparing a non-tail-call
 25876                                  	; preparing a non-tail-call
 25877 00012E5F 488B4520                	mov rax, PARAM(0)	; param vec
 25878 00012E63 50                      	push rax
 25879 00012E64 6A01                    	push 1	; arg count
 25880 00012E66 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25881 00012E6E 803805                  	cmp byte [rax], T_undefined
 25882 00012E71 0F847E1F0000            	je L_error_fvar_undefined
 25883 00012E77 803804                  	cmp byte [rax], T_closure
 25884 00012E7A 0F85F91F0000            	jne L_error_non_closure
 25885 00012E80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25886 00012E83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25887 00012E86 50                      	push rax
 25888 00012E87 6A01                    	push 1	; arg count
 25889 00012E89 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 25890 00012E91 803805                  	cmp byte [rax], T_undefined
 25891 00012E94 0F845B1F0000            	je L_error_fvar_undefined
 25892 00012E9A 803804                  	cmp byte [rax], T_closure
 25893 00012E9D 0F85D61F0000            	jne L_error_non_closure
 25894 00012EA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25895 00012EA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25896 00012EA9 50                      	push rax
 25897 00012EAA 6A01                    	push 1	; Number of arguments
 25898 00012EAC 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 25899 00012EB4 803805                  	cmp byte [rax], T_undefined
 25900 00012EB7 0F84381F0000            	je L_error_fvar_undefined
 25901 00012EBD 803804                  	cmp byte [rax], T_closure
 25902 00012EC0 0F85B31F0000            	jne L_error_non_closure
 25903 00012EC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25904                                  
 25905                                  	; Reclaiming the current stack frame
 25906 00012EC9 FF7508                  	push qword [rbp + 8]
 25907 00012ECC FF7500                  	push qword [rbp]
 25908 00012ECF 41BA05000000            	mov r10, 1 + 4
 25909 00012ED5 4C8B4518                	mov r8, COUNT
 25910 00012ED9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25911 00012EDE 4C8D4DF8                	lea r9, [rbp - 8]
 25912                                  .L_tc_recycle_frame_loop_00d5:
 25913 00012EE2 4983FA00                	cmp r10, 0
 25914 00012EE6 7413                    	je .L_tc_recycle_frame_done_00d5
 25915 00012EE8 4D8B19                  	mov r11, qword [r9]
 25916 00012EEB 4D8918                  	mov qword [r8], r11
 25917 00012EEE 49FFCA                  	dec r10
 25918 00012EF1 4983E808                	sub r8, 8
 25919 00012EF5 4983E908                	sub r9, 8
 25920 00012EF9 EBE7                    	jmp .L_tc_recycle_frame_loop_00d5
 25921                                  .L_tc_recycle_frame_done_00d5:
 25922 00012EFB 498D6008                	lea rsp, [r8 + 8]
 25923 00012EFF 5D                      	pop rbp
 25924 00012F00 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25925 00012F03 C9                      	leave
 25926 00012F04 C21800                  	ret AND_KILL_FRAME(1)
 25927                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 25928 00012F07 48890425[66170000]      	mov qword [free_var_145], rax
 25929 00012F0F 48B8-                   	mov rax, sob_void
 25929 00012F11 [0000000000000000] 
 25930                                  
 25931 00012F19 4889C7                  	mov rdi, rax
 25932 00012F1C E856220000              	call print_sexpr_if_not_void
 25933                                  	; preparing a non-tail-call
 25934 00012F21 48B8-                   	mov rax, L_constants + 2007
 25934 00012F23 [D707000000000000] 
 25935 00012F2B 50                      	push rax
 25936 00012F2C 6A01                    	push 1	; arg count
 25937 00012F2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25938 00012F33 E8EA1F0000              	call malloc
 25939 00012F38 50                      	push rax
 25940 00012F39 BF00000000              	mov rdi, 8 * 0	; new rib
 25941 00012F3E E8DF1F0000              	call malloc
 25942 00012F43 50                      	push rax
 25943 00012F44 BF08000000              	mov rdi, 8 * 1	; extended env
 25944 00012F49 E8D41F0000              	call malloc
 25945 00012F4E 488B7D10                	mov rdi, ENV
 25946 00012F52 BE00000000              	mov rsi, 0
 25947 00012F57 BA01000000              	mov rdx, 1
 25948                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 25949 00012F5C 4883FE00                	cmp rsi, 0
 25950 00012F60 7410                    	je .L_lambda_simple_env_end_00a3
 25951 00012F62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25952 00012F66 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25953 00012F6A 48FFC6                  	inc rsi
 25954 00012F6D 48FFC2                  	inc rdx
 25955 00012F70 EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 25956                                  .L_lambda_simple_env_end_00a3:
 25957 00012F72 5B                      	pop rbx
 25958 00012F73 BE00000000              	mov rsi, 0
 25959                                  .L_lambda_simple_params_loop_00a3:	; copy params
 25960 00012F78 4883FE00                	cmp rsi, 0
 25961 00012F7C 740E                    	je .L_lambda_simple_params_end_00a3
 25962 00012F7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25963 00012F83 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25964 00012F87 48FFC6                  	inc rsi
 25965 00012F8A EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 25966                                  .L_lambda_simple_params_end_00a3:
 25967 00012F8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25968 00012F8F 4889C3                  	mov rbx, rax
 25969 00012F92 58                      	pop rax
 25970 00012F93 C60004                  	mov byte [rax], T_closure
 25971 00012F96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25972 00012F9A 48C74009[A72F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 25973 00012FA2 E9EA050000              	jmp .L_lambda_simple_end_00a3
 25974                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 25975 00012FA7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25976 00012FAD 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 25977 00012FAF FF742410                	push qword [rsp + 8 * 2]
 25978 00012FB3 6A01                    	push 1
 25979 00012FB5 E9211F0000              	jmp L_error_incorrect_arity_simple
 25980                                  .L_lambda_simple_arity_check_ok_00a3:
 25981 00012FBA C8000000                	enter 0, 0
 25982 00012FBE BF08000000              	mov rdi, 8 * 1
 25983 00012FC3 E85A1F0000              	call malloc
 25984 00012FC8 488B5D20                	mov rbx, PARAM(0)
 25985 00012FCC 488918                  	mov qword [rax], rbx
 25986 00012FCF 48894520                	mov PARAM(0), rax
 25987 00012FD3 48B8-                   	mov rax, sob_void
 25987 00012FD5 [0000000000000000] 
 25988                                  
 25989 00012FDD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25990 00012FE2 E83B1F0000              	call malloc
 25991 00012FE7 50                      	push rax
 25992 00012FE8 BF08000000              	mov rdi, 8 * 1	; new rib
 25993 00012FED E8301F0000              	call malloc
 25994 00012FF2 50                      	push rax
 25995 00012FF3 BF10000000              	mov rdi, 8 * 2	; extended env
 25996 00012FF8 E8251F0000              	call malloc
 25997 00012FFD 488B7D10                	mov rdi, ENV
 25998 00013001 BE00000000              	mov rsi, 0
 25999 00013006 BA01000000              	mov rdx, 1
 26000                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 26001 0001300B 4883FE01                	cmp rsi, 1
 26002 0001300F 7410                    	je .L_lambda_simple_env_end_00a4
 26003 00013011 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26004 00013015 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26005 00013019 48FFC6                  	inc rsi
 26006 0001301C 48FFC2                  	inc rdx
 26007 0001301F EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 26008                                  .L_lambda_simple_env_end_00a4:
 26009 00013021 5B                      	pop rbx
 26010 00013022 BE00000000              	mov rsi, 0
 26011                                  .L_lambda_simple_params_loop_00a4:	; copy params
 26012 00013027 4883FE01                	cmp rsi, 1
 26013 0001302B 740E                    	je .L_lambda_simple_params_end_00a4
 26014 0001302D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26015 00013032 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26016 00013036 48FFC6                  	inc rsi
 26017 00013039 EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 26018                                  .L_lambda_simple_params_end_00a4:
 26019 0001303B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26020 0001303E 4889C3                  	mov rbx, rax
 26021 00013041 58                      	pop rax
 26022 00013042 C60004                  	mov byte [rax], T_closure
 26023 00013045 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26024 00013049 48C74009[56300100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 26025 00013051 E9B1020000              	jmp .L_lambda_simple_end_00a4
 26026                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 26027 00013056 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26028 0001305C 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 26029 0001305E FF742410                	push qword [rsp + 8 * 2]
 26030 00013062 6A03                    	push 3
 26031 00013064 E9721E0000              	jmp L_error_incorrect_arity_simple
 26032                                  .L_lambda_simple_arity_check_ok_00a4:
 26033 00013069 C8000000                	enter 0, 0
 26034                                  	; preparing a non-tail-call
 26035 0001306D 488B4530                	mov rax, PARAM(2)	; param j
 26036 00013071 50                      	push rax
 26037 00013072 488B4528                	mov rax, PARAM(1)	; param i
 26038 00013076 50                      	push rax
 26039 00013077 6A02                    	push 2	; arg count
 26040 00013079 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 26041 00013081 803805                  	cmp byte [rax], T_undefined
 26042 00013084 0F846B1D0000            	je L_error_fvar_undefined
 26043 0001308A 803804                  	cmp byte [rax], T_closure
 26044 0001308D 0F85E61D0000            	jne L_error_non_closure
 26045 00013093 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26046 00013096 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26047 00013099 483D[02000000]          	cmp rax, sob_boolean_false
 26048 0001309F 0F845A020000            	je .L_if_else_007f
 26049                                  	; Initiating tail-call optimization
 26050                                  	; preparing a non-tail-call
 26051 000130A5 488B4528                	mov rax, PARAM(1)	; param i
 26052 000130A9 50                      	push rax
 26053 000130AA 488B4520                	mov rax, PARAM(0)	; param str
 26054 000130AE 50                      	push rax
 26055 000130AF 6A02                    	push 2	; arg count
 26056 000130B1 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26057 000130B9 803805                  	cmp byte [rax], T_undefined
 26058 000130BC 0F84331D0000            	je L_error_fvar_undefined
 26059 000130C2 803804                  	cmp byte [rax], T_closure
 26060 000130C5 0F85AE1D0000            	jne L_error_non_closure
 26061 000130CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 26062 000130CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 26063 000130D1 50                      	push rax
 26064 000130D2 6A01                    	push 1	; Number of arguments
 26065 000130D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26066 000130D9 E8441E0000              	call malloc
 26067 000130DE 50                      	push rax
 26068 000130DF BF18000000              	mov rdi, 8 * 3	; new rib
 26069 000130E4 E8391E0000              	call malloc
 26070 000130E9 50                      	push rax
 26071 000130EA BF18000000              	mov rdi, 8 * 3	; extended env
 26072 000130EF E82E1E0000              	call malloc
 26073 000130F4 488B7D10                	mov rdi, ENV
 26074 000130F8 BE00000000              	mov rsi, 0
 26075 000130FD BA01000000              	mov rdx, 1
 26076                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 26077 00013102 4883FE02                	cmp rsi, 2
 26078 00013106 7410                    	je .L_lambda_simple_env_end_00a5
 26079 00013108 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26080 0001310C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26081 00013110 48FFC6                  	inc rsi
 26082 00013113 48FFC2                  	inc rdx
 26083 00013116 EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 26084                                  .L_lambda_simple_env_end_00a5:
 26085 00013118 5B                      	pop rbx
 26086 00013119 BE00000000              	mov rsi, 0
 26087                                  .L_lambda_simple_params_loop_00a5:	; copy params
 26088 0001311E 4883FE03                	cmp rsi, 3
 26089 00013122 740E                    	je .L_lambda_simple_params_end_00a5
 26090 00013124 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26091 00013129 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26092 0001312D 48FFC6                  	inc rsi
 26093 00013130 EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 26094                                  .L_lambda_simple_params_end_00a5:
 26095 00013132 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26096 00013135 4889C3                  	mov rbx, rax
 26097 00013138 58                      	pop rax
 26098 00013139 C60004                  	mov byte [rax], T_closure
 26099 0001313C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26100 00013140 48C74009[4D310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 26101 00013148 E96A010000              	jmp .L_lambda_simple_end_00a5
 26102                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 26103 0001314D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26104 00013153 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 26105 00013155 FF742410                	push qword [rsp + 8 * 2]
 26106 00013159 6A01                    	push 1
 26107 0001315B E97B1D0000              	jmp L_error_incorrect_arity_simple
 26108                                  .L_lambda_simple_arity_check_ok_00a5:
 26109 00013160 C8000000                	enter 0, 0
 26110                                  	; preparing a non-tail-call
 26111                                  	; preparing a non-tail-call
 26112 00013164 488B4510                	mov rax, ENV
 26113 00013168 488B00                  	mov rax, qword [rax + 8 * 0]
 26114 0001316B 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26115 0001316F 50                      	push rax
 26116 00013170 488B4510                	mov rax, ENV
 26117 00013174 488B00                  	mov rax, qword [rax + 8 * 0]
 26118 00013177 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26119 0001317A 50                      	push rax
 26120 0001317B 6A02                    	push 2	; arg count
 26121 0001317D 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26122 00013185 803805                  	cmp byte [rax], T_undefined
 26123 00013188 0F84671C0000            	je L_error_fvar_undefined
 26124 0001318E 803804                  	cmp byte [rax], T_closure
 26125 00013191 0F85E21C0000            	jne L_error_non_closure
 26126 00013197 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26127 0001319A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26128 0001319D 50                      	push rax
 26129 0001319E 488B4510                	mov rax, ENV
 26130 000131A2 488B00                  	mov rax, qword [rax + 8 * 0]
 26131 000131A5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26132 000131A9 50                      	push rax
 26133 000131AA 488B4510                	mov rax, ENV
 26134 000131AE 488B00                  	mov rax, qword [rax + 8 * 0]
 26135 000131B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26136 000131B4 50                      	push rax
 26137 000131B5 6A03                    	push 3	; arg count
 26138 000131B7 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26139 000131BF 803805                  	cmp byte [rax], T_undefined
 26140 000131C2 0F842D1C0000            	je L_error_fvar_undefined
 26141 000131C8 803804                  	cmp byte [rax], T_closure
 26142 000131CB 0F85A81C0000            	jne L_error_non_closure
 26143 000131D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26144 000131D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26145                                  
 26146                                  	; preparing a non-tail-call
 26147 000131D7 488B4520                	mov rax, PARAM(0)	; param ch
 26148 000131DB 50                      	push rax
 26149 000131DC 488B4510                	mov rax, ENV
 26150 000131E0 488B00                  	mov rax, qword [rax + 8 * 0]
 26151 000131E3 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26152 000131E7 50                      	push rax
 26153 000131E8 488B4510                	mov rax, ENV
 26154 000131EC 488B00                  	mov rax, qword [rax + 8 * 0]
 26155 000131EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26156 000131F2 50                      	push rax
 26157 000131F3 6A03                    	push 3	; arg count
 26158 000131F5 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26159 000131FD 803805                  	cmp byte [rax], T_undefined
 26160 00013200 0F84EF1B0000            	je L_error_fvar_undefined
 26161 00013206 803804                  	cmp byte [rax], T_closure
 26162 00013209 0F856A1C0000            	jne L_error_non_closure
 26163 0001320F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26164 00013212 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26165                                  
 26166                                  	; preparing a non-tail-call
 26167                                  	; preparing a non-tail-call
 26168 00013215 48B8-                   	mov rax, L_constants + 2270
 26168 00013217 [DE08000000000000] 
 26169 0001321F 50                      	push rax
 26170 00013220 488B4510                	mov rax, ENV
 26171 00013224 488B00                  	mov rax, qword [rax + 8 * 0]
 26172 00013227 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26173 0001322B 50                      	push rax
 26174 0001322C 6A02                    	push 2	; arg count
 26175 0001322E 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26176 00013236 803805                  	cmp byte [rax], T_undefined
 26177 00013239 0F84B61B0000            	je L_error_fvar_undefined
 26178 0001323F 803804                  	cmp byte [rax], T_closure
 26179 00013242 0F85311C0000            	jne L_error_non_closure
 26180 00013248 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26181 0001324B FF5009                  	call SOB_CLOSURE_CODE(rax)
 26182 0001324E 50                      	push rax
 26183                                  	; preparing a non-tail-call
 26184 0001324F 48B8-                   	mov rax, L_constants + 2270
 26184 00013251 [DE08000000000000] 
 26185 00013259 50                      	push rax
 26186 0001325A 488B4510                	mov rax, ENV
 26187 0001325E 488B00                  	mov rax, qword [rax + 8 * 0]
 26188 00013261 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26189 00013265 50                      	push rax
 26190 00013266 6A02                    	push 2	; arg count
 26191 00013268 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26192 00013270 803805                  	cmp byte [rax], T_undefined
 26193 00013273 0F847C1B0000            	je L_error_fvar_undefined
 26194 00013279 803804                  	cmp byte [rax], T_closure
 26195 0001327C 0F85F71B0000            	jne L_error_non_closure
 26196 00013282 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26197 00013285 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26198 00013288 50                      	push rax
 26199 00013289 488B4510                	mov rax, ENV
 26200 0001328D 488B00                  	mov rax, qword [rax + 8 * 0]
 26201 00013290 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26202 00013293 50                      	push rax
 26203 00013294 6A03                    	push 3	; arg count
 26204 00013296 488B4510                	mov rax, ENV
 26205 0001329A 488B4008                	mov rax, qword [rax + 8 * 1]
 26206 0001329E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26207 000132A1 488B00                  	mov rax, qword [rax]
 26208 000132A4 803804                  	cmp byte [rax], T_closure
 26209 000132A7 0F85CC1B0000            	jne L_error_non_closure
 26210 000132AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 26211 000132B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26212 000132B3 C9                      	leave
 26213 000132B4 C21800                  	ret AND_KILL_FRAME(1)
 26214                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26215 000132B7 803804                  	cmp byte [rax], T_closure
 26216 000132BA 0F85B91B0000            	jne L_error_non_closure
 26217 000132C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26218                                  
 26219                                  	; Reclaiming the current stack frame
 26220 000132C3 FF7508                  	push qword [rbp + 8]
 26221 000132C6 FF7500                  	push qword [rbp]
 26222 000132C9 41BA05000000            	mov r10, 1 + 4
 26223 000132CF 4C8B4518                	mov r8, COUNT
 26224 000132D3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26225 000132D8 4C8D4DF8                	lea r9, [rbp - 8]
 26226                                  .L_tc_recycle_frame_loop_00d6:
 26227 000132DC 4983FA00                	cmp r10, 0
 26228 000132E0 7413                    	je .L_tc_recycle_frame_done_00d6
 26229 000132E2 4D8B19                  	mov r11, qword [r9]
 26230 000132E5 4D8918                  	mov qword [r8], r11
 26231 000132E8 49FFCA                  	dec r10
 26232 000132EB 4983E808                	sub r8, 8
 26233 000132EF 4983E908                	sub r9, 8
 26234 000132F3 EBE7                    	jmp .L_tc_recycle_frame_loop_00d6
 26235                                  .L_tc_recycle_frame_done_00d6:
 26236 000132F5 498D6008                	lea rsp, [r8 + 8]
 26237 000132F9 5D                      	pop rbp
 26238 000132FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26239 000132FD EB04                    	jmp .L_if_end_007f
 26240                                  .L_if_else_007f:
 26241 000132FF 488B4520                	mov rax, PARAM(0)	; param str
 26242                                  .L_if_end_007f:
 26243 00013303 C9                      	leave
 26244 00013304 C22800                  	ret AND_KILL_FRAME(3)
 26245                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 26246 00013307 50                      	push rax
 26247 00013308 488B4520                	mov rax, PARAM(0)	; param run
 26248 0001330C 8F00                    	pop qword [rax]
 26249 0001330E 48B8-                   	mov rax, sob_void
 26249 00013310 [0000000000000000] 
 26250                                  
 26251 00013318 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26252 0001331D E8001C0000              	call malloc
 26253 00013322 50                      	push rax
 26254 00013323 BF08000000              	mov rdi, 8 * 1	; new rib
 26255 00013328 E8F51B0000              	call malloc
 26256 0001332D 50                      	push rax
 26257 0001332E BF10000000              	mov rdi, 8 * 2	; extended env
 26258 00013333 E8EA1B0000              	call malloc
 26259 00013338 488B7D10                	mov rdi, ENV
 26260 0001333C BE00000000              	mov rsi, 0
 26261 00013341 BA01000000              	mov rdx, 1
 26262                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 26263 00013346 4883FE01                	cmp rsi, 1
 26264 0001334A 7410                    	je .L_lambda_simple_env_end_00a6
 26265 0001334C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26266 00013350 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26267 00013354 48FFC6                  	inc rsi
 26268 00013357 48FFC2                  	inc rdx
 26269 0001335A EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 26270                                  .L_lambda_simple_env_end_00a6:
 26271 0001335C 5B                      	pop rbx
 26272 0001335D BE00000000              	mov rsi, 0
 26273                                  .L_lambda_simple_params_loop_00a6:	; copy params
 26274 00013362 4883FE01                	cmp rsi, 1
 26275 00013366 740E                    	je .L_lambda_simple_params_end_00a6
 26276 00013368 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26277 0001336D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26278 00013371 48FFC6                  	inc rsi
 26279 00013374 EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 26280                                  .L_lambda_simple_params_end_00a6:
 26281 00013376 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26282 00013379 4889C3                  	mov rbx, rax
 26283 0001337C 58                      	pop rax
 26284 0001337D C60004                  	mov byte [rax], T_closure
 26285 00013380 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26286 00013384 48C74009[91330100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 26287 0001338C E9FC010000              	jmp .L_lambda_simple_end_00a6
 26288                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 26289 00013391 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26290 00013397 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 26291 00013399 FF742410                	push qword [rsp + 8 * 2]
 26292 0001339D 6A01                    	push 1
 26293 0001339F E9371B0000              	jmp L_error_incorrect_arity_simple
 26294                                  .L_lambda_simple_arity_check_ok_00a6:
 26295 000133A4 C8000000                	enter 0, 0
 26296                                  	; Initiating tail-call optimization
 26297                                  	; preparing a non-tail-call
 26298 000133A8 488B4520                	mov rax, PARAM(0)	; param str
 26299 000133AC 50                      	push rax
 26300 000133AD 6A01                    	push 1	; arg count
 26301 000133AF 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 26302 000133B7 803805                  	cmp byte [rax], T_undefined
 26303 000133BA 0F84351A0000            	je L_error_fvar_undefined
 26304 000133C0 803804                  	cmp byte [rax], T_closure
 26305 000133C3 0F85B01A0000            	jne L_error_non_closure
 26306 000133C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26307 000133CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 26308 000133CF 50                      	push rax
 26309 000133D0 6A01                    	push 1	; Number of arguments
 26310 000133D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26311 000133D7 E8461B0000              	call malloc
 26312 000133DC 50                      	push rax
 26313 000133DD BF08000000              	mov rdi, 8 * 1	; new rib
 26314 000133E2 E83B1B0000              	call malloc
 26315 000133E7 50                      	push rax
 26316 000133E8 BF18000000              	mov rdi, 8 * 3	; extended env
 26317 000133ED E8301B0000              	call malloc
 26318 000133F2 488B7D10                	mov rdi, ENV
 26319 000133F6 BE00000000              	mov rsi, 0
 26320 000133FB BA01000000              	mov rdx, 1
 26321                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 26322 00013400 4883FE02                	cmp rsi, 2
 26323 00013404 7410                    	je .L_lambda_simple_env_end_00a7
 26324 00013406 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26325 0001340A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26326 0001340E 48FFC6                  	inc rsi
 26327 00013411 48FFC2                  	inc rdx
 26328 00013414 EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 26329                                  .L_lambda_simple_env_end_00a7:
 26330 00013416 5B                      	pop rbx
 26331 00013417 BE00000000              	mov rsi, 0
 26332                                  .L_lambda_simple_params_loop_00a7:	; copy params
 26333 0001341C 4883FE01                	cmp rsi, 1
 26334 00013420 740E                    	je .L_lambda_simple_params_end_00a7
 26335 00013422 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26336 00013427 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26337 0001342B 48FFC6                  	inc rsi
 26338 0001342E EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26339                                  .L_lambda_simple_params_end_00a7:
 26340 00013430 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26341 00013433 4889C3                  	mov rbx, rax
 26342 00013436 58                      	pop rax
 26343 00013437 C60004                  	mov byte [rax], T_closure
 26344 0001343A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26345 0001343E 48C74009[4B340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26346 00013446 E9F8000000              	jmp .L_lambda_simple_end_00a7
 26347                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26348 0001344B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26349 00013451 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26350 00013453 FF742410                	push qword [rsp + 8 * 2]
 26351 00013457 6A01                    	push 1
 26352 00013459 E97D1A0000              	jmp L_error_incorrect_arity_simple
 26353                                  .L_lambda_simple_arity_check_ok_00a7:
 26354 0001345E C8000000                	enter 0, 0
 26355                                  	; preparing a non-tail-call
 26356 00013462 488B4520                	mov rax, PARAM(0)	; param n
 26357 00013466 50                      	push rax
 26358 00013467 6A01                    	push 1	; arg count
 26359 00013469 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 26360 00013471 803805                  	cmp byte [rax], T_undefined
 26361 00013474 0F847B190000            	je L_error_fvar_undefined
 26362 0001347A 803804                  	cmp byte [rax], T_closure
 26363 0001347D 0F85F6190000            	jne L_error_non_closure
 26364 00013483 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26365 00013486 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26366 00013489 483D[02000000]          	cmp rax, sob_boolean_false
 26367 0001348F 740F                    	je .L_if_else_0080
 26368 00013491 488B4510                	mov rax, ENV
 26369 00013495 488B00                  	mov rax, qword [rax + 8 * 0]
 26370 00013498 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26371 0001349B E99F000000              	jmp .L_if_end_0080
 26372                                  .L_if_else_0080:
 26373                                  	; Initiating tail-call optimization
 26374                                  	; preparing a non-tail-call
 26375 000134A0 48B8-                   	mov rax, L_constants + 2270
 26375 000134A2 [DE08000000000000] 
 26376 000134AA 50                      	push rax
 26377 000134AB 488B4520                	mov rax, PARAM(0)	; param n
 26378 000134AF 50                      	push rax
 26379 000134B0 6A02                    	push 2	; arg count
 26380 000134B2 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26381 000134BA 803805                  	cmp byte [rax], T_undefined
 26382 000134BD 0F8432190000            	je L_error_fvar_undefined
 26383 000134C3 803804                  	cmp byte [rax], T_closure
 26384 000134C6 0F85AD190000            	jne L_error_non_closure
 26385 000134CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26386 000134CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 26387 000134D2 50                      	push rax
 26388 000134D3 48B8-                   	mov rax, L_constants + 2135
 26388 000134D5 [5708000000000000] 
 26389 000134DD 50                      	push rax
 26390 000134DE 488B4510                	mov rax, ENV
 26391 000134E2 488B00                  	mov rax, qword [rax + 8 * 0]
 26392 000134E5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26393 000134E8 50                      	push rax
 26394 000134E9 6A03                    	push 3	; Number of arguments
 26395 000134EB 488B4510                	mov rax, ENV
 26396 000134EF 488B4008                	mov rax, qword [rax + 8 * 1]
 26397 000134F3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26398 000134F6 488B00                  	mov rax, qword [rax]
 26399 000134F9 803804                  	cmp byte [rax], T_closure
 26400 000134FC 0F8577190000            	jne L_error_non_closure
 26401 00013502 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26402                                  
 26403                                  	; Reclaiming the current stack frame
 26404 00013505 FF7508                  	push qword [rbp + 8]
 26405 00013508 FF7500                  	push qword [rbp]
 26406 0001350B 41BA07000000            	mov r10, 3 + 4
 26407 00013511 4C8B4518                	mov r8, COUNT
 26408 00013515 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26409 0001351A 4C8D4DF8                	lea r9, [rbp - 8]
 26410                                  .L_tc_recycle_frame_loop_00d7:
 26411 0001351E 4983FA00                	cmp r10, 0
 26412 00013522 7413                    	je .L_tc_recycle_frame_done_00d7
 26413 00013524 4D8B19                  	mov r11, qword [r9]
 26414 00013527 4D8918                  	mov qword [r8], r11
 26415 0001352A 49FFCA                  	dec r10
 26416 0001352D 4983E808                	sub r8, 8
 26417 00013531 4983E908                	sub r9, 8
 26418 00013535 EBE7                    	jmp .L_tc_recycle_frame_loop_00d7
 26419                                  .L_tc_recycle_frame_done_00d7:
 26420 00013537 498D6008                	lea rsp, [r8 + 8]
 26421 0001353B 5D                      	pop rbp
 26422 0001353C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26423                                  .L_if_end_0080:
 26424 0001353F C9                      	leave
 26425 00013540 C21800                  	ret AND_KILL_FRAME(1)
 26426                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26427 00013543 803804                  	cmp byte [rax], T_closure
 26428 00013546 0F852D190000            	jne L_error_non_closure
 26429 0001354C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26430                                  
 26431                                  	; Reclaiming the current stack frame
 26432 0001354F FF7508                  	push qword [rbp + 8]
 26433 00013552 FF7500                  	push qword [rbp]
 26434 00013555 41BA05000000            	mov r10, 1 + 4
 26435 0001355B 4C8B4518                	mov r8, COUNT
 26436 0001355F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26437 00013564 4C8D4DF8                	lea r9, [rbp - 8]
 26438                                  .L_tc_recycle_frame_loop_00d8:
 26439 00013568 4983FA00                	cmp r10, 0
 26440 0001356C 7413                    	je .L_tc_recycle_frame_done_00d8
 26441 0001356E 4D8B19                  	mov r11, qword [r9]
 26442 00013571 4D8918                  	mov qword [r8], r11
 26443 00013574 49FFCA                  	dec r10
 26444 00013577 4983E808                	sub r8, 8
 26445 0001357B 4983E908                	sub r9, 8
 26446 0001357F EBE7                    	jmp .L_tc_recycle_frame_loop_00d8
 26447                                  .L_tc_recycle_frame_done_00d8:
 26448 00013581 498D6008                	lea rsp, [r8 + 8]
 26449 00013585 5D                      	pop rbp
 26450 00013586 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26451 00013589 C9                      	leave
 26452 0001358A C21800                  	ret AND_KILL_FRAME(1)
 26453                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26454 0001358D C9                      	leave
 26455 0001358E C21800                  	ret AND_KILL_FRAME(1)
 26456                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 26457 00013591 803804                  	cmp byte [rax], T_closure
 26458 00013594 0F85DF180000            	jne L_error_non_closure
 26459 0001359A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26460 0001359D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26461 000135A0 48890425[67160000]      	mov qword [free_var_130], rax
 26462 000135A8 48B8-                   	mov rax, sob_void
 26462 000135AA [0000000000000000] 
 26463                                  
 26464 000135B2 4889C7                  	mov rdi, rax
 26465 000135B5 E8BD1B0000              	call print_sexpr_if_not_void
 26466                                  	; preparing a non-tail-call
 26467 000135BA 48B8-                   	mov rax, L_constants + 2007
 26467 000135BC [D707000000000000] 
 26468 000135C4 50                      	push rax
 26469 000135C5 6A01                    	push 1	; arg count
 26470 000135C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26471 000135CC E851190000              	call malloc
 26472 000135D1 50                      	push rax
 26473 000135D2 BF00000000              	mov rdi, 8 * 0	; new rib
 26474 000135D7 E846190000              	call malloc
 26475 000135DC 50                      	push rax
 26476 000135DD BF08000000              	mov rdi, 8 * 1	; extended env
 26477 000135E2 E83B190000              	call malloc
 26478 000135E7 488B7D10                	mov rdi, ENV
 26479 000135EB BE00000000              	mov rsi, 0
 26480 000135F0 BA01000000              	mov rdx, 1
 26481                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26482 000135F5 4883FE00                	cmp rsi, 0
 26483 000135F9 7410                    	je .L_lambda_simple_env_end_00a8
 26484 000135FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26485 000135FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26486 00013603 48FFC6                  	inc rsi
 26487 00013606 48FFC2                  	inc rdx
 26488 00013609 EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 26489                                  .L_lambda_simple_env_end_00a8:
 26490 0001360B 5B                      	pop rbx
 26491 0001360C BE00000000              	mov rsi, 0
 26492                                  .L_lambda_simple_params_loop_00a8:	; copy params
 26493 00013611 4883FE00                	cmp rsi, 0
 26494 00013615 740E                    	je .L_lambda_simple_params_end_00a8
 26495 00013617 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26496 0001361C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26497 00013620 48FFC6                  	inc rsi
 26498 00013623 EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 26499                                  .L_lambda_simple_params_end_00a8:
 26500 00013625 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26501 00013628 4889C3                  	mov rbx, rax
 26502 0001362B 58                      	pop rax
 26503 0001362C C60004                  	mov byte [rax], T_closure
 26504 0001362F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26505 00013633 48C74009[40360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 26506 0001363B E9EA050000              	jmp .L_lambda_simple_end_00a8
 26507                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 26508 00013640 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26509 00013646 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 26510 00013648 FF742410                	push qword [rsp + 8 * 2]
 26511 0001364C 6A01                    	push 1
 26512 0001364E E988180000              	jmp L_error_incorrect_arity_simple
 26513                                  .L_lambda_simple_arity_check_ok_00a8:
 26514 00013653 C8000000                	enter 0, 0
 26515 00013657 BF08000000              	mov rdi, 8 * 1
 26516 0001365C E8C1180000              	call malloc
 26517 00013661 488B5D20                	mov rbx, PARAM(0)
 26518 00013665 488918                  	mov qword [rax], rbx
 26519 00013668 48894520                	mov PARAM(0), rax
 26520 0001366C 48B8-                   	mov rax, sob_void
 26520 0001366E [0000000000000000] 
 26521                                  
 26522 00013676 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26523 0001367B E8A2180000              	call malloc
 26524 00013680 50                      	push rax
 26525 00013681 BF08000000              	mov rdi, 8 * 1	; new rib
 26526 00013686 E897180000              	call malloc
 26527 0001368B 50                      	push rax
 26528 0001368C BF10000000              	mov rdi, 8 * 2	; extended env
 26529 00013691 E88C180000              	call malloc
 26530 00013696 488B7D10                	mov rdi, ENV
 26531 0001369A BE00000000              	mov rsi, 0
 26532 0001369F BA01000000              	mov rdx, 1
 26533                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 26534 000136A4 4883FE01                	cmp rsi, 1
 26535 000136A8 7410                    	je .L_lambda_simple_env_end_00a9
 26536 000136AA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26537 000136AE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26538 000136B2 48FFC6                  	inc rsi
 26539 000136B5 48FFC2                  	inc rdx
 26540 000136B8 EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 26541                                  .L_lambda_simple_env_end_00a9:
 26542 000136BA 5B                      	pop rbx
 26543 000136BB BE00000000              	mov rsi, 0
 26544                                  .L_lambda_simple_params_loop_00a9:	; copy params
 26545 000136C0 4883FE01                	cmp rsi, 1
 26546 000136C4 740E                    	je .L_lambda_simple_params_end_00a9
 26547 000136C6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26548 000136CB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26549 000136CF 48FFC6                  	inc rsi
 26550 000136D2 EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 26551                                  .L_lambda_simple_params_end_00a9:
 26552 000136D4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26553 000136D7 4889C3                  	mov rbx, rax
 26554 000136DA 58                      	pop rax
 26555 000136DB C60004                  	mov byte [rax], T_closure
 26556 000136DE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26557 000136E2 48C74009[EF360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 26558 000136EA E9B1020000              	jmp .L_lambda_simple_end_00a9
 26559                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 26560 000136EF 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26561 000136F5 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 26562 000136F7 FF742410                	push qword [rsp + 8 * 2]
 26563 000136FB 6A03                    	push 3
 26564 000136FD E9D9170000              	jmp L_error_incorrect_arity_simple
 26565                                  .L_lambda_simple_arity_check_ok_00a9:
 26566 00013702 C8000000                	enter 0, 0
 26567                                  	; preparing a non-tail-call
 26568 00013706 488B4530                	mov rax, PARAM(2)	; param j
 26569 0001370A 50                      	push rax
 26570 0001370B 488B4528                	mov rax, PARAM(1)	; param i
 26571 0001370F 50                      	push rax
 26572 00013710 6A02                    	push 2	; arg count
 26573 00013712 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 26574 0001371A 803805                  	cmp byte [rax], T_undefined
 26575 0001371D 0F84D2160000            	je L_error_fvar_undefined
 26576 00013723 803804                  	cmp byte [rax], T_closure
 26577 00013726 0F854D170000            	jne L_error_non_closure
 26578 0001372C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26579 0001372F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26580 00013732 483D[02000000]          	cmp rax, sob_boolean_false
 26581 00013738 0F845A020000            	je .L_if_else_0081
 26582                                  	; Initiating tail-call optimization
 26583                                  	; preparing a non-tail-call
 26584 0001373E 488B4528                	mov rax, PARAM(1)	; param i
 26585 00013742 50                      	push rax
 26586 00013743 488B4520                	mov rax, PARAM(0)	; param vec
 26587 00013747 50                      	push rax
 26588 00013748 6A02                    	push 2	; arg count
 26589 0001374A 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26590 00013752 803805                  	cmp byte [rax], T_undefined
 26591 00013755 0F849A160000            	je L_error_fvar_undefined
 26592 0001375B 803804                  	cmp byte [rax], T_closure
 26593 0001375E 0F8515170000            	jne L_error_non_closure
 26594 00013764 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26595 00013767 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26596 0001376A 50                      	push rax
 26597 0001376B 6A01                    	push 1	; Number of arguments
 26598 0001376D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26599 00013772 E8AB170000              	call malloc
 26600 00013777 50                      	push rax
 26601 00013778 BF18000000              	mov rdi, 8 * 3	; new rib
 26602 0001377D E8A0170000              	call malloc
 26603 00013782 50                      	push rax
 26604 00013783 BF18000000              	mov rdi, 8 * 3	; extended env
 26605 00013788 E895170000              	call malloc
 26606 0001378D 488B7D10                	mov rdi, ENV
 26607 00013791 BE00000000              	mov rsi, 0
 26608 00013796 BA01000000              	mov rdx, 1
 26609                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 26610 0001379B 4883FE02                	cmp rsi, 2
 26611 0001379F 7410                    	je .L_lambda_simple_env_end_00aa
 26612 000137A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26613 000137A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26614 000137A9 48FFC6                  	inc rsi
 26615 000137AC 48FFC2                  	inc rdx
 26616 000137AF EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 26617                                  .L_lambda_simple_env_end_00aa:
 26618 000137B1 5B                      	pop rbx
 26619 000137B2 BE00000000              	mov rsi, 0
 26620                                  .L_lambda_simple_params_loop_00aa:	; copy params
 26621 000137B7 4883FE03                	cmp rsi, 3
 26622 000137BB 740E                    	je .L_lambda_simple_params_end_00aa
 26623 000137BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26624 000137C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26625 000137C6 48FFC6                  	inc rsi
 26626 000137C9 EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 26627                                  .L_lambda_simple_params_end_00aa:
 26628 000137CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26629 000137CE 4889C3                  	mov rbx, rax
 26630 000137D1 58                      	pop rax
 26631 000137D2 C60004                  	mov byte [rax], T_closure
 26632 000137D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26633 000137D9 48C74009[E6370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 26634 000137E1 E96A010000              	jmp .L_lambda_simple_end_00aa
 26635                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 26636 000137E6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26637 000137EC 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 26638 000137EE FF742410                	push qword [rsp + 8 * 2]
 26639 000137F2 6A01                    	push 1
 26640 000137F4 E9E2160000              	jmp L_error_incorrect_arity_simple
 26641                                  .L_lambda_simple_arity_check_ok_00aa:
 26642 000137F9 C8000000                	enter 0, 0
 26643                                  	; preparing a non-tail-call
 26644                                  	; preparing a non-tail-call
 26645 000137FD 488B4510                	mov rax, ENV
 26646 00013801 488B00                  	mov rax, qword [rax + 8 * 0]
 26647 00013804 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26648 00013808 50                      	push rax
 26649 00013809 488B4510                	mov rax, ENV
 26650 0001380D 488B00                  	mov rax, qword [rax + 8 * 0]
 26651 00013810 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26652 00013813 50                      	push rax
 26653 00013814 6A02                    	push 2	; arg count
 26654 00013816 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26655 0001381E 803805                  	cmp byte [rax], T_undefined
 26656 00013821 0F84CE150000            	je L_error_fvar_undefined
 26657 00013827 803804                  	cmp byte [rax], T_closure
 26658 0001382A 0F8549160000            	jne L_error_non_closure
 26659 00013830 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26660 00013833 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26661 00013836 50                      	push rax
 26662 00013837 488B4510                	mov rax, ENV
 26663 0001383B 488B00                  	mov rax, qword [rax + 8 * 0]
 26664 0001383E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26665 00013842 50                      	push rax
 26666 00013843 488B4510                	mov rax, ENV
 26667 00013847 488B00                  	mov rax, qword [rax + 8 * 0]
 26668 0001384A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26669 0001384D 50                      	push rax
 26670 0001384E 6A03                    	push 3	; arg count
 26671 00013850 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26672 00013858 803805                  	cmp byte [rax], T_undefined
 26673 0001385B 0F8494150000            	je L_error_fvar_undefined
 26674 00013861 803804                  	cmp byte [rax], T_closure
 26675 00013864 0F850F160000            	jne L_error_non_closure
 26676 0001386A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26677 0001386D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26678                                  
 26679                                  	; preparing a non-tail-call
 26680 00013870 488B4520                	mov rax, PARAM(0)	; param ch
 26681 00013874 50                      	push rax
 26682 00013875 488B4510                	mov rax, ENV
 26683 00013879 488B00                  	mov rax, qword [rax + 8 * 0]
 26684 0001387C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26685 00013880 50                      	push rax
 26686 00013881 488B4510                	mov rax, ENV
 26687 00013885 488B00                  	mov rax, qword [rax + 8 * 0]
 26688 00013888 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26689 0001388B 50                      	push rax
 26690 0001388C 6A03                    	push 3	; arg count
 26691 0001388E 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26692 00013896 803805                  	cmp byte [rax], T_undefined
 26693 00013899 0F8456150000            	je L_error_fvar_undefined
 26694 0001389F 803804                  	cmp byte [rax], T_closure
 26695 000138A2 0F85D1150000            	jne L_error_non_closure
 26696 000138A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26697 000138AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 26698                                  
 26699                                  	; preparing a non-tail-call
 26700                                  	; preparing a non-tail-call
 26701 000138AE 48B8-                   	mov rax, L_constants + 2270
 26701 000138B0 [DE08000000000000] 
 26702 000138B8 50                      	push rax
 26703 000138B9 488B4510                	mov rax, ENV
 26704 000138BD 488B00                  	mov rax, qword [rax + 8 * 0]
 26705 000138C0 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26706 000138C4 50                      	push rax
 26707 000138C5 6A02                    	push 2	; arg count
 26708 000138C7 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26709 000138CF 803805                  	cmp byte [rax], T_undefined
 26710 000138D2 0F841D150000            	je L_error_fvar_undefined
 26711 000138D8 803804                  	cmp byte [rax], T_closure
 26712 000138DB 0F8598150000            	jne L_error_non_closure
 26713 000138E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26714 000138E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26715 000138E7 50                      	push rax
 26716                                  	; preparing a non-tail-call
 26717 000138E8 48B8-                   	mov rax, L_constants + 2270
 26717 000138EA [DE08000000000000] 
 26718 000138F2 50                      	push rax
 26719 000138F3 488B4510                	mov rax, ENV
 26720 000138F7 488B00                  	mov rax, qword [rax + 8 * 0]
 26721 000138FA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26722 000138FE 50                      	push rax
 26723 000138FF 6A02                    	push 2	; arg count
 26724 00013901 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26725 00013909 803805                  	cmp byte [rax], T_undefined
 26726 0001390C 0F84E3140000            	je L_error_fvar_undefined
 26727 00013912 803804                  	cmp byte [rax], T_closure
 26728 00013915 0F855E150000            	jne L_error_non_closure
 26729 0001391B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26730 0001391E FF5009                  	call SOB_CLOSURE_CODE(rax)
 26731 00013921 50                      	push rax
 26732 00013922 488B4510                	mov rax, ENV
 26733 00013926 488B00                  	mov rax, qword [rax + 8 * 0]
 26734 00013929 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26735 0001392C 50                      	push rax
 26736 0001392D 6A03                    	push 3	; arg count
 26737 0001392F 488B4510                	mov rax, ENV
 26738 00013933 488B4008                	mov rax, qword [rax + 8 * 1]
 26739 00013937 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26740 0001393A 488B00                  	mov rax, qword [rax]
 26741 0001393D 803804                  	cmp byte [rax], T_closure
 26742 00013940 0F8533150000            	jne L_error_non_closure
 26743 00013946 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26744 00013949 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26745 0001394C C9                      	leave
 26746 0001394D C21800                  	ret AND_KILL_FRAME(1)
 26747                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 26748 00013950 803804                  	cmp byte [rax], T_closure
 26749 00013953 0F8520150000            	jne L_error_non_closure
 26750 00013959 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26751                                  
 26752                                  	; Reclaiming the current stack frame
 26753 0001395C FF7508                  	push qword [rbp + 8]
 26754 0001395F FF7500                  	push qword [rbp]
 26755 00013962 41BA05000000            	mov r10, 1 + 4
 26756 00013968 4C8B4518                	mov r8, COUNT
 26757 0001396C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26758 00013971 4C8D4DF8                	lea r9, [rbp - 8]
 26759                                  .L_tc_recycle_frame_loop_00d9:
 26760 00013975 4983FA00                	cmp r10, 0
 26761 00013979 7413                    	je .L_tc_recycle_frame_done_00d9
 26762 0001397B 4D8B19                  	mov r11, qword [r9]
 26763 0001397E 4D8918                  	mov qword [r8], r11
 26764 00013981 49FFCA                  	dec r10
 26765 00013984 4983E808                	sub r8, 8
 26766 00013988 4983E908                	sub r9, 8
 26767 0001398C EBE7                    	jmp .L_tc_recycle_frame_loop_00d9
 26768                                  .L_tc_recycle_frame_done_00d9:
 26769 0001398E 498D6008                	lea rsp, [r8 + 8]
 26770 00013992 5D                      	pop rbp
 26771 00013993 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26772 00013996 EB04                    	jmp .L_if_end_0081
 26773                                  .L_if_else_0081:
 26774 00013998 488B4520                	mov rax, PARAM(0)	; param vec
 26775                                  .L_if_end_0081:
 26776 0001399C C9                      	leave
 26777 0001399D C22800                  	ret AND_KILL_FRAME(3)
 26778                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 26779 000139A0 50                      	push rax
 26780 000139A1 488B4520                	mov rax, PARAM(0)	; param run
 26781 000139A5 8F00                    	pop qword [rax]
 26782 000139A7 48B8-                   	mov rax, sob_void
 26782 000139A9 [0000000000000000] 
 26783                                  
 26784 000139B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26785 000139B6 E867150000              	call malloc
 26786 000139BB 50                      	push rax
 26787 000139BC BF08000000              	mov rdi, 8 * 1	; new rib
 26788 000139C1 E85C150000              	call malloc
 26789 000139C6 50                      	push rax
 26790 000139C7 BF10000000              	mov rdi, 8 * 2	; extended env
 26791 000139CC E851150000              	call malloc
 26792 000139D1 488B7D10                	mov rdi, ENV
 26793 000139D5 BE00000000              	mov rsi, 0
 26794 000139DA BA01000000              	mov rdx, 1
 26795                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 26796 000139DF 4883FE01                	cmp rsi, 1
 26797 000139E3 7410                    	je .L_lambda_simple_env_end_00ab
 26798 000139E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26799 000139E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26800 000139ED 48FFC6                  	inc rsi
 26801 000139F0 48FFC2                  	inc rdx
 26802 000139F3 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 26803                                  .L_lambda_simple_env_end_00ab:
 26804 000139F5 5B                      	pop rbx
 26805 000139F6 BE00000000              	mov rsi, 0
 26806                                  .L_lambda_simple_params_loop_00ab:	; copy params
 26807 000139FB 4883FE01                	cmp rsi, 1
 26808 000139FF 740E                    	je .L_lambda_simple_params_end_00ab
 26809 00013A01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26810 00013A06 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26811 00013A0A 48FFC6                  	inc rsi
 26812 00013A0D EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 26813                                  .L_lambda_simple_params_end_00ab:
 26814 00013A0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26815 00013A12 4889C3                  	mov rbx, rax
 26816 00013A15 58                      	pop rax
 26817 00013A16 C60004                  	mov byte [rax], T_closure
 26818 00013A19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26819 00013A1D 48C74009[2A3A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 26820 00013A25 E9FC010000              	jmp .L_lambda_simple_end_00ab
 26821                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 26822 00013A2A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26823 00013A30 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 26824 00013A32 FF742410                	push qword [rsp + 8 * 2]
 26825 00013A36 6A01                    	push 1
 26826 00013A38 E99E140000              	jmp L_error_incorrect_arity_simple
 26827                                  .L_lambda_simple_arity_check_ok_00ab:
 26828 00013A3D C8000000                	enter 0, 0
 26829                                  	; Initiating tail-call optimization
 26830                                  	; preparing a non-tail-call
 26831 00013A41 488B4520                	mov rax, PARAM(0)	; param vec
 26832 00013A45 50                      	push rax
 26833 00013A46 6A01                    	push 1	; arg count
 26834 00013A48 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26835 00013A50 803805                  	cmp byte [rax], T_undefined
 26836 00013A53 0F849C130000            	je L_error_fvar_undefined
 26837 00013A59 803804                  	cmp byte [rax], T_closure
 26838 00013A5C 0F8517140000            	jne L_error_non_closure
 26839 00013A62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26840 00013A65 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26841 00013A68 50                      	push rax
 26842 00013A69 6A01                    	push 1	; Number of arguments
 26843 00013A6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26844 00013A70 E8AD140000              	call malloc
 26845 00013A75 50                      	push rax
 26846 00013A76 BF08000000              	mov rdi, 8 * 1	; new rib
 26847 00013A7B E8A2140000              	call malloc
 26848 00013A80 50                      	push rax
 26849 00013A81 BF18000000              	mov rdi, 8 * 3	; extended env
 26850 00013A86 E897140000              	call malloc
 26851 00013A8B 488B7D10                	mov rdi, ENV
 26852 00013A8F BE00000000              	mov rsi, 0
 26853 00013A94 BA01000000              	mov rdx, 1
 26854                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 26855 00013A99 4883FE02                	cmp rsi, 2
 26856 00013A9D 7410                    	je .L_lambda_simple_env_end_00ac
 26857 00013A9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26858 00013AA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26859 00013AA7 48FFC6                  	inc rsi
 26860 00013AAA 48FFC2                  	inc rdx
 26861 00013AAD EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 26862                                  .L_lambda_simple_env_end_00ac:
 26863 00013AAF 5B                      	pop rbx
 26864 00013AB0 BE00000000              	mov rsi, 0
 26865                                  .L_lambda_simple_params_loop_00ac:	; copy params
 26866 00013AB5 4883FE01                	cmp rsi, 1
 26867 00013AB9 740E                    	je .L_lambda_simple_params_end_00ac
 26868 00013ABB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26869 00013AC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26870 00013AC4 48FFC6                  	inc rsi
 26871 00013AC7 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 26872                                  .L_lambda_simple_params_end_00ac:
 26873 00013AC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26874 00013ACC 4889C3                  	mov rbx, rax
 26875 00013ACF 58                      	pop rax
 26876 00013AD0 C60004                  	mov byte [rax], T_closure
 26877 00013AD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26878 00013AD7 48C74009[E43A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 26879 00013ADF E9F8000000              	jmp .L_lambda_simple_end_00ac
 26880                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 26881 00013AE4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26882 00013AEA 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 26883 00013AEC FF742410                	push qword [rsp + 8 * 2]
 26884 00013AF0 6A01                    	push 1
 26885 00013AF2 E9E4130000              	jmp L_error_incorrect_arity_simple
 26886                                  .L_lambda_simple_arity_check_ok_00ac:
 26887 00013AF7 C8000000                	enter 0, 0
 26888                                  	; preparing a non-tail-call
 26889 00013AFB 488B4520                	mov rax, PARAM(0)	; param n
 26890 00013AFF 50                      	push rax
 26891 00013B00 6A01                    	push 1	; arg count
 26892 00013B02 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 26893 00013B0A 803805                  	cmp byte [rax], T_undefined
 26894 00013B0D 0F84E2120000            	je L_error_fvar_undefined
 26895 00013B13 803804                  	cmp byte [rax], T_closure
 26896 00013B16 0F855D130000            	jne L_error_non_closure
 26897 00013B1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26898 00013B1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26899 00013B22 483D[02000000]          	cmp rax, sob_boolean_false
 26900 00013B28 740F                    	je .L_if_else_0082
 26901 00013B2A 488B4510                	mov rax, ENV
 26902 00013B2E 488B00                  	mov rax, qword [rax + 8 * 0]
 26903 00013B31 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26904 00013B34 E99F000000              	jmp .L_if_end_0082
 26905                                  .L_if_else_0082:
 26906                                  	; Initiating tail-call optimization
 26907                                  	; preparing a non-tail-call
 26908 00013B39 48B8-                   	mov rax, L_constants + 2270
 26908 00013B3B [DE08000000000000] 
 26909 00013B43 50                      	push rax
 26910 00013B44 488B4520                	mov rax, PARAM(0)	; param n
 26911 00013B48 50                      	push rax
 26912 00013B49 6A02                    	push 2	; arg count
 26913 00013B4B 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26914 00013B53 803805                  	cmp byte [rax], T_undefined
 26915 00013B56 0F8499120000            	je L_error_fvar_undefined
 26916 00013B5C 803804                  	cmp byte [rax], T_closure
 26917 00013B5F 0F8514130000            	jne L_error_non_closure
 26918 00013B65 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26919 00013B68 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26920 00013B6B 50                      	push rax
 26921 00013B6C 48B8-                   	mov rax, L_constants + 2135
 26921 00013B6E [5708000000000000] 
 26922 00013B76 50                      	push rax
 26923 00013B77 488B4510                	mov rax, ENV
 26924 00013B7B 488B00                  	mov rax, qword [rax + 8 * 0]
 26925 00013B7E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26926 00013B81 50                      	push rax
 26927 00013B82 6A03                    	push 3	; Number of arguments
 26928 00013B84 488B4510                	mov rax, ENV
 26929 00013B88 488B4008                	mov rax, qword [rax + 8 * 1]
 26930 00013B8C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26931 00013B8F 488B00                  	mov rax, qword [rax]
 26932 00013B92 803804                  	cmp byte [rax], T_closure
 26933 00013B95 0F85DE120000            	jne L_error_non_closure
 26934 00013B9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26935                                  
 26936                                  	; Reclaiming the current stack frame
 26937 00013B9E FF7508                  	push qword [rbp + 8]
 26938 00013BA1 FF7500                  	push qword [rbp]
 26939 00013BA4 41BA07000000            	mov r10, 3 + 4
 26940 00013BAA 4C8B4518                	mov r8, COUNT
 26941 00013BAE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26942 00013BB3 4C8D4DF8                	lea r9, [rbp - 8]
 26943                                  .L_tc_recycle_frame_loop_00da:
 26944 00013BB7 4983FA00                	cmp r10, 0
 26945 00013BBB 7413                    	je .L_tc_recycle_frame_done_00da
 26946 00013BBD 4D8B19                  	mov r11, qword [r9]
 26947 00013BC0 4D8918                  	mov qword [r8], r11
 26948 00013BC3 49FFCA                  	dec r10
 26949 00013BC6 4983E808                	sub r8, 8
 26950 00013BCA 4983E908                	sub r9, 8
 26951 00013BCE EBE7                    	jmp .L_tc_recycle_frame_loop_00da
 26952                                  .L_tc_recycle_frame_done_00da:
 26953 00013BD0 498D6008                	lea rsp, [r8 + 8]
 26954 00013BD4 5D                      	pop rbp
 26955 00013BD5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26956                                  .L_if_end_0082:
 26957 00013BD8 C9                      	leave
 26958 00013BD9 C21800                  	ret AND_KILL_FRAME(1)
 26959                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 26960 00013BDC 803804                  	cmp byte [rax], T_closure
 26961 00013BDF 0F8594120000            	jne L_error_non_closure
 26962 00013BE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26963                                  
 26964                                  	; Reclaiming the current stack frame
 26965 00013BE8 FF7508                  	push qword [rbp + 8]
 26966 00013BEB FF7500                  	push qword [rbp]
 26967 00013BEE 41BA05000000            	mov r10, 1 + 4
 26968 00013BF4 4C8B4518                	mov r8, COUNT
 26969 00013BF8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26970 00013BFD 4C8D4DF8                	lea r9, [rbp - 8]
 26971                                  .L_tc_recycle_frame_loop_00db:
 26972 00013C01 4983FA00                	cmp r10, 0
 26973 00013C05 7413                    	je .L_tc_recycle_frame_done_00db
 26974 00013C07 4D8B19                  	mov r11, qword [r9]
 26975 00013C0A 4D8918                  	mov qword [r8], r11
 26976 00013C0D 49FFCA                  	dec r10
 26977 00013C10 4983E808                	sub r8, 8
 26978 00013C14 4983E908                	sub r9, 8
 26979 00013C18 EBE7                    	jmp .L_tc_recycle_frame_loop_00db
 26980                                  .L_tc_recycle_frame_done_00db:
 26981 00013C1A 498D6008                	lea rsp, [r8 + 8]
 26982 00013C1E 5D                      	pop rbp
 26983 00013C1F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26984 00013C22 C9                      	leave
 26985 00013C23 C21800                  	ret AND_KILL_FRAME(1)
 26986                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 26987 00013C26 C9                      	leave
 26988 00013C27 C21800                  	ret AND_KILL_FRAME(1)
 26989                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 26990 00013C2A 803804                  	cmp byte [rax], T_closure
 26991 00013C2D 0F8546120000            	jne L_error_non_closure
 26992 00013C33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26993 00013C36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26994 00013C39 48890425[77170000]      	mov qword [free_var_146], rax
 26995 00013C41 48B8-                   	mov rax, sob_void
 26995 00013C43 [0000000000000000] 
 26996                                  
 26997 00013C4B 4889C7                  	mov rdi, rax
 26998 00013C4E E824150000              	call print_sexpr_if_not_void
 26999 00013C53 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27000 00013C58 E8C5120000              	call malloc
 27001 00013C5D 50                      	push rax
 27002 00013C5E BF00000000              	mov rdi, 8 * 0	; new rib
 27003 00013C63 E8BA120000              	call malloc
 27004 00013C68 50                      	push rax
 27005 00013C69 BF08000000              	mov rdi, 8 * 1	; extended env
 27006 00013C6E E8AF120000              	call malloc
 27007 00013C73 488B7D10                	mov rdi, ENV
 27008 00013C77 BE00000000              	mov rsi, 0
 27009 00013C7C BA01000000              	mov rdx, 1
 27010                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 27011 00013C81 4883FE00                	cmp rsi, 0
 27012 00013C85 7410                    	je .L_lambda_simple_env_end_00ad
 27013 00013C87 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27014 00013C8B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27015 00013C8F 48FFC6                  	inc rsi
 27016 00013C92 48FFC2                  	inc rdx
 27017 00013C95 EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 27018                                  .L_lambda_simple_env_end_00ad:
 27019 00013C97 5B                      	pop rbx
 27020 00013C98 BE00000000              	mov rsi, 0
 27021                                  .L_lambda_simple_params_loop_00ad:	; copy params
 27022 00013C9D 4883FE00                	cmp rsi, 0
 27023 00013CA1 740E                    	je .L_lambda_simple_params_end_00ad
 27024 00013CA3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27025 00013CA8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27026 00013CAC 48FFC6                  	inc rsi
 27027 00013CAF EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 27028                                  .L_lambda_simple_params_end_00ad:
 27029 00013CB1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27030 00013CB4 4889C3                  	mov rbx, rax
 27031 00013CB7 58                      	pop rax
 27032 00013CB8 C60004                  	mov byte [rax], T_closure
 27033 00013CBB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27034 00013CBF 48C74009[CC3C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 27035 00013CC7 E902030000              	jmp .L_lambda_simple_end_00ad
 27036                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 27037 00013CCC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27038 00013CD2 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 27039 00013CD4 FF742410                	push qword [rsp + 8 * 2]
 27040 00013CD8 6A02                    	push 2
 27041 00013CDA E9FC110000              	jmp L_error_incorrect_arity_simple
 27042                                  .L_lambda_simple_arity_check_ok_00ad:
 27043 00013CDF C8000000                	enter 0, 0
 27044                                  	; Initiating tail-call optimization
 27045 00013CE3 48B8-                   	mov rax, L_constants + 2007
 27045 00013CE5 [D707000000000000] 
 27046 00013CED 50                      	push rax
 27047 00013CEE 6A01                    	push 1	; Number of arguments
 27048 00013CF0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27049 00013CF5 E828120000              	call malloc
 27050 00013CFA 50                      	push rax
 27051 00013CFB BF10000000              	mov rdi, 8 * 2	; new rib
 27052 00013D00 E81D120000              	call malloc
 27053 00013D05 50                      	push rax
 27054 00013D06 BF10000000              	mov rdi, 8 * 2	; extended env
 27055 00013D0B E812120000              	call malloc
 27056 00013D10 488B7D10                	mov rdi, ENV
 27057 00013D14 BE00000000              	mov rsi, 0
 27058 00013D19 BA01000000              	mov rdx, 1
 27059                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 27060 00013D1E 4883FE01                	cmp rsi, 1
 27061 00013D22 7410                    	je .L_lambda_simple_env_end_00ae
 27062 00013D24 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27063 00013D28 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27064 00013D2C 48FFC6                  	inc rsi
 27065 00013D2F 48FFC2                  	inc rdx
 27066 00013D32 EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 27067                                  .L_lambda_simple_env_end_00ae:
 27068 00013D34 5B                      	pop rbx
 27069 00013D35 BE00000000              	mov rsi, 0
 27070                                  .L_lambda_simple_params_loop_00ae:	; copy params
 27071 00013D3A 4883FE02                	cmp rsi, 2
 27072 00013D3E 740E                    	je .L_lambda_simple_params_end_00ae
 27073 00013D40 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27074 00013D45 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27075 00013D49 48FFC6                  	inc rsi
 27076 00013D4C EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 27077                                  .L_lambda_simple_params_end_00ae:
 27078 00013D4E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27079 00013D51 4889C3                  	mov rbx, rax
 27080 00013D54 58                      	pop rax
 27081 00013D55 C60004                  	mov byte [rax], T_closure
 27082 00013D58 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27083 00013D5C 48C74009[693D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 27084 00013D64 E91B020000              	jmp .L_lambda_simple_end_00ae
 27085                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 27086 00013D69 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27087 00013D6F 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 27088 00013D71 FF742410                	push qword [rsp + 8 * 2]
 27089 00013D75 6A01                    	push 1
 27090 00013D77 E95F110000              	jmp L_error_incorrect_arity_simple
 27091                                  .L_lambda_simple_arity_check_ok_00ae:
 27092 00013D7C C8000000                	enter 0, 0
 27093 00013D80 BF08000000              	mov rdi, 8 * 1
 27094 00013D85 E898110000              	call malloc
 27095 00013D8A 488B5D20                	mov rbx, PARAM(0)
 27096 00013D8E 488918                  	mov qword [rax], rbx
 27097 00013D91 48894520                	mov PARAM(0), rax
 27098 00013D95 48B8-                   	mov rax, sob_void
 27098 00013D97 [0000000000000000] 
 27099                                  
 27100 00013D9F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27101 00013DA4 E879110000              	call malloc
 27102 00013DA9 50                      	push rax
 27103 00013DAA BF08000000              	mov rdi, 8 * 1	; new rib
 27104 00013DAF E86E110000              	call malloc
 27105 00013DB4 50                      	push rax
 27106 00013DB5 BF18000000              	mov rdi, 8 * 3	; extended env
 27107 00013DBA E863110000              	call malloc
 27108 00013DBF 488B7D10                	mov rdi, ENV
 27109 00013DC3 BE00000000              	mov rsi, 0
 27110 00013DC8 BA01000000              	mov rdx, 1
 27111                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27112 00013DCD 4883FE02                	cmp rsi, 2
 27113 00013DD1 7410                    	je .L_lambda_simple_env_end_00af
 27114 00013DD3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27115 00013DD7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27116 00013DDB 48FFC6                  	inc rsi
 27117 00013DDE 48FFC2                  	inc rdx
 27118 00013DE1 EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27119                                  .L_lambda_simple_env_end_00af:
 27120 00013DE3 5B                      	pop rbx
 27121 00013DE4 BE00000000              	mov rsi, 0
 27122                                  .L_lambda_simple_params_loop_00af:	; copy params
 27123 00013DE9 4883FE01                	cmp rsi, 1
 27124 00013DED 740E                    	je .L_lambda_simple_params_end_00af
 27125 00013DEF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27126 00013DF4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27127 00013DF8 48FFC6                  	inc rsi
 27128 00013DFB EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27129                                  .L_lambda_simple_params_end_00af:
 27130 00013DFD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27131 00013E00 4889C3                  	mov rbx, rax
 27132 00013E03 58                      	pop rax
 27133 00013E04 C60004                  	mov byte [rax], T_closure
 27134 00013E07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27135 00013E0B 48C74009[183E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27136 00013E13 E934010000              	jmp .L_lambda_simple_end_00af
 27137                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27138 00013E18 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27139 00013E1E 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27140 00013E20 FF742410                	push qword [rsp + 8 * 2]
 27141 00013E24 6A01                    	push 1
 27142 00013E26 E9B0100000              	jmp L_error_incorrect_arity_simple
 27143                                  .L_lambda_simple_arity_check_ok_00af:
 27144 00013E2B C8000000                	enter 0, 0
 27145                                  	; preparing a non-tail-call
 27146 00013E2F 488B4510                	mov rax, ENV
 27147 00013E33 488B4008                	mov rax, qword [rax + 8 * 1]
 27148 00013E37 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27149 00013E3A 50                      	push rax
 27150 00013E3B 488B4520                	mov rax, PARAM(0)	; param i
 27151 00013E3F 50                      	push rax
 27152 00013E40 6A02                    	push 2	; arg count
 27153 00013E42 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27154 00013E4A 803805                  	cmp byte [rax], T_undefined
 27155 00013E4D 0F84A20F0000            	je L_error_fvar_undefined
 27156 00013E53 803804                  	cmp byte [rax], T_closure
 27157 00013E56 0F851D100000            	jne L_error_non_closure
 27158 00013E5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27159 00013E5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27160 00013E62 483D[02000000]          	cmp rax, sob_boolean_false
 27161 00013E68 0F84D0000000            	je .L_if_else_0083
 27162                                  	; Initiating tail-call optimization
 27163                                  	; preparing a non-tail-call
 27164                                  	; preparing a non-tail-call
 27165 00013E6E 48B8-                   	mov rax, L_constants + 2270
 27165 00013E70 [DE08000000000000] 
 27166 00013E78 50                      	push rax
 27167 00013E79 488B4520                	mov rax, PARAM(0)	; param i
 27168 00013E7D 50                      	push rax
 27169 00013E7E 6A02                    	push 2	; arg count
 27170 00013E80 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27171 00013E88 803805                  	cmp byte [rax], T_undefined
 27172 00013E8B 0F84640F0000            	je L_error_fvar_undefined
 27173 00013E91 803804                  	cmp byte [rax], T_closure
 27174 00013E94 0F85DF0F0000            	jne L_error_non_closure
 27175 00013E9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27176 00013E9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 27177 00013EA0 50                      	push rax
 27178 00013EA1 6A01                    	push 1	; arg count
 27179 00013EA3 488B4510                	mov rax, ENV
 27180 00013EA7 488B00                  	mov rax, qword [rax + 8 * 0]
 27181 00013EAA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27182 00013EAD 488B00                  	mov rax, qword [rax]
 27183 00013EB0 803804                  	cmp byte [rax], T_closure
 27184 00013EB3 0F85C00F0000            	jne L_error_non_closure
 27185 00013EB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27186 00013EBC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27187 00013EBF 50                      	push rax
 27188                                  	; preparing a non-tail-call
 27189 00013EC0 488B4520                	mov rax, PARAM(0)	; param i
 27190 00013EC4 50                      	push rax
 27191 00013EC5 6A01                    	push 1	; arg count
 27192 00013EC7 488B4510                	mov rax, ENV
 27193 00013ECB 488B4008                	mov rax, qword [rax + 8 * 1]
 27194 00013ECF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27195 00013ED3 803804                  	cmp byte [rax], T_closure
 27196 00013ED6 0F859D0F0000            	jne L_error_non_closure
 27197 00013EDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27198 00013EDF FF5009                  	call SOB_CLOSURE_CODE(rax)
 27199 00013EE2 50                      	push rax
 27200 00013EE3 6A02                    	push 2	; Number of arguments
 27201 00013EE5 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 27202 00013EED 803805                  	cmp byte [rax], T_undefined
 27203 00013EF0 0F84FF0E0000            	je L_error_fvar_undefined
 27204 00013EF6 803804                  	cmp byte [rax], T_closure
 27205 00013EF9 0F857A0F0000            	jne L_error_non_closure
 27206 00013EFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27207                                  
 27208                                  	; Reclaiming the current stack frame
 27209 00013F02 FF7508                  	push qword [rbp + 8]
 27210 00013F05 FF7500                  	push qword [rbp]
 27211 00013F08 41BA06000000            	mov r10, 2 + 4
 27212 00013F0E 4C8B4518                	mov r8, COUNT
 27213 00013F12 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27214 00013F17 4C8D4DF8                	lea r9, [rbp - 8]
 27215                                  .L_tc_recycle_frame_loop_00dc:
 27216 00013F1B 4983FA00                	cmp r10, 0
 27217 00013F1F 7413                    	je .L_tc_recycle_frame_done_00dc
 27218 00013F21 4D8B19                  	mov r11, qword [r9]
 27219 00013F24 4D8918                  	mov qword [r8], r11
 27220 00013F27 49FFCA                  	dec r10
 27221 00013F2A 4983E808                	sub r8, 8
 27222 00013F2E 4983E908                	sub r9, 8
 27223 00013F32 EBE7                    	jmp .L_tc_recycle_frame_loop_00dc
 27224                                  .L_tc_recycle_frame_done_00dc:
 27225 00013F34 498D6008                	lea rsp, [r8 + 8]
 27226 00013F38 5D                      	pop rbp
 27227 00013F39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27228 00013F3C EB0A                    	jmp .L_if_end_0083
 27229                                  .L_if_else_0083:
 27230 00013F3E 48B8-                   	mov rax, L_constants + 1
 27230 00013F40 [0100000000000000] 
 27231                                  .L_if_end_0083:
 27232 00013F48 C9                      	leave
 27233 00013F49 C21800                  	ret AND_KILL_FRAME(1)
 27234                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27235 00013F4C 50                      	push rax
 27236 00013F4D 488B4520                	mov rax, PARAM(0)	; param run
 27237 00013F51 8F00                    	pop qword [rax]
 27238 00013F53 48B8-                   	mov rax, sob_void
 27238 00013F55 [0000000000000000] 
 27239                                  
 27240                                  	; preparing a non-tail-call
 27241 00013F5D 48B8-                   	mov rax, L_constants + 2135
 27241 00013F5F [5708000000000000] 
 27242 00013F67 50                      	push rax
 27243 00013F68 6A01                    	push 1	; arg count
 27244 00013F6A 488B4520                	mov rax, PARAM(0)	; param run
 27245 00013F6E 488B00                  	mov rax, qword [rax]
 27246 00013F71 803804                  	cmp byte [rax], T_closure
 27247 00013F74 0F85FF0E0000            	jne L_error_non_closure
 27248 00013F7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27249 00013F7D FF5009                  	call SOB_CLOSURE_CODE(rax)
 27250 00013F80 C9                      	leave
 27251 00013F81 C21800                  	ret AND_KILL_FRAME(1)
 27252                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27253 00013F84 803804                  	cmp byte [rax], T_closure
 27254 00013F87 0F85EC0E0000            	jne L_error_non_closure
 27255 00013F8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27256                                  
 27257                                  	; Reclaiming the current stack frame
 27258 00013F90 FF7508                  	push qword [rbp + 8]
 27259 00013F93 FF7500                  	push qword [rbp]
 27260 00013F96 41BA05000000            	mov r10, 1 + 4
 27261 00013F9C 4C8B4518                	mov r8, COUNT
 27262 00013FA0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27263 00013FA5 4C8D4DF8                	lea r9, [rbp - 8]
 27264                                  .L_tc_recycle_frame_loop_00dd:
 27265 00013FA9 4983FA00                	cmp r10, 0
 27266 00013FAD 7413                    	je .L_tc_recycle_frame_done_00dd
 27267 00013FAF 4D8B19                  	mov r11, qword [r9]
 27268 00013FB2 4D8918                  	mov qword [r8], r11
 27269 00013FB5 49FFCA                  	dec r10
 27270 00013FB8 4983E808                	sub r8, 8
 27271 00013FBC 4983E908                	sub r9, 8
 27272 00013FC0 EBE7                    	jmp .L_tc_recycle_frame_loop_00dd
 27273                                  .L_tc_recycle_frame_done_00dd:
 27274 00013FC2 498D6008                	lea rsp, [r8 + 8]
 27275 00013FC6 5D                      	pop rbp
 27276 00013FC7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27277 00013FCA C9                      	leave
 27278 00013FCB C22000                  	ret AND_KILL_FRAME(2)
 27279                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27280 00013FCE 48890425[47140000]      	mov qword [free_var_98], rax
 27281 00013FD6 48B8-                   	mov rax, sob_void
 27281 00013FD8 [0000000000000000] 
 27282                                  
 27283 00013FE0 4889C7                  	mov rdi, rax
 27284 00013FE3 E88F110000              	call print_sexpr_if_not_void
 27285 00013FE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27286 00013FED E8300F0000              	call malloc
 27287 00013FF2 50                      	push rax
 27288 00013FF3 BF00000000              	mov rdi, 8 * 0	; new rib
 27289 00013FF8 E8250F0000              	call malloc
 27290 00013FFD 50                      	push rax
 27291 00013FFE BF08000000              	mov rdi, 8 * 1	; extended env
 27292 00014003 E81A0F0000              	call malloc
 27293 00014008 488B7D10                	mov rdi, ENV
 27294 0001400C BE00000000              	mov rsi, 0
 27295 00014011 BA01000000              	mov rdx, 1
 27296                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27297 00014016 4883FE00                	cmp rsi, 0
 27298 0001401A 7410                    	je .L_lambda_simple_env_end_00b0
 27299 0001401C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27300 00014020 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27301 00014024 48FFC6                  	inc rsi
 27302 00014027 48FFC2                  	inc rdx
 27303 0001402A EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27304                                  .L_lambda_simple_env_end_00b0:
 27305 0001402C 5B                      	pop rbx
 27306 0001402D BE00000000              	mov rsi, 0
 27307                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27308 00014032 4883FE00                	cmp rsi, 0
 27309 00014036 740E                    	je .L_lambda_simple_params_end_00b0
 27310 00014038 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27311 0001403D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27312 00014041 48FFC6                  	inc rsi
 27313 00014044 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27314                                  .L_lambda_simple_params_end_00b0:
 27315 00014046 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27316 00014049 4889C3                  	mov rbx, rax
 27317 0001404C 58                      	pop rax
 27318 0001404D C60004                  	mov byte [rax], T_closure
 27319 00014050 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27320 00014054 48C74009[61400100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27321 0001405C E9E0030000              	jmp .L_lambda_simple_end_00b0
 27322                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27323 00014061 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27324 00014067 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27325 00014069 FF742410                	push qword [rsp + 8 * 2]
 27326 0001406D 6A02                    	push 2
 27327 0001406F E9670E0000              	jmp L_error_incorrect_arity_simple
 27328                                  .L_lambda_simple_arity_check_ok_00b0:
 27329 00014074 C8000000                	enter 0, 0
 27330                                  	; Initiating tail-call optimization
 27331                                  	; preparing a non-tail-call
 27332 00014078 488B4520                	mov rax, PARAM(0)	; param n
 27333 0001407C 50                      	push rax
 27334 0001407D 6A01                    	push 1	; arg count
 27335 0001407F 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 27336 00014087 803805                  	cmp byte [rax], T_undefined
 27337 0001408A 0F84650D0000            	je L_error_fvar_undefined
 27338 00014090 803804                  	cmp byte [rax], T_closure
 27339 00014093 0F85E00D0000            	jne L_error_non_closure
 27340 00014099 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27341 0001409C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27342 0001409F 50                      	push rax
 27343 000140A0 6A01                    	push 1	; Number of arguments
 27344 000140A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27345 000140A7 E8760E0000              	call malloc
 27346 000140AC 50                      	push rax
 27347 000140AD BF10000000              	mov rdi, 8 * 2	; new rib
 27348 000140B2 E86B0E0000              	call malloc
 27349 000140B7 50                      	push rax
 27350 000140B8 BF10000000              	mov rdi, 8 * 2	; extended env
 27351 000140BD E8600E0000              	call malloc
 27352 000140C2 488B7D10                	mov rdi, ENV
 27353 000140C6 BE00000000              	mov rsi, 0
 27354 000140CB BA01000000              	mov rdx, 1
 27355                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27356 000140D0 4883FE01                	cmp rsi, 1
 27357 000140D4 7410                    	je .L_lambda_simple_env_end_00b1
 27358 000140D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27359 000140DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27360 000140DE 48FFC6                  	inc rsi
 27361 000140E1 48FFC2                  	inc rdx
 27362 000140E4 EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27363                                  .L_lambda_simple_env_end_00b1:
 27364 000140E6 5B                      	pop rbx
 27365 000140E7 BE00000000              	mov rsi, 0
 27366                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27367 000140EC 4883FE02                	cmp rsi, 2
 27368 000140F0 740E                    	je .L_lambda_simple_params_end_00b1
 27369 000140F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27370 000140F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27371 000140FB 48FFC6                  	inc rsi
 27372 000140FE EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27373                                  .L_lambda_simple_params_end_00b1:
 27374 00014100 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27375 00014103 4889C3                  	mov rbx, rax
 27376 00014106 58                      	pop rax
 27377 00014107 C60004                  	mov byte [rax], T_closure
 27378 0001410A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27379 0001410E 48C74009[1B410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27380 00014116 E9DC020000              	jmp .L_lambda_simple_end_00b1
 27381                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27382 0001411B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27383 00014121 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27384 00014123 FF742410                	push qword [rsp + 8 * 2]
 27385 00014127 6A01                    	push 1
 27386 00014129 E9AD0D0000              	jmp L_error_incorrect_arity_simple
 27387                                  .L_lambda_simple_arity_check_ok_00b1:
 27388 0001412E C8000000                	enter 0, 0
 27389                                  	; Initiating tail-call optimization
 27390 00014132 48B8-                   	mov rax, L_constants + 2007
 27390 00014134 [D707000000000000] 
 27391 0001413C 50                      	push rax
 27392 0001413D 6A01                    	push 1	; Number of arguments
 27393 0001413F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27394 00014144 E8D90D0000              	call malloc
 27395 00014149 50                      	push rax
 27396 0001414A BF08000000              	mov rdi, 8 * 1	; new rib
 27397 0001414F E8CE0D0000              	call malloc
 27398 00014154 50                      	push rax
 27399 00014155 BF18000000              	mov rdi, 8 * 3	; extended env
 27400 0001415A E8C30D0000              	call malloc
 27401 0001415F 488B7D10                	mov rdi, ENV
 27402 00014163 BE00000000              	mov rsi, 0
 27403 00014168 BA01000000              	mov rdx, 1
 27404                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27405 0001416D 4883FE02                	cmp rsi, 2
 27406 00014171 7410                    	je .L_lambda_simple_env_end_00b2
 27407 00014173 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27408 00014177 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27409 0001417B 48FFC6                  	inc rsi
 27410 0001417E 48FFC2                  	inc rdx
 27411 00014181 EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27412                                  .L_lambda_simple_env_end_00b2:
 27413 00014183 5B                      	pop rbx
 27414 00014184 BE00000000              	mov rsi, 0
 27415                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27416 00014189 4883FE01                	cmp rsi, 1
 27417 0001418D 740E                    	je .L_lambda_simple_params_end_00b2
 27418 0001418F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27419 00014194 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27420 00014198 48FFC6                  	inc rsi
 27421 0001419B EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27422                                  .L_lambda_simple_params_end_00b2:
 27423 0001419D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27424 000141A0 4889C3                  	mov rbx, rax
 27425 000141A3 58                      	pop rax
 27426 000141A4 C60004                  	mov byte [rax], T_closure
 27427 000141A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27428 000141AB 48C74009[B8410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27429 000141B3 E9F5010000              	jmp .L_lambda_simple_end_00b2
 27430                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 27431 000141B8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27432 000141BE 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 27433 000141C0 FF742410                	push qword [rsp + 8 * 2]
 27434 000141C4 6A01                    	push 1
 27435 000141C6 E9100D0000              	jmp L_error_incorrect_arity_simple
 27436                                  .L_lambda_simple_arity_check_ok_00b2:
 27437 000141CB C8000000                	enter 0, 0
 27438 000141CF BF08000000              	mov rdi, 8 * 1
 27439 000141D4 E8490D0000              	call malloc
 27440 000141D9 488B5D20                	mov rbx, PARAM(0)
 27441 000141DD 488918                  	mov qword [rax], rbx
 27442 000141E0 48894520                	mov PARAM(0), rax
 27443 000141E4 48B8-                   	mov rax, sob_void
 27443 000141E6 [0000000000000000] 
 27444                                  
 27445 000141EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27446 000141F3 E82A0D0000              	call malloc
 27447 000141F8 50                      	push rax
 27448 000141F9 BF08000000              	mov rdi, 8 * 1	; new rib
 27449 000141FE E81F0D0000              	call malloc
 27450 00014203 50                      	push rax
 27451 00014204 BF20000000              	mov rdi, 8 * 4	; extended env
 27452 00014209 E8140D0000              	call malloc
 27453 0001420E 488B7D10                	mov rdi, ENV
 27454 00014212 BE00000000              	mov rsi, 0
 27455 00014217 BA01000000              	mov rdx, 1
 27456                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 27457 0001421C 4883FE03                	cmp rsi, 3
 27458 00014220 7410                    	je .L_lambda_simple_env_end_00b3
 27459 00014222 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27460 00014226 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27461 0001422A 48FFC6                  	inc rsi
 27462 0001422D 48FFC2                  	inc rdx
 27463 00014230 EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 27464                                  .L_lambda_simple_env_end_00b3:
 27465 00014232 5B                      	pop rbx
 27466 00014233 BE00000000              	mov rsi, 0
 27467                                  .L_lambda_simple_params_loop_00b3:	; copy params
 27468 00014238 4883FE01                	cmp rsi, 1
 27469 0001423C 740E                    	je .L_lambda_simple_params_end_00b3
 27470 0001423E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27471 00014243 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27472 00014247 48FFC6                  	inc rsi
 27473 0001424A EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 27474                                  .L_lambda_simple_params_end_00b3:
 27475 0001424C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27476 0001424F 4889C3                  	mov rbx, rax
 27477 00014252 58                      	pop rax
 27478 00014253 C60004                  	mov byte [rax], T_closure
 27479 00014256 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27480 0001425A 48C74009[67420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 27481 00014262 E90E010000              	jmp .L_lambda_simple_end_00b3
 27482                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 27483 00014267 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27484 0001426D 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 27485 0001426F FF742410                	push qword [rsp + 8 * 2]
 27486 00014273 6A01                    	push 1
 27487 00014275 E9610C0000              	jmp L_error_incorrect_arity_simple
 27488                                  .L_lambda_simple_arity_check_ok_00b3:
 27489 0001427A C8000000                	enter 0, 0
 27490                                  	; preparing a non-tail-call
 27491 0001427E 488B4510                	mov rax, ENV
 27492 00014282 488B4010                	mov rax, qword [rax + 8 * 2]
 27493 00014286 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27494 00014289 50                      	push rax
 27495 0001428A 488B4520                	mov rax, PARAM(0)	; param i
 27496 0001428E 50                      	push rax
 27497 0001428F 6A02                    	push 2	; arg count
 27498 00014291 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27499 00014299 803805                  	cmp byte [rax], T_undefined
 27500 0001429C 0F84530B0000            	je L_error_fvar_undefined
 27501 000142A2 803804                  	cmp byte [rax], T_closure
 27502 000142A5 0F85CE0B0000            	jne L_error_non_closure
 27503 000142AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 27504 000142AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 27505 000142B1 483D[02000000]          	cmp rax, sob_boolean_false
 27506 000142B7 0F84A9000000            	je .L_if_else_0084
 27507                                  	; preparing a non-tail-call
 27508                                  	; preparing a non-tail-call
 27509 000142BD 488B4520                	mov rax, PARAM(0)	; param i
 27510 000142C1 50                      	push rax
 27511 000142C2 6A01                    	push 1	; arg count
 27512 000142C4 488B4510                	mov rax, ENV
 27513 000142C8 488B4010                	mov rax, qword [rax + 8 * 2]
 27514 000142CC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27515 000142D0 803804                  	cmp byte [rax], T_closure
 27516 000142D3 0F85A00B0000            	jne L_error_non_closure
 27517 000142D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27518 000142DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27519 000142DF 50                      	push rax
 27520 000142E0 488B4520                	mov rax, PARAM(0)	; param i
 27521 000142E4 50                      	push rax
 27522 000142E5 488B4510                	mov rax, ENV
 27523 000142E9 488B4008                	mov rax, qword [rax + 8 * 1]
 27524 000142ED 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27525 000142F0 50                      	push rax
 27526 000142F1 6A03                    	push 3	; arg count
 27527 000142F3 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 27528 000142FB 803805                  	cmp byte [rax], T_undefined
 27529 000142FE 0F84F10A0000            	je L_error_fvar_undefined
 27530 00014304 803804                  	cmp byte [rax], T_closure
 27531 00014307 0F856C0B0000            	jne L_error_non_closure
 27532 0001430D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27533 00014310 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27534                                  
 27535                                  	; preparing a non-tail-call
 27536                                  	; preparing a non-tail-call
 27537 00014313 48B8-                   	mov rax, L_constants + 2270
 27537 00014315 [DE08000000000000] 
 27538 0001431D 50                      	push rax
 27539 0001431E 488B4520                	mov rax, PARAM(0)	; param i
 27540 00014322 50                      	push rax
 27541 00014323 6A02                    	push 2	; arg count
 27542 00014325 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27543 0001432D 803805                  	cmp byte [rax], T_undefined
 27544 00014330 0F84BF0A0000            	je L_error_fvar_undefined
 27545 00014336 803804                  	cmp byte [rax], T_closure
 27546 00014339 0F853A0B0000            	jne L_error_non_closure
 27547 0001433F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27548 00014342 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27549 00014345 50                      	push rax
 27550 00014346 6A01                    	push 1	; arg count
 27551 00014348 488B4510                	mov rax, ENV
 27552 0001434C 488B00                  	mov rax, qword [rax + 8 * 0]
 27553 0001434F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27554 00014352 488B00                  	mov rax, qword [rax]
 27555 00014355 803804                  	cmp byte [rax], T_closure
 27556 00014358 0F851B0B0000            	jne L_error_non_closure
 27557 0001435E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27558 00014361 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27559 00014364 EB0B                    	jmp .L_if_end_0084
 27560                                  .L_if_else_0084:
 27561 00014366 488B4510                	mov rax, ENV
 27562 0001436A 488B4008                	mov rax, qword [rax + 8 * 1]
 27563 0001436E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27564                                  .L_if_end_0084:
 27565 00014371 C9                      	leave
 27566 00014372 C21800                  	ret AND_KILL_FRAME(1)
 27567                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 27568 00014375 50                      	push rax
 27569 00014376 488B4520                	mov rax, PARAM(0)	; param run
 27570 0001437A 8F00                    	pop qword [rax]
 27571 0001437C 48B8-                   	mov rax, sob_void
 27571 0001437E [0000000000000000] 
 27572                                  
 27573                                  	; preparing a non-tail-call
 27574 00014386 48B8-                   	mov rax, L_constants + 2135
 27574 00014388 [5708000000000000] 
 27575 00014390 50                      	push rax
 27576 00014391 6A01                    	push 1	; arg count
 27577 00014393 488B4520                	mov rax, PARAM(0)	; param run
 27578 00014397 488B00                  	mov rax, qword [rax]
 27579 0001439A 803804                  	cmp byte [rax], T_closure
 27580 0001439D 0F85D60A0000            	jne L_error_non_closure
 27581 000143A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27582 000143A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27583 000143A9 C9                      	leave
 27584 000143AA C21800                  	ret AND_KILL_FRAME(1)
 27585                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 27586 000143AD 803804                  	cmp byte [rax], T_closure
 27587 000143B0 0F85C30A0000            	jne L_error_non_closure
 27588 000143B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27589                                  
 27590                                  	; Reclaiming the current stack frame
 27591 000143B9 FF7508                  	push qword [rbp + 8]
 27592 000143BC FF7500                  	push qword [rbp]
 27593 000143BF 41BA05000000            	mov r10, 1 + 4
 27594 000143C5 4C8B4518                	mov r8, COUNT
 27595 000143C9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27596 000143CE 4C8D4DF8                	lea r9, [rbp - 8]
 27597                                  .L_tc_recycle_frame_loop_00de:
 27598 000143D2 4983FA00                	cmp r10, 0
 27599 000143D6 7413                    	je .L_tc_recycle_frame_done_00de
 27600 000143D8 4D8B19                  	mov r11, qword [r9]
 27601 000143DB 4D8918                  	mov qword [r8], r11
 27602 000143DE 49FFCA                  	dec r10
 27603 000143E1 4983E808                	sub r8, 8
 27604 000143E5 4983E908                	sub r9, 8
 27605 000143E9 EBE7                    	jmp .L_tc_recycle_frame_loop_00de
 27606                                  .L_tc_recycle_frame_done_00de:
 27607 000143EB 498D6008                	lea rsp, [r8 + 8]
 27608 000143EF 5D                      	pop rbp
 27609 000143F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27610 000143F3 C9                      	leave
 27611 000143F4 C21800                  	ret AND_KILL_FRAME(1)
 27612                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 27613 000143F7 803804                  	cmp byte [rax], T_closure
 27614 000143FA 0F85790A0000            	jne L_error_non_closure
 27615 00014400 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27616                                  
 27617                                  	; Reclaiming the current stack frame
 27618 00014403 FF7508                  	push qword [rbp + 8]
 27619 00014406 FF7500                  	push qword [rbp]
 27620 00014409 41BA05000000            	mov r10, 1 + 4
 27621 0001440F 4C8B4518                	mov r8, COUNT
 27622 00014413 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27623 00014418 4C8D4DF8                	lea r9, [rbp - 8]
 27624                                  .L_tc_recycle_frame_loop_00df:
 27625 0001441C 4983FA00                	cmp r10, 0
 27626 00014420 7413                    	je .L_tc_recycle_frame_done_00df
 27627 00014422 4D8B19                  	mov r11, qword [r9]
 27628 00014425 4D8918                  	mov qword [r8], r11
 27629 00014428 49FFCA                  	dec r10
 27630 0001442B 4983E808                	sub r8, 8
 27631 0001442F 4983E908                	sub r9, 8
 27632 00014433 EBE7                    	jmp .L_tc_recycle_frame_loop_00df
 27633                                  .L_tc_recycle_frame_done_00df:
 27634 00014435 498D6008                	lea rsp, [r8 + 8]
 27635 00014439 5D                      	pop rbp
 27636 0001443A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27637 0001443D C9                      	leave
 27638 0001443E C22000                  	ret AND_KILL_FRAME(2)
 27639                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 27640 00014441 48890425[69140000]      	mov qword [free_var_100], rax
 27641 00014449 48B8-                   	mov rax, sob_void
 27641 0001444B [0000000000000000] 
 27642                                  
 27643 00014453 4889C7                  	mov rdi, rax
 27644 00014456 E81C0D0000              	call print_sexpr_if_not_void
 27645 0001445B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27646 00014460 E8BD0A0000              	call malloc
 27647 00014465 50                      	push rax
 27648 00014466 BF00000000              	mov rdi, 8 * 0	; new rib
 27649 0001446B E8B20A0000              	call malloc
 27650 00014470 50                      	push rax
 27651 00014471 BF08000000              	mov rdi, 8 * 1	; extended env
 27652 00014476 E8A70A0000              	call malloc
 27653 0001447B 488B7D10                	mov rdi, ENV
 27654 0001447F BE00000000              	mov rsi, 0
 27655 00014484 BA01000000              	mov rdx, 1
 27656                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 27657 00014489 4883FE00                	cmp rsi, 0
 27658 0001448D 7410                    	je .L_lambda_simple_env_end_00b4
 27659 0001448F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27660 00014493 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27661 00014497 48FFC6                  	inc rsi
 27662 0001449A 48FFC2                  	inc rdx
 27663 0001449D EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 27664                                  .L_lambda_simple_env_end_00b4:
 27665 0001449F 5B                      	pop rbx
 27666 000144A0 BE00000000              	mov rsi, 0
 27667                                  .L_lambda_simple_params_loop_00b4:	; copy params
 27668 000144A5 4883FE00                	cmp rsi, 0
 27669 000144A9 740E                    	je .L_lambda_simple_params_end_00b4
 27670 000144AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27671 000144B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27672 000144B4 48FFC6                  	inc rsi
 27673 000144B7 EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 27674                                  .L_lambda_simple_params_end_00b4:
 27675 000144B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27676 000144BC 4889C3                  	mov rbx, rax
 27677 000144BF 58                      	pop rax
 27678 000144C0 C60004                  	mov byte [rax], T_closure
 27679 000144C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27680 000144C7 48C74009[D4440100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 27681 000144CF E9E0030000              	jmp .L_lambda_simple_end_00b4
 27682                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 27683 000144D4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27684 000144DA 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 27685 000144DC FF742410                	push qword [rsp + 8 * 2]
 27686 000144E0 6A02                    	push 2
 27687 000144E2 E9F4090000              	jmp L_error_incorrect_arity_simple
 27688                                  .L_lambda_simple_arity_check_ok_00b4:
 27689 000144E7 C8000000                	enter 0, 0
 27690                                  	; Initiating tail-call optimization
 27691                                  	; preparing a non-tail-call
 27692 000144EB 488B4520                	mov rax, PARAM(0)	; param n
 27693 000144EF 50                      	push rax
 27694 000144F0 6A01                    	push 1	; arg count
 27695 000144F2 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 27696 000144FA 803805                  	cmp byte [rax], T_undefined
 27697 000144FD 0F84F2080000            	je L_error_fvar_undefined
 27698 00014503 803804                  	cmp byte [rax], T_closure
 27699 00014506 0F856D090000            	jne L_error_non_closure
 27700 0001450C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27701 0001450F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27702 00014512 50                      	push rax
 27703 00014513 6A01                    	push 1	; Number of arguments
 27704 00014515 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27705 0001451A E8030A0000              	call malloc
 27706 0001451F 50                      	push rax
 27707 00014520 BF10000000              	mov rdi, 8 * 2	; new rib
 27708 00014525 E8F8090000              	call malloc
 27709 0001452A 50                      	push rax
 27710 0001452B BF10000000              	mov rdi, 8 * 2	; extended env
 27711 00014530 E8ED090000              	call malloc
 27712 00014535 488B7D10                	mov rdi, ENV
 27713 00014539 BE00000000              	mov rsi, 0
 27714 0001453E BA01000000              	mov rdx, 1
 27715                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 27716 00014543 4883FE01                	cmp rsi, 1
 27717 00014547 7410                    	je .L_lambda_simple_env_end_00b5
 27718 00014549 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27719 0001454D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27720 00014551 48FFC6                  	inc rsi
 27721 00014554 48FFC2                  	inc rdx
 27722 00014557 EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 27723                                  .L_lambda_simple_env_end_00b5:
 27724 00014559 5B                      	pop rbx
 27725 0001455A BE00000000              	mov rsi, 0
 27726                                  .L_lambda_simple_params_loop_00b5:	; copy params
 27727 0001455F 4883FE02                	cmp rsi, 2
 27728 00014563 740E                    	je .L_lambda_simple_params_end_00b5
 27729 00014565 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27730 0001456A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27731 0001456E 48FFC6                  	inc rsi
 27732 00014571 EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 27733                                  .L_lambda_simple_params_end_00b5:
 27734 00014573 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27735 00014576 4889C3                  	mov rbx, rax
 27736 00014579 58                      	pop rax
 27737 0001457A C60004                  	mov byte [rax], T_closure
 27738 0001457D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27739 00014581 48C74009[8E450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 27740 00014589 E9DC020000              	jmp .L_lambda_simple_end_00b5
 27741                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 27742 0001458E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27743 00014594 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 27744 00014596 FF742410                	push qword [rsp + 8 * 2]
 27745 0001459A 6A01                    	push 1
 27746 0001459C E93A090000              	jmp L_error_incorrect_arity_simple
 27747                                  .L_lambda_simple_arity_check_ok_00b5:
 27748 000145A1 C8000000                	enter 0, 0
 27749                                  	; Initiating tail-call optimization
 27750 000145A5 48B8-                   	mov rax, L_constants + 2007
 27750 000145A7 [D707000000000000] 
 27751 000145AF 50                      	push rax
 27752 000145B0 6A01                    	push 1	; Number of arguments
 27753 000145B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27754 000145B7 E866090000              	call malloc
 27755 000145BC 50                      	push rax
 27756 000145BD BF08000000              	mov rdi, 8 * 1	; new rib
 27757 000145C2 E85B090000              	call malloc
 27758 000145C7 50                      	push rax
 27759 000145C8 BF18000000              	mov rdi, 8 * 3	; extended env
 27760 000145CD E850090000              	call malloc
 27761 000145D2 488B7D10                	mov rdi, ENV
 27762 000145D6 BE00000000              	mov rsi, 0
 27763 000145DB BA01000000              	mov rdx, 1
 27764                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 27765 000145E0 4883FE02                	cmp rsi, 2
 27766 000145E4 7410                    	je .L_lambda_simple_env_end_00b6
 27767 000145E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27768 000145EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27769 000145EE 48FFC6                  	inc rsi
 27770 000145F1 48FFC2                  	inc rdx
 27771 000145F4 EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 27772                                  .L_lambda_simple_env_end_00b6:
 27773 000145F6 5B                      	pop rbx
 27774 000145F7 BE00000000              	mov rsi, 0
 27775                                  .L_lambda_simple_params_loop_00b6:	; copy params
 27776 000145FC 4883FE01                	cmp rsi, 1
 27777 00014600 740E                    	je .L_lambda_simple_params_end_00b6
 27778 00014602 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27779 00014607 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27780 0001460B 48FFC6                  	inc rsi
 27781 0001460E EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 27782                                  .L_lambda_simple_params_end_00b6:
 27783 00014610 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27784 00014613 4889C3                  	mov rbx, rax
 27785 00014616 58                      	pop rax
 27786 00014617 C60004                  	mov byte [rax], T_closure
 27787 0001461A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27788 0001461E 48C74009[2B460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 27789 00014626 E9F5010000              	jmp .L_lambda_simple_end_00b6
 27790                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 27791 0001462B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27792 00014631 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 27793 00014633 FF742410                	push qword [rsp + 8 * 2]
 27794 00014637 6A01                    	push 1
 27795 00014639 E99D080000              	jmp L_error_incorrect_arity_simple
 27796                                  .L_lambda_simple_arity_check_ok_00b6:
 27797 0001463E C8000000                	enter 0, 0
 27798 00014642 BF08000000              	mov rdi, 8 * 1
 27799 00014647 E8D6080000              	call malloc
 27800 0001464C 488B5D20                	mov rbx, PARAM(0)
 27801 00014650 488918                  	mov qword [rax], rbx
 27802 00014653 48894520                	mov PARAM(0), rax
 27803 00014657 48B8-                   	mov rax, sob_void
 27803 00014659 [0000000000000000] 
 27804                                  
 27805 00014661 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27806 00014666 E8B7080000              	call malloc
 27807 0001466B 50                      	push rax
 27808 0001466C BF08000000              	mov rdi, 8 * 1	; new rib
 27809 00014671 E8AC080000              	call malloc
 27810 00014676 50                      	push rax
 27811 00014677 BF20000000              	mov rdi, 8 * 4	; extended env
 27812 0001467C E8A1080000              	call malloc
 27813 00014681 488B7D10                	mov rdi, ENV
 27814 00014685 BE00000000              	mov rsi, 0
 27815 0001468A BA01000000              	mov rdx, 1
 27816                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 27817 0001468F 4883FE03                	cmp rsi, 3
 27818 00014693 7410                    	je .L_lambda_simple_env_end_00b7
 27819 00014695 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27820 00014699 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27821 0001469D 48FFC6                  	inc rsi
 27822 000146A0 48FFC2                  	inc rdx
 27823 000146A3 EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 27824                                  .L_lambda_simple_env_end_00b7:
 27825 000146A5 5B                      	pop rbx
 27826 000146A6 BE00000000              	mov rsi, 0
 27827                                  .L_lambda_simple_params_loop_00b7:	; copy params
 27828 000146AB 4883FE01                	cmp rsi, 1
 27829 000146AF 740E                    	je .L_lambda_simple_params_end_00b7
 27830 000146B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27831 000146B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27832 000146BA 48FFC6                  	inc rsi
 27833 000146BD EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 27834                                  .L_lambda_simple_params_end_00b7:
 27835 000146BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27836 000146C2 4889C3                  	mov rbx, rax
 27837 000146C5 58                      	pop rax
 27838 000146C6 C60004                  	mov byte [rax], T_closure
 27839 000146C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27840 000146CD 48C74009[DA460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 27841 000146D5 E90E010000              	jmp .L_lambda_simple_end_00b7
 27842                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 27843 000146DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27844 000146E0 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 27845 000146E2 FF742410                	push qword [rsp + 8 * 2]
 27846 000146E6 6A01                    	push 1
 27847 000146E8 E9EE070000              	jmp L_error_incorrect_arity_simple
 27848                                  .L_lambda_simple_arity_check_ok_00b7:
 27849 000146ED C8000000                	enter 0, 0
 27850                                  	; preparing a non-tail-call
 27851 000146F1 488B4510                	mov rax, ENV
 27852 000146F5 488B4010                	mov rax, qword [rax + 8 * 2]
 27853 000146F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27854 000146FC 50                      	push rax
 27855 000146FD 488B4520                	mov rax, PARAM(0)	; param i
 27856 00014701 50                      	push rax
 27857 00014702 6A02                    	push 2	; arg count
 27858 00014704 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27859 0001470C 803805                  	cmp byte [rax], T_undefined
 27860 0001470F 0F84E0060000            	je L_error_fvar_undefined
 27861 00014715 803804                  	cmp byte [rax], T_closure
 27862 00014718 0F855B070000            	jne L_error_non_closure
 27863 0001471E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27864 00014721 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27865 00014724 483D[02000000]          	cmp rax, sob_boolean_false
 27866 0001472A 0F84A9000000            	je .L_if_else_0085
 27867                                  	; preparing a non-tail-call
 27868                                  	; preparing a non-tail-call
 27869 00014730 488B4520                	mov rax, PARAM(0)	; param i
 27870 00014734 50                      	push rax
 27871 00014735 6A01                    	push 1	; arg count
 27872 00014737 488B4510                	mov rax, ENV
 27873 0001473B 488B4010                	mov rax, qword [rax + 8 * 2]
 27874 0001473F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27875 00014743 803804                  	cmp byte [rax], T_closure
 27876 00014746 0F852D070000            	jne L_error_non_closure
 27877 0001474C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27878 0001474F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27879 00014752 50                      	push rax
 27880 00014753 488B4520                	mov rax, PARAM(0)	; param i
 27881 00014757 50                      	push rax
 27882 00014758 488B4510                	mov rax, ENV
 27883 0001475C 488B4008                	mov rax, qword [rax + 8 * 1]
 27884 00014760 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27885 00014763 50                      	push rax
 27886 00014764 6A03                    	push 3	; arg count
 27887 00014766 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27888 0001476E 803805                  	cmp byte [rax], T_undefined
 27889 00014771 0F847E060000            	je L_error_fvar_undefined
 27890 00014777 803804                  	cmp byte [rax], T_closure
 27891 0001477A 0F85F9060000            	jne L_error_non_closure
 27892 00014780 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27893 00014783 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27894                                  
 27895                                  	; preparing a non-tail-call
 27896                                  	; preparing a non-tail-call
 27897 00014786 48B8-                   	mov rax, L_constants + 2270
 27897 00014788 [DE08000000000000] 
 27898 00014790 50                      	push rax
 27899 00014791 488B4520                	mov rax, PARAM(0)	; param i
 27900 00014795 50                      	push rax
 27901 00014796 6A02                    	push 2	; arg count
 27902 00014798 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27903 000147A0 803805                  	cmp byte [rax], T_undefined
 27904 000147A3 0F844C060000            	je L_error_fvar_undefined
 27905 000147A9 803804                  	cmp byte [rax], T_closure
 27906 000147AC 0F85C7060000            	jne L_error_non_closure
 27907 000147B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27908 000147B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27909 000147B8 50                      	push rax
 27910 000147B9 6A01                    	push 1	; arg count
 27911 000147BB 488B4510                	mov rax, ENV
 27912 000147BF 488B00                  	mov rax, qword [rax + 8 * 0]
 27913 000147C2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27914 000147C5 488B00                  	mov rax, qword [rax]
 27915 000147C8 803804                  	cmp byte [rax], T_closure
 27916 000147CB 0F85A8060000            	jne L_error_non_closure
 27917 000147D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27918 000147D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27919 000147D7 EB0B                    	jmp .L_if_end_0085
 27920                                  .L_if_else_0085:
 27921 000147D9 488B4510                	mov rax, ENV
 27922 000147DD 488B4008                	mov rax, qword [rax + 8 * 1]
 27923 000147E1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27924                                  .L_if_end_0085:
 27925 000147E4 C9                      	leave
 27926 000147E5 C21800                  	ret AND_KILL_FRAME(1)
 27927                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 27928 000147E8 50                      	push rax
 27929 000147E9 488B4520                	mov rax, PARAM(0)	; param run
 27930 000147ED 8F00                    	pop qword [rax]
 27931 000147EF 48B8-                   	mov rax, sob_void
 27931 000147F1 [0000000000000000] 
 27932                                  
 27933                                  	; preparing a non-tail-call
 27934 000147F9 48B8-                   	mov rax, L_constants + 2135
 27934 000147FB [5708000000000000] 
 27935 00014803 50                      	push rax
 27936 00014804 6A01                    	push 1	; arg count
 27937 00014806 488B4520                	mov rax, PARAM(0)	; param run
 27938 0001480A 488B00                  	mov rax, qword [rax]
 27939 0001480D 803804                  	cmp byte [rax], T_closure
 27940 00014810 0F8563060000            	jne L_error_non_closure
 27941 00014816 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27942 00014819 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27943 0001481C C9                      	leave
 27944 0001481D C21800                  	ret AND_KILL_FRAME(1)
 27945                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 27946 00014820 803804                  	cmp byte [rax], T_closure
 27947 00014823 0F8550060000            	jne L_error_non_closure
 27948 00014829 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27949                                  
 27950                                  	; Reclaiming the current stack frame
 27951 0001482C FF7508                  	push qword [rbp + 8]
 27952 0001482F FF7500                  	push qword [rbp]
 27953 00014832 41BA05000000            	mov r10, 1 + 4
 27954 00014838 4C8B4518                	mov r8, COUNT
 27955 0001483C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27956 00014841 4C8D4DF8                	lea r9, [rbp - 8]
 27957                                  .L_tc_recycle_frame_loop_00e0:
 27958 00014845 4983FA00                	cmp r10, 0
 27959 00014849 7413                    	je .L_tc_recycle_frame_done_00e0
 27960 0001484B 4D8B19                  	mov r11, qword [r9]
 27961 0001484E 4D8918                  	mov qword [r8], r11
 27962 00014851 49FFCA                  	dec r10
 27963 00014854 4983E808                	sub r8, 8
 27964 00014858 4983E908                	sub r9, 8
 27965 0001485C EBE7                    	jmp .L_tc_recycle_frame_loop_00e0
 27966                                  .L_tc_recycle_frame_done_00e0:
 27967 0001485E 498D6008                	lea rsp, [r8 + 8]
 27968 00014862 5D                      	pop rbp
 27969 00014863 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27970 00014866 C9                      	leave
 27971 00014867 C21800                  	ret AND_KILL_FRAME(1)
 27972                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 27973 0001486A 803804                  	cmp byte [rax], T_closure
 27974 0001486D 0F8506060000            	jne L_error_non_closure
 27975 00014873 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27976                                  
 27977                                  	; Reclaiming the current stack frame
 27978 00014876 FF7508                  	push qword [rbp + 8]
 27979 00014879 FF7500                  	push qword [rbp]
 27980 0001487C 41BA05000000            	mov r10, 1 + 4
 27981 00014882 4C8B4518                	mov r8, COUNT
 27982 00014886 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27983 0001488B 4C8D4DF8                	lea r9, [rbp - 8]
 27984                                  .L_tc_recycle_frame_loop_00e1:
 27985 0001488F 4983FA00                	cmp r10, 0
 27986 00014893 7413                    	je .L_tc_recycle_frame_done_00e1
 27987 00014895 4D8B19                  	mov r11, qword [r9]
 27988 00014898 4D8918                  	mov qword [r8], r11
 27989 0001489B 49FFCA                  	dec r10
 27990 0001489E 4983E808                	sub r8, 8
 27991 000148A2 4983E908                	sub r9, 8
 27992 000148A6 EBE7                    	jmp .L_tc_recycle_frame_loop_00e1
 27993                                  .L_tc_recycle_frame_done_00e1:
 27994 000148A8 498D6008                	lea rsp, [r8 + 8]
 27995 000148AC 5D                      	pop rbp
 27996 000148AD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27997 000148B0 C9                      	leave
 27998 000148B1 C22000                  	ret AND_KILL_FRAME(2)
 27999                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 28000 000148B4 48890425[8B140000]      	mov qword [free_var_102], rax
 28001 000148BC 48B8-                   	mov rax, sob_void
 28001 000148BE [0000000000000000] 
 28002                                  
 28003 000148C6 4889C7                  	mov rdi, rax
 28004 000148C9 E8A9080000              	call print_sexpr_if_not_void
 28005 000148CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28006 000148D3 E84A060000              	call malloc
 28007 000148D8 50                      	push rax
 28008 000148D9 BF00000000              	mov rdi, 8 * 0	; new rib
 28009 000148DE E83F060000              	call malloc
 28010 000148E3 50                      	push rax
 28011 000148E4 BF08000000              	mov rdi, 8 * 1	; extended env
 28012 000148E9 E834060000              	call malloc
 28013 000148EE 488B7D10                	mov rdi, ENV
 28014 000148F2 BE00000000              	mov rsi, 0
 28015 000148F7 BA01000000              	mov rdx, 1
 28016                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 28017 000148FC 4883FE00                	cmp rsi, 0
 28018 00014900 7410                    	je .L_lambda_simple_env_end_00b8
 28019 00014902 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28020 00014906 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28021 0001490A 48FFC6                  	inc rsi
 28022 0001490D 48FFC2                  	inc rdx
 28023 00014910 EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 28024                                  .L_lambda_simple_env_end_00b8:
 28025 00014912 5B                      	pop rbx
 28026 00014913 BE00000000              	mov rsi, 0
 28027                                  .L_lambda_simple_params_loop_00b8:	; copy params
 28028 00014918 4883FE00                	cmp rsi, 0
 28029 0001491C 740E                    	je .L_lambda_simple_params_end_00b8
 28030 0001491E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28031 00014923 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28032 00014927 48FFC6                  	inc rsi
 28033 0001492A EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 28034                                  .L_lambda_simple_params_end_00b8:
 28035 0001492C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28036 0001492F 4889C3                  	mov rbx, rax
 28037 00014932 58                      	pop rax
 28038 00014933 C60004                  	mov byte [rax], T_closure
 28039 00014936 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28040 0001493A 48C74009[47490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 28041 00014942 E95B020000              	jmp .L_lambda_simple_end_00b8
 28042                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 28043 00014947 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28044 0001494D 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 28045 0001494F FF742410                	push qword [rsp + 8 * 2]
 28046 00014953 6A03                    	push 3
 28047 00014955 E981050000              	jmp L_error_incorrect_arity_simple
 28048                                  .L_lambda_simple_arity_check_ok_00b8:
 28049 0001495A C8000000                	enter 0, 0
 28050                                  	; preparing a non-tail-call
 28051 0001495E 488B4530                	mov rax, PARAM(2)	; param n
 28052 00014962 50                      	push rax
 28053 00014963 6A01                    	push 1	; arg count
 28054 00014965 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 28055 0001496D 803805                  	cmp byte [rax], T_undefined
 28056 00014970 0F847F040000            	je L_error_fvar_undefined
 28057 00014976 803804                  	cmp byte [rax], T_closure
 28058 00014979 0F85FA040000            	jne L_error_non_closure
 28059 0001497F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28060 00014982 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28061 00014985 483D[02000000]          	cmp rax, sob_boolean_false
 28062 0001498B 740F                    	je .L_if_else_0088
 28063 0001498D 48B8-                   	mov rax, L_constants + 3485
 28063 0001498F [9D0D000000000000] 
 28064 00014997 E902020000              	jmp .L_if_end_0088
 28065                                  .L_if_else_0088:
 28066                                  	; preparing a non-tail-call
 28067 0001499C 488B4528                	mov rax, PARAM(1)	; param b
 28068 000149A0 50                      	push rax
 28069 000149A1 488B4520                	mov rax, PARAM(0)	; param a
 28070 000149A5 50                      	push rax
 28071 000149A6 6A02                    	push 2	; arg count
 28072 000149A8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28073 000149B0 803805                  	cmp byte [rax], T_undefined
 28074 000149B3 0F843C040000            	je L_error_fvar_undefined
 28075 000149B9 803804                  	cmp byte [rax], T_closure
 28076 000149BC 0F85B7040000            	jne L_error_non_closure
 28077 000149C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28078 000149C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28079 000149C8 483D[02000000]          	cmp rax, sob_boolean_false
 28080 000149CE 0F84C3000000            	je .L_if_else_0087
 28081                                  	; Initiating tail-call optimization
 28082                                  	; preparing a non-tail-call
 28083 000149D4 488B4530                	mov rax, PARAM(2)	; param n
 28084 000149D8 50                      	push rax
 28085                                  	; preparing a non-tail-call
 28086 000149D9 488B4520                	mov rax, PARAM(0)	; param a
 28087 000149DD 50                      	push rax
 28088 000149DE 488B4528                	mov rax, PARAM(1)	; param b
 28089 000149E2 50                      	push rax
 28090 000149E3 6A02                    	push 2	; arg count
 28091 000149E5 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28092 000149ED 803805                  	cmp byte [rax], T_undefined
 28093 000149F0 0F84FF030000            	je L_error_fvar_undefined
 28094 000149F6 803804                  	cmp byte [rax], T_closure
 28095 000149F9 0F857A040000            	jne L_error_non_closure
 28096 000149FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 28097 00014A02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28098 00014A05 50                      	push rax
 28099 00014A06 488B4520                	mov rax, PARAM(0)	; param a
 28100 00014A0A 50                      	push rax
 28101 00014A0B 6A03                    	push 3	; arg count
 28102 00014A0D 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28103 00014A15 803805                  	cmp byte [rax], T_undefined
 28104 00014A18 0F84D7030000            	je L_error_fvar_undefined
 28105 00014A1E 803804                  	cmp byte [rax], T_closure
 28106 00014A21 0F8552040000            	jne L_error_non_closure
 28107 00014A27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28108 00014A2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28109 00014A2D 50                      	push rax
 28110 00014A2E 48B8-                   	mov rax, L_constants + 3485
 28110 00014A30 [9D0D000000000000] 
 28111 00014A38 50                      	push rax
 28112 00014A39 6A02                    	push 2	; Number of arguments
 28113 00014A3B 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28114 00014A43 803805                  	cmp byte [rax], T_undefined
 28115 00014A46 0F84A9030000            	je L_error_fvar_undefined
 28116 00014A4C 803804                  	cmp byte [rax], T_closure
 28117 00014A4F 0F8524040000            	jne L_error_non_closure
 28118 00014A55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28119                                  
 28120                                  	; Reclaiming the current stack frame
 28121 00014A58 FF7508                  	push qword [rbp + 8]
 28122 00014A5B FF7500                  	push qword [rbp]
 28123 00014A5E 41BA06000000            	mov r10, 2 + 4
 28124 00014A64 4C8B4518                	mov r8, COUNT
 28125 00014A68 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 28126 00014A6D 4C8D4DF8                	lea r9, [rbp - 8]
 28127                                  .L_tc_recycle_frame_loop_00e2:
 28128 00014A71 4983FA00                	cmp r10, 0
 28129 00014A75 7413                    	je .L_tc_recycle_frame_done_00e2
 28130 00014A77 4D8B19                  	mov r11, qword [r9]
 28131 00014A7A 4D8918                  	mov qword [r8], r11
 28132 00014A7D 49FFCA                  	dec r10
 28133 00014A80 4983E808                	sub r8, 8
 28134 00014A84 4983E908                	sub r9, 8
 28135 00014A88 EBE7                    	jmp .L_tc_recycle_frame_loop_00e2
 28136                                  .L_tc_recycle_frame_done_00e2:
 28137 00014A8A 498D6008                	lea rsp, [r8 + 8]
 28138 00014A8E 5D                      	pop rbp
 28139 00014A8F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28140 00014A92 E907010000              	jmp .L_if_end_0087
 28141                                  .L_if_else_0087:
 28142                                  	; preparing a non-tail-call
 28143 00014A97 488B4528                	mov rax, PARAM(1)	; param b
 28144 00014A9B 50                      	push rax
 28145 00014A9C 488B4520                	mov rax, PARAM(0)	; param a
 28146 00014AA0 50                      	push rax
 28147 00014AA1 6A02                    	push 2	; arg count
 28148 00014AA3 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 28149 00014AAB 803805                  	cmp byte [rax], T_undefined
 28150 00014AAE 0F8441030000            	je L_error_fvar_undefined
 28151 00014AB4 803804                  	cmp byte [rax], T_closure
 28152 00014AB7 0F85BC030000            	jne L_error_non_closure
 28153 00014ABD FF7001                  	push SOB_CLOSURE_ENV(rax)
 28154 00014AC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28155 00014AC3 483D[02000000]          	cmp rax, sob_boolean_false
 28156 00014AC9 740F                    	je .L_if_else_0086
 28157 00014ACB 48B8-                   	mov rax, L_constants + 3485
 28157 00014ACD [9D0D000000000000] 
 28158 00014AD5 E9C4000000              	jmp .L_if_end_0086
 28159                                  .L_if_else_0086:
 28160                                  	; Initiating tail-call optimization
 28161                                  	; preparing a non-tail-call
 28162                                  	; preparing a non-tail-call
 28163 00014ADA 48B8-                   	mov rax, L_constants + 2270
 28163 00014ADC [DE08000000000000] 
 28164 00014AE4 50                      	push rax
 28165 00014AE5 488B4530                	mov rax, PARAM(2)	; param n
 28166 00014AE9 50                      	push rax
 28167 00014AEA 6A02                    	push 2	; arg count
 28168 00014AEC 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 28169 00014AF4 803805                  	cmp byte [rax], T_undefined
 28170 00014AF7 0F84F8020000            	je L_error_fvar_undefined
 28171 00014AFD 803804                  	cmp byte [rax], T_closure
 28172 00014B00 0F8573030000            	jne L_error_non_closure
 28173 00014B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28174 00014B09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28175 00014B0C 50                      	push rax
 28176 00014B0D 488B4520                	mov rax, PARAM(0)	; param a
 28177 00014B11 50                      	push rax
 28178 00014B12 488B4528                	mov rax, PARAM(1)	; param b
 28179 00014B16 50                      	push rax
 28180 00014B17 6A03                    	push 3	; arg count
 28181 00014B19 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28182 00014B21 803805                  	cmp byte [rax], T_undefined
 28183 00014B24 0F84CB020000            	je L_error_fvar_undefined
 28184 00014B2A 803804                  	cmp byte [rax], T_closure
 28185 00014B2D 0F8546030000            	jne L_error_non_closure
 28186 00014B33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28187 00014B36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28188 00014B39 50                      	push rax
 28189 00014B3A 48B8-                   	mov rax, L_constants + 3485
 28189 00014B3C [9D0D000000000000] 
 28190 00014B44 50                      	push rax
 28191 00014B45 6A02                    	push 2	; Number of arguments
 28192 00014B47 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28193 00014B4F 803805                  	cmp byte [rax], T_undefined
 28194 00014B52 0F849D020000            	je L_error_fvar_undefined
 28195 00014B58 803804                  	cmp byte [rax], T_closure
 28196 00014B5B 0F8518030000            	jne L_error_non_closure
 28197 00014B61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28198                                  
 28199                                  	; Reclaiming the current stack frame
 28200 00014B64 FF7508                  	push qword [rbp + 8]
 28201 00014B67 FF7500                  	push qword [rbp]
 28202 00014B6A 41BA06000000            	mov r10, 2 + 4
 28203 00014B70 4C8B4518                	mov r8, COUNT
 28204 00014B74 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 28205 00014B79 4C8D4DF8                	lea r9, [rbp - 8]
 28206                                  .L_tc_recycle_frame_loop_00e3:
 28207 00014B7D 4983FA00                	cmp r10, 0
 28208 00014B81 7413                    	je .L_tc_recycle_frame_done_00e3
 28209 00014B83 4D8B19                  	mov r11, qword [r9]
 28210 00014B86 4D8918                  	mov qword [r8], r11
 28211 00014B89 49FFCA                  	dec r10
 28212 00014B8C 4983E808                	sub r8, 8
 28213 00014B90 4983E908                	sub r9, 8
 28214 00014B94 EBE7                    	jmp .L_tc_recycle_frame_loop_00e3
 28215                                  .L_tc_recycle_frame_done_00e3:
 28216 00014B96 498D6008                	lea rsp, [r8 + 8]
 28217 00014B9A 5D                      	pop rbp
 28218 00014B9B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28219                                  .L_if_end_0086:
 28220                                  .L_if_end_0087:
 28221                                  .L_if_end_0088:
 28222 00014B9E C9                      	leave
 28223 00014B9F C22800                  	ret AND_KILL_FRAME(3)
 28224                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28225 00014BA2 48890425[36140000]      	mov qword [free_var_97], rax
 28226 00014BAA 48B8-                   	mov rax, sob_void
 28226 00014BAC [0000000000000000] 
 28227                                  
 28228 00014BB4 4889C7                  	mov rdi, rax
 28229 00014BB7 E8BB050000              	call print_sexpr_if_not_void
 28230 00014BBC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28231 00014BC1 E85C030000              	call malloc
 28232 00014BC6 50                      	push rax
 28233 00014BC7 BF00000000              	mov rdi, 8 * 0	; new rib
 28234 00014BCC E851030000              	call malloc
 28235 00014BD1 50                      	push rax
 28236 00014BD2 BF08000000              	mov rdi, 8 * 1	; extended env
 28237 00014BD7 E846030000              	call malloc
 28238 00014BDC 488B7D10                	mov rdi, ENV
 28239 00014BE0 BE00000000              	mov rsi, 0
 28240 00014BE5 BA01000000              	mov rdx, 1
 28241                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28242 00014BEA 4883FE00                	cmp rsi, 0
 28243 00014BEE 7410                    	je .L_lambda_simple_env_end_00b9
 28244 00014BF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28245 00014BF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28246 00014BF8 48FFC6                  	inc rsi
 28247 00014BFB 48FFC2                  	inc rdx
 28248 00014BFE EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28249                                  .L_lambda_simple_env_end_00b9:
 28250 00014C00 5B                      	pop rbx
 28251 00014C01 BE00000000              	mov rsi, 0
 28252                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28253 00014C06 4883FE00                	cmp rsi, 0
 28254 00014C0A 740E                    	je .L_lambda_simple_params_end_00b9
 28255 00014C0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28256 00014C11 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28257 00014C15 48FFC6                  	inc rsi
 28258 00014C18 EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28259                                  .L_lambda_simple_params_end_00b9:
 28260 00014C1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28261 00014C1D 4889C3                  	mov rbx, rax
 28262 00014C20 58                      	pop rax
 28263 00014C21 C60004                  	mov byte [rax], T_closure
 28264 00014C24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28265 00014C28 48C74009[354C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28266 00014C30 E97F000000              	jmp .L_lambda_simple_end_00b9
 28267                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28268 00014C35 48837C241000            	cmp qword [rsp + 8 * 2], 0
 28269 00014C3B 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28270 00014C3D FF742410                	push qword [rsp + 8 * 2]
 28271 00014C41 6A00                    	push 0
 28272 00014C43 E993020000              	jmp L_error_incorrect_arity_simple
 28273                                  .L_lambda_simple_arity_check_ok_00b9:
 28274 00014C48 C8000000                	enter 0, 0
 28275                                  	; Initiating tail-call optimization
 28276 00014C4C 48B8-                   	mov rax, L_constants + 3510
 28276 00014C4E [B60D000000000000] 
 28277 00014C56 50                      	push rax
 28278 00014C57 6A01                    	push 1	; Number of arguments
 28279 00014C59 488B0425[BB170000]      	mov rax, qword [free_var_150]	; free var write-char
 28280 00014C61 803805                  	cmp byte [rax], T_undefined
 28281 00014C64 0F848B010000            	je L_error_fvar_undefined
 28282 00014C6A 803804                  	cmp byte [rax], T_closure
 28283 00014C6D 0F8506020000            	jne L_error_non_closure
 28284 00014C73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28285                                  
 28286                                  	; Reclaiming the current stack frame
 28287 00014C76 FF7508                  	push qword [rbp + 8]
 28288 00014C79 FF7500                  	push qword [rbp]
 28289 00014C7C 41BA05000000            	mov r10, 1 + 4
 28290 00014C82 4C8B4518                	mov r8, COUNT
 28291 00014C86 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 28292 00014C8B 4C8D4DF8                	lea r9, [rbp - 8]
 28293                                  .L_tc_recycle_frame_loop_00e4:
 28294 00014C8F 4983FA00                	cmp r10, 0
 28295 00014C93 7413                    	je .L_tc_recycle_frame_done_00e4
 28296 00014C95 4D8B19                  	mov r11, qword [r9]
 28297 00014C98 4D8918                  	mov qword [r8], r11
 28298 00014C9B 49FFCA                  	dec r10
 28299 00014C9E 4983E808                	sub r8, 8
 28300 00014CA2 4983E908                	sub r9, 8
 28301 00014CA6 EBE7                    	jmp .L_tc_recycle_frame_loop_00e4
 28302                                  .L_tc_recycle_frame_done_00e4:
 28303 00014CA8 498D6008                	lea rsp, [r8 + 8]
 28304 00014CAC 5D                      	pop rbp
 28305 00014CAD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28306 00014CB0 C9                      	leave
 28307 00014CB1 C21000                  	ret AND_KILL_FRAME(0)
 28308                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28309 00014CB4 48890425[BE140000]      	mov qword [free_var_105], rax
 28310 00014CBC 48B8-                   	mov rax, sob_void
 28310 00014CBE [0000000000000000] 
 28311                                  
 28312 00014CC6 4889C7                  	mov rdi, rax
 28313 00014CC9 E8A9040000              	call print_sexpr_if_not_void
 28314 00014CCE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28315 00014CD3 E84A020000              	call malloc
 28316 00014CD8 50                      	push rax
 28317 00014CD9 BF00000000              	mov rdi, 8 * 0	; new rib
 28318 00014CDE E83F020000              	call malloc
 28319 00014CE3 50                      	push rax
 28320 00014CE4 BF08000000              	mov rdi, 8 * 1	; extended env
 28321 00014CE9 E834020000              	call malloc
 28322 00014CEE 488B7D10                	mov rdi, ENV
 28323 00014CF2 BE00000000              	mov rsi, 0
 28324 00014CF7 BA01000000              	mov rdx, 1
 28325                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28326 00014CFC 4883FE00                	cmp rsi, 0
 28327 00014D00 7410                    	je .L_lambda_simple_env_end_00ba
 28328 00014D02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28329 00014D06 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28330 00014D0A 48FFC6                  	inc rsi
 28331 00014D0D 48FFC2                  	inc rdx
 28332 00014D10 EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 28333                                  .L_lambda_simple_env_end_00ba:
 28334 00014D12 5B                      	pop rbx
 28335 00014D13 BE00000000              	mov rsi, 0
 28336                                  .L_lambda_simple_params_loop_00ba:	; copy params
 28337 00014D18 4883FE00                	cmp rsi, 0
 28338 00014D1C 740E                    	je .L_lambda_simple_params_end_00ba
 28339 00014D1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28340 00014D23 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28341 00014D27 48FFC6                  	inc rsi
 28342 00014D2A EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 28343                                  .L_lambda_simple_params_end_00ba:
 28344 00014D2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28345 00014D2F 4889C3                  	mov rbx, rax
 28346 00014D32 58                      	pop rax
 28347 00014D33 C60004                  	mov byte [rax], T_closure
 28348 00014D36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28349 00014D3A 48C74009[444D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 28350 00014D42 EB25                    	jmp .L_lambda_simple_end_00ba
 28351                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 28352 00014D44 48837C241000            	cmp qword [rsp + 8 * 2], 0
 28353 00014D4A 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 28354 00014D4C FF742410                	push qword [rsp + 8 * 2]
 28355 00014D50 6A00                    	push 0
 28356 00014D52 E984010000              	jmp L_error_incorrect_arity_simple
 28357                                  .L_lambda_simple_arity_check_ok_00ba:
 28358 00014D57 C8000000                	enter 0, 0
 28359 00014D5B 48B8-                   	mov rax, L_constants + 0
 28359 00014D5D [0000000000000000] 
 28360 00014D65 C9                      	leave
 28361 00014D66 C21000                  	ret AND_KILL_FRAME(0)
 28362                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 28363 00014D69 48890425[AA170000]      	mov qword [free_var_149], rax
 28364 00014D71 48B8-                   	mov rax, sob_void
 28364 00014D73 [0000000000000000] 
 28365                                  
 28366 00014D7B 4889C7                  	mov rdi, rax
 28367 00014D7E E8F4030000              	call print_sexpr_if_not_void
 28368                                  	; preparing a non-tail-call
 28369 00014D83 48B8-                   	mov rax, L_constants + 3190
 28369 00014D85 [760C000000000000] 
 28370 00014D8D 50                      	push rax
 28371 00014D8E 48B8-                   	mov rax, L_constants + 2270
 28371 00014D90 [DE08000000000000] 
 28372 00014D98 50                      	push rax
 28373 00014D99 6A02                    	push 2	; arg count
 28374 00014D9B 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28375 00014DA3 803805                  	cmp byte [rax], T_undefined
 28376 00014DA6 744D                    	je L_error_fvar_undefined
 28377 00014DA8 803804                  	cmp byte [rax], T_closure
 28378 00014DAB 0F85C8000000            	jne L_error_non_closure
 28379 00014DB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28380 00014DB4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28381                                  Lend:
 28382 00014DB7 4889C7                  	mov rdi, rax
 28383 00014DBA E8B8030000              	call print_sexpr_if_not_void
 28384 00014DBF 48BF-                   mov rdi, fmt_memory_usage
 28384 00014DC1 [7518000000000000] 
 28385 00014DC9 488B3425[FB180000]              mov rsi, qword [top_of_memory]
 28386 00014DD1 4881EE[00000000]                sub rsi, memory
 28387 00014DD8 B800000000                      mov rax, 0
 28388                                          ENTER
    44 00014DDD C8000000            <1>  enter 0, 0
    45 00014DE1 4883E4F0            <1>  and rsp, ~15
 28389 00014DE5 E8(00000000)                    call printf
 28390                                          LEAVE
    49 00014DEA C9                  <1>  leave
 28391 00014DEB B800000000                      mov rax, 0
 28392 00014DF0 E8(00000000)                    call exit
 28393                                  
 28394                                  L_error_fvar_undefined:
 28395 00014DF5 50                              push rax
 28396 00014DF6 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 28397 00014DFE 48BE-                           mov rsi, fmt_undefined_free_var_1
 28397 00014E00 [DD17000000000000] 
 28398 00014E08 B800000000                      mov rax, 0
 28399                                          ENTER
    44 00014E0D C8000000            <1>  enter 0, 0
    45 00014E11 4883E4F0            <1>  and rsp, ~15
 28400 00014E15 E8(00000000)                    call fprintf
 28401                                          LEAVE
    49 00014E1A C9                  <1>  leave
 28402 00014E1B 58                              pop rax
 28403 00014E1C 488B4001                        mov rax, qword [rax + 1] ; string
 28404 00014E20 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 28405 00014E24 BE01000000                      mov rsi, 1               ; sizeof(char)
 28406 00014E29 488B5001                        mov rdx, qword [rax + 1] ; string-length
 28407 00014E2D 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 28408 00014E35 B800000000                      mov rax, 0
 28409                                          ENTER
    44 00014E3A C8000000            <1>  enter 0, 0
    45 00014E3E 4883E4F0            <1>  and rsp, ~15
 28410 00014E42 E8(00000000)                    call fwrite
 28411                                          LEAVE
    49 00014E47 C9                  <1>  leave
 28412 00014E48 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 28413 00014E50 48BE-                           mov rsi, fmt_undefined_free_var_2
 28413 00014E52 [F417000000000000] 
 28414 00014E5A B800000000                      mov rax, 0
 28415                                          ENTER
    44 00014E5F C8000000            <1>  enter 0, 0
    45 00014E63 4883E4F0            <1>  and rsp, ~15
 28416 00014E67 E8(00000000)                    call fprintf
 28417                                          LEAVE
    49 00014E6C C9                  <1>  leave
 28418 00014E6D 48C7C0F6FFFFFF                  mov rax, -10
 28419 00014E74 E8(00000000)                    call exit
 28420                                  
 28421                                  L_error_non_closure:
 28422 00014E79 488B3C25[00000000]              mov rdi, qword [stderr]
 28423 00014E81 48BE-                           mov rsi, fmt_non_closure
 28423 00014E83 [AB18000000000000] 
 28424 00014E8B B800000000                      mov rax, 0
 28425                                          ENTER
    44 00014E90 C8000000            <1>  enter 0, 0
    45 00014E94 4883E4F0            <1>  and rsp, ~15
 28426 00014E98 E8(00000000)                    call fprintf
 28427                                          LEAVE
    49 00014E9D C9                  <1>  leave
 28428 00014E9E 48C7C0FEFFFFFF                  mov rax, -2
 28429 00014EA5 E8(00000000)                    call exit
 28430                                  
 28431                                  L_error_improper_list:
 28432 00014EAA 488B3C25[00000000]      	mov rdi, qword [stderr]
 28433 00014EB2 48BE-                   	mov rsi, fmt_error_improper_list
 28433 00014EB4 [D318000000000000] 
 28434 00014EBC B800000000              	mov rax, 0
 28435                                          ENTER
    44 00014EC1 C8000000            <1>  enter 0, 0
    45 00014EC5 4883E4F0            <1>  and rsp, ~15
 28436 00014EC9 E8(00000000)            	call fprintf
 28437                                          LEAVE
    49 00014ECE C9                  <1>  leave
 28438 00014ECF 48C7C0F9FFFFFF          	mov rax, -7
 28439 00014ED6 E8(00000000)            	call exit
 28440                                  
 28441                                  L_error_incorrect_arity_simple:
 28442 00014EDB 488B3C25[00000000]              mov rdi, qword [stderr]
 28443 00014EE3 48BE-                           mov rsi, fmt_incorrect_arity_simple
 28443 00014EE5 [1618000000000000] 
 28444 00014EED EB12                            jmp L_error_incorrect_arity_common
 28445                                  L_error_incorrect_arity_opt:
 28446 00014EEF 488B3C25[00000000]              mov rdi, qword [stderr]
 28447 00014EF7 48BE-                           mov rsi, fmt_incorrect_arity_opt
 28447 00014EF9 [4118000000000000] 
 28448                                  L_error_incorrect_arity_common:
 28449 00014F01 5A                              pop rdx
 28450 00014F02 59                              pop rcx
 28451 00014F03 B800000000                      mov rax, 0
 28452                                          ENTER
    44 00014F08 C8000000            <1>  enter 0, 0
    45 00014F0C 4883E4F0            <1>  and rsp, ~15
 28453 00014F10 E8(00000000)                    call fprintf
 28454                                          LEAVE
    49 00014F15 C9                  <1>  leave
 28455 00014F16 48C7C0FAFFFFFF                  mov rax, -6
 28456 00014F1D E8(00000000)                    call exit
 28457                                  
 28458                                  section .data
 28459                                  fmt_undefined_free_var_1:
 28460 000017DD 212121205468652066-             db `!!! The free variable \0`
 28460 000017E6 726565207661726961-
 28460 000017EF 626C652000         
 28461                                  fmt_undefined_free_var_2:
 28462 000017F4 207761732075736564-             db ` was used before it was defined.\n\0`
 28462 000017FD 206265666F72652069-
 28462 00001806 742077617320646566-
 28462 0000180F 696E65642E0A00     
 28463                                  fmt_incorrect_arity_simple:
 28464 00001816 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 28464 0000181F 74656420256C642061-
 28464 00001828 7267756D656E74732C-
 28464 00001831 206275742067697665-
 28464 0000183A 6E20256C640A00     
 28465                                  fmt_incorrect_arity_opt:
 28466 00001841 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 28466 0000184A 746564206174206C65-
 28466 00001853 61737420256C642061-
 28466 0000185C 7267756D656E74732C-
 28466 00001865 206275742067697665-
 28466 0000186E 6E20256C640A00     
 28467                                  fmt_memory_usage:
 28468 00001875 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 28468 0000187E 20256C642062797465-
 28468 00001887 73206F662064796E61-
 28468 00001890 6D6963616C6C792D61-
 28468 00001899 6C6C6F636174656420-
 28468 000018A2 6D656D6F72790A0A00 
 28469                                  fmt_non_closure:
 28470 000018AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 28470 000018B4 7074696E6720746F20-
 28470 000018BD 6170706C792061206E-
 28470 000018C6 6F6E2D636C6F737572-
 28470 000018CF 65210A00           
 28471                                  fmt_error_improper_list:
 28472 000018D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 28472 000018DC 7267756D656E742069-
 28472 000018E5 73206E6F7420612070-
 28472 000018EE 726F706572206C6973-
 28472 000018F7 74210A00           
 28473                                  
 28474                                  section .bss
 28475                                  memory:
 28476 00000000 <res 40000000h>         	resb gbytes(1)
 28477                                  
 28478                                  section .data
 28479                                  top_of_memory:
 28480 000018FB [0000000000000000]              dq memory
 28481                                  
 28482                                  section .text
 28483                                  malloc:
 28484 00014F22 488B0425[FB180000]              mov rax, qword [top_of_memory]
 28485 00014F2A 48013C25[FB180000]              add qword [top_of_memory], rdi
 28486 00014F32 C3                              ret
 28487                                  
 28488                                  L_code_ptr_return:
 28489 00014F33 48837C241002            	cmp qword [rsp + 8*2], 2
 28490 00014F39 0F85EF1C0000            	jne L_error_arg_count_2
 28491 00014F3F 488B4C2418              	mov rcx, qword [rsp + 8*3]
 28492                                  	assert_integer(rcx)
    53 00014F44 803911              <1>  cmp byte [%1], %2
    54 00014F47 0F85801D0000        <1>  jne L_error_incorrect_type
 28493 00014F4D 488B4901                	mov rcx, qword [rcx + 1]
 28494 00014F51 4883F900                	cmp rcx, 0
 28495 00014F55 0F8C071C0000            	jl L_error_integer_range
 28496 00014F5B 488B442420              	mov rax, qword [rsp + 8*4]
 28497                                  .L0:
 28498 00014F60 4883F900                        cmp rcx, 0
 28499 00014F64 7409                            je .L1
 28500 00014F66 488B6D00                	mov rbp, qword [rbp]
 28501 00014F6A 48FFC9                  	dec rcx
 28502 00014F6D 7FF1                    	jg .L0
 28503                                  .L1:
 28504 00014F6F 4889EC                  	mov rsp, rbp
 28505 00014F72 5D                      	pop rbp
 28506 00014F73 5B                              pop rbx
 28507 00014F74 488B4C2408                      mov rcx, qword [rsp + 8*1]
 28508 00014F79 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 28509 00014F7E FFE3                    	jmp rbx
 28510                                  
 28511                                  L_code_ptr_make_list:
 28512 00014F80 C8000000                	enter 0, 0
 28513 00014F84 48837D1801                      cmp COUNT, 1
 28514 00014F89 740C                            je .L0
 28515 00014F8B 48837D1802                      cmp COUNT, 2
 28516 00014F90 7411                            je .L1
 28517 00014F92 E9CC1C0000                      jmp L_error_arg_count_12
 28518                                  .L0:
 28519 00014F97 49B9-                           mov r9, sob_void
 28519 00014F99 [0000000000000000] 
 28520 00014FA1 EB04                            jmp .L2
 28521                                  .L1:
 28522 00014FA3 4C8B4D28                        mov r9, PARAM(1)
 28523                                  .L2:
 28524 00014FA7 488B4D20                        mov rcx, PARAM(0)
 28525                                          assert_integer(rcx)
    53 00014FAB 803911              <1>  cmp byte [%1], %2
    54 00014FAE 0F85191D0000        <1>  jne L_error_incorrect_type
 28526 00014FB4 488B4901                        mov rcx, qword [rcx + 1]
 28527 00014FB8 4883F900                        cmp rcx, 0
 28528 00014FBC 0F8CD11B0000                    jl L_error_arg_negative
 28529 00014FC2 49B8-                           mov r8, sob_nil
 28529 00014FC4 [0100000000000000] 
 28530                                  .L3:
 28531 00014FCC 4883F900                        cmp rcx, 0
 28532 00014FD0 7E1D                            jle .L4
 28533 00014FD2 BF11000000                      mov rdi, 1 + 8 + 8
 28534 00014FD7 E846FFFFFF                      call malloc
 28535 00014FDC C60021                          mov byte [rax], T_pair
 28536 00014FDF 4C894801                        mov qword [rax + 1], r9
 28537 00014FE3 4C894009                        mov qword [rax + 1 + 8], r8
 28538 00014FE7 4989C0                          mov r8, rax
 28539 00014FEA 48FFC9                          dec rcx
 28540 00014FED EBDD                            jmp .L3
 28541                                  .L4:
 28542 00014FEF 4C89C0                          mov rax, r8
 28543 00014FF2 48837D1802                      cmp COUNT, 2
 28544 00014FF7 7404                            je .L5
 28545 00014FF9 C9                              leave
 28546 00014FFA C21800                          ret AND_KILL_FRAME(1)
 28547                                  .L5:
 28548 00014FFD C9                      	leave
 28549 00014FFE C22000                  	ret AND_KILL_FRAME(2)
 28550                                  
 28551                                  L_code_ptr_is_primitive:
 28552 00015001 C8000000                	enter 0, 0
 28553 00015005 48837D1801              	cmp COUNT, 1
 28554 0001500A 0F85E91B0000            	jne L_error_arg_count_1
 28555 00015010 488B4520                	mov rax, PARAM(0)
 28556                                  	assert_closure(rax)
    53 00015014 803804              <1>  cmp byte [%1], %2
    54 00015017 0F85B01C0000        <1>  jne L_error_incorrect_type
 28557 0001501D 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 28558 00015022 750C                    	jne .L_false
 28559 00015024 48B8-                   	mov rax, sob_boolean_true
 28559 00015026 [0300000000000000] 
 28560 0001502E EB0A                    	jmp .L_end
 28561                                  .L_false:
 28562 00015030 48B8-                   	mov rax, sob_boolean_false
 28562 00015032 [0200000000000000] 
 28563                                  .L_end:
 28564 0001503A C9                      	leave
 28565 0001503B C21800                  	ret AND_KILL_FRAME(1)
 28566                                  
 28567                                  L_code_ptr_length:
 28568 0001503E C8000000                	enter 0, 0
 28569 00015042 48837D1801              	cmp COUNT, 1
 28570 00015047 0F85AC1B0000            	jne L_error_arg_count_1
 28571 0001504D 488B5D20                	mov rbx, PARAM(0)
 28572 00015051 BF00000000              	mov rdi, 0
 28573                                  .L:
 28574 00015056 803B01                  	cmp byte [rbx], T_nil
 28575 00015059 7412                    	je .L_end
 28576                                  	assert_pair(rbx)
    53 0001505B 803B21              <1>  cmp byte [%1], %2
    54 0001505E 0F85691C0000        <1>  jne L_error_incorrect_type
 28577 00015064 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 28578 00015068 48FFC7                  	inc rdi
 28579 0001506B EBE9                    	jmp .L
 28580                                  .L_end:
 28581 0001506D E8D61A0000              	call make_integer
 28582 00015072 C9                      	leave
 28583 00015073 C21800                  	ret AND_KILL_FRAME(1)
 28584                                  
 28585                                  L_code_ptr_break:
 28586 00015076 48837C241000                    cmp qword [rsp + 8 * 2], 0
 28587 0001507C 0F85421B0000                    jne L_error_arg_count_0
 28588 00015082 CC                              int3
 28589 00015083 48B8-                           mov rax, sob_void
 28589 00015085 [0000000000000000] 
 28590 0001508D C21000                          ret AND_KILL_FRAME(0)        
 28591                                  
 28592                                  L_code_ptr_frame:
 28593 00015090 C8000000                        enter 0, 0
 28594 00015094 48837D1800                      cmp COUNT, 0
 28595 00015099 0F85251B0000                    jne L_error_arg_count_0
 28596                                  
 28597 0001509F 48BF-                           mov rdi, fmt_frame
 28597 000150A1 [0319000000000000] 
 28598 000150A9 488B7500                        mov rsi, qword [rbp]    ; old rbp
 28599 000150AD 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 28600 000150B1 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 28601 000150B5 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 28602 000150B9 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 28603 000150BD 6A00                            push 0
 28604 000150BF 4151                            push r9
 28605 000150C1 4150                            push r8                   ; we'll use it when printing the params
 28606 000150C3 B800000000                      mov rax, 0
 28607                                          
 28608                                          ENTER
    44 000150C8 C8000000            <1>  enter 0, 0
    45 000150CC 4883E4F0            <1>  and rsp, ~15
 28609 000150D0 E8(00000000)                    call printf
 28610                                          LEAVE
    49 000150D5 C9                  <1>  leave
 28611                                  
 28612                                  .L:
 28613 000150D6 488B0C24                        mov rcx, qword [rsp]
 28614 000150DA 4883F900                        cmp rcx, 0
 28615 000150DE 7467                            je .L_out
 28616 000150E0 48BF-                           mov rdi, fmt_frame_param_prefix
 28616 000150E2 [3C19000000000000] 
 28617 000150EA 488B742410                      mov rsi, qword [rsp + 8*2]
 28618 000150EF B800000000                      mov rax, 0
 28619                                          
 28620                                          ENTER
    44 000150F4 C8000000            <1>  enter 0, 0
    45 000150F8 4883E4F0            <1>  and rsp, ~15
 28621 000150FC E8(00000000)                    call printf
 28622                                          LEAVE
    49 00015101 C9                  <1>  leave
 28623                                  
 28624 00015102 488B0C24                        mov rcx, qword [rsp]
 28625 00015106 48FFC9                          dec rcx
 28626 00015109 48890C24                        mov qword [rsp], rcx    ; dec arg count
 28627 0001510D 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 28628 00015112 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 28629 00015117 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 28630 0001511B 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 28631 00015120 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 28632 00015123 E87B000000                      call print_sexpr
 28633 00015128 48BF-                           mov rdi, fmt_newline
 28633 0001512A [6819000000000000] 
 28634 00015132 B800000000                      mov rax, 0
 28635                                          ENTER
    44 00015137 C8000000            <1>  enter 0, 0
    45 0001513B 4883E4F0            <1>  and rsp, ~15
 28636 0001513F E8(00000000)                    call printf
 28637                                          LEAVE
    49 00015144 C9                  <1>  leave
 28638 00015145 EB8F                            jmp .L
 28639                                  .L_out:
 28640 00015147 48BF-                           mov rdi, fmt_frame_continue
 28640 00015149 [4D19000000000000] 
 28641 00015151 B800000000                      mov rax, 0
 28642                                          ENTER
    44 00015156 C8000000            <1>  enter 0, 0
    45 0001515A 4883E4F0            <1>  and rsp, ~15
 28643 0001515E E8(00000000)                    call printf
 28644 00015163 E8(00000000)                    call getchar
 28645                                          LEAVE
    49 00015168 C9                  <1>  leave
 28646                                          
 28647 00015169 48B8-                           mov rax, sob_void
 28647 0001516B [0000000000000000] 
 28648 00015173 C9                              leave
 28649 00015174 C21000                          ret AND_KILL_FRAME(0)
 28650                                          
 28651                                  print_sexpr_if_not_void:
 28652 00015177 4881FF[00000000]        	cmp rdi, sob_void
 28653 0001517E 7422                    	je .done
 28654 00015180 E81E000000              	call print_sexpr
 28655 00015185 48BF-                   	mov rdi, fmt_newline
 28655 00015187 [6819000000000000] 
 28656 0001518F B800000000              	mov rax, 0
 28657                                  	ENTER
    44 00015194 C8000000            <1>  enter 0, 0
    45 00015198 4883E4F0            <1>  and rsp, ~15
 28658 0001519C E8(00000000)            	call printf
 28659                                  	LEAVE
    49 000151A1 C9                  <1>  leave
 28660                                  .done:
 28661 000151A2 C3                      	ret
 28662                                  
 28663                                  section .data
 28664                                  fmt_frame:
 28665 00001903 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 28665 0000190C 207265742061646472-
 28665 00001915 203D2025703B206C65-
 28665 0000191E 7820656E76203D2025-
 28665 00001927 703B20706172616D20-
 28665 00001930 636F756E74203D2025-
 28665 00001939 640A00             
 28666                                  fmt_frame_param_prefix:
 28667 0000193C 3D3D5B706172616D20-             db `==[param %d]==> \0`
 28667 00001945 25645D3D3D3E2000   
 28668                                  fmt_frame_continue:
 28669 0000194D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 28669 00001956 723E20746F20636F6E-
 28669 0000195F 74696E75652E2E2E00 
 28670                                  fmt_newline:
 28671 00001968 0A00                    	db `\n\0`
 28672                                  fmt_void:
 28673 0000196A 233C766F69643E00        	db `#<void>\0`
 28674                                  fmt_nil:
 28675 00001972 282900                  	db `()\0`
 28676                                  fmt_boolean_false:
 28677 00001975 236600                  	db `#f\0`
 28678                                  fmt_boolean_true:
 28679 00001978 237400                  	db `#t\0`
 28680                                  fmt_char_backslash:
 28681 0000197B 235C5C00                	db `#\\\\\0`
 28682                                  fmt_char_dquote:
 28683 0000197F 235C2200                	db `#\\"\0`
 28684                                  fmt_char_simple:
 28685 00001983 235C256300              	db `#\\%c\0`
 28686                                  fmt_char_null:
 28687 00001988 235C6E756C00            	db `#\\nul\0`
 28688                                  fmt_char_bell:
 28689 0000198E 235C62656C6C00          	db `#\\bell\0`
 28690                                  fmt_char_backspace:
 28691 00001995 235C6261636B737061-     	db `#\\backspace\0`
 28691 0000199E 636500             
 28692                                  fmt_char_tab:
 28693 000019A1 235C74616200            	db `#\\tab\0`
 28694                                  fmt_char_newline:
 28695 000019A7 235C6E65776C696E65-     	db `#\\newline\0`
 28695 000019B0 00                 
 28696                                  fmt_char_formfeed:
 28697 000019B1 235C7061676500          	db `#\\page\0`
 28698                                  fmt_char_return:
 28699 000019B8 235C72657475726E00      	db `#\\return\0`
 28700                                  fmt_char_escape:
 28701 000019C1 235C65736300            	db `#\\esc\0`
 28702                                  fmt_char_space:
 28703 000019C7 235C737061636500        	db `#\\space\0`
 28704                                  fmt_char_hex:
 28705 000019CF 235C782530325800        	db `#\\x%02X\0`
 28706                                  fmt_gensym:
 28707 000019D7 47256C6400                      db `G%ld\0`
 28708                                  fmt_closure:
 28709 000019DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 28709 000019E5 206174203078253038-
 28709 000019EE 5820656E763D307825-
 28709 000019F7 30385820636F64653D-
 28709 00001A00 3078253038583E00   
 28710                                  fmt_lparen:
 28711 00001A08 2800                    	db `(\0`
 28712                                  fmt_dotted_pair:
 28713 00001A0A 202E2000                	db ` . \0`
 28714                                  fmt_rparen:
 28715 00001A0E 2900                    	db `)\0`
 28716                                  fmt_space:
 28717 00001A10 2000                    	db ` \0`
 28718                                  fmt_empty_vector:
 28719 00001A12 23282900                	db `#()\0`
 28720                                  fmt_vector:
 28721 00001A16 232800                  	db `#(\0`
 28722                                  fmt_real:
 28723 00001A19 256600                  	db `%f\0`
 28724                                  fmt_fraction:
 28725 00001A1C 256C642F256C6400        	db `%ld/%ld\0`
 28726                                  fmt_zero:
 28727 00001A24 3000                    	db `0\0`
 28728                                  fmt_int:
 28729 00001A26 256C6400                	db `%ld\0`
 28730                                  fmt_unknown_scheme_object_error:
 28731 00001A2A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 28731 00001A33 6F723A20556E6B6E6F-
 28731 00001A3C 776E20536368656D65-
 28731 00001A45 2D6F626A6563742028-
 28731 00001A4E 525454492030782530-
 28731 00001A57 32582920           
 28732 00001A5B 617420616464726573-     	db `at address 0x%08X\n\n\0`
 28732 00001A64 73203078253038580A-
 28732 00001A6D 0A00               
 28733                                  fmt_dquote:
 28734 00001A6F 2200                    	db `\"\0`
 28735                                  fmt_string_char:
 28736 00001A71 256300                          db `%c\0`
 28737                                  fmt_string_char_7:
 28738 00001A74 5C6100                          db `\\a\0`
 28739                                  fmt_string_char_8:
 28740 00001A77 5C6200                          db `\\b\0`
 28741                                  fmt_string_char_9:
 28742 00001A7A 5C7400                          db `\\t\0`
 28743                                  fmt_string_char_10:
 28744 00001A7D 5C6E00                          db `\\n\0`
 28745                                  fmt_string_char_11:
 28746 00001A80 5C7600                          db `\\v\0`
 28747                                  fmt_string_char_12:
 28748 00001A83 5C6600                          db `\\f\0`
 28749                                  fmt_string_char_13:
 28750 00001A86 5C7200                          db `\\r\0`
 28751                                  fmt_string_char_34:
 28752 00001A89 5C2200                          db `\\"\0`
 28753                                  fmt_string_char_92:
 28754 00001A8C 5C5C00                          db `\\\\\0`
 28755                                  fmt_string_char_hex:
 28756 00001A8F 5C7825583B00                    db `\\x%X;\0`
 28757                                  
 28758                                  section .text
 28759                                  
 28760                                  print_sexpr:
 28761 000151A3 C8000000                	enter 0, 0
 28762 000151A7 8A07                    	mov al, byte [rdi]
 28763 000151A9 3C00                    	cmp al, T_void
 28764 000151AB 7465                    	je .Lvoid
 28765 000151AD 3C01                    	cmp al, T_nil
 28766 000151AF 7470                    	je .Lnil
 28767 000151B1 3C09                    	cmp al, T_boolean_false
 28768 000151B3 747B                    	je .Lboolean_false
 28769 000151B5 3C0A                    	cmp al, T_boolean_true
 28770 000151B7 0F8482000000            	je .Lboolean_true
 28771 000151BD 3C02                    	cmp al, T_char
 28772 000151BF 0F8489000000            	je .Lchar
 28773 000151C5 3C41                    	cmp al, T_interned_symbol
 28774 000151C7 0F84CB010000            	je .Linterned_symbol
 28775 000151CD 3C42                            cmp al, T_uninterned_symbol
 28776 000151CF 0F84EF010000                    je .Luninterned_symbol
 28777 000151D5 3C21                    	cmp al, T_pair
 28778 000151D7 0F84FA010000            	je .Lpair
 28779 000151DD 3C22                    	cmp al, T_vector
 28780 000151DF 0F84C3020000            	je .Lvector
 28781 000151E5 3C04                    	cmp al, T_closure
 28782 000151E7 0F8491010000            	je .Lclosure
 28783 000151ED 3C13                    	cmp al, T_real
 28784 000151EF 0F8454030000            	je .Lreal
 28785 000151F5 3C12                    	cmp al, T_fraction
 28786 000151F7 0F847A030000            	je .Lfraction
 28787 000151FD 3C11                    	cmp al, T_integer
 28788 000151FF 0F84B3030000            	je .Linteger
 28789 00015205 3C03                    	cmp al, T_string
 28790 00015207 0F84BE030000            	je .Lstring
 28791                                  
 28792 0001520D E9F6040000              	jmp .Lunknown_sexpr_type
 28793                                  
 28794                                  .Lvoid:
 28795 00015212 48BF-                   	mov rdi, fmt_void
 28795 00015214 [6A19000000000000] 
 28796 0001521C E91A050000              	jmp .Lemit
 28797                                  
 28798                                  .Lnil:
 28799 00015221 48BF-                   	mov rdi, fmt_nil
 28799 00015223 [7219000000000000] 
 28800 0001522B E90B050000              	jmp .Lemit
 28801                                  
 28802                                  .Lboolean_false:
 28803 00015230 48BF-                   	mov rdi, fmt_boolean_false
 28803 00015232 [7519000000000000] 
 28804 0001523A E9FC040000              	jmp .Lemit
 28805                                  
 28806                                  .Lboolean_true:
 28807 0001523F 48BF-                   	mov rdi, fmt_boolean_true
 28807 00015241 [7819000000000000] 
 28808 00015249 E9ED040000              	jmp .Lemit
 28809                                  
 28810                                  .Lchar:
 28811 0001524E 8A4701                  	mov al, byte [rdi + 1]
 28812 00015251 3C20                    	cmp al, ' '
 28813 00015253 7E28                    	jle .Lchar_whitespace
 28814 00015255 3C5C                    	cmp al, 92 		; backslash
 28815 00015257 0F847C000000            	je .Lchar_backslash
 28816 0001525D 3C22                    	cmp al, '"'
 28817 0001525F 0F8483000000            	je .Lchar_dquote
 28818 00015265 4825FF000000            	and rax, 255
 28819 0001526B 48BF-                   	mov rdi, fmt_char_simple
 28819 0001526D [8319000000000000] 
 28820 00015275 4889C6                  	mov rsi, rax
 28821 00015278 E9BE040000              	jmp .Lemit
 28822                                  
 28823                                  .Lchar_whitespace:
 28824 0001527D 3C00                    	cmp al, 0
 28825 0001527F 7476                    	je .Lchar_null
 28826 00015281 3C07                    	cmp al, 7
 28827 00015283 0F847D000000            	je .Lchar_bell
 28828 00015289 3C08                    	cmp al, 8
 28829 0001528B 0F8484000000            	je .Lchar_backspace
 28830 00015291 3C09                    	cmp al, 9
 28831 00015293 0F848B000000            	je .Lchar_tab
 28832 00015299 3C0A                    	cmp al, 10
 28833 0001529B 0F8492000000            	je .Lchar_newline
 28834 000152A1 3C0C                    	cmp al, 12
 28835 000152A3 0F8499000000            	je .Lchar_formfeed
 28836 000152A9 3C0D                    	cmp al, 13
 28837 000152AB 0F84A0000000            	je .Lchar_return
 28838 000152B1 3C1B                    	cmp al, 27
 28839 000152B3 0F84A7000000            	je .Lchar_escape
 28840 000152B9 4825FF000000            	and rax, 255
 28841 000152BF 3C20                    	cmp al, ' '
 28842 000152C1 0F84A8000000            	je .Lchar_space
 28843 000152C7 48BF-                   	mov rdi, fmt_char_hex
 28843 000152C9 [CF19000000000000] 
 28844 000152D1 4889C6                  	mov rsi, rax
 28845 000152D4 E962040000              	jmp .Lemit	
 28846                                  
 28847                                  .Lchar_backslash:
 28848 000152D9 48BF-                   	mov rdi, fmt_char_backslash
 28848 000152DB [7B19000000000000] 
 28849 000152E3 E953040000              	jmp .Lemit
 28850                                  
 28851                                  .Lchar_dquote:
 28852 000152E8 48BF-                   	mov rdi, fmt_char_dquote
 28852 000152EA [7F19000000000000] 
 28853 000152F2 E944040000              	jmp .Lemit
 28854                                  
 28855                                  .Lchar_null:
 28856 000152F7 48BF-                   	mov rdi, fmt_char_null
 28856 000152F9 [8819000000000000] 
 28857 00015301 E935040000              	jmp .Lemit
 28858                                  
 28859                                  .Lchar_bell:
 28860 00015306 48BF-                   	mov rdi, fmt_char_bell
 28860 00015308 [8E19000000000000] 
 28861 00015310 E926040000              	jmp .Lemit
 28862                                  
 28863                                  .Lchar_backspace:
 28864 00015315 48BF-                   	mov rdi, fmt_char_backspace
 28864 00015317 [9519000000000000] 
 28865 0001531F E917040000              	jmp .Lemit
 28866                                  
 28867                                  .Lchar_tab:
 28868 00015324 48BF-                   	mov rdi, fmt_char_tab
 28868 00015326 [A119000000000000] 
 28869 0001532E E908040000              	jmp .Lemit
 28870                                  
 28871                                  .Lchar_newline:
 28872 00015333 48BF-                   	mov rdi, fmt_char_newline
 28872 00015335 [A719000000000000] 
 28873 0001533D E9F9030000              	jmp .Lemit
 28874                                  
 28875                                  .Lchar_formfeed:
 28876 00015342 48BF-                   	mov rdi, fmt_char_formfeed
 28876 00015344 [B119000000000000] 
 28877 0001534C E9EA030000              	jmp .Lemit
 28878                                  
 28879                                  .Lchar_return:
 28880 00015351 48BF-                   	mov rdi, fmt_char_return
 28880 00015353 [B819000000000000] 
 28881 0001535B E9DB030000              	jmp .Lemit
 28882                                  
 28883                                  .Lchar_escape:
 28884 00015360 48BF-                   	mov rdi, fmt_char_escape
 28884 00015362 [C119000000000000] 
 28885 0001536A E9CC030000              	jmp .Lemit
 28886                                  
 28887                                  .Lchar_space:
 28888 0001536F 48BF-                   	mov rdi, fmt_char_space
 28888 00015371 [C719000000000000] 
 28889 00015379 E9BD030000              	jmp .Lemit
 28890                                  
 28891                                  .Lclosure:
 28892 0001537E 4889FE                  	mov rsi, qword rdi
 28893 00015381 48BF-                   	mov rdi, fmt_closure
 28893 00015383 [DC19000000000000] 
 28894 0001538B 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 28895 0001538F 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 28896 00015393 E9A3030000              	jmp .Lemit
 28897                                  
 28898                                  .Linterned_symbol:
 28899 00015398 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 28900 0001539C BE01000000              	mov rsi, 1		 ; size = 1 byte
 28901 000153A1 488B5701                	mov rdx, qword [rdi + 1] ; length
 28902 000153A5 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 28903 000153A9 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 28904                                  	ENTER
    44 000153B1 C8000000            <1>  enter 0, 0
    45 000153B5 4883E4F0            <1>  and rsp, ~15
 28905 000153B9 E8(00000000)            	call fwrite
 28906                                  	LEAVE
    49 000153BE C9                  <1>  leave
 28907 000153BF E98C030000              	jmp .Lend
 28908                                  
 28909                                  .Luninterned_symbol:
 28910 000153C4 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 28911 000153C8 48BF-                           mov rdi, fmt_gensym
 28911 000153CA [D719000000000000] 
 28912 000153D2 E964030000                      jmp .Lemit
 28913                                  	
 28914                                  .Lpair:
 28915 000153D7 57                      	push rdi
 28916 000153D8 48BF-                   	mov rdi, fmt_lparen
 28916 000153DA [081A000000000000] 
 28917 000153E2 B800000000              	mov rax, 0
 28918                                          ENTER
    44 000153E7 C8000000            <1>  enter 0, 0
    45 000153EB 4883E4F0            <1>  and rsp, ~15
 28919 000153EF E8(00000000)            	call printf
 28920                                          LEAVE
    49 000153F4 C9                  <1>  leave
 28921 000153F5 488B3C24                	mov rdi, qword [rsp] 	; pair
 28922 000153F9 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 28923 000153FD E8A1FDFFFF              	call print_sexpr
 28924 00015402 5F                      	pop rdi 		; pair
 28925 00015403 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 28926                                  .Lcdr:
 28927 00015407 8A07                    	mov al, byte [rdi]
 28928 00015409 3C01                    	cmp al, T_nil
 28929 0001540B 7447                    	je .Lcdr_nil
 28930 0001540D 3C21                    	cmp al, T_pair
 28931 0001540F 7462                    	je .Lcdr_pair
 28932 00015411 57                      	push rdi
 28933 00015412 48BF-                   	mov rdi, fmt_dotted_pair
 28933 00015414 [0A1A000000000000] 
 28934 0001541C B800000000              	mov rax, 0
 28935                                          ENTER
    44 00015421 C8000000            <1>  enter 0, 0
    45 00015425 4883E4F0            <1>  and rsp, ~15
 28936 00015429 E8(00000000)            	call printf
 28937                                          LEAVE
    49 0001542E C9                  <1>  leave
 28938 0001542F 5F                      	pop rdi
 28939 00015430 E86EFDFFFF              	call print_sexpr
 28940 00015435 48BF-                   	mov rdi, fmt_rparen
 28940 00015437 [0E1A000000000000] 
 28941 0001543F B800000000              	mov rax, 0
 28942                                          ENTER
    44 00015444 C8000000            <1>  enter 0, 0
    45 00015448 4883E4F0            <1>  and rsp, ~15
 28943 0001544C E8(00000000)            	call printf
 28944                                          LEAVE
    49 00015451 C9                  <1>  leave
 28945 00015452 C9                      	leave
 28946 00015453 C3                      	ret
 28947                                  
 28948                                  .Lcdr_nil:
 28949 00015454 48BF-                   	mov rdi, fmt_rparen
 28949 00015456 [0E1A000000000000] 
 28950 0001545E B800000000              	mov rax, 0
 28951                                          ENTER
    44 00015463 C8000000            <1>  enter 0, 0
    45 00015467 4883E4F0            <1>  and rsp, ~15
 28952 0001546B E8(00000000)            	call printf
 28953                                          LEAVE
    49 00015470 C9                  <1>  leave
 28954 00015471 C9                      	leave
 28955 00015472 C3                      	ret
 28956                                  
 28957                                  .Lcdr_pair:
 28958 00015473 57                      	push rdi
 28959 00015474 48BF-                   	mov rdi, fmt_space
 28959 00015476 [101A000000000000] 
 28960 0001547E B800000000              	mov rax, 0
 28961                                          ENTER
    44 00015483 C8000000            <1>  enter 0, 0
    45 00015487 4883E4F0            <1>  and rsp, ~15
 28962 0001548B E8(00000000)            	call printf
 28963                                          LEAVE
    49 00015490 C9                  <1>  leave
 28964 00015491 488B3C24                	mov rdi, qword [rsp]
 28965 00015495 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 28966 00015499 E805FDFFFF              	call print_sexpr
 28967 0001549E 5F                      	pop rdi
 28968 0001549F 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 28969 000154A3 E95FFFFFFF              	jmp .Lcdr
 28970                                  
 28971                                  .Lvector:
 28972 000154A8 488B4701                	mov rax, qword [rdi + 1] ; length
 28973 000154AC 4883F800                	cmp rax, 0
 28974 000154B0 0F8484000000            	je .Lvector_empty
 28975 000154B6 57                      	push rdi
 28976 000154B7 48BF-                   	mov rdi, fmt_vector
 28976 000154B9 [161A000000000000] 
 28977 000154C1 B800000000              	mov rax, 0
 28978                                          ENTER
    44 000154C6 C8000000            <1>  enter 0, 0
    45 000154CA 4883E4F0            <1>  and rsp, ~15
 28979 000154CE E8(00000000)            	call printf
 28980                                          LEAVE
    49 000154D3 C9                  <1>  leave
 28981 000154D4 488B3C24                	mov rdi, qword [rsp]
 28982 000154D8 FF7701                  	push qword [rdi + 1]
 28983 000154DB 6A01                    	push 1
 28984 000154DD 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 28985 000154E1 E8BDFCFFFF              	call print_sexpr
 28986                                  .Lvector_loop:
 28987                                  	; [rsp] index
 28988                                  	; [rsp + 8*1] limit
 28989                                  	; [rsp + 8*2] vector
 28990 000154E6 488B0424                	mov rax, qword [rsp]
 28991 000154EA 483B442408              	cmp rax, qword [rsp + 8*1]
 28992 000154EF 7436                    	je .Lvector_end
 28993 000154F1 48BF-                   	mov rdi, fmt_space
 28993 000154F3 [101A000000000000] 
 28994 000154FB B800000000              	mov rax, 0
 28995                                          ENTER
    44 00015500 C8000000            <1>  enter 0, 0
    45 00015504 4883E4F0            <1>  and rsp, ~15
 28996 00015508 E8(00000000)            	call printf
 28997                                          LEAVE
    49 0001550D C9                  <1>  leave
 28998 0001550E 488B0424                	mov rax, qword [rsp]
 28999 00015512 488B5C2410              	mov rbx, qword [rsp + 8*2]
 29000 00015517 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 29001 0001551C E882FCFFFF              	call print_sexpr
 29002 00015521 48FF0424                	inc qword [rsp]
 29003 00015525 EBBF                    	jmp .Lvector_loop
 29004                                  
 29005                                  .Lvector_end:
 29006 00015527 4883C418                	add rsp, 8*3
 29007 0001552B 48BF-                   	mov rdi, fmt_rparen
 29007 0001552D [0E1A000000000000] 
 29008 00015535 E901020000              	jmp .Lemit	
 29009                                  
 29010                                  .Lvector_empty:
 29011 0001553A 48BF-                   	mov rdi, fmt_empty_vector
 29011 0001553C [121A000000000000] 
 29012 00015544 E9F2010000              	jmp .Lemit
 29013                                  
 29014                                  .Lreal:
 29015 00015549 FF7701                  	push qword [rdi + 1]
 29016 0001554C F20F100424              	movsd xmm0, qword [rsp]
 29017 00015551 4883C408                	add rsp, 8*1
 29018 00015555 48BF-                   	mov rdi, fmt_real
 29018 00015557 [191A000000000000] 
 29019 0001555F B801000000              	mov rax, 1
 29020                                  	ENTER
    44 00015564 C8000000            <1>  enter 0, 0
    45 00015568 4883E4F0            <1>  and rsp, ~15
 29021 0001556C E8(00000000)            	call printf
 29022                                  	LEAVE
    49 00015571 C9                  <1>  leave
 29023 00015572 E9D9010000              	jmp .Lend
 29024                                  
 29025                                  .Lfraction:
 29026 00015577 488B7701                	mov rsi, qword [rdi + 1]
 29027 0001557B 488B5709                	mov rdx, qword [rdi + 1 + 8]
 29028 0001557F 4883FE00                	cmp rsi, 0
 29029 00015583 7415                    	je .Lrat_zero
 29030 00015585 4883FA01                	cmp rdx, 1
 29031 00015589 741E                    	je .Lrat_int
 29032 0001558B 48BF-                   	mov rdi, fmt_fraction
 29032 0001558D [1C1A000000000000] 
 29033 00015595 E9A1010000              	jmp .Lemit
 29034                                  
 29035                                  .Lrat_zero:
 29036 0001559A 48BF-                   	mov rdi, fmt_zero
 29036 0001559C [241A000000000000] 
 29037 000155A4 E992010000              	jmp .Lemit
 29038                                  
 29039                                  .Lrat_int:
 29040 000155A9 48BF-                   	mov rdi, fmt_int
 29040 000155AB [261A000000000000] 
 29041 000155B3 E983010000              	jmp .Lemit
 29042                                  
 29043                                  .Linteger:
 29044 000155B8 488B7701                	mov rsi, qword [rdi + 1]
 29045 000155BC 48BF-                   	mov rdi, fmt_int
 29045 000155BE [261A000000000000] 
 29046 000155C6 E970010000              	jmp .Lemit
 29047                                  
 29048                                  .Lstring:
 29049 000155CB 488D4709                	lea rax, [rdi + 1 + 8]
 29050 000155CF 50                      	push rax
 29051 000155D0 FF7701                  	push qword [rdi + 1]
 29052 000155D3 48BF-                   	mov rdi, fmt_dquote
 29052 000155D5 [6F1A000000000000] 
 29053 000155DD B800000000              	mov rax, 0
 29054                                  	ENTER
    44 000155E2 C8000000            <1>  enter 0, 0
    45 000155E6 4883E4F0            <1>  and rsp, ~15
 29055 000155EA E8(00000000)            	call printf
 29056                                  	LEAVE
    49 000155EF C9                  <1>  leave
 29057                                  .Lstring_loop:
 29058                                  	; qword [rsp]: limit
 29059                                  	; qword [rsp + 8*1]: char *
 29060 000155F0 48833C2400              	cmp qword [rsp], 0
 29061 000155F5 0F84FD000000            	je .Lstring_end
 29062 000155FB 488B442408              	mov rax, qword [rsp + 8*1]
 29063 00015600 8A00                    	mov al, byte [rax]
 29064 00015602 4825FF000000            	and rax, 255
 29065 00015608 3C07                    	cmp al, 7
 29066 0001560A 7468                            je .Lstring_char_7
 29067 0001560C 3C08                            cmp al, 8
 29068 0001560E 7470                            je .Lstring_char_8
 29069 00015610 3C09                            cmp al, 9
 29070 00015612 7478                            je .Lstring_char_9
 29071 00015614 3C0A                            cmp al, 10
 29072 00015616 0F847C000000                    je .Lstring_char_10
 29073 0001561C 3C0B                            cmp al, 11
 29074 0001561E 0F8480000000                    je .Lstring_char_11
 29075 00015624 3C0C                            cmp al, 12
 29076 00015626 0F8484000000                    je .Lstring_char_12
 29077 0001562C 3C0D                            cmp al, 13
 29078 0001562E 0F8488000000                    je .Lstring_char_13
 29079 00015634 3C22                            cmp al, 34
 29080 00015636 0F848C000000                    je .Lstring_char_34
 29081 0001563C 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 29083 0001563E 3C20                            cmp al, ' '
 29084 00015640 0F8CA0000000                    jl .Lstring_char_hex
 29085 00015646 48BF-                           mov rdi, fmt_string_char
 29085 00015648 [711A000000000000] 
 29086 00015650 4889C6                          mov rsi, rax
 29087                                  .Lstring_char_emit:
 29088 00015653 B800000000                      mov rax, 0
 29089                                          ENTER
    44 00015658 C8000000            <1>  enter 0, 0
    45 0001565C 4883E4F0            <1>  and rsp, ~15
 29090 00015660 E8(00000000)                    call printf
 29091                                          LEAVE
    49 00015665 C9                  <1>  leave
 29092 00015666 48FF0C24                        dec qword [rsp]
 29093 0001566A 48FF442408                      inc qword [rsp + 8*1]
 29094 0001566F E97CFFFFFF                      jmp .Lstring_loop
 29095                                  
 29096                                  .Lstring_char_7:
 29097 00015674 48BF-                           mov rdi, fmt_string_char_7
 29097 00015676 [741A000000000000] 
 29098 0001567E EBD3                            jmp .Lstring_char_emit
 29099                                  
 29100                                  .Lstring_char_8:
 29101 00015680 48BF-                           mov rdi, fmt_string_char_8
 29101 00015682 [771A000000000000] 
 29102 0001568A EBC7                            jmp .Lstring_char_emit
 29103                                          
 29104                                  .Lstring_char_9:
 29105 0001568C 48BF-                           mov rdi, fmt_string_char_9
 29105 0001568E [7A1A000000000000] 
 29106 00015696 EBBB                            jmp .Lstring_char_emit
 29107                                  
 29108                                  .Lstring_char_10:
 29109 00015698 48BF-                           mov rdi, fmt_string_char_10
 29109 0001569A [7D1A000000000000] 
 29110 000156A2 EBAF                            jmp .Lstring_char_emit
 29111                                  
 29112                                  .Lstring_char_11:
 29113 000156A4 48BF-                           mov rdi, fmt_string_char_11
 29113 000156A6 [801A000000000000] 
 29114 000156AE EBA3                            jmp .Lstring_char_emit
 29115                                  
 29116                                  .Lstring_char_12:
 29117 000156B0 48BF-                           mov rdi, fmt_string_char_12
 29117 000156B2 [831A000000000000] 
 29118 000156BA EB97                            jmp .Lstring_char_emit
 29119                                  
 29120                                  .Lstring_char_13:
 29121 000156BC 48BF-                           mov rdi, fmt_string_char_13
 29121 000156BE [861A000000000000] 
 29122 000156C6 EB8B                            jmp .Lstring_char_emit
 29123                                  
 29124                                  .Lstring_char_34:
 29125 000156C8 48BF-                           mov rdi, fmt_string_char_34
 29125 000156CA [891A000000000000] 
 29126 000156D2 E97CFFFFFF                      jmp .Lstring_char_emit
 29127                                  
 29128                                  .Lstring_char_92:
 29129 000156D7 48BF-                           mov rdi, fmt_string_char_92
 29129 000156D9 [8C1A000000000000] 
 29130 000156E1 E96DFFFFFF                      jmp .Lstring_char_emit
 29131                                  
 29132                                  .Lstring_char_hex:
 29133 000156E6 48BF-                           mov rdi, fmt_string_char_hex
 29133 000156E8 [8F1A000000000000] 
 29134 000156F0 4889C6                          mov rsi, rax
 29135 000156F3 E95BFFFFFF                      jmp .Lstring_char_emit        
 29136                                  
 29137                                  .Lstring_end:
 29138 000156F8 4883C410                	add rsp, 8 * 2
 29139 000156FC 48BF-                   	mov rdi, fmt_dquote
 29139 000156FE [6F1A000000000000] 
 29140 00015706 EB33                    	jmp .Lemit
 29141                                  
 29142                                  .Lunknown_sexpr_type:
 29143 00015708 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 29143 0001570A [2A1A000000000000] 
 29144 00015712 4825FF000000            	and rax, 255
 29145 00015718 4889C2                  	mov rdx, rax
 29146 0001571B 4889F9                  	mov rcx, rdi
 29147 0001571E 488B3C25[00000000]      	mov rdi, qword [stderr]
 29148 00015726 B800000000              	mov rax, 0
 29149                                          ENTER
    44 0001572B C8000000            <1>  enter 0, 0
    45 0001572F 4883E4F0            <1>  and rsp, ~15
 29150 00015733 E8(00000000)            	call fprintf
 29151                                          LEAVE
    49 00015738 C9                  <1>  leave
 29152 00015739 C9                              leave
 29153 0001573A C3                              ret
 29154                                  
 29155                                  .Lemit:
 29156 0001573B B800000000              	mov rax, 0
 29157                                          ENTER
    44 00015740 C8000000            <1>  enter 0, 0
    45 00015744 4883E4F0            <1>  and rsp, ~15
 29158 00015748 E8(00000000)            	call printf
 29159                                          LEAVE
    49 0001574D C9                  <1>  leave
 29160 0001574E EB00                    	jmp .Lend
 29161                                  
 29162                                  .Lend:
 29163                                  	LEAVE
    49 00015750 C9                  <1>  leave
 29164 00015751 C3                      	ret
 29165                                  
 29166                                  ;;; rdi: address of free variable
 29167                                  ;;; rsi: address of code-pointer
 29168                                  bind_primitive:
 29169 00015752 C8000000                        enter 0, 0
 29170 00015756 57                              push rdi
 29171 00015757 BF11000000                      mov rdi, (1 + 8 + 8)
 29172 0001575C E8C1F7FFFF                      call malloc
 29173 00015761 5F                              pop rdi
 29174 00015762 C60004                          mov byte [rax], T_closure
 29175 00015765 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 29176 0001576D 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 29177 00015771 488907                          mov qword [rdi], rax
 29178 00015774 48B8-                           mov rax, sob_void
 29178 00015776 [0000000000000000] 
 29179 0001577E C9                              leave
 29180 0001577F C3                              ret
 29181                                  
 29182                                  L_code_ptr_ash:
 29183 00015780 C8000000                        enter 0, 0
 29184 00015784 48837D1802                      cmp COUNT, 2
 29185 00015789 0F859F140000                    jne L_error_arg_count_2
 29186 0001578F 488B7D20                        mov rdi, PARAM(0)
 29187                                          assert_integer(rdi)
    53 00015793 803F11              <1>  cmp byte [%1], %2
    54 00015796 0F8531150000        <1>  jne L_error_incorrect_type
 29188 0001579C 488B4D28                        mov rcx, PARAM(1)
 29189                                          assert_integer(rcx)
    53 000157A0 803911              <1>  cmp byte [%1], %2
    54 000157A3 0F8524150000        <1>  jne L_error_incorrect_type
 29190 000157A9 488B7F01                        mov rdi, qword [rdi + 1]
 29191 000157AD 488B4901                        mov rcx, qword [rcx + 1]
 29192 000157B1 4883F900                        cmp rcx, 0
 29193 000157B5 7C0F                            jl .L_negative
 29194                                  .L_loop_positive:
 29195 000157B7 4883F900                        cmp rcx, 0
 29196 000157BB 741B                            je .L_exit
 29197 000157BD 48D3E7                          sal rdi, cl
 29198 000157C0 48C1E908                        shr rcx, 8
 29199 000157C4 EBF1                            jmp .L_loop_positive
 29200                                  .L_negative:
 29201 000157C6 48F7D9                          neg rcx
 29202                                  .L_loop_negative:
 29203 000157C9 4883F900                        cmp rcx, 0
 29204 000157CD 7409                            je .L_exit
 29205 000157CF 48D3FF                          sar rdi, cl
 29206 000157D2 48C1E908                        shr rcx, 8
 29207 000157D6 EBF1                            jmp .L_loop_negative
 29208                                  .L_exit:
 29209 000157D8 E86B130000                      call make_integer
 29210 000157DD C9                              leave
 29211 000157DE C22000                          ret AND_KILL_FRAME(2)
 29212                                  
 29213                                  L_code_ptr_logand:
 29214 000157E1 C8000000                        enter 0, 0
 29215 000157E5 48837D1802                      cmp COUNT, 2
 29216 000157EA 0F853E140000                    jne L_error_arg_count_2
 29217 000157F0 4C8B4520                        mov r8, PARAM(0)
 29218                                          assert_integer(r8)
    53 000157F4 41803811            <1>  cmp byte [%1], %2
    54 000157F8 0F85CF140000        <1>  jne L_error_incorrect_type
 29219 000157FE 4C8B4D28                        mov r9, PARAM(1)
 29220                                          assert_integer(r9)
    53 00015802 41803911            <1>  cmp byte [%1], %2
    54 00015806 0F85C1140000        <1>  jne L_error_incorrect_type
 29221 0001580C 498B7801                        mov rdi, qword [r8 + 1]
 29222 00015810 49237901                        and rdi, qword [r9 + 1]
 29223 00015814 E82F130000                      call make_integer
 29224 00015819 C9                              leave
 29225 0001581A C22000                          ret AND_KILL_FRAME(2)
 29226                                  
 29227                                  L_code_ptr_logor:
 29228 0001581D C8000000                        enter 0, 0
 29229 00015821 48837D1802                      cmp COUNT, 2
 29230 00015826 0F8502140000                    jne L_error_arg_count_2
 29231 0001582C 4C8B4520                        mov r8, PARAM(0)
 29232                                          assert_integer(r8)
    53 00015830 41803811            <1>  cmp byte [%1], %2
    54 00015834 0F8593140000        <1>  jne L_error_incorrect_type
 29233 0001583A 4C8B4D28                        mov r9, PARAM(1)
 29234                                          assert_integer(r9)
    53 0001583E 41803911            <1>  cmp byte [%1], %2
    54 00015842 0F8585140000        <1>  jne L_error_incorrect_type
 29235 00015848 498B7801                        mov rdi, qword [r8 + 1]
 29236 0001584C 490B7901                        or rdi, qword [r9 + 1]
 29237 00015850 E8F3120000                      call make_integer
 29238 00015855 C9                              leave
 29239 00015856 C22000                          ret AND_KILL_FRAME(2)
 29240                                  
 29241                                  L_code_ptr_logxor:
 29242 00015859 C8000000                        enter 0, 0
 29243 0001585D 48837D1802                      cmp COUNT, 2
 29244 00015862 0F85C6130000                    jne L_error_arg_count_2
 29245 00015868 4C8B4520                        mov r8, PARAM(0)
 29246                                          assert_integer(r8)
    53 0001586C 41803811            <1>  cmp byte [%1], %2
    54 00015870 0F8557140000        <1>  jne L_error_incorrect_type
 29247 00015876 4C8B4D28                        mov r9, PARAM(1)
 29248                                          assert_integer(r9)
    53 0001587A 41803911            <1>  cmp byte [%1], %2
    54 0001587E 0F8549140000        <1>  jne L_error_incorrect_type
 29249 00015884 498B7801                        mov rdi, qword [r8 + 1]
 29250 00015888 49337901                        xor rdi, qword [r9 + 1]
 29251 0001588C E8B7120000                      call make_integer
 29252                                          LEAVE
    49 00015891 C9                  <1>  leave
 29253 00015892 C22000                          ret AND_KILL_FRAME(2)
 29254                                  
 29255                                  L_code_ptr_lognot:
 29256 00015895 C8000000                        enter 0, 0
 29257 00015899 48837D1801                      cmp COUNT, 1
 29258 0001589E 0F8555130000                    jne L_error_arg_count_1
 29259 000158A4 4C8B4520                        mov r8, PARAM(0)
 29260                                          assert_integer(r8)
    53 000158A8 41803811            <1>  cmp byte [%1], %2
    54 000158AC 0F851B140000        <1>  jne L_error_incorrect_type
 29261 000158B2 498B7801                        mov rdi, qword [r8 + 1]
 29262 000158B6 48F7D7                          not rdi
 29263 000158B9 E88A120000                      call make_integer
 29264 000158BE C9                              leave
 29265 000158BF C21800                          ret AND_KILL_FRAME(1)
 29266                                  
 29267                                  L_code_ptr_bin_apply:
 29268 000158C2 48837C241002                    cmp qword [rsp + 8 * 2], 2
 29269 000158C8 0F8560130000                    jne L_error_arg_count_2
 29270 000158CE 4C8B642418                      mov r12, qword [rsp + 8 * 3]
 29271                                          assert_closure(r12)
    53 000158D3 41803C2404          <1>  cmp byte [%1], %2
    54 000158D8 0F85EF130000        <1>  jne L_error_incorrect_type
 29272 000158DE 4C8D542420                      lea r10, [rsp + 8 * 4]
 29273 000158E3 4D8B1A                          mov r11, qword [r10]
 29274 000158E6 4C8B0C24                        mov r9, qword [rsp]
 29275 000158EA B900000000                      mov rcx, 0
 29276 000158EF 4C89DE                          mov rsi, r11
 29277                                  .L0:
 29278 000158F2 4881FE[01000000]                cmp rsi, sob_nil
 29279 000158F9 7412                            je .L0_out
 29280                                          assert_pair(rsi)
    53 000158FB 803E21              <1>  cmp byte [%1], %2
    54 000158FE 0F85C9130000        <1>  jne L_error_incorrect_type
 29281 00015904 48FFC1                          inc rcx
 29282 00015907 488B7609                        mov rsi, SOB_PAIR_CDR(rsi)
 29283 0001590B EBE5                            jmp .L0
 29284                                  .L0_out:
 29285 0001590D 488D1CCDF0FFFFFF                lea rbx, [8 * (rcx - 2)]
 29286 00015915 4829DC                          sub rsp, rbx
 29287 00015918 4889E7                          mov rdi, rsp
 29288 0001591B FC                              cld
 29289                                          ; place ret addr
 29290 0001591C 4C89C8                          mov rax, r9
 29291 0001591F 48AB                            stosq
 29292                                          ; place env_f
 29293 00015921 498B442401                      mov rax, SOB_CLOSURE_ENV(r12)
 29294 00015926 48AB                            stosq
 29295                                          ; place COUNT = rcx
 29296 00015928 4889C8                          mov rax, rcx
 29297 0001592B 48AB                            stosq
 29298                                  .L1:
 29299 0001592D 4883F900                        cmp rcx, 0
 29300 00015931 740F                            je .L1_out
 29301 00015933 498B4301                        mov rax, SOB_PAIR_CAR(r11)
 29302 00015937 48AB                            stosq
 29303 00015939 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11)
 29304 0001593D 48FFC9                          dec rcx
 29305 00015940 EBEB                            jmp .L1
 29306                                  .L1_out:
 29307 00015942 4883EF08                        sub rdi, 8*1
 29308 00015946 4939FA                          cmp r10, rdi
 29309 00015949 7505                            jne .L_error_apply_stack_corrupted
 29310 0001594B 41FF642409                      jmp SOB_CLOSURE_CODE(r12)
 29311                                  .L_error_apply_stack_corrupted:
 29312 00015950 CC                              int3
 29313                                  
 29314                                  
 29315                                  L_code_ptr_is_null:
 29316 00015951 C8000000                        enter 0, 0
 29317 00015955 48837D1801                      cmp COUNT, 1
 29318 0001595A 0F8599120000                    jne L_error_arg_count_1
 29319 00015960 488B4520                        mov rax, PARAM(0)
 29320 00015964 803801                          cmp byte [rax], T_nil
 29321 00015967 750C                            jne .L_false
 29322 00015969 48B8-                           mov rax, sob_boolean_true
 29322 0001596B [0300000000000000] 
 29323 00015973 EB0A                            jmp .L_end
 29324                                  .L_false:
 29325 00015975 48B8-                           mov rax, sob_boolean_false
 29325 00015977 [0200000000000000] 
 29326                                  .L_end:
 29327 0001597F C9                              leave
 29328 00015980 C21800                          ret AND_KILL_FRAME(1)
 29329                                  
 29330                                  L_code_ptr_is_pair:
 29331 00015983 C8000000                        enter 0, 0
 29332 00015987 48837D1801                      cmp COUNT, 1
 29333 0001598C 0F8567120000                    jne L_error_arg_count_1
 29334 00015992 488B4520                        mov rax, PARAM(0)
 29335 00015996 803821                          cmp byte [rax], T_pair
 29336 00015999 750C                            jne .L_false
 29337 0001599B 48B8-                           mov rax, sob_boolean_true
 29337 0001599D [0300000000000000] 
 29338 000159A5 EB0A                            jmp .L_end
 29339                                  .L_false:
 29340 000159A7 48B8-                           mov rax, sob_boolean_false
 29340 000159A9 [0200000000000000] 
 29341                                  .L_end:
 29342 000159B1 C9                              leave
 29343 000159B2 C21800                          ret AND_KILL_FRAME(1)
 29344                                          
 29345                                  L_code_ptr_is_void:
 29346 000159B5 C8000000                        enter 0, 0
 29347 000159B9 48837D1801                      cmp COUNT, 1
 29348 000159BE 0F8535120000                    jne L_error_arg_count_1
 29349 000159C4 488B4520                        mov rax, PARAM(0)
 29350 000159C8 803800                          cmp byte [rax], T_void
 29351 000159CB 750C                            jne .L_false
 29352 000159CD 48B8-                           mov rax, sob_boolean_true
 29352 000159CF [0300000000000000] 
 29353 000159D7 EB0A                            jmp .L_end
 29354                                  .L_false:
 29355 000159D9 48B8-                           mov rax, sob_boolean_false
 29355 000159DB [0200000000000000] 
 29356                                  .L_end:
 29357 000159E3 C9                              leave
 29358 000159E4 C21800                          ret AND_KILL_FRAME(1)
 29359                                  
 29360                                  L_code_ptr_is_char:
 29361 000159E7 C8000000                        enter 0, 0
 29362 000159EB 48837D1801                      cmp COUNT, 1
 29363 000159F0 0F8503120000                    jne L_error_arg_count_1
 29364 000159F6 488B4520                        mov rax, PARAM(0)
 29365 000159FA 803802                          cmp byte [rax], T_char
 29366 000159FD 750C                            jne .L_false
 29367 000159FF 48B8-                           mov rax, sob_boolean_true
 29367 00015A01 [0300000000000000] 
 29368 00015A09 EB0A                            jmp .L_end
 29369                                  .L_false:
 29370 00015A0B 48B8-                           mov rax, sob_boolean_false
 29370 00015A0D [0200000000000000] 
 29371                                  .L_end:
 29372 00015A15 C9                              leave
 29373 00015A16 C21800                          ret AND_KILL_FRAME(1)
 29374                                  
 29375                                  L_code_ptr_is_string:
 29376 00015A19 C8000000                        enter 0, 0
 29377 00015A1D 48837D1801                      cmp COUNT, 1
 29378 00015A22 0F85D1110000                    jne L_error_arg_count_1
 29379 00015A28 488B4520                        mov rax, PARAM(0)
 29380 00015A2C 803803                          cmp byte [rax], T_string
 29381 00015A2F 750C                            jne .L_false
 29382 00015A31 48B8-                           mov rax, sob_boolean_true
 29382 00015A33 [0300000000000000] 
 29383 00015A3B EB0A                            jmp .L_end
 29384                                  .L_false:
 29385 00015A3D 48B8-                           mov rax, sob_boolean_false
 29385 00015A3F [0200000000000000] 
 29386                                  .L_end:
 29387 00015A47 C9                              leave
 29388 00015A48 C21800                          ret AND_KILL_FRAME(1)
 29389                                  
 29390                                  L_code_ptr_is_symbol:
 29391 00015A4B C8000000                        enter 0, 0
 29392 00015A4F 48837D1801                      cmp COUNT, 1
 29393 00015A54 0F859F110000                    jne L_error_arg_count_1
 29394 00015A5A 4C8B4520                        mov r8, PARAM(0)
 29395 00015A5E 41802040                        and byte [r8], T_symbol
 29396 00015A62 740C                            jz .L_false
 29397 00015A64 48B8-                           mov rax, sob_boolean_true
 29397 00015A66 [0300000000000000] 
 29398 00015A6E EB0A                            jmp .L_exit
 29399                                  .L_false:
 29400 00015A70 48B8-                           mov rax, sob_boolean_false
 29400 00015A72 [0200000000000000] 
 29401                                  .L_exit:
 29402 00015A7A C9                              leave
 29403 00015A7B C21800                          ret AND_KILL_FRAME(1)
 29404                                  
 29405                                  L_code_ptr_is_uninterned_symbol:
 29406 00015A7E C8000000                        enter 0, 0
 29407 00015A82 48837D1801                      cmp COUNT, 1
 29408 00015A87 0F856C110000                    jne L_error_arg_count_1
 29409 00015A8D 4C8B4520                        mov r8, PARAM(0)
 29410 00015A91 41803842                        cmp byte [r8], T_uninterned_symbol
 29411 00015A95 750C                            jne .L_false
 29412 00015A97 48B8-                           mov rax, sob_boolean_true
 29412 00015A99 [0300000000000000] 
 29413 00015AA1 EB0A                            jmp .L_exit
 29414                                  .L_false:
 29415 00015AA3 48B8-                           mov rax, sob_boolean_false
 29415 00015AA5 [0200000000000000] 
 29416                                  .L_exit:
 29417 00015AAD C9                              leave
 29418 00015AAE C21800                          ret AND_KILL_FRAME(1)
 29419                                  
 29420                                  L_code_ptr_is_interned_symbol:
 29421 00015AB1 C8000000                        enter 0, 0
 29422 00015AB5 48837D1801                      cmp COUNT, 1
 29423 00015ABA 0F8539110000                    jne L_error_arg_count_1
 29424 00015AC0 488B4520                        mov rax, PARAM(0)
 29425 00015AC4 803841                          cmp byte [rax], T_interned_symbol
 29426 00015AC7 750C                            jne .L_false
 29427 00015AC9 48B8-                           mov rax, sob_boolean_true
 29427 00015ACB [0300000000000000] 
 29428 00015AD3 EB0A                            jmp .L_end
 29429                                  .L_false:
 29430 00015AD5 48B8-                           mov rax, sob_boolean_false
 29430 00015AD7 [0200000000000000] 
 29431                                  .L_end:
 29432 00015ADF C9                              leave
 29433 00015AE0 C21800                          ret AND_KILL_FRAME(1)
 29434                                  
 29435                                  L_code_ptr_gensym:
 29436 00015AE3 C8000000                        enter 0, 0
 29437 00015AE7 48837D1800                      cmp COUNT, 0
 29438 00015AEC 0F85D2100000                    jne L_error_arg_count_0
 29439 00015AF2 48FF0425[951A0000]              inc qword [gensym_count]
 29440 00015AFA BF09000000                      mov rdi, (1 + 8)
 29441 00015AFF E81EF4FFFF                      call malloc
 29442 00015B04 C60042                          mov byte [rax], T_uninterned_symbol
 29443 00015B07 488B0C25[951A0000]              mov rcx, qword [gensym_count]
 29444 00015B0F 48894801                        mov qword [rax + 1], rcx
 29445 00015B13 C9                              leave
 29446 00015B14 C21000                          ret AND_KILL_FRAME(0)
 29447                                  
 29448                                  L_code_ptr_is_vector:
 29449 00015B17 C8000000                        enter 0, 0
 29450 00015B1B 48837D1801                      cmp COUNT, 1
 29451 00015B20 0F85D3100000                    jne L_error_arg_count_1
 29452 00015B26 488B4520                        mov rax, PARAM(0)
 29453 00015B2A 803822                          cmp byte [rax], T_vector
 29454 00015B2D 750C                            jne .L_false
 29455 00015B2F 48B8-                           mov rax, sob_boolean_true
 29455 00015B31 [0300000000000000] 
 29456 00015B39 EB0A                            jmp .L_end
 29457                                  .L_false:
 29458 00015B3B 48B8-                           mov rax, sob_boolean_false
 29458 00015B3D [0200000000000000] 
 29459                                  .L_end:
 29460 00015B45 C9                              leave
 29461 00015B46 C21800                          ret AND_KILL_FRAME(1)
 29462                                  
 29463                                  L_code_ptr_is_closure:
 29464 00015B49 C8000000                        enter 0, 0
 29465 00015B4D 48837D1801                      cmp COUNT, 1
 29466 00015B52 0F85A1100000                    jne L_error_arg_count_1
 29467 00015B58 488B4520                        mov rax, PARAM(0)
 29468 00015B5C 803804                          cmp byte [rax], T_closure
 29469 00015B5F 750C                            jne .L_false
 29470 00015B61 48B8-                           mov rax, sob_boolean_true
 29470 00015B63 [0300000000000000] 
 29471 00015B6B EB0A                            jmp .L_end
 29472                                  .L_false:
 29473 00015B6D 48B8-                           mov rax, sob_boolean_false
 29473 00015B6F [0200000000000000] 
 29474                                  .L_end:
 29475 00015B77 C9                              leave
 29476 00015B78 C21800                          ret AND_KILL_FRAME(1)
 29477                                  
 29478                                  L_code_ptr_is_real:
 29479 00015B7B C8000000                        enter 0, 0
 29480 00015B7F 48837D1801                      cmp COUNT, 1
 29481 00015B84 0F856F100000                    jne L_error_arg_count_1
 29482 00015B8A 488B4520                        mov rax, PARAM(0)
 29483 00015B8E 803813                          cmp byte [rax], T_real
 29484 00015B91 750C                            jne .L_false
 29485 00015B93 48B8-                           mov rax, sob_boolean_true
 29485 00015B95 [0300000000000000] 
 29486 00015B9D EB0A                            jmp .L_end
 29487                                  .L_false:
 29488 00015B9F 48B8-                           mov rax, sob_boolean_false
 29488 00015BA1 [0200000000000000] 
 29489                                  .L_end:
 29490 00015BA9 C9                              leave
 29491 00015BAA C21800                          ret AND_KILL_FRAME(1)
 29492                                  
 29493                                  L_code_ptr_is_fraction:
 29494 00015BAD C8000000                        enter 0, 0
 29495 00015BB1 48837D1801                      cmp COUNT, 1
 29496 00015BB6 0F853D100000                    jne L_error_arg_count_1
 29497 00015BBC 488B4520                        mov rax, PARAM(0)
 29498 00015BC0 803812                          cmp byte [rax], T_fraction
 29499 00015BC3 750C                            jne .L_false
 29500 00015BC5 48B8-                           mov rax, sob_boolean_true
 29500 00015BC7 [0300000000000000] 
 29501 00015BCF EB0A                            jmp .L_end
 29502                                  .L_false:
 29503 00015BD1 48B8-                           mov rax, sob_boolean_false
 29503 00015BD3 [0200000000000000] 
 29504                                  .L_end:
 29505 00015BDB C9                              leave
 29506 00015BDC C21800                          ret AND_KILL_FRAME(1)
 29507                                  
 29508                                  L_code_ptr_is_boolean:
 29509 00015BDF C8000000                        enter 0, 0
 29510 00015BE3 48837D1801                      cmp COUNT, 1
 29511 00015BE8 0F850B100000                    jne L_error_arg_count_1
 29512 00015BEE 488B4520                        mov rax, PARAM(0)
 29513 00015BF2 8A18                            mov bl, byte [rax]
 29514 00015BF4 80E308                          and bl, T_boolean
 29515 00015BF7 740C                            je .L_false
 29516 00015BF9 48B8-                           mov rax, sob_boolean_true
 29516 00015BFB [0300000000000000] 
 29517 00015C03 EB0A                            jmp .L_end
 29518                                  .L_false:
 29519 00015C05 48B8-                           mov rax, sob_boolean_false
 29519 00015C07 [0200000000000000] 
 29520                                  .L_end:
 29521 00015C0F C9                              leave
 29522 00015C10 C21800                          ret AND_KILL_FRAME(1)
 29523                                          
 29524                                  L_code_ptr_is_boolean_false:
 29525 00015C13 C8000000                        enter 0, 0
 29526 00015C17 48837D1801                      cmp COUNT, 1
 29527 00015C1C 0F85D70F0000                    jne L_error_arg_count_1
 29528 00015C22 488B4520                        mov rax, PARAM(0)
 29529 00015C26 8A18                            mov bl, byte [rax]
 29530 00015C28 80FB09                          cmp bl, T_boolean_false
 29531 00015C2B 750C                            jne .L_false
 29532 00015C2D 48B8-                           mov rax, sob_boolean_true
 29532 00015C2F [0300000000000000] 
 29533 00015C37 EB0A                            jmp .L_end
 29534                                  .L_false:
 29535 00015C39 48B8-                           mov rax, sob_boolean_false
 29535 00015C3B [0200000000000000] 
 29536                                  .L_end:
 29537 00015C43 C9                              leave
 29538 00015C44 C21800                          ret AND_KILL_FRAME(1)
 29539                                  
 29540                                  L_code_ptr_is_boolean_true:
 29541 00015C47 C8000000                        enter 0, 0
 29542 00015C4B 48837D1801                      cmp COUNT, 1
 29543 00015C50 0F85A30F0000                    jne L_error_arg_count_1
 29544 00015C56 488B4520                        mov rax, PARAM(0)
 29545 00015C5A 8A18                            mov bl, byte [rax]
 29546 00015C5C 80FB0A                          cmp bl, T_boolean_true
 29547 00015C5F 750C                            jne .L_false
 29548 00015C61 48B8-                           mov rax, sob_boolean_true
 29548 00015C63 [0300000000000000] 
 29549 00015C6B EB0A                            jmp .L_end
 29550                                  .L_false:
 29551 00015C6D 48B8-                           mov rax, sob_boolean_false
 29551 00015C6F [0200000000000000] 
 29552                                  .L_end:
 29553 00015C77 C9                              leave
 29554 00015C78 C21800                          ret AND_KILL_FRAME(1)
 29555                                  
 29556                                  L_code_ptr_is_number:
 29557 00015C7B C8000000                        enter 0, 0
 29558 00015C7F 48837D1801                      cmp COUNT, 1
 29559 00015C84 0F856F0F0000                    jne L_error_arg_count_1
 29560 00015C8A 488B4520                        mov rax, PARAM(0)
 29561 00015C8E 8A18                            mov bl, byte [rax]
 29562 00015C90 80E310                          and bl, T_number
 29563 00015C93 740C                            jz .L_false
 29564 00015C95 48B8-                           mov rax, sob_boolean_true
 29564 00015C97 [0300000000000000] 
 29565 00015C9F EB0A                            jmp .L_end
 29566                                  .L_false:
 29567 00015CA1 48B8-                           mov rax, sob_boolean_false
 29567 00015CA3 [0200000000000000] 
 29568                                  .L_end:
 29569 00015CAB C9                              leave
 29570 00015CAC C21800                          ret AND_KILL_FRAME(1)
 29571                                          
 29572                                  L_code_ptr_is_collection:
 29573 00015CAF C8000000                        enter 0, 0
 29574 00015CB3 48837D1801                      cmp COUNT, 1
 29575 00015CB8 0F853B0F0000                    jne L_error_arg_count_1
 29576 00015CBE 488B4520                        mov rax, PARAM(0)
 29577 00015CC2 8A18                            mov bl, byte [rax]
 29578 00015CC4 80E320                          and bl, T_collection
 29579 00015CC7 740C                            je .L_false
 29580 00015CC9 48B8-                           mov rax, sob_boolean_true
 29580 00015CCB [0300000000000000] 
 29581 00015CD3 EB0A                            jmp .L_end
 29582                                  .L_false:
 29583 00015CD5 48B8-                           mov rax, sob_boolean_false
 29583 00015CD7 [0200000000000000] 
 29584                                  .L_end:
 29585 00015CDF C9                              leave
 29586 00015CE0 C21800                          ret AND_KILL_FRAME(1)
 29587                                  
 29588                                  L_code_ptr_cons:
 29589 00015CE3 C8000000                        enter 0, 0
 29590 00015CE7 48837D1802                      cmp COUNT, 2
 29591 00015CEC 0F853C0F0000                    jne L_error_arg_count_2
 29592 00015CF2 BF11000000                      mov rdi, (1 + 8 + 8)
 29593 00015CF7 E826F2FFFF                      call malloc
 29594 00015CFC C60021                          mov byte [rax], T_pair
 29595 00015CFF 488B5D20                        mov rbx, PARAM(0)
 29596 00015D03 48895801                        mov SOB_PAIR_CAR(rax), rbx
 29597 00015D07 488B5D28                        mov rbx, PARAM(1)
 29598 00015D0B 48895809                        mov SOB_PAIR_CDR(rax), rbx
 29599 00015D0F C9                              leave
 29600 00015D10 C22000                          ret AND_KILL_FRAME(2)
 29601                                  
 29602                                  L_code_ptr_display_sexpr:
 29603 00015D13 C8000000                        enter 0, 0
 29604 00015D17 48837D1801                      cmp COUNT, 1
 29605 00015D1C 0F85D70E0000                    jne L_error_arg_count_1
 29606 00015D22 488B7D20                        mov rdi, PARAM(0)
 29607 00015D26 E878F4FFFF                      call print_sexpr
 29608 00015D2B 48B8-                           mov rax, sob_void
 29608 00015D2D [0000000000000000] 
 29609 00015D35 C9                              leave
 29610 00015D36 C21800                          ret AND_KILL_FRAME(1)
 29611                                  
 29612                                  L_code_ptr_write_char:
 29613 00015D39 C8000000                        enter 0, 0
 29614 00015D3D 48837D1801                      cmp COUNT, 1
 29615 00015D42 0F85B10E0000                    jne L_error_arg_count_1
 29616 00015D48 488B4520                        mov rax, PARAM(0)
 29617                                          assert_char(rax)
    53 00015D4C 803802              <1>  cmp byte [%1], %2
    54 00015D4F 0F85780F0000        <1>  jne L_error_incorrect_type
 29618 00015D55 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 29619 00015D58 4825FF000000                    and rax, 255
 29620 00015D5E 48BF-                           mov rdi, fmt_char
 29620 00015D60 [9D1A000000000000] 
 29621 00015D68 4889C6                          mov rsi, rax
 29622 00015D6B B800000000                      mov rax, 0
 29623                                          ENTER
    44 00015D70 C8000000            <1>  enter 0, 0
    45 00015D74 4883E4F0            <1>  and rsp, ~15
 29624 00015D78 E8(00000000)                    call printf
 29625                                          LEAVE
    49 00015D7D C9                  <1>  leave
 29626 00015D7E 48B8-                           mov rax, sob_void
 29626 00015D80 [0000000000000000] 
 29627 00015D88 C9                              leave
 29628 00015D89 C21800                          ret AND_KILL_FRAME(1)
 29629                                  
 29630                                  L_code_ptr_car:
 29631 00015D8C C8000000                        enter 0, 0
 29632 00015D90 48837D1801                      cmp COUNT, 1
 29633 00015D95 0F855E0E0000                    jne L_error_arg_count_1
 29634 00015D9B 488B4520                        mov rax, PARAM(0)
 29635                                          assert_pair(rax)
    53 00015D9F 803821              <1>  cmp byte [%1], %2
    54 00015DA2 0F85250F0000        <1>  jne L_error_incorrect_type
 29636 00015DA8 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 29637 00015DAC C9                              leave
 29638 00015DAD C21800                          ret AND_KILL_FRAME(1)
 29639                                          
 29640                                  L_code_ptr_cdr:
 29641 00015DB0 C8000000                        enter 0, 0
 29642 00015DB4 48837D1801                      cmp COUNT, 1
 29643 00015DB9 0F853A0E0000                    jne L_error_arg_count_1
 29644 00015DBF 488B4520                        mov rax, PARAM(0)
 29645                                          assert_pair(rax)
    53 00015DC3 803821              <1>  cmp byte [%1], %2
    54 00015DC6 0F85010F0000        <1>  jne L_error_incorrect_type
 29646 00015DCC 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 29647 00015DD0 C9                              leave
 29648 00015DD1 C21800                          ret AND_KILL_FRAME(1)
 29649                                          
 29650                                  L_code_ptr_string_length:
 29651 00015DD4 C8000000                        enter 0, 0
 29652 00015DD8 48837D1801                      cmp COUNT, 1
 29653 00015DDD 0F85160E0000                    jne L_error_arg_count_1
 29654 00015DE3 488B4520                        mov rax, PARAM(0)
 29655                                          assert_string(rax)
    53 00015DE7 803803              <1>  cmp byte [%1], %2
    54 00015DEA 0F85DD0E0000        <1>  jne L_error_incorrect_type
 29656 00015DF0 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 29657 00015DF4 E84F0D0000                      call make_integer
 29658 00015DF9 C9                              leave
 29659 00015DFA C21800                          ret AND_KILL_FRAME(1)
 29660                                  
 29661                                  L_code_ptr_vector_length:
 29662 00015DFD C8000000                        enter 0, 0
 29663 00015E01 48837D1801                      cmp COUNT, 1
 29664 00015E06 0F85ED0D0000                    jne L_error_arg_count_1
 29665 00015E0C 488B4520                        mov rax, PARAM(0)
 29666                                          assert_vector(rax)
    53 00015E10 803822              <1>  cmp byte [%1], %2
    54 00015E13 0F85B40E0000        <1>  jne L_error_incorrect_type
 29667 00015E19 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 29668 00015E1D E8260D0000                      call make_integer
 29669 00015E22 C9                              leave
 29670 00015E23 C21800                          ret AND_KILL_FRAME(1)
 29671                                  
 29672                                  L_code_ptr_real_to_integer:
 29673 00015E26 C8000000                        enter 0, 0
 29674 00015E2A 48837D1801                      cmp COUNT, 1
 29675 00015E2F 0F85C40D0000                    jne L_error_arg_count_1
 29676 00015E35 488B5D20                        mov rbx, PARAM(0)
 29677                                          assert_real(rbx)
    53 00015E39 803B13              <1>  cmp byte [%1], %2
    54 00015E3C 0F858B0E0000        <1>  jne L_error_incorrect_type
 29678 00015E42 F20F104301                      movsd xmm0, qword [rbx + 1]
 29679 00015E47 F2480F2CF8                      cvttsd2si rdi, xmm0
 29680 00015E4C E8F70C0000                      call make_integer
 29681 00015E51 C9                              leave
 29682 00015E52 C21800                          ret AND_KILL_FRAME(1)
 29683                                  
 29684                                  L_code_ptr_exit:
 29685 00015E55 C8000000                        enter 0, 0
 29686 00015E59 48837D1800                      cmp COUNT, 0
 29687 00015E5E 0F85600D0000                    jne L_error_arg_count_0
 29688 00015E64 B800000000                      mov rax, 0
 29689 00015E69 E8(00000000)                    call exit
 29690                                  
 29691                                  L_code_ptr_integer_to_real:
 29692 00015E6E C8000000                        enter 0, 0
 29693 00015E72 48837D1801                      cmp COUNT, 1
 29694 00015E77 0F857C0D0000                    jne L_error_arg_count_1
 29695 00015E7D 488B4520                        mov rax, PARAM(0)
 29696                                          assert_integer(rax)
    53 00015E81 803811              <1>  cmp byte [%1], %2
    54 00015E84 0F85430E0000        <1>  jne L_error_incorrect_type
 29697 00015E8A FF7001                          push qword [rax + 1]
 29698 00015E8D F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 29699 00015E93 E8980C0000                      call make_real
 29700 00015E98 C9                              leave
 29701 00015E99 C21800                          ret AND_KILL_FRAME(1)
 29702                                  
 29703                                  L_code_ptr_fraction_to_real:
 29704 00015E9C C8000000                        enter 0, 0
 29705 00015EA0 48837D1801                      cmp COUNT, 1
 29706 00015EA5 0F854E0D0000                    jne L_error_arg_count_1
 29707 00015EAB 488B4520                        mov rax, PARAM(0)
 29708                                          assert_fraction(rax)
    53 00015EAF 803812              <1>  cmp byte [%1], %2
    54 00015EB2 0F85150E0000        <1>  jne L_error_incorrect_type
 29709 00015EB8 FF7001                          push qword [rax + 1]
 29710 00015EBB F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 29711 00015EC1 FF7009                          push qword [rax + 1 + 8]
 29712 00015EC4 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 29713 00015ECA F20F5EC1                        divsd xmm0, xmm1
 29714 00015ECE E85D0C0000                      call make_real
 29715 00015ED3 C9                              leave
 29716 00015ED4 C21800                          ret AND_KILL_FRAME(1)
 29717                                  
 29718                                  L_code_ptr_char_to_integer:
 29719 00015ED7 C8000000                        enter 0, 0
 29720 00015EDB 48837D1801                      cmp COUNT, 1
 29721 00015EE0 0F85130D0000                    jne L_error_arg_count_1
 29722 00015EE6 488B4520                        mov rax, PARAM(0)
 29723                                          assert_char(rax)
    53 00015EEA 803802              <1>  cmp byte [%1], %2
    54 00015EED 0F85DA0D0000        <1>  jne L_error_incorrect_type
 29724 00015EF3 8A4001                          mov al, byte [rax + 1]
 29725 00015EF6 4825FF000000                    and rax, 255
 29726 00015EFC 4889C7                          mov rdi, rax
 29727 00015EFF E8440C0000                      call make_integer
 29728 00015F04 C9                              leave
 29729 00015F05 C21800                          ret AND_KILL_FRAME(1)
 29730                                  
 29731                                  L_code_ptr_integer_to_fraction:
 29732 00015F08 C8000000                        enter 0, 0
 29733 00015F0C 48837D1801                      cmp COUNT, 1
 29734 00015F11 0F85E20C0000                    jne L_error_arg_count_1
 29735 00015F17 4C8B4520                        mov r8, PARAM(0)
 29736                                          assert_integer(r8)
    53 00015F1B 41803811            <1>  cmp byte [%1], %2
    54 00015F1F 0F85A80D0000        <1>  jne L_error_incorrect_type
 29737 00015F25 BF11000000                      mov rdi, (1 + 8 + 8)
 29738 00015F2A E8F3EFFFFF                      call malloc
 29739 00015F2F 498B5801                        mov rbx, qword [r8 + 1]
 29740 00015F33 C60012                          mov byte [rax], T_fraction
 29741 00015F36 48895801                        mov qword [rax + 1], rbx
 29742 00015F3A 48C7400901000000                mov qword [rax + 1 + 8], 1
 29743 00015F42 C9                              leave
 29744 00015F43 C21800                          ret AND_KILL_FRAME(1)
 29745                                  
 29746                                  L_code_ptr_integer_to_char:
 29747 00015F46 C8000000                        enter 0, 0
 29748 00015F4A 48837D1801                      cmp COUNT, 1
 29749 00015F4F 0F85A40C0000                    jne L_error_arg_count_1
 29750 00015F55 488B4520                        mov rax, PARAM(0)
 29751                                          assert_integer(rax)
    53 00015F59 803811              <1>  cmp byte [%1], %2
    54 00015F5C 0F856B0D0000        <1>  jne L_error_incorrect_type
 29752 00015F62 488B5801                        mov rbx, qword [rax + 1]
 29753 00015F66 4883FB00                        cmp rbx, 0
 29754 00015F6A 0F8EF20B0000                    jle L_error_integer_range
 29755 00015F70 4881FB00010000                  cmp rbx, 256
 29756 00015F77 0F8DE50B0000                    jge L_error_integer_range
 29757 00015F7D BF02000000                      mov rdi, (1 + 1)
 29758 00015F82 E89BEFFFFF                      call malloc
 29759 00015F87 C60002                          mov byte [rax], T_char
 29760 00015F8A 885801                          mov byte [rax + 1], bl
 29761 00015F8D C9                              leave
 29762 00015F8E C21800                          ret AND_KILL_FRAME(1)
 29763                                  
 29764                                  L_code_ptr_trng:
 29765 00015F91 C8000000                        enter 0, 0
 29766 00015F95 48837D1800                      cmp COUNT, 0
 29767 00015F9A 0F85240C0000                    jne L_error_arg_count_0
 29768 00015FA0 480FC7F7                        rdrand rdi
 29769 00015FA4 48D1EF                          shr rdi, 1
 29770 00015FA7 E89C0B0000                      call make_integer
 29771 00015FAC C9                              leave
 29772 00015FAD C21000                          ret AND_KILL_FRAME(0)
 29773                                  
 29774                                  L_code_ptr_is_zero:
 29775 00015FB0 C8000000                        enter 0, 0
 29776 00015FB4 48837D1801                      cmp COUNT, 1
 29777 00015FB9 0F853A0C0000                    jne L_error_arg_count_1
 29778 00015FBF 488B4520                        mov rax, PARAM(0)
 29779 00015FC3 803811                          cmp byte [rax], T_integer
 29780 00015FC6 740F                            je .L_integer
 29781 00015FC8 803812                          cmp byte [rax], T_fraction
 29782 00015FCB 7413                            je .L_fraction
 29783 00015FCD 803813                          cmp byte [rax], T_real
 29784 00015FD0 7417                            je .L_real
 29785 00015FD2 E9F60C0000                      jmp L_error_incorrect_type
 29786                                  .L_integer:
 29787 00015FD7 4883780100                      cmp qword [rax + 1], 0
 29788 00015FDC 7429                            je .L_zero
 29789 00015FDE EB1B                            jmp .L_not_zero
 29790                                  .L_fraction:
 29791 00015FE0 4883780100                      cmp qword [rax + 1], 0
 29792 00015FE5 7420                            je .L_zero
 29793 00015FE7 EB12                            jmp .L_not_zero
 29794                                  .L_real:
 29795 00015FE9 660FEFC0                        pxor xmm0, xmm0
 29796 00015FED FF7001                          push qword [rax + 1]
 29797 00015FF0 F20F100C24                      movsd xmm1, qword [rsp]
 29798 00015FF5 660F2EC1                        ucomisd xmm0, xmm1
 29799 00015FF9 740C                            je .L_zero
 29800                                  .L_not_zero:
 29801 00015FFB 48B8-                           mov rax, sob_boolean_false
 29801 00015FFD [0200000000000000] 
 29802 00016005 EB0A                            jmp .L_end
 29803                                  .L_zero:
 29804 00016007 48B8-                           mov rax, sob_boolean_true
 29804 00016009 [0300000000000000] 
 29805                                  .L_end:
 29806 00016011 C9                              leave
 29807 00016012 C21800                          ret AND_KILL_FRAME(1)
 29808                                  
 29809                                  L_code_ptr_is_integer:
 29810 00016015 C8000000                        enter 0, 0
 29811 00016019 48837D1801                      cmp COUNT, 1
 29812 0001601E 0F85D50B0000                    jne L_error_arg_count_1
 29813 00016024 488B4520                        mov rax, PARAM(0)
 29814 00016028 803811                          cmp byte [rax], T_integer
 29815 0001602B 750C                            jne .L_false
 29816 0001602D 48B8-                           mov rax, sob_boolean_true
 29816 0001602F [0300000000000000] 
 29817 00016037 EB0A                            jmp .L_exit
 29818                                  .L_false:
 29819 00016039 48B8-                           mov rax, sob_boolean_false
 29819 0001603B [0200000000000000] 
 29820                                  .L_exit:
 29821 00016043 C9                              leave
 29822 00016044 C21800                          ret AND_KILL_FRAME(1)
 29823                                  
 29824                                  L_code_ptr_raw_bin_add_rr:
 29825 00016047 C8000000                        enter 0, 0
 29826 0001604B 48837D1802                      cmp COUNT, 2
 29827 00016050 0F85D80B0000                    jne L_error_arg_count_2
 29828 00016056 488B5D20                        mov rbx, PARAM(0)
 29829                                          assert_real(rbx)
    53 0001605A 803B13              <1>  cmp byte [%1], %2
    54 0001605D 0F856A0C0000        <1>  jne L_error_incorrect_type
 29830 00016063 488B4D28                        mov rcx, PARAM(1)
 29831                                          assert_real(rcx)
    53 00016067 803913              <1>  cmp byte [%1], %2
    54 0001606A 0F855D0C0000        <1>  jne L_error_incorrect_type
 29832 00016070 F20F104301                      movsd xmm0, qword [rbx + 1]
 29833 00016075 F20F104901                      movsd xmm1, qword [rcx + 1]
 29834 0001607A F20F58C1                        addsd xmm0, xmm1
 29835 0001607E E8AD0A0000                      call make_real
 29836 00016083 C9                              leave
 29837 00016084 C22000                          ret AND_KILL_FRAME(2)
 29838                                  
 29839                                  L_code_ptr_raw_bin_sub_rr:
 29840 00016087 C8000000                        enter 0, 0
 29841 0001608B 48837D1802                      cmp COUNT, 2
 29842 00016090 0F85980B0000                    jne L_error_arg_count_2
 29843 00016096 488B5D20                        mov rbx, PARAM(0)
 29844                                          assert_real(rbx)
    53 0001609A 803B13              <1>  cmp byte [%1], %2
    54 0001609D 0F852A0C0000        <1>  jne L_error_incorrect_type
 29845 000160A3 488B4D28                        mov rcx, PARAM(1)
 29846                                          assert_real(rcx)
    53 000160A7 803913              <1>  cmp byte [%1], %2
    54 000160AA 0F851D0C0000        <1>  jne L_error_incorrect_type
 29847 000160B0 F20F104301                      movsd xmm0, qword [rbx + 1]
 29848 000160B5 F20F104901                      movsd xmm1, qword [rcx + 1]
 29849 000160BA F20F5CC1                        subsd xmm0, xmm1
 29850 000160BE E86D0A0000                      call make_real
 29851 000160C3 C9                              leave
 29852 000160C4 C22000                          ret AND_KILL_FRAME(2)
 29853                                  
 29854                                  L_code_ptr_raw_bin_mul_rr:
 29855 000160C7 C8000000                        enter 0, 0
 29856 000160CB 48837D1802                      cmp COUNT, 2
 29857 000160D0 0F85580B0000                    jne L_error_arg_count_2
 29858 000160D6 488B5D20                        mov rbx, PARAM(0)
 29859                                          assert_real(rbx)
    53 000160DA 803B13              <1>  cmp byte [%1], %2
    54 000160DD 0F85EA0B0000        <1>  jne L_error_incorrect_type
 29860 000160E3 488B4D28                        mov rcx, PARAM(1)
 29861                                          assert_real(rcx)
    53 000160E7 803913              <1>  cmp byte [%1], %2
    54 000160EA 0F85DD0B0000        <1>  jne L_error_incorrect_type
 29862 000160F0 F20F104301                      movsd xmm0, qword [rbx + 1]
 29863 000160F5 F20F104901                      movsd xmm1, qword [rcx + 1]
 29864 000160FA F20F59C1                        mulsd xmm0, xmm1
 29865 000160FE E82D0A0000                      call make_real
 29866 00016103 C9                              leave
 29867 00016104 C22000                          ret AND_KILL_FRAME(2)
 29868                                  
 29869                                  L_code_ptr_raw_bin_div_rr:
 29870 00016107 C8000000                        enter 0, 0
 29871 0001610B 48837D1802                      cmp COUNT, 2
 29872 00016110 0F85180B0000                    jne L_error_arg_count_2
 29873 00016116 488B5D20                        mov rbx, PARAM(0)
 29874                                          assert_real(rbx)
    53 0001611A 803B13              <1>  cmp byte [%1], %2
    54 0001611D 0F85AA0B0000        <1>  jne L_error_incorrect_type
 29875 00016123 488B4D28                        mov rcx, PARAM(1)
 29876                                          assert_real(rcx)
    53 00016127 803913              <1>  cmp byte [%1], %2
    54 0001612A 0F859D0B0000        <1>  jne L_error_incorrect_type
 29877 00016130 F20F104301                      movsd xmm0, qword [rbx + 1]
 29878 00016135 F20F104901                      movsd xmm1, qword [rcx + 1]
 29879 0001613A 660FEFD2                        pxor xmm2, xmm2
 29880 0001613E 660F2ECA                        ucomisd xmm1, xmm2
 29881 00016142 0F84B60B0000                    je L_error_division_by_zero
 29882 00016148 F20F5EC1                        divsd xmm0, xmm1
 29883 0001614C E8DF090000                      call make_real
 29884 00016151 C9                              leave
 29885 00016152 C22000                          ret AND_KILL_FRAME(2)
 29886                                  
 29887                                  L_code_ptr_raw_bin_add_zz:
 29888 00016155 C8000000                	enter 0, 0
 29889 00016159 48837D1802              	cmp COUNT, 2
 29890 0001615E 0F85CA0A0000            	jne L_error_arg_count_2
 29891 00016164 4C8B4520                	mov r8, PARAM(0)
 29892                                  	assert_integer(r8)
    53 00016168 41803811            <1>  cmp byte [%1], %2
    54 0001616C 0F855B0B0000        <1>  jne L_error_incorrect_type
 29893 00016172 4C8B4D28                	mov r9, PARAM(1)
 29894                                  	assert_integer(r9)
    53 00016176 41803911            <1>  cmp byte [%1], %2
    54 0001617A 0F854D0B0000        <1>  jne L_error_incorrect_type
 29895 00016180 498B7801                	mov rdi, qword [r8 + 1]
 29896 00016184 49037901                	add rdi, qword [r9 + 1]
 29897 00016188 E8BB090000              	call make_integer
 29898 0001618D C9                      	leave
 29899 0001618E C22000                  	ret AND_KILL_FRAME(2)
 29900                                  
 29901                                  L_code_ptr_raw_bin_add_qq:
 29902 00016191 C8000000                        enter 0, 0
 29903 00016195 48837D1802                      cmp COUNT, 2
 29904 0001619A 0F858E0A0000                    jne L_error_arg_count_2
 29905 000161A0 4C8B4520                        mov r8, PARAM(0)
 29906                                          assert_fraction(r8)
    53 000161A4 41803812            <1>  cmp byte [%1], %2
    54 000161A8 0F851F0B0000        <1>  jne L_error_incorrect_type
 29907 000161AE 4C8B4D28                        mov r9, PARAM(1)
 29908                                          assert_fraction(r9)
    53 000161B2 41803912            <1>  cmp byte [%1], %2
    54 000161B6 0F85110B0000        <1>  jne L_error_incorrect_type
 29909 000161BC 498B4001                        mov rax, qword [r8 + 1] ; num1
 29910 000161C0 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 29911 000161C4 4899                            cqo
 29912 000161C6 48F7EB                          imul rbx
 29913 000161C9 4889C6                          mov rsi, rax
 29914 000161CC 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29915 000161D0 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 29916 000161D4 4899                            cqo
 29917 000161D6 48F7EB                          imul rbx
 29918 000161D9 4801C6                          add rsi, rax
 29919 000161DC 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29920 000161E0 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 29921 000161E4 4899                            cqo
 29922 000161E6 48F7EB                          imul rbx
 29923 000161E9 4889C7                          mov rdi, rax
 29924 000161EC E8DE010000                      call normalize_fraction
 29925 000161F1 C9                              leave
 29926 000161F2 C22000                          ret AND_KILL_FRAME(2)
 29927                                  
 29928                                  L_code_ptr_raw_bin_sub_zz:
 29929 000161F5 C8000000                	enter 0, 0
 29930 000161F9 48837D1802              	cmp COUNT, 2
 29931 000161FE 0F852A0A0000            	jne L_error_arg_count_2
 29932 00016204 4C8B4520                	mov r8, PARAM(0)
 29933                                  	assert_integer(r8)
    53 00016208 41803811            <1>  cmp byte [%1], %2
    54 0001620C 0F85BB0A0000        <1>  jne L_error_incorrect_type
 29934 00016212 4C8B4D28                	mov r9, PARAM(1)
 29935                                  	assert_integer(r9)
    53 00016216 41803911            <1>  cmp byte [%1], %2
    54 0001621A 0F85AD0A0000        <1>  jne L_error_incorrect_type
 29936 00016220 498B7801                	mov rdi, qword [r8 + 1]
 29937 00016224 492B7901                	sub rdi, qword [r9 + 1]
 29938 00016228 E81B090000              	call make_integer
 29939 0001622D C9                      	leave
 29940 0001622E C22000                  	ret AND_KILL_FRAME(2)
 29941                                  
 29942                                  L_code_ptr_raw_bin_sub_qq:
 29943 00016231 C8000000                        enter 0, 0
 29944 00016235 48837D1802                      cmp COUNT, 2
 29945 0001623A 0F85EE090000                    jne L_error_arg_count_2
 29946 00016240 4C8B4520                        mov r8, PARAM(0)
 29947                                          assert_fraction(r8)
    53 00016244 41803812            <1>  cmp byte [%1], %2
    54 00016248 0F857F0A0000        <1>  jne L_error_incorrect_type
 29948 0001624E 4C8B4D28                        mov r9, PARAM(1)
 29949                                          assert_fraction(r9)
    53 00016252 41803912            <1>  cmp byte [%1], %2
    54 00016256 0F85710A0000        <1>  jne L_error_incorrect_type
 29950 0001625C 498B4001                        mov rax, qword [r8 + 1] ; num1
 29951 00016260 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 29952 00016264 4899                            cqo
 29953 00016266 48F7EB                          imul rbx
 29954 00016269 4889C6                          mov rsi, rax
 29955 0001626C 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29956 00016270 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 29957 00016274 4899                            cqo
 29958 00016276 48F7EB                          imul rbx
 29959 00016279 4829C6                          sub rsi, rax
 29960 0001627C 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29961 00016280 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 29962 00016284 4899                            cqo
 29963 00016286 48F7EB                          imul rbx
 29964 00016289 4889C7                          mov rdi, rax
 29965 0001628C E83E010000                      call normalize_fraction
 29966 00016291 C9                              leave
 29967 00016292 C22000                          ret AND_KILL_FRAME(2)
 29968                                  
 29969                                  L_code_ptr_raw_bin_mul_zz:
 29970 00016295 C8000000                	enter 0, 0
 29971 00016299 48837D1802              	cmp COUNT, 2
 29972 0001629E 0F858A090000            	jne L_error_arg_count_2
 29973 000162A4 4C8B4520                	mov r8, PARAM(0)
 29974                                  	assert_integer(r8)
    53 000162A8 41803811            <1>  cmp byte [%1], %2
    54 000162AC 0F851B0A0000        <1>  jne L_error_incorrect_type
 29975 000162B2 4C8B4D28                	mov r9, PARAM(1)
 29976                                  	assert_integer(r9)
    53 000162B6 41803911            <1>  cmp byte [%1], %2
    54 000162BA 0F850D0A0000        <1>  jne L_error_incorrect_type
 29977 000162C0 4899                    	cqo
 29978 000162C2 498B4001                	mov rax, qword [r8 + 1]
 29979 000162C6 49F76101                	mul qword [r9 + 1]
 29980 000162CA 4889C7                  	mov rdi, rax
 29981 000162CD E876080000              	call make_integer
 29982 000162D2 C9                      	leave
 29983 000162D3 C22000                  	ret AND_KILL_FRAME(2)
 29984                                  
 29985                                  L_code_ptr_raw_bin_mul_qq:
 29986 000162D6 C8000000                        enter 0, 0
 29987 000162DA 48837D1802                      cmp COUNT, 2
 29988 000162DF 0F8549090000                    jne L_error_arg_count_2
 29989 000162E5 4C8B4520                        mov r8, PARAM(0)
 29990                                          assert_fraction(r8)
    53 000162E9 41803812            <1>  cmp byte [%1], %2
    54 000162ED 0F85DA090000        <1>  jne L_error_incorrect_type
 29991 000162F3 4C8B4D28                        mov r9, PARAM(1)
 29992                                          assert_fraction(r9)
    53 000162F7 41803912            <1>  cmp byte [%1], %2
    54 000162FB 0F85CC090000        <1>  jne L_error_incorrect_type
 29993 00016301 498B4001                        mov rax, qword [r8 + 1] ; num1
 29994 00016305 498B5901                        mov rbx, qword [r9 + 1] ; num2
 29995 00016309 4899                            cqo
 29996 0001630B 48F7EB                          imul rbx
 29997 0001630E 4889C6                          mov rsi, rax
 29998 00016311 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29999 00016315 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30000 00016319 4899                            cqo
 30001 0001631B 48F7EB                          imul rbx
 30002 0001631E 4889C7                          mov rdi, rax
 30003 00016321 E8A9000000                      call normalize_fraction
 30004 00016326 C9                              leave
 30005 00016327 C22000                          ret AND_KILL_FRAME(2)
 30006                                          
 30007                                  L_code_ptr_raw_bin_div_zz:
 30008 0001632A C8000000                	enter 0, 0
 30009 0001632E 48837D1802              	cmp COUNT, 2
 30010 00016333 0F85F5080000            	jne L_error_arg_count_2
 30011 00016339 4C8B4520                	mov r8, PARAM(0)
 30012                                  	assert_integer(r8)
    53 0001633D 41803811            <1>  cmp byte [%1], %2
    54 00016341 0F8586090000        <1>  jne L_error_incorrect_type
 30013 00016347 4C8B4D28                	mov r9, PARAM(1)
 30014                                  	assert_integer(r9)
    53 0001634B 41803911            <1>  cmp byte [%1], %2
    54 0001634F 0F8578090000        <1>  jne L_error_incorrect_type
 30015 00016355 498B7901                	mov rdi, qword [r9 + 1]
 30016 00016359 4883FF00                	cmp rdi, 0
 30017 0001635D 0F849B090000            	je L_error_division_by_zero
 30018 00016363 498B7001                	mov rsi, qword [r8 + 1]
 30019 00016367 E863000000              	call normalize_fraction
 30020 0001636C C9                      	leave
 30021 0001636D C22000                  	ret AND_KILL_FRAME(2)
 30022                                  
 30023                                  L_code_ptr_raw_bin_div_qq:
 30024 00016370 C8000000                        enter 0, 0
 30025 00016374 48837D1802                      cmp COUNT, 2
 30026 00016379 0F85AF080000                    jne L_error_arg_count_2
 30027 0001637F 4C8B4520                        mov r8, PARAM(0)
 30028                                          assert_fraction(r8)
    53 00016383 41803812            <1>  cmp byte [%1], %2
    54 00016387 0F8540090000        <1>  jne L_error_incorrect_type
 30029 0001638D 4C8B4D28                        mov r9, PARAM(1)
 30030                                          assert_fraction(r9)
    53 00016391 41803912            <1>  cmp byte [%1], %2
    54 00016395 0F8532090000        <1>  jne L_error_incorrect_type
 30031 0001639B 4983790100                      cmp qword [r9 + 1], 0
 30032 000163A0 0F8458090000                    je L_error_division_by_zero
 30033 000163A6 498B4001                        mov rax, qword [r8 + 1] ; num1
 30034 000163AA 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30035 000163AE 4899                            cqo
 30036 000163B0 48F7EB                          imul rbx
 30037 000163B3 4889C6                          mov rsi, rax
 30038 000163B6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30039 000163BA 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30040 000163BE 4899                            cqo
 30041 000163C0 48F7EB                          imul rbx
 30042 000163C3 4889C7                          mov rdi, rax
 30043 000163C6 E804000000                      call normalize_fraction
 30044 000163CB C9                              leave
 30045 000163CC C22000                          ret AND_KILL_FRAME(2)
 30046                                          
 30047                                  normalize_fraction:
 30048 000163CF 56                              push rsi
 30049 000163D0 57                              push rdi
 30050 000163D1 E859000000                      call gcd
 30051 000163D6 4889C3                          mov rbx, rax
 30052 000163D9 58                              pop rax
 30053 000163DA 4899                            cqo
 30054 000163DC 48F7FB                          idiv rbx
 30055 000163DF 4989C0                          mov r8, rax
 30056 000163E2 58                              pop rax
 30057 000163E3 4899                            cqo
 30058 000163E5 48F7FB                          idiv rbx
 30059 000163E8 4989C1                          mov r9, rax
 30060 000163EB 4983F900                        cmp r9, 0
 30061 000163EF 741C                            je .L_zero
 30062 000163F1 4983F801                        cmp r8, 1
 30063 000163F5 7421                            je .L_int
 30064 000163F7 BF11000000                      mov rdi, (1 + 8 + 8)
 30065 000163FC E821EBFFFF                      call malloc
 30066 00016401 C60012                          mov byte [rax], T_fraction
 30067 00016404 4C894801                        mov qword [rax + 1], r9
 30068 00016408 4C894009                        mov qword [rax + 1 + 8], r8
 30069 0001640C C3                              ret
 30070                                  .L_zero:
 30071 0001640D BF00000000                      mov rdi, 0
 30072 00016412 E831070000                      call make_integer
 30073 00016417 C3                              ret
 30074                                  .L_int:
 30075 00016418 4C89CF                          mov rdi, r9
 30076 0001641B E828070000                      call make_integer
 30077 00016420 C3                              ret
 30078                                  
 30079                                  iabs:
 30080 00016421 4889F8                          mov rax, rdi
 30081 00016424 4883F800                        cmp rax, 0
 30082 00016428 7C01                            jl .Lneg
 30083 0001642A C3                              ret
 30084                                  .Lneg:
 30085 0001642B 48F7D8                          neg rax
 30086 0001642E C3                              ret
 30087                                  
 30088                                  gcd:
 30089 0001642F E8EDFFFFFF                      call iabs
 30090 00016434 4889C3                          mov rbx, rax
 30091 00016437 4889F7                          mov rdi, rsi
 30092 0001643A E8E2FFFFFF                      call iabs
 30093 0001643F 4883F800                        cmp rax, 0
 30094 00016443 7502                            jne .L0
 30095 00016445 4893                            xchg rax, rbx
 30096                                  .L0:
 30097 00016447 4883FB00                        cmp rbx, 0
 30098 0001644B 740C                            je .L1
 30099 0001644D 4899                            cqo
 30100 0001644F 48F7F3                          div rbx
 30101 00016452 4889D0                          mov rax, rdx
 30102 00016455 4893                            xchg rax, rbx
 30103 00016457 EBEE                            jmp .L0
 30104                                  .L1:
 30105 00016459 C3                              ret
 30106                                  
 30107                                  L_code_ptr_error:
 30108 0001645A C8000000                        enter 0, 0
 30109 0001645E 48837D1802                      cmp COUNT, 2
 30110 00016463 0F85C5070000                    jne L_error_arg_count_2
 30111 00016469 488B7520                        mov rsi, PARAM(0)
 30112                                          assert_interned_symbol(rsi)
    53 0001646D 803E41              <1>  cmp byte [%1], %2
    54 00016470 0F8557080000        <1>  jne L_error_incorrect_type
 30113 00016476 488B7528                        mov rsi, PARAM(1)
 30114                                          assert_string(rsi)
    53 0001647A 803E03              <1>  cmp byte [%1], %2
    54 0001647D 0F854A080000        <1>  jne L_error_incorrect_type
 30115 00016483 48BF-                           mov rdi, fmt_scheme_error_part_1
 30115 00016485 [FB1B000000000000] 
 30116 0001648D B800000000                      mov rax, 0
 30117                                          ENTER
    44 00016492 C8000000            <1>  enter 0, 0
    45 00016496 4883E4F0            <1>  and rsp, ~15
 30118 0001649A E8(00000000)                    call printf
 30119                                          LEAVE
    49 0001649F C9                  <1>  leave
 30120 000164A0 488B7D20                        mov rdi, PARAM(0)
 30121 000164A4 E8FAECFFFF                      call print_sexpr
 30122 000164A9 48BF-                           mov rdi, fmt_scheme_error_part_2
 30122 000164AB [0F1C000000000000] 
 30123 000164B3 B800000000                      mov rax, 0
 30124                                          ENTER
    44 000164B8 C8000000            <1>  enter 0, 0
    45 000164BC 4883E4F0            <1>  and rsp, ~15
 30125 000164C0 E8(00000000)                    call printf
 30126                                          LEAVE
    49 000164C5 C9                  <1>  leave
 30127 000164C6 488B4528                        mov rax, PARAM(1)       ; sob_string
 30128 000164CA BE01000000                      mov rsi, 1              ; size = 1 byte
 30129 000164CF 488B5001                        mov rdx, qword [rax + 1] ; length
 30130 000164D3 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 30131 000164D7 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 30132                                  	ENTER
    44 000164DF C8000000            <1>  enter 0, 0
    45 000164E3 4883E4F0            <1>  and rsp, ~15
 30133 000164E7 E8(00000000)                    call fwrite
 30134                                  	LEAVE
    49 000164EC C9                  <1>  leave
 30135 000164ED 48BF-                           mov rdi, fmt_scheme_error_part_3
 30135 000164EF [511C000000000000] 
 30136 000164F7 B800000000                      mov rax, 0
 30137                                          ENTER
    44 000164FC C8000000            <1>  enter 0, 0
    45 00016500 4883E4F0            <1>  and rsp, ~15
 30138 00016504 E8(00000000)                    call printf
 30139                                          LEAVE
    49 00016509 C9                  <1>  leave
 30140 0001650A 48C7C0F7FFFFFF                  mov rax, -9
 30141 00016511 E8(00000000)                    call exit
 30142                                  
 30143                                  L_code_ptr_raw_less_than_rr:
 30144 00016516 C8000000                        enter 0, 0
 30145 0001651A 48837D1802                      cmp COUNT, 2
 30146 0001651F 0F8509070000                    jne L_error_arg_count_2
 30147 00016525 488B7520                        mov rsi, PARAM(0)
 30148                                          assert_real(rsi)
    53 00016529 803E13              <1>  cmp byte [%1], %2
    54 0001652C 0F859B070000        <1>  jne L_error_incorrect_type
 30149 00016532 488B7D28                        mov rdi, PARAM(1)
 30150                                          assert_real(rdi)
    53 00016536 803F13              <1>  cmp byte [%1], %2
    54 00016539 0F858E070000        <1>  jne L_error_incorrect_type
 30151 0001653F F20F104601                      movsd xmm0, qword [rsi + 1]
 30152 00016544 F20F104F01                      movsd xmm1, qword [rdi + 1]
 30153 00016549 660F2FC1                        comisd xmm0, xmm1
 30154 0001654D 730C                            jae .L_false
 30155 0001654F 48B8-                           mov rax, sob_boolean_true
 30155 00016551 [0300000000000000] 
 30156 00016559 EB0A                            jmp .L_exit
 30157                                  .L_false:
 30158 0001655B 48B8-                           mov rax, sob_boolean_false
 30158 0001655D [0200000000000000] 
 30159                                  .L_exit:
 30160 00016565 C9                              leave
 30161 00016566 C22000                          ret AND_KILL_FRAME(2)
 30162                                          
 30163                                  L_code_ptr_raw_less_than_zz:
 30164 00016569 C8000000                	enter 0, 0
 30165 0001656D 48837D1802              	cmp COUNT, 2
 30166 00016572 0F85B6060000            	jne L_error_arg_count_2
 30167 00016578 4C8B4520                	mov r8, PARAM(0)
 30168                                  	assert_integer(r8)
    53 0001657C 41803811            <1>  cmp byte [%1], %2
    54 00016580 0F8547070000        <1>  jne L_error_incorrect_type
 30169 00016586 4C8B4D28                	mov r9, PARAM(1)
 30170                                  	assert_integer(r9)
    53 0001658A 41803911            <1>  cmp byte [%1], %2
    54 0001658E 0F8539070000        <1>  jne L_error_incorrect_type
 30171 00016594 498B7801                	mov rdi, qword [r8 + 1]
 30172 00016598 493B7901                	cmp rdi, qword [r9 + 1]
 30173 0001659C 7D0C                    	jge .L_false
 30174 0001659E 48B8-                   	mov rax, sob_boolean_true
 30174 000165A0 [0300000000000000] 
 30175 000165A8 EB0A                    	jmp .L_exit
 30176                                  .L_false:
 30177 000165AA 48B8-                   	mov rax, sob_boolean_false
 30177 000165AC [0200000000000000] 
 30178                                  .L_exit:
 30179 000165B4 C9                      	leave
 30180 000165B5 C22000                  	ret AND_KILL_FRAME(2)
 30181                                  
 30182                                  L_code_ptr_raw_less_than_qq:
 30183 000165B8 C8000000                        enter 0, 0
 30184 000165BC 48837D1802                      cmp COUNT, 2
 30185 000165C1 0F8567060000                    jne L_error_arg_count_2
 30186 000165C7 488B7520                        mov rsi, PARAM(0)
 30187                                          assert_fraction(rsi)
    53 000165CB 803E12              <1>  cmp byte [%1], %2
    54 000165CE 0F85F9060000        <1>  jne L_error_incorrect_type
 30188 000165D4 488B7D28                        mov rdi, PARAM(1)
 30189                                          assert_fraction(rdi)
    53 000165D8 803F12              <1>  cmp byte [%1], %2
    54 000165DB 0F85EC060000        <1>  jne L_error_incorrect_type
 30190 000165E1 488B4601                        mov rax, qword [rsi + 1] ; num1
 30191 000165E5 4899                            cqo
 30192 000165E7 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 30193 000165EB 4889C1                          mov rcx, rax
 30194 000165EE 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 30195 000165F2 4899                            cqo
 30196 000165F4 48F76F01                        imul qword [rdi + 1]          ; num2
 30197 000165F8 4829C1                          sub rcx, rax
 30198 000165FB 7D0C                            jge .L_false
 30199 000165FD 48B8-                           mov rax, sob_boolean_true
 30199 000165FF [0300000000000000] 
 30200 00016607 EB0A                            jmp .L_exit
 30201                                  .L_false:
 30202 00016609 48B8-                           mov rax, sob_boolean_false
 30202 0001660B [0200000000000000] 
 30203                                  .L_exit:
 30204 00016613 C9                              leave
 30205 00016614 C22000                          ret AND_KILL_FRAME(2)
 30206                                  
 30207                                  L_code_ptr_raw_equal_rr:
 30208 00016617 C8000000                        enter 0, 0
 30209 0001661B 48837D1802                      cmp COUNT, 2
 30210 00016620 0F8508060000                    jne L_error_arg_count_2
 30211 00016626 488B7520                        mov rsi, PARAM(0)
 30212                                          assert_real(rsi)
    53 0001662A 803E13              <1>  cmp byte [%1], %2
    54 0001662D 0F859A060000        <1>  jne L_error_incorrect_type
 30213 00016633 488B7D28                        mov rdi, PARAM(1)
 30214                                          assert_real(rdi)
    53 00016637 803F13              <1>  cmp byte [%1], %2
    54 0001663A 0F858D060000        <1>  jne L_error_incorrect_type
 30215 00016640 F20F104601                      movsd xmm0, qword [rsi + 1]
 30216 00016645 F20F104F01                      movsd xmm1, qword [rdi + 1]
 30217 0001664A 660F2FC1                        comisd xmm0, xmm1
 30218 0001664E 750C                            jne .L_false
 30219 00016650 48B8-                           mov rax, sob_boolean_true
 30219 00016652 [0300000000000000] 
 30220 0001665A EB0A                            jmp .L_exit
 30221                                  .L_false:
 30222 0001665C 48B8-                           mov rax, sob_boolean_false
 30222 0001665E [0200000000000000] 
 30223                                  .L_exit:
 30224 00016666 C9                              leave
 30225 00016667 C22000                          ret AND_KILL_FRAME(2)
 30226                                          
 30227                                  L_code_ptr_raw_equal_zz:
 30228 0001666A C8000000                	enter 0, 0
 30229 0001666E 48837D1802              	cmp COUNT, 2
 30230 00016673 0F85B5050000            	jne L_error_arg_count_2
 30231 00016679 4C8B4520                	mov r8, PARAM(0)
 30232                                  	assert_integer(r8)
    53 0001667D 41803811            <1>  cmp byte [%1], %2
    54 00016681 0F8546060000        <1>  jne L_error_incorrect_type
 30233 00016687 4C8B4D28                	mov r9, PARAM(1)
 30234                                  	assert_integer(r9)
    53 0001668B 41803911            <1>  cmp byte [%1], %2
    54 0001668F 0F8538060000        <1>  jne L_error_incorrect_type
 30235 00016695 498B7801                	mov rdi, qword [r8 + 1]
 30236 00016699 493B7901                	cmp rdi, qword [r9 + 1]
 30237 0001669D 750C                    	jne .L_false
 30238 0001669F 48B8-                   	mov rax, sob_boolean_true
 30238 000166A1 [0300000000000000] 
 30239 000166A9 EB0A                    	jmp .L_exit
 30240                                  .L_false:
 30241 000166AB 48B8-                   	mov rax, sob_boolean_false
 30241 000166AD [0200000000000000] 
 30242                                  .L_exit:
 30243 000166B5 C9                      	leave
 30244 000166B6 C22000                  	ret AND_KILL_FRAME(2)
 30245                                  
 30246                                  L_code_ptr_raw_equal_qq:
 30247 000166B9 C8000000                        enter 0, 0
 30248 000166BD 48837D1802                      cmp COUNT, 2
 30249 000166C2 0F8566050000                    jne L_error_arg_count_2
 30250 000166C8 488B7520                        mov rsi, PARAM(0)
 30251                                          assert_fraction(rsi)
    53 000166CC 803E12              <1>  cmp byte [%1], %2
    54 000166CF 0F85F8050000        <1>  jne L_error_incorrect_type
 30252 000166D5 488B7D28                        mov rdi, PARAM(1)
 30253                                          assert_fraction(rdi)
    53 000166D9 803F12              <1>  cmp byte [%1], %2
    54 000166DC 0F85EB050000        <1>  jne L_error_incorrect_type
 30254 000166E2 488B4601                        mov rax, qword [rsi + 1] ; num1
 30255 000166E6 4899                            cqo
 30256 000166E8 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 30257 000166EC 4889C1                          mov rcx, rax
 30258 000166EF 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 30259 000166F3 4899                            cqo
 30260 000166F5 48F76F01                        imul qword [rdi + 1]          ; num2
 30261 000166F9 4829C1                          sub rcx, rax
 30262 000166FC 750C                            jne .L_false
 30263 000166FE 48B8-                           mov rax, sob_boolean_true
 30263 00016700 [0300000000000000] 
 30264 00016708 EB0A                            jmp .L_exit
 30265                                  .L_false:
 30266 0001670A 48B8-                           mov rax, sob_boolean_false
 30266 0001670C [0200000000000000] 
 30267                                  .L_exit:
 30268 00016714 C9                              leave
 30269 00016715 C22000                          ret AND_KILL_FRAME(2)
 30270                                  
 30271                                  L_code_ptr_quotient:
 30272 00016718 C8000000                        enter 0, 0
 30273 0001671C 48837D1802                      cmp COUNT, 2
 30274 00016721 0F8507050000                    jne L_error_arg_count_2
 30275 00016727 488B7520                        mov rsi, PARAM(0)
 30276                                          assert_integer(rsi)
    53 0001672B 803E11              <1>  cmp byte [%1], %2
    54 0001672E 0F8599050000        <1>  jne L_error_incorrect_type
 30277 00016734 488B7D28                        mov rdi, PARAM(1)
 30278                                          assert_integer(rdi)
    53 00016738 803F11              <1>  cmp byte [%1], %2
    54 0001673B 0F858C050000        <1>  jne L_error_incorrect_type
 30279 00016741 488B4601                        mov rax, qword [rsi + 1]
 30280 00016745 488B5F01                        mov rbx, qword [rdi + 1]
 30281 00016749 4883FB00                        cmp rbx, 0
 30282 0001674D 0F84AB050000                    je L_error_division_by_zero
 30283 00016753 4899                            cqo
 30284 00016755 48F7FB                          idiv rbx
 30285 00016758 4889C7                          mov rdi, rax
 30286 0001675B E8E8030000                      call make_integer
 30287 00016760 C9                              leave
 30288 00016761 C22000                          ret AND_KILL_FRAME(2)
 30289                                          
 30290                                  L_code_ptr_remainder:
 30291 00016764 C8000000                        enter 0, 0
 30292 00016768 48837D1802                      cmp COUNT, 2
 30293 0001676D 0F85BB040000                    jne L_error_arg_count_2
 30294 00016773 488B7520                        mov rsi, PARAM(0)
 30295                                          assert_integer(rsi)
    53 00016777 803E11              <1>  cmp byte [%1], %2
    54 0001677A 0F854D050000        <1>  jne L_error_incorrect_type
 30296 00016780 488B7D28                        mov rdi, PARAM(1)
 30297                                          assert_integer(rdi)
    53 00016784 803F11              <1>  cmp byte [%1], %2
    54 00016787 0F8540050000        <1>  jne L_error_incorrect_type
 30298 0001678D 488B4601                        mov rax, qword [rsi + 1]
 30299 00016791 488B5F01                        mov rbx, qword [rdi + 1]
 30300 00016795 4883FB00                        cmp rbx, 0
 30301 00016799 0F845F050000                    je L_error_division_by_zero
 30302 0001679F 4899                            cqo
 30303 000167A1 48F7FB                          idiv rbx
 30304 000167A4 4889D7                          mov rdi, rdx
 30305 000167A7 E89C030000                      call make_integer
 30306 000167AC C9                              leave
 30307 000167AD C22000                          ret AND_KILL_FRAME(2)
 30308                                  
 30309                                  L_code_ptr_set_car:
 30310 000167B0 C8000000                        enter 0, 0
 30311 000167B4 48837D1802                      cmp COUNT, 2
 30312 000167B9 0F856F040000                    jne L_error_arg_count_2
 30313 000167BF 488B4520                        mov rax, PARAM(0)
 30314                                          assert_pair(rax)
    53 000167C3 803821              <1>  cmp byte [%1], %2
    54 000167C6 0F8501050000        <1>  jne L_error_incorrect_type
 30315 000167CC 488B5D28                        mov rbx, PARAM(1)
 30316 000167D0 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30317 000167D4 48B8-                           mov rax, sob_void
 30317 000167D6 [0000000000000000] 
 30318 000167DE C9                              leave
 30319 000167DF C22000                          ret AND_KILL_FRAME(2)
 30320                                  
 30321                                  L_code_ptr_set_cdr:
 30322 000167E2 C8000000                        enter 0, 0
 30323 000167E6 48837D1802                      cmp COUNT, 2
 30324 000167EB 0F853D040000                    jne L_error_arg_count_2
 30325 000167F1 488B4520                        mov rax, PARAM(0)
 30326                                          assert_pair(rax)
    53 000167F5 803821              <1>  cmp byte [%1], %2
    54 000167F8 0F85CF040000        <1>  jne L_error_incorrect_type
 30327 000167FE 488B5D28                        mov rbx, PARAM(1)
 30328 00016802 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30329 00016806 48B8-                           mov rax, sob_void
 30329 00016808 [0000000000000000] 
 30330 00016810 C9                              leave
 30331 00016811 C22000                          ret AND_KILL_FRAME(2)
 30332                                  
 30333                                  L_code_ptr_string_ref:
 30334 00016814 C8000000                        enter 0, 0
 30335 00016818 48837D1802                      cmp COUNT, 2
 30336 0001681D 0F850B040000                    jne L_error_arg_count_2
 30337 00016823 488B7D20                        mov rdi, PARAM(0)
 30338                                          assert_string(rdi)
    53 00016827 803F03              <1>  cmp byte [%1], %2
    54 0001682A 0F859D040000        <1>  jne L_error_incorrect_type
 30339 00016830 488B7528                        mov rsi, PARAM(1)
 30340                                          assert_integer(rsi)
    53 00016834 803E11              <1>  cmp byte [%1], %2
    54 00016837 0F8590040000        <1>  jne L_error_incorrect_type
 30341 0001683D 488B5701                        mov rdx, qword [rdi + 1]
 30342 00016841 488B4E01                        mov rcx, qword [rsi + 1]
 30343 00016845 4839D1                          cmp rcx, rdx
 30344 00016848 0F8D14030000                    jge L_error_integer_range
 30345 0001684E 4883F900                        cmp rcx, 0
 30346 00016852 0F8C0A030000                    jl L_error_integer_range
 30347 00016858 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 30348 0001685C BF02000000                      mov rdi, 2
 30349 00016861 E8BCE6FFFF                      call malloc
 30350 00016866 C60002                          mov byte [rax], T_char
 30351 00016869 885801                          mov byte [rax + 1], bl
 30352 0001686C C9                              leave
 30353 0001686D C22000                          ret AND_KILL_FRAME(2)
 30354                                  
 30355                                  L_code_ptr_vector_ref:
 30356 00016870 C8000000                        enter 0, 0
 30357 00016874 48837D1802                      cmp COUNT, 2
 30358 00016879 0F85AF030000                    jne L_error_arg_count_2
 30359 0001687F 488B7D20                        mov rdi, PARAM(0)
 30360                                          assert_vector(rdi)
    53 00016883 803F22              <1>  cmp byte [%1], %2
    54 00016886 0F8541040000        <1>  jne L_error_incorrect_type
 30361 0001688C 488B7528                        mov rsi, PARAM(1)
 30362                                          assert_integer(rsi)
    53 00016890 803E11              <1>  cmp byte [%1], %2
    54 00016893 0F8534040000        <1>  jne L_error_incorrect_type
 30363 00016899 488B5701                        mov rdx, qword [rdi + 1]
 30364 0001689D 488B4E01                        mov rcx, qword [rsi + 1]
 30365 000168A1 4839D1                          cmp rcx, rdx
 30366 000168A4 0F8DB8020000                    jge L_error_integer_range
 30367 000168AA 4883F900                        cmp rcx, 0
 30368 000168AE 0F8CAE020000                    jl L_error_integer_range
 30369 000168B4 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 30370 000168B9 C9                              leave
 30371 000168BA C22000                          ret AND_KILL_FRAME(2)
 30372                                  
 30373                                  L_code_ptr_vector_set:
 30374 000168BD C8000000                        enter 0, 0
 30375 000168C1 48837D1803                      cmp COUNT, 3
 30376 000168C6 0F85CC030000                    jne L_error_arg_count_3
 30377 000168CC 488B7D20                        mov rdi, PARAM(0)
 30378                                          assert_vector(rdi)
    53 000168D0 803F22              <1>  cmp byte [%1], %2
    54 000168D3 0F85F4030000        <1>  jne L_error_incorrect_type
 30379 000168D9 488B7528                        mov rsi, PARAM(1)
 30380                                          assert_integer(rsi)
    53 000168DD 803E11              <1>  cmp byte [%1], %2
    54 000168E0 0F85E7030000        <1>  jne L_error_incorrect_type
 30381 000168E6 488B5701                        mov rdx, qword [rdi + 1]
 30382 000168EA 488B4E01                        mov rcx, qword [rsi + 1]
 30383 000168EE 4839D1                          cmp rcx, rdx
 30384 000168F1 0F8D6B020000                    jge L_error_integer_range
 30385 000168F7 4883F900                        cmp rcx, 0
 30386 000168FB 0F8C61020000                    jl L_error_integer_range
 30387 00016901 488B4530                        mov rax, PARAM(2)
 30388 00016905 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 30389 0001690A 48B8-                           mov rax, sob_void
 30389 0001690C [0000000000000000] 
 30390 00016914 C9                              leave
 30391 00016915 C22800                          ret AND_KILL_FRAME(3)
 30392                                  
 30393                                  L_code_ptr_string_set:
 30394 00016918 C8000000                        enter 0, 0
 30395 0001691C 48837D1803                      cmp COUNT, 3
 30396 00016921 0F8571030000                    jne L_error_arg_count_3
 30397 00016927 488B7D20                        mov rdi, PARAM(0)
 30398                                          assert_string(rdi)
    53 0001692B 803F03              <1>  cmp byte [%1], %2
    54 0001692E 0F8599030000        <1>  jne L_error_incorrect_type
 30399 00016934 488B7528                        mov rsi, PARAM(1)
 30400                                          assert_integer(rsi)
    53 00016938 803E11              <1>  cmp byte [%1], %2
    54 0001693B 0F858C030000        <1>  jne L_error_incorrect_type
 30401 00016941 488B5701                        mov rdx, qword [rdi + 1]
 30402 00016945 488B4E01                        mov rcx, qword [rsi + 1]
 30403 00016949 4839D1                          cmp rcx, rdx
 30404 0001694C 0F8D10020000                    jge L_error_integer_range
 30405 00016952 4883F900                        cmp rcx, 0
 30406 00016956 0F8C06020000                    jl L_error_integer_range
 30407 0001695C 488B4530                        mov rax, PARAM(2)
 30408                                          assert_char(rax)
    53 00016960 803802              <1>  cmp byte [%1], %2
    54 00016963 0F8564030000        <1>  jne L_error_incorrect_type
 30409 00016969 8A4001                          mov al, byte [rax + 1]
 30410 0001696C 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 30411 00016970 48B8-                           mov rax, sob_void
 30411 00016972 [0000000000000000] 
 30412 0001697A C9                              leave
 30413 0001697B C22800                          ret AND_KILL_FRAME(3)
 30414                                  
 30415                                  L_code_ptr_make_vector:
 30416 0001697E C8000000                        enter 0, 0
 30417 00016982 48837D1802                      cmp COUNT, 2
 30418 00016987 0F85A1020000                    jne L_error_arg_count_2
 30419 0001698D 488B4D20                        mov rcx, PARAM(0)
 30420                                          assert_integer(rcx)
    53 00016991 803911              <1>  cmp byte [%1], %2
    54 00016994 0F8533030000        <1>  jne L_error_incorrect_type
 30421 0001699A 488B4901                        mov rcx, qword [rcx + 1]
 30422 0001699E 4883F900                        cmp rcx, 0
 30423 000169A2 0F8CBA010000                    jl L_error_integer_range
 30424 000169A8 488B5528                        mov rdx, PARAM(1)
 30425 000169AC 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 30426 000169B4 E869E5FFFF                      call malloc
 30427 000169B9 C60022                          mov byte [rax], T_vector
 30428 000169BC 48894801                        mov qword [rax + 1], rcx
 30429 000169C0 41B800000000                    mov r8, 0
 30430                                  .L0:
 30431 000169C6 4939C8                          cmp r8, rcx
 30432 000169C9 740A                            je .L1
 30433 000169CB 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 30434 000169D0 49FFC0                          inc r8
 30435 000169D3 EBF1                            jmp .L0
 30436                                  .L1:
 30437 000169D5 C9                              leave
 30438 000169D6 C22000                          ret AND_KILL_FRAME(2)
 30439                                          
 30440                                  L_code_ptr_make_string:
 30441 000169D9 C8000000                        enter 0, 0
 30442 000169DD 48837D1802                      cmp COUNT, 2
 30443 000169E2 0F8546020000                    jne L_error_arg_count_2
 30444 000169E8 488B4D20                        mov rcx, PARAM(0)
 30445                                          assert_integer(rcx)
    53 000169EC 803911              <1>  cmp byte [%1], %2
    54 000169EF 0F85D8020000        <1>  jne L_error_incorrect_type
 30446 000169F5 488B4901                        mov rcx, qword [rcx + 1]
 30447 000169F9 4883F900                        cmp rcx, 0
 30448 000169FD 0F8C5F010000                    jl L_error_integer_range
 30449 00016A03 488B5528                        mov rdx, PARAM(1)
 30450                                          assert_char(rdx)
    53 00016A07 803A02              <1>  cmp byte [%1], %2
    54 00016A0A 0F85BD020000        <1>  jne L_error_incorrect_type
 30451 00016A10 8A5201                          mov dl, byte [rdx + 1]
 30452 00016A13 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 30453 00016A17 E806E5FFFF                      call malloc
 30454 00016A1C C60003                          mov byte [rax], T_string
 30455 00016A1F 48894801                        mov qword [rax + 1], rcx
 30456 00016A23 41B800000000                    mov r8, 0
 30457                                  .L0:
 30458 00016A29 4939C8                          cmp r8, rcx
 30459 00016A2C 740A                            je .L1
 30460 00016A2E 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 30461 00016A33 49FFC0                          inc r8
 30462 00016A36 EBF1                            jmp .L0
 30463                                  .L1:
 30464 00016A38 C9                              leave
 30465 00016A39 C22000                          ret AND_KILL_FRAME(2)
 30466                                  
 30467                                  L_code_ptr_numerator:
 30468 00016A3C C8000000                        enter 0, 0
 30469 00016A40 48837D1801                      cmp COUNT, 1
 30470 00016A45 0F85AE010000                    jne L_error_arg_count_1
 30471 00016A4B 488B4520                        mov rax, PARAM(0)
 30472                                          assert_fraction(rax)
    53 00016A4F 803812              <1>  cmp byte [%1], %2
    54 00016A52 0F8575020000        <1>  jne L_error_incorrect_type
 30473 00016A58 488B7801                        mov rdi, qword [rax + 1]
 30474 00016A5C E8E7000000                      call make_integer
 30475 00016A61 C9                              leave
 30476 00016A62 C21800                          ret AND_KILL_FRAME(1)
 30477                                          
 30478                                  L_code_ptr_denominator:
 30479 00016A65 C8000000                        enter 0, 0
 30480 00016A69 48837D1801                      cmp COUNT, 1
 30481 00016A6E 0F8585010000                    jne L_error_arg_count_1
 30482 00016A74 488B4520                        mov rax, PARAM(0)
 30483                                          assert_fraction(rax)
    53 00016A78 803812              <1>  cmp byte [%1], %2
    54 00016A7B 0F854C020000        <1>  jne L_error_incorrect_type
 30484 00016A81 488B7809                        mov rdi, qword [rax + 1 + 8]
 30485 00016A85 E8BE000000                      call make_integer
 30486 00016A8A C9                              leave
 30487 00016A8B C21800                          ret AND_KILL_FRAME(1)
 30488                                  
 30489                                  L_code_ptr_is_eq:
 30490 00016A8E C8000000                	enter 0, 0
 30491 00016A92 48837D1802              	cmp COUNT, 2
 30492 00016A97 0F8591010000            	jne L_error_arg_count_2
 30493 00016A9D 488B7D20                	mov rdi, PARAM(0)
 30494 00016AA1 488B7528                	mov rsi, PARAM(1)
 30495 00016AA5 4839F7                  	cmp rdi, rsi
 30496 00016AA8 746C                    	je .L_eq_true
 30497 00016AAA 8A17                    	mov dl, byte [rdi]
 30498 00016AAC 3A16                    	cmp dl, byte [rsi]
 30499 00016AAE 7572                    	jne .L_eq_false
 30500 00016AB0 80FA02                  	cmp dl, T_char
 30501 00016AB3 7459                    	je .L_char
 30502 00016AB5 80FA41                  	cmp dl, T_interned_symbol
 30503 00016AB8 7440                    	je .L_interned_symbol
 30504 00016ABA 80FA42                          cmp dl, T_uninterned_symbol
 30505 00016ABD 7443                            je .L_uninterned_symbol
 30506 00016ABF 80FA13                  	cmp dl, T_real
 30507 00016AC2 742E                    	je .L_real
 30508 00016AC4 80FA12                  	cmp dl, T_fraction
 30509 00016AC7 7413                    	je .L_fraction
 30510 00016AC9 80FA11                          cmp dl, T_integer
 30511 00016ACC 7402                            je .L_integer
 30512 00016ACE EB52                    	jmp .L_eq_false
 30513                                  .L_integer:
 30514 00016AD0 488B4601                        mov rax, qword [rsi + 1]
 30515 00016AD4 483B4701                        cmp rax, qword [rdi + 1]
 30516 00016AD8 7548                            jne .L_eq_false
 30517 00016ADA EB3A                            jmp .L_eq_true
 30518                                  .L_fraction:
 30519 00016ADC 488B4601                	mov rax, qword [rsi + 1]
 30520 00016AE0 483B4701                	cmp rax, qword [rdi + 1]
 30521 00016AE4 753C                    	jne .L_eq_false
 30522 00016AE6 488B4609                	mov rax, qword [rsi + 1 + 8]
 30523 00016AEA 483B4709                	cmp rax, qword [rdi + 1 + 8]
 30524 00016AEE 7532                    	jne .L_eq_false
 30525 00016AF0 EB24                    	jmp .L_eq_true
 30526                                  .L_real:
 30527 00016AF2 488B4601                	mov rax, qword [rsi + 1]
 30528 00016AF6 483B4701                	cmp rax, qword [rdi + 1]
 30529                                  .L_interned_symbol:
 30530                                  	; never reached, because interned_symbols are static!
 30531                                  	; but I'm keeping it in case, I'll ever change
 30532                                  	; the implementation
 30533 00016AFA 488B4601                	mov rax, qword [rsi + 1]
 30534 00016AFE 483B4701                	cmp rax, qword [rdi + 1]
 30535                                  .L_uninterned_symbol:
 30536 00016B02 4C8B4701                        mov r8, qword [rdi + 1]
 30537 00016B06 4C3B4601                        cmp r8, qword [rsi + 1]
 30538 00016B0A 7516                            jne .L_eq_false
 30539 00016B0C EB08                            jmp .L_eq_true
 30540                                  .L_char:
 30541 00016B0E 8A5E01                  	mov bl, byte [rsi + 1]
 30542 00016B11 3A5F01                  	cmp bl, byte [rdi + 1]
 30543 00016B14 750C                    	jne .L_eq_false
 30544                                  .L_eq_true:
 30545 00016B16 48B8-                   	mov rax, sob_boolean_true
 30545 00016B18 [0300000000000000] 
 30546 00016B20 EB0A                    	jmp .L_eq_exit
 30547                                  .L_eq_false:
 30548 00016B22 48B8-                   	mov rax, sob_boolean_false
 30548 00016B24 [0200000000000000] 
 30549                                  .L_eq_exit:
 30550 00016B2C C9                      	leave
 30551 00016B2D C22000                  	ret AND_KILL_FRAME(2)
 30552                                  
 30553                                  make_real:
 30554 00016B30 C8000000                        enter 0, 0
 30555 00016B34 BF09000000                      mov rdi, (1 + 8)
 30556 00016B39 E8E4E3FFFF                      call malloc
 30557 00016B3E C60013                          mov byte [rax], T_real
 30558 00016B41 F20F114001                      movsd qword [rax + 1], xmm0
 30559 00016B46 C9                              leave 
 30560 00016B47 C3                              ret
 30561                                          
 30562                                  make_integer:
 30563 00016B48 C8000000                        enter 0, 0
 30564 00016B4C 4889FE                          mov rsi, rdi
 30565 00016B4F BF09000000                      mov rdi, (1 + 8)
 30566 00016B54 E8C9E3FFFF                      call malloc
 30567 00016B59 C60011                          mov byte [rax], T_integer
 30568 00016B5C 48897001                        mov qword [rax + 1], rsi
 30569 00016B60 C9                              leave
 30570 00016B61 C3                              ret
 30571                                          
 30572                                  L_error_integer_range:
 30573 00016B62 488B3C25[00000000]              mov rdi, qword [stderr]
 30574 00016B6A 48BE-                           mov rsi, fmt_integer_range
 30574 00016B6C [C81B000000000000] 
 30575 00016B74 B800000000                      mov rax, 0
 30576                                          ENTER
    44 00016B79 C8000000            <1>  enter 0, 0
    45 00016B7D 4883E4F0            <1>  and rsp, ~15
 30577 00016B81 E8(00000000)                    call fprintf
 30578                                          LEAVE
    49 00016B86 C9                  <1>  leave
 30579 00016B87 48C7C0FBFFFFFF                  mov rax, -5
 30580 00016B8E E8(00000000)                    call exit
 30581                                  
 30582                                  L_error_arg_negative:
 30583 00016B93 488B3C25[00000000]              mov rdi, qword [stderr]
 30584 00016B9B 48BE-                           mov rsi, fmt_arg_negative
 30584 00016B9D [A01A000000000000] 
 30585 00016BA5 B800000000                      mov rax, 0
 30586                                          ENTER
    44 00016BAA C8000000            <1>  enter 0, 0
    45 00016BAE 4883E4F0            <1>  and rsp, ~15
 30587 00016BB2 E8(00000000)                    call fprintf
 30588                                          LEAVE
    49 00016BB7 C9                  <1>  leave
 30589 00016BB8 48C7C0FDFFFFFF                  mov rax, -3
 30590 00016BBF E8(00000000)                    call exit
 30591                                  
 30592                                  L_error_arg_count_0:
 30593 00016BC4 488B3C25[00000000]              mov rdi, qword [stderr]
 30594 00016BCC 48BE-                           mov rsi, fmt_arg_count_0
 30594 00016BCE [C61A000000000000] 
 30595 00016BD6 488B5518                        mov rdx, COUNT
 30596 00016BDA B800000000                      mov rax, 0
 30597                                          ENTER
    44 00016BDF C8000000            <1>  enter 0, 0
    45 00016BE3 4883E4F0            <1>  and rsp, ~15
 30598 00016BE7 E8(00000000)                    call fprintf
 30599                                          LEAVE
    49 00016BEC C9                  <1>  leave
 30600 00016BED 48C7C0FDFFFFFF                  mov rax, -3
 30601 00016BF4 E8(00000000)                    call exit
 30602                                  
 30603                                  L_error_arg_count_1:
 30604 00016BF9 488B3C25[00000000]              mov rdi, qword [stderr]
 30605 00016C01 48BE-                           mov rsi, fmt_arg_count_1
 30605 00016C03 [EE1A000000000000] 
 30606 00016C0B 488B5518                        mov rdx, COUNT
 30607 00016C0F B800000000                      mov rax, 0
 30608                                          ENTER
    44 00016C14 C8000000            <1>  enter 0, 0
    45 00016C18 4883E4F0            <1>  and rsp, ~15
 30609 00016C1C E8(00000000)                    call fprintf
 30610                                          LEAVE
    49 00016C21 C9                  <1>  leave
 30611 00016C22 48C7C0FDFFFFFF                  mov rax, -3
 30612 00016C29 E8(00000000)                    call exit
 30613                                  
 30614                                  L_error_arg_count_2:
 30615 00016C2E 488B3C25[00000000]              mov rdi, qword [stderr]
 30616 00016C36 48BE-                           mov rsi, fmt_arg_count_2
 30616 00016C38 [541B000000000000] 
 30617 00016C40 488B5518                        mov rdx, COUNT
 30618 00016C44 B800000000                      mov rax, 0
 30619                                          ENTER
    44 00016C49 C8000000            <1>  enter 0, 0
    45 00016C4D 4883E4F0            <1>  and rsp, ~15
 30620 00016C51 E8(00000000)                    call fprintf
 30621                                          LEAVE
    49 00016C56 C9                  <1>  leave
 30622 00016C57 48C7C0FDFFFFFF                  mov rax, -3
 30623 00016C5E E8(00000000)                    call exit
 30624                                  
 30625                                  L_error_arg_count_12:
 30626 00016C63 488B3C25[00000000]              mov rdi, qword [stderr]
 30627 00016C6B 48BE-                           mov rsi, fmt_arg_count_12
 30627 00016C6D [141B000000000000] 
 30628 00016C75 488B5518                        mov rdx, COUNT
 30629 00016C79 B800000000                      mov rax, 0
 30630                                          ENTER
    44 00016C7E C8000000            <1>  enter 0, 0
    45 00016C82 4883E4F0            <1>  and rsp, ~15
 30631 00016C86 E8(00000000)                    call fprintf
 30632                                          LEAVE
    49 00016C8B C9                  <1>  leave
 30633 00016C8C 48C7C0FDFFFFFF                  mov rax, -3
 30634 00016C93 E8(00000000)                    call exit
 30635                                  
 30636                                  L_error_arg_count_3:
 30637 00016C98 488B3C25[00000000]              mov rdi, qword [stderr]
 30638 00016CA0 48BE-                           mov rsi, fmt_arg_count_3
 30638 00016CA2 [7B1B000000000000] 
 30639 00016CAA 488B5518                        mov rdx, COUNT
 30640 00016CAE B800000000                      mov rax, 0
 30641                                          ENTER
    44 00016CB3 C8000000            <1>  enter 0, 0
    45 00016CB7 4883E4F0            <1>  and rsp, ~15
 30642 00016CBB E8(00000000)                    call fprintf
 30643                                          LEAVE
    49 00016CC0 C9                  <1>  leave
 30644 00016CC1 48C7C0FDFFFFFF                  mov rax, -3
 30645 00016CC8 E8(00000000)                    call exit
 30646                                          
 30647                                  L_error_incorrect_type:
 30648 00016CCD 488B3C25[00000000]              mov rdi, qword [stderr]
 30649 00016CD5 48BE-                           mov rsi, fmt_type
 30649 00016CD7 [A41B000000000000] 
 30650 00016CDF B800000000                      mov rax, 0
 30651                                          ENTER
    44 00016CE4 C8000000            <1>  enter 0, 0
    45 00016CE8 4883E4F0            <1>  and rsp, ~15
 30652 00016CEC E8(00000000)                    call fprintf
 30653                                          LEAVE
    49 00016CF1 C9                  <1>  leave
 30654 00016CF2 48C7C0FCFFFFFF                  mov rax, -4
 30655 00016CF9 E8(00000000)                    call exit
 30656                                  
 30657                                  L_error_division_by_zero:
 30658 00016CFE 488B3C25[00000000]              mov rdi, qword [stderr]
 30659 00016D06 48BE-                           mov rsi, fmt_division_by_zero
 30659 00016D08 [E51B000000000000] 
 30660 00016D10 B800000000                      mov rax, 0
 30661                                          ENTER
    44 00016D15 C8000000            <1>  enter 0, 0
    45 00016D19 4883E4F0            <1>  and rsp, ~15
 30662 00016D1D E8(00000000)                    call fprintf
 30663                                          LEAVE
    49 00016D22 C9                  <1>  leave
 30664 00016D23 48C7C0F8FFFFFF                  mov rax, -8
 30665 00016D2A E8(00000000)                    call exit
 30666                                  
 30667                                  section .data
 30668                                  gensym_count:
 30669 00001A95 0000000000000000                dq 0
 30670                                  fmt_char:
 30671 00001A9D 256300                          db `%c\0`
 30672                                  fmt_arg_negative:
 30673 00001AA0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 30673 00001AA9 7267756D656E742063-
 30673 00001AB2 616E6E6F7420626520-
 30673 00001ABB 6E656761746976652E-
 30673 00001AC4 0A00               
 30674                                  fmt_arg_count_0:
 30675 00001AC6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 30675 00001ACF 74696E67207A65726F-
 30675 00001AD8 20617267756D656E74-
 30675 00001AE1 732E20466F756E6420-
 30675 00001AEA 25640A00           
 30676                                  fmt_arg_count_1:
 30677 00001AEE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 30677 00001AF7 74696E67206F6E6520-
 30677 00001B00 617267756D656E742E-
 30677 00001B09 20466F756E64202564-
 30677 00001B12 0A00               
 30678                                  fmt_arg_count_12:
 30679 00001B14 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 30679 00001B1D 74696E67206F6E6520-
 30679 00001B26 726571756972656420-
 30679 00001B2F 616E64206F6E65206F-
 30679 00001B38 7074696F6E616C2061-
 30679 00001B41 7267756D656E742E20-
 30679 00001B4A 466F756E642025640A-
 30679 00001B53 00                 
 30680                                  fmt_arg_count_2:
 30681 00001B54 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 30681 00001B5D 74696E672074776F20-
 30681 00001B66 617267756D656E7473-
 30681 00001B6F 2E20466F756E642025-
 30681 00001B78 640A00             
 30682                                  fmt_arg_count_3:
 30683 00001B7B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 30683 00001B84 74696E672074687265-
 30683 00001B8D 6520617267756D656E-
 30683 00001B96 74732E20466F756E64-
 30683 00001B9F 2025640A00         
 30684                                  fmt_type:
 30685 00001BA4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 30685 00001BAD 696F6E207061737365-
 30685 00001BB6 6420696E636F727265-
 30685 00001BBF 637420747970650A00 
 30686                                  fmt_integer_range:
 30687 00001BC8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 30687 00001BD1 7265637420696E7465-
 30687 00001BDA 6765722072616E6765-
 30687 00001BE3 0A00               
 30688                                  fmt_division_by_zero:
 30689 00001BE5 212121204469766973-             db `!!! Division by zero\n\0`
 30689 00001BEE 696F6E206279207A65-
 30689 00001BF7 726F0A00           
 30690                                  fmt_scheme_error_part_1:
 30691 00001BFB 0A2121212054686520-             db `\n!!! The procedure \0`
 30691 00001C04 70726F636564757265-
 30691 00001C0D 2000               
 30692                                  fmt_scheme_error_part_2:
 30693 00001C0F 2061736B656420746F-             db ` asked to terminate the program\n`
 30693 00001C18 207465726D696E6174-
 30693 00001C21 65207468652070726F-
 30693 00001C2A 6772616D0A         
 30694 00001C2F 202020207769746820-             db `    with the following message:\n\n\0`
 30694 00001C38 74686520666F6C6C6F-
 30694 00001C41 77696E67206D657373-
 30694 00001C4A 6167653A0A0A00     
 30695                                  fmt_scheme_error_part_3:
 30696 00001C51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 30696 00001C5A 210A0A00           
