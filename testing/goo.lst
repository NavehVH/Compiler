     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "apply"
   157 000000ED 0500000000000000        	dq 5
   158 000000F5 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   159                                  	; L_constants + 250:
   160 000000FA 03                      	db T_string	; "display-sexpr"
   161 000000FB 0D00000000000000        	dq 13
   162 00000103 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   163 0000010B 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   164                                  	; L_constants + 272:
   165 00000110 03                      	db T_string	; "write-char"
   166 00000111 0A00000000000000        	dq 10
   167 00000119 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   168 00000121 6172                    	db 0x61, 0x72
   169                                  	; L_constants + 291:
   170 00000123 03                      	db T_string	; "car"
   171 00000124 0300000000000000        	dq 3
   172 0000012C 636172                  	db 0x63, 0x61, 0x72
   173                                  	; L_constants + 303:
   174 0000012F 03                      	db T_string	; "cdr"
   175 00000130 0300000000000000        	dq 3
   176 00000138 636472                  	db 0x63, 0x64, 0x72
   177                                  	; L_constants + 315:
   178 0000013B 03                      	db T_string	; "string-length"
   179 0000013C 0D00000000000000        	dq 13
   180 00000144 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   181 0000014C 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   182                                  	; L_constants + 337:
   183 00000151 03                      	db T_string	; "vector-length"
   184 00000152 0D00000000000000        	dq 13
   185 0000015A 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   186 00000162 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   187                                  	; L_constants + 359:
   188 00000167 03                      	db T_string	; "real->integer"
   189 00000168 0D00000000000000        	dq 13
   190 00000170 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   191 00000178 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   192                                  	; L_constants + 381:
   193 0000017D 03                      	db T_string	; "exit"
   194 0000017E 0400000000000000        	dq 4
   195 00000186 65786974                	db 0x65, 0x78, 0x69, 0x74
   196                                  	; L_constants + 394:
   197 0000018A 03                      	db T_string	; "integer->real"
   198 0000018B 0D00000000000000        	dq 13
   199 00000193 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   200 0000019B 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   201                                  	; L_constants + 416:
   202 000001A0 03                      	db T_string	; "fraction->real"
   203 000001A1 0E00000000000000        	dq 14
   204 000001A9 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   205 000001B1 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   206                                  	; L_constants + 439:
   207 000001B7 03                      	db T_string	; "char->integer"
   208 000001B8 0D00000000000000        	dq 13
   209 000001C0 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   210 000001C8 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   211                                  	; L_constants + 461:
   212 000001CD 03                      	db T_string	; "integer->char"
   213 000001CE 0D00000000000000        	dq 13
   214 000001D6 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   215 000001DE 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   216                                  	; L_constants + 483:
   217 000001E3 03                      	db T_string	; "trng"
   218 000001E4 0400000000000000        	dq 4
   219 000001EC 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "zero?"
   222 000001F1 0500000000000000        	dq 5
   223 000001F9 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   224                                  	; L_constants + 510:
   225 000001FE 03                      	db T_string	; "integer?"
   226 000001FF 0800000000000000        	dq 8
   227 00000207 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   228                                  	; L_constants + 527:
   229 0000020F 03                      	db T_string	; "__bin-apply"
   230 00000210 0B00000000000000        	dq 11
   231 00000218 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   232 00000220 706C79                  	db 0x70, 0x6C, 0x79
   233                                  	; L_constants + 547:
   234 00000223 03                      	db T_string	; "__bin-add-rr"
   235 00000224 0C00000000000000        	dq 12
   236 0000022C 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   237 00000234 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   238                                  	; L_constants + 568:
   239 00000238 03                      	db T_string	; "__bin-sub-rr"
   240 00000239 0C00000000000000        	dq 12
   241 00000241 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   242 00000249 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   243                                  	; L_constants + 589:
   244 0000024D 03                      	db T_string	; "__bin-mul-rr"
   245 0000024E 0C00000000000000        	dq 12
   246 00000256 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   247 0000025E 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   248                                  	; L_constants + 610:
   249 00000262 03                      	db T_string	; "__bin-div-rr"
   250 00000263 0C00000000000000        	dq 12
   251 0000026B 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   252 00000273 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   253                                  	; L_constants + 631:
   254 00000277 03                      	db T_string	; "__bin-add-qq"
   255 00000278 0C00000000000000        	dq 12
   256 00000280 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   257 00000288 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   258                                  	; L_constants + 652:
   259 0000028C 03                      	db T_string	; "__bin-sub-qq"
   260 0000028D 0C00000000000000        	dq 12
   261 00000295 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   262 0000029D 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   263                                  	; L_constants + 673:
   264 000002A1 03                      	db T_string	; "__bin-mul-qq"
   265 000002A2 0C00000000000000        	dq 12
   266 000002AA 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   267 000002B2 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   268                                  	; L_constants + 694:
   269 000002B6 03                      	db T_string	; "__bin-div-qq"
   270 000002B7 0C00000000000000        	dq 12
   271 000002BF 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   272 000002C7 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   273                                  	; L_constants + 715:
   274 000002CB 03                      	db T_string	; "__bin-add-zz"
   275 000002CC 0C00000000000000        	dq 12
   276 000002D4 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   277 000002DC 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   278                                  	; L_constants + 736:
   279 000002E0 03                      	db T_string	; "__bin-sub-zz"
   280 000002E1 0C00000000000000        	dq 12
   281 000002E9 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   282 000002F1 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   283                                  	; L_constants + 757:
   284 000002F5 03                      	db T_string	; "__bin-mul-zz"
   285 000002F6 0C00000000000000        	dq 12
   286 000002FE 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   287 00000306 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   288                                  	; L_constants + 778:
   289 0000030A 03                      	db T_string	; "__bin-div-zz"
   290 0000030B 0C00000000000000        	dq 12
   291 00000313 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   292 0000031B 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "error"
   295 00000320 0500000000000000        	dq 5
   296 00000328 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   297                                  	; L_constants + 813:
   298 0000032D 03                      	db T_string	; "__bin-less-than-rr"
   299 0000032E 1200000000000000        	dq 18
   300 00000336 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   301 0000033E 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   302 00000346 7272                    	db 0x72, 0x72
   303                                  	; L_constants + 840:
   304 00000348 03                      	db T_string	; "__bin-less-than-qq"
   305 00000349 1200000000000000        	dq 18
   306 00000351 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   307 00000359 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   308 00000361 7171                    	db 0x71, 0x71
   309                                  	; L_constants + 867:
   310 00000363 03                      	db T_string	; "__bin-less-than-zz"
   311 00000364 1200000000000000        	dq 18
   312 0000036C 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   313 00000374 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   314 0000037C 7A7A                    	db 0x7A, 0x7A
   315                                  	; L_constants + 894:
   316 0000037E 03                      	db T_string	; "__bin-equal-rr"
   317 0000037F 0E00000000000000        	dq 14
   318 00000387 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   319 0000038F 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   320                                  	; L_constants + 917:
   321 00000395 03                      	db T_string	; "__bin-equal-qq"
   322 00000396 0E00000000000000        	dq 14
   323 0000039E 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   324 000003A6 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   325                                  	; L_constants + 940:
   326 000003AC 03                      	db T_string	; "__bin-equal-zz"
   327 000003AD 0E00000000000000        	dq 14
   328 000003B5 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   329 000003BD 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   330                                  	; L_constants + 963:
   331 000003C3 03                      	db T_string	; "quotient"
   332 000003C4 0800000000000000        	dq 8
   333 000003CC 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   334                                  	; L_constants + 980:
   335 000003D4 03                      	db T_string	; "remainder"
   336 000003D5 0900000000000000        	dq 9
   337 000003DD 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   338 000003E5 72                      	db 0x72
   339                                  	; L_constants + 998:
   340 000003E6 03                      	db T_string	; "set-car!"
   341 000003E7 0800000000000000        	dq 8
   342 000003EF 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   343                                  	; L_constants + 1015:
   344 000003F7 03                      	db T_string	; "set-cdr!"
   345 000003F8 0800000000000000        	dq 8
   346 00000400 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   347                                  	; L_constants + 1032:
   348 00000408 03                      	db T_string	; "string-ref"
   349 00000409 0A00000000000000        	dq 10
   350 00000411 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   351 00000419 6566                    	db 0x65, 0x66
   352                                  	; L_constants + 1051:
   353 0000041B 03                      	db T_string	; "vector-ref"
   354 0000041C 0A00000000000000        	dq 10
   355 00000424 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   356 0000042C 6566                    	db 0x65, 0x66
   357                                  	; L_constants + 1070:
   358 0000042E 03                      	db T_string	; "vector-set!"
   359 0000042F 0B00000000000000        	dq 11
   360 00000437 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   361 0000043F 657421                  	db 0x65, 0x74, 0x21
   362                                  	; L_constants + 1090:
   363 00000442 03                      	db T_string	; "string-set!"
   364 00000443 0B00000000000000        	dq 11
   365 0000044B 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   366 00000453 657421                  	db 0x65, 0x74, 0x21
   367                                  	; L_constants + 1110:
   368 00000456 03                      	db T_string	; "make-vector"
   369 00000457 0B00000000000000        	dq 11
   370 0000045F 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   371 00000467 746F72                  	db 0x74, 0x6F, 0x72
   372                                  	; L_constants + 1130:
   373 0000046A 03                      	db T_string	; "make-string"
   374 0000046B 0B00000000000000        	dq 11
   375 00000473 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   376 0000047B 696E67                  	db 0x69, 0x6E, 0x67
   377                                  	; L_constants + 1150:
   378 0000047E 03                      	db T_string	; "numerator"
   379 0000047F 0900000000000000        	dq 9
   380 00000487 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   381 0000048F 72                      	db 0x72
   382                                  	; L_constants + 1168:
   383 00000490 03                      	db T_string	; "denominator"
   384 00000491 0B00000000000000        	dq 11
   385 00000499 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   386 000004A1 746F72                  	db 0x74, 0x6F, 0x72
   387                                  	; L_constants + 1188:
   388 000004A4 03                      	db T_string	; "eq?"
   389 000004A5 0300000000000000        	dq 3
   390 000004AD 65713F                  	db 0x65, 0x71, 0x3F
   391                                  	; L_constants + 1200:
   392 000004B0 03                      	db T_string	; "__integer-to-fracti...
   393 000004B1 1500000000000000        	dq 21
   394 000004B9 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   395 000004C1 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   396 000004C9 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   397                                  	; L_constants + 1230:
   398 000004CE 03                      	db T_string	; "logand"
   399 000004CF 0600000000000000        	dq 6
   400 000004D7 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logor"
   403 000004DE 0500000000000000        	dq 5
   404 000004E6 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   405                                  	; L_constants + 1259:
   406 000004EB 03                      	db T_string	; "logxor"
   407 000004EC 0600000000000000        	dq 6
   408 000004F4 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   409                                  	; L_constants + 1274:
   410 000004FA 03                      	db T_string	; "lognot"
   411 000004FB 0600000000000000        	dq 6
   412 00000503 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   413                                  	; L_constants + 1289:
   414 00000509 03                      	db T_string	; "ash"
   415 0000050A 0300000000000000        	dq 3
   416 00000512 617368                  	db 0x61, 0x73, 0x68
   417                                  	; L_constants + 1301:
   418 00000515 03                      	db T_string	; "symbol?"
   419 00000516 0700000000000000        	dq 7
   420 0000051E 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   421                                  	; L_constants + 1317:
   422 00000525 03                      	db T_string	; "uninterned-symbol?"
   423 00000526 1200000000000000        	dq 18
   424 0000052E 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   425 00000536 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   426 0000053E 6C3F                    	db 0x6C, 0x3F
   427                                  	; L_constants + 1344:
   428 00000540 03                      	db T_string	; "gensym?"
   429 00000541 0700000000000000        	dq 7
   430 00000549 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   431                                  	; L_constants + 1360:
   432 00000550 03                      	db T_string	; "gensym"
   433 00000551 0600000000000000        	dq 6
   434 00000559 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "frame"
   437 00000560 0500000000000000        	dq 5
   438 00000568 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "break"
   441 0000056E 0500000000000000        	dq 5
   442 00000576 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   443                                  	; L_constants + 1403:
   444 0000057B 03                      	db T_string	; "boolean-false?"
   445 0000057C 0E00000000000000        	dq 14
   446 00000584 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   447 0000058C 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   448                                  	; L_constants + 1426:
   449 00000592 03                      	db T_string	; "boolean-true?"
   450 00000593 0D00000000000000        	dq 13
   451 0000059B 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   452 000005A3 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   453                                  	; L_constants + 1448:
   454 000005A8 03                      	db T_string	; "primitive?"
   455 000005A9 0A00000000000000        	dq 10
   456 000005B1 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   457 000005B9 653F                    	db 0x65, 0x3F
   458                                  	; L_constants + 1467:
   459 000005BB 03                      	db T_string	; "length"
   460 000005BC 0600000000000000        	dq 6
   461 000005C4 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   462                                  	; L_constants + 1482:
   463 000005CA 03                      	db T_string	; "make-list"
   464 000005CB 0900000000000000        	dq 9
   465 000005D3 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   466 000005DB 74                      	db 0x74
   467                                  	; L_constants + 1500:
   468 000005DC 03                      	db T_string	; "return"
   469 000005DD 0600000000000000        	dq 6
   470 000005E5 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   471                                  	; L_constants + 1515:
   472 000005EB 03                      	db T_string	; "caar"
   473 000005EC 0400000000000000        	dq 4
   474 000005F4 63616172                	db 0x63, 0x61, 0x61, 0x72
   475                                  	; L_constants + 1528:
   476 000005F8 03                      	db T_string	; "cadr"
   477 000005F9 0400000000000000        	dq 4
   478 00000601 63616472                	db 0x63, 0x61, 0x64, 0x72
   479                                  	; L_constants + 1541:
   480 00000605 03                      	db T_string	; "cdar"
   481 00000606 0400000000000000        	dq 4
   482 0000060E 63646172                	db 0x63, 0x64, 0x61, 0x72
   483                                  	; L_constants + 1554:
   484 00000612 03                      	db T_string	; "cddr"
   485 00000613 0400000000000000        	dq 4
   486 0000061B 63646472                	db 0x63, 0x64, 0x64, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caaar"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "caadr"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "cadar"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "caddr"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdaar"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cdadr"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cddar"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "cdddr"
   517 00000682 0500000000000000        	dq 5
   518 0000068A 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   519                                  	; L_constants + 1679:
   520 0000068F 03                      	db T_string	; "caaaar"
   521 00000690 0600000000000000        	dq 6
   522 00000698 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   523                                  	; L_constants + 1694:
   524 0000069E 03                      	db T_string	; "caaadr"
   525 0000069F 0600000000000000        	dq 6
   526 000006A7 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   527                                  	; L_constants + 1709:
   528 000006AD 03                      	db T_string	; "caadar"
   529 000006AE 0600000000000000        	dq 6
   530 000006B6 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   531                                  	; L_constants + 1724:
   532 000006BC 03                      	db T_string	; "caaddr"
   533 000006BD 0600000000000000        	dq 6
   534 000006C5 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   535                                  	; L_constants + 1739:
   536 000006CB 03                      	db T_string	; "cadaar"
   537 000006CC 0600000000000000        	dq 6
   538 000006D4 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   539                                  	; L_constants + 1754:
   540 000006DA 03                      	db T_string	; "cadadr"
   541 000006DB 0600000000000000        	dq 6
   542 000006E3 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   543                                  	; L_constants + 1769:
   544 000006E9 03                      	db T_string	; "caddar"
   545 000006EA 0600000000000000        	dq 6
   546 000006F2 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   547                                  	; L_constants + 1784:
   548 000006F8 03                      	db T_string	; "cadddr"
   549 000006F9 0600000000000000        	dq 6
   550 00000701 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   551                                  	; L_constants + 1799:
   552 00000707 03                      	db T_string	; "cdaaar"
   553 00000708 0600000000000000        	dq 6
   554 00000710 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   555                                  	; L_constants + 1814:
   556 00000716 03                      	db T_string	; "cdaadr"
   557 00000717 0600000000000000        	dq 6
   558 0000071F 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   559                                  	; L_constants + 1829:
   560 00000725 03                      	db T_string	; "cdadar"
   561 00000726 0600000000000000        	dq 6
   562 0000072E 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   563                                  	; L_constants + 1844:
   564 00000734 03                      	db T_string	; "cdaddr"
   565 00000735 0600000000000000        	dq 6
   566 0000073D 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   567                                  	; L_constants + 1859:
   568 00000743 03                      	db T_string	; "cddaar"
   569 00000744 0600000000000000        	dq 6
   570 0000074C 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   571                                  	; L_constants + 1874:
   572 00000752 03                      	db T_string	; "cddadr"
   573 00000753 0600000000000000        	dq 6
   574 0000075B 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   575                                  	; L_constants + 1889:
   576 00000761 03                      	db T_string	; "cdddar"
   577 00000762 0600000000000000        	dq 6
   578 0000076A 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   579                                  	; L_constants + 1904:
   580 00000770 03                      	db T_string	; "cddddr"
   581 00000771 0600000000000000        	dq 6
   582 00000779 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list?"
   585 00000780 0500000000000000        	dq 5
   586 00000788 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   587                                  	; L_constants + 1933:
   588 0000078D 03                      	db T_string	; "list"
   589 0000078E 0400000000000000        	dq 4
   590 00000796 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   591                                  	; L_constants + 1946:
   592 0000079A 03                      	db T_string	; "not"
   593 0000079B 0300000000000000        	dq 3
   594 000007A3 6E6F74                  	db 0x6E, 0x6F, 0x74
   595                                  	; L_constants + 1958:
   596 000007A6 03                      	db T_string	; "rational?"
   597 000007A7 0900000000000000        	dq 9
   598 000007AF 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   599 000007B7 3F                      	db 0x3F
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "list*"
   602 000007B9 0500000000000000        	dq 5
   603 000007C1 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   604                                  	; L_constants + 1990:
   605 000007C6 03                      	db T_string	; "whatever"
   606 000007C7 0800000000000000        	dq 8
   607 000007CF 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   608                                  	; L_constants + 2007:
   609 000007D7 41                      	db T_interned_symbol	; whatever
   610 000007D8 [C607000000000000]      	dq L_constants + 1990
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [5604000000000000]      	dq L_constants + 1110
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [6A04000000000000]      	dq L_constants + 1130
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  	; L_constants + 3525:
  1005 00000DC5 11                      	db T_integer	; 3
  1006 00000DC6 0300000000000000        	dq 3
  1007                                  	; L_constants + 3534:
  1008 00000DCE 11                      	db T_integer	; 4
  1009 00000DCF 0400000000000000        	dq 4
  1010                                  free_var_0:	; location of *
  1011 00000DD7 [DF0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDF 05                      	db T_undefined
  1014 00000DE0 [D408000000000000]      	dq L_constants + 2260
  1015                                  
  1016                                  free_var_1:	; location of +
  1017 00000DE8 [F00D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DF0 05                      	db T_undefined
  1020 00000DF1 [4D08000000000000]      	dq L_constants + 2125
  1021                                  
  1022                                  free_var_2:	; location of -
  1023 00000DF9 [010E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E01 05                      	db T_undefined
  1026 00000E02 [B408000000000000]      	dq L_constants + 2228
  1027                                  
  1028                                  free_var_3:	; location of /
  1029 00000E0A [120E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E12 05                      	db T_undefined
  1032 00000E13 [F008000000000000]      	dq L_constants + 2288
  1033                                  
  1034                                  free_var_4:	; location of <
  1035 00000E1B [230E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E23 05                      	db T_undefined
  1038 00000E24 [1009000000000000]      	dq L_constants + 2320
  1039                                  
  1040                                  free_var_5:	; location of <=
  1041 00000E2C [340E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E34 05                      	db T_undefined
  1044 00000E35 [1A09000000000000]      	dq L_constants + 2330
  1045                                  
  1046                                  free_var_6:	; location of =
  1047 00000E3D [450E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E45 05                      	db T_undefined
  1050 00000E46 [3A09000000000000]      	dq L_constants + 2362
  1051                                  
  1052                                  free_var_7:	; location of >
  1053 00000E4E [560E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E56 05                      	db T_undefined
  1056 00000E57 [2509000000000000]      	dq L_constants + 2341
  1057                                  
  1058                                  free_var_8:	; location of >=
  1059 00000E5F [670E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E67 05                      	db T_undefined
  1062 00000E68 [2F09000000000000]      	dq L_constants + 2351
  1063                                  
  1064                                  free_var_9:	; location of __bin-add-qq
  1065 00000E70 [780E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E78 05                      	db T_undefined
  1068 00000E79 [7702000000000000]      	dq L_constants + 631
  1069                                  
  1070                                  free_var_10:	; location of __bin-add-rr
  1071 00000E81 [890E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E89 05                      	db T_undefined
  1074 00000E8A [2302000000000000]      	dq L_constants + 547
  1075                                  
  1076                                  free_var_11:	; location of __bin-add-zz
  1077 00000E92 [9A0E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E9A 05                      	db T_undefined
  1080 00000E9B [CB02000000000000]      	dq L_constants + 715
  1081                                  
  1082                                  free_var_12:	; location of __bin-apply
  1083 00000EA3 [AB0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAB 05                      	db T_undefined
  1086 00000EAC [0F02000000000000]      	dq L_constants + 527
  1087                                  
  1088                                  free_var_13:	; location of __bin-div-qq
  1089 00000EB4 [BC0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBC 05                      	db T_undefined
  1092 00000EBD [B602000000000000]      	dq L_constants + 694
  1093                                  
  1094                                  free_var_14:	; location of __bin-div-rr
  1095 00000EC5 [CD0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECD 05                      	db T_undefined
  1098 00000ECE [6202000000000000]      	dq L_constants + 610
  1099                                  
  1100                                  free_var_15:	; location of __bin-div-zz
  1101 00000ED6 [DE0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDE 05                      	db T_undefined
  1104 00000EDF [0A03000000000000]      	dq L_constants + 778
  1105                                  
  1106                                  free_var_16:	; location of __bin-equal-qq
  1107 00000EE7 [EF0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEF 05                      	db T_undefined
  1110 00000EF0 [9503000000000000]      	dq L_constants + 917
  1111                                  
  1112                                  free_var_17:	; location of __bin-equal-rr
  1113 00000EF8 [000F000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000F00 05                      	db T_undefined
  1116 00000F01 [7E03000000000000]      	dq L_constants + 894
  1117                                  
  1118                                  free_var_18:	; location of __bin-equal-zz
  1119 00000F09 [110F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F11 05                      	db T_undefined
  1122 00000F12 [AC03000000000000]      	dq L_constants + 940
  1123                                  
  1124                                  free_var_19:	; location of __bin-less-than-qq
  1125 00000F1A [220F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F22 05                      	db T_undefined
  1128 00000F23 [4803000000000000]      	dq L_constants + 840
  1129                                  
  1130                                  free_var_20:	; location of __bin-less-than-rr
  1131 00000F2B [330F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F33 05                      	db T_undefined
  1134 00000F34 [2D03000000000000]      	dq L_constants + 813
  1135                                  
  1136                                  free_var_21:	; location of __bin-less-than-zz
  1137 00000F3C [440F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F44 05                      	db T_undefined
  1140 00000F45 [6303000000000000]      	dq L_constants + 867
  1141                                  
  1142                                  free_var_22:	; location of __bin-mul-qq
  1143 00000F4D [550F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F55 05                      	db T_undefined
  1146 00000F56 [A102000000000000]      	dq L_constants + 673
  1147                                  
  1148                                  free_var_23:	; location of __bin-mul-rr
  1149 00000F5E [660F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F66 05                      	db T_undefined
  1152 00000F67 [4D02000000000000]      	dq L_constants + 589
  1153                                  
  1154                                  free_var_24:	; location of __bin-mul-zz
  1155 00000F6F [770F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F77 05                      	db T_undefined
  1158 00000F78 [F502000000000000]      	dq L_constants + 757
  1159                                  
  1160                                  free_var_25:	; location of __bin-sub-qq
  1161 00000F80 [880F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F88 05                      	db T_undefined
  1164 00000F89 [8C02000000000000]      	dq L_constants + 652
  1165                                  
  1166                                  free_var_26:	; location of __bin-sub-rr
  1167 00000F91 [990F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F99 05                      	db T_undefined
  1170 00000F9A [3802000000000000]      	dq L_constants + 568
  1171                                  
  1172                                  free_var_27:	; location of __bin-sub-zz
  1173 00000FA2 [AA0F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FAA 05                      	db T_undefined
  1176 00000FAB [E002000000000000]      	dq L_constants + 736
  1177                                  
  1178                                  free_var_28:	; location of __bin_integer_to_fraction
  1179 00000FB3 [BB0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBB 05                      	db T_undefined
  1182 00000FBC [6008000000000000]      	dq L_constants + 2144
  1183                                  
  1184                                  free_var_29:	; location of __integer-to-fraction
  1185 00000FC4 [CC0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCC 05                      	db T_undefined
  1188 00000FCD [B004000000000000]      	dq L_constants + 1200
  1189                                  
  1190                                  free_var_30:	; location of abs
  1191 00000FD5 [DD0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDD 05                      	db T_undefined
  1194 00000FDE [8C0C000000000000]      	dq L_constants + 3212
  1195                                  
  1196                                  free_var_31:	; location of andmap
  1197 00000FE6 [EE0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FEE 05                      	db T_undefined
  1200 00000FEF [FA07000000000000]      	dq L_constants + 2042
  1201                                  
  1202                                  free_var_32:	; location of append
  1203 00000FF7 [FF0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFF 05                      	db T_undefined
  1206 00001000 [2B08000000000000]      	dq L_constants + 2091
  1207                                  
  1208                                  free_var_33:	; location of apply
  1209 00001008 [1010000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 00001010 05                      	db T_undefined
  1212 00001011 [EC00000000000000]      	dq L_constants + 236
  1213                                  
  1214                                  free_var_34:	; location of assoc
  1215 00001019 [2110000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001021 05                      	db T_undefined
  1218 00001022 [A70C000000000000]      	dq L_constants + 3239
  1219                                  
  1220                                  free_var_35:	; location of caaaar
  1221 0000102A [3210000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001032 05                      	db T_undefined
  1224 00001033 [8F06000000000000]      	dq L_constants + 1679
  1225                                  
  1226                                  free_var_36:	; location of caaadr
  1227 0000103B [4310000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001043 05                      	db T_undefined
  1230 00001044 [9E06000000000000]      	dq L_constants + 1694
  1231                                  
  1232                                  free_var_37:	; location of caaar
  1233 0000104C [5410000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001054 05                      	db T_undefined
  1236 00001055 [1F06000000000000]      	dq L_constants + 1567
  1237                                  
  1238                                  free_var_38:	; location of caadar
  1239 0000105D [6510000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001065 05                      	db T_undefined
  1242 00001066 [AD06000000000000]      	dq L_constants + 1709
  1243                                  
  1244                                  free_var_39:	; location of caaddr
  1245 0000106E [7610000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001076 05                      	db T_undefined
  1248 00001077 [BC06000000000000]      	dq L_constants + 1724
  1249                                  
  1250                                  free_var_40:	; location of caadr
  1251 0000107F [8710000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001087 05                      	db T_undefined
  1254 00001088 [2D06000000000000]      	dq L_constants + 1581
  1255                                  
  1256                                  free_var_41:	; location of caar
  1257 00001090 [9810000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001098 05                      	db T_undefined
  1260 00001099 [EB05000000000000]      	dq L_constants + 1515
  1261                                  
  1262                                  free_var_42:	; location of cadaar
  1263 000010A1 [A910000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A9 05                      	db T_undefined
  1266 000010AA [CB06000000000000]      	dq L_constants + 1739
  1267                                  
  1268                                  free_var_43:	; location of cadadr
  1269 000010B2 [BA10000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010BA 05                      	db T_undefined
  1272 000010BB [DA06000000000000]      	dq L_constants + 1754
  1273                                  
  1274                                  free_var_44:	; location of cadar
  1275 000010C3 [CB10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CB 05                      	db T_undefined
  1278 000010CC [3B06000000000000]      	dq L_constants + 1595
  1279                                  
  1280                                  free_var_45:	; location of caddar
  1281 000010D4 [DC10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DC 05                      	db T_undefined
  1284 000010DD [E906000000000000]      	dq L_constants + 1769
  1285                                  
  1286                                  free_var_46:	; location of cadddr
  1287 000010E5 [ED10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010ED 05                      	db T_undefined
  1290 000010EE [F806000000000000]      	dq L_constants + 1784
  1291                                  
  1292                                  free_var_47:	; location of caddr
  1293 000010F6 [FE10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FE 05                      	db T_undefined
  1296 000010FF [4906000000000000]      	dq L_constants + 1609
  1297                                  
  1298                                  free_var_48:	; location of cadr
  1299 00001107 [0F11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110F 05                      	db T_undefined
  1302 00001110 [F805000000000000]      	dq L_constants + 1528
  1303                                  
  1304                                  free_var_49:	; location of car
  1305 00001118 [2011000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 00001120 05                      	db T_undefined
  1308 00001121 [2301000000000000]      	dq L_constants + 291
  1309                                  
  1310                                  free_var_50:	; location of cdaaar
  1311 00001129 [3111000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001131 05                      	db T_undefined
  1314 00001132 [0707000000000000]      	dq L_constants + 1799
  1315                                  
  1316                                  free_var_51:	; location of cdaadr
  1317 0000113A [4211000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001142 05                      	db T_undefined
  1320 00001143 [1607000000000000]      	dq L_constants + 1814
  1321                                  
  1322                                  free_var_52:	; location of cdaar
  1323 0000114B [5311000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001153 05                      	db T_undefined
  1326 00001154 [5706000000000000]      	dq L_constants + 1623
  1327                                  
  1328                                  free_var_53:	; location of cdadar
  1329 0000115C [6411000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001164 05                      	db T_undefined
  1332 00001165 [2507000000000000]      	dq L_constants + 1829
  1333                                  
  1334                                  free_var_54:	; location of cdaddr
  1335 0000116D [7511000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001175 05                      	db T_undefined
  1338 00001176 [3407000000000000]      	dq L_constants + 1844
  1339                                  
  1340                                  free_var_55:	; location of cdadr
  1341 0000117E [8611000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001186 05                      	db T_undefined
  1344 00001187 [6506000000000000]      	dq L_constants + 1637
  1345                                  
  1346                                  free_var_56:	; location of cdar
  1347 0000118F [9711000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001197 05                      	db T_undefined
  1350 00001198 [0506000000000000]      	dq L_constants + 1541
  1351                                  
  1352                                  free_var_57:	; location of cddaar
  1353 000011A0 [A811000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A8 05                      	db T_undefined
  1356 000011A9 [4307000000000000]      	dq L_constants + 1859
  1357                                  
  1358                                  free_var_58:	; location of cddadr
  1359 000011B1 [B911000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B9 05                      	db T_undefined
  1362 000011BA [5207000000000000]      	dq L_constants + 1874
  1363                                  
  1364                                  free_var_59:	; location of cddar
  1365 000011C2 [CA11000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011CA 05                      	db T_undefined
  1368 000011CB [7306000000000000]      	dq L_constants + 1651
  1369                                  
  1370                                  free_var_60:	; location of cdddar
  1371 000011D3 [DB11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DB 05                      	db T_undefined
  1374 000011DC [6107000000000000]      	dq L_constants + 1889
  1375                                  
  1376                                  free_var_61:	; location of cddddr
  1377 000011E4 [EC11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EC 05                      	db T_undefined
  1380 000011ED [7007000000000000]      	dq L_constants + 1904
  1381                                  
  1382                                  free_var_62:	; location of cdddr
  1383 000011F5 [FD11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FD 05                      	db T_undefined
  1386 000011FE [8106000000000000]      	dq L_constants + 1665
  1387                                  
  1388                                  free_var_63:	; location of cddr
  1389 00001206 [0E12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120E 05                      	db T_undefined
  1392 0000120F [1206000000000000]      	dq L_constants + 1554
  1393                                  
  1394                                  free_var_64:	; location of cdr
  1395 00001217 [1F12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121F 05                      	db T_undefined
  1398 00001220 [2F01000000000000]      	dq L_constants + 303
  1399                                  
  1400                                  free_var_65:	; location of char->integer
  1401 00001228 [3012000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 00001230 05                      	db T_undefined
  1404 00001231 [B701000000000000]      	dq L_constants + 439
  1405                                  
  1406                                  free_var_66:	; location of char-ci<=?
  1407 00001239 [4112000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001241 05                      	db T_undefined
  1410 00001242 [230A000000000000]      	dq L_constants + 2595
  1411                                  
  1412                                  free_var_67:	; location of char-ci<?
  1413 0000124A [5212000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001252 05                      	db T_undefined
  1416 00001253 [110A000000000000]      	dq L_constants + 2577
  1417                                  
  1418                                  free_var_68:	; location of char-ci=?
  1419 0000125B [6312000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001263 05                      	db T_undefined
  1422 00001264 [360A000000000000]      	dq L_constants + 2614
  1423                                  
  1424                                  free_var_69:	; location of char-ci>=?
  1425 0000126C [7412000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001274 05                      	db T_undefined
  1428 00001275 [5A0A000000000000]      	dq L_constants + 2650
  1429                                  
  1430                                  free_var_70:	; location of char-ci>?
  1431 0000127D [8512000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001285 05                      	db T_undefined
  1434 00001286 [480A000000000000]      	dq L_constants + 2632
  1435                                  
  1436                                  free_var_71:	; location of char-downcase
  1437 0000128E [9612000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001296 05                      	db T_undefined
  1440 00001297 [DF09000000000000]      	dq L_constants + 2527
  1441                                  
  1442                                  free_var_72:	; location of char-upcase
  1443 0000129F [A712000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A7 05                      	db T_undefined
  1446 000012A8 [F509000000000000]      	dq L_constants + 2549
  1447                                  
  1448                                  free_var_73:	; location of char<=?
  1449 000012B0 [B812000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B8 05                      	db T_undefined
  1452 000012B9 [A109000000000000]      	dq L_constants + 2465
  1453                                  
  1454                                  free_var_74:	; location of char<?
  1455 000012C1 [C912000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C9 05                      	db T_undefined
  1458 000012CA [9209000000000000]      	dq L_constants + 2450
  1459                                  
  1460                                  free_var_75:	; location of char=?
  1461 000012D2 [DA12000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012DA 05                      	db T_undefined
  1464 000012DB [B109000000000000]      	dq L_constants + 2481
  1465                                  
  1466                                  free_var_76:	; location of char>=?
  1467 000012E3 [EB12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EB 05                      	db T_undefined
  1470 000012EC [CF09000000000000]      	dq L_constants + 2511
  1471                                  
  1472                                  free_var_77:	; location of char>?
  1473 000012F4 [FC12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FC 05                      	db T_undefined
  1476 000012FD [C009000000000000]      	dq L_constants + 2496
  1477                                  
  1478                                  free_var_78:	; location of char?
  1479 00001305 [0D13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130D 05                      	db T_undefined
  1482 0000130E [3000000000000000]      	dq L_constants + 48
  1483                                  
  1484                                  free_var_79:	; location of cons
  1485 00001316 [1E13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131E 05                      	db T_undefined
  1488 0000131F [DF00000000000000]      	dq L_constants + 223
  1489                                  
  1490                                  free_var_80:	; location of eq?
  1491 00001327 [2F13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132F 05                      	db T_undefined
  1494 00001330 [A404000000000000]      	dq L_constants + 1188
  1495                                  
  1496                                  free_var_81:	; location of equal?
  1497 00001338 [4013000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 00001340 05                      	db T_undefined
  1500 00001341 [980C000000000000]      	dq L_constants + 3224
  1501                                  
  1502                                  free_var_82:	; location of error
  1503 00001349 [5113000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001351 05                      	db T_undefined
  1506 00001352 [1F03000000000000]      	dq L_constants + 799
  1507                                  
  1508                                  free_var_83:	; location of even?
  1509 0000135A [6213000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001362 05                      	db T_undefined
  1512 00001363 [680C000000000000]      	dq L_constants + 3176
  1513                                  
  1514                                  free_var_84:	; location of fact
  1515 0000136B [7313000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001373 05                      	db T_undefined
  1518 00001374 [0309000000000000]      	dq L_constants + 2307
  1519                                  
  1520                                  free_var_85:	; location of fold-left
  1521 0000137C [8413000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001384 05                      	db T_undefined
  1524 00001385 [1908000000000000]      	dq L_constants + 2073
  1525                                  
  1526                                  free_var_86:	; location of fold-right
  1527 0000138D [9513000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001395 05                      	db T_undefined
  1530 00001396 [3A08000000000000]      	dq L_constants + 2106
  1531                                  
  1532                                  free_var_87:	; location of fraction->real
  1533 0000139E [A613000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A6 05                      	db T_undefined
  1536 000013A7 [A001000000000000]      	dq L_constants + 416
  1537                                  
  1538                                  free_var_88:	; location of fraction?
  1539 000013AF [B713000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B7 05                      	db T_undefined
  1542 000013B8 [9800000000000000]      	dq L_constants + 152
  1543                                  
  1544                                  free_var_89:	; location of integer->char
  1545 000013C0 [C813000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C8 05                      	db T_undefined
  1548 000013C9 [CD01000000000000]      	dq L_constants + 461
  1549                                  
  1550                                  free_var_90:	; location of integer->real
  1551 000013D1 [D913000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D9 05                      	db T_undefined
  1554 000013DA [8A01000000000000]      	dq L_constants + 394
  1555                                  
  1556                                  free_var_91:	; location of integer?
  1557 000013E2 [EA13000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013EA 05                      	db T_undefined
  1560 000013EB [FE01000000000000]      	dq L_constants + 510
  1561                                  
  1562                                  free_var_92:	; location of list
  1563 000013F3 [FB13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FB 05                      	db T_undefined
  1566 000013FC [8D07000000000000]      	dq L_constants + 1933
  1567                                  
  1568                                  free_var_93:	; location of list*
  1569 00001404 [0C14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140C 05                      	db T_undefined
  1572 0000140D [B807000000000000]      	dq L_constants + 1976
  1573                                  
  1574                                  free_var_94:	; location of list->string
  1575 00001415 [1D14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141D 05                      	db T_undefined
  1578 0000141E [9B0A000000000000]      	dq L_constants + 2715
  1579                                  
  1580                                  free_var_95:	; location of list->vector
  1581 00001426 [2E14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142E 05                      	db T_undefined
  1584 0000142F [FC0B000000000000]      	dq L_constants + 3068
  1585                                  
  1586                                  free_var_96:	; location of list?
  1587 00001437 [3F14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143F 05                      	db T_undefined
  1590 00001440 [7F07000000000000]      	dq L_constants + 1919
  1591                                  
  1592                                  free_var_97:	; location of logarithm
  1593 00001448 [5014000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 00001450 05                      	db T_undefined
  1596 00001451 [8B0D000000000000]      	dq L_constants + 3467
  1597                                  
  1598                                  free_var_98:	; location of make-list-thunk
  1599 00001459 [6114000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001461 05                      	db T_undefined
  1602 00001462 [3F0D000000000000]      	dq L_constants + 3391
  1603                                  
  1604                                  free_var_99:	; location of make-string
  1605 0000146A [7214000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001472 05                      	db T_undefined
  1608 00001473 [6A04000000000000]      	dq L_constants + 1130
  1609                                  
  1610                                  free_var_100:	; location of make-string-thunk
  1611 0000147B [8314000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001483 05                      	db T_undefined
  1614 00001484 [570D000000000000]      	dq L_constants + 3415
  1615                                  
  1616                                  free_var_101:	; location of make-vector
  1617 0000148C [9414000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001494 05                      	db T_undefined
  1620 00001495 [5604000000000000]      	dq L_constants + 1110
  1621                                  
  1622                                  free_var_102:	; location of make-vector-thunk
  1623 0000149D [A514000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A5 05                      	db T_undefined
  1626 000014A6 [710D000000000000]      	dq L_constants + 3441
  1627                                  
  1628                                  free_var_103:	; location of map
  1629 000014AE [B614000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B6 05                      	db T_undefined
  1632 000014B7 [EE07000000000000]      	dq L_constants + 2030
  1633                                  
  1634                                  free_var_104:	; location of negative?
  1635 000014BF [C714000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C7 05                      	db T_undefined
  1638 000014C8 [560C000000000000]      	dq L_constants + 3158
  1639                                  
  1640                                  free_var_105:	; location of newline
  1641 000014D0 [D814000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D8 05                      	db T_undefined
  1644 000014D9 [A60D000000000000]      	dq L_constants + 3494
  1645                                  
  1646                                  free_var_106:	; location of not
  1647 000014E1 [E914000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E9 05                      	db T_undefined
  1650 000014EA [9A07000000000000]      	dq L_constants + 1946
  1651                                  
  1652                                  free_var_107:	; location of null?
  1653 000014F2 [FA14000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014FA 05                      	db T_undefined
  1656 000014FB [0600000000000000]      	dq L_constants + 6
  1657                                  
  1658                                  free_var_108:	; location of number?
  1659 00001503 [0B15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150B 05                      	db T_undefined
  1662 0000150C [BB00000000000000]      	dq L_constants + 187
  1663                                  
  1664                                  free_var_109:	; location of odd?
  1665 00001514 [1C15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151C 05                      	db T_undefined
  1668 0000151D [7F0C000000000000]      	dq L_constants + 3199
  1669                                  
  1670                                  free_var_110:	; location of ormap
  1671 00001525 [2D15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152D 05                      	db T_undefined
  1674 0000152E [E007000000000000]      	dq L_constants + 2016
  1675                                  
  1676                                  free_var_111:	; location of pair?
  1677 00001536 [3E15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153E 05                      	db T_undefined
  1680 0000153F [1400000000000000]      	dq L_constants + 20
  1681                                  
  1682                                  free_var_112:	; location of positive?
  1683 00001547 [4F15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154F 05                      	db T_undefined
  1686 00001550 [440C000000000000]      	dq L_constants + 3140
  1687                                  
  1688                                  free_var_113:	; location of random
  1689 00001558 [6015000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 00001560 05                      	db T_undefined
  1692 00001561 [350C000000000000]      	dq L_constants + 3125
  1693                                  
  1694                                  free_var_114:	; location of rational?
  1695 00001569 [7115000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001571 05                      	db T_undefined
  1698 00001572 [A607000000000000]      	dq L_constants + 1958
  1699                                  
  1700                                  free_var_115:	; location of real
  1701 0000157A [8215000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001582 05                      	db T_undefined
  1704 00001583 [BE08000000000000]      	dq L_constants + 2238
  1705                                  
  1706                                  free_var_116:	; location of real?
  1707 0000158B [9315000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001593 05                      	db T_undefined
  1710 00001594 [8A00000000000000]      	dq L_constants + 138
  1711                                  
  1712                                  free_var_117:	; location of remainder
  1713 0000159C [A415000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A4 05                      	db T_undefined
  1716 000015A5 [D403000000000000]      	dq L_constants + 980
  1717                                  
  1718                                  free_var_118:	; location of reverse
  1719 000015AD [B515000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B5 05                      	db T_undefined
  1722 000015B6 [0908000000000000]      	dq L_constants + 2057
  1723                                  
  1724                                  free_var_119:	; location of string->list
  1725 000015BE [C615000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C6 05                      	db T_undefined
  1728 000015C7 [B00A000000000000]      	dq L_constants + 2736
  1729                                  
  1730                                  free_var_120:	; location of string-append
  1731 000015CF [D715000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D7 05                      	db T_undefined
  1734 000015D8 [B50C000000000000]      	dq L_constants + 3253
  1735                                  
  1736                                  free_var_121:	; location of string-ci<=?
  1737 000015E0 [E815000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E8 05                      	db T_undefined
  1740 000015E9 [300B000000000000]      	dq L_constants + 2864
  1741                                  
  1742                                  free_var_122:	; location of string-ci<?
  1743 000015F1 [F915000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F9 05                      	db T_undefined
  1746 000015FA [1C0B000000000000]      	dq L_constants + 2844
  1747                                  
  1748                                  free_var_123:	; location of string-ci=?
  1749 00001602 [0A16000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 0000160A 05                      	db T_undefined
  1752 0000160B [450B000000000000]      	dq L_constants + 2885
  1753                                  
  1754                                  free_var_124:	; location of string-ci>=?
  1755 00001613 [1B16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161B 05                      	db T_undefined
  1758 0000161C [590B000000000000]      	dq L_constants + 2905
  1759                                  
  1760                                  free_var_125:	; location of string-ci>?
  1761 00001624 [2C16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162C 05                      	db T_undefined
  1764 0000162D [6E0B000000000000]      	dq L_constants + 2926
  1765                                  
  1766                                  free_var_126:	; location of string-downcase
  1767 00001635 [3D16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163D 05                      	db T_undefined
  1770 0000163E [6D0A000000000000]      	dq L_constants + 2669
  1771                                  
  1772                                  free_var_127:	; location of string-length
  1773 00001646 [4E16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164E 05                      	db T_undefined
  1776 0000164F [3B01000000000000]      	dq L_constants + 315
  1777                                  
  1778                                  free_var_128:	; location of string-ref
  1779 00001657 [5F16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165F 05                      	db T_undefined
  1782 00001660 [0804000000000000]      	dq L_constants + 1032
  1783                                  
  1784                                  free_var_129:	; location of string-reverse
  1785 00001668 [7016000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 00001670 05                      	db T_undefined
  1788 00001671 [E10C000000000000]      	dq L_constants + 3297
  1789                                  
  1790                                  free_var_130:	; location of string-reverse!
  1791 00001679 [8116000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001681 05                      	db T_undefined
  1794 00001682 [0F0D000000000000]      	dq L_constants + 3343
  1795                                  
  1796                                  free_var_131:	; location of string-set!
  1797 0000168A [9216000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001692 05                      	db T_undefined
  1800 00001693 [4204000000000000]      	dq L_constants + 1090
  1801                                  
  1802                                  free_var_132:	; location of string-upcase
  1803 0000169B [A316000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A3 05                      	db T_undefined
  1806 000016A4 [850A000000000000]      	dq L_constants + 2693
  1807                                  
  1808                                  free_var_133:	; location of string<=?
  1809 000016AC [B416000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B4 05                      	db T_undefined
  1812 000016B5 [D60A000000000000]      	dq L_constants + 2774
  1813                                  
  1814                                  free_var_134:	; location of string<?
  1815 000016BD [C516000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C5 05                      	db T_undefined
  1818 000016C6 [C50A000000000000]      	dq L_constants + 2757
  1819                                  
  1820                                  free_var_135:	; location of string=?
  1821 000016CE [D616000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D6 05                      	db T_undefined
  1824 000016D7 [E80A000000000000]      	dq L_constants + 2792
  1825                                  
  1826                                  free_var_136:	; location of string>=?
  1827 000016DF [E716000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E7 05                      	db T_undefined
  1830 000016E8 [F90A000000000000]      	dq L_constants + 2809
  1831                                  
  1832                                  free_var_137:	; location of string>?
  1833 000016F0 [F816000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F8 05                      	db T_undefined
  1836 000016F9 [0B0B000000000000]      	dq L_constants + 2827
  1837                                  
  1838                                  free_var_138:	; location of string?
  1839 00001701 [0917000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001709 05                      	db T_undefined
  1842 0000170A [3E00000000000000]      	dq L_constants + 62
  1843                                  
  1844                                  free_var_139:	; location of trng
  1845 00001712 [1A17000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 0000171A 05                      	db T_undefined
  1848 0000171B [E301000000000000]      	dq L_constants + 483
  1849                                  
  1850                                  free_var_140:	; location of vector
  1851 00001723 [2B17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172B 05                      	db T_undefined
  1854 0000172C [110C000000000000]      	dq L_constants + 3089
  1855                                  
  1856                                  free_var_141:	; location of vector->list
  1857 00001734 [3C17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173C 05                      	db T_undefined
  1860 0000173D [200C000000000000]      	dq L_constants + 3104
  1861                                  
  1862                                  free_var_142:	; location of vector-append
  1863 00001745 [4D17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174D 05                      	db T_undefined
  1866 0000174E [CB0C000000000000]      	dq L_constants + 3275
  1867                                  
  1868                                  free_var_143:	; location of vector-length
  1869 00001756 [5E17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175E 05                      	db T_undefined
  1872 0000175F [5101000000000000]      	dq L_constants + 337
  1873                                  
  1874                                  free_var_144:	; location of vector-ref
  1875 00001767 [6F17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176F 05                      	db T_undefined
  1878 00001770 [1B04000000000000]      	dq L_constants + 1051
  1879                                  
  1880                                  free_var_145:	; location of vector-reverse
  1881 00001778 [8017000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 00001780 05                      	db T_undefined
  1884 00001781 [F80C000000000000]      	dq L_constants + 3320
  1885                                  
  1886                                  free_var_146:	; location of vector-reverse!
  1887 00001789 [9117000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001791 05                      	db T_undefined
  1890 00001792 [270D000000000000]      	dq L_constants + 3367
  1891                                  
  1892                                  free_var_147:	; location of vector-set!
  1893 0000179A [A217000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A2 05                      	db T_undefined
  1896 000017A3 [2E04000000000000]      	dq L_constants + 1070
  1897                                  
  1898                                  free_var_148:	; location of vector?
  1899 000017AB [B317000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B3 05                      	db T_undefined
  1902 000017B4 [6700000000000000]      	dq L_constants + 103
  1903                                  
  1904                                  free_var_149:	; location of void
  1905 000017BC [C417000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C4 05                      	db T_undefined
  1908 000017C5 [B80D000000000000]      	dq L_constants + 3512
  1909                                  
  1910                                  free_var_150:	; location of write-char
  1911 000017CD [D517000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D5 05                      	db T_undefined
  1914 000017D6 [1001000000000000]      	dq L_constants + 272
  1915                                  
  1916                                  free_var_151:	; location of zero?
  1917 000017DE [E617000000000000]      	dq .undefined_object
  1918                                  .undefined_object:
  1919 000017E6 05                      	db T_undefined
  1920 000017E7 [F001000000000000]      	dq L_constants + 496
  1921                                  
  1922                                  
  1923                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1924                                  global main
  1925                                  section .text
  1926                                  main:
  1927 00000000 C8000000                        enter 0, 0
  1928 00000004 6A00                            push 0
  1929 00000006 6A00                            push 0
  1930 00000008 68[36520100]                    push Lend
  1931 0000000D C8000000                        enter 0, 0
  1932                                  	; building closure for null?
  1933 00000011 48BF-                   	mov rdi, free_var_107
  1933 00000013 [F214000000000000] 
  1934 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1934 0000001D [D05D010000000000] 
  1935 00000025 E8A75B0100              	call bind_primitive
  1936                                  
  1937                                  	; building closure for pair?
  1938 0000002A 48BF-                   	mov rdi, free_var_111
  1938 0000002C [3615000000000000] 
  1939 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1939 00000036 [025E010000000000] 
  1940 0000003E E88E5B0100              	call bind_primitive
  1941                                  
  1942                                  	; building closure for char?
  1943 00000043 48BF-                   	mov rdi, free_var_78
  1943 00000045 [0513000000000000] 
  1944 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1944 0000004F [665E010000000000] 
  1945 00000057 E8755B0100              	call bind_primitive
  1946                                  
  1947                                  	; building closure for string?
  1948 0000005C 48BF-                   	mov rdi, free_var_138
  1948 0000005E [0117000000000000] 
  1949 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1949 00000068 [985E010000000000] 
  1950 00000070 E85C5B0100              	call bind_primitive
  1951                                  
  1952                                  	; building closure for vector?
  1953 00000075 48BF-                   	mov rdi, free_var_148
  1953 00000077 [AB17000000000000] 
  1954 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1954 00000081 [965F010000000000] 
  1955 00000089 E8435B0100              	call bind_primitive
  1956                                  
  1957                                  	; building closure for real?
  1958 0000008E 48BF-                   	mov rdi, free_var_116
  1958 00000090 [8B15000000000000] 
  1959 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1959 0000009A [FA5F010000000000] 
  1960 000000A2 E82A5B0100              	call bind_primitive
  1961                                  
  1962                                  	; building closure for fraction?
  1963 000000A7 48BF-                   	mov rdi, free_var_88
  1963 000000A9 [AF13000000000000] 
  1964 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1964 000000B3 [2C60010000000000] 
  1965 000000BB E8115B0100              	call bind_primitive
  1966                                  
  1967                                  	; building closure for number?
  1968 000000C0 48BF-                   	mov rdi, free_var_108
  1968 000000C2 [0315000000000000] 
  1969 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1969 000000CC [FA60010000000000] 
  1970 000000D4 E8F85A0100              	call bind_primitive
  1971                                  
  1972                                  	; building closure for cons
  1973 000000D9 48BF-                   	mov rdi, free_var_79
  1973 000000DB [1613000000000000] 
  1974 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1974 000000E5 [6261010000000000] 
  1975 000000ED E8DF5A0100              	call bind_primitive
  1976                                  
  1977                                  	; building closure for apply
  1978 000000F2 48BF-                   	mov rdi, free_var_33
  1978 000000F4 [0810000000000000] 
  1979 000000FC 48BE-                   	mov rsi, L_code_ptr_bin_apply
  1979 000000FE [415D010000000000] 
  1980 00000106 E8C65A0100              	call bind_primitive
  1981                                  
  1982                                  	; building closure for write-char
  1983 0000010B 48BF-                   	mov rdi, free_var_150
  1983 0000010D [CD17000000000000] 
  1984 00000115 48BE-                   	mov rsi, L_code_ptr_write_char
  1984 00000117 [B861010000000000] 
  1985 0000011F E8AD5A0100              	call bind_primitive
  1986                                  
  1987                                  	; building closure for car
  1988 00000124 48BF-                   	mov rdi, free_var_49
  1988 00000126 [1811000000000000] 
  1989 0000012E 48BE-                   	mov rsi, L_code_ptr_car
  1989 00000130 [0B62010000000000] 
  1990 00000138 E8945A0100              	call bind_primitive
  1991                                  
  1992                                  	; building closure for cdr
  1993 0000013D 48BF-                   	mov rdi, free_var_64
  1993 0000013F [1712000000000000] 
  1994 00000147 48BE-                   	mov rsi, L_code_ptr_cdr
  1994 00000149 [2F62010000000000] 
  1995 00000151 E87B5A0100              	call bind_primitive
  1996                                  
  1997                                  	; building closure for string-length
  1998 00000156 48BF-                   	mov rdi, free_var_127
  1998 00000158 [4616000000000000] 
  1999 00000160 48BE-                   	mov rsi, L_code_ptr_string_length
  1999 00000162 [5362010000000000] 
  2000 0000016A E8625A0100              	call bind_primitive
  2001                                  
  2002                                  	; building closure for vector-length
  2003 0000016F 48BF-                   	mov rdi, free_var_143
  2003 00000171 [5617000000000000] 
  2004 00000179 48BE-                   	mov rsi, L_code_ptr_vector_length
  2004 0000017B [7C62010000000000] 
  2005 00000183 E8495A0100              	call bind_primitive
  2006                                  
  2007                                  	; building closure for integer->real
  2008 00000188 48BF-                   	mov rdi, free_var_90
  2008 0000018A [D113000000000000] 
  2009 00000192 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2009 00000194 [ED62010000000000] 
  2010 0000019C E8305A0100              	call bind_primitive
  2011                                  
  2012                                  	; building closure for fraction->real
  2013 000001A1 48BF-                   	mov rdi, free_var_87
  2013 000001A3 [9E13000000000000] 
  2014 000001AB 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2014 000001AD [1B63010000000000] 
  2015 000001B5 E8175A0100              	call bind_primitive
  2016                                  
  2017                                  	; building closure for char->integer
  2018 000001BA 48BF-                   	mov rdi, free_var_65
  2018 000001BC [2812000000000000] 
  2019 000001C4 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2019 000001C6 [5663010000000000] 
  2020 000001CE E8FE590100              	call bind_primitive
  2021                                  
  2022                                  	; building closure for integer->char
  2023 000001D3 48BF-                   	mov rdi, free_var_89
  2023 000001D5 [C013000000000000] 
  2024 000001DD 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2024 000001DF [C563010000000000] 
  2025 000001E7 E8E5590100              	call bind_primitive
  2026                                  
  2027                                  	; building closure for trng
  2028 000001EC 48BF-                   	mov rdi, free_var_139
  2028 000001EE [1217000000000000] 
  2029 000001F6 48BE-                   	mov rsi, L_code_ptr_trng
  2029 000001F8 [1064010000000000] 
  2030 00000200 E8CC590100              	call bind_primitive
  2031                                  
  2032                                  	; building closure for zero?
  2033 00000205 48BF-                   	mov rdi, free_var_151
  2033 00000207 [DE17000000000000] 
  2034 0000020F 48BE-                   	mov rsi, L_code_ptr_is_zero
  2034 00000211 [2F64010000000000] 
  2035 00000219 E8B3590100              	call bind_primitive
  2036                                  
  2037                                  	; building closure for integer?
  2038 0000021E 48BF-                   	mov rdi, free_var_91
  2038 00000220 [E213000000000000] 
  2039 00000228 48BE-                   	mov rsi, L_code_ptr_is_integer
  2039 0000022A [9464010000000000] 
  2040 00000232 E89A590100              	call bind_primitive
  2041                                  
  2042                                  	; building closure for __bin-apply
  2043 00000237 48BF-                   	mov rdi, free_var_12
  2043 00000239 [A30E000000000000] 
  2044 00000241 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2044 00000243 [415D010000000000] 
  2045 0000024B E881590100              	call bind_primitive
  2046                                  
  2047                                  	; building closure for __bin-add-rr
  2048 00000250 48BF-                   	mov rdi, free_var_10
  2048 00000252 [810E000000000000] 
  2049 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2049 0000025C [C664010000000000] 
  2050 00000264 E868590100              	call bind_primitive
  2051                                  
  2052                                  	; building closure for __bin-sub-rr
  2053 00000269 48BF-                   	mov rdi, free_var_26
  2053 0000026B [910F000000000000] 
  2054 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2054 00000275 [0665010000000000] 
  2055 0000027D E84F590100              	call bind_primitive
  2056                                  
  2057                                  	; building closure for __bin-mul-rr
  2058 00000282 48BF-                   	mov rdi, free_var_23
  2058 00000284 [5E0F000000000000] 
  2059 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2059 0000028E [4665010000000000] 
  2060 00000296 E836590100              	call bind_primitive
  2061                                  
  2062                                  	; building closure for __bin-div-rr
  2063 0000029B 48BF-                   	mov rdi, free_var_14
  2063 0000029D [C50E000000000000] 
  2064 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2064 000002A7 [8665010000000000] 
  2065 000002AF E81D590100              	call bind_primitive
  2066                                  
  2067                                  	; building closure for __bin-add-qq
  2068 000002B4 48BF-                   	mov rdi, free_var_9
  2068 000002B6 [700E000000000000] 
  2069 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2069 000002C0 [1066010000000000] 
  2070 000002C8 E804590100              	call bind_primitive
  2071                                  
  2072                                  	; building closure for __bin-sub-qq
  2073 000002CD 48BF-                   	mov rdi, free_var_25
  2073 000002CF [800F000000000000] 
  2074 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2074 000002D9 [B066010000000000] 
  2075 000002E1 E8EB580100              	call bind_primitive
  2076                                  
  2077                                  	; building closure for __bin-mul-qq
  2078 000002E6 48BF-                   	mov rdi, free_var_22
  2078 000002E8 [4D0F000000000000] 
  2079 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2079 000002F2 [5567010000000000] 
  2080 000002FA E8D2580100              	call bind_primitive
  2081                                  
  2082                                  	; building closure for __bin-div-qq
  2083 000002FF 48BF-                   	mov rdi, free_var_13
  2083 00000301 [B40E000000000000] 
  2084 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2084 0000030B [EF67010000000000] 
  2085 00000313 E8B9580100              	call bind_primitive
  2086                                  
  2087                                  	; building closure for __bin-add-zz
  2088 00000318 48BF-                   	mov rdi, free_var_11
  2088 0000031A [920E000000000000] 
  2089 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2089 00000324 [D465010000000000] 
  2090 0000032C E8A0580100              	call bind_primitive
  2091                                  
  2092                                  	; building closure for __bin-sub-zz
  2093 00000331 48BF-                   	mov rdi, free_var_27
  2093 00000333 [A20F000000000000] 
  2094 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2094 0000033D [7466010000000000] 
  2095 00000345 E887580100              	call bind_primitive
  2096                                  
  2097                                  	; building closure for __bin-mul-zz
  2098 0000034A 48BF-                   	mov rdi, free_var_24
  2098 0000034C [6F0F000000000000] 
  2099 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2099 00000356 [1467010000000000] 
  2100 0000035E E86E580100              	call bind_primitive
  2101                                  
  2102                                  	; building closure for __bin-div-zz
  2103 00000363 48BF-                   	mov rdi, free_var_15
  2103 00000365 [D60E000000000000] 
  2104 0000036D 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2104 0000036F [A967010000000000] 
  2105 00000377 E855580100              	call bind_primitive
  2106                                  
  2107                                  	; building closure for error
  2108 0000037C 48BF-                   	mov rdi, free_var_82
  2108 0000037E [4913000000000000] 
  2109 00000386 48BE-                   	mov rsi, L_code_ptr_error
  2109 00000388 [D968010000000000] 
  2110 00000390 E83C580100              	call bind_primitive
  2111                                  
  2112                                  	; building closure for __bin-less-than-rr
  2113 00000395 48BF-                   	mov rdi, free_var_20
  2113 00000397 [2B0F000000000000] 
  2114 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2114 000003A1 [9569010000000000] 
  2115 000003A9 E823580100              	call bind_primitive
  2116                                  
  2117                                  	; building closure for __bin-less-than-qq
  2118 000003AE 48BF-                   	mov rdi, free_var_19
  2118 000003B0 [1A0F000000000000] 
  2119 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2119 000003BA [376A010000000000] 
  2120 000003C2 E80A580100              	call bind_primitive
  2121                                  
  2122                                  	; building closure for __bin-less-than-zz
  2123 000003C7 48BF-                   	mov rdi, free_var_21
  2123 000003C9 [3C0F000000000000] 
  2124 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2124 000003D3 [E869010000000000] 
  2125 000003DB E8F1570100              	call bind_primitive
  2126                                  
  2127                                  	; building closure for __bin-equal-rr
  2128 000003E0 48BF-                   	mov rdi, free_var_17
  2128 000003E2 [F80E000000000000] 
  2129 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2129 000003EC [966A010000000000] 
  2130 000003F4 E8D8570100              	call bind_primitive
  2131                                  
  2132                                  	; building closure for __bin-equal-qq
  2133 000003F9 48BF-                   	mov rdi, free_var_16
  2133 000003FB [E70E000000000000] 
  2134 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2134 00000405 [386B010000000000] 
  2135 0000040D E8BF570100              	call bind_primitive
  2136                                  
  2137                                  	; building closure for __bin-equal-zz
  2138 00000412 48BF-                   	mov rdi, free_var_18
  2138 00000414 [090F000000000000] 
  2139 0000041C 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2139 0000041E [E96A010000000000] 
  2140 00000426 E8A6570100              	call bind_primitive
  2141                                  
  2142                                  	; building closure for remainder
  2143 0000042B 48BF-                   	mov rdi, free_var_117
  2143 0000042D [9C15000000000000] 
  2144 00000435 48BE-                   	mov rsi, L_code_ptr_remainder
  2144 00000437 [E36B010000000000] 
  2145 0000043F E88D570100              	call bind_primitive
  2146                                  
  2147                                  	; building closure for string-ref
  2148 00000444 48BF-                   	mov rdi, free_var_128
  2148 00000446 [5716000000000000] 
  2149 0000044E 48BE-                   	mov rsi, L_code_ptr_string_ref
  2149 00000450 [936C010000000000] 
  2150 00000458 E874570100              	call bind_primitive
  2151                                  
  2152                                  	; building closure for vector-ref
  2153 0000045D 48BF-                   	mov rdi, free_var_144
  2153 0000045F [6717000000000000] 
  2154 00000467 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2154 00000469 [EF6C010000000000] 
  2155 00000471 E85B570100              	call bind_primitive
  2156                                  
  2157                                  	; building closure for vector-set!
  2158 00000476 48BF-                   	mov rdi, free_var_147
  2158 00000478 [9A17000000000000] 
  2159 00000480 48BE-                   	mov rsi, L_code_ptr_vector_set
  2159 00000482 [3C6D010000000000] 
  2160 0000048A E842570100              	call bind_primitive
  2161                                  
  2162                                  	; building closure for string-set!
  2163 0000048F 48BF-                   	mov rdi, free_var_131
  2163 00000491 [8A16000000000000] 
  2164 00000499 48BE-                   	mov rsi, L_code_ptr_string_set
  2164 0000049B [976D010000000000] 
  2165 000004A3 E829570100              	call bind_primitive
  2166                                  
  2167                                  	; building closure for make-vector
  2168 000004A8 48BF-                   	mov rdi, free_var_101
  2168 000004AA [8C14000000000000] 
  2169 000004B2 48BE-                   	mov rsi, L_code_ptr_make_vector
  2169 000004B4 [FD6D010000000000] 
  2170 000004BC E810570100              	call bind_primitive
  2171                                  
  2172                                  	; building closure for make-string
  2173 000004C1 48BF-                   	mov rdi, free_var_99
  2173 000004C3 [6A14000000000000] 
  2174 000004CB 48BE-                   	mov rsi, L_code_ptr_make_string
  2174 000004CD [586E010000000000] 
  2175 000004D5 E8F7560100              	call bind_primitive
  2176                                  
  2177                                  	; building closure for eq?
  2178 000004DA 48BF-                   	mov rdi, free_var_80
  2178 000004DC [2713000000000000] 
  2179 000004E4 48BE-                   	mov rsi, L_code_ptr_is_eq
  2179 000004E6 [0D6F010000000000] 
  2180 000004EE E8DE560100              	call bind_primitive
  2181                                  
  2182                                  	; building closure for __integer-to-fraction
  2183 000004F3 48BF-                   	mov rdi, free_var_29
  2183 000004F5 [C40F000000000000] 
  2184 000004FD 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2184 000004FF [8763010000000000] 
  2185 00000507 E8C5560100              	call bind_primitive
  2186                                  
  2187 0000050C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2188 00000511 E88B4E0100              	call malloc
  2189 00000516 50                      	push rax
  2190 00000517 BF00000000              	mov rdi, 8 * 0	; new rib
  2191 0000051C E8804E0100              	call malloc
  2192 00000521 50                      	push rax
  2193 00000522 BF08000000              	mov rdi, 8 * 1	; extended env
  2194 00000527 E8754E0100              	call malloc
  2195 0000052C 488B7D10                	mov rdi, ENV
  2196 00000530 BE00000000              	mov rsi, 0
  2197 00000535 BA01000000              	mov rdx, 1
  2198                                  .L_lambda_simple_env_loop_0176:	; ext_env[i + 1] <-- env[i]
  2199 0000053A 4883FE00                	cmp rsi, 0
  2200 0000053E 7410                    	je .L_lambda_simple_env_end_0176
  2201 00000540 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2202 00000544 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2203 00000548 48FFC6                  	inc rsi
  2204 0000054B 48FFC2                  	inc rdx
  2205 0000054E EBEA                    	jmp .L_lambda_simple_env_loop_0176
  2206                                  .L_lambda_simple_env_end_0176:
  2207 00000550 5B                      	pop rbx
  2208 00000551 BE00000000              	mov rsi, 0
  2209                                  .L_lambda_simple_params_loop_0176:	; copy params
  2210 00000556 4883FE00                	cmp rsi, 0
  2211 0000055A 740E                    	je .L_lambda_simple_params_end_0176
  2212 0000055C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2213 00000561 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2214 00000565 48FFC6                  	inc rsi
  2215 00000568 EBEC                    	jmp .L_lambda_simple_params_loop_0176
  2216                                  .L_lambda_simple_params_end_0176:
  2217 0000056A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2218 0000056D 4889C3                  	mov rbx, rax
  2219 00000570 58                      	pop rax
  2220 00000571 C60004                  	mov byte [rax], T_closure
  2221 00000574 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2222 00000578 48C74009[85050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0176
  2223 00000580 E99C000000              	jmp .L_lambda_simple_end_0176
  2224                                  .L_lambda_simple_code_0176:	; lambda-simple body
  2225 00000585 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2226 0000058B 740B                    	je .L_lambda_simple_arity_check_ok_0176
  2227 0000058D FF742410                	push qword [rsp + 8 * 2]
  2228 00000591 6A01                    	push 1
  2229 00000593 E9C24D0100              	jmp L_error_incorrect_arity_simple
  2230                                  .L_lambda_simple_arity_check_ok_0176:
  2231 00000598 C8000000                	enter 0, 0
  2232                                  	; Initiating tail-call optimization
  2233                                  	; preparing a non-tail-call
  2234 0000059C 488B4520                	mov rax, PARAM(0)	; param x
  2235 000005A0 50                      	push rax
  2236 000005A1 6A01                    	push 1	; arg count
  2237 000005A3 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2238 000005AB 803805                  	cmp byte [rax], T_undefined
  2239 000005AE 0F84C04C0100            	je L_error_fvar_undefined
  2240 000005B4 803804                  	cmp byte [rax], T_closure
  2241 000005B7 0F853B4D0100            	jne L_error_non_closure
  2242 000005BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2243 000005C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2244 000005C3 50                      	push rax
  2245 000005C4 6A01                    	push 1	; Number of arguments
  2246 000005C6 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2247 000005CE 803805                  	cmp byte [rax], T_undefined
  2248 000005D1 0F849D4C0100            	je L_error_fvar_undefined
  2249 000005D7 803804                  	cmp byte [rax], T_closure
  2250 000005DA 0F85184D0100            	jne L_error_non_closure
  2251 000005E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2252 000005E3 FF7508                  	push qword [rbp + 8]
  2253 000005E6 FF7500                  	push qword [rbp]
  2254 000005E9 41BA05000000            	mov r10, 1 + 4
  2255 000005EF 4C8B4518                	mov r8, COUNT
  2256 000005F3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2257 000005F8 4C8D4DF8                	lea r9, [rbp - 8]
  2258                                  .L_tc_recycle_frame_loop_01cb:
  2259 000005FC 4983FA00                	cmp r10, 0
  2260 00000600 7413                    	je .L_tc_recycle_frame_done_01cb
  2261 00000602 4D8B19                  	mov r11, qword [r9]
  2262 00000605 4D8918                  	mov qword [r8], r11
  2263 00000608 49FFCA                  	dec r10
  2264 0000060B 4983E808                	sub r8, 8
  2265 0000060F 4983E908                	sub r9, 8
  2266 00000613 EBE7                    	jmp .L_tc_recycle_frame_loop_01cb
  2267                                  .L_tc_recycle_frame_done_01cb:
  2268 00000615 498D6008                	lea rsp, [r8 + 8]
  2269 00000619 5D                      	pop rbp
  2270 0000061A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2271 0000061D C9                      	leave
  2272 0000061E C21800                  	ret AND_KILL_FRAME(1)
  2273                                  .L_lambda_simple_end_0176:	; new closure is in rax
  2274 00000621 48890425[90100000]      	mov qword [free_var_41], rax
  2275 00000629 48B8-                   	mov rax, sob_void
  2275 0000062B [0000000000000000] 
  2276                                  
  2277 00000633 4889C7                  	mov rdi, rax
  2278 00000636 E8BB4F0100              	call print_sexpr_if_not_void
  2279 0000063B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2280 00000640 E85C4D0100              	call malloc
  2281 00000645 50                      	push rax
  2282 00000646 BF00000000              	mov rdi, 8 * 0	; new rib
  2283 0000064B E8514D0100              	call malloc
  2284 00000650 50                      	push rax
  2285 00000651 BF08000000              	mov rdi, 8 * 1	; extended env
  2286 00000656 E8464D0100              	call malloc
  2287 0000065B 488B7D10                	mov rdi, ENV
  2288 0000065F BE00000000              	mov rsi, 0
  2289 00000664 BA01000000              	mov rdx, 1
  2290                                  .L_lambda_simple_env_loop_0177:	; ext_env[i + 1] <-- env[i]
  2291 00000669 4883FE00                	cmp rsi, 0
  2292 0000066D 7410                    	je .L_lambda_simple_env_end_0177
  2293 0000066F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2294 00000673 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2295 00000677 48FFC6                  	inc rsi
  2296 0000067A 48FFC2                  	inc rdx
  2297 0000067D EBEA                    	jmp .L_lambda_simple_env_loop_0177
  2298                                  .L_lambda_simple_env_end_0177:
  2299 0000067F 5B                      	pop rbx
  2300 00000680 BE00000000              	mov rsi, 0
  2301                                  .L_lambda_simple_params_loop_0177:	; copy params
  2302 00000685 4883FE00                	cmp rsi, 0
  2303 00000689 740E                    	je .L_lambda_simple_params_end_0177
  2304 0000068B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2305 00000690 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2306 00000694 48FFC6                  	inc rsi
  2307 00000697 EBEC                    	jmp .L_lambda_simple_params_loop_0177
  2308                                  .L_lambda_simple_params_end_0177:
  2309 00000699 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2310 0000069C 4889C3                  	mov rbx, rax
  2311 0000069F 58                      	pop rax
  2312 000006A0 C60004                  	mov byte [rax], T_closure
  2313 000006A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2314 000006A7 48C74009[B4060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0177
  2315 000006AF E99C000000              	jmp .L_lambda_simple_end_0177
  2316                                  .L_lambda_simple_code_0177:	; lambda-simple body
  2317 000006B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2318 000006BA 740B                    	je .L_lambda_simple_arity_check_ok_0177
  2319 000006BC FF742410                	push qword [rsp + 8 * 2]
  2320 000006C0 6A01                    	push 1
  2321 000006C2 E9934C0100              	jmp L_error_incorrect_arity_simple
  2322                                  .L_lambda_simple_arity_check_ok_0177:
  2323 000006C7 C8000000                	enter 0, 0
  2324                                  	; Initiating tail-call optimization
  2325                                  	; preparing a non-tail-call
  2326 000006CB 488B4520                	mov rax, PARAM(0)	; param x
  2327 000006CF 50                      	push rax
  2328 000006D0 6A01                    	push 1	; arg count
  2329 000006D2 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  2330 000006DA 803805                  	cmp byte [rax], T_undefined
  2331 000006DD 0F84914B0100            	je L_error_fvar_undefined
  2332 000006E3 803804                  	cmp byte [rax], T_closure
  2333 000006E6 0F850C4C0100            	jne L_error_non_closure
  2334 000006EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  2335 000006EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  2336 000006F2 50                      	push rax
  2337 000006F3 6A01                    	push 1	; Number of arguments
  2338 000006F5 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2339 000006FD 803805                  	cmp byte [rax], T_undefined
  2340 00000700 0F846E4B0100            	je L_error_fvar_undefined
  2341 00000706 803804                  	cmp byte [rax], T_closure
  2342 00000709 0F85E94B0100            	jne L_error_non_closure
  2343 0000070F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2344 00000712 FF7508                  	push qword [rbp + 8]
  2345 00000715 FF7500                  	push qword [rbp]
  2346 00000718 41BA05000000            	mov r10, 1 + 4
  2347 0000071E 4C8B4518                	mov r8, COUNT
  2348 00000722 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2349 00000727 4C8D4DF8                	lea r9, [rbp - 8]
  2350                                  .L_tc_recycle_frame_loop_01cc:
  2351 0000072B 4983FA00                	cmp r10, 0
  2352 0000072F 7413                    	je .L_tc_recycle_frame_done_01cc
  2353 00000731 4D8B19                  	mov r11, qword [r9]
  2354 00000734 4D8918                  	mov qword [r8], r11
  2355 00000737 49FFCA                  	dec r10
  2356 0000073A 4983E808                	sub r8, 8
  2357 0000073E 4983E908                	sub r9, 8
  2358 00000742 EBE7                    	jmp .L_tc_recycle_frame_loop_01cc
  2359                                  .L_tc_recycle_frame_done_01cc:
  2360 00000744 498D6008                	lea rsp, [r8 + 8]
  2361 00000748 5D                      	pop rbp
  2362 00000749 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2363 0000074C C9                      	leave
  2364 0000074D C21800                  	ret AND_KILL_FRAME(1)
  2365                                  .L_lambda_simple_end_0177:	; new closure is in rax
  2366 00000750 48890425[07110000]      	mov qword [free_var_48], rax
  2367 00000758 48B8-                   	mov rax, sob_void
  2367 0000075A [0000000000000000] 
  2368                                  
  2369 00000762 4889C7                  	mov rdi, rax
  2370 00000765 E88C4E0100              	call print_sexpr_if_not_void
  2371 0000076A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2372 0000076F E82D4C0100              	call malloc
  2373 00000774 50                      	push rax
  2374 00000775 BF00000000              	mov rdi, 8 * 0	; new rib
  2375 0000077A E8224C0100              	call malloc
  2376 0000077F 50                      	push rax
  2377 00000780 BF08000000              	mov rdi, 8 * 1	; extended env
  2378 00000785 E8174C0100              	call malloc
  2379 0000078A 488B7D10                	mov rdi, ENV
  2380 0000078E BE00000000              	mov rsi, 0
  2381 00000793 BA01000000              	mov rdx, 1
  2382                                  .L_lambda_simple_env_loop_0178:	; ext_env[i + 1] <-- env[i]
  2383 00000798 4883FE00                	cmp rsi, 0
  2384 0000079C 7410                    	je .L_lambda_simple_env_end_0178
  2385 0000079E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2386 000007A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2387 000007A6 48FFC6                  	inc rsi
  2388 000007A9 48FFC2                  	inc rdx
  2389 000007AC EBEA                    	jmp .L_lambda_simple_env_loop_0178
  2390                                  .L_lambda_simple_env_end_0178:
  2391 000007AE 5B                      	pop rbx
  2392 000007AF BE00000000              	mov rsi, 0
  2393                                  .L_lambda_simple_params_loop_0178:	; copy params
  2394 000007B4 4883FE00                	cmp rsi, 0
  2395 000007B8 740E                    	je .L_lambda_simple_params_end_0178
  2396 000007BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2397 000007BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2398 000007C3 48FFC6                  	inc rsi
  2399 000007C6 EBEC                    	jmp .L_lambda_simple_params_loop_0178
  2400                                  .L_lambda_simple_params_end_0178:
  2401 000007C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2402 000007CB 4889C3                  	mov rbx, rax
  2403 000007CE 58                      	pop rax
  2404 000007CF C60004                  	mov byte [rax], T_closure
  2405 000007D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2406 000007D6 48C74009[E3070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0178
  2407 000007DE E99C000000              	jmp .L_lambda_simple_end_0178
  2408                                  .L_lambda_simple_code_0178:	; lambda-simple body
  2409 000007E3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2410 000007E9 740B                    	je .L_lambda_simple_arity_check_ok_0178
  2411 000007EB FF742410                	push qword [rsp + 8 * 2]
  2412 000007EF 6A01                    	push 1
  2413 000007F1 E9644B0100              	jmp L_error_incorrect_arity_simple
  2414                                  .L_lambda_simple_arity_check_ok_0178:
  2415 000007F6 C8000000                	enter 0, 0
  2416                                  	; Initiating tail-call optimization
  2417                                  	; preparing a non-tail-call
  2418 000007FA 488B4520                	mov rax, PARAM(0)	; param x
  2419 000007FE 50                      	push rax
  2420 000007FF 6A01                    	push 1	; arg count
  2421 00000801 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2422 00000809 803805                  	cmp byte [rax], T_undefined
  2423 0000080C 0F84624A0100            	je L_error_fvar_undefined
  2424 00000812 803804                  	cmp byte [rax], T_closure
  2425 00000815 0F85DD4A0100            	jne L_error_non_closure
  2426 0000081B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2427 0000081E FF5009                  	call SOB_CLOSURE_CODE(rax)
  2428 00000821 50                      	push rax
  2429 00000822 6A01                    	push 1	; Number of arguments
  2430 00000824 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  2431 0000082C 803805                  	cmp byte [rax], T_undefined
  2432 0000082F 0F843F4A0100            	je L_error_fvar_undefined
  2433 00000835 803804                  	cmp byte [rax], T_closure
  2434 00000838 0F85BA4A0100            	jne L_error_non_closure
  2435 0000083E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2436 00000841 FF7508                  	push qword [rbp + 8]
  2437 00000844 FF7500                  	push qword [rbp]
  2438 00000847 41BA05000000            	mov r10, 1 + 4
  2439 0000084D 4C8B4518                	mov r8, COUNT
  2440 00000851 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2441 00000856 4C8D4DF8                	lea r9, [rbp - 8]
  2442                                  .L_tc_recycle_frame_loop_01cd:
  2443 0000085A 4983FA00                	cmp r10, 0
  2444 0000085E 7413                    	je .L_tc_recycle_frame_done_01cd
  2445 00000860 4D8B19                  	mov r11, qword [r9]
  2446 00000863 4D8918                  	mov qword [r8], r11
  2447 00000866 49FFCA                  	dec r10
  2448 00000869 4983E808                	sub r8, 8
  2449 0000086D 4983E908                	sub r9, 8
  2450 00000871 EBE7                    	jmp .L_tc_recycle_frame_loop_01cd
  2451                                  .L_tc_recycle_frame_done_01cd:
  2452 00000873 498D6008                	lea rsp, [r8 + 8]
  2453 00000877 5D                      	pop rbp
  2454 00000878 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2455 0000087B C9                      	leave
  2456 0000087C C21800                  	ret AND_KILL_FRAME(1)
  2457                                  .L_lambda_simple_end_0178:	; new closure is in rax
  2458 0000087F 48890425[8F110000]      	mov qword [free_var_56], rax
  2459 00000887 48B8-                   	mov rax, sob_void
  2459 00000889 [0000000000000000] 
  2460                                  
  2461 00000891 4889C7                  	mov rdi, rax
  2462 00000894 E85D4D0100              	call print_sexpr_if_not_void
  2463 00000899 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2464 0000089E E8FE4A0100              	call malloc
  2465 000008A3 50                      	push rax
  2466 000008A4 BF00000000              	mov rdi, 8 * 0	; new rib
  2467 000008A9 E8F34A0100              	call malloc
  2468 000008AE 50                      	push rax
  2469 000008AF BF08000000              	mov rdi, 8 * 1	; extended env
  2470 000008B4 E8E84A0100              	call malloc
  2471 000008B9 488B7D10                	mov rdi, ENV
  2472 000008BD BE00000000              	mov rsi, 0
  2473 000008C2 BA01000000              	mov rdx, 1
  2474                                  .L_lambda_simple_env_loop_0179:	; ext_env[i + 1] <-- env[i]
  2475 000008C7 4883FE00                	cmp rsi, 0
  2476 000008CB 7410                    	je .L_lambda_simple_env_end_0179
  2477 000008CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2478 000008D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2479 000008D5 48FFC6                  	inc rsi
  2480 000008D8 48FFC2                  	inc rdx
  2481 000008DB EBEA                    	jmp .L_lambda_simple_env_loop_0179
  2482                                  .L_lambda_simple_env_end_0179:
  2483 000008DD 5B                      	pop rbx
  2484 000008DE BE00000000              	mov rsi, 0
  2485                                  .L_lambda_simple_params_loop_0179:	; copy params
  2486 000008E3 4883FE00                	cmp rsi, 0
  2487 000008E7 740E                    	je .L_lambda_simple_params_end_0179
  2488 000008E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2489 000008EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2490 000008F2 48FFC6                  	inc rsi
  2491 000008F5 EBEC                    	jmp .L_lambda_simple_params_loop_0179
  2492                                  .L_lambda_simple_params_end_0179:
  2493 000008F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2494 000008FA 4889C3                  	mov rbx, rax
  2495 000008FD 58                      	pop rax
  2496 000008FE C60004                  	mov byte [rax], T_closure
  2497 00000901 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2498 00000905 48C74009[12090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0179
  2499 0000090D E99C000000              	jmp .L_lambda_simple_end_0179
  2500                                  .L_lambda_simple_code_0179:	; lambda-simple body
  2501 00000912 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2502 00000918 740B                    	je .L_lambda_simple_arity_check_ok_0179
  2503 0000091A FF742410                	push qword [rsp + 8 * 2]
  2504 0000091E 6A01                    	push 1
  2505 00000920 E9354A0100              	jmp L_error_incorrect_arity_simple
  2506                                  .L_lambda_simple_arity_check_ok_0179:
  2507 00000925 C8000000                	enter 0, 0
  2508                                  	; Initiating tail-call optimization
  2509                                  	; preparing a non-tail-call
  2510 00000929 488B4520                	mov rax, PARAM(0)	; param x
  2511 0000092D 50                      	push rax
  2512 0000092E 6A01                    	push 1	; arg count
  2513 00000930 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  2514 00000938 803805                  	cmp byte [rax], T_undefined
  2515 0000093B 0F8433490100            	je L_error_fvar_undefined
  2516 00000941 803804                  	cmp byte [rax], T_closure
  2517 00000944 0F85AE490100            	jne L_error_non_closure
  2518 0000094A FF7001                  	push SOB_CLOSURE_ENV(rax)
  2519 0000094D FF5009                  	call SOB_CLOSURE_CODE(rax)
  2520 00000950 50                      	push rax
  2521 00000951 6A01                    	push 1	; Number of arguments
  2522 00000953 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  2523 0000095B 803805                  	cmp byte [rax], T_undefined
  2524 0000095E 0F8410490100            	je L_error_fvar_undefined
  2525 00000964 803804                  	cmp byte [rax], T_closure
  2526 00000967 0F858B490100            	jne L_error_non_closure
  2527 0000096D FF7001                  	push SOB_CLOSURE_ENV(rax)
  2528 00000970 FF7508                  	push qword [rbp + 8]
  2529 00000973 FF7500                  	push qword [rbp]
  2530 00000976 41BA05000000            	mov r10, 1 + 4
  2531 0000097C 4C8B4518                	mov r8, COUNT
  2532 00000980 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2533 00000985 4C8D4DF8                	lea r9, [rbp - 8]
  2534                                  .L_tc_recycle_frame_loop_01ce:
  2535 00000989 4983FA00                	cmp r10, 0
  2536 0000098D 7413                    	je .L_tc_recycle_frame_done_01ce
  2537 0000098F 4D8B19                  	mov r11, qword [r9]
  2538 00000992 4D8918                  	mov qword [r8], r11
  2539 00000995 49FFCA                  	dec r10
  2540 00000998 4983E808                	sub r8, 8
  2541 0000099C 4983E908                	sub r9, 8
  2542 000009A0 EBE7                    	jmp .L_tc_recycle_frame_loop_01ce
  2543                                  .L_tc_recycle_frame_done_01ce:
  2544 000009A2 498D6008                	lea rsp, [r8 + 8]
  2545 000009A6 5D                      	pop rbp
  2546 000009A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2547 000009AA C9                      	leave
  2548 000009AB C21800                  	ret AND_KILL_FRAME(1)
  2549                                  .L_lambda_simple_end_0179:	; new closure is in rax
  2550 000009AE 48890425[06120000]      	mov qword [free_var_63], rax
  2551 000009B6 48B8-                   	mov rax, sob_void
  2551 000009B8 [0000000000000000] 
  2552                                  
  2553 000009C0 4889C7                  	mov rdi, rax
  2554 000009C3 E82E4C0100              	call print_sexpr_if_not_void
  2555 000009C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2556 000009CD E8CF490100              	call malloc
  2557 000009D2 50                      	push rax
  2558 000009D3 BF00000000              	mov rdi, 8 * 0	; new rib
  2559 000009D8 E8C4490100              	call malloc
  2560 000009DD 50                      	push rax
  2561 000009DE BF08000000              	mov rdi, 8 * 1	; extended env
  2562 000009E3 E8B9490100              	call malloc
  2563 000009E8 488B7D10                	mov rdi, ENV
  2564 000009EC BE00000000              	mov rsi, 0
  2565 000009F1 BA01000000              	mov rdx, 1
  2566                                  .L_lambda_simple_env_loop_017a:	; ext_env[i + 1] <-- env[i]
  2567 000009F6 4883FE00                	cmp rsi, 0
  2568 000009FA 7410                    	je .L_lambda_simple_env_end_017a
  2569 000009FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2570 00000A00 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2571 00000A04 48FFC6                  	inc rsi
  2572 00000A07 48FFC2                  	inc rdx
  2573 00000A0A EBEA                    	jmp .L_lambda_simple_env_loop_017a
  2574                                  .L_lambda_simple_env_end_017a:
  2575 00000A0C 5B                      	pop rbx
  2576 00000A0D BE00000000              	mov rsi, 0
  2577                                  .L_lambda_simple_params_loop_017a:	; copy params
  2578 00000A12 4883FE00                	cmp rsi, 0
  2579 00000A16 740E                    	je .L_lambda_simple_params_end_017a
  2580 00000A18 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2581 00000A1D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2582 00000A21 48FFC6                  	inc rsi
  2583 00000A24 EBEC                    	jmp .L_lambda_simple_params_loop_017a
  2584                                  .L_lambda_simple_params_end_017a:
  2585 00000A26 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2586 00000A29 4889C3                  	mov rbx, rax
  2587 00000A2C 58                      	pop rax
  2588 00000A2D C60004                  	mov byte [rax], T_closure
  2589 00000A30 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2590 00000A34 48C74009[410A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017a
  2591 00000A3C E99C000000              	jmp .L_lambda_simple_end_017a
  2592                                  .L_lambda_simple_code_017a:	; lambda-simple body
  2593 00000A41 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2594 00000A47 740B                    	je .L_lambda_simple_arity_check_ok_017a
  2595 00000A49 FF742410                	push qword [rsp + 8 * 2]
  2596 00000A4D 6A01                    	push 1
  2597 00000A4F E906490100              	jmp L_error_incorrect_arity_simple
  2598                                  .L_lambda_simple_arity_check_ok_017a:
  2599 00000A54 C8000000                	enter 0, 0
  2600                                  	; Initiating tail-call optimization
  2601                                  	; preparing a non-tail-call
  2602 00000A58 488B4520                	mov rax, PARAM(0)	; param x
  2603 00000A5C 50                      	push rax
  2604 00000A5D 6A01                    	push 1	; arg count
  2605 00000A5F 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  2606 00000A67 803805                  	cmp byte [rax], T_undefined
  2607 00000A6A 0F8404480100            	je L_error_fvar_undefined
  2608 00000A70 803804                  	cmp byte [rax], T_closure
  2609 00000A73 0F857F480100            	jne L_error_non_closure
  2610 00000A79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2611 00000A7C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2612 00000A7F 50                      	push rax
  2613 00000A80 6A01                    	push 1	; Number of arguments
  2614 00000A82 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2615 00000A8A 803805                  	cmp byte [rax], T_undefined
  2616 00000A8D 0F84E1470100            	je L_error_fvar_undefined
  2617 00000A93 803804                  	cmp byte [rax], T_closure
  2618 00000A96 0F855C480100            	jne L_error_non_closure
  2619 00000A9C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2620 00000A9F FF7508                  	push qword [rbp + 8]
  2621 00000AA2 FF7500                  	push qword [rbp]
  2622 00000AA5 41BA05000000            	mov r10, 1 + 4
  2623 00000AAB 4C8B4518                	mov r8, COUNT
  2624 00000AAF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2625 00000AB4 4C8D4DF8                	lea r9, [rbp - 8]
  2626                                  .L_tc_recycle_frame_loop_01cf:
  2627 00000AB8 4983FA00                	cmp r10, 0
  2628 00000ABC 7413                    	je .L_tc_recycle_frame_done_01cf
  2629 00000ABE 4D8B19                  	mov r11, qword [r9]
  2630 00000AC1 4D8918                  	mov qword [r8], r11
  2631 00000AC4 49FFCA                  	dec r10
  2632 00000AC7 4983E808                	sub r8, 8
  2633 00000ACB 4983E908                	sub r9, 8
  2634 00000ACF EBE7                    	jmp .L_tc_recycle_frame_loop_01cf
  2635                                  .L_tc_recycle_frame_done_01cf:
  2636 00000AD1 498D6008                	lea rsp, [r8 + 8]
  2637 00000AD5 5D                      	pop rbp
  2638 00000AD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2639 00000AD9 C9                      	leave
  2640 00000ADA C21800                  	ret AND_KILL_FRAME(1)
  2641                                  .L_lambda_simple_end_017a:	; new closure is in rax
  2642 00000ADD 48890425[4C100000]      	mov qword [free_var_37], rax
  2643 00000AE5 48B8-                   	mov rax, sob_void
  2643 00000AE7 [0000000000000000] 
  2644                                  
  2645 00000AEF 4889C7                  	mov rdi, rax
  2646 00000AF2 E8FF4A0100              	call print_sexpr_if_not_void
  2647 00000AF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2648 00000AFC E8A0480100              	call malloc
  2649 00000B01 50                      	push rax
  2650 00000B02 BF00000000              	mov rdi, 8 * 0	; new rib
  2651 00000B07 E895480100              	call malloc
  2652 00000B0C 50                      	push rax
  2653 00000B0D BF08000000              	mov rdi, 8 * 1	; extended env
  2654 00000B12 E88A480100              	call malloc
  2655 00000B17 488B7D10                	mov rdi, ENV
  2656 00000B1B BE00000000              	mov rsi, 0
  2657 00000B20 BA01000000              	mov rdx, 1
  2658                                  .L_lambda_simple_env_loop_017b:	; ext_env[i + 1] <-- env[i]
  2659 00000B25 4883FE00                	cmp rsi, 0
  2660 00000B29 7410                    	je .L_lambda_simple_env_end_017b
  2661 00000B2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2662 00000B2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2663 00000B33 48FFC6                  	inc rsi
  2664 00000B36 48FFC2                  	inc rdx
  2665 00000B39 EBEA                    	jmp .L_lambda_simple_env_loop_017b
  2666                                  .L_lambda_simple_env_end_017b:
  2667 00000B3B 5B                      	pop rbx
  2668 00000B3C BE00000000              	mov rsi, 0
  2669                                  .L_lambda_simple_params_loop_017b:	; copy params
  2670 00000B41 4883FE00                	cmp rsi, 0
  2671 00000B45 740E                    	je .L_lambda_simple_params_end_017b
  2672 00000B47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2673 00000B4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2674 00000B50 48FFC6                  	inc rsi
  2675 00000B53 EBEC                    	jmp .L_lambda_simple_params_loop_017b
  2676                                  .L_lambda_simple_params_end_017b:
  2677 00000B55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2678 00000B58 4889C3                  	mov rbx, rax
  2679 00000B5B 58                      	pop rax
  2680 00000B5C C60004                  	mov byte [rax], T_closure
  2681 00000B5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2682 00000B63 48C74009[700B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017b
  2683 00000B6B E99C000000              	jmp .L_lambda_simple_end_017b
  2684                                  .L_lambda_simple_code_017b:	; lambda-simple body
  2685 00000B70 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2686 00000B76 740B                    	je .L_lambda_simple_arity_check_ok_017b
  2687 00000B78 FF742410                	push qword [rsp + 8 * 2]
  2688 00000B7C 6A01                    	push 1
  2689 00000B7E E9D7470100              	jmp L_error_incorrect_arity_simple
  2690                                  .L_lambda_simple_arity_check_ok_017b:
  2691 00000B83 C8000000                	enter 0, 0
  2692                                  	; Initiating tail-call optimization
  2693                                  	; preparing a non-tail-call
  2694 00000B87 488B4520                	mov rax, PARAM(0)	; param x
  2695 00000B8B 50                      	push rax
  2696 00000B8C 6A01                    	push 1	; arg count
  2697 00000B8E 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  2698 00000B96 803805                  	cmp byte [rax], T_undefined
  2699 00000B99 0F84D5460100            	je L_error_fvar_undefined
  2700 00000B9F 803804                  	cmp byte [rax], T_closure
  2701 00000BA2 0F8550470100            	jne L_error_non_closure
  2702 00000BA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2703 00000BAB FF5009                  	call SOB_CLOSURE_CODE(rax)
  2704 00000BAE 50                      	push rax
  2705 00000BAF 6A01                    	push 1	; Number of arguments
  2706 00000BB1 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2707 00000BB9 803805                  	cmp byte [rax], T_undefined
  2708 00000BBC 0F84B2460100            	je L_error_fvar_undefined
  2709 00000BC2 803804                  	cmp byte [rax], T_closure
  2710 00000BC5 0F852D470100            	jne L_error_non_closure
  2711 00000BCB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2712 00000BCE FF7508                  	push qword [rbp + 8]
  2713 00000BD1 FF7500                  	push qword [rbp]
  2714 00000BD4 41BA05000000            	mov r10, 1 + 4
  2715 00000BDA 4C8B4518                	mov r8, COUNT
  2716 00000BDE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2717 00000BE3 4C8D4DF8                	lea r9, [rbp - 8]
  2718                                  .L_tc_recycle_frame_loop_01d0:
  2719 00000BE7 4983FA00                	cmp r10, 0
  2720 00000BEB 7413                    	je .L_tc_recycle_frame_done_01d0
  2721 00000BED 4D8B19                  	mov r11, qword [r9]
  2722 00000BF0 4D8918                  	mov qword [r8], r11
  2723 00000BF3 49FFCA                  	dec r10
  2724 00000BF6 4983E808                	sub r8, 8
  2725 00000BFA 4983E908                	sub r9, 8
  2726 00000BFE EBE7                    	jmp .L_tc_recycle_frame_loop_01d0
  2727                                  .L_tc_recycle_frame_done_01d0:
  2728 00000C00 498D6008                	lea rsp, [r8 + 8]
  2729 00000C04 5D                      	pop rbp
  2730 00000C05 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2731 00000C08 C9                      	leave
  2732 00000C09 C21800                  	ret AND_KILL_FRAME(1)
  2733                                  .L_lambda_simple_end_017b:	; new closure is in rax
  2734 00000C0C 48890425[7F100000]      	mov qword [free_var_40], rax
  2735 00000C14 48B8-                   	mov rax, sob_void
  2735 00000C16 [0000000000000000] 
  2736                                  
  2737 00000C1E 4889C7                  	mov rdi, rax
  2738 00000C21 E8D0490100              	call print_sexpr_if_not_void
  2739 00000C26 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2740 00000C2B E871470100              	call malloc
  2741 00000C30 50                      	push rax
  2742 00000C31 BF00000000              	mov rdi, 8 * 0	; new rib
  2743 00000C36 E866470100              	call malloc
  2744 00000C3B 50                      	push rax
  2745 00000C3C BF08000000              	mov rdi, 8 * 1	; extended env
  2746 00000C41 E85B470100              	call malloc
  2747 00000C46 488B7D10                	mov rdi, ENV
  2748 00000C4A BE00000000              	mov rsi, 0
  2749 00000C4F BA01000000              	mov rdx, 1
  2750                                  .L_lambda_simple_env_loop_017c:	; ext_env[i + 1] <-- env[i]
  2751 00000C54 4883FE00                	cmp rsi, 0
  2752 00000C58 7410                    	je .L_lambda_simple_env_end_017c
  2753 00000C5A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2754 00000C5E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2755 00000C62 48FFC6                  	inc rsi
  2756 00000C65 48FFC2                  	inc rdx
  2757 00000C68 EBEA                    	jmp .L_lambda_simple_env_loop_017c
  2758                                  .L_lambda_simple_env_end_017c:
  2759 00000C6A 5B                      	pop rbx
  2760 00000C6B BE00000000              	mov rsi, 0
  2761                                  .L_lambda_simple_params_loop_017c:	; copy params
  2762 00000C70 4883FE00                	cmp rsi, 0
  2763 00000C74 740E                    	je .L_lambda_simple_params_end_017c
  2764 00000C76 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2765 00000C7B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2766 00000C7F 48FFC6                  	inc rsi
  2767 00000C82 EBEC                    	jmp .L_lambda_simple_params_loop_017c
  2768                                  .L_lambda_simple_params_end_017c:
  2769 00000C84 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2770 00000C87 4889C3                  	mov rbx, rax
  2771 00000C8A 58                      	pop rax
  2772 00000C8B C60004                  	mov byte [rax], T_closure
  2773 00000C8E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2774 00000C92 48C74009[9F0C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017c
  2775 00000C9A E99C000000              	jmp .L_lambda_simple_end_017c
  2776                                  .L_lambda_simple_code_017c:	; lambda-simple body
  2777 00000C9F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2778 00000CA5 740B                    	je .L_lambda_simple_arity_check_ok_017c
  2779 00000CA7 FF742410                	push qword [rsp + 8 * 2]
  2780 00000CAB 6A01                    	push 1
  2781 00000CAD E9A8460100              	jmp L_error_incorrect_arity_simple
  2782                                  .L_lambda_simple_arity_check_ok_017c:
  2783 00000CB2 C8000000                	enter 0, 0
  2784                                  	; Initiating tail-call optimization
  2785                                  	; preparing a non-tail-call
  2786 00000CB6 488B4520                	mov rax, PARAM(0)	; param x
  2787 00000CBA 50                      	push rax
  2788 00000CBB 6A01                    	push 1	; arg count
  2789 00000CBD 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  2790 00000CC5 803805                  	cmp byte [rax], T_undefined
  2791 00000CC8 0F84A6450100            	je L_error_fvar_undefined
  2792 00000CCE 803804                  	cmp byte [rax], T_closure
  2793 00000CD1 0F8521460100            	jne L_error_non_closure
  2794 00000CD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2795 00000CDA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2796 00000CDD 50                      	push rax
  2797 00000CDE 6A01                    	push 1	; Number of arguments
  2798 00000CE0 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2799 00000CE8 803805                  	cmp byte [rax], T_undefined
  2800 00000CEB 0F8483450100            	je L_error_fvar_undefined
  2801 00000CF1 803804                  	cmp byte [rax], T_closure
  2802 00000CF4 0F85FE450100            	jne L_error_non_closure
  2803 00000CFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2804 00000CFD FF7508                  	push qword [rbp + 8]
  2805 00000D00 FF7500                  	push qword [rbp]
  2806 00000D03 41BA05000000            	mov r10, 1 + 4
  2807 00000D09 4C8B4518                	mov r8, COUNT
  2808 00000D0D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2809 00000D12 4C8D4DF8                	lea r9, [rbp - 8]
  2810                                  .L_tc_recycle_frame_loop_01d1:
  2811 00000D16 4983FA00                	cmp r10, 0
  2812 00000D1A 7413                    	je .L_tc_recycle_frame_done_01d1
  2813 00000D1C 4D8B19                  	mov r11, qword [r9]
  2814 00000D1F 4D8918                  	mov qword [r8], r11
  2815 00000D22 49FFCA                  	dec r10
  2816 00000D25 4983E808                	sub r8, 8
  2817 00000D29 4983E908                	sub r9, 8
  2818 00000D2D EBE7                    	jmp .L_tc_recycle_frame_loop_01d1
  2819                                  .L_tc_recycle_frame_done_01d1:
  2820 00000D2F 498D6008                	lea rsp, [r8 + 8]
  2821 00000D33 5D                      	pop rbp
  2822 00000D34 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2823 00000D37 C9                      	leave
  2824 00000D38 C21800                  	ret AND_KILL_FRAME(1)
  2825                                  .L_lambda_simple_end_017c:	; new closure is in rax
  2826 00000D3B 48890425[C3100000]      	mov qword [free_var_44], rax
  2827 00000D43 48B8-                   	mov rax, sob_void
  2827 00000D45 [0000000000000000] 
  2828                                  
  2829 00000D4D 4889C7                  	mov rdi, rax
  2830 00000D50 E8A1480100              	call print_sexpr_if_not_void
  2831 00000D55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2832 00000D5A E842460100              	call malloc
  2833 00000D5F 50                      	push rax
  2834 00000D60 BF00000000              	mov rdi, 8 * 0	; new rib
  2835 00000D65 E837460100              	call malloc
  2836 00000D6A 50                      	push rax
  2837 00000D6B BF08000000              	mov rdi, 8 * 1	; extended env
  2838 00000D70 E82C460100              	call malloc
  2839 00000D75 488B7D10                	mov rdi, ENV
  2840 00000D79 BE00000000              	mov rsi, 0
  2841 00000D7E BA01000000              	mov rdx, 1
  2842                                  .L_lambda_simple_env_loop_017d:	; ext_env[i + 1] <-- env[i]
  2843 00000D83 4883FE00                	cmp rsi, 0
  2844 00000D87 7410                    	je .L_lambda_simple_env_end_017d
  2845 00000D89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2846 00000D8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2847 00000D91 48FFC6                  	inc rsi
  2848 00000D94 48FFC2                  	inc rdx
  2849 00000D97 EBEA                    	jmp .L_lambda_simple_env_loop_017d
  2850                                  .L_lambda_simple_env_end_017d:
  2851 00000D99 5B                      	pop rbx
  2852 00000D9A BE00000000              	mov rsi, 0
  2853                                  .L_lambda_simple_params_loop_017d:	; copy params
  2854 00000D9F 4883FE00                	cmp rsi, 0
  2855 00000DA3 740E                    	je .L_lambda_simple_params_end_017d
  2856 00000DA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2857 00000DAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2858 00000DAE 48FFC6                  	inc rsi
  2859 00000DB1 EBEC                    	jmp .L_lambda_simple_params_loop_017d
  2860                                  .L_lambda_simple_params_end_017d:
  2861 00000DB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2862 00000DB6 4889C3                  	mov rbx, rax
  2863 00000DB9 58                      	pop rax
  2864 00000DBA C60004                  	mov byte [rax], T_closure
  2865 00000DBD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2866 00000DC1 48C74009[CE0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017d
  2867 00000DC9 E99C000000              	jmp .L_lambda_simple_end_017d
  2868                                  .L_lambda_simple_code_017d:	; lambda-simple body
  2869 00000DCE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2870 00000DD4 740B                    	je .L_lambda_simple_arity_check_ok_017d
  2871 00000DD6 FF742410                	push qword [rsp + 8 * 2]
  2872 00000DDA 6A01                    	push 1
  2873 00000DDC E979450100              	jmp L_error_incorrect_arity_simple
  2874                                  .L_lambda_simple_arity_check_ok_017d:
  2875 00000DE1 C8000000                	enter 0, 0
  2876                                  	; Initiating tail-call optimization
  2877                                  	; preparing a non-tail-call
  2878 00000DE5 488B4520                	mov rax, PARAM(0)	; param x
  2879 00000DE9 50                      	push rax
  2880 00000DEA 6A01                    	push 1	; arg count
  2881 00000DEC 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  2882 00000DF4 803805                  	cmp byte [rax], T_undefined
  2883 00000DF7 0F8477440100            	je L_error_fvar_undefined
  2884 00000DFD 803804                  	cmp byte [rax], T_closure
  2885 00000E00 0F85F2440100            	jne L_error_non_closure
  2886 00000E06 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2887 00000E09 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2888 00000E0C 50                      	push rax
  2889 00000E0D 6A01                    	push 1	; Number of arguments
  2890 00000E0F 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  2891 00000E17 803805                  	cmp byte [rax], T_undefined
  2892 00000E1A 0F8454440100            	je L_error_fvar_undefined
  2893 00000E20 803804                  	cmp byte [rax], T_closure
  2894 00000E23 0F85CF440100            	jne L_error_non_closure
  2895 00000E29 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2896 00000E2C FF7508                  	push qword [rbp + 8]
  2897 00000E2F FF7500                  	push qword [rbp]
  2898 00000E32 41BA05000000            	mov r10, 1 + 4
  2899 00000E38 4C8B4518                	mov r8, COUNT
  2900 00000E3C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2901 00000E41 4C8D4DF8                	lea r9, [rbp - 8]
  2902                                  .L_tc_recycle_frame_loop_01d2:
  2903 00000E45 4983FA00                	cmp r10, 0
  2904 00000E49 7413                    	je .L_tc_recycle_frame_done_01d2
  2905 00000E4B 4D8B19                  	mov r11, qword [r9]
  2906 00000E4E 4D8918                  	mov qword [r8], r11
  2907 00000E51 49FFCA                  	dec r10
  2908 00000E54 4983E808                	sub r8, 8
  2909 00000E58 4983E908                	sub r9, 8
  2910 00000E5C EBE7                    	jmp .L_tc_recycle_frame_loop_01d2
  2911                                  .L_tc_recycle_frame_done_01d2:
  2912 00000E5E 498D6008                	lea rsp, [r8 + 8]
  2913 00000E62 5D                      	pop rbp
  2914 00000E63 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2915 00000E66 C9                      	leave
  2916 00000E67 C21800                  	ret AND_KILL_FRAME(1)
  2917                                  .L_lambda_simple_end_017d:	; new closure is in rax
  2918 00000E6A 48890425[F6100000]      	mov qword [free_var_47], rax
  2919 00000E72 48B8-                   	mov rax, sob_void
  2919 00000E74 [0000000000000000] 
  2920                                  
  2921 00000E7C 4889C7                  	mov rdi, rax
  2922 00000E7F E872470100              	call print_sexpr_if_not_void
  2923 00000E84 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2924 00000E89 E813450100              	call malloc
  2925 00000E8E 50                      	push rax
  2926 00000E8F BF00000000              	mov rdi, 8 * 0	; new rib
  2927 00000E94 E808450100              	call malloc
  2928 00000E99 50                      	push rax
  2929 00000E9A BF08000000              	mov rdi, 8 * 1	; extended env
  2930 00000E9F E8FD440100              	call malloc
  2931 00000EA4 488B7D10                	mov rdi, ENV
  2932 00000EA8 BE00000000              	mov rsi, 0
  2933 00000EAD BA01000000              	mov rdx, 1
  2934                                  .L_lambda_simple_env_loop_017e:	; ext_env[i + 1] <-- env[i]
  2935 00000EB2 4883FE00                	cmp rsi, 0
  2936 00000EB6 7410                    	je .L_lambda_simple_env_end_017e
  2937 00000EB8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2938 00000EBC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2939 00000EC0 48FFC6                  	inc rsi
  2940 00000EC3 48FFC2                  	inc rdx
  2941 00000EC6 EBEA                    	jmp .L_lambda_simple_env_loop_017e
  2942                                  .L_lambda_simple_env_end_017e:
  2943 00000EC8 5B                      	pop rbx
  2944 00000EC9 BE00000000              	mov rsi, 0
  2945                                  .L_lambda_simple_params_loop_017e:	; copy params
  2946 00000ECE 4883FE00                	cmp rsi, 0
  2947 00000ED2 740E                    	je .L_lambda_simple_params_end_017e
  2948 00000ED4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2949 00000ED9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2950 00000EDD 48FFC6                  	inc rsi
  2951 00000EE0 EBEC                    	jmp .L_lambda_simple_params_loop_017e
  2952                                  .L_lambda_simple_params_end_017e:
  2953 00000EE2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2954 00000EE5 4889C3                  	mov rbx, rax
  2955 00000EE8 58                      	pop rax
  2956 00000EE9 C60004                  	mov byte [rax], T_closure
  2957 00000EEC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2958 00000EF0 48C74009[FD0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017e
  2959 00000EF8 E99C000000              	jmp .L_lambda_simple_end_017e
  2960                                  .L_lambda_simple_code_017e:	; lambda-simple body
  2961 00000EFD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2962 00000F03 740B                    	je .L_lambda_simple_arity_check_ok_017e
  2963 00000F05 FF742410                	push qword [rsp + 8 * 2]
  2964 00000F09 6A01                    	push 1
  2965 00000F0B E94A440100              	jmp L_error_incorrect_arity_simple
  2966                                  .L_lambda_simple_arity_check_ok_017e:
  2967 00000F10 C8000000                	enter 0, 0
  2968                                  	; Initiating tail-call optimization
  2969                                  	; preparing a non-tail-call
  2970 00000F14 488B4520                	mov rax, PARAM(0)	; param x
  2971 00000F18 50                      	push rax
  2972 00000F19 6A01                    	push 1	; arg count
  2973 00000F1B 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  2974 00000F23 803805                  	cmp byte [rax], T_undefined
  2975 00000F26 0F8448430100            	je L_error_fvar_undefined
  2976 00000F2C 803804                  	cmp byte [rax], T_closure
  2977 00000F2F 0F85C3430100            	jne L_error_non_closure
  2978 00000F35 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2979 00000F38 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2980 00000F3B 50                      	push rax
  2981 00000F3C 6A01                    	push 1	; Number of arguments
  2982 00000F3E 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  2983 00000F46 803805                  	cmp byte [rax], T_undefined
  2984 00000F49 0F8425430100            	je L_error_fvar_undefined
  2985 00000F4F 803804                  	cmp byte [rax], T_closure
  2986 00000F52 0F85A0430100            	jne L_error_non_closure
  2987 00000F58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2988 00000F5B FF7508                  	push qword [rbp + 8]
  2989 00000F5E FF7500                  	push qword [rbp]
  2990 00000F61 41BA05000000            	mov r10, 1 + 4
  2991 00000F67 4C8B4518                	mov r8, COUNT
  2992 00000F6B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  2993 00000F70 4C8D4DF8                	lea r9, [rbp - 8]
  2994                                  .L_tc_recycle_frame_loop_01d3:
  2995 00000F74 4983FA00                	cmp r10, 0
  2996 00000F78 7413                    	je .L_tc_recycle_frame_done_01d3
  2997 00000F7A 4D8B19                  	mov r11, qword [r9]
  2998 00000F7D 4D8918                  	mov qword [r8], r11
  2999 00000F80 49FFCA                  	dec r10
  3000 00000F83 4983E808                	sub r8, 8
  3001 00000F87 4983E908                	sub r9, 8
  3002 00000F8B EBE7                    	jmp .L_tc_recycle_frame_loop_01d3
  3003                                  .L_tc_recycle_frame_done_01d3:
  3004 00000F8D 498D6008                	lea rsp, [r8 + 8]
  3005 00000F91 5D                      	pop rbp
  3006 00000F92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3007 00000F95 C9                      	leave
  3008 00000F96 C21800                  	ret AND_KILL_FRAME(1)
  3009                                  .L_lambda_simple_end_017e:	; new closure is in rax
  3010 00000F99 48890425[4B110000]      	mov qword [free_var_52], rax
  3011 00000FA1 48B8-                   	mov rax, sob_void
  3011 00000FA3 [0000000000000000] 
  3012                                  
  3013 00000FAB 4889C7                  	mov rdi, rax
  3014 00000FAE E843460100              	call print_sexpr_if_not_void
  3015 00000FB3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3016 00000FB8 E8E4430100              	call malloc
  3017 00000FBD 50                      	push rax
  3018 00000FBE BF00000000              	mov rdi, 8 * 0	; new rib
  3019 00000FC3 E8D9430100              	call malloc
  3020 00000FC8 50                      	push rax
  3021 00000FC9 BF08000000              	mov rdi, 8 * 1	; extended env
  3022 00000FCE E8CE430100              	call malloc
  3023 00000FD3 488B7D10                	mov rdi, ENV
  3024 00000FD7 BE00000000              	mov rsi, 0
  3025 00000FDC BA01000000              	mov rdx, 1
  3026                                  .L_lambda_simple_env_loop_017f:	; ext_env[i + 1] <-- env[i]
  3027 00000FE1 4883FE00                	cmp rsi, 0
  3028 00000FE5 7410                    	je .L_lambda_simple_env_end_017f
  3029 00000FE7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3030 00000FEB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3031 00000FEF 48FFC6                  	inc rsi
  3032 00000FF2 48FFC2                  	inc rdx
  3033 00000FF5 EBEA                    	jmp .L_lambda_simple_env_loop_017f
  3034                                  .L_lambda_simple_env_end_017f:
  3035 00000FF7 5B                      	pop rbx
  3036 00000FF8 BE00000000              	mov rsi, 0
  3037                                  .L_lambda_simple_params_loop_017f:	; copy params
  3038 00000FFD 4883FE00                	cmp rsi, 0
  3039 00001001 740E                    	je .L_lambda_simple_params_end_017f
  3040 00001003 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3041 00001008 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3042 0000100C 48FFC6                  	inc rsi
  3043 0000100F EBEC                    	jmp .L_lambda_simple_params_loop_017f
  3044                                  .L_lambda_simple_params_end_017f:
  3045 00001011 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3046 00001014 4889C3                  	mov rbx, rax
  3047 00001017 58                      	pop rax
  3048 00001018 C60004                  	mov byte [rax], T_closure
  3049 0000101B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3050 0000101F 48C74009[2C100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017f
  3051 00001027 E99C000000              	jmp .L_lambda_simple_end_017f
  3052                                  .L_lambda_simple_code_017f:	; lambda-simple body
  3053 0000102C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3054 00001032 740B                    	je .L_lambda_simple_arity_check_ok_017f
  3055 00001034 FF742410                	push qword [rsp + 8 * 2]
  3056 00001038 6A01                    	push 1
  3057 0000103A E91B430100              	jmp L_error_incorrect_arity_simple
  3058                                  .L_lambda_simple_arity_check_ok_017f:
  3059 0000103F C8000000                	enter 0, 0
  3060                                  	; Initiating tail-call optimization
  3061                                  	; preparing a non-tail-call
  3062 00001043 488B4520                	mov rax, PARAM(0)	; param x
  3063 00001047 50                      	push rax
  3064 00001048 6A01                    	push 1	; arg count
  3065 0000104A 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3066 00001052 803805                  	cmp byte [rax], T_undefined
  3067 00001055 0F8419420100            	je L_error_fvar_undefined
  3068 0000105B 803804                  	cmp byte [rax], T_closure
  3069 0000105E 0F8594420100            	jne L_error_non_closure
  3070 00001064 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3071 00001067 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3072 0000106A 50                      	push rax
  3073 0000106B 6A01                    	push 1	; Number of arguments
  3074 0000106D 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  3075 00001075 803805                  	cmp byte [rax], T_undefined
  3076 00001078 0F84F6410100            	je L_error_fvar_undefined
  3077 0000107E 803804                  	cmp byte [rax], T_closure
  3078 00001081 0F8571420100            	jne L_error_non_closure
  3079 00001087 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3080 0000108A FF7508                  	push qword [rbp + 8]
  3081 0000108D FF7500                  	push qword [rbp]
  3082 00001090 41BA05000000            	mov r10, 1 + 4
  3083 00001096 4C8B4518                	mov r8, COUNT
  3084 0000109A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3085 0000109F 4C8D4DF8                	lea r9, [rbp - 8]
  3086                                  .L_tc_recycle_frame_loop_01d4:
  3087 000010A3 4983FA00                	cmp r10, 0
  3088 000010A7 7413                    	je .L_tc_recycle_frame_done_01d4
  3089 000010A9 4D8B19                  	mov r11, qword [r9]
  3090 000010AC 4D8918                  	mov qword [r8], r11
  3091 000010AF 49FFCA                  	dec r10
  3092 000010B2 4983E808                	sub r8, 8
  3093 000010B6 4983E908                	sub r9, 8
  3094 000010BA EBE7                    	jmp .L_tc_recycle_frame_loop_01d4
  3095                                  .L_tc_recycle_frame_done_01d4:
  3096 000010BC 498D6008                	lea rsp, [r8 + 8]
  3097 000010C0 5D                      	pop rbp
  3098 000010C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3099 000010C4 C9                      	leave
  3100 000010C5 C21800                  	ret AND_KILL_FRAME(1)
  3101                                  .L_lambda_simple_end_017f:	; new closure is in rax
  3102 000010C8 48890425[7E110000]      	mov qword [free_var_55], rax
  3103 000010D0 48B8-                   	mov rax, sob_void
  3103 000010D2 [0000000000000000] 
  3104                                  
  3105 000010DA 4889C7                  	mov rdi, rax
  3106 000010DD E814450100              	call print_sexpr_if_not_void
  3107 000010E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3108 000010E7 E8B5420100              	call malloc
  3109 000010EC 50                      	push rax
  3110 000010ED BF00000000              	mov rdi, 8 * 0	; new rib
  3111 000010F2 E8AA420100              	call malloc
  3112 000010F7 50                      	push rax
  3113 000010F8 BF08000000              	mov rdi, 8 * 1	; extended env
  3114 000010FD E89F420100              	call malloc
  3115 00001102 488B7D10                	mov rdi, ENV
  3116 00001106 BE00000000              	mov rsi, 0
  3117 0000110B BA01000000              	mov rdx, 1
  3118                                  .L_lambda_simple_env_loop_0180:	; ext_env[i + 1] <-- env[i]
  3119 00001110 4883FE00                	cmp rsi, 0
  3120 00001114 7410                    	je .L_lambda_simple_env_end_0180
  3121 00001116 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3122 0000111A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3123 0000111E 48FFC6                  	inc rsi
  3124 00001121 48FFC2                  	inc rdx
  3125 00001124 EBEA                    	jmp .L_lambda_simple_env_loop_0180
  3126                                  .L_lambda_simple_env_end_0180:
  3127 00001126 5B                      	pop rbx
  3128 00001127 BE00000000              	mov rsi, 0
  3129                                  .L_lambda_simple_params_loop_0180:	; copy params
  3130 0000112C 4883FE00                	cmp rsi, 0
  3131 00001130 740E                    	je .L_lambda_simple_params_end_0180
  3132 00001132 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3133 00001137 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3134 0000113B 48FFC6                  	inc rsi
  3135 0000113E EBEC                    	jmp .L_lambda_simple_params_loop_0180
  3136                                  .L_lambda_simple_params_end_0180:
  3137 00001140 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3138 00001143 4889C3                  	mov rbx, rax
  3139 00001146 58                      	pop rax
  3140 00001147 C60004                  	mov byte [rax], T_closure
  3141 0000114A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3142 0000114E 48C74009[5B110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0180
  3143 00001156 E99C000000              	jmp .L_lambda_simple_end_0180
  3144                                  .L_lambda_simple_code_0180:	; lambda-simple body
  3145 0000115B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3146 00001161 740B                    	je .L_lambda_simple_arity_check_ok_0180
  3147 00001163 FF742410                	push qword [rsp + 8 * 2]
  3148 00001167 6A01                    	push 1
  3149 00001169 E9EC410100              	jmp L_error_incorrect_arity_simple
  3150                                  .L_lambda_simple_arity_check_ok_0180:
  3151 0000116E C8000000                	enter 0, 0
  3152                                  	; Initiating tail-call optimization
  3153                                  	; preparing a non-tail-call
  3154 00001172 488B4520                	mov rax, PARAM(0)	; param x
  3155 00001176 50                      	push rax
  3156 00001177 6A01                    	push 1	; arg count
  3157 00001179 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  3158 00001181 803805                  	cmp byte [rax], T_undefined
  3159 00001184 0F84EA400100            	je L_error_fvar_undefined
  3160 0000118A 803804                  	cmp byte [rax], T_closure
  3161 0000118D 0F8565410100            	jne L_error_non_closure
  3162 00001193 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3163 00001196 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3164 00001199 50                      	push rax
  3165 0000119A 6A01                    	push 1	; Number of arguments
  3166 0000119C 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  3167 000011A4 803805                  	cmp byte [rax], T_undefined
  3168 000011A7 0F84C7400100            	je L_error_fvar_undefined
  3169 000011AD 803804                  	cmp byte [rax], T_closure
  3170 000011B0 0F8542410100            	jne L_error_non_closure
  3171 000011B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3172 000011B9 FF7508                  	push qword [rbp + 8]
  3173 000011BC FF7500                  	push qword [rbp]
  3174 000011BF 41BA05000000            	mov r10, 1 + 4
  3175 000011C5 4C8B4518                	mov r8, COUNT
  3176 000011C9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3177 000011CE 4C8D4DF8                	lea r9, [rbp - 8]
  3178                                  .L_tc_recycle_frame_loop_01d5:
  3179 000011D2 4983FA00                	cmp r10, 0
  3180 000011D6 7413                    	je .L_tc_recycle_frame_done_01d5
  3181 000011D8 4D8B19                  	mov r11, qword [r9]
  3182 000011DB 4D8918                  	mov qword [r8], r11
  3183 000011DE 49FFCA                  	dec r10
  3184 000011E1 4983E808                	sub r8, 8
  3185 000011E5 4983E908                	sub r9, 8
  3186 000011E9 EBE7                    	jmp .L_tc_recycle_frame_loop_01d5
  3187                                  .L_tc_recycle_frame_done_01d5:
  3188 000011EB 498D6008                	lea rsp, [r8 + 8]
  3189 000011EF 5D                      	pop rbp
  3190 000011F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3191 000011F3 C9                      	leave
  3192 000011F4 C21800                  	ret AND_KILL_FRAME(1)
  3193                                  .L_lambda_simple_end_0180:	; new closure is in rax
  3194 000011F7 48890425[C2110000]      	mov qword [free_var_59], rax
  3195 000011FF 48B8-                   	mov rax, sob_void
  3195 00001201 [0000000000000000] 
  3196                                  
  3197 00001209 4889C7                  	mov rdi, rax
  3198 0000120C E8E5430100              	call print_sexpr_if_not_void
  3199 00001211 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3200 00001216 E886410100              	call malloc
  3201 0000121B 50                      	push rax
  3202 0000121C BF00000000              	mov rdi, 8 * 0	; new rib
  3203 00001221 E87B410100              	call malloc
  3204 00001226 50                      	push rax
  3205 00001227 BF08000000              	mov rdi, 8 * 1	; extended env
  3206 0000122C E870410100              	call malloc
  3207 00001231 488B7D10                	mov rdi, ENV
  3208 00001235 BE00000000              	mov rsi, 0
  3209 0000123A BA01000000              	mov rdx, 1
  3210                                  .L_lambda_simple_env_loop_0181:	; ext_env[i + 1] <-- env[i]
  3211 0000123F 4883FE00                	cmp rsi, 0
  3212 00001243 7410                    	je .L_lambda_simple_env_end_0181
  3213 00001245 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3214 00001249 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3215 0000124D 48FFC6                  	inc rsi
  3216 00001250 48FFC2                  	inc rdx
  3217 00001253 EBEA                    	jmp .L_lambda_simple_env_loop_0181
  3218                                  .L_lambda_simple_env_end_0181:
  3219 00001255 5B                      	pop rbx
  3220 00001256 BE00000000              	mov rsi, 0
  3221                                  .L_lambda_simple_params_loop_0181:	; copy params
  3222 0000125B 4883FE00                	cmp rsi, 0
  3223 0000125F 740E                    	je .L_lambda_simple_params_end_0181
  3224 00001261 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3225 00001266 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3226 0000126A 48FFC6                  	inc rsi
  3227 0000126D EBEC                    	jmp .L_lambda_simple_params_loop_0181
  3228                                  .L_lambda_simple_params_end_0181:
  3229 0000126F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3230 00001272 4889C3                  	mov rbx, rax
  3231 00001275 58                      	pop rax
  3232 00001276 C60004                  	mov byte [rax], T_closure
  3233 00001279 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3234 0000127D 48C74009[8A120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0181
  3235 00001285 E99C000000              	jmp .L_lambda_simple_end_0181
  3236                                  .L_lambda_simple_code_0181:	; lambda-simple body
  3237 0000128A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3238 00001290 740B                    	je .L_lambda_simple_arity_check_ok_0181
  3239 00001292 FF742410                	push qword [rsp + 8 * 2]
  3240 00001296 6A01                    	push 1
  3241 00001298 E9BD400100              	jmp L_error_incorrect_arity_simple
  3242                                  .L_lambda_simple_arity_check_ok_0181:
  3243 0000129D C8000000                	enter 0, 0
  3244                                  	; Initiating tail-call optimization
  3245                                  	; preparing a non-tail-call
  3246 000012A1 488B4520                	mov rax, PARAM(0)	; param x
  3247 000012A5 50                      	push rax
  3248 000012A6 6A01                    	push 1	; arg count
  3249 000012A8 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  3250 000012B0 803805                  	cmp byte [rax], T_undefined
  3251 000012B3 0F84BB3F0100            	je L_error_fvar_undefined
  3252 000012B9 803804                  	cmp byte [rax], T_closure
  3253 000012BC 0F8536400100            	jne L_error_non_closure
  3254 000012C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3255 000012C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3256 000012C8 50                      	push rax
  3257 000012C9 6A01                    	push 1	; Number of arguments
  3258 000012CB 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  3259 000012D3 803805                  	cmp byte [rax], T_undefined
  3260 000012D6 0F84983F0100            	je L_error_fvar_undefined
  3261 000012DC 803804                  	cmp byte [rax], T_closure
  3262 000012DF 0F8513400100            	jne L_error_non_closure
  3263 000012E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3264 000012E8 FF7508                  	push qword [rbp + 8]
  3265 000012EB FF7500                  	push qword [rbp]
  3266 000012EE 41BA05000000            	mov r10, 1 + 4
  3267 000012F4 4C8B4518                	mov r8, COUNT
  3268 000012F8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3269 000012FD 4C8D4DF8                	lea r9, [rbp - 8]
  3270                                  .L_tc_recycle_frame_loop_01d6:
  3271 00001301 4983FA00                	cmp r10, 0
  3272 00001305 7413                    	je .L_tc_recycle_frame_done_01d6
  3273 00001307 4D8B19                  	mov r11, qword [r9]
  3274 0000130A 4D8918                  	mov qword [r8], r11
  3275 0000130D 49FFCA                  	dec r10
  3276 00001310 4983E808                	sub r8, 8
  3277 00001314 4983E908                	sub r9, 8
  3278 00001318 EBE7                    	jmp .L_tc_recycle_frame_loop_01d6
  3279                                  .L_tc_recycle_frame_done_01d6:
  3280 0000131A 498D6008                	lea rsp, [r8 + 8]
  3281 0000131E 5D                      	pop rbp
  3282 0000131F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3283 00001322 C9                      	leave
  3284 00001323 C21800                  	ret AND_KILL_FRAME(1)
  3285                                  .L_lambda_simple_end_0181:	; new closure is in rax
  3286 00001326 48890425[F5110000]      	mov qword [free_var_62], rax
  3287 0000132E 48B8-                   	mov rax, sob_void
  3287 00001330 [0000000000000000] 
  3288                                  
  3289 00001338 4889C7                  	mov rdi, rax
  3290 0000133B E8B6420100              	call print_sexpr_if_not_void
  3291 00001340 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3292 00001345 E857400100              	call malloc
  3293 0000134A 50                      	push rax
  3294 0000134B BF00000000              	mov rdi, 8 * 0	; new rib
  3295 00001350 E84C400100              	call malloc
  3296 00001355 50                      	push rax
  3297 00001356 BF08000000              	mov rdi, 8 * 1	; extended env
  3298 0000135B E841400100              	call malloc
  3299 00001360 488B7D10                	mov rdi, ENV
  3300 00001364 BE00000000              	mov rsi, 0
  3301 00001369 BA01000000              	mov rdx, 1
  3302                                  .L_lambda_simple_env_loop_0182:	; ext_env[i + 1] <-- env[i]
  3303 0000136E 4883FE00                	cmp rsi, 0
  3304 00001372 7410                    	je .L_lambda_simple_env_end_0182
  3305 00001374 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3306 00001378 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3307 0000137C 48FFC6                  	inc rsi
  3308 0000137F 48FFC2                  	inc rdx
  3309 00001382 EBEA                    	jmp .L_lambda_simple_env_loop_0182
  3310                                  .L_lambda_simple_env_end_0182:
  3311 00001384 5B                      	pop rbx
  3312 00001385 BE00000000              	mov rsi, 0
  3313                                  .L_lambda_simple_params_loop_0182:	; copy params
  3314 0000138A 4883FE00                	cmp rsi, 0
  3315 0000138E 740E                    	je .L_lambda_simple_params_end_0182
  3316 00001390 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3317 00001395 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3318 00001399 48FFC6                  	inc rsi
  3319 0000139C EBEC                    	jmp .L_lambda_simple_params_loop_0182
  3320                                  .L_lambda_simple_params_end_0182:
  3321 0000139E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3322 000013A1 4889C3                  	mov rbx, rax
  3323 000013A4 58                      	pop rax
  3324 000013A5 C60004                  	mov byte [rax], T_closure
  3325 000013A8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3326 000013AC 48C74009[B9130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0182
  3327 000013B4 E99C000000              	jmp .L_lambda_simple_end_0182
  3328                                  .L_lambda_simple_code_0182:	; lambda-simple body
  3329 000013B9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3330 000013BF 740B                    	je .L_lambda_simple_arity_check_ok_0182
  3331 000013C1 FF742410                	push qword [rsp + 8 * 2]
  3332 000013C5 6A01                    	push 1
  3333 000013C7 E98E3F0100              	jmp L_error_incorrect_arity_simple
  3334                                  .L_lambda_simple_arity_check_ok_0182:
  3335 000013CC C8000000                	enter 0, 0
  3336                                  	; Initiating tail-call optimization
  3337                                  	; preparing a non-tail-call
  3338 000013D0 488B4520                	mov rax, PARAM(0)	; param x
  3339 000013D4 50                      	push rax
  3340 000013D5 6A01                    	push 1	; arg count
  3341 000013D7 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3342 000013DF 803805                  	cmp byte [rax], T_undefined
  3343 000013E2 0F848C3E0100            	je L_error_fvar_undefined
  3344 000013E8 803804                  	cmp byte [rax], T_closure
  3345 000013EB 0F85073F0100            	jne L_error_non_closure
  3346 000013F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3347 000013F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3348 000013F7 50                      	push rax
  3349 000013F8 6A01                    	push 1	; Number of arguments
  3350 000013FA 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3351 00001402 803805                  	cmp byte [rax], T_undefined
  3352 00001405 0F84693E0100            	je L_error_fvar_undefined
  3353 0000140B 803804                  	cmp byte [rax], T_closure
  3354 0000140E 0F85E43E0100            	jne L_error_non_closure
  3355 00001414 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3356 00001417 FF7508                  	push qword [rbp + 8]
  3357 0000141A FF7500                  	push qword [rbp]
  3358 0000141D 41BA05000000            	mov r10, 1 + 4
  3359 00001423 4C8B4518                	mov r8, COUNT
  3360 00001427 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3361 0000142C 4C8D4DF8                	lea r9, [rbp - 8]
  3362                                  .L_tc_recycle_frame_loop_01d7:
  3363 00001430 4983FA00                	cmp r10, 0
  3364 00001434 7413                    	je .L_tc_recycle_frame_done_01d7
  3365 00001436 4D8B19                  	mov r11, qword [r9]
  3366 00001439 4D8918                  	mov qword [r8], r11
  3367 0000143C 49FFCA                  	dec r10
  3368 0000143F 4983E808                	sub r8, 8
  3369 00001443 4983E908                	sub r9, 8
  3370 00001447 EBE7                    	jmp .L_tc_recycle_frame_loop_01d7
  3371                                  .L_tc_recycle_frame_done_01d7:
  3372 00001449 498D6008                	lea rsp, [r8 + 8]
  3373 0000144D 5D                      	pop rbp
  3374 0000144E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3375 00001451 C9                      	leave
  3376 00001452 C21800                  	ret AND_KILL_FRAME(1)
  3377                                  .L_lambda_simple_end_0182:	; new closure is in rax
  3378 00001455 48890425[2A100000]      	mov qword [free_var_35], rax
  3379 0000145D 48B8-                   	mov rax, sob_void
  3379 0000145F [0000000000000000] 
  3380                                  
  3381 00001467 4889C7                  	mov rdi, rax
  3382 0000146A E887410100              	call print_sexpr_if_not_void
  3383 0000146F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3384 00001474 E8283F0100              	call malloc
  3385 00001479 50                      	push rax
  3386 0000147A BF00000000              	mov rdi, 8 * 0	; new rib
  3387 0000147F E81D3F0100              	call malloc
  3388 00001484 50                      	push rax
  3389 00001485 BF08000000              	mov rdi, 8 * 1	; extended env
  3390 0000148A E8123F0100              	call malloc
  3391 0000148F 488B7D10                	mov rdi, ENV
  3392 00001493 BE00000000              	mov rsi, 0
  3393 00001498 BA01000000              	mov rdx, 1
  3394                                  .L_lambda_simple_env_loop_0183:	; ext_env[i + 1] <-- env[i]
  3395 0000149D 4883FE00                	cmp rsi, 0
  3396 000014A1 7410                    	je .L_lambda_simple_env_end_0183
  3397 000014A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3398 000014A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3399 000014AB 48FFC6                  	inc rsi
  3400 000014AE 48FFC2                  	inc rdx
  3401 000014B1 EBEA                    	jmp .L_lambda_simple_env_loop_0183
  3402                                  .L_lambda_simple_env_end_0183:
  3403 000014B3 5B                      	pop rbx
  3404 000014B4 BE00000000              	mov rsi, 0
  3405                                  .L_lambda_simple_params_loop_0183:	; copy params
  3406 000014B9 4883FE00                	cmp rsi, 0
  3407 000014BD 740E                    	je .L_lambda_simple_params_end_0183
  3408 000014BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3409 000014C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3410 000014C8 48FFC6                  	inc rsi
  3411 000014CB EBEC                    	jmp .L_lambda_simple_params_loop_0183
  3412                                  .L_lambda_simple_params_end_0183:
  3413 000014CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3414 000014D0 4889C3                  	mov rbx, rax
  3415 000014D3 58                      	pop rax
  3416 000014D4 C60004                  	mov byte [rax], T_closure
  3417 000014D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3418 000014DB 48C74009[E8140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0183
  3419 000014E3 E99C000000              	jmp .L_lambda_simple_end_0183
  3420                                  .L_lambda_simple_code_0183:	; lambda-simple body
  3421 000014E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3422 000014EE 740B                    	je .L_lambda_simple_arity_check_ok_0183
  3423 000014F0 FF742410                	push qword [rsp + 8 * 2]
  3424 000014F4 6A01                    	push 1
  3425 000014F6 E95F3E0100              	jmp L_error_incorrect_arity_simple
  3426                                  .L_lambda_simple_arity_check_ok_0183:
  3427 000014FB C8000000                	enter 0, 0
  3428                                  	; Initiating tail-call optimization
  3429                                  	; preparing a non-tail-call
  3430 000014FF 488B4520                	mov rax, PARAM(0)	; param x
  3431 00001503 50                      	push rax
  3432 00001504 6A01                    	push 1	; arg count
  3433 00001506 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3434 0000150E 803805                  	cmp byte [rax], T_undefined
  3435 00001511 0F845D3D0100            	je L_error_fvar_undefined
  3436 00001517 803804                  	cmp byte [rax], T_closure
  3437 0000151A 0F85D83D0100            	jne L_error_non_closure
  3438 00001520 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3439 00001523 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3440 00001526 50                      	push rax
  3441 00001527 6A01                    	push 1	; Number of arguments
  3442 00001529 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3443 00001531 803805                  	cmp byte [rax], T_undefined
  3444 00001534 0F843A3D0100            	je L_error_fvar_undefined
  3445 0000153A 803804                  	cmp byte [rax], T_closure
  3446 0000153D 0F85B53D0100            	jne L_error_non_closure
  3447 00001543 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3448 00001546 FF7508                  	push qword [rbp + 8]
  3449 00001549 FF7500                  	push qword [rbp]
  3450 0000154C 41BA05000000            	mov r10, 1 + 4
  3451 00001552 4C8B4518                	mov r8, COUNT
  3452 00001556 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3453 0000155B 4C8D4DF8                	lea r9, [rbp - 8]
  3454                                  .L_tc_recycle_frame_loop_01d8:
  3455 0000155F 4983FA00                	cmp r10, 0
  3456 00001563 7413                    	je .L_tc_recycle_frame_done_01d8
  3457 00001565 4D8B19                  	mov r11, qword [r9]
  3458 00001568 4D8918                  	mov qword [r8], r11
  3459 0000156B 49FFCA                  	dec r10
  3460 0000156E 4983E808                	sub r8, 8
  3461 00001572 4983E908                	sub r9, 8
  3462 00001576 EBE7                    	jmp .L_tc_recycle_frame_loop_01d8
  3463                                  .L_tc_recycle_frame_done_01d8:
  3464 00001578 498D6008                	lea rsp, [r8 + 8]
  3465 0000157C 5D                      	pop rbp
  3466 0000157D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3467 00001580 C9                      	leave
  3468 00001581 C21800                  	ret AND_KILL_FRAME(1)
  3469                                  .L_lambda_simple_end_0183:	; new closure is in rax
  3470 00001584 48890425[3B100000]      	mov qword [free_var_36], rax
  3471 0000158C 48B8-                   	mov rax, sob_void
  3471 0000158E [0000000000000000] 
  3472                                  
  3473 00001596 4889C7                  	mov rdi, rax
  3474 00001599 E858400100              	call print_sexpr_if_not_void
  3475 0000159E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3476 000015A3 E8F93D0100              	call malloc
  3477 000015A8 50                      	push rax
  3478 000015A9 BF00000000              	mov rdi, 8 * 0	; new rib
  3479 000015AE E8EE3D0100              	call malloc
  3480 000015B3 50                      	push rax
  3481 000015B4 BF08000000              	mov rdi, 8 * 1	; extended env
  3482 000015B9 E8E33D0100              	call malloc
  3483 000015BE 488B7D10                	mov rdi, ENV
  3484 000015C2 BE00000000              	mov rsi, 0
  3485 000015C7 BA01000000              	mov rdx, 1
  3486                                  .L_lambda_simple_env_loop_0184:	; ext_env[i + 1] <-- env[i]
  3487 000015CC 4883FE00                	cmp rsi, 0
  3488 000015D0 7410                    	je .L_lambda_simple_env_end_0184
  3489 000015D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3490 000015D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3491 000015DA 48FFC6                  	inc rsi
  3492 000015DD 48FFC2                  	inc rdx
  3493 000015E0 EBEA                    	jmp .L_lambda_simple_env_loop_0184
  3494                                  .L_lambda_simple_env_end_0184:
  3495 000015E2 5B                      	pop rbx
  3496 000015E3 BE00000000              	mov rsi, 0
  3497                                  .L_lambda_simple_params_loop_0184:	; copy params
  3498 000015E8 4883FE00                	cmp rsi, 0
  3499 000015EC 740E                    	je .L_lambda_simple_params_end_0184
  3500 000015EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3501 000015F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3502 000015F7 48FFC6                  	inc rsi
  3503 000015FA EBEC                    	jmp .L_lambda_simple_params_loop_0184
  3504                                  .L_lambda_simple_params_end_0184:
  3505 000015FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3506 000015FF 4889C3                  	mov rbx, rax
  3507 00001602 58                      	pop rax
  3508 00001603 C60004                  	mov byte [rax], T_closure
  3509 00001606 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3510 0000160A 48C74009[17160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0184
  3511 00001612 E99C000000              	jmp .L_lambda_simple_end_0184
  3512                                  .L_lambda_simple_code_0184:	; lambda-simple body
  3513 00001617 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3514 0000161D 740B                    	je .L_lambda_simple_arity_check_ok_0184
  3515 0000161F FF742410                	push qword [rsp + 8 * 2]
  3516 00001623 6A01                    	push 1
  3517 00001625 E9303D0100              	jmp L_error_incorrect_arity_simple
  3518                                  .L_lambda_simple_arity_check_ok_0184:
  3519 0000162A C8000000                	enter 0, 0
  3520                                  	; Initiating tail-call optimization
  3521                                  	; preparing a non-tail-call
  3522 0000162E 488B4520                	mov rax, PARAM(0)	; param x
  3523 00001632 50                      	push rax
  3524 00001633 6A01                    	push 1	; arg count
  3525 00001635 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  3526 0000163D 803805                  	cmp byte [rax], T_undefined
  3527 00001640 0F842E3C0100            	je L_error_fvar_undefined
  3528 00001646 803804                  	cmp byte [rax], T_closure
  3529 00001649 0F85A93C0100            	jne L_error_non_closure
  3530 0000164F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3531 00001652 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3532 00001655 50                      	push rax
  3533 00001656 6A01                    	push 1	; Number of arguments
  3534 00001658 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3535 00001660 803805                  	cmp byte [rax], T_undefined
  3536 00001663 0F840B3C0100            	je L_error_fvar_undefined
  3537 00001669 803804                  	cmp byte [rax], T_closure
  3538 0000166C 0F85863C0100            	jne L_error_non_closure
  3539 00001672 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3540 00001675 FF7508                  	push qword [rbp + 8]
  3541 00001678 FF7500                  	push qword [rbp]
  3542 0000167B 41BA05000000            	mov r10, 1 + 4
  3543 00001681 4C8B4518                	mov r8, COUNT
  3544 00001685 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3545 0000168A 4C8D4DF8                	lea r9, [rbp - 8]
  3546                                  .L_tc_recycle_frame_loop_01d9:
  3547 0000168E 4983FA00                	cmp r10, 0
  3548 00001692 7413                    	je .L_tc_recycle_frame_done_01d9
  3549 00001694 4D8B19                  	mov r11, qword [r9]
  3550 00001697 4D8918                  	mov qword [r8], r11
  3551 0000169A 49FFCA                  	dec r10
  3552 0000169D 4983E808                	sub r8, 8
  3553 000016A1 4983E908                	sub r9, 8
  3554 000016A5 EBE7                    	jmp .L_tc_recycle_frame_loop_01d9
  3555                                  .L_tc_recycle_frame_done_01d9:
  3556 000016A7 498D6008                	lea rsp, [r8 + 8]
  3557 000016AB 5D                      	pop rbp
  3558 000016AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3559 000016AF C9                      	leave
  3560 000016B0 C21800                  	ret AND_KILL_FRAME(1)
  3561                                  .L_lambda_simple_end_0184:	; new closure is in rax
  3562 000016B3 48890425[5D100000]      	mov qword [free_var_38], rax
  3563 000016BB 48B8-                   	mov rax, sob_void
  3563 000016BD [0000000000000000] 
  3564                                  
  3565 000016C5 4889C7                  	mov rdi, rax
  3566 000016C8 E8293F0100              	call print_sexpr_if_not_void
  3567 000016CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3568 000016D2 E8CA3C0100              	call malloc
  3569 000016D7 50                      	push rax
  3570 000016D8 BF00000000              	mov rdi, 8 * 0	; new rib
  3571 000016DD E8BF3C0100              	call malloc
  3572 000016E2 50                      	push rax
  3573 000016E3 BF08000000              	mov rdi, 8 * 1	; extended env
  3574 000016E8 E8B43C0100              	call malloc
  3575 000016ED 488B7D10                	mov rdi, ENV
  3576 000016F1 BE00000000              	mov rsi, 0
  3577 000016F6 BA01000000              	mov rdx, 1
  3578                                  .L_lambda_simple_env_loop_0185:	; ext_env[i + 1] <-- env[i]
  3579 000016FB 4883FE00                	cmp rsi, 0
  3580 000016FF 7410                    	je .L_lambda_simple_env_end_0185
  3581 00001701 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3582 00001705 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3583 00001709 48FFC6                  	inc rsi
  3584 0000170C 48FFC2                  	inc rdx
  3585 0000170F EBEA                    	jmp .L_lambda_simple_env_loop_0185
  3586                                  .L_lambda_simple_env_end_0185:
  3587 00001711 5B                      	pop rbx
  3588 00001712 BE00000000              	mov rsi, 0
  3589                                  .L_lambda_simple_params_loop_0185:	; copy params
  3590 00001717 4883FE00                	cmp rsi, 0
  3591 0000171B 740E                    	je .L_lambda_simple_params_end_0185
  3592 0000171D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3593 00001722 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3594 00001726 48FFC6                  	inc rsi
  3595 00001729 EBEC                    	jmp .L_lambda_simple_params_loop_0185
  3596                                  .L_lambda_simple_params_end_0185:
  3597 0000172B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3598 0000172E 4889C3                  	mov rbx, rax
  3599 00001731 58                      	pop rax
  3600 00001732 C60004                  	mov byte [rax], T_closure
  3601 00001735 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3602 00001739 48C74009[46170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0185
  3603 00001741 E99C000000              	jmp .L_lambda_simple_end_0185
  3604                                  .L_lambda_simple_code_0185:	; lambda-simple body
  3605 00001746 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3606 0000174C 740B                    	je .L_lambda_simple_arity_check_ok_0185
  3607 0000174E FF742410                	push qword [rsp + 8 * 2]
  3608 00001752 6A01                    	push 1
  3609 00001754 E9013C0100              	jmp L_error_incorrect_arity_simple
  3610                                  .L_lambda_simple_arity_check_ok_0185:
  3611 00001759 C8000000                	enter 0, 0
  3612                                  	; Initiating tail-call optimization
  3613                                  	; preparing a non-tail-call
  3614 0000175D 488B4520                	mov rax, PARAM(0)	; param x
  3615 00001761 50                      	push rax
  3616 00001762 6A01                    	push 1	; arg count
  3617 00001764 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  3618 0000176C 803805                  	cmp byte [rax], T_undefined
  3619 0000176F 0F84FF3A0100            	je L_error_fvar_undefined
  3620 00001775 803804                  	cmp byte [rax], T_closure
  3621 00001778 0F857A3B0100            	jne L_error_non_closure
  3622 0000177E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3623 00001781 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3624 00001784 50                      	push rax
  3625 00001785 6A01                    	push 1	; Number of arguments
  3626 00001787 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3627 0000178F 803805                  	cmp byte [rax], T_undefined
  3628 00001792 0F84DC3A0100            	je L_error_fvar_undefined
  3629 00001798 803804                  	cmp byte [rax], T_closure
  3630 0000179B 0F85573B0100            	jne L_error_non_closure
  3631 000017A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3632 000017A4 FF7508                  	push qword [rbp + 8]
  3633 000017A7 FF7500                  	push qword [rbp]
  3634 000017AA 41BA05000000            	mov r10, 1 + 4
  3635 000017B0 4C8B4518                	mov r8, COUNT
  3636 000017B4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3637 000017B9 4C8D4DF8                	lea r9, [rbp - 8]
  3638                                  .L_tc_recycle_frame_loop_01da:
  3639 000017BD 4983FA00                	cmp r10, 0
  3640 000017C1 7413                    	je .L_tc_recycle_frame_done_01da
  3641 000017C3 4D8B19                  	mov r11, qword [r9]
  3642 000017C6 4D8918                  	mov qword [r8], r11
  3643 000017C9 49FFCA                  	dec r10
  3644 000017CC 4983E808                	sub r8, 8
  3645 000017D0 4983E908                	sub r9, 8
  3646 000017D4 EBE7                    	jmp .L_tc_recycle_frame_loop_01da
  3647                                  .L_tc_recycle_frame_done_01da:
  3648 000017D6 498D6008                	lea rsp, [r8 + 8]
  3649 000017DA 5D                      	pop rbp
  3650 000017DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3651 000017DE C9                      	leave
  3652 000017DF C21800                  	ret AND_KILL_FRAME(1)
  3653                                  .L_lambda_simple_end_0185:	; new closure is in rax
  3654 000017E2 48890425[6E100000]      	mov qword [free_var_39], rax
  3655 000017EA 48B8-                   	mov rax, sob_void
  3655 000017EC [0000000000000000] 
  3656                                  
  3657 000017F4 4889C7                  	mov rdi, rax
  3658 000017F7 E8FA3D0100              	call print_sexpr_if_not_void
  3659 000017FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3660 00001801 E89B3B0100              	call malloc
  3661 00001806 50                      	push rax
  3662 00001807 BF00000000              	mov rdi, 8 * 0	; new rib
  3663 0000180C E8903B0100              	call malloc
  3664 00001811 50                      	push rax
  3665 00001812 BF08000000              	mov rdi, 8 * 1	; extended env
  3666 00001817 E8853B0100              	call malloc
  3667 0000181C 488B7D10                	mov rdi, ENV
  3668 00001820 BE00000000              	mov rsi, 0
  3669 00001825 BA01000000              	mov rdx, 1
  3670                                  .L_lambda_simple_env_loop_0186:	; ext_env[i + 1] <-- env[i]
  3671 0000182A 4883FE00                	cmp rsi, 0
  3672 0000182E 7410                    	je .L_lambda_simple_env_end_0186
  3673 00001830 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3674 00001834 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3675 00001838 48FFC6                  	inc rsi
  3676 0000183B 48FFC2                  	inc rdx
  3677 0000183E EBEA                    	jmp .L_lambda_simple_env_loop_0186
  3678                                  .L_lambda_simple_env_end_0186:
  3679 00001840 5B                      	pop rbx
  3680 00001841 BE00000000              	mov rsi, 0
  3681                                  .L_lambda_simple_params_loop_0186:	; copy params
  3682 00001846 4883FE00                	cmp rsi, 0
  3683 0000184A 740E                    	je .L_lambda_simple_params_end_0186
  3684 0000184C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3685 00001851 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3686 00001855 48FFC6                  	inc rsi
  3687 00001858 EBEC                    	jmp .L_lambda_simple_params_loop_0186
  3688                                  .L_lambda_simple_params_end_0186:
  3689 0000185A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3690 0000185D 4889C3                  	mov rbx, rax
  3691 00001860 58                      	pop rax
  3692 00001861 C60004                  	mov byte [rax], T_closure
  3693 00001864 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3694 00001868 48C74009[75180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0186
  3695 00001870 E99C000000              	jmp .L_lambda_simple_end_0186
  3696                                  .L_lambda_simple_code_0186:	; lambda-simple body
  3697 00001875 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3698 0000187B 740B                    	je .L_lambda_simple_arity_check_ok_0186
  3699 0000187D FF742410                	push qword [rsp + 8 * 2]
  3700 00001881 6A01                    	push 1
  3701 00001883 E9D23A0100              	jmp L_error_incorrect_arity_simple
  3702                                  .L_lambda_simple_arity_check_ok_0186:
  3703 00001888 C8000000                	enter 0, 0
  3704                                  	; Initiating tail-call optimization
  3705                                  	; preparing a non-tail-call
  3706 0000188C 488B4520                	mov rax, PARAM(0)	; param x
  3707 00001890 50                      	push rax
  3708 00001891 6A01                    	push 1	; arg count
  3709 00001893 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  3710 0000189B 803805                  	cmp byte [rax], T_undefined
  3711 0000189E 0F84D0390100            	je L_error_fvar_undefined
  3712 000018A4 803804                  	cmp byte [rax], T_closure
  3713 000018A7 0F854B3A0100            	jne L_error_non_closure
  3714 000018AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3715 000018B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3716 000018B3 50                      	push rax
  3717 000018B4 6A01                    	push 1	; Number of arguments
  3718 000018B6 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3719 000018BE 803805                  	cmp byte [rax], T_undefined
  3720 000018C1 0F84AD390100            	je L_error_fvar_undefined
  3721 000018C7 803804                  	cmp byte [rax], T_closure
  3722 000018CA 0F85283A0100            	jne L_error_non_closure
  3723 000018D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3724 000018D3 FF7508                  	push qword [rbp + 8]
  3725 000018D6 FF7500                  	push qword [rbp]
  3726 000018D9 41BA05000000            	mov r10, 1 + 4
  3727 000018DF 4C8B4518                	mov r8, COUNT
  3728 000018E3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3729 000018E8 4C8D4DF8                	lea r9, [rbp - 8]
  3730                                  .L_tc_recycle_frame_loop_01db:
  3731 000018EC 4983FA00                	cmp r10, 0
  3732 000018F0 7413                    	je .L_tc_recycle_frame_done_01db
  3733 000018F2 4D8B19                  	mov r11, qword [r9]
  3734 000018F5 4D8918                  	mov qword [r8], r11
  3735 000018F8 49FFCA                  	dec r10
  3736 000018FB 4983E808                	sub r8, 8
  3737 000018FF 4983E908                	sub r9, 8
  3738 00001903 EBE7                    	jmp .L_tc_recycle_frame_loop_01db
  3739                                  .L_tc_recycle_frame_done_01db:
  3740 00001905 498D6008                	lea rsp, [r8 + 8]
  3741 00001909 5D                      	pop rbp
  3742 0000190A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3743 0000190D C9                      	leave
  3744 0000190E C21800                  	ret AND_KILL_FRAME(1)
  3745                                  .L_lambda_simple_end_0186:	; new closure is in rax
  3746 00001911 48890425[A1100000]      	mov qword [free_var_42], rax
  3747 00001919 48B8-                   	mov rax, sob_void
  3747 0000191B [0000000000000000] 
  3748                                  
  3749 00001923 4889C7                  	mov rdi, rax
  3750 00001926 E8CB3C0100              	call print_sexpr_if_not_void
  3751 0000192B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3752 00001930 E86C3A0100              	call malloc
  3753 00001935 50                      	push rax
  3754 00001936 BF00000000              	mov rdi, 8 * 0	; new rib
  3755 0000193B E8613A0100              	call malloc
  3756 00001940 50                      	push rax
  3757 00001941 BF08000000              	mov rdi, 8 * 1	; extended env
  3758 00001946 E8563A0100              	call malloc
  3759 0000194B 488B7D10                	mov rdi, ENV
  3760 0000194F BE00000000              	mov rsi, 0
  3761 00001954 BA01000000              	mov rdx, 1
  3762                                  .L_lambda_simple_env_loop_0187:	; ext_env[i + 1] <-- env[i]
  3763 00001959 4883FE00                	cmp rsi, 0
  3764 0000195D 7410                    	je .L_lambda_simple_env_end_0187
  3765 0000195F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3766 00001963 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3767 00001967 48FFC6                  	inc rsi
  3768 0000196A 48FFC2                  	inc rdx
  3769 0000196D EBEA                    	jmp .L_lambda_simple_env_loop_0187
  3770                                  .L_lambda_simple_env_end_0187:
  3771 0000196F 5B                      	pop rbx
  3772 00001970 BE00000000              	mov rsi, 0
  3773                                  .L_lambda_simple_params_loop_0187:	; copy params
  3774 00001975 4883FE00                	cmp rsi, 0
  3775 00001979 740E                    	je .L_lambda_simple_params_end_0187
  3776 0000197B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3777 00001980 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3778 00001984 48FFC6                  	inc rsi
  3779 00001987 EBEC                    	jmp .L_lambda_simple_params_loop_0187
  3780                                  .L_lambda_simple_params_end_0187:
  3781 00001989 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3782 0000198C 4889C3                  	mov rbx, rax
  3783 0000198F 58                      	pop rax
  3784 00001990 C60004                  	mov byte [rax], T_closure
  3785 00001993 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3786 00001997 48C74009[A4190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0187
  3787 0000199F E99C000000              	jmp .L_lambda_simple_end_0187
  3788                                  .L_lambda_simple_code_0187:	; lambda-simple body
  3789 000019A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3790 000019AA 740B                    	je .L_lambda_simple_arity_check_ok_0187
  3791 000019AC FF742410                	push qword [rsp + 8 * 2]
  3792 000019B0 6A01                    	push 1
  3793 000019B2 E9A3390100              	jmp L_error_incorrect_arity_simple
  3794                                  .L_lambda_simple_arity_check_ok_0187:
  3795 000019B7 C8000000                	enter 0, 0
  3796                                  	; Initiating tail-call optimization
  3797                                  	; preparing a non-tail-call
  3798 000019BB 488B4520                	mov rax, PARAM(0)	; param x
  3799 000019BF 50                      	push rax
  3800 000019C0 6A01                    	push 1	; arg count
  3801 000019C2 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3802 000019CA 803805                  	cmp byte [rax], T_undefined
  3803 000019CD 0F84A1380100            	je L_error_fvar_undefined
  3804 000019D3 803804                  	cmp byte [rax], T_closure
  3805 000019D6 0F851C390100            	jne L_error_non_closure
  3806 000019DC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3807 000019DF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3808 000019E2 50                      	push rax
  3809 000019E3 6A01                    	push 1	; Number of arguments
  3810 000019E5 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3811 000019ED 803805                  	cmp byte [rax], T_undefined
  3812 000019F0 0F847E380100            	je L_error_fvar_undefined
  3813 000019F6 803804                  	cmp byte [rax], T_closure
  3814 000019F9 0F85F9380100            	jne L_error_non_closure
  3815 000019FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  3816 00001A02 FF7508                  	push qword [rbp + 8]
  3817 00001A05 FF7500                  	push qword [rbp]
  3818 00001A08 41BA05000000            	mov r10, 1 + 4
  3819 00001A0E 4C8B4518                	mov r8, COUNT
  3820 00001A12 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3821 00001A17 4C8D4DF8                	lea r9, [rbp - 8]
  3822                                  .L_tc_recycle_frame_loop_01dc:
  3823 00001A1B 4983FA00                	cmp r10, 0
  3824 00001A1F 7413                    	je .L_tc_recycle_frame_done_01dc
  3825 00001A21 4D8B19                  	mov r11, qword [r9]
  3826 00001A24 4D8918                  	mov qword [r8], r11
  3827 00001A27 49FFCA                  	dec r10
  3828 00001A2A 4983E808                	sub r8, 8
  3829 00001A2E 4983E908                	sub r9, 8
  3830 00001A32 EBE7                    	jmp .L_tc_recycle_frame_loop_01dc
  3831                                  .L_tc_recycle_frame_done_01dc:
  3832 00001A34 498D6008                	lea rsp, [r8 + 8]
  3833 00001A38 5D                      	pop rbp
  3834 00001A39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3835 00001A3C C9                      	leave
  3836 00001A3D C21800                  	ret AND_KILL_FRAME(1)
  3837                                  .L_lambda_simple_end_0187:	; new closure is in rax
  3838 00001A40 48890425[B2100000]      	mov qword [free_var_43], rax
  3839 00001A48 48B8-                   	mov rax, sob_void
  3839 00001A4A [0000000000000000] 
  3840                                  
  3841 00001A52 4889C7                  	mov rdi, rax
  3842 00001A55 E89C3B0100              	call print_sexpr_if_not_void
  3843 00001A5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3844 00001A5F E83D390100              	call malloc
  3845 00001A64 50                      	push rax
  3846 00001A65 BF00000000              	mov rdi, 8 * 0	; new rib
  3847 00001A6A E832390100              	call malloc
  3848 00001A6F 50                      	push rax
  3849 00001A70 BF08000000              	mov rdi, 8 * 1	; extended env
  3850 00001A75 E827390100              	call malloc
  3851 00001A7A 488B7D10                	mov rdi, ENV
  3852 00001A7E BE00000000              	mov rsi, 0
  3853 00001A83 BA01000000              	mov rdx, 1
  3854                                  .L_lambda_simple_env_loop_0188:	; ext_env[i + 1] <-- env[i]
  3855 00001A88 4883FE00                	cmp rsi, 0
  3856 00001A8C 7410                    	je .L_lambda_simple_env_end_0188
  3857 00001A8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3858 00001A92 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3859 00001A96 48FFC6                  	inc rsi
  3860 00001A99 48FFC2                  	inc rdx
  3861 00001A9C EBEA                    	jmp .L_lambda_simple_env_loop_0188
  3862                                  .L_lambda_simple_env_end_0188:
  3863 00001A9E 5B                      	pop rbx
  3864 00001A9F BE00000000              	mov rsi, 0
  3865                                  .L_lambda_simple_params_loop_0188:	; copy params
  3866 00001AA4 4883FE00                	cmp rsi, 0
  3867 00001AA8 740E                    	je .L_lambda_simple_params_end_0188
  3868 00001AAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3869 00001AAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3870 00001AB3 48FFC6                  	inc rsi
  3871 00001AB6 EBEC                    	jmp .L_lambda_simple_params_loop_0188
  3872                                  .L_lambda_simple_params_end_0188:
  3873 00001AB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3874 00001ABB 4889C3                  	mov rbx, rax
  3875 00001ABE 58                      	pop rax
  3876 00001ABF C60004                  	mov byte [rax], T_closure
  3877 00001AC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3878 00001AC6 48C74009[D31A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0188
  3879 00001ACE E99C000000              	jmp .L_lambda_simple_end_0188
  3880                                  .L_lambda_simple_code_0188:	; lambda-simple body
  3881 00001AD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3882 00001AD9 740B                    	je .L_lambda_simple_arity_check_ok_0188
  3883 00001ADB FF742410                	push qword [rsp + 8 * 2]
  3884 00001ADF 6A01                    	push 1
  3885 00001AE1 E974380100              	jmp L_error_incorrect_arity_simple
  3886                                  .L_lambda_simple_arity_check_ok_0188:
  3887 00001AE6 C8000000                	enter 0, 0
  3888                                  	; Initiating tail-call optimization
  3889                                  	; preparing a non-tail-call
  3890 00001AEA 488B4520                	mov rax, PARAM(0)	; param x
  3891 00001AEE 50                      	push rax
  3892 00001AEF 6A01                    	push 1	; arg count
  3893 00001AF1 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  3894 00001AF9 803805                  	cmp byte [rax], T_undefined
  3895 00001AFC 0F8472370100            	je L_error_fvar_undefined
  3896 00001B02 803804                  	cmp byte [rax], T_closure
  3897 00001B05 0F85ED370100            	jne L_error_non_closure
  3898 00001B0B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3899 00001B0E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3900 00001B11 50                      	push rax
  3901 00001B12 6A01                    	push 1	; Number of arguments
  3902 00001B14 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3903 00001B1C 803805                  	cmp byte [rax], T_undefined
  3904 00001B1F 0F844F370100            	je L_error_fvar_undefined
  3905 00001B25 803804                  	cmp byte [rax], T_closure
  3906 00001B28 0F85CA370100            	jne L_error_non_closure
  3907 00001B2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3908 00001B31 FF7508                  	push qword [rbp + 8]
  3909 00001B34 FF7500                  	push qword [rbp]
  3910 00001B37 41BA05000000            	mov r10, 1 + 4
  3911 00001B3D 4C8B4518                	mov r8, COUNT
  3912 00001B41 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  3913 00001B46 4C8D4DF8                	lea r9, [rbp - 8]
  3914                                  .L_tc_recycle_frame_loop_01dd:
  3915 00001B4A 4983FA00                	cmp r10, 0
  3916 00001B4E 7413                    	je .L_tc_recycle_frame_done_01dd
  3917 00001B50 4D8B19                  	mov r11, qword [r9]
  3918 00001B53 4D8918                  	mov qword [r8], r11
  3919 00001B56 49FFCA                  	dec r10
  3920 00001B59 4983E808                	sub r8, 8
  3921 00001B5D 4983E908                	sub r9, 8
  3922 00001B61 EBE7                    	jmp .L_tc_recycle_frame_loop_01dd
  3923                                  .L_tc_recycle_frame_done_01dd:
  3924 00001B63 498D6008                	lea rsp, [r8 + 8]
  3925 00001B67 5D                      	pop rbp
  3926 00001B68 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3927 00001B6B C9                      	leave
  3928 00001B6C C21800                  	ret AND_KILL_FRAME(1)
  3929                                  .L_lambda_simple_end_0188:	; new closure is in rax
  3930 00001B6F 48890425[D4100000]      	mov qword [free_var_45], rax
  3931 00001B77 48B8-                   	mov rax, sob_void
  3931 00001B79 [0000000000000000] 
  3932                                  
  3933 00001B81 4889C7                  	mov rdi, rax
  3934 00001B84 E86D3A0100              	call print_sexpr_if_not_void
  3935 00001B89 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3936 00001B8E E80E380100              	call malloc
  3937 00001B93 50                      	push rax
  3938 00001B94 BF00000000              	mov rdi, 8 * 0	; new rib
  3939 00001B99 E803380100              	call malloc
  3940 00001B9E 50                      	push rax
  3941 00001B9F BF08000000              	mov rdi, 8 * 1	; extended env
  3942 00001BA4 E8F8370100              	call malloc
  3943 00001BA9 488B7D10                	mov rdi, ENV
  3944 00001BAD BE00000000              	mov rsi, 0
  3945 00001BB2 BA01000000              	mov rdx, 1
  3946                                  .L_lambda_simple_env_loop_0189:	; ext_env[i + 1] <-- env[i]
  3947 00001BB7 4883FE00                	cmp rsi, 0
  3948 00001BBB 7410                    	je .L_lambda_simple_env_end_0189
  3949 00001BBD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3950 00001BC1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3951 00001BC5 48FFC6                  	inc rsi
  3952 00001BC8 48FFC2                  	inc rdx
  3953 00001BCB EBEA                    	jmp .L_lambda_simple_env_loop_0189
  3954                                  .L_lambda_simple_env_end_0189:
  3955 00001BCD 5B                      	pop rbx
  3956 00001BCE BE00000000              	mov rsi, 0
  3957                                  .L_lambda_simple_params_loop_0189:	; copy params
  3958 00001BD3 4883FE00                	cmp rsi, 0
  3959 00001BD7 740E                    	je .L_lambda_simple_params_end_0189
  3960 00001BD9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3961 00001BDE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3962 00001BE2 48FFC6                  	inc rsi
  3963 00001BE5 EBEC                    	jmp .L_lambda_simple_params_loop_0189
  3964                                  .L_lambda_simple_params_end_0189:
  3965 00001BE7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3966 00001BEA 4889C3                  	mov rbx, rax
  3967 00001BED 58                      	pop rax
  3968 00001BEE C60004                  	mov byte [rax], T_closure
  3969 00001BF1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3970 00001BF5 48C74009[021C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0189
  3971 00001BFD E99C000000              	jmp .L_lambda_simple_end_0189
  3972                                  .L_lambda_simple_code_0189:	; lambda-simple body
  3973 00001C02 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3974 00001C08 740B                    	je .L_lambda_simple_arity_check_ok_0189
  3975 00001C0A FF742410                	push qword [rsp + 8 * 2]
  3976 00001C0E 6A01                    	push 1
  3977 00001C10 E945370100              	jmp L_error_incorrect_arity_simple
  3978                                  .L_lambda_simple_arity_check_ok_0189:
  3979 00001C15 C8000000                	enter 0, 0
  3980                                  	; Initiating tail-call optimization
  3981                                  	; preparing a non-tail-call
  3982 00001C19 488B4520                	mov rax, PARAM(0)	; param x
  3983 00001C1D 50                      	push rax
  3984 00001C1E 6A01                    	push 1	; arg count
  3985 00001C20 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  3986 00001C28 803805                  	cmp byte [rax], T_undefined
  3987 00001C2B 0F8443360100            	je L_error_fvar_undefined
  3988 00001C31 803804                  	cmp byte [rax], T_closure
  3989 00001C34 0F85BE360100            	jne L_error_non_closure
  3990 00001C3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3991 00001C3D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3992 00001C40 50                      	push rax
  3993 00001C41 6A01                    	push 1	; Number of arguments
  3994 00001C43 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  3995 00001C4B 803805                  	cmp byte [rax], T_undefined
  3996 00001C4E 0F8420360100            	je L_error_fvar_undefined
  3997 00001C54 803804                  	cmp byte [rax], T_closure
  3998 00001C57 0F859B360100            	jne L_error_non_closure
  3999 00001C5D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4000 00001C60 FF7508                  	push qword [rbp + 8]
  4001 00001C63 FF7500                  	push qword [rbp]
  4002 00001C66 41BA05000000            	mov r10, 1 + 4
  4003 00001C6C 4C8B4518                	mov r8, COUNT
  4004 00001C70 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4005 00001C75 4C8D4DF8                	lea r9, [rbp - 8]
  4006                                  .L_tc_recycle_frame_loop_01de:
  4007 00001C79 4983FA00                	cmp r10, 0
  4008 00001C7D 7413                    	je .L_tc_recycle_frame_done_01de
  4009 00001C7F 4D8B19                  	mov r11, qword [r9]
  4010 00001C82 4D8918                  	mov qword [r8], r11
  4011 00001C85 49FFCA                  	dec r10
  4012 00001C88 4983E808                	sub r8, 8
  4013 00001C8C 4983E908                	sub r9, 8
  4014 00001C90 EBE7                    	jmp .L_tc_recycle_frame_loop_01de
  4015                                  .L_tc_recycle_frame_done_01de:
  4016 00001C92 498D6008                	lea rsp, [r8 + 8]
  4017 00001C96 5D                      	pop rbp
  4018 00001C97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4019 00001C9A C9                      	leave
  4020 00001C9B C21800                  	ret AND_KILL_FRAME(1)
  4021                                  .L_lambda_simple_end_0189:	; new closure is in rax
  4022 00001C9E 48890425[E5100000]      	mov qword [free_var_46], rax
  4023 00001CA6 48B8-                   	mov rax, sob_void
  4023 00001CA8 [0000000000000000] 
  4024                                  
  4025 00001CB0 4889C7                  	mov rdi, rax
  4026 00001CB3 E83E390100              	call print_sexpr_if_not_void
  4027 00001CB8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4028 00001CBD E8DF360100              	call malloc
  4029 00001CC2 50                      	push rax
  4030 00001CC3 BF00000000              	mov rdi, 8 * 0	; new rib
  4031 00001CC8 E8D4360100              	call malloc
  4032 00001CCD 50                      	push rax
  4033 00001CCE BF08000000              	mov rdi, 8 * 1	; extended env
  4034 00001CD3 E8C9360100              	call malloc
  4035 00001CD8 488B7D10                	mov rdi, ENV
  4036 00001CDC BE00000000              	mov rsi, 0
  4037 00001CE1 BA01000000              	mov rdx, 1
  4038                                  .L_lambda_simple_env_loop_018a:	; ext_env[i + 1] <-- env[i]
  4039 00001CE6 4883FE00                	cmp rsi, 0
  4040 00001CEA 7410                    	je .L_lambda_simple_env_end_018a
  4041 00001CEC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4042 00001CF0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4043 00001CF4 48FFC6                  	inc rsi
  4044 00001CF7 48FFC2                  	inc rdx
  4045 00001CFA EBEA                    	jmp .L_lambda_simple_env_loop_018a
  4046                                  .L_lambda_simple_env_end_018a:
  4047 00001CFC 5B                      	pop rbx
  4048 00001CFD BE00000000              	mov rsi, 0
  4049                                  .L_lambda_simple_params_loop_018a:	; copy params
  4050 00001D02 4883FE00                	cmp rsi, 0
  4051 00001D06 740E                    	je .L_lambda_simple_params_end_018a
  4052 00001D08 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4053 00001D0D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4054 00001D11 48FFC6                  	inc rsi
  4055 00001D14 EBEC                    	jmp .L_lambda_simple_params_loop_018a
  4056                                  .L_lambda_simple_params_end_018a:
  4057 00001D16 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4058 00001D19 4889C3                  	mov rbx, rax
  4059 00001D1C 58                      	pop rax
  4060 00001D1D C60004                  	mov byte [rax], T_closure
  4061 00001D20 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4062 00001D24 48C74009[311D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018a
  4063 00001D2C E99C000000              	jmp .L_lambda_simple_end_018a
  4064                                  .L_lambda_simple_code_018a:	; lambda-simple body
  4065 00001D31 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4066 00001D37 740B                    	je .L_lambda_simple_arity_check_ok_018a
  4067 00001D39 FF742410                	push qword [rsp + 8 * 2]
  4068 00001D3D 6A01                    	push 1
  4069 00001D3F E916360100              	jmp L_error_incorrect_arity_simple
  4070                                  .L_lambda_simple_arity_check_ok_018a:
  4071 00001D44 C8000000                	enter 0, 0
  4072                                  	; Initiating tail-call optimization
  4073                                  	; preparing a non-tail-call
  4074 00001D48 488B4520                	mov rax, PARAM(0)	; param x
  4075 00001D4C 50                      	push rax
  4076 00001D4D 6A01                    	push 1	; arg count
  4077 00001D4F 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  4078 00001D57 803805                  	cmp byte [rax], T_undefined
  4079 00001D5A 0F8414350100            	je L_error_fvar_undefined
  4080 00001D60 803804                  	cmp byte [rax], T_closure
  4081 00001D63 0F858F350100            	jne L_error_non_closure
  4082 00001D69 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4083 00001D6C FF5009                  	call SOB_CLOSURE_CODE(rax)
  4084 00001D6F 50                      	push rax
  4085 00001D70 6A01                    	push 1	; Number of arguments
  4086 00001D72 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4087 00001D7A 803805                  	cmp byte [rax], T_undefined
  4088 00001D7D 0F84F1340100            	je L_error_fvar_undefined
  4089 00001D83 803804                  	cmp byte [rax], T_closure
  4090 00001D86 0F856C350100            	jne L_error_non_closure
  4091 00001D8C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4092 00001D8F FF7508                  	push qword [rbp + 8]
  4093 00001D92 FF7500                  	push qword [rbp]
  4094 00001D95 41BA05000000            	mov r10, 1 + 4
  4095 00001D9B 4C8B4518                	mov r8, COUNT
  4096 00001D9F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4097 00001DA4 4C8D4DF8                	lea r9, [rbp - 8]
  4098                                  .L_tc_recycle_frame_loop_01df:
  4099 00001DA8 4983FA00                	cmp r10, 0
  4100 00001DAC 7413                    	je .L_tc_recycle_frame_done_01df
  4101 00001DAE 4D8B19                  	mov r11, qword [r9]
  4102 00001DB1 4D8918                  	mov qword [r8], r11
  4103 00001DB4 49FFCA                  	dec r10
  4104 00001DB7 4983E808                	sub r8, 8
  4105 00001DBB 4983E908                	sub r9, 8
  4106 00001DBF EBE7                    	jmp .L_tc_recycle_frame_loop_01df
  4107                                  .L_tc_recycle_frame_done_01df:
  4108 00001DC1 498D6008                	lea rsp, [r8 + 8]
  4109 00001DC5 5D                      	pop rbp
  4110 00001DC6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4111 00001DC9 C9                      	leave
  4112 00001DCA C21800                  	ret AND_KILL_FRAME(1)
  4113                                  .L_lambda_simple_end_018a:	; new closure is in rax
  4114 00001DCD 48890425[29110000]      	mov qword [free_var_50], rax
  4115 00001DD5 48B8-                   	mov rax, sob_void
  4115 00001DD7 [0000000000000000] 
  4116                                  
  4117 00001DDF 4889C7                  	mov rdi, rax
  4118 00001DE2 E80F380100              	call print_sexpr_if_not_void
  4119 00001DE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4120 00001DEC E8B0350100              	call malloc
  4121 00001DF1 50                      	push rax
  4122 00001DF2 BF00000000              	mov rdi, 8 * 0	; new rib
  4123 00001DF7 E8A5350100              	call malloc
  4124 00001DFC 50                      	push rax
  4125 00001DFD BF08000000              	mov rdi, 8 * 1	; extended env
  4126 00001E02 E89A350100              	call malloc
  4127 00001E07 488B7D10                	mov rdi, ENV
  4128 00001E0B BE00000000              	mov rsi, 0
  4129 00001E10 BA01000000              	mov rdx, 1
  4130                                  .L_lambda_simple_env_loop_018b:	; ext_env[i + 1] <-- env[i]
  4131 00001E15 4883FE00                	cmp rsi, 0
  4132 00001E19 7410                    	je .L_lambda_simple_env_end_018b
  4133 00001E1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4134 00001E1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4135 00001E23 48FFC6                  	inc rsi
  4136 00001E26 48FFC2                  	inc rdx
  4137 00001E29 EBEA                    	jmp .L_lambda_simple_env_loop_018b
  4138                                  .L_lambda_simple_env_end_018b:
  4139 00001E2B 5B                      	pop rbx
  4140 00001E2C BE00000000              	mov rsi, 0
  4141                                  .L_lambda_simple_params_loop_018b:	; copy params
  4142 00001E31 4883FE00                	cmp rsi, 0
  4143 00001E35 740E                    	je .L_lambda_simple_params_end_018b
  4144 00001E37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4145 00001E3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4146 00001E40 48FFC6                  	inc rsi
  4147 00001E43 EBEC                    	jmp .L_lambda_simple_params_loop_018b
  4148                                  .L_lambda_simple_params_end_018b:
  4149 00001E45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4150 00001E48 4889C3                  	mov rbx, rax
  4151 00001E4B 58                      	pop rax
  4152 00001E4C C60004                  	mov byte [rax], T_closure
  4153 00001E4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4154 00001E53 48C74009[601E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018b
  4155 00001E5B E99C000000              	jmp .L_lambda_simple_end_018b
  4156                                  .L_lambda_simple_code_018b:	; lambda-simple body
  4157 00001E60 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4158 00001E66 740B                    	je .L_lambda_simple_arity_check_ok_018b
  4159 00001E68 FF742410                	push qword [rsp + 8 * 2]
  4160 00001E6C 6A01                    	push 1
  4161 00001E6E E9E7340100              	jmp L_error_incorrect_arity_simple
  4162                                  .L_lambda_simple_arity_check_ok_018b:
  4163 00001E73 C8000000                	enter 0, 0
  4164                                  	; Initiating tail-call optimization
  4165                                  	; preparing a non-tail-call
  4166 00001E77 488B4520                	mov rax, PARAM(0)	; param x
  4167 00001E7B 50                      	push rax
  4168 00001E7C 6A01                    	push 1	; arg count
  4169 00001E7E 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  4170 00001E86 803805                  	cmp byte [rax], T_undefined
  4171 00001E89 0F84E5330100            	je L_error_fvar_undefined
  4172 00001E8F 803804                  	cmp byte [rax], T_closure
  4173 00001E92 0F8560340100            	jne L_error_non_closure
  4174 00001E98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4175 00001E9B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4176 00001E9E 50                      	push rax
  4177 00001E9F 6A01                    	push 1	; Number of arguments
  4178 00001EA1 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4179 00001EA9 803805                  	cmp byte [rax], T_undefined
  4180 00001EAC 0F84C2330100            	je L_error_fvar_undefined
  4181 00001EB2 803804                  	cmp byte [rax], T_closure
  4182 00001EB5 0F853D340100            	jne L_error_non_closure
  4183 00001EBB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4184 00001EBE FF7508                  	push qword [rbp + 8]
  4185 00001EC1 FF7500                  	push qword [rbp]
  4186 00001EC4 41BA05000000            	mov r10, 1 + 4
  4187 00001ECA 4C8B4518                	mov r8, COUNT
  4188 00001ECE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4189 00001ED3 4C8D4DF8                	lea r9, [rbp - 8]
  4190                                  .L_tc_recycle_frame_loop_01e0:
  4191 00001ED7 4983FA00                	cmp r10, 0
  4192 00001EDB 7413                    	je .L_tc_recycle_frame_done_01e0
  4193 00001EDD 4D8B19                  	mov r11, qword [r9]
  4194 00001EE0 4D8918                  	mov qword [r8], r11
  4195 00001EE3 49FFCA                  	dec r10
  4196 00001EE6 4983E808                	sub r8, 8
  4197 00001EEA 4983E908                	sub r9, 8
  4198 00001EEE EBE7                    	jmp .L_tc_recycle_frame_loop_01e0
  4199                                  .L_tc_recycle_frame_done_01e0:
  4200 00001EF0 498D6008                	lea rsp, [r8 + 8]
  4201 00001EF4 5D                      	pop rbp
  4202 00001EF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4203 00001EF8 C9                      	leave
  4204 00001EF9 C21800                  	ret AND_KILL_FRAME(1)
  4205                                  .L_lambda_simple_end_018b:	; new closure is in rax
  4206 00001EFC 48890425[3A110000]      	mov qword [free_var_51], rax
  4207 00001F04 48B8-                   	mov rax, sob_void
  4207 00001F06 [0000000000000000] 
  4208                                  
  4209 00001F0E 4889C7                  	mov rdi, rax
  4210 00001F11 E8E0360100              	call print_sexpr_if_not_void
  4211 00001F16 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4212 00001F1B E881340100              	call malloc
  4213 00001F20 50                      	push rax
  4214 00001F21 BF00000000              	mov rdi, 8 * 0	; new rib
  4215 00001F26 E876340100              	call malloc
  4216 00001F2B 50                      	push rax
  4217 00001F2C BF08000000              	mov rdi, 8 * 1	; extended env
  4218 00001F31 E86B340100              	call malloc
  4219 00001F36 488B7D10                	mov rdi, ENV
  4220 00001F3A BE00000000              	mov rsi, 0
  4221 00001F3F BA01000000              	mov rdx, 1
  4222                                  .L_lambda_simple_env_loop_018c:	; ext_env[i + 1] <-- env[i]
  4223 00001F44 4883FE00                	cmp rsi, 0
  4224 00001F48 7410                    	je .L_lambda_simple_env_end_018c
  4225 00001F4A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4226 00001F4E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4227 00001F52 48FFC6                  	inc rsi
  4228 00001F55 48FFC2                  	inc rdx
  4229 00001F58 EBEA                    	jmp .L_lambda_simple_env_loop_018c
  4230                                  .L_lambda_simple_env_end_018c:
  4231 00001F5A 5B                      	pop rbx
  4232 00001F5B BE00000000              	mov rsi, 0
  4233                                  .L_lambda_simple_params_loop_018c:	; copy params
  4234 00001F60 4883FE00                	cmp rsi, 0
  4235 00001F64 740E                    	je .L_lambda_simple_params_end_018c
  4236 00001F66 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4237 00001F6B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4238 00001F6F 48FFC6                  	inc rsi
  4239 00001F72 EBEC                    	jmp .L_lambda_simple_params_loop_018c
  4240                                  .L_lambda_simple_params_end_018c:
  4241 00001F74 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4242 00001F77 4889C3                  	mov rbx, rax
  4243 00001F7A 58                      	pop rax
  4244 00001F7B C60004                  	mov byte [rax], T_closure
  4245 00001F7E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4246 00001F82 48C74009[8F1F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018c
  4247 00001F8A E99C000000              	jmp .L_lambda_simple_end_018c
  4248                                  .L_lambda_simple_code_018c:	; lambda-simple body
  4249 00001F8F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4250 00001F95 740B                    	je .L_lambda_simple_arity_check_ok_018c
  4251 00001F97 FF742410                	push qword [rsp + 8 * 2]
  4252 00001F9B 6A01                    	push 1
  4253 00001F9D E9B8330100              	jmp L_error_incorrect_arity_simple
  4254                                  .L_lambda_simple_arity_check_ok_018c:
  4255 00001FA2 C8000000                	enter 0, 0
  4256                                  	; Initiating tail-call optimization
  4257                                  	; preparing a non-tail-call
  4258 00001FA6 488B4520                	mov rax, PARAM(0)	; param x
  4259 00001FAA 50                      	push rax
  4260 00001FAB 6A01                    	push 1	; arg count
  4261 00001FAD 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4262 00001FB5 803805                  	cmp byte [rax], T_undefined
  4263 00001FB8 0F84B6320100            	je L_error_fvar_undefined
  4264 00001FBE 803804                  	cmp byte [rax], T_closure
  4265 00001FC1 0F8531330100            	jne L_error_non_closure
  4266 00001FC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4267 00001FCA FF5009                  	call SOB_CLOSURE_CODE(rax)
  4268 00001FCD 50                      	push rax
  4269 00001FCE 6A01                    	push 1	; Number of arguments
  4270 00001FD0 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4271 00001FD8 803805                  	cmp byte [rax], T_undefined
  4272 00001FDB 0F8493320100            	je L_error_fvar_undefined
  4273 00001FE1 803804                  	cmp byte [rax], T_closure
  4274 00001FE4 0F850E330100            	jne L_error_non_closure
  4275 00001FEA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4276 00001FED FF7508                  	push qword [rbp + 8]
  4277 00001FF0 FF7500                  	push qword [rbp]
  4278 00001FF3 41BA05000000            	mov r10, 1 + 4
  4279 00001FF9 4C8B4518                	mov r8, COUNT
  4280 00001FFD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4281 00002002 4C8D4DF8                	lea r9, [rbp - 8]
  4282                                  .L_tc_recycle_frame_loop_01e1:
  4283 00002006 4983FA00                	cmp r10, 0
  4284 0000200A 7413                    	je .L_tc_recycle_frame_done_01e1
  4285 0000200C 4D8B19                  	mov r11, qword [r9]
  4286 0000200F 4D8918                  	mov qword [r8], r11
  4287 00002012 49FFCA                  	dec r10
  4288 00002015 4983E808                	sub r8, 8
  4289 00002019 4983E908                	sub r9, 8
  4290 0000201D EBE7                    	jmp .L_tc_recycle_frame_loop_01e1
  4291                                  .L_tc_recycle_frame_done_01e1:
  4292 0000201F 498D6008                	lea rsp, [r8 + 8]
  4293 00002023 5D                      	pop rbp
  4294 00002024 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4295 00002027 C9                      	leave
  4296 00002028 C21800                  	ret AND_KILL_FRAME(1)
  4297                                  .L_lambda_simple_end_018c:	; new closure is in rax
  4298 0000202B 48890425[5C110000]      	mov qword [free_var_53], rax
  4299 00002033 48B8-                   	mov rax, sob_void
  4299 00002035 [0000000000000000] 
  4300                                  
  4301 0000203D 4889C7                  	mov rdi, rax
  4302 00002040 E8B1350100              	call print_sexpr_if_not_void
  4303 00002045 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4304 0000204A E852330100              	call malloc
  4305 0000204F 50                      	push rax
  4306 00002050 BF00000000              	mov rdi, 8 * 0	; new rib
  4307 00002055 E847330100              	call malloc
  4308 0000205A 50                      	push rax
  4309 0000205B BF08000000              	mov rdi, 8 * 1	; extended env
  4310 00002060 E83C330100              	call malloc
  4311 00002065 488B7D10                	mov rdi, ENV
  4312 00002069 BE00000000              	mov rsi, 0
  4313 0000206E BA01000000              	mov rdx, 1
  4314                                  .L_lambda_simple_env_loop_018d:	; ext_env[i + 1] <-- env[i]
  4315 00002073 4883FE00                	cmp rsi, 0
  4316 00002077 7410                    	je .L_lambda_simple_env_end_018d
  4317 00002079 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4318 0000207D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4319 00002081 48FFC6                  	inc rsi
  4320 00002084 48FFC2                  	inc rdx
  4321 00002087 EBEA                    	jmp .L_lambda_simple_env_loop_018d
  4322                                  .L_lambda_simple_env_end_018d:
  4323 00002089 5B                      	pop rbx
  4324 0000208A BE00000000              	mov rsi, 0
  4325                                  .L_lambda_simple_params_loop_018d:	; copy params
  4326 0000208F 4883FE00                	cmp rsi, 0
  4327 00002093 740E                    	je .L_lambda_simple_params_end_018d
  4328 00002095 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4329 0000209A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4330 0000209E 48FFC6                  	inc rsi
  4331 000020A1 EBEC                    	jmp .L_lambda_simple_params_loop_018d
  4332                                  .L_lambda_simple_params_end_018d:
  4333 000020A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4334 000020A6 4889C3                  	mov rbx, rax
  4335 000020A9 58                      	pop rax
  4336 000020AA C60004                  	mov byte [rax], T_closure
  4337 000020AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4338 000020B1 48C74009[BE200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018d
  4339 000020B9 E99C000000              	jmp .L_lambda_simple_end_018d
  4340                                  .L_lambda_simple_code_018d:	; lambda-simple body
  4341 000020BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4342 000020C4 740B                    	je .L_lambda_simple_arity_check_ok_018d
  4343 000020C6 FF742410                	push qword [rsp + 8 * 2]
  4344 000020CA 6A01                    	push 1
  4345 000020CC E989320100              	jmp L_error_incorrect_arity_simple
  4346                                  .L_lambda_simple_arity_check_ok_018d:
  4347 000020D1 C8000000                	enter 0, 0
  4348                                  	; Initiating tail-call optimization
  4349                                  	; preparing a non-tail-call
  4350 000020D5 488B4520                	mov rax, PARAM(0)	; param x
  4351 000020D9 50                      	push rax
  4352 000020DA 6A01                    	push 1	; arg count
  4353 000020DC 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4354 000020E4 803805                  	cmp byte [rax], T_undefined
  4355 000020E7 0F8487310100            	je L_error_fvar_undefined
  4356 000020ED 803804                  	cmp byte [rax], T_closure
  4357 000020F0 0F8502320100            	jne L_error_non_closure
  4358 000020F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4359 000020F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4360 000020FC 50                      	push rax
  4361 000020FD 6A01                    	push 1	; Number of arguments
  4362 000020FF 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4363 00002107 803805                  	cmp byte [rax], T_undefined
  4364 0000210A 0F8464310100            	je L_error_fvar_undefined
  4365 00002110 803804                  	cmp byte [rax], T_closure
  4366 00002113 0F85DF310100            	jne L_error_non_closure
  4367 00002119 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4368 0000211C FF7508                  	push qword [rbp + 8]
  4369 0000211F FF7500                  	push qword [rbp]
  4370 00002122 41BA05000000            	mov r10, 1 + 4
  4371 00002128 4C8B4518                	mov r8, COUNT
  4372 0000212C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4373 00002131 4C8D4DF8                	lea r9, [rbp - 8]
  4374                                  .L_tc_recycle_frame_loop_01e2:
  4375 00002135 4983FA00                	cmp r10, 0
  4376 00002139 7413                    	je .L_tc_recycle_frame_done_01e2
  4377 0000213B 4D8B19                  	mov r11, qword [r9]
  4378 0000213E 4D8918                  	mov qword [r8], r11
  4379 00002141 49FFCA                  	dec r10
  4380 00002144 4983E808                	sub r8, 8
  4381 00002148 4983E908                	sub r9, 8
  4382 0000214C EBE7                    	jmp .L_tc_recycle_frame_loop_01e2
  4383                                  .L_tc_recycle_frame_done_01e2:
  4384 0000214E 498D6008                	lea rsp, [r8 + 8]
  4385 00002152 5D                      	pop rbp
  4386 00002153 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4387 00002156 C9                      	leave
  4388 00002157 C21800                  	ret AND_KILL_FRAME(1)
  4389                                  .L_lambda_simple_end_018d:	; new closure is in rax
  4390 0000215A 48890425[6D110000]      	mov qword [free_var_54], rax
  4391 00002162 48B8-                   	mov rax, sob_void
  4391 00002164 [0000000000000000] 
  4392                                  
  4393 0000216C 4889C7                  	mov rdi, rax
  4394 0000216F E882340100              	call print_sexpr_if_not_void
  4395 00002174 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4396 00002179 E823320100              	call malloc
  4397 0000217E 50                      	push rax
  4398 0000217F BF00000000              	mov rdi, 8 * 0	; new rib
  4399 00002184 E818320100              	call malloc
  4400 00002189 50                      	push rax
  4401 0000218A BF08000000              	mov rdi, 8 * 1	; extended env
  4402 0000218F E80D320100              	call malloc
  4403 00002194 488B7D10                	mov rdi, ENV
  4404 00002198 BE00000000              	mov rsi, 0
  4405 0000219D BA01000000              	mov rdx, 1
  4406                                  .L_lambda_simple_env_loop_018e:	; ext_env[i + 1] <-- env[i]
  4407 000021A2 4883FE00                	cmp rsi, 0
  4408 000021A6 7410                    	je .L_lambda_simple_env_end_018e
  4409 000021A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4410 000021AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4411 000021B0 48FFC6                  	inc rsi
  4412 000021B3 48FFC2                  	inc rdx
  4413 000021B6 EBEA                    	jmp .L_lambda_simple_env_loop_018e
  4414                                  .L_lambda_simple_env_end_018e:
  4415 000021B8 5B                      	pop rbx
  4416 000021B9 BE00000000              	mov rsi, 0
  4417                                  .L_lambda_simple_params_loop_018e:	; copy params
  4418 000021BE 4883FE00                	cmp rsi, 0
  4419 000021C2 740E                    	je .L_lambda_simple_params_end_018e
  4420 000021C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4421 000021C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4422 000021CD 48FFC6                  	inc rsi
  4423 000021D0 EBEC                    	jmp .L_lambda_simple_params_loop_018e
  4424                                  .L_lambda_simple_params_end_018e:
  4425 000021D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4426 000021D5 4889C3                  	mov rbx, rax
  4427 000021D8 58                      	pop rax
  4428 000021D9 C60004                  	mov byte [rax], T_closure
  4429 000021DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4430 000021E0 48C74009[ED210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018e
  4431 000021E8 E99C000000              	jmp .L_lambda_simple_end_018e
  4432                                  .L_lambda_simple_code_018e:	; lambda-simple body
  4433 000021ED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4434 000021F3 740B                    	je .L_lambda_simple_arity_check_ok_018e
  4435 000021F5 FF742410                	push qword [rsp + 8 * 2]
  4436 000021F9 6A01                    	push 1
  4437 000021FB E95A310100              	jmp L_error_incorrect_arity_simple
  4438                                  .L_lambda_simple_arity_check_ok_018e:
  4439 00002200 C8000000                	enter 0, 0
  4440                                  	; Initiating tail-call optimization
  4441                                  	; preparing a non-tail-call
  4442 00002204 488B4520                	mov rax, PARAM(0)	; param x
  4443 00002208 50                      	push rax
  4444 00002209 6A01                    	push 1	; arg count
  4445 0000220B 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
  4446 00002213 803805                  	cmp byte [rax], T_undefined
  4447 00002216 0F8458300100            	je L_error_fvar_undefined
  4448 0000221C 803804                  	cmp byte [rax], T_closure
  4449 0000221F 0F85D3300100            	jne L_error_non_closure
  4450 00002225 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4451 00002228 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4452 0000222B 50                      	push rax
  4453 0000222C 6A01                    	push 1	; Number of arguments
  4454 0000222E 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4455 00002236 803805                  	cmp byte [rax], T_undefined
  4456 00002239 0F8435300100            	je L_error_fvar_undefined
  4457 0000223F 803804                  	cmp byte [rax], T_closure
  4458 00002242 0F85B0300100            	jne L_error_non_closure
  4459 00002248 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4460 0000224B FF7508                  	push qword [rbp + 8]
  4461 0000224E FF7500                  	push qword [rbp]
  4462 00002251 41BA05000000            	mov r10, 1 + 4
  4463 00002257 4C8B4518                	mov r8, COUNT
  4464 0000225B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4465 00002260 4C8D4DF8                	lea r9, [rbp - 8]
  4466                                  .L_tc_recycle_frame_loop_01e3:
  4467 00002264 4983FA00                	cmp r10, 0
  4468 00002268 7413                    	je .L_tc_recycle_frame_done_01e3
  4469 0000226A 4D8B19                  	mov r11, qword [r9]
  4470 0000226D 4D8918                  	mov qword [r8], r11
  4471 00002270 49FFCA                  	dec r10
  4472 00002273 4983E808                	sub r8, 8
  4473 00002277 4983E908                	sub r9, 8
  4474 0000227B EBE7                    	jmp .L_tc_recycle_frame_loop_01e3
  4475                                  .L_tc_recycle_frame_done_01e3:
  4476 0000227D 498D6008                	lea rsp, [r8 + 8]
  4477 00002281 5D                      	pop rbp
  4478 00002282 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4479 00002285 C9                      	leave
  4480 00002286 C21800                  	ret AND_KILL_FRAME(1)
  4481                                  .L_lambda_simple_end_018e:	; new closure is in rax
  4482 00002289 48890425[A0110000]      	mov qword [free_var_57], rax
  4483 00002291 48B8-                   	mov rax, sob_void
  4483 00002293 [0000000000000000] 
  4484                                  
  4485 0000229B 4889C7                  	mov rdi, rax
  4486 0000229E E853330100              	call print_sexpr_if_not_void
  4487 000022A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4488 000022A8 E8F4300100              	call malloc
  4489 000022AD 50                      	push rax
  4490 000022AE BF00000000              	mov rdi, 8 * 0	; new rib
  4491 000022B3 E8E9300100              	call malloc
  4492 000022B8 50                      	push rax
  4493 000022B9 BF08000000              	mov rdi, 8 * 1	; extended env
  4494 000022BE E8DE300100              	call malloc
  4495 000022C3 488B7D10                	mov rdi, ENV
  4496 000022C7 BE00000000              	mov rsi, 0
  4497 000022CC BA01000000              	mov rdx, 1
  4498                                  .L_lambda_simple_env_loop_018f:	; ext_env[i + 1] <-- env[i]
  4499 000022D1 4883FE00                	cmp rsi, 0
  4500 000022D5 7410                    	je .L_lambda_simple_env_end_018f
  4501 000022D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4502 000022DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4503 000022DF 48FFC6                  	inc rsi
  4504 000022E2 48FFC2                  	inc rdx
  4505 000022E5 EBEA                    	jmp .L_lambda_simple_env_loop_018f
  4506                                  .L_lambda_simple_env_end_018f:
  4507 000022E7 5B                      	pop rbx
  4508 000022E8 BE00000000              	mov rsi, 0
  4509                                  .L_lambda_simple_params_loop_018f:	; copy params
  4510 000022ED 4883FE00                	cmp rsi, 0
  4511 000022F1 740E                    	je .L_lambda_simple_params_end_018f
  4512 000022F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4513 000022F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4514 000022FC 48FFC6                  	inc rsi
  4515 000022FF EBEC                    	jmp .L_lambda_simple_params_loop_018f
  4516                                  .L_lambda_simple_params_end_018f:
  4517 00002301 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4518 00002304 4889C3                  	mov rbx, rax
  4519 00002307 58                      	pop rax
  4520 00002308 C60004                  	mov byte [rax], T_closure
  4521 0000230B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4522 0000230F 48C74009[1C230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_018f
  4523 00002317 E99C000000              	jmp .L_lambda_simple_end_018f
  4524                                  .L_lambda_simple_code_018f:	; lambda-simple body
  4525 0000231C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4526 00002322 740B                    	je .L_lambda_simple_arity_check_ok_018f
  4527 00002324 FF742410                	push qword [rsp + 8 * 2]
  4528 00002328 6A01                    	push 1
  4529 0000232A E92B300100              	jmp L_error_incorrect_arity_simple
  4530                                  .L_lambda_simple_arity_check_ok_018f:
  4531 0000232F C8000000                	enter 0, 0
  4532                                  	; Initiating tail-call optimization
  4533                                  	; preparing a non-tail-call
  4534 00002333 488B4520                	mov rax, PARAM(0)	; param x
  4535 00002337 50                      	push rax
  4536 00002338 6A01                    	push 1	; arg count
  4537 0000233A 488B0425[07110000]      	mov rax, qword [free_var_48]	; free var cadr
  4538 00002342 803805                  	cmp byte [rax], T_undefined
  4539 00002345 0F84292F0100            	je L_error_fvar_undefined
  4540 0000234B 803804                  	cmp byte [rax], T_closure
  4541 0000234E 0F85A42F0100            	jne L_error_non_closure
  4542 00002354 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4543 00002357 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4544 0000235A 50                      	push rax
  4545 0000235B 6A01                    	push 1	; Number of arguments
  4546 0000235D 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4547 00002365 803805                  	cmp byte [rax], T_undefined
  4548 00002368 0F84062F0100            	je L_error_fvar_undefined
  4549 0000236E 803804                  	cmp byte [rax], T_closure
  4550 00002371 0F85812F0100            	jne L_error_non_closure
  4551 00002377 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4552 0000237A FF7508                  	push qword [rbp + 8]
  4553 0000237D FF7500                  	push qword [rbp]
  4554 00002380 41BA05000000            	mov r10, 1 + 4
  4555 00002386 4C8B4518                	mov r8, COUNT
  4556 0000238A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4557 0000238F 4C8D4DF8                	lea r9, [rbp - 8]
  4558                                  .L_tc_recycle_frame_loop_01e4:
  4559 00002393 4983FA00                	cmp r10, 0
  4560 00002397 7413                    	je .L_tc_recycle_frame_done_01e4
  4561 00002399 4D8B19                  	mov r11, qword [r9]
  4562 0000239C 4D8918                  	mov qword [r8], r11
  4563 0000239F 49FFCA                  	dec r10
  4564 000023A2 4983E808                	sub r8, 8
  4565 000023A6 4983E908                	sub r9, 8
  4566 000023AA EBE7                    	jmp .L_tc_recycle_frame_loop_01e4
  4567                                  .L_tc_recycle_frame_done_01e4:
  4568 000023AC 498D6008                	lea rsp, [r8 + 8]
  4569 000023B0 5D                      	pop rbp
  4570 000023B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4571 000023B4 C9                      	leave
  4572 000023B5 C21800                  	ret AND_KILL_FRAME(1)
  4573                                  .L_lambda_simple_end_018f:	; new closure is in rax
  4574 000023B8 48890425[B1110000]      	mov qword [free_var_58], rax
  4575 000023C0 48B8-                   	mov rax, sob_void
  4575 000023C2 [0000000000000000] 
  4576                                  
  4577 000023CA 4889C7                  	mov rdi, rax
  4578 000023CD E824320100              	call print_sexpr_if_not_void
  4579 000023D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4580 000023D7 E8C52F0100              	call malloc
  4581 000023DC 50                      	push rax
  4582 000023DD BF00000000              	mov rdi, 8 * 0	; new rib
  4583 000023E2 E8BA2F0100              	call malloc
  4584 000023E7 50                      	push rax
  4585 000023E8 BF08000000              	mov rdi, 8 * 1	; extended env
  4586 000023ED E8AF2F0100              	call malloc
  4587 000023F2 488B7D10                	mov rdi, ENV
  4588 000023F6 BE00000000              	mov rsi, 0
  4589 000023FB BA01000000              	mov rdx, 1
  4590                                  .L_lambda_simple_env_loop_0190:	; ext_env[i + 1] <-- env[i]
  4591 00002400 4883FE00                	cmp rsi, 0
  4592 00002404 7410                    	je .L_lambda_simple_env_end_0190
  4593 00002406 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4594 0000240A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4595 0000240E 48FFC6                  	inc rsi
  4596 00002411 48FFC2                  	inc rdx
  4597 00002414 EBEA                    	jmp .L_lambda_simple_env_loop_0190
  4598                                  .L_lambda_simple_env_end_0190:
  4599 00002416 5B                      	pop rbx
  4600 00002417 BE00000000              	mov rsi, 0
  4601                                  .L_lambda_simple_params_loop_0190:	; copy params
  4602 0000241C 4883FE00                	cmp rsi, 0
  4603 00002420 740E                    	je .L_lambda_simple_params_end_0190
  4604 00002422 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4605 00002427 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4606 0000242B 48FFC6                  	inc rsi
  4607 0000242E EBEC                    	jmp .L_lambda_simple_params_loop_0190
  4608                                  .L_lambda_simple_params_end_0190:
  4609 00002430 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4610 00002433 4889C3                  	mov rbx, rax
  4611 00002436 58                      	pop rax
  4612 00002437 C60004                  	mov byte [rax], T_closure
  4613 0000243A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4614 0000243E 48C74009[4B240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0190
  4615 00002446 E99C000000              	jmp .L_lambda_simple_end_0190
  4616                                  .L_lambda_simple_code_0190:	; lambda-simple body
  4617 0000244B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4618 00002451 740B                    	je .L_lambda_simple_arity_check_ok_0190
  4619 00002453 FF742410                	push qword [rsp + 8 * 2]
  4620 00002457 6A01                    	push 1
  4621 00002459 E9FC2E0100              	jmp L_error_incorrect_arity_simple
  4622                                  .L_lambda_simple_arity_check_ok_0190:
  4623 0000245E C8000000                	enter 0, 0
  4624                                  	; Initiating tail-call optimization
  4625                                  	; preparing a non-tail-call
  4626 00002462 488B4520                	mov rax, PARAM(0)	; param x
  4627 00002466 50                      	push rax
  4628 00002467 6A01                    	push 1	; arg count
  4629 00002469 488B0425[8F110000]      	mov rax, qword [free_var_56]	; free var cdar
  4630 00002471 803805                  	cmp byte [rax], T_undefined
  4631 00002474 0F84FA2D0100            	je L_error_fvar_undefined
  4632 0000247A 803804                  	cmp byte [rax], T_closure
  4633 0000247D 0F85752E0100            	jne L_error_non_closure
  4634 00002483 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4635 00002486 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4636 00002489 50                      	push rax
  4637 0000248A 6A01                    	push 1	; Number of arguments
  4638 0000248C 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4639 00002494 803805                  	cmp byte [rax], T_undefined
  4640 00002497 0F84D72D0100            	je L_error_fvar_undefined
  4641 0000249D 803804                  	cmp byte [rax], T_closure
  4642 000024A0 0F85522E0100            	jne L_error_non_closure
  4643 000024A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4644 000024A9 FF7508                  	push qword [rbp + 8]
  4645 000024AC FF7500                  	push qword [rbp]
  4646 000024AF 41BA05000000            	mov r10, 1 + 4
  4647 000024B5 4C8B4518                	mov r8, COUNT
  4648 000024B9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4649 000024BE 4C8D4DF8                	lea r9, [rbp - 8]
  4650                                  .L_tc_recycle_frame_loop_01e5:
  4651 000024C2 4983FA00                	cmp r10, 0
  4652 000024C6 7413                    	je .L_tc_recycle_frame_done_01e5
  4653 000024C8 4D8B19                  	mov r11, qword [r9]
  4654 000024CB 4D8918                  	mov qword [r8], r11
  4655 000024CE 49FFCA                  	dec r10
  4656 000024D1 4983E808                	sub r8, 8
  4657 000024D5 4983E908                	sub r9, 8
  4658 000024D9 EBE7                    	jmp .L_tc_recycle_frame_loop_01e5
  4659                                  .L_tc_recycle_frame_done_01e5:
  4660 000024DB 498D6008                	lea rsp, [r8 + 8]
  4661 000024DF 5D                      	pop rbp
  4662 000024E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4663 000024E3 C9                      	leave
  4664 000024E4 C21800                  	ret AND_KILL_FRAME(1)
  4665                                  .L_lambda_simple_end_0190:	; new closure is in rax
  4666 000024E7 48890425[D3110000]      	mov qword [free_var_60], rax
  4667 000024EF 48B8-                   	mov rax, sob_void
  4667 000024F1 [0000000000000000] 
  4668                                  
  4669 000024F9 4889C7                  	mov rdi, rax
  4670 000024FC E8F5300100              	call print_sexpr_if_not_void
  4671 00002501 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4672 00002506 E8962E0100              	call malloc
  4673 0000250B 50                      	push rax
  4674 0000250C BF00000000              	mov rdi, 8 * 0	; new rib
  4675 00002511 E88B2E0100              	call malloc
  4676 00002516 50                      	push rax
  4677 00002517 BF08000000              	mov rdi, 8 * 1	; extended env
  4678 0000251C E8802E0100              	call malloc
  4679 00002521 488B7D10                	mov rdi, ENV
  4680 00002525 BE00000000              	mov rsi, 0
  4681 0000252A BA01000000              	mov rdx, 1
  4682                                  .L_lambda_simple_env_loop_0191:	; ext_env[i + 1] <-- env[i]
  4683 0000252F 4883FE00                	cmp rsi, 0
  4684 00002533 7410                    	je .L_lambda_simple_env_end_0191
  4685 00002535 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4686 00002539 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4687 0000253D 48FFC6                  	inc rsi
  4688 00002540 48FFC2                  	inc rdx
  4689 00002543 EBEA                    	jmp .L_lambda_simple_env_loop_0191
  4690                                  .L_lambda_simple_env_end_0191:
  4691 00002545 5B                      	pop rbx
  4692 00002546 BE00000000              	mov rsi, 0
  4693                                  .L_lambda_simple_params_loop_0191:	; copy params
  4694 0000254B 4883FE00                	cmp rsi, 0
  4695 0000254F 740E                    	je .L_lambda_simple_params_end_0191
  4696 00002551 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4697 00002556 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4698 0000255A 48FFC6                  	inc rsi
  4699 0000255D EBEC                    	jmp .L_lambda_simple_params_loop_0191
  4700                                  .L_lambda_simple_params_end_0191:
  4701 0000255F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4702 00002562 4889C3                  	mov rbx, rax
  4703 00002565 58                      	pop rax
  4704 00002566 C60004                  	mov byte [rax], T_closure
  4705 00002569 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4706 0000256D 48C74009[7A250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0191
  4707 00002575 E99C000000              	jmp .L_lambda_simple_end_0191
  4708                                  .L_lambda_simple_code_0191:	; lambda-simple body
  4709 0000257A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4710 00002580 740B                    	je .L_lambda_simple_arity_check_ok_0191
  4711 00002582 FF742410                	push qword [rsp + 8 * 2]
  4712 00002586 6A01                    	push 1
  4713 00002588 E9CD2D0100              	jmp L_error_incorrect_arity_simple
  4714                                  .L_lambda_simple_arity_check_ok_0191:
  4715 0000258D C8000000                	enter 0, 0
  4716                                  	; Initiating tail-call optimization
  4717                                  	; preparing a non-tail-call
  4718 00002591 488B4520                	mov rax, PARAM(0)	; param x
  4719 00002595 50                      	push rax
  4720 00002596 6A01                    	push 1	; arg count
  4721 00002598 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4722 000025A0 803805                  	cmp byte [rax], T_undefined
  4723 000025A3 0F84CB2C0100            	je L_error_fvar_undefined
  4724 000025A9 803804                  	cmp byte [rax], T_closure
  4725 000025AC 0F85462D0100            	jne L_error_non_closure
  4726 000025B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4727 000025B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4728 000025B8 50                      	push rax
  4729 000025B9 6A01                    	push 1	; Number of arguments
  4730 000025BB 488B0425[06120000]      	mov rax, qword [free_var_63]	; free var cddr
  4731 000025C3 803805                  	cmp byte [rax], T_undefined
  4732 000025C6 0F84A82C0100            	je L_error_fvar_undefined
  4733 000025CC 803804                  	cmp byte [rax], T_closure
  4734 000025CF 0F85232D0100            	jne L_error_non_closure
  4735 000025D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4736 000025D8 FF7508                  	push qword [rbp + 8]
  4737 000025DB FF7500                  	push qword [rbp]
  4738 000025DE 41BA05000000            	mov r10, 1 + 4
  4739 000025E4 4C8B4518                	mov r8, COUNT
  4740 000025E8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4741 000025ED 4C8D4DF8                	lea r9, [rbp - 8]
  4742                                  .L_tc_recycle_frame_loop_01e6:
  4743 000025F1 4983FA00                	cmp r10, 0
  4744 000025F5 7413                    	je .L_tc_recycle_frame_done_01e6
  4745 000025F7 4D8B19                  	mov r11, qword [r9]
  4746 000025FA 4D8918                  	mov qword [r8], r11
  4747 000025FD 49FFCA                  	dec r10
  4748 00002600 4983E808                	sub r8, 8
  4749 00002604 4983E908                	sub r9, 8
  4750 00002608 EBE7                    	jmp .L_tc_recycle_frame_loop_01e6
  4751                                  .L_tc_recycle_frame_done_01e6:
  4752 0000260A 498D6008                	lea rsp, [r8 + 8]
  4753 0000260E 5D                      	pop rbp
  4754 0000260F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4755 00002612 C9                      	leave
  4756 00002613 C21800                  	ret AND_KILL_FRAME(1)
  4757                                  .L_lambda_simple_end_0191:	; new closure is in rax
  4758 00002616 48890425[E4110000]      	mov qword [free_var_61], rax
  4759 0000261E 48B8-                   	mov rax, sob_void
  4759 00002620 [0000000000000000] 
  4760                                  
  4761 00002628 4889C7                  	mov rdi, rax
  4762 0000262B E8C62F0100              	call print_sexpr_if_not_void
  4763 00002630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4764 00002635 E8672D0100              	call malloc
  4765 0000263A 50                      	push rax
  4766 0000263B BF00000000              	mov rdi, 8 * 0	; new rib
  4767 00002640 E85C2D0100              	call malloc
  4768 00002645 50                      	push rax
  4769 00002646 BF08000000              	mov rdi, 8 * 1	; extended env
  4770 0000264B E8512D0100              	call malloc
  4771 00002650 488B7D10                	mov rdi, ENV
  4772 00002654 BE00000000              	mov rsi, 0
  4773 00002659 BA01000000              	mov rdx, 1
  4774                                  .L_lambda_simple_env_loop_0192:	; ext_env[i + 1] <-- env[i]
  4775 0000265E 4883FE00                	cmp rsi, 0
  4776 00002662 7410                    	je .L_lambda_simple_env_end_0192
  4777 00002664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4778 00002668 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4779 0000266C 48FFC6                  	inc rsi
  4780 0000266F 48FFC2                  	inc rdx
  4781 00002672 EBEA                    	jmp .L_lambda_simple_env_loop_0192
  4782                                  .L_lambda_simple_env_end_0192:
  4783 00002674 5B                      	pop rbx
  4784 00002675 BE00000000              	mov rsi, 0
  4785                                  .L_lambda_simple_params_loop_0192:	; copy params
  4786 0000267A 4883FE00                	cmp rsi, 0
  4787 0000267E 740E                    	je .L_lambda_simple_params_end_0192
  4788 00002680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4789 00002685 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4790 00002689 48FFC6                  	inc rsi
  4791 0000268C EBEC                    	jmp .L_lambda_simple_params_loop_0192
  4792                                  .L_lambda_simple_params_end_0192:
  4793 0000268E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4794 00002691 4889C3                  	mov rbx, rax
  4795 00002694 58                      	pop rax
  4796 00002695 C60004                  	mov byte [rax], T_closure
  4797 00002698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4798 0000269C 48C74009[A9260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0192
  4799 000026A4 E90E010000              	jmp .L_lambda_simple_end_0192
  4800                                  .L_lambda_simple_code_0192:	; lambda-simple body
  4801 000026A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4802 000026AF 740B                    	je .L_lambda_simple_arity_check_ok_0192
  4803 000026B1 FF742410                	push qword [rsp + 8 * 2]
  4804 000026B5 6A01                    	push 1
  4805 000026B7 E99E2C0100              	jmp L_error_incorrect_arity_simple
  4806                                  .L_lambda_simple_arity_check_ok_0192:
  4807 000026BC C8000000                	enter 0, 0
  4808                                  	; preparing a non-tail-call
  4809 000026C0 488B4520                	mov rax, PARAM(0)	; param e
  4810 000026C4 50                      	push rax
  4811 000026C5 6A01                    	push 1	; arg count
  4812 000026C7 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  4813 000026CF 803805                  	cmp byte [rax], T_undefined
  4814 000026D2 0F849C2B0100            	je L_error_fvar_undefined
  4815 000026D8 803804                  	cmp byte [rax], T_closure
  4816 000026DB 0F85172C0100            	jne L_error_non_closure
  4817 000026E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4818 000026E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4819 000026E7 483D[02000000]          	cmp rax, sob_boolean_false
  4820 000026ED 0F85C0000000            	jne .L_or_end_001d
  4821                                  
  4822                                  	; preparing a non-tail-call
  4823 000026F3 488B4520                	mov rax, PARAM(0)	; param e
  4824 000026F7 50                      	push rax
  4825 000026F8 6A01                    	push 1	; arg count
  4826 000026FA 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
  4827 00002702 803805                  	cmp byte [rax], T_undefined
  4828 00002705 0F84692B0100            	je L_error_fvar_undefined
  4829 0000270B 803804                  	cmp byte [rax], T_closure
  4830 0000270E 0F85E42B0100            	jne L_error_non_closure
  4831 00002714 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4832 00002717 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4833 0000271A 483D[02000000]          	cmp rax, sob_boolean_false
  4834 00002720 0F8483000000            	je .L_if_else_0111
  4835                                  	; Initiating tail-call optimization
  4836                                  	; preparing a non-tail-call
  4837 00002726 488B4520                	mov rax, PARAM(0)	; param e
  4838 0000272A 50                      	push rax
  4839 0000272B 6A01                    	push 1	; arg count
  4840 0000272D 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  4841 00002735 803805                  	cmp byte [rax], T_undefined
  4842 00002738 0F84362B0100            	je L_error_fvar_undefined
  4843 0000273E 803804                  	cmp byte [rax], T_closure
  4844 00002741 0F85B12B0100            	jne L_error_non_closure
  4845 00002747 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4846 0000274A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4847 0000274D 50                      	push rax
  4848 0000274E 6A01                    	push 1	; Number of arguments
  4849 00002750 488B0425[37140000]      	mov rax, qword [free_var_96]	; free var list?
  4850 00002758 803805                  	cmp byte [rax], T_undefined
  4851 0000275B 0F84132B0100            	je L_error_fvar_undefined
  4852 00002761 803804                  	cmp byte [rax], T_closure
  4853 00002764 0F858E2B0100            	jne L_error_non_closure
  4854 0000276A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4855 0000276D FF7508                  	push qword [rbp + 8]
  4856 00002770 FF7500                  	push qword [rbp]
  4857 00002773 41BA05000000            	mov r10, 1 + 4
  4858 00002779 4C8B4518                	mov r8, COUNT
  4859 0000277D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  4860 00002782 4C8D4DF8                	lea r9, [rbp - 8]
  4861                                  .L_tc_recycle_frame_loop_01e7:
  4862 00002786 4983FA00                	cmp r10, 0
  4863 0000278A 7413                    	je .L_tc_recycle_frame_done_01e7
  4864 0000278C 4D8B19                  	mov r11, qword [r9]
  4865 0000278F 4D8918                  	mov qword [r8], r11
  4866 00002792 49FFCA                  	dec r10
  4867 00002795 4983E808                	sub r8, 8
  4868 00002799 4983E908                	sub r9, 8
  4869 0000279D EBE7                    	jmp .L_tc_recycle_frame_loop_01e7
  4870                                  .L_tc_recycle_frame_done_01e7:
  4871 0000279F 498D6008                	lea rsp, [r8 + 8]
  4872 000027A3 5D                      	pop rbp
  4873 000027A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4874 000027A7 EB0A                    	jmp .L_if_end_0111
  4875                                  .L_if_else_0111:
  4876 000027A9 48B8-                   	mov rax, L_constants + 2
  4876 000027AB [0200000000000000] 
  4877                                  .L_if_end_0111:
  4878                                  .L_or_end_001d:
  4879 000027B3 C9                      	leave
  4880 000027B4 C21800                  	ret AND_KILL_FRAME(1)
  4881                                  .L_lambda_simple_end_0192:	; new closure is in rax
  4882 000027B7 48890425[37140000]      	mov qword [free_var_96], rax
  4883 000027BF 48B8-                   	mov rax, sob_void
  4883 000027C1 [0000000000000000] 
  4884                                  
  4885 000027C9 4889C7                  	mov rdi, rax
  4886 000027CC E8252E0100              	call print_sexpr_if_not_void
  4887 000027D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4888 000027D6 E8C62B0100              	call malloc
  4889 000027DB 50                      	push rax
  4890 000027DC BF00000000              	mov rdi, 8 * 0	; new rib
  4891 000027E1 E8BB2B0100              	call malloc
  4892 000027E6 50                      	push rax
  4893 000027E7 BF08000000              	mov rdi, 8 * 1	; extended env
  4894 000027EC E8B02B0100              	call malloc
  4895 000027F1 488B7D10                	mov rdi, ENV
  4896 000027F5 BE00000000              	mov rsi, 0
  4897 000027FA BA01000000              	mov rdx, 1
  4898                                  .L_lambda_opt_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  4899 000027FF 4883FE00                	cmp rsi, 0
  4900 00002803 7410                    	je .L_lambda_opt_env_end_0033
  4901 00002805 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4902 00002809 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4903 0000280D 48FFC6                  	inc rsi
  4904 00002810 48FFC2                  	inc rdx
  4905 00002813 EBEA                    	jmp .L_lambda_opt_env_loop_0033
  4906                                  .L_lambda_opt_env_end_0033:
  4907 00002815 5B                      	pop rbx
  4908 00002816 BE00000000              	mov rsi, 0
  4909                                  .L_lambda_opt_params_loop_0033:	; copy params
  4910 0000281B 4883FE00                	cmp rsi, 0
  4911 0000281F 740E                    	je .L_lambda_opt_params_end_0033
  4912 00002821 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4913 00002826 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4914 0000282A 48FFC6                  	inc rsi
  4915 0000282D EBEC                    	jmp .L_lambda_opt_params_loop_0033
  4916                                  .L_lambda_opt_params_end_0033:
  4917 0000282F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4918 00002832 4889C3                  	mov rbx, rax
  4919 00002835 58                      	pop rax
  4920 00002836 C60004                  	mov byte [rax], T_closure
  4921 00002839 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4922 0000283D 48C74009[4A280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0033
  4923 00002845 E911010000              	jmp .L_lambda_opt_end_0033
  4924                                  .L_lambda_opt_code_0033:
  4925 0000284A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  4926 0000284F 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  4927 00002853 7407                    	je .L_lambda_opt_arity_check_exact_0033	; Jump if arity matches
  4928 00002855 7F4C                    	jg .L_lambda_opt_arity_check_more_0033	; Jump if more arguments passed
  4929 00002857 E9122B0100              	jmp L_error_incorrect_arity_opt
  4930                                  .L_lambda_opt_arity_check_exact_0033:
  4931 0000285C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  4932 0000285F 4983C603                	add r14, 3 ; add 3 first stack values
  4933 00002863 41BF00000000            	mov r15, 0 ; r15 = index
  4934 00002869 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  4935 0000286D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  4936 00002875 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0033
  4937                                  .L_lambda_opt_stack_shrink_loop_0033:
  4938 00002877 4983FE00                	cmp r14, 0
  4939 0000287B 7E11                    	jle .L_make_lambda_opt_exact_finish_0033
  4940 0000287D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  4941 00002882 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  4942 00002886 49FFCE                  	dec r14 ; next loop value
  4943 00002889 49FFC7                  	inc r15 ; update i
  4944 0000288C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0033
  4945                                  .L_make_lambda_opt_exact_finish_0033:
  4946 0000288E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  4947 00002896 49FFC2                  	inc r10
  4948 00002899 4C89542410              	mov qword [rsp + 8 * 2], r10
  4949 0000289E E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0033
  4950                                  .L_lambda_opt_arity_check_more_0033:
  4951 000028A3 4D89D6                  	mov r14, r10 ; r14 = num args
  4952 000028A6 4D89D7                  	mov r15, r10 ; r15 = num args
  4953 000028A9 41B900000000            	mov r9, 0; r9 = number of params 
  4954 000028AF 4D29CE                  	sub r14, r9 ; r14 = extra args
  4955 000028B2 4D01F1                  	add r9, r14 ; r9 = num args
  4956 000028B5 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  4956 000028B7 [0100000000000000] 
  4957 000028BF EB00                    	jmp .L_make_lambda_opt_arg_list_0033
  4958                                  .L_make_lambda_opt_arg_list_0033:
  4959 000028C1 4983FE00                	cmp r14, 0
  4960 000028C5 7E25                    	jle .L_make_lambda_opt_stack_fixed_0033
  4961 000028C7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  4962 000028CC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  4963 000028D1 E8CB2A0100              	call malloc                         ; Allocate memory, result in rax
  4964 000028D6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  4965 000028D9 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  4966 000028DD 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  4967 000028E1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  4968 000028E4 49FFC9                  	dec r9                              ; args index minus 1
  4969 000028E7 49FFCE                  	dec r14                             ; next iteration
  4970 000028EA EBD5                    	jmp .L_make_lambda_opt_arg_list_0033
  4971                                  .L_make_lambda_opt_stack_fixed_0033:
  4972 000028EC 4D89FE                  	mov r14, r15 ; r14 = num args
  4973 000028EF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  4974 000028F2 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  4975 000028F6 4D89C1                  	mov r9, r8
  4976 000028F9 41BA00000000            	mov r10, 0; r10 = num of params
  4977 000028FF 4D29D6                  	sub r14, r10 ; r14 = extra args
  4978 00002902 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  4979 00002905 49FFCE                  	dec r14 ; how much we need to change stack wise?
  4980 00002908 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  4981 0000290D 4D89CC                  	mov r12, r9
  4982 00002910 4D29F4                  	sub r12, r14
  4983 00002913 49FFCC                  	dec r12
  4984 00002916 49FFCC                  	dec r12
  4985 00002919 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0033
  4986                                  .L_lambda_opt_stack_shrink_loop_more_0033:
  4987 0000291B 4983F800                	cmp r8, 0
  4988 0000291F 7E16                    	jle .L_make_lambda_opt_more_finish_0033
  4989 00002921 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  4990 00002925 4D01F4                  	add r12, r14
  4991 00002928 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  4992 0000292C 49FFC8                  	dec r8 ; next iteration
  4993 0000292F 4D29F4                  	sub r12, r14 ; next iteration
  4994 00002932 49FFCC                  	dec r12 ; next iteration
  4995 00002935 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0033
  4996                                  .L_make_lambda_opt_more_finish_0033:
  4997 00002937 41BA00000000            	mov r10, 0
  4998 0000293D 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
  4999 00002946 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  5000 0000294A 4C01F4                  	add rsp, r14  ; Add to rsp
  5001 0000294D EB00                    	jmp .L_lambda_opt_stack_adjusted_0033
  5002                                  .L_lambda_opt_stack_adjusted_0033:
  5003 0000294F C8000000                	enter 0, 0
  5004 00002953 488B4520                	mov rax, PARAM(0)	; param args
  5005 00002957 C9                      	leave
  5006 00002958 C21800                  	ret AND_KILL_FRAME(1)
  5007                                  .L_lambda_opt_end_0033:	; new closure is in rax
  5008 0000295B 48890425[F3130000]      	mov qword [free_var_92], rax
  5009 00002963 48B8-                   	mov rax, sob_void
  5009 00002965 [0000000000000000] 
  5010                                  
  5011 0000296D 4889C7                  	mov rdi, rax
  5012 00002970 E8812C0100              	call print_sexpr_if_not_void
  5013 00002975 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5014 0000297A E8222A0100              	call malloc
  5015 0000297F 50                      	push rax
  5016 00002980 BF00000000              	mov rdi, 8 * 0	; new rib
  5017 00002985 E8172A0100              	call malloc
  5018 0000298A 50                      	push rax
  5019 0000298B BF08000000              	mov rdi, 8 * 1	; extended env
  5020 00002990 E80C2A0100              	call malloc
  5021 00002995 488B7D10                	mov rdi, ENV
  5022 00002999 BE00000000              	mov rsi, 0
  5023 0000299E BA01000000              	mov rdx, 1
  5024                                  .L_lambda_simple_env_loop_0193:	; ext_env[i + 1] <-- env[i]
  5025 000029A3 4883FE00                	cmp rsi, 0
  5026 000029A7 7410                    	je .L_lambda_simple_env_end_0193
  5027 000029A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5028 000029AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5029 000029B1 48FFC6                  	inc rsi
  5030 000029B4 48FFC2                  	inc rdx
  5031 000029B7 EBEA                    	jmp .L_lambda_simple_env_loop_0193
  5032                                  .L_lambda_simple_env_end_0193:
  5033 000029B9 5B                      	pop rbx
  5034 000029BA BE00000000              	mov rsi, 0
  5035                                  .L_lambda_simple_params_loop_0193:	; copy params
  5036 000029BF 4883FE00                	cmp rsi, 0
  5037 000029C3 740E                    	je .L_lambda_simple_params_end_0193
  5038 000029C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5039 000029CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5040 000029CE 48FFC6                  	inc rsi
  5041 000029D1 EBEC                    	jmp .L_lambda_simple_params_loop_0193
  5042                                  .L_lambda_simple_params_end_0193:
  5043 000029D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5044 000029D6 4889C3                  	mov rbx, rax
  5045 000029D9 58                      	pop rax
  5046 000029DA C60004                  	mov byte [rax], T_closure
  5047 000029DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5048 000029E1 48C74009[EB290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0193
  5049 000029E9 EB3D                    	jmp .L_lambda_simple_end_0193
  5050                                  .L_lambda_simple_code_0193:	; lambda-simple body
  5051 000029EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5052 000029F1 740B                    	je .L_lambda_simple_arity_check_ok_0193
  5053 000029F3 FF742410                	push qword [rsp + 8 * 2]
  5054 000029F7 6A01                    	push 1
  5055 000029F9 E95C290100              	jmp L_error_incorrect_arity_simple
  5056                                  .L_lambda_simple_arity_check_ok_0193:
  5057 000029FE C8000000                	enter 0, 0
  5058 00002A02 488B4520                	mov rax, PARAM(0)	; param x
  5059 00002A06 483D[02000000]          	cmp rax, sob_boolean_false
  5060 00002A0C 740C                    	je .L_if_else_0112
  5061 00002A0E 48B8-                   	mov rax, L_constants + 2
  5061 00002A10 [0200000000000000] 
  5062 00002A18 EB0A                    	jmp .L_if_end_0112
  5063                                  .L_if_else_0112:
  5064 00002A1A 48B8-                   	mov rax, L_constants + 3
  5064 00002A1C [0300000000000000] 
  5065                                  .L_if_end_0112:
  5066 00002A24 C9                      	leave
  5067 00002A25 C21800                  	ret AND_KILL_FRAME(1)
  5068                                  .L_lambda_simple_end_0193:	; new closure is in rax
  5069 00002A28 48890425[E1140000]      	mov qword [free_var_106], rax
  5070 00002A30 48B8-                   	mov rax, sob_void
  5070 00002A32 [0000000000000000] 
  5071                                  
  5072 00002A3A 4889C7                  	mov rdi, rax
  5073 00002A3D E8B42B0100              	call print_sexpr_if_not_void
  5074 00002A42 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5075 00002A47 E855290100              	call malloc
  5076 00002A4C 50                      	push rax
  5077 00002A4D BF00000000              	mov rdi, 8 * 0	; new rib
  5078 00002A52 E84A290100              	call malloc
  5079 00002A57 50                      	push rax
  5080 00002A58 BF08000000              	mov rdi, 8 * 1	; extended env
  5081 00002A5D E83F290100              	call malloc
  5082 00002A62 488B7D10                	mov rdi, ENV
  5083 00002A66 BE00000000              	mov rsi, 0
  5084 00002A6B BA01000000              	mov rdx, 1
  5085                                  .L_lambda_simple_env_loop_0194:	; ext_env[i + 1] <-- env[i]
  5086 00002A70 4883FE00                	cmp rsi, 0
  5087 00002A74 7410                    	je .L_lambda_simple_env_end_0194
  5088 00002A76 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5089 00002A7A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5090 00002A7E 48FFC6                  	inc rsi
  5091 00002A81 48FFC2                  	inc rdx
  5092 00002A84 EBEA                    	jmp .L_lambda_simple_env_loop_0194
  5093                                  .L_lambda_simple_env_end_0194:
  5094 00002A86 5B                      	pop rbx
  5095 00002A87 BE00000000              	mov rsi, 0
  5096                                  .L_lambda_simple_params_loop_0194:	; copy params
  5097 00002A8C 4883FE00                	cmp rsi, 0
  5098 00002A90 740E                    	je .L_lambda_simple_params_end_0194
  5099 00002A92 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5100 00002A97 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5101 00002A9B 48FFC6                  	inc rsi
  5102 00002A9E EBEC                    	jmp .L_lambda_simple_params_loop_0194
  5103                                  .L_lambda_simple_params_end_0194:
  5104 00002AA0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5105 00002AA3 4889C3                  	mov rbx, rax
  5106 00002AA6 58                      	pop rax
  5107 00002AA7 C60004                  	mov byte [rax], T_closure
  5108 00002AAA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5109 00002AAE 48C74009[BB2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0194
  5110 00002AB6 E9A8000000              	jmp .L_lambda_simple_end_0194
  5111                                  .L_lambda_simple_code_0194:	; lambda-simple body
  5112 00002ABB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5113 00002AC1 740B                    	je .L_lambda_simple_arity_check_ok_0194
  5114 00002AC3 FF742410                	push qword [rsp + 8 * 2]
  5115 00002AC7 6A01                    	push 1
  5116 00002AC9 E98C280100              	jmp L_error_incorrect_arity_simple
  5117                                  .L_lambda_simple_arity_check_ok_0194:
  5118 00002ACE C8000000                	enter 0, 0
  5119                                  	; preparing a non-tail-call
  5120 00002AD2 488B4520                	mov rax, PARAM(0)	; param q
  5121 00002AD6 50                      	push rax
  5122 00002AD7 6A01                    	push 1	; arg count
  5123 00002AD9 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  5124 00002AE1 803805                  	cmp byte [rax], T_undefined
  5125 00002AE4 0F848A270100            	je L_error_fvar_undefined
  5126 00002AEA 803804                  	cmp byte [rax], T_closure
  5127 00002AED 0F8505280100            	jne L_error_non_closure
  5128 00002AF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5129 00002AF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5130 00002AF9 483D[02000000]          	cmp rax, sob_boolean_false
  5131 00002AFF 755E                    	jne .L_or_end_001e
  5132                                  
  5133                                  	; Initiating tail-call optimization
  5134 00002B01 488B4520                	mov rax, PARAM(0)	; param q
  5135 00002B05 50                      	push rax
  5136 00002B06 6A01                    	push 1	; Number of arguments
  5137 00002B08 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5138 00002B10 803805                  	cmp byte [rax], T_undefined
  5139 00002B13 0F845B270100            	je L_error_fvar_undefined
  5140 00002B19 803804                  	cmp byte [rax], T_closure
  5141 00002B1C 0F85D6270100            	jne L_error_non_closure
  5142 00002B22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5143 00002B25 FF7508                  	push qword [rbp + 8]
  5144 00002B28 FF7500                  	push qword [rbp]
  5145 00002B2B 41BA05000000            	mov r10, 1 + 4
  5146 00002B31 4C8B4518                	mov r8, COUNT
  5147 00002B35 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5148 00002B3A 4C8D4DF8                	lea r9, [rbp - 8]
  5149                                  .L_tc_recycle_frame_loop_01e8:
  5150 00002B3E 4983FA00                	cmp r10, 0
  5151 00002B42 7413                    	je .L_tc_recycle_frame_done_01e8
  5152 00002B44 4D8B19                  	mov r11, qword [r9]
  5153 00002B47 4D8918                  	mov qword [r8], r11
  5154 00002B4A 49FFCA                  	dec r10
  5155 00002B4D 4983E808                	sub r8, 8
  5156 00002B51 4983E908                	sub r9, 8
  5157 00002B55 EBE7                    	jmp .L_tc_recycle_frame_loop_01e8
  5158                                  .L_tc_recycle_frame_done_01e8:
  5159 00002B57 498D6008                	lea rsp, [r8 + 8]
  5160 00002B5B 5D                      	pop rbp
  5161 00002B5C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5162                                  .L_or_end_001e:
  5163 00002B5F C9                      	leave
  5164 00002B60 C21800                  	ret AND_KILL_FRAME(1)
  5165                                  .L_lambda_simple_end_0194:	; new closure is in rax
  5166 00002B63 48890425[69150000]      	mov qword [free_var_114], rax
  5167 00002B6B 48B8-                   	mov rax, sob_void
  5167 00002B6D [0000000000000000] 
  5168                                  
  5169 00002B75 4889C7                  	mov rdi, rax
  5170 00002B78 E8792A0100              	call print_sexpr_if_not_void
  5171                                  	; preparing a non-tail-call
  5172 00002B7D 48B8-                   	mov rax, L_constants + 2007
  5172 00002B7F [D707000000000000] 
  5173 00002B87 50                      	push rax
  5174 00002B88 6A01                    	push 1	; arg count
  5175 00002B8A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5176 00002B8F E80D280100              	call malloc
  5177 00002B94 50                      	push rax
  5178 00002B95 BF00000000              	mov rdi, 8 * 0	; new rib
  5179 00002B9A E802280100              	call malloc
  5180 00002B9F 50                      	push rax
  5181 00002BA0 BF08000000              	mov rdi, 8 * 1	; extended env
  5182 00002BA5 E8F7270100              	call malloc
  5183 00002BAA 488B7D10                	mov rdi, ENV
  5184 00002BAE BE00000000              	mov rsi, 0
  5185 00002BB3 BA01000000              	mov rdx, 1
  5186                                  .L_lambda_simple_env_loop_0195:	; ext_env[i + 1] <-- env[i]
  5187 00002BB8 4883FE00                	cmp rsi, 0
  5188 00002BBC 7410                    	je .L_lambda_simple_env_end_0195
  5189 00002BBE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5190 00002BC2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5191 00002BC6 48FFC6                  	inc rsi
  5192 00002BC9 48FFC2                  	inc rdx
  5193 00002BCC EBEA                    	jmp .L_lambda_simple_env_loop_0195
  5194                                  .L_lambda_simple_env_end_0195:
  5195 00002BCE 5B                      	pop rbx
  5196 00002BCF BE00000000              	mov rsi, 0
  5197                                  .L_lambda_simple_params_loop_0195:	; copy params
  5198 00002BD4 4883FE00                	cmp rsi, 0
  5199 00002BD8 740E                    	je .L_lambda_simple_params_end_0195
  5200 00002BDA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5201 00002BDF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5202 00002BE3 48FFC6                  	inc rsi
  5203 00002BE6 EBEC                    	jmp .L_lambda_simple_params_loop_0195
  5204                                  .L_lambda_simple_params_end_0195:
  5205 00002BE8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5206 00002BEB 4889C3                  	mov rbx, rax
  5207 00002BEE 58                      	pop rax
  5208 00002BEF C60004                  	mov byte [rax], T_closure
  5209 00002BF2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5210 00002BF6 48C74009[032C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0195
  5211 00002BFE E9C9030000              	jmp .L_lambda_simple_end_0195
  5212                                  .L_lambda_simple_code_0195:	; lambda-simple body
  5213 00002C03 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5214 00002C09 740B                    	je .L_lambda_simple_arity_check_ok_0195
  5215 00002C0B FF742410                	push qword [rsp + 8 * 2]
  5216 00002C0F 6A01                    	push 1
  5217 00002C11 E944270100              	jmp L_error_incorrect_arity_simple
  5218                                  .L_lambda_simple_arity_check_ok_0195:
  5219 00002C16 C8000000                	enter 0, 0
  5220 00002C1A BF08000000              	mov rdi, 8 * 1
  5221 00002C1F E87D270100              	call malloc
  5222 00002C24 488B5D20                	mov rbx, PARAM(0)
  5223 00002C28 488918                  	mov qword [rax], rbx
  5224 00002C2B 48894520                	mov PARAM(0), rax
  5225 00002C2F 48B8-                   	mov rax, sob_void
  5225 00002C31 [0000000000000000] 
  5226                                  
  5227 00002C39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5228 00002C3E E85E270100              	call malloc
  5229 00002C43 50                      	push rax
  5230 00002C44 BF08000000              	mov rdi, 8 * 1	; new rib
  5231 00002C49 E853270100              	call malloc
  5232 00002C4E 50                      	push rax
  5233 00002C4F BF10000000              	mov rdi, 8 * 2	; extended env
  5234 00002C54 E848270100              	call malloc
  5235 00002C59 488B7D10                	mov rdi, ENV
  5236 00002C5D BE00000000              	mov rsi, 0
  5237 00002C62 BA01000000              	mov rdx, 1
  5238                                  .L_lambda_simple_env_loop_0196:	; ext_env[i + 1] <-- env[i]
  5239 00002C67 4883FE01                	cmp rsi, 1
  5240 00002C6B 7410                    	je .L_lambda_simple_env_end_0196
  5241 00002C6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5242 00002C71 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5243 00002C75 48FFC6                  	inc rsi
  5244 00002C78 48FFC2                  	inc rdx
  5245 00002C7B EBEA                    	jmp .L_lambda_simple_env_loop_0196
  5246                                  .L_lambda_simple_env_end_0196:
  5247 00002C7D 5B                      	pop rbx
  5248 00002C7E BE00000000              	mov rsi, 0
  5249                                  .L_lambda_simple_params_loop_0196:	; copy params
  5250 00002C83 4883FE01                	cmp rsi, 1
  5251 00002C87 740E                    	je .L_lambda_simple_params_end_0196
  5252 00002C89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5253 00002C8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5254 00002C92 48FFC6                  	inc rsi
  5255 00002C95 EBEC                    	jmp .L_lambda_simple_params_loop_0196
  5256                                  .L_lambda_simple_params_end_0196:
  5257 00002C97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5258 00002C9A 4889C3                  	mov rbx, rax
  5259 00002C9D 58                      	pop rax
  5260 00002C9E C60004                  	mov byte [rax], T_closure
  5261 00002CA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5262 00002CA5 48C74009[B22C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0196
  5263 00002CAD E920010000              	jmp .L_lambda_simple_end_0196
  5264                                  .L_lambda_simple_code_0196:	; lambda-simple body
  5265 00002CB2 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5266 00002CB8 740B                    	je .L_lambda_simple_arity_check_ok_0196
  5267 00002CBA FF742410                	push qword [rsp + 8 * 2]
  5268 00002CBE 6A02                    	push 2
  5269 00002CC0 E995260100              	jmp L_error_incorrect_arity_simple
  5270                                  .L_lambda_simple_arity_check_ok_0196:
  5271 00002CC5 C8000000                	enter 0, 0
  5272                                  	; preparing a non-tail-call
  5273 00002CC9 488B4528                	mov rax, PARAM(1)	; param s
  5274 00002CCD 50                      	push rax
  5275 00002CCE 6A01                    	push 1	; arg count
  5276 00002CD0 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  5277 00002CD8 803805                  	cmp byte [rax], T_undefined
  5278 00002CDB 0F8493250100            	je L_error_fvar_undefined
  5279 00002CE1 803804                  	cmp byte [rax], T_closure
  5280 00002CE4 0F850E260100            	jne L_error_non_closure
  5281 00002CEA FF7001                  	push SOB_CLOSURE_ENV(rax)
  5282 00002CED FF5009                  	call SOB_CLOSURE_CODE(rax)
  5283 00002CF0 483D[02000000]          	cmp rax, sob_boolean_false
  5284 00002CF6 7409                    	je .L_if_else_0113
  5285 00002CF8 488B4520                	mov rax, PARAM(0)	; param a
  5286 00002CFC E9CD000000              	jmp .L_if_end_0113
  5287                                  .L_if_else_0113:
  5288                                  	; Initiating tail-call optimization
  5289                                  	; preparing a non-tail-call
  5290                                  	; preparing a non-tail-call
  5291 00002D01 488B4528                	mov rax, PARAM(1)	; param s
  5292 00002D05 50                      	push rax
  5293 00002D06 6A01                    	push 1	; arg count
  5294 00002D08 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  5295 00002D10 803805                  	cmp byte [rax], T_undefined
  5296 00002D13 0F845B250100            	je L_error_fvar_undefined
  5297 00002D19 803804                  	cmp byte [rax], T_closure
  5298 00002D1C 0F85D6250100            	jne L_error_non_closure
  5299 00002D22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5300 00002D25 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5301 00002D28 50                      	push rax
  5302                                  	; preparing a non-tail-call
  5303 00002D29 488B4528                	mov rax, PARAM(1)	; param s
  5304 00002D2D 50                      	push rax
  5305 00002D2E 6A01                    	push 1	; arg count
  5306 00002D30 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  5307 00002D38 803805                  	cmp byte [rax], T_undefined
  5308 00002D3B 0F8433250100            	je L_error_fvar_undefined
  5309 00002D41 803804                  	cmp byte [rax], T_closure
  5310 00002D44 0F85AE250100            	jne L_error_non_closure
  5311 00002D4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5312 00002D4D FF5009                  	call SOB_CLOSURE_CODE(rax)
  5313 00002D50 50                      	push rax
  5314 00002D51 6A02                    	push 2	; arg count
  5315 00002D53 488B4510                	mov rax, ENV
  5316 00002D57 488B00                  	mov rax, qword [rax + 8 * 0]
  5317 00002D5A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5318 00002D5D 488B00                  	mov rax, qword [rax]
  5319 00002D60 803804                  	cmp byte [rax], T_closure
  5320 00002D63 0F858F250100            	jne L_error_non_closure
  5321 00002D69 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5322 00002D6C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5323 00002D6F 50                      	push rax
  5324 00002D70 488B4520                	mov rax, PARAM(0)	; param a
  5325 00002D74 50                      	push rax
  5326 00002D75 6A02                    	push 2	; Number of arguments
  5327 00002D77 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  5328 00002D7F 803805                  	cmp byte [rax], T_undefined
  5329 00002D82 0F84EC240100            	je L_error_fvar_undefined
  5330 00002D88 803804                  	cmp byte [rax], T_closure
  5331 00002D8B 0F8567250100            	jne L_error_non_closure
  5332 00002D91 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5333 00002D94 FF7508                  	push qword [rbp + 8]
  5334 00002D97 FF7500                  	push qword [rbp]
  5335 00002D9A 41BA06000000            	mov r10, 2 + 4
  5336 00002DA0 4C8B4518                	mov r8, COUNT
  5337 00002DA4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5338 00002DA9 4C8D4DF8                	lea r9, [rbp - 8]
  5339                                  .L_tc_recycle_frame_loop_01e9:
  5340 00002DAD 4983FA00                	cmp r10, 0
  5341 00002DB1 7413                    	je .L_tc_recycle_frame_done_01e9
  5342 00002DB3 4D8B19                  	mov r11, qword [r9]
  5343 00002DB6 4D8918                  	mov qword [r8], r11
  5344 00002DB9 49FFCA                  	dec r10
  5345 00002DBC 4983E808                	sub r8, 8
  5346 00002DC0 4983E908                	sub r9, 8
  5347 00002DC4 EBE7                    	jmp .L_tc_recycle_frame_loop_01e9
  5348                                  .L_tc_recycle_frame_done_01e9:
  5349 00002DC6 498D6008                	lea rsp, [r8 + 8]
  5350 00002DCA 5D                      	pop rbp
  5351 00002DCB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5352                                  .L_if_end_0113:
  5353 00002DCE C9                      	leave
  5354 00002DCF C22000                  	ret AND_KILL_FRAME(2)
  5355                                  .L_lambda_simple_end_0196:	; new closure is in rax
  5356 00002DD2 50                      	push rax
  5357 00002DD3 488B4520                	mov rax, PARAM(0)	; param run
  5358 00002DD7 8F00                    	pop qword [rax]
  5359 00002DD9 48B8-                   	mov rax, sob_void
  5359 00002DDB [0000000000000000] 
  5360                                  
  5361 00002DE3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5362 00002DE8 E8B4250100              	call malloc
  5363 00002DED 50                      	push rax
  5364 00002DEE BF08000000              	mov rdi, 8 * 1	; new rib
  5365 00002DF3 E8A9250100              	call malloc
  5366 00002DF8 50                      	push rax
  5367 00002DF9 BF10000000              	mov rdi, 8 * 2	; extended env
  5368 00002DFE E89E250100              	call malloc
  5369 00002E03 488B7D10                	mov rdi, ENV
  5370 00002E07 BE00000000              	mov rsi, 0
  5371 00002E0C BA01000000              	mov rdx, 1
  5372                                  .L_lambda_opt_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  5373 00002E11 4883FE01                	cmp rsi, 1
  5374 00002E15 7410                    	je .L_lambda_opt_env_end_0034
  5375 00002E17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5376 00002E1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5377 00002E1F 48FFC6                  	inc rsi
  5378 00002E22 48FFC2                  	inc rdx
  5379 00002E25 EBEA                    	jmp .L_lambda_opt_env_loop_0034
  5380                                  .L_lambda_opt_env_end_0034:
  5381 00002E27 5B                      	pop rbx
  5382 00002E28 BE00000000              	mov rsi, 0
  5383                                  .L_lambda_opt_params_loop_0034:	; copy params
  5384 00002E2D 4883FE01                	cmp rsi, 1
  5385 00002E31 740E                    	je .L_lambda_opt_params_end_0034
  5386 00002E33 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5387 00002E38 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5388 00002E3C 48FFC6                  	inc rsi
  5389 00002E3F EBEC                    	jmp .L_lambda_opt_params_loop_0034
  5390                                  .L_lambda_opt_params_end_0034:
  5391 00002E41 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5392 00002E44 4889C3                  	mov rbx, rax
  5393 00002E47 58                      	pop rax
  5394 00002E48 C60004                  	mov byte [rax], T_closure
  5395 00002E4B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5396 00002E4F 48C74009[5C2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0034
  5397 00002E57 E96C010000              	jmp .L_lambda_opt_end_0034
  5398                                  .L_lambda_opt_code_0034:
  5399 00002E5C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5400 00002E61 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5401 00002E65 7407                    	je .L_lambda_opt_arity_check_exact_0034	; Jump if arity matches
  5402 00002E67 7F4C                    	jg .L_lambda_opt_arity_check_more_0034	; Jump if more arguments passed
  5403 00002E69 E900250100              	jmp L_error_incorrect_arity_opt
  5404                                  .L_lambda_opt_arity_check_exact_0034:
  5405 00002E6E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5406 00002E71 4983C603                	add r14, 3 ; add 3 first stack values
  5407 00002E75 41BF00000000            	mov r15, 0 ; r15 = index
  5408 00002E7B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5409 00002E7F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5410 00002E87 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0034
  5411                                  .L_lambda_opt_stack_shrink_loop_0034:
  5412 00002E89 4983FE00                	cmp r14, 0
  5413 00002E8D 7E11                    	jle .L_make_lambda_opt_exact_finish_0034
  5414 00002E8F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5415 00002E94 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5416 00002E98 49FFCE                  	dec r14 ; next loop value
  5417 00002E9B 49FFC7                  	inc r15 ; update i
  5418 00002E9E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0034
  5419                                  .L_make_lambda_opt_exact_finish_0034:
  5420 00002EA0 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5421 00002EA8 49FFC2                  	inc r10
  5422 00002EAB 4C89542410              	mov qword [rsp + 8 * 2], r10
  5423 00002EB0 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0034
  5424                                  .L_lambda_opt_arity_check_more_0034:
  5425 00002EB5 4D89D6                  	mov r14, r10 ; r14 = num args
  5426 00002EB8 4D89D7                  	mov r15, r10 ; r15 = num args
  5427 00002EBB 41B901000000            	mov r9, 1; r9 = number of params 
  5428 00002EC1 4D29CE                  	sub r14, r9 ; r14 = extra args
  5429 00002EC4 4D01F1                  	add r9, r14 ; r9 = num args
  5430 00002EC7 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5430 00002EC9 [0100000000000000] 
  5431 00002ED1 EB00                    	jmp .L_make_lambda_opt_arg_list_0034
  5432                                  .L_make_lambda_opt_arg_list_0034:
  5433 00002ED3 4983FE00                	cmp r14, 0
  5434 00002ED7 7E25                    	jle .L_make_lambda_opt_stack_fixed_0034
  5435 00002ED9 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5436 00002EDE BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5437 00002EE3 E8B9240100              	call malloc                         ; Allocate memory, result in rax
  5438 00002EE8 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5439 00002EEB 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5440 00002EEF 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5441 00002EF3 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5442 00002EF6 49FFC9                  	dec r9                              ; args index minus 1
  5443 00002EF9 49FFCE                  	dec r14                             ; next iteration
  5444 00002EFC EBD5                    	jmp .L_make_lambda_opt_arg_list_0034
  5445                                  .L_make_lambda_opt_stack_fixed_0034:
  5446 00002EFE 4D89FE                  	mov r14, r15 ; r14 = num args
  5447 00002F01 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5448 00002F04 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5449 00002F08 4D89C1                  	mov r9, r8
  5450 00002F0B 41BA01000000            	mov r10, 1; r10 = num of params
  5451 00002F11 4D29D6                  	sub r14, r10 ; r14 = extra args
  5452 00002F14 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5453 00002F17 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5454 00002F1A 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  5455 00002F1F 4D89CC                  	mov r12, r9
  5456 00002F22 4D29F4                  	sub r12, r14
  5457 00002F25 49FFCC                  	dec r12
  5458 00002F28 49FFCC                  	dec r12
  5459 00002F2B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0034
  5460                                  .L_lambda_opt_stack_shrink_loop_more_0034:
  5461 00002F2D 4983F800                	cmp r8, 0
  5462 00002F31 7E16                    	jle .L_make_lambda_opt_more_finish_0034
  5463 00002F33 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5464 00002F37 4D01F4                  	add r12, r14
  5465 00002F3A 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  5466 00002F3E 49FFC8                  	dec r8 ; next iteration
  5467 00002F41 4D29F4                  	sub r12, r14 ; next iteration
  5468 00002F44 49FFCC                  	dec r12 ; next iteration
  5469 00002F47 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0034
  5470                                  .L_make_lambda_opt_more_finish_0034:
  5471 00002F49 41BA01000000            	mov r10, 1
  5472 00002F4F 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
  5473 00002F58 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  5474 00002F5C 4C01F4                  	add rsp, r14  ; Add to rsp
  5475 00002F5F EB00                    	jmp .L_lambda_opt_stack_adjusted_0034
  5476                                  .L_lambda_opt_stack_adjusted_0034:
  5477 00002F61 C8000000                	enter 0, 0
  5478                                  	; Initiating tail-call optimization
  5479 00002F65 488B4528                	mov rax, PARAM(1)	; param s
  5480 00002F69 50                      	push rax
  5481 00002F6A 488B4520                	mov rax, PARAM(0)	; param a
  5482 00002F6E 50                      	push rax
  5483 00002F6F 6A02                    	push 2	; Number of arguments
  5484 00002F71 488B4510                	mov rax, ENV
  5485 00002F75 488B00                  	mov rax, qword [rax + 8 * 0]
  5486 00002F78 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5487 00002F7B 488B00                  	mov rax, qword [rax]
  5488 00002F7E 803804                  	cmp byte [rax], T_closure
  5489 00002F81 0F8571230100            	jne L_error_non_closure
  5490 00002F87 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5491 00002F8A FF7508                  	push qword [rbp + 8]
  5492 00002F8D FF7500                  	push qword [rbp]
  5493 00002F90 41BA06000000            	mov r10, 2 + 4
  5494 00002F96 4C8B4518                	mov r8, COUNT
  5495 00002F9A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5496 00002F9F 4C8D4DF8                	lea r9, [rbp - 8]
  5497                                  .L_tc_recycle_frame_loop_01ea:
  5498 00002FA3 4983FA00                	cmp r10, 0
  5499 00002FA7 7413                    	je .L_tc_recycle_frame_done_01ea
  5500 00002FA9 4D8B19                  	mov r11, qword [r9]
  5501 00002FAC 4D8918                  	mov qword [r8], r11
  5502 00002FAF 49FFCA                  	dec r10
  5503 00002FB2 4983E808                	sub r8, 8
  5504 00002FB6 4983E908                	sub r9, 8
  5505 00002FBA EBE7                    	jmp .L_tc_recycle_frame_loop_01ea
  5506                                  .L_tc_recycle_frame_done_01ea:
  5507 00002FBC 498D6008                	lea rsp, [r8 + 8]
  5508 00002FC0 5D                      	pop rbp
  5509 00002FC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5510 00002FC4 C9                      	leave
  5511 00002FC5 C22000                  	ret AND_KILL_FRAME(2)
  5512                                  .L_lambda_opt_end_0034:	; new closure is in rax
  5513 00002FC8 C9                      	leave
  5514 00002FC9 C21800                  	ret AND_KILL_FRAME(1)
  5515                                  .L_lambda_simple_end_0195:	; new closure is in rax
  5516 00002FCC 803804                  	cmp byte [rax], T_closure
  5517 00002FCF 0F8523230100            	jne L_error_non_closure
  5518 00002FD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5519 00002FD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5520 00002FDB 48890425[04140000]      	mov qword [free_var_93], rax
  5521 00002FE3 48B8-                   	mov rax, sob_void
  5521 00002FE5 [0000000000000000] 
  5522                                  
  5523 00002FED 4889C7                  	mov rdi, rax
  5524 00002FF0 E801260100              	call print_sexpr_if_not_void
  5525                                  	; preparing a non-tail-call
  5526 00002FF5 48B8-                   	mov rax, L_constants + 2007
  5526 00002FF7 [D707000000000000] 
  5527 00002FFF 50                      	push rax
  5528 00003000 6A01                    	push 1	; arg count
  5529 00003002 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5530 00003007 E895230100              	call malloc
  5531 0000300C 50                      	push rax
  5532 0000300D BF00000000              	mov rdi, 8 * 0	; new rib
  5533 00003012 E88A230100              	call malloc
  5534 00003017 50                      	push rax
  5535 00003018 BF08000000              	mov rdi, 8 * 1	; extended env
  5536 0000301D E87F230100              	call malloc
  5537 00003022 488B7D10                	mov rdi, ENV
  5538 00003026 BE00000000              	mov rsi, 0
  5539 0000302B BA01000000              	mov rdx, 1
  5540                                  .L_lambda_simple_env_loop_0197:	; ext_env[i + 1] <-- env[i]
  5541 00003030 4883FE00                	cmp rsi, 0
  5542 00003034 7410                    	je .L_lambda_simple_env_end_0197
  5543 00003036 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5544 0000303A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5545 0000303E 48FFC6                  	inc rsi
  5546 00003041 48FFC2                  	inc rdx
  5547 00003044 EBEA                    	jmp .L_lambda_simple_env_loop_0197
  5548                                  .L_lambda_simple_env_end_0197:
  5549 00003046 5B                      	pop rbx
  5550 00003047 BE00000000              	mov rsi, 0
  5551                                  .L_lambda_simple_params_loop_0197:	; copy params
  5552 0000304C 4883FE00                	cmp rsi, 0
  5553 00003050 740E                    	je .L_lambda_simple_params_end_0197
  5554 00003052 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5555 00003057 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5556 0000305B 48FFC6                  	inc rsi
  5557 0000305E EBEC                    	jmp .L_lambda_simple_params_loop_0197
  5558                                  .L_lambda_simple_params_end_0197:
  5559 00003060 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5560 00003063 4889C3                  	mov rbx, rax
  5561 00003066 58                      	pop rax
  5562 00003067 C60004                  	mov byte [rax], T_closure
  5563 0000306A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5564 0000306E 48C74009[7B300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0197
  5565 00003076 E938040000              	jmp .L_lambda_simple_end_0197
  5566                                  .L_lambda_simple_code_0197:	; lambda-simple body
  5567 0000307B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5568 00003081 740B                    	je .L_lambda_simple_arity_check_ok_0197
  5569 00003083 FF742410                	push qword [rsp + 8 * 2]
  5570 00003087 6A01                    	push 1
  5571 00003089 E9CC220100              	jmp L_error_incorrect_arity_simple
  5572                                  .L_lambda_simple_arity_check_ok_0197:
  5573 0000308E C8000000                	enter 0, 0
  5574 00003092 BF08000000              	mov rdi, 8 * 1
  5575 00003097 E805230100              	call malloc
  5576 0000309C 488B5D20                	mov rbx, PARAM(0)
  5577 000030A0 488918                  	mov qword [rax], rbx
  5578 000030A3 48894520                	mov PARAM(0), rax
  5579 000030A7 48B8-                   	mov rax, sob_void
  5579 000030A9 [0000000000000000] 
  5580                                  
  5581 000030B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5582 000030B6 E8E6220100              	call malloc
  5583 000030BB 50                      	push rax
  5584 000030BC BF08000000              	mov rdi, 8 * 1	; new rib
  5585 000030C1 E8DB220100              	call malloc
  5586 000030C6 50                      	push rax
  5587 000030C7 BF10000000              	mov rdi, 8 * 2	; extended env
  5588 000030CC E8D0220100              	call malloc
  5589 000030D1 488B7D10                	mov rdi, ENV
  5590 000030D5 BE00000000              	mov rsi, 0
  5591 000030DA BA01000000              	mov rdx, 1
  5592                                  .L_lambda_simple_env_loop_0198:	; ext_env[i + 1] <-- env[i]
  5593 000030DF 4883FE01                	cmp rsi, 1
  5594 000030E3 7410                    	je .L_lambda_simple_env_end_0198
  5595 000030E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5596 000030E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5597 000030ED 48FFC6                  	inc rsi
  5598 000030F0 48FFC2                  	inc rdx
  5599 000030F3 EBEA                    	jmp .L_lambda_simple_env_loop_0198
  5600                                  .L_lambda_simple_env_end_0198:
  5601 000030F5 5B                      	pop rbx
  5602 000030F6 BE00000000              	mov rsi, 0
  5603                                  .L_lambda_simple_params_loop_0198:	; copy params
  5604 000030FB 4883FE01                	cmp rsi, 1
  5605 000030FF 740E                    	je .L_lambda_simple_params_end_0198
  5606 00003101 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5607 00003106 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5608 0000310A 48FFC6                  	inc rsi
  5609 0000310D EBEC                    	jmp .L_lambda_simple_params_loop_0198
  5610                                  .L_lambda_simple_params_end_0198:
  5611 0000310F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5612 00003112 4889C3                  	mov rbx, rax
  5613 00003115 58                      	pop rax
  5614 00003116 C60004                  	mov byte [rax], T_closure
  5615 00003119 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5616 0000311D 48C74009[2A310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0198
  5617 00003125 E921010000              	jmp .L_lambda_simple_end_0198
  5618                                  .L_lambda_simple_code_0198:	; lambda-simple body
  5619 0000312A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5620 00003130 740B                    	je .L_lambda_simple_arity_check_ok_0198
  5621 00003132 FF742410                	push qword [rsp + 8 * 2]
  5622 00003136 6A02                    	push 2
  5623 00003138 E91D220100              	jmp L_error_incorrect_arity_simple
  5624                                  .L_lambda_simple_arity_check_ok_0198:
  5625 0000313D C8000000                	enter 0, 0
  5626                                  	; preparing a non-tail-call
  5627 00003141 488B4528                	mov rax, PARAM(1)	; param s
  5628 00003145 50                      	push rax
  5629 00003146 6A01                    	push 1	; arg count
  5630 00003148 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
  5631 00003150 803805                  	cmp byte [rax], T_undefined
  5632 00003153 0F841B210100            	je L_error_fvar_undefined
  5633 00003159 803804                  	cmp byte [rax], T_closure
  5634 0000315C 0F8596210100            	jne L_error_non_closure
  5635 00003162 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5636 00003165 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5637 00003168 483D[02000000]          	cmp rax, sob_boolean_false
  5638 0000316E 0F84CF000000            	je .L_if_else_0114
  5639                                  	; Initiating tail-call optimization
  5640                                  	; preparing a non-tail-call
  5641                                  	; preparing a non-tail-call
  5642 00003174 488B4528                	mov rax, PARAM(1)	; param s
  5643 00003178 50                      	push rax
  5644 00003179 6A01                    	push 1	; arg count
  5645 0000317B 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  5646 00003183 803805                  	cmp byte [rax], T_undefined
  5647 00003186 0F84E8200100            	je L_error_fvar_undefined
  5648 0000318C 803804                  	cmp byte [rax], T_closure
  5649 0000318F 0F8563210100            	jne L_error_non_closure
  5650 00003195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5651 00003198 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5652 0000319B 50                      	push rax
  5653                                  	; preparing a non-tail-call
  5654 0000319C 488B4528                	mov rax, PARAM(1)	; param s
  5655 000031A0 50                      	push rax
  5656 000031A1 6A01                    	push 1	; arg count
  5657 000031A3 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  5658 000031AB 803805                  	cmp byte [rax], T_undefined
  5659 000031AE 0F84C0200100            	je L_error_fvar_undefined
  5660 000031B4 803804                  	cmp byte [rax], T_closure
  5661 000031B7 0F853B210100            	jne L_error_non_closure
  5662 000031BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5663 000031C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5664 000031C3 50                      	push rax
  5665 000031C4 6A02                    	push 2	; arg count
  5666 000031C6 488B4510                	mov rax, ENV
  5667 000031CA 488B00                  	mov rax, qword [rax + 8 * 0]
  5668 000031CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5669 000031D0 488B00                  	mov rax, qword [rax]
  5670 000031D3 803804                  	cmp byte [rax], T_closure
  5671 000031D6 0F851C210100            	jne L_error_non_closure
  5672 000031DC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5673 000031DF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5674 000031E2 50                      	push rax
  5675 000031E3 488B4520                	mov rax, PARAM(0)	; param a
  5676 000031E7 50                      	push rax
  5677 000031E8 6A02                    	push 2	; Number of arguments
  5678 000031EA 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  5679 000031F2 803805                  	cmp byte [rax], T_undefined
  5680 000031F5 0F8479200100            	je L_error_fvar_undefined
  5681 000031FB 803804                  	cmp byte [rax], T_closure
  5682 000031FE 0F85F4200100            	jne L_error_non_closure
  5683 00003204 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5684 00003207 FF7508                  	push qword [rbp + 8]
  5685 0000320A FF7500                  	push qword [rbp]
  5686 0000320D 41BA06000000            	mov r10, 2 + 4
  5687 00003213 4C8B4518                	mov r8, COUNT
  5688 00003217 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5689 0000321C 4C8D4DF8                	lea r9, [rbp - 8]
  5690                                  .L_tc_recycle_frame_loop_01eb:
  5691 00003220 4983FA00                	cmp r10, 0
  5692 00003224 7413                    	je .L_tc_recycle_frame_done_01eb
  5693 00003226 4D8B19                  	mov r11, qword [r9]
  5694 00003229 4D8918                  	mov qword [r8], r11
  5695 0000322C 49FFCA                  	dec r10
  5696 0000322F 4983E808                	sub r8, 8
  5697 00003233 4983E908                	sub r9, 8
  5698 00003237 EBE7                    	jmp .L_tc_recycle_frame_loop_01eb
  5699                                  .L_tc_recycle_frame_done_01eb:
  5700 00003239 498D6008                	lea rsp, [r8 + 8]
  5701 0000323D 5D                      	pop rbp
  5702 0000323E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5703 00003241 EB04                    	jmp .L_if_end_0114
  5704                                  .L_if_else_0114:
  5705 00003243 488B4520                	mov rax, PARAM(0)	; param a
  5706                                  .L_if_end_0114:
  5707 00003247 C9                      	leave
  5708 00003248 C22000                  	ret AND_KILL_FRAME(2)
  5709                                  .L_lambda_simple_end_0198:	; new closure is in rax
  5710 0000324B 50                      	push rax
  5711 0000324C 488B4520                	mov rax, PARAM(0)	; param run
  5712 00003250 8F00                    	pop qword [rax]
  5713 00003252 48B8-                   	mov rax, sob_void
  5713 00003254 [0000000000000000] 
  5714                                  
  5715 0000325C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5716 00003261 E83B210100              	call malloc
  5717 00003266 50                      	push rax
  5718 00003267 BF08000000              	mov rdi, 8 * 1	; new rib
  5719 0000326C E830210100              	call malloc
  5720 00003271 50                      	push rax
  5721 00003272 BF10000000              	mov rdi, 8 * 2	; extended env
  5722 00003277 E825210100              	call malloc
  5723 0000327C 488B7D10                	mov rdi, ENV
  5724 00003280 BE00000000              	mov rsi, 0
  5725 00003285 BA01000000              	mov rdx, 1
  5726                                  .L_lambda_opt_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  5727 0000328A 4883FE01                	cmp rsi, 1
  5728 0000328E 7410                    	je .L_lambda_opt_env_end_0035
  5729 00003290 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5730 00003294 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5731 00003298 48FFC6                  	inc rsi
  5732 0000329B 48FFC2                  	inc rdx
  5733 0000329E EBEA                    	jmp .L_lambda_opt_env_loop_0035
  5734                                  .L_lambda_opt_env_end_0035:
  5735 000032A0 5B                      	pop rbx
  5736 000032A1 BE00000000              	mov rsi, 0
  5737                                  .L_lambda_opt_params_loop_0035:	; copy params
  5738 000032A6 4883FE01                	cmp rsi, 1
  5739 000032AA 740E                    	je .L_lambda_opt_params_end_0035
  5740 000032AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5741 000032B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5742 000032B5 48FFC6                  	inc rsi
  5743 000032B8 EBEC                    	jmp .L_lambda_opt_params_loop_0035
  5744                                  .L_lambda_opt_params_end_0035:
  5745 000032BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5746 000032BD 4889C3                  	mov rbx, rax
  5747 000032C0 58                      	pop rax
  5748 000032C1 C60004                  	mov byte [rax], T_closure
  5749 000032C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5750 000032C8 48C74009[D5320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0035
  5751 000032D0 E9DA010000              	jmp .L_lambda_opt_end_0035
  5752                                  .L_lambda_opt_code_0035:
  5753 000032D5 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5754 000032DA 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5755 000032DE 7407                    	je .L_lambda_opt_arity_check_exact_0035	; Jump if arity matches
  5756 000032E0 7F4C                    	jg .L_lambda_opt_arity_check_more_0035	; Jump if more arguments passed
  5757 000032E2 E987200100              	jmp L_error_incorrect_arity_opt
  5758                                  .L_lambda_opt_arity_check_exact_0035:
  5759 000032E7 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5760 000032EA 4983C603                	add r14, 3 ; add 3 first stack values
  5761 000032EE 41BF00000000            	mov r15, 0 ; r15 = index
  5762 000032F4 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5763 000032F8 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5764 00003300 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0035
  5765                                  .L_lambda_opt_stack_shrink_loop_0035:
  5766 00003302 4983FE00                	cmp r14, 0
  5767 00003306 7E11                    	jle .L_make_lambda_opt_exact_finish_0035
  5768 00003308 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5769 0000330D 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5770 00003311 49FFCE                  	dec r14 ; next loop value
  5771 00003314 49FFC7                  	inc r15 ; update i
  5772 00003317 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0035
  5773                                  .L_make_lambda_opt_exact_finish_0035:
  5774 00003319 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5775 00003321 49FFC2                  	inc r10
  5776 00003324 4C89542410              	mov qword [rsp + 8 * 2], r10
  5777 00003329 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0035
  5778                                  .L_lambda_opt_arity_check_more_0035:
  5779 0000332E 4D89D6                  	mov r14, r10 ; r14 = num args
  5780 00003331 4D89D7                  	mov r15, r10 ; r15 = num args
  5781 00003334 41B901000000            	mov r9, 1; r9 = number of params 
  5782 0000333A 4D29CE                  	sub r14, r9 ; r14 = extra args
  5783 0000333D 4D01F1                  	add r9, r14 ; r9 = num args
  5784 00003340 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5784 00003342 [0100000000000000] 
  5785 0000334A EB00                    	jmp .L_make_lambda_opt_arg_list_0035
  5786                                  .L_make_lambda_opt_arg_list_0035:
  5787 0000334C 4983FE00                	cmp r14, 0
  5788 00003350 7E25                    	jle .L_make_lambda_opt_stack_fixed_0035
  5789 00003352 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5790 00003357 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5791 0000335C E840200100              	call malloc                         ; Allocate memory, result in rax
  5792 00003361 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5793 00003364 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5794 00003368 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5795 0000336C 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5796 0000336F 49FFC9                  	dec r9                              ; args index minus 1
  5797 00003372 49FFCE                  	dec r14                             ; next iteration
  5798 00003375 EBD5                    	jmp .L_make_lambda_opt_arg_list_0035
  5799                                  .L_make_lambda_opt_stack_fixed_0035:
  5800 00003377 4D89FE                  	mov r14, r15 ; r14 = num args
  5801 0000337A 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5802 0000337D 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5803 00003381 4D89C1                  	mov r9, r8
  5804 00003384 41BA01000000            	mov r10, 1; r10 = num of params
  5805 0000338A 4D29D6                  	sub r14, r10 ; r14 = extra args
  5806 0000338D 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  5807 00003390 49FFCE                  	dec r14 ; how much we need to change stack wise?
  5808 00003393 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  5809 00003398 4D89CC                  	mov r12, r9
  5810 0000339B 4D29F4                  	sub r12, r14
  5811 0000339E 49FFCC                  	dec r12
  5812 000033A1 49FFCC                  	dec r12
  5813 000033A4 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0035
  5814                                  .L_lambda_opt_stack_shrink_loop_more_0035:
  5815 000033A6 4983F800                	cmp r8, 0
  5816 000033AA 7E16                    	jle .L_make_lambda_opt_more_finish_0035
  5817 000033AC 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  5818 000033B0 4D01F4                  	add r12, r14
  5819 000033B3 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  5820 000033B7 49FFC8                  	dec r8 ; next iteration
  5821 000033BA 4D29F4                  	sub r12, r14 ; next iteration
  5822 000033BD 49FFCC                  	dec r12 ; next iteration
  5823 000033C0 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0035
  5824                                  .L_make_lambda_opt_more_finish_0035:
  5825 000033C2 41BA01000000            	mov r10, 1
  5826 000033C8 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
  5827 000033D1 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  5828 000033D5 4C01F4                  	add rsp, r14  ; Add to rsp
  5829 000033D8 EB00                    	jmp .L_lambda_opt_stack_adjusted_0035
  5830                                  .L_lambda_opt_stack_adjusted_0035:
  5831 000033DA C8000000                	enter 0, 0
  5832                                  	; Initiating tail-call optimization
  5833                                  	; preparing a non-tail-call
  5834                                  	; preparing a non-tail-call
  5835 000033DE 488B4528                	mov rax, PARAM(1)	; param s
  5836 000033E2 50                      	push rax
  5837 000033E3 6A01                    	push 1	; arg count
  5838 000033E5 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  5839 000033ED 803805                  	cmp byte [rax], T_undefined
  5840 000033F0 0F847E1E0100            	je L_error_fvar_undefined
  5841 000033F6 803804                  	cmp byte [rax], T_closure
  5842 000033F9 0F85F91E0100            	jne L_error_non_closure
  5843 000033FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5844 00003402 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5845 00003405 50                      	push rax
  5846                                  	; preparing a non-tail-call
  5847 00003406 488B4528                	mov rax, PARAM(1)	; param s
  5848 0000340A 50                      	push rax
  5849 0000340B 6A01                    	push 1	; arg count
  5850 0000340D 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  5851 00003415 803805                  	cmp byte [rax], T_undefined
  5852 00003418 0F84561E0100            	je L_error_fvar_undefined
  5853 0000341E 803804                  	cmp byte [rax], T_closure
  5854 00003421 0F85D11E0100            	jne L_error_non_closure
  5855 00003427 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5856 0000342A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5857 0000342D 50                      	push rax
  5858 0000342E 6A02                    	push 2	; arg count
  5859 00003430 488B4510                	mov rax, ENV
  5860 00003434 488B00                  	mov rax, qword [rax + 8 * 0]
  5861 00003437 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5862 0000343A 488B00                  	mov rax, qword [rax]
  5863 0000343D 803804                  	cmp byte [rax], T_closure
  5864 00003440 0F85B21E0100            	jne L_error_non_closure
  5865 00003446 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5866 00003449 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5867 0000344C 50                      	push rax
  5868 0000344D 488B4520                	mov rax, PARAM(0)	; param f
  5869 00003451 50                      	push rax
  5870 00003452 6A02                    	push 2	; Number of arguments
  5871 00003454 488B0425[A30E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5872 0000345C 803805                  	cmp byte [rax], T_undefined
  5873 0000345F 0F840F1E0100            	je L_error_fvar_undefined
  5874 00003465 803804                  	cmp byte [rax], T_closure
  5875 00003468 0F858A1E0100            	jne L_error_non_closure
  5876 0000346E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5877 00003471 FF7508                  	push qword [rbp + 8]
  5878 00003474 FF7500                  	push qword [rbp]
  5879 00003477 41BA06000000            	mov r10, 2 + 4
  5880 0000347D 4C8B4518                	mov r8, COUNT
  5881 00003481 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  5882 00003486 4C8D4DF8                	lea r9, [rbp - 8]
  5883                                  .L_tc_recycle_frame_loop_01ec:
  5884 0000348A 4983FA00                	cmp r10, 0
  5885 0000348E 7413                    	je .L_tc_recycle_frame_done_01ec
  5886 00003490 4D8B19                  	mov r11, qword [r9]
  5887 00003493 4D8918                  	mov qword [r8], r11
  5888 00003496 49FFCA                  	dec r10
  5889 00003499 4983E808                	sub r8, 8
  5890 0000349D 4983E908                	sub r9, 8
  5891 000034A1 EBE7                    	jmp .L_tc_recycle_frame_loop_01ec
  5892                                  .L_tc_recycle_frame_done_01ec:
  5893 000034A3 498D6008                	lea rsp, [r8 + 8]
  5894 000034A7 5D                      	pop rbp
  5895 000034A8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5896 000034AB C9                      	leave
  5897 000034AC C22000                  	ret AND_KILL_FRAME(2)
  5898                                  .L_lambda_opt_end_0035:	; new closure is in rax
  5899 000034AF C9                      	leave
  5900 000034B0 C21800                  	ret AND_KILL_FRAME(1)
  5901                                  .L_lambda_simple_end_0197:	; new closure is in rax
  5902 000034B3 803804                  	cmp byte [rax], T_closure
  5903 000034B6 0F853C1E0100            	jne L_error_non_closure
  5904 000034BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5905 000034BF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5906 000034C2 48890425[08100000]      	mov qword [free_var_33], rax
  5907 000034CA 48B8-                   	mov rax, sob_void
  5907 000034CC [0000000000000000] 
  5908                                  
  5909 000034D4 4889C7                  	mov rdi, rax
  5910 000034D7 E81A210100              	call print_sexpr_if_not_void
  5911 000034DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5912 000034E1 E8BB1E0100              	call malloc
  5913 000034E6 50                      	push rax
  5914 000034E7 BF00000000              	mov rdi, 8 * 0	; new rib
  5915 000034EC E8B01E0100              	call malloc
  5916 000034F1 50                      	push rax
  5917 000034F2 BF08000000              	mov rdi, 8 * 1	; extended env
  5918 000034F7 E8A51E0100              	call malloc
  5919 000034FC 488B7D10                	mov rdi, ENV
  5920 00003500 BE00000000              	mov rsi, 0
  5921 00003505 BA01000000              	mov rdx, 1
  5922                                  .L_lambda_opt_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  5923 0000350A 4883FE00                	cmp rsi, 0
  5924 0000350E 7410                    	je .L_lambda_opt_env_end_0036
  5925 00003510 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5926 00003514 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5927 00003518 48FFC6                  	inc rsi
  5928 0000351B 48FFC2                  	inc rdx
  5929 0000351E EBEA                    	jmp .L_lambda_opt_env_loop_0036
  5930                                  .L_lambda_opt_env_end_0036:
  5931 00003520 5B                      	pop rbx
  5932 00003521 BE00000000              	mov rsi, 0
  5933                                  .L_lambda_opt_params_loop_0036:	; copy params
  5934 00003526 4883FE00                	cmp rsi, 0
  5935 0000352A 740E                    	je .L_lambda_opt_params_end_0036
  5936 0000352C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5937 00003531 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5938 00003535 48FFC6                  	inc rsi
  5939 00003538 EBEC                    	jmp .L_lambda_opt_params_loop_0036
  5940                                  .L_lambda_opt_params_end_0036:
  5941 0000353A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5942 0000353D 4889C3                  	mov rbx, rax
  5943 00003540 58                      	pop rax
  5944 00003541 C60004                  	mov byte [rax], T_closure
  5945 00003544 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5946 00003548 48C74009[55350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0036
  5947 00003550 E983040000              	jmp .L_lambda_opt_end_0036
  5948                                  .L_lambda_opt_code_0036:
  5949 00003555 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  5950 0000355A 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  5951 0000355E 7407                    	je .L_lambda_opt_arity_check_exact_0036	; Jump if arity matches
  5952 00003560 7F4C                    	jg .L_lambda_opt_arity_check_more_0036	; Jump if more arguments passed
  5953 00003562 E9071E0100              	jmp L_error_incorrect_arity_opt
  5954                                  .L_lambda_opt_arity_check_exact_0036:
  5955 00003567 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  5956 0000356A 4983C603                	add r14, 3 ; add 3 first stack values
  5957 0000356E 41BF00000000            	mov r15, 0 ; r15 = index
  5958 00003574 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  5959 00003578 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  5960 00003580 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0036
  5961                                  .L_lambda_opt_stack_shrink_loop_0036:
  5962 00003582 4983FE00                	cmp r14, 0
  5963 00003586 7E11                    	jle .L_make_lambda_opt_exact_finish_0036
  5964 00003588 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  5965 0000358D 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  5966 00003591 49FFCE                  	dec r14 ; next loop value
  5967 00003594 49FFC7                  	inc r15 ; update i
  5968 00003597 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0036
  5969                                  .L_make_lambda_opt_exact_finish_0036:
  5970 00003599 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  5971 000035A1 49FFC2                  	inc r10
  5972 000035A4 4C89542410              	mov qword [rsp + 8 * 2], r10
  5973 000035A9 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0036
  5974                                  .L_lambda_opt_arity_check_more_0036:
  5975 000035AE 4D89D6                  	mov r14, r10 ; r14 = num args
  5976 000035B1 4D89D7                  	mov r15, r10 ; r15 = num args
  5977 000035B4 41B901000000            	mov r9, 1; r9 = number of params 
  5978 000035BA 4D29CE                  	sub r14, r9 ; r14 = extra args
  5979 000035BD 4D01F1                  	add r9, r14 ; r9 = num args
  5980 000035C0 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  5980 000035C2 [0100000000000000] 
  5981 000035CA EB00                    	jmp .L_make_lambda_opt_arg_list_0036
  5982                                  .L_make_lambda_opt_arg_list_0036:
  5983 000035CC 4983FE00                	cmp r14, 0
  5984 000035D0 7E25                    	jle .L_make_lambda_opt_stack_fixed_0036
  5985 000035D2 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  5986 000035D7 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  5987 000035DC E8C01D0100              	call malloc                         ; Allocate memory, result in rax
  5988 000035E1 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  5989 000035E4 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  5990 000035E8 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  5991 000035EC 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  5992 000035EF 49FFC9                  	dec r9                              ; args index minus 1
  5993 000035F2 49FFCE                  	dec r14                             ; next iteration
  5994 000035F5 EBD5                    	jmp .L_make_lambda_opt_arg_list_0036
  5995                                  .L_make_lambda_opt_stack_fixed_0036:
  5996 000035F7 4D89FE                  	mov r14, r15 ; r14 = num args
  5997 000035FA 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  5998 000035FD 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  5999 00003601 4D89C1                  	mov r9, r8
  6000 00003604 41BA01000000            	mov r10, 1; r10 = num of params
  6001 0000360A 4D29D6                  	sub r14, r10 ; r14 = extra args
  6002 0000360D 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6003 00003610 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6004 00003613 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  6005 00003618 4D89CC                  	mov r12, r9
  6006 0000361B 4D29F4                  	sub r12, r14
  6007 0000361E 49FFCC                  	dec r12
  6008 00003621 49FFCC                  	dec r12
  6009 00003624 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0036
  6010                                  .L_lambda_opt_stack_shrink_loop_more_0036:
  6011 00003626 4983F800                	cmp r8, 0
  6012 0000362A 7E16                    	jle .L_make_lambda_opt_more_finish_0036
  6013 0000362C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6014 00003630 4D01F4                  	add r12, r14
  6015 00003633 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  6016 00003637 49FFC8                  	dec r8 ; next iteration
  6017 0000363A 4D29F4                  	sub r12, r14 ; next iteration
  6018 0000363D 49FFCC                  	dec r12 ; next iteration
  6019 00003640 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0036
  6020                                  .L_make_lambda_opt_more_finish_0036:
  6021 00003642 41BA01000000            	mov r10, 1
  6022 00003648 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
  6023 00003651 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  6024 00003655 4C01F4                  	add rsp, r14  ; Add to rsp
  6025 00003658 EB00                    	jmp .L_lambda_opt_stack_adjusted_0036
  6026                                  .L_lambda_opt_stack_adjusted_0036:
  6027 0000365A C8000000                	enter 0, 0
  6028                                  	; Initiating tail-call optimization
  6029 0000365E 48B8-                   	mov rax, L_constants + 2007
  6029 00003660 [D707000000000000] 
  6030 00003668 50                      	push rax
  6031 00003669 6A01                    	push 1	; Number of arguments
  6032 0000366B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6033 00003670 E82C1D0100              	call malloc
  6034 00003675 50                      	push rax
  6035 00003676 BF10000000              	mov rdi, 8 * 2	; new rib
  6036 0000367B E8211D0100              	call malloc
  6037 00003680 50                      	push rax
  6038 00003681 BF10000000              	mov rdi, 8 * 2	; extended env
  6039 00003686 E8161D0100              	call malloc
  6040 0000368B 488B7D10                	mov rdi, ENV
  6041 0000368F BE00000000              	mov rsi, 0
  6042 00003694 BA01000000              	mov rdx, 1
  6043                                  .L_lambda_simple_env_loop_0199:	; ext_env[i + 1] <-- env[i]
  6044 00003699 4883FE01                	cmp rsi, 1
  6045 0000369D 7410                    	je .L_lambda_simple_env_end_0199
  6046 0000369F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6047 000036A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6048 000036A7 48FFC6                  	inc rsi
  6049 000036AA 48FFC2                  	inc rdx
  6050 000036AD EBEA                    	jmp .L_lambda_simple_env_loop_0199
  6051                                  .L_lambda_simple_env_end_0199:
  6052 000036AF 5B                      	pop rbx
  6053 000036B0 BE00000000              	mov rsi, 0
  6054                                  .L_lambda_simple_params_loop_0199:	; copy params
  6055 000036B5 4883FE02                	cmp rsi, 2
  6056 000036B9 740E                    	je .L_lambda_simple_params_end_0199
  6057 000036BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6058 000036C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6059 000036C4 48FFC6                  	inc rsi
  6060 000036C7 EBEC                    	jmp .L_lambda_simple_params_loop_0199
  6061                                  .L_lambda_simple_params_end_0199:
  6062 000036C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6063 000036CC 4889C3                  	mov rbx, rax
  6064 000036CF 58                      	pop rax
  6065 000036D0 C60004                  	mov byte [rax], T_closure
  6066 000036D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6067 000036D7 48C74009[E4360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0199
  6068 000036DF E9AA020000              	jmp .L_lambda_simple_end_0199
  6069                                  .L_lambda_simple_code_0199:	; lambda-simple body
  6070 000036E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6071 000036EA 740B                    	je .L_lambda_simple_arity_check_ok_0199
  6072 000036EC FF742410                	push qword [rsp + 8 * 2]
  6073 000036F0 6A01                    	push 1
  6074 000036F2 E9631C0100              	jmp L_error_incorrect_arity_simple
  6075                                  .L_lambda_simple_arity_check_ok_0199:
  6076 000036F7 C8000000                	enter 0, 0
  6077 000036FB BF08000000              	mov rdi, 8 * 1
  6078 00003700 E89C1C0100              	call malloc
  6079 00003705 488B5D20                	mov rbx, PARAM(0)
  6080 00003709 488918                  	mov qword [rax], rbx
  6081 0000370C 48894520                	mov PARAM(0), rax
  6082 00003710 48B8-                   	mov rax, sob_void
  6082 00003712 [0000000000000000] 
  6083                                  
  6084 0000371A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6085 0000371F E87D1C0100              	call malloc
  6086 00003724 50                      	push rax
  6087 00003725 BF08000000              	mov rdi, 8 * 1	; new rib
  6088 0000372A E8721C0100              	call malloc
  6089 0000372F 50                      	push rax
  6090 00003730 BF18000000              	mov rdi, 8 * 3	; extended env
  6091 00003735 E8671C0100              	call malloc
  6092 0000373A 488B7D10                	mov rdi, ENV
  6093 0000373E BE00000000              	mov rsi, 0
  6094 00003743 BA01000000              	mov rdx, 1
  6095                                  .L_lambda_simple_env_loop_019a:	; ext_env[i + 1] <-- env[i]
  6096 00003748 4883FE02                	cmp rsi, 2
  6097 0000374C 7410                    	je .L_lambda_simple_env_end_019a
  6098 0000374E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6099 00003752 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6100 00003756 48FFC6                  	inc rsi
  6101 00003759 48FFC2                  	inc rdx
  6102 0000375C EBEA                    	jmp .L_lambda_simple_env_loop_019a
  6103                                  .L_lambda_simple_env_end_019a:
  6104 0000375E 5B                      	pop rbx
  6105 0000375F BE00000000              	mov rsi, 0
  6106                                  .L_lambda_simple_params_loop_019a:	; copy params
  6107 00003764 4883FE01                	cmp rsi, 1
  6108 00003768 740E                    	je .L_lambda_simple_params_end_019a
  6109 0000376A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6110 0000376F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6111 00003773 48FFC6                  	inc rsi
  6112 00003776 EBEC                    	jmp .L_lambda_simple_params_loop_019a
  6113                                  .L_lambda_simple_params_end_019a:
  6114 00003778 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6115 0000377B 4889C3                  	mov rbx, rax
  6116 0000377E 58                      	pop rax
  6117 0000377F C60004                  	mov byte [rax], T_closure
  6118 00003782 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6119 00003786 48C74009[93370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019a
  6120 0000378E E980010000              	jmp .L_lambda_simple_end_019a
  6121                                  .L_lambda_simple_code_019a:	; lambda-simple body
  6122 00003793 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6123 00003799 740B                    	je .L_lambda_simple_arity_check_ok_019a
  6124 0000379B FF742410                	push qword [rsp + 8 * 2]
  6125 0000379F 6A01                    	push 1
  6126 000037A1 E9B41B0100              	jmp L_error_incorrect_arity_simple
  6127                                  .L_lambda_simple_arity_check_ok_019a:
  6128 000037A6 C8000000                	enter 0, 0
  6129                                  	; preparing a non-tail-call
  6130                                  	; preparing a non-tail-call
  6131 000037AA 488B4520                	mov rax, PARAM(0)	; param s
  6132 000037AE 50                      	push rax
  6133 000037AF 6A01                    	push 1	; arg count
  6134 000037B1 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6135 000037B9 803805                  	cmp byte [rax], T_undefined
  6136 000037BC 0F84B21A0100            	je L_error_fvar_undefined
  6137 000037C2 803804                  	cmp byte [rax], T_closure
  6138 000037C5 0F852D1B0100            	jne L_error_non_closure
  6139 000037CB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6140 000037CE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6141 000037D1 50                      	push rax
  6142 000037D2 6A01                    	push 1	; arg count
  6143 000037D4 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
  6144 000037DC 803805                  	cmp byte [rax], T_undefined
  6145 000037DF 0F848F1A0100            	je L_error_fvar_undefined
  6146 000037E5 803804                  	cmp byte [rax], T_closure
  6147 000037E8 0F850A1B0100            	jne L_error_non_closure
  6148 000037EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6149 000037F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6150 000037F4 483D[02000000]          	cmp rax, sob_boolean_false
  6151 000037FA 0F8405010000            	je .L_if_else_0115
  6152                                  	; preparing a non-tail-call
  6153                                  	; preparing a non-tail-call
  6154 00003800 488B4520                	mov rax, PARAM(0)	; param s
  6155 00003804 50                      	push rax
  6156 00003805 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6157 0000380D 803805                  	cmp byte [rax], T_undefined
  6158 00003810 0F845E1A0100            	je L_error_fvar_undefined
  6159 00003816 50                      	push rax
  6160 00003817 6A02                    	push 2	; arg count
  6161 00003819 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  6162 00003821 803805                  	cmp byte [rax], T_undefined
  6163 00003824 0F844A1A0100            	je L_error_fvar_undefined
  6164 0000382A 803804                  	cmp byte [rax], T_closure
  6165 0000382D 0F85C51A0100            	jne L_error_non_closure
  6166 00003833 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6167 00003836 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6168 00003839 50                      	push rax
  6169 0000383A 488B4510                	mov rax, ENV
  6170 0000383E 488B4008                	mov rax, qword [rax + 8 * 1]
  6171 00003842 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6172 00003845 50                      	push rax
  6173 00003846 6A02                    	push 2	; arg count
  6174 00003848 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
  6175 00003850 803805                  	cmp byte [rax], T_undefined
  6176 00003853 0F841B1A0100            	je L_error_fvar_undefined
  6177 00003859 803804                  	cmp byte [rax], T_closure
  6178 0000385C 0F85961A0100            	jne L_error_non_closure
  6179 00003862 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6180 00003865 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6181 00003868 483D[02000000]          	cmp rax, sob_boolean_false
  6182 0000386E 0F858F000000            	jne .L_or_end_001f
  6183                                  
  6184                                  	; Initiating tail-call optimization
  6185                                  	; preparing a non-tail-call
  6186 00003874 488B4520                	mov rax, PARAM(0)	; param s
  6187 00003878 50                      	push rax
  6188 00003879 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  6189 00003881 803805                  	cmp byte [rax], T_undefined
  6190 00003884 0F84EA190100            	je L_error_fvar_undefined
  6191 0000388A 50                      	push rax
  6192 0000388B 6A02                    	push 2	; arg count
  6193 0000388D 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  6194 00003895 803805                  	cmp byte [rax], T_undefined
  6195 00003898 0F84D6190100            	je L_error_fvar_undefined
  6196 0000389E 803804                  	cmp byte [rax], T_closure
  6197 000038A1 0F85511A0100            	jne L_error_non_closure
  6198 000038A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6199 000038AA FF5009                  	call SOB_CLOSURE_CODE(rax)
  6200 000038AD 50                      	push rax
  6201 000038AE 6A01                    	push 1	; Number of arguments
  6202 000038B0 488B4510                	mov rax, ENV
  6203 000038B4 488B00                  	mov rax, qword [rax + 8 * 0]
  6204 000038B7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6205 000038BA 488B00                  	mov rax, qword [rax]
  6206 000038BD 803804                  	cmp byte [rax], T_closure
  6207 000038C0 0F85321A0100            	jne L_error_non_closure
  6208 000038C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6209 000038C9 FF7508                  	push qword [rbp + 8]
  6210 000038CC FF7500                  	push qword [rbp]
  6211 000038CF 41BA05000000            	mov r10, 1 + 4
  6212 000038D5 4C8B4518                	mov r8, COUNT
  6213 000038D9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6214 000038DE 4C8D4DF8                	lea r9, [rbp - 8]
  6215                                  .L_tc_recycle_frame_loop_01ed:
  6216 000038E2 4983FA00                	cmp r10, 0
  6217 000038E6 7413                    	je .L_tc_recycle_frame_done_01ed
  6218 000038E8 4D8B19                  	mov r11, qword [r9]
  6219 000038EB 4D8918                  	mov qword [r8], r11
  6220 000038EE 49FFCA                  	dec r10
  6221 000038F1 4983E808                	sub r8, 8
  6222 000038F5 4983E908                	sub r9, 8
  6223 000038F9 EBE7                    	jmp .L_tc_recycle_frame_loop_01ed
  6224                                  .L_tc_recycle_frame_done_01ed:
  6225 000038FB 498D6008                	lea rsp, [r8 + 8]
  6226 000038FF 5D                      	pop rbp
  6227 00003900 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6228                                  .L_or_end_001f:
  6229 00003903 EB0A                    	jmp .L_if_end_0115
  6230                                  .L_if_else_0115:
  6231 00003905 48B8-                   	mov rax, L_constants + 2
  6231 00003907 [0200000000000000] 
  6232                                  .L_if_end_0115:
  6233 0000390F C9                      	leave
  6234 00003910 C21800                  	ret AND_KILL_FRAME(1)
  6235                                  .L_lambda_simple_end_019a:	; new closure is in rax
  6236 00003913 50                      	push rax
  6237 00003914 488B4520                	mov rax, PARAM(0)	; param loop
  6238 00003918 8F00                    	pop qword [rax]
  6239 0000391A 48B8-                   	mov rax, sob_void
  6239 0000391C [0000000000000000] 
  6240                                  
  6241                                  	; preparing a non-tail-call
  6242 00003924 488B4510                	mov rax, ENV
  6243 00003928 488B00                  	mov rax, qword [rax + 8 * 0]
  6244 0000392B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6245 0000392F 50                      	push rax
  6246 00003930 6A01                    	push 1	; arg count
  6247 00003932 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
  6248 0000393A 803805                  	cmp byte [rax], T_undefined
  6249 0000393D 0F8431190100            	je L_error_fvar_undefined
  6250 00003943 803804                  	cmp byte [rax], T_closure
  6251 00003946 0F85AC190100            	jne L_error_non_closure
  6252 0000394C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6253 0000394F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6254 00003952 483D[02000000]          	cmp rax, sob_boolean_false
  6255 00003958 7426                    	je .L_if_else_0116
  6256                                  	; preparing a non-tail-call
  6257 0000395A 488B4510                	mov rax, ENV
  6258 0000395E 488B00                  	mov rax, qword [rax + 8 * 0]
  6259 00003961 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6260 00003965 50                      	push rax
  6261 00003966 6A01                    	push 1	; arg count
  6262 00003968 488B4520                	mov rax, PARAM(0)	; param loop
  6263 0000396C 488B00                  	mov rax, qword [rax]
  6264 0000396F 803804                  	cmp byte [rax], T_closure
  6265 00003972 0F8580190100            	jne L_error_non_closure
  6266 00003978 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6267 0000397B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6268 0000397E EB0A                    	jmp .L_if_end_0116
  6269                                  .L_if_else_0116:
  6270 00003980 48B8-                   	mov rax, L_constants + 2
  6270 00003982 [0200000000000000] 
  6271                                  .L_if_end_0116:
  6272 0000398A C9                      	leave
  6273 0000398B C21800                  	ret AND_KILL_FRAME(1)
  6274                                  .L_lambda_simple_end_0199:	; new closure is in rax
  6275 0000398E 803804                  	cmp byte [rax], T_closure
  6276 00003991 0F8561190100            	jne L_error_non_closure
  6277 00003997 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6278 0000399A FF7508                  	push qword [rbp + 8]
  6279 0000399D FF7500                  	push qword [rbp]
  6280 000039A0 41BA05000000            	mov r10, 1 + 4
  6281 000039A6 4C8B4518                	mov r8, COUNT
  6282 000039AA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6283 000039AF 4C8D4DF8                	lea r9, [rbp - 8]
  6284                                  .L_tc_recycle_frame_loop_01ee:
  6285 000039B3 4983FA00                	cmp r10, 0
  6286 000039B7 7413                    	je .L_tc_recycle_frame_done_01ee
  6287 000039B9 4D8B19                  	mov r11, qword [r9]
  6288 000039BC 4D8918                  	mov qword [r8], r11
  6289 000039BF 49FFCA                  	dec r10
  6290 000039C2 4983E808                	sub r8, 8
  6291 000039C6 4983E908                	sub r9, 8
  6292 000039CA EBE7                    	jmp .L_tc_recycle_frame_loop_01ee
  6293                                  .L_tc_recycle_frame_done_01ee:
  6294 000039CC 498D6008                	lea rsp, [r8 + 8]
  6295 000039D0 5D                      	pop rbp
  6296 000039D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6297 000039D4 C9                      	leave
  6298 000039D5 C22000                  	ret AND_KILL_FRAME(2)
  6299                                  .L_lambda_opt_end_0036:	; new closure is in rax
  6300 000039D8 48890425[25150000]      	mov qword [free_var_110], rax
  6301 000039E0 48B8-                   	mov rax, sob_void
  6301 000039E2 [0000000000000000] 
  6302                                  
  6303 000039EA 4889C7                  	mov rdi, rax
  6304 000039ED E8041C0100              	call print_sexpr_if_not_void
  6305 000039F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6306 000039F7 E8A5190100              	call malloc
  6307 000039FC 50                      	push rax
  6308 000039FD BF00000000              	mov rdi, 8 * 0	; new rib
  6309 00003A02 E89A190100              	call malloc
  6310 00003A07 50                      	push rax
  6311 00003A08 BF08000000              	mov rdi, 8 * 1	; extended env
  6312 00003A0D E88F190100              	call malloc
  6313 00003A12 488B7D10                	mov rdi, ENV
  6314 00003A16 BE00000000              	mov rsi, 0
  6315 00003A1B BA01000000              	mov rdx, 1
  6316                                  .L_lambda_opt_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  6317 00003A20 4883FE00                	cmp rsi, 0
  6318 00003A24 7410                    	je .L_lambda_opt_env_end_0037
  6319 00003A26 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6320 00003A2A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6321 00003A2E 48FFC6                  	inc rsi
  6322 00003A31 48FFC2                  	inc rdx
  6323 00003A34 EBEA                    	jmp .L_lambda_opt_env_loop_0037
  6324                                  .L_lambda_opt_env_end_0037:
  6325 00003A36 5B                      	pop rbx
  6326 00003A37 BE00000000              	mov rsi, 0
  6327                                  .L_lambda_opt_params_loop_0037:	; copy params
  6328 00003A3C 4883FE00                	cmp rsi, 0
  6329 00003A40 740E                    	je .L_lambda_opt_params_end_0037
  6330 00003A42 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6331 00003A47 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6332 00003A4B 48FFC6                  	inc rsi
  6333 00003A4E EBEC                    	jmp .L_lambda_opt_params_loop_0037
  6334                                  .L_lambda_opt_params_end_0037:
  6335 00003A50 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6336 00003A53 4889C3                  	mov rbx, rax
  6337 00003A56 58                      	pop rax
  6338 00003A57 C60004                  	mov byte [rax], T_closure
  6339 00003A5A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6340 00003A5E 48C74009[6B3A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0037
  6341 00003A66 E9B9040000              	jmp .L_lambda_opt_end_0037
  6342                                  .L_lambda_opt_code_0037:
  6343 00003A6B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  6344 00003A70 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  6345 00003A74 7407                    	je .L_lambda_opt_arity_check_exact_0037	; Jump if arity matches
  6346 00003A76 7F4C                    	jg .L_lambda_opt_arity_check_more_0037	; Jump if more arguments passed
  6347 00003A78 E9F1180100              	jmp L_error_incorrect_arity_opt
  6348                                  .L_lambda_opt_arity_check_exact_0037:
  6349 00003A7D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  6350 00003A80 4983C603                	add r14, 3 ; add 3 first stack values
  6351 00003A84 41BF00000000            	mov r15, 0 ; r15 = index
  6352 00003A8A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  6353 00003A8E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  6354 00003A96 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0037
  6355                                  .L_lambda_opt_stack_shrink_loop_0037:
  6356 00003A98 4983FE00                	cmp r14, 0
  6357 00003A9C 7E11                    	jle .L_make_lambda_opt_exact_finish_0037
  6358 00003A9E 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  6359 00003AA3 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  6360 00003AA7 49FFCE                  	dec r14 ; next loop value
  6361 00003AAA 49FFC7                  	inc r15 ; update i
  6362 00003AAD EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0037
  6363                                  .L_make_lambda_opt_exact_finish_0037:
  6364 00003AAF 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  6365 00003AB7 49FFC2                  	inc r10
  6366 00003ABA 4C89542410              	mov qword [rsp + 8 * 2], r10
  6367 00003ABF E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0037
  6368                                  .L_lambda_opt_arity_check_more_0037:
  6369 00003AC4 4D89D6                  	mov r14, r10 ; r14 = num args
  6370 00003AC7 4D89D7                  	mov r15, r10 ; r15 = num args
  6371 00003ACA 41B901000000            	mov r9, 1; r9 = number of params 
  6372 00003AD0 4D29CE                  	sub r14, r9 ; r14 = extra args
  6373 00003AD3 4D01F1                  	add r9, r14 ; r9 = num args
  6374 00003AD6 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  6374 00003AD8 [0100000000000000] 
  6375 00003AE0 EB00                    	jmp .L_make_lambda_opt_arg_list_0037
  6376                                  .L_make_lambda_opt_arg_list_0037:
  6377 00003AE2 4983FE00                	cmp r14, 0
  6378 00003AE6 7E25                    	jle .L_make_lambda_opt_stack_fixed_0037
  6379 00003AE8 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  6380 00003AED BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  6381 00003AF2 E8AA180100              	call malloc                         ; Allocate memory, result in rax
  6382 00003AF7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  6383 00003AFA 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  6384 00003AFE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  6385 00003B02 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  6386 00003B05 49FFC9                  	dec r9                              ; args index minus 1
  6387 00003B08 49FFCE                  	dec r14                             ; next iteration
  6388 00003B0B EBD5                    	jmp .L_make_lambda_opt_arg_list_0037
  6389                                  .L_make_lambda_opt_stack_fixed_0037:
  6390 00003B0D 4D89FE                  	mov r14, r15 ; r14 = num args
  6391 00003B10 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  6392 00003B13 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  6393 00003B17 4D89C1                  	mov r9, r8
  6394 00003B1A 41BA01000000            	mov r10, 1; r10 = num of params
  6395 00003B20 4D29D6                  	sub r14, r10 ; r14 = extra args
  6396 00003B23 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  6397 00003B26 49FFCE                  	dec r14 ; how much we need to change stack wise?
  6398 00003B29 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  6399 00003B2E 4D89CC                  	mov r12, r9
  6400 00003B31 4D29F4                  	sub r12, r14
  6401 00003B34 49FFCC                  	dec r12
  6402 00003B37 49FFCC                  	dec r12
  6403 00003B3A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0037
  6404                                  .L_lambda_opt_stack_shrink_loop_more_0037:
  6405 00003B3C 4983F800                	cmp r8, 0
  6406 00003B40 7E16                    	jle .L_make_lambda_opt_more_finish_0037
  6407 00003B42 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  6408 00003B46 4D01F4                  	add r12, r14
  6409 00003B49 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  6410 00003B4D 49FFC8                  	dec r8 ; next iteration
  6411 00003B50 4D29F4                  	sub r12, r14 ; next iteration
  6412 00003B53 49FFCC                  	dec r12 ; next iteration
  6413 00003B56 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0037
  6414                                  .L_make_lambda_opt_more_finish_0037:
  6415 00003B58 41BA01000000            	mov r10, 1
  6416 00003B5E 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
  6417 00003B67 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  6418 00003B6B 4C01F4                  	add rsp, r14  ; Add to rsp
  6419 00003B6E EB00                    	jmp .L_lambda_opt_stack_adjusted_0037
  6420                                  .L_lambda_opt_stack_adjusted_0037:
  6421 00003B70 C8000000                	enter 0, 0
  6422                                  	; Initiating tail-call optimization
  6423 00003B74 48B8-                   	mov rax, L_constants + 2007
  6423 00003B76 [D707000000000000] 
  6424 00003B7E 50                      	push rax
  6425 00003B7F 6A01                    	push 1	; Number of arguments
  6426 00003B81 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6427 00003B86 E816180100              	call malloc
  6428 00003B8B 50                      	push rax
  6429 00003B8C BF10000000              	mov rdi, 8 * 2	; new rib
  6430 00003B91 E80B180100              	call malloc
  6431 00003B96 50                      	push rax
  6432 00003B97 BF10000000              	mov rdi, 8 * 2	; extended env
  6433 00003B9C E800180100              	call malloc
  6434 00003BA1 488B7D10                	mov rdi, ENV
  6435 00003BA5 BE00000000              	mov rsi, 0
  6436 00003BAA BA01000000              	mov rdx, 1
  6437                                  .L_lambda_simple_env_loop_019b:	; ext_env[i + 1] <-- env[i]
  6438 00003BAF 4883FE01                	cmp rsi, 1
  6439 00003BB3 7410                    	je .L_lambda_simple_env_end_019b
  6440 00003BB5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6441 00003BB9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6442 00003BBD 48FFC6                  	inc rsi
  6443 00003BC0 48FFC2                  	inc rdx
  6444 00003BC3 EBEA                    	jmp .L_lambda_simple_env_loop_019b
  6445                                  .L_lambda_simple_env_end_019b:
  6446 00003BC5 5B                      	pop rbx
  6447 00003BC6 BE00000000              	mov rsi, 0
  6448                                  .L_lambda_simple_params_loop_019b:	; copy params
  6449 00003BCB 4883FE02                	cmp rsi, 2
  6450 00003BCF 740E                    	je .L_lambda_simple_params_end_019b
  6451 00003BD1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6452 00003BD6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6453 00003BDA 48FFC6                  	inc rsi
  6454 00003BDD EBEC                    	jmp .L_lambda_simple_params_loop_019b
  6455                                  .L_lambda_simple_params_end_019b:
  6456 00003BDF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6457 00003BE2 4889C3                  	mov rbx, rax
  6458 00003BE5 58                      	pop rax
  6459 00003BE6 C60004                  	mov byte [rax], T_closure
  6460 00003BE9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6461 00003BED 48C74009[FA3B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019b
  6462 00003BF5 E9E0020000              	jmp .L_lambda_simple_end_019b
  6463                                  .L_lambda_simple_code_019b:	; lambda-simple body
  6464 00003BFA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6465 00003C00 740B                    	je .L_lambda_simple_arity_check_ok_019b
  6466 00003C02 FF742410                	push qword [rsp + 8 * 2]
  6467 00003C06 6A01                    	push 1
  6468 00003C08 E94D170100              	jmp L_error_incorrect_arity_simple
  6469                                  .L_lambda_simple_arity_check_ok_019b:
  6470 00003C0D C8000000                	enter 0, 0
  6471 00003C11 BF08000000              	mov rdi, 8 * 1
  6472 00003C16 E886170100              	call malloc
  6473 00003C1B 488B5D20                	mov rbx, PARAM(0)
  6474 00003C1F 488918                  	mov qword [rax], rbx
  6475 00003C22 48894520                	mov PARAM(0), rax
  6476 00003C26 48B8-                   	mov rax, sob_void
  6476 00003C28 [0000000000000000] 
  6477                                  
  6478 00003C30 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6479 00003C35 E867170100              	call malloc
  6480 00003C3A 50                      	push rax
  6481 00003C3B BF08000000              	mov rdi, 8 * 1	; new rib
  6482 00003C40 E85C170100              	call malloc
  6483 00003C45 50                      	push rax
  6484 00003C46 BF18000000              	mov rdi, 8 * 3	; extended env
  6485 00003C4B E851170100              	call malloc
  6486 00003C50 488B7D10                	mov rdi, ENV
  6487 00003C54 BE00000000              	mov rsi, 0
  6488 00003C59 BA01000000              	mov rdx, 1
  6489                                  .L_lambda_simple_env_loop_019c:	; ext_env[i + 1] <-- env[i]
  6490 00003C5E 4883FE02                	cmp rsi, 2
  6491 00003C62 7410                    	je .L_lambda_simple_env_end_019c
  6492 00003C64 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6493 00003C68 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6494 00003C6C 48FFC6                  	inc rsi
  6495 00003C6F 48FFC2                  	inc rdx
  6496 00003C72 EBEA                    	jmp .L_lambda_simple_env_loop_019c
  6497                                  .L_lambda_simple_env_end_019c:
  6498 00003C74 5B                      	pop rbx
  6499 00003C75 BE00000000              	mov rsi, 0
  6500                                  .L_lambda_simple_params_loop_019c:	; copy params
  6501 00003C7A 4883FE01                	cmp rsi, 1
  6502 00003C7E 740E                    	je .L_lambda_simple_params_end_019c
  6503 00003C80 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6504 00003C85 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6505 00003C89 48FFC6                  	inc rsi
  6506 00003C8C EBEC                    	jmp .L_lambda_simple_params_loop_019c
  6507                                  .L_lambda_simple_params_end_019c:
  6508 00003C8E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6509 00003C91 4889C3                  	mov rbx, rax
  6510 00003C94 58                      	pop rax
  6511 00003C95 C60004                  	mov byte [rax], T_closure
  6512 00003C98 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6513 00003C9C 48C74009[A93C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019c
  6514 00003CA4 E980010000              	jmp .L_lambda_simple_end_019c
  6515                                  .L_lambda_simple_code_019c:	; lambda-simple body
  6516 00003CA9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6517 00003CAF 740B                    	je .L_lambda_simple_arity_check_ok_019c
  6518 00003CB1 FF742410                	push qword [rsp + 8 * 2]
  6519 00003CB5 6A01                    	push 1
  6520 00003CB7 E99E160100              	jmp L_error_incorrect_arity_simple
  6521                                  .L_lambda_simple_arity_check_ok_019c:
  6522 00003CBC C8000000                	enter 0, 0
  6523                                  	; preparing a non-tail-call
  6524                                  	; preparing a non-tail-call
  6525 00003CC0 488B4520                	mov rax, PARAM(0)	; param s
  6526 00003CC4 50                      	push rax
  6527 00003CC5 6A01                    	push 1	; arg count
  6528 00003CC7 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6529 00003CCF 803805                  	cmp byte [rax], T_undefined
  6530 00003CD2 0F849C150100            	je L_error_fvar_undefined
  6531 00003CD8 803804                  	cmp byte [rax], T_closure
  6532 00003CDB 0F8517160100            	jne L_error_non_closure
  6533 00003CE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6534 00003CE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6535 00003CE7 50                      	push rax
  6536 00003CE8 6A01                    	push 1	; arg count
  6537 00003CEA 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  6538 00003CF2 803805                  	cmp byte [rax], T_undefined
  6539 00003CF5 0F8479150100            	je L_error_fvar_undefined
  6540 00003CFB 803804                  	cmp byte [rax], T_closure
  6541 00003CFE 0F85F4150100            	jne L_error_non_closure
  6542 00003D04 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6543 00003D07 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6544 00003D0A 483D[02000000]          	cmp rax, sob_boolean_false
  6545 00003D10 0F850F010000            	jne .L_or_end_0020
  6546                                  
  6547                                  	; preparing a non-tail-call
  6548                                  	; preparing a non-tail-call
  6549 00003D16 488B4520                	mov rax, PARAM(0)	; param s
  6550 00003D1A 50                      	push rax
  6551 00003D1B 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6552 00003D23 803805                  	cmp byte [rax], T_undefined
  6553 00003D26 0F8448150100            	je L_error_fvar_undefined
  6554 00003D2C 50                      	push rax
  6555 00003D2D 6A02                    	push 2	; arg count
  6556 00003D2F 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  6557 00003D37 803805                  	cmp byte [rax], T_undefined
  6558 00003D3A 0F8434150100            	je L_error_fvar_undefined
  6559 00003D40 803804                  	cmp byte [rax], T_closure
  6560 00003D43 0F85AF150100            	jne L_error_non_closure
  6561 00003D49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6562 00003D4C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6563 00003D4F 50                      	push rax
  6564 00003D50 488B4510                	mov rax, ENV
  6565 00003D54 488B4008                	mov rax, qword [rax + 8 * 1]
  6566 00003D58 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6567 00003D5B 50                      	push rax
  6568 00003D5C 6A02                    	push 2	; arg count
  6569 00003D5E 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
  6570 00003D66 803805                  	cmp byte [rax], T_undefined
  6571 00003D69 0F8405150100            	je L_error_fvar_undefined
  6572 00003D6F 803804                  	cmp byte [rax], T_closure
  6573 00003D72 0F8580150100            	jne L_error_non_closure
  6574 00003D78 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6575 00003D7B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6576 00003D7E 483D[02000000]          	cmp rax, sob_boolean_false
  6577 00003D84 0F8491000000            	je .L_if_else_0117
  6578                                  	; Initiating tail-call optimization
  6579                                  	; preparing a non-tail-call
  6580 00003D8A 488B4520                	mov rax, PARAM(0)	; param s
  6581 00003D8E 50                      	push rax
  6582 00003D8F 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  6583 00003D97 803805                  	cmp byte [rax], T_undefined
  6584 00003D9A 0F84D4140100            	je L_error_fvar_undefined
  6585 00003DA0 50                      	push rax
  6586 00003DA1 6A02                    	push 2	; arg count
  6587 00003DA3 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  6588 00003DAB 803805                  	cmp byte [rax], T_undefined
  6589 00003DAE 0F84C0140100            	je L_error_fvar_undefined
  6590 00003DB4 803804                  	cmp byte [rax], T_closure
  6591 00003DB7 0F853B150100            	jne L_error_non_closure
  6592 00003DBD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6593 00003DC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6594 00003DC3 50                      	push rax
  6595 00003DC4 6A01                    	push 1	; Number of arguments
  6596 00003DC6 488B4510                	mov rax, ENV
  6597 00003DCA 488B00                  	mov rax, qword [rax + 8 * 0]
  6598 00003DCD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6599 00003DD0 488B00                  	mov rax, qword [rax]
  6600 00003DD3 803804                  	cmp byte [rax], T_closure
  6601 00003DD6 0F851C150100            	jne L_error_non_closure
  6602 00003DDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6603 00003DDF FF7508                  	push qword [rbp + 8]
  6604 00003DE2 FF7500                  	push qword [rbp]
  6605 00003DE5 41BA05000000            	mov r10, 1 + 4
  6606 00003DEB 4C8B4518                	mov r8, COUNT
  6607 00003DEF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6608 00003DF4 4C8D4DF8                	lea r9, [rbp - 8]
  6609                                  .L_tc_recycle_frame_loop_01ef:
  6610 00003DF8 4983FA00                	cmp r10, 0
  6611 00003DFC 7413                    	je .L_tc_recycle_frame_done_01ef
  6612 00003DFE 4D8B19                  	mov r11, qword [r9]
  6613 00003E01 4D8918                  	mov qword [r8], r11
  6614 00003E04 49FFCA                  	dec r10
  6615 00003E07 4983E808                	sub r8, 8
  6616 00003E0B 4983E908                	sub r9, 8
  6617 00003E0F EBE7                    	jmp .L_tc_recycle_frame_loop_01ef
  6618                                  .L_tc_recycle_frame_done_01ef:
  6619 00003E11 498D6008                	lea rsp, [r8 + 8]
  6620 00003E15 5D                      	pop rbp
  6621 00003E16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6622 00003E19 EB0A                    	jmp .L_if_end_0117
  6623                                  .L_if_else_0117:
  6624 00003E1B 48B8-                   	mov rax, L_constants + 2
  6624 00003E1D [0200000000000000] 
  6625                                  .L_if_end_0117:
  6626                                  .L_or_end_0020:
  6627 00003E25 C9                      	leave
  6628 00003E26 C21800                  	ret AND_KILL_FRAME(1)
  6629                                  .L_lambda_simple_end_019c:	; new closure is in rax
  6630 00003E29 50                      	push rax
  6631 00003E2A 488B4520                	mov rax, PARAM(0)	; param loop
  6632 00003E2E 8F00                    	pop qword [rax]
  6633 00003E30 48B8-                   	mov rax, sob_void
  6633 00003E32 [0000000000000000] 
  6634                                  
  6635                                  	; preparing a non-tail-call
  6636 00003E3A 488B4510                	mov rax, ENV
  6637 00003E3E 488B00                  	mov rax, qword [rax + 8 * 0]
  6638 00003E41 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6639 00003E45 50                      	push rax
  6640 00003E46 6A01                    	push 1	; arg count
  6641 00003E48 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  6642 00003E50 803805                  	cmp byte [rax], T_undefined
  6643 00003E53 0F841B140100            	je L_error_fvar_undefined
  6644 00003E59 803804                  	cmp byte [rax], T_closure
  6645 00003E5C 0F8596140100            	jne L_error_non_closure
  6646 00003E62 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6647 00003E65 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6648 00003E68 483D[02000000]          	cmp rax, sob_boolean_false
  6649 00003E6E 7566                    	jne .L_or_end_0021
  6650                                  
  6651                                  	; preparing a non-tail-call
  6652 00003E70 488B4510                	mov rax, ENV
  6653 00003E74 488B00                  	mov rax, qword [rax + 8 * 0]
  6654 00003E77 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6655 00003E7B 50                      	push rax
  6656 00003E7C 6A01                    	push 1	; arg count
  6657 00003E7E 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
  6658 00003E86 803805                  	cmp byte [rax], T_undefined
  6659 00003E89 0F84E5130100            	je L_error_fvar_undefined
  6660 00003E8F 803804                  	cmp byte [rax], T_closure
  6661 00003E92 0F8560140100            	jne L_error_non_closure
  6662 00003E98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6663 00003E9B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6664 00003E9E 483D[02000000]          	cmp rax, sob_boolean_false
  6665 00003EA4 7426                    	je .L_if_else_0118
  6666                                  	; preparing a non-tail-call
  6667 00003EA6 488B4510                	mov rax, ENV
  6668 00003EAA 488B00                  	mov rax, qword [rax + 8 * 0]
  6669 00003EAD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6670 00003EB1 50                      	push rax
  6671 00003EB2 6A01                    	push 1	; arg count
  6672 00003EB4 488B4520                	mov rax, PARAM(0)	; param loop
  6673 00003EB8 488B00                  	mov rax, qword [rax]
  6674 00003EBB 803804                  	cmp byte [rax], T_closure
  6675 00003EBE 0F8534140100            	jne L_error_non_closure
  6676 00003EC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6677 00003EC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6678 00003ECA EB0A                    	jmp .L_if_end_0118
  6679                                  .L_if_else_0118:
  6680 00003ECC 48B8-                   	mov rax, L_constants + 2
  6680 00003ECE [0200000000000000] 
  6681                                  .L_if_end_0118:
  6682                                  .L_or_end_0021:
  6683 00003ED6 C9                      	leave
  6684 00003ED7 C21800                  	ret AND_KILL_FRAME(1)
  6685                                  .L_lambda_simple_end_019b:	; new closure is in rax
  6686 00003EDA 803804                  	cmp byte [rax], T_closure
  6687 00003EDD 0F8515140100            	jne L_error_non_closure
  6688 00003EE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6689 00003EE6 FF7508                  	push qword [rbp + 8]
  6690 00003EE9 FF7500                  	push qword [rbp]
  6691 00003EEC 41BA05000000            	mov r10, 1 + 4
  6692 00003EF2 4C8B4518                	mov r8, COUNT
  6693 00003EF6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6694 00003EFB 4C8D4DF8                	lea r9, [rbp - 8]
  6695                                  .L_tc_recycle_frame_loop_01f0:
  6696 00003EFF 4983FA00                	cmp r10, 0
  6697 00003F03 7413                    	je .L_tc_recycle_frame_done_01f0
  6698 00003F05 4D8B19                  	mov r11, qword [r9]
  6699 00003F08 4D8918                  	mov qword [r8], r11
  6700 00003F0B 49FFCA                  	dec r10
  6701 00003F0E 4983E808                	sub r8, 8
  6702 00003F12 4983E908                	sub r9, 8
  6703 00003F16 EBE7                    	jmp .L_tc_recycle_frame_loop_01f0
  6704                                  .L_tc_recycle_frame_done_01f0:
  6705 00003F18 498D6008                	lea rsp, [r8 + 8]
  6706 00003F1C 5D                      	pop rbp
  6707 00003F1D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6708 00003F20 C9                      	leave
  6709 00003F21 C22000                  	ret AND_KILL_FRAME(2)
  6710                                  .L_lambda_opt_end_0037:	; new closure is in rax
  6711 00003F24 48890425[E60F0000]      	mov qword [free_var_31], rax
  6712 00003F2C 48B8-                   	mov rax, sob_void
  6712 00003F2E [0000000000000000] 
  6713                                  
  6714 00003F36 4889C7                  	mov rdi, rax
  6715 00003F39 E8B8160100              	call print_sexpr_if_not_void
  6716                                  	; preparing a non-tail-call
  6717 00003F3E 48B8-                   	mov rax, L_constants + 2007
  6717 00003F40 [D707000000000000] 
  6718 00003F48 50                      	push rax
  6719 00003F49 48B8-                   	mov rax, L_constants + 2007
  6719 00003F4B [D707000000000000] 
  6720 00003F53 50                      	push rax
  6721 00003F54 6A02                    	push 2	; arg count
  6722 00003F56 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6723 00003F5B E841140100              	call malloc
  6724 00003F60 50                      	push rax
  6725 00003F61 BF00000000              	mov rdi, 8 * 0	; new rib
  6726 00003F66 E836140100              	call malloc
  6727 00003F6B 50                      	push rax
  6728 00003F6C BF08000000              	mov rdi, 8 * 1	; extended env
  6729 00003F71 E82B140100              	call malloc
  6730 00003F76 488B7D10                	mov rdi, ENV
  6731 00003F7A BE00000000              	mov rsi, 0
  6732 00003F7F BA01000000              	mov rdx, 1
  6733                                  .L_lambda_simple_env_loop_019d:	; ext_env[i + 1] <-- env[i]
  6734 00003F84 4883FE00                	cmp rsi, 0
  6735 00003F88 7410                    	je .L_lambda_simple_env_end_019d
  6736 00003F8A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6737 00003F8E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6738 00003F92 48FFC6                  	inc rsi
  6739 00003F95 48FFC2                  	inc rdx
  6740 00003F98 EBEA                    	jmp .L_lambda_simple_env_loop_019d
  6741                                  .L_lambda_simple_env_end_019d:
  6742 00003F9A 5B                      	pop rbx
  6743 00003F9B BE00000000              	mov rsi, 0
  6744                                  .L_lambda_simple_params_loop_019d:	; copy params
  6745 00003FA0 4883FE00                	cmp rsi, 0
  6746 00003FA4 740E                    	je .L_lambda_simple_params_end_019d
  6747 00003FA6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6748 00003FAB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6749 00003FAF 48FFC6                  	inc rsi
  6750 00003FB2 EBEC                    	jmp .L_lambda_simple_params_loop_019d
  6751                                  .L_lambda_simple_params_end_019d:
  6752 00003FB4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6753 00003FB7 4889C3                  	mov rbx, rax
  6754 00003FBA 58                      	pop rax
  6755 00003FBB C60004                  	mov byte [rax], T_closure
  6756 00003FBE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6757 00003FC2 48C74009[CF3F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019d
  6758 00003FCA E958060000              	jmp .L_lambda_simple_end_019d
  6759                                  .L_lambda_simple_code_019d:	; lambda-simple body
  6760 00003FCF 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6761 00003FD5 740B                    	je .L_lambda_simple_arity_check_ok_019d
  6762 00003FD7 FF742410                	push qword [rsp + 8 * 2]
  6763 00003FDB 6A02                    	push 2
  6764 00003FDD E978130100              	jmp L_error_incorrect_arity_simple
  6765                                  .L_lambda_simple_arity_check_ok_019d:
  6766 00003FE2 C8000000                	enter 0, 0
  6767 00003FE6 BF08000000              	mov rdi, 8 * 1
  6768 00003FEB E8B1130100              	call malloc
  6769 00003FF0 488B5D20                	mov rbx, PARAM(0)
  6770 00003FF4 488918                  	mov qword [rax], rbx
  6771 00003FF7 48894520                	mov PARAM(0), rax
  6772 00003FFB 48B8-                   	mov rax, sob_void
  6772 00003FFD [0000000000000000] 
  6773                                  
  6774 00004005 BF08000000              	mov rdi, 8 * 1
  6775 0000400A E892130100              	call malloc
  6776 0000400F 488B5D28                	mov rbx, PARAM(1)
  6777 00004013 488918                  	mov qword [rax], rbx
  6778 00004016 48894528                	mov PARAM(1), rax
  6779 0000401A 48B8-                   	mov rax, sob_void
  6779 0000401C [0000000000000000] 
  6780                                  
  6781 00004024 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6782 00004029 E873130100              	call malloc
  6783 0000402E 50                      	push rax
  6784 0000402F BF10000000              	mov rdi, 8 * 2	; new rib
  6785 00004034 E868130100              	call malloc
  6786 00004039 50                      	push rax
  6787 0000403A BF10000000              	mov rdi, 8 * 2	; extended env
  6788 0000403F E85D130100              	call malloc
  6789 00004044 488B7D10                	mov rdi, ENV
  6790 00004048 BE00000000              	mov rsi, 0
  6791 0000404D BA01000000              	mov rdx, 1
  6792                                  .L_lambda_simple_env_loop_019e:	; ext_env[i + 1] <-- env[i]
  6793 00004052 4883FE01                	cmp rsi, 1
  6794 00004056 7410                    	je .L_lambda_simple_env_end_019e
  6795 00004058 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6796 0000405C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6797 00004060 48FFC6                  	inc rsi
  6798 00004063 48FFC2                  	inc rdx
  6799 00004066 EBEA                    	jmp .L_lambda_simple_env_loop_019e
  6800                                  .L_lambda_simple_env_end_019e:
  6801 00004068 5B                      	pop rbx
  6802 00004069 BE00000000              	mov rsi, 0
  6803                                  .L_lambda_simple_params_loop_019e:	; copy params
  6804 0000406E 4883FE02                	cmp rsi, 2
  6805 00004072 740E                    	je .L_lambda_simple_params_end_019e
  6806 00004074 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6807 00004079 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6808 0000407D 48FFC6                  	inc rsi
  6809 00004080 EBEC                    	jmp .L_lambda_simple_params_loop_019e
  6810                                  .L_lambda_simple_params_end_019e:
  6811 00004082 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6812 00004085 4889C3                  	mov rbx, rax
  6813 00004088 58                      	pop rax
  6814 00004089 C60004                  	mov byte [rax], T_closure
  6815 0000408C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6816 00004090 48C74009[9D400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019e
  6817 00004098 E93C010000              	jmp .L_lambda_simple_end_019e
  6818                                  .L_lambda_simple_code_019e:	; lambda-simple body
  6819 0000409D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6820 000040A3 740B                    	je .L_lambda_simple_arity_check_ok_019e
  6821 000040A5 FF742410                	push qword [rsp + 8 * 2]
  6822 000040A9 6A02                    	push 2
  6823 000040AB E9AA120100              	jmp L_error_incorrect_arity_simple
  6824                                  .L_lambda_simple_arity_check_ok_019e:
  6825 000040B0 C8000000                	enter 0, 0
  6826                                  	; preparing a non-tail-call
  6827 000040B4 488B4528                	mov rax, PARAM(1)	; param s
  6828 000040B8 50                      	push rax
  6829 000040B9 6A01                    	push 1	; arg count
  6830 000040BB 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  6831 000040C3 803805                  	cmp byte [rax], T_undefined
  6832 000040C6 0F84A8110100            	je L_error_fvar_undefined
  6833 000040CC 803804                  	cmp byte [rax], T_closure
  6834 000040CF 0F8523120100            	jne L_error_non_closure
  6835 000040D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6836 000040D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6837 000040DB 483D[02000000]          	cmp rax, sob_boolean_false
  6838 000040E1 740F                    	je .L_if_else_0119
  6839 000040E3 48B8-                   	mov rax, L_constants + 1
  6839 000040E5 [0100000000000000] 
  6840 000040ED E9E3000000              	jmp .L_if_end_0119
  6841                                  .L_if_else_0119:
  6842                                  	; Initiating tail-call optimization
  6843                                  	; preparing a non-tail-call
  6844                                  	; preparing a non-tail-call
  6845 000040F2 488B4528                	mov rax, PARAM(1)	; param s
  6846 000040F6 50                      	push rax
  6847 000040F7 6A01                    	push 1	; arg count
  6848 000040F9 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  6849 00004101 803805                  	cmp byte [rax], T_undefined
  6850 00004104 0F846A110100            	je L_error_fvar_undefined
  6851 0000410A 803804                  	cmp byte [rax], T_closure
  6852 0000410D 0F85E5110100            	jne L_error_non_closure
  6853 00004113 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6854 00004116 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6855 00004119 50                      	push rax
  6856 0000411A 488B4520                	mov rax, PARAM(0)	; param f
  6857 0000411E 50                      	push rax
  6858 0000411F 6A02                    	push 2	; arg count
  6859 00004121 488B4510                	mov rax, ENV
  6860 00004125 488B00                  	mov rax, qword [rax + 8 * 0]
  6861 00004128 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6862 0000412B 488B00                  	mov rax, qword [rax]
  6863 0000412E 803804                  	cmp byte [rax], T_closure
  6864 00004131 0F85C1110100            	jne L_error_non_closure
  6865 00004137 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6866 0000413A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6867 0000413D 50                      	push rax
  6868                                  	; preparing a non-tail-call
  6869                                  	; preparing a non-tail-call
  6870 0000413E 488B4528                	mov rax, PARAM(1)	; param s
  6871 00004142 50                      	push rax
  6872 00004143 6A01                    	push 1	; arg count
  6873 00004145 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6874 0000414D 803805                  	cmp byte [rax], T_undefined
  6875 00004150 0F841E110100            	je L_error_fvar_undefined
  6876 00004156 803804                  	cmp byte [rax], T_closure
  6877 00004159 0F8599110100            	jne L_error_non_closure
  6878 0000415F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6879 00004162 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6880 00004165 50                      	push rax
  6881 00004166 6A01                    	push 1	; arg count
  6882 00004168 488B4520                	mov rax, PARAM(0)	; param f
  6883 0000416C 803804                  	cmp byte [rax], T_closure
  6884 0000416F 0F8583110100            	jne L_error_non_closure
  6885 00004175 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6886 00004178 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6887 0000417B 50                      	push rax
  6888 0000417C 6A02                    	push 2	; Number of arguments
  6889 0000417E 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  6890 00004186 803805                  	cmp byte [rax], T_undefined
  6891 00004189 0F84E5100100            	je L_error_fvar_undefined
  6892 0000418F 803804                  	cmp byte [rax], T_closure
  6893 00004192 0F8560110100            	jne L_error_non_closure
  6894 00004198 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6895 0000419B FF7508                  	push qword [rbp + 8]
  6896 0000419E FF7500                  	push qword [rbp]
  6897 000041A1 41BA06000000            	mov r10, 2 + 4
  6898 000041A7 4C8B4518                	mov r8, COUNT
  6899 000041AB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  6900 000041B0 4C8D4DF8                	lea r9, [rbp - 8]
  6901                                  .L_tc_recycle_frame_loop_01f1:
  6902 000041B4 4983FA00                	cmp r10, 0
  6903 000041B8 7413                    	je .L_tc_recycle_frame_done_01f1
  6904 000041BA 4D8B19                  	mov r11, qword [r9]
  6905 000041BD 4D8918                  	mov qword [r8], r11
  6906 000041C0 49FFCA                  	dec r10
  6907 000041C3 4983E808                	sub r8, 8
  6908 000041C7 4983E908                	sub r9, 8
  6909 000041CB EBE7                    	jmp .L_tc_recycle_frame_loop_01f1
  6910                                  .L_tc_recycle_frame_done_01f1:
  6911 000041CD 498D6008                	lea rsp, [r8 + 8]
  6912 000041D1 5D                      	pop rbp
  6913 000041D2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6914                                  .L_if_end_0119:
  6915 000041D5 C9                      	leave
  6916 000041D6 C22000                  	ret AND_KILL_FRAME(2)
  6917                                  .L_lambda_simple_end_019e:	; new closure is in rax
  6918 000041D9 50                      	push rax
  6919 000041DA 488B4520                	mov rax, PARAM(0)	; param map1
  6920 000041DE 8F00                    	pop qword [rax]
  6921 000041E0 48B8-                   	mov rax, sob_void
  6921 000041E2 [0000000000000000] 
  6922                                  
  6923 000041EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6924 000041EF E8AD110100              	call malloc
  6925 000041F4 50                      	push rax
  6926 000041F5 BF10000000              	mov rdi, 8 * 2	; new rib
  6927 000041FA E8A2110100              	call malloc
  6928 000041FF 50                      	push rax
  6929 00004200 BF10000000              	mov rdi, 8 * 2	; extended env
  6930 00004205 E897110100              	call malloc
  6931 0000420A 488B7D10                	mov rdi, ENV
  6932 0000420E BE00000000              	mov rsi, 0
  6933 00004213 BA01000000              	mov rdx, 1
  6934                                  .L_lambda_simple_env_loop_019f:	; ext_env[i + 1] <-- env[i]
  6935 00004218 4883FE01                	cmp rsi, 1
  6936 0000421C 7410                    	je .L_lambda_simple_env_end_019f
  6937 0000421E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6938 00004222 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6939 00004226 48FFC6                  	inc rsi
  6940 00004229 48FFC2                  	inc rdx
  6941 0000422C EBEA                    	jmp .L_lambda_simple_env_loop_019f
  6942                                  .L_lambda_simple_env_end_019f:
  6943 0000422E 5B                      	pop rbx
  6944 0000422F BE00000000              	mov rsi, 0
  6945                                  .L_lambda_simple_params_loop_019f:	; copy params
  6946 00004234 4883FE02                	cmp rsi, 2
  6947 00004238 740E                    	je .L_lambda_simple_params_end_019f
  6948 0000423A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6949 0000423F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6950 00004243 48FFC6                  	inc rsi
  6951 00004246 EBEC                    	jmp .L_lambda_simple_params_loop_019f
  6952                                  .L_lambda_simple_params_end_019f:
  6953 00004248 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6954 0000424B 4889C3                  	mov rbx, rax
  6955 0000424E 58                      	pop rax
  6956 0000424F C60004                  	mov byte [rax], T_closure
  6957 00004252 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6958 00004256 48C74009[63420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_019f
  6959 0000425E E98E010000              	jmp .L_lambda_simple_end_019f
  6960                                  .L_lambda_simple_code_019f:	; lambda-simple body
  6961 00004263 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6962 00004269 740B                    	je .L_lambda_simple_arity_check_ok_019f
  6963 0000426B FF742410                	push qword [rsp + 8 * 2]
  6964 0000426F 6A02                    	push 2
  6965 00004271 E9E4100100              	jmp L_error_incorrect_arity_simple
  6966                                  .L_lambda_simple_arity_check_ok_019f:
  6967 00004276 C8000000                	enter 0, 0
  6968                                  	; preparing a non-tail-call
  6969                                  	; preparing a non-tail-call
  6970 0000427A 488B4528                	mov rax, PARAM(1)	; param s
  6971 0000427E 50                      	push rax
  6972 0000427F 6A01                    	push 1	; arg count
  6973 00004281 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  6974 00004289 803805                  	cmp byte [rax], T_undefined
  6975 0000428C 0F84E20F0100            	je L_error_fvar_undefined
  6976 00004292 803804                  	cmp byte [rax], T_closure
  6977 00004295 0F855D100100            	jne L_error_non_closure
  6978 0000429B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6979 0000429E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6980 000042A1 50                      	push rax
  6981 000042A2 6A01                    	push 1	; arg count
  6982 000042A4 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  6983 000042AC 803805                  	cmp byte [rax], T_undefined
  6984 000042AF 0F84BF0F0100            	je L_error_fvar_undefined
  6985 000042B5 803804                  	cmp byte [rax], T_closure
  6986 000042B8 0F853A100100            	jne L_error_non_closure
  6987 000042BE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6988 000042C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6989 000042C4 483D[02000000]          	cmp rax, sob_boolean_false
  6990 000042CA 740F                    	je .L_if_else_011a
  6991 000042CC 48B8-                   	mov rax, L_constants + 1
  6991 000042CE [0100000000000000] 
  6992 000042D6 E912010000              	jmp .L_if_end_011a
  6993                                  .L_if_else_011a:
  6994                                  	; Initiating tail-call optimization
  6995                                  	; preparing a non-tail-call
  6996                                  	; preparing a non-tail-call
  6997 000042DB 488B4528                	mov rax, PARAM(1)	; param s
  6998 000042DF 50                      	push rax
  6999 000042E0 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  7000 000042E8 803805                  	cmp byte [rax], T_undefined
  7001 000042EB 0F84830F0100            	je L_error_fvar_undefined
  7002 000042F1 50                      	push rax
  7003 000042F2 6A02                    	push 2	; arg count
  7004 000042F4 488B4510                	mov rax, ENV
  7005 000042F8 488B00                  	mov rax, qword [rax + 8 * 0]
  7006 000042FB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7007 000042FE 488B00                  	mov rax, qword [rax]
  7008 00004301 803804                  	cmp byte [rax], T_closure
  7009 00004304 0F85EE0F0100            	jne L_error_non_closure
  7010 0000430A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7011 0000430D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7012 00004310 50                      	push rax
  7013 00004311 488B4520                	mov rax, PARAM(0)	; param f
  7014 00004315 50                      	push rax
  7015 00004316 6A02                    	push 2	; arg count
  7016 00004318 488B4510                	mov rax, ENV
  7017 0000431C 488B00                  	mov rax, qword [rax + 8 * 0]
  7018 0000431F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7019 00004323 488B00                  	mov rax, qword [rax]
  7020 00004326 803804                  	cmp byte [rax], T_closure
  7021 00004329 0F85C90F0100            	jne L_error_non_closure
  7022 0000432F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7023 00004332 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7024 00004335 50                      	push rax
  7025                                  	; preparing a non-tail-call
  7026                                  	; preparing a non-tail-call
  7027 00004336 488B4528                	mov rax, PARAM(1)	; param s
  7028 0000433A 50                      	push rax
  7029 0000433B 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  7030 00004343 803805                  	cmp byte [rax], T_undefined
  7031 00004346 0F84280F0100            	je L_error_fvar_undefined
  7032 0000434C 50                      	push rax
  7033 0000434D 6A02                    	push 2	; arg count
  7034 0000434F 488B4510                	mov rax, ENV
  7035 00004353 488B00                  	mov rax, qword [rax + 8 * 0]
  7036 00004356 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7037 00004359 488B00                  	mov rax, qword [rax]
  7038 0000435C 803804                  	cmp byte [rax], T_closure
  7039 0000435F 0F85930F0100            	jne L_error_non_closure
  7040 00004365 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7041 00004368 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7042 0000436B 50                      	push rax
  7043 0000436C 488B4520                	mov rax, PARAM(0)	; param f
  7044 00004370 50                      	push rax
  7045 00004371 6A02                    	push 2	; arg count
  7046 00004373 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
  7047 0000437B 803805                  	cmp byte [rax], T_undefined
  7048 0000437E 0F84F00E0100            	je L_error_fvar_undefined
  7049 00004384 803804                  	cmp byte [rax], T_closure
  7050 00004387 0F856B0F0100            	jne L_error_non_closure
  7051 0000438D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7052 00004390 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7053 00004393 50                      	push rax
  7054 00004394 6A02                    	push 2	; Number of arguments
  7055 00004396 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  7056 0000439E 803805                  	cmp byte [rax], T_undefined
  7057 000043A1 0F84CD0E0100            	je L_error_fvar_undefined
  7058 000043A7 803804                  	cmp byte [rax], T_closure
  7059 000043AA 0F85480F0100            	jne L_error_non_closure
  7060 000043B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7061 000043B3 FF7508                  	push qword [rbp + 8]
  7062 000043B6 FF7500                  	push qword [rbp]
  7063 000043B9 41BA06000000            	mov r10, 2 + 4
  7064 000043BF 4C8B4518                	mov r8, COUNT
  7065 000043C3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7066 000043C8 4C8D4DF8                	lea r9, [rbp - 8]
  7067                                  .L_tc_recycle_frame_loop_01f2:
  7068 000043CC 4983FA00                	cmp r10, 0
  7069 000043D0 7413                    	je .L_tc_recycle_frame_done_01f2
  7070 000043D2 4D8B19                  	mov r11, qword [r9]
  7071 000043D5 4D8918                  	mov qword [r8], r11
  7072 000043D8 49FFCA                  	dec r10
  7073 000043DB 4983E808                	sub r8, 8
  7074 000043DF 4983E908                	sub r9, 8
  7075 000043E3 EBE7                    	jmp .L_tc_recycle_frame_loop_01f2
  7076                                  .L_tc_recycle_frame_done_01f2:
  7077 000043E5 498D6008                	lea rsp, [r8 + 8]
  7078 000043E9 5D                      	pop rbp
  7079 000043EA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7080                                  .L_if_end_011a:
  7081 000043ED C9                      	leave
  7082 000043EE C22000                  	ret AND_KILL_FRAME(2)
  7083                                  .L_lambda_simple_end_019f:	; new closure is in rax
  7084 000043F1 50                      	push rax
  7085 000043F2 488B4528                	mov rax, PARAM(1)	; param map-list
  7086 000043F6 8F00                    	pop qword [rax]
  7087 000043F8 48B8-                   	mov rax, sob_void
  7087 000043FA [0000000000000000] 
  7088                                  
  7089 00004402 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7090 00004407 E8950F0100              	call malloc
  7091 0000440C 50                      	push rax
  7092 0000440D BF10000000              	mov rdi, 8 * 2	; new rib
  7093 00004412 E88A0F0100              	call malloc
  7094 00004417 50                      	push rax
  7095 00004418 BF10000000              	mov rdi, 8 * 2	; extended env
  7096 0000441D E87F0F0100              	call malloc
  7097 00004422 488B7D10                	mov rdi, ENV
  7098 00004426 BE00000000              	mov rsi, 0
  7099 0000442B BA01000000              	mov rdx, 1
  7100                                  .L_lambda_opt_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  7101 00004430 4883FE01                	cmp rsi, 1
  7102 00004434 7410                    	je .L_lambda_opt_env_end_0038
  7103 00004436 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7104 0000443A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7105 0000443E 48FFC6                  	inc rsi
  7106 00004441 48FFC2                  	inc rdx
  7107 00004444 EBEA                    	jmp .L_lambda_opt_env_loop_0038
  7108                                  .L_lambda_opt_env_end_0038:
  7109 00004446 5B                      	pop rbx
  7110 00004447 BE00000000              	mov rsi, 0
  7111                                  .L_lambda_opt_params_loop_0038:	; copy params
  7112 0000444C 4883FE02                	cmp rsi, 2
  7113 00004450 740E                    	je .L_lambda_opt_params_end_0038
  7114 00004452 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7115 00004457 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7116 0000445B 48FFC6                  	inc rsi
  7117 0000445E EBEC                    	jmp .L_lambda_opt_params_loop_0038
  7118                                  .L_lambda_opt_params_end_0038:
  7119 00004460 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7120 00004463 4889C3                  	mov rbx, rax
  7121 00004466 58                      	pop rax
  7122 00004467 C60004                  	mov byte [rax], T_closure
  7123 0000446A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7124 0000446E 48C74009[7B440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0038
  7125 00004476 E9A8010000              	jmp .L_lambda_opt_end_0038
  7126                                  .L_lambda_opt_code_0038:
  7127 0000447B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  7128 00004480 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
  7129 00004484 7407                    	je .L_lambda_opt_arity_check_exact_0038	; Jump if arity matches
  7130 00004486 7F4C                    	jg .L_lambda_opt_arity_check_more_0038	; Jump if more arguments passed
  7131 00004488 E9E10E0100              	jmp L_error_incorrect_arity_opt
  7132                                  .L_lambda_opt_arity_check_exact_0038:
  7133 0000448D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  7134 00004490 4983C603                	add r14, 3 ; add 3 first stack values
  7135 00004494 41BF00000000            	mov r15, 0 ; r15 = index
  7136 0000449A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  7137 0000449E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  7138 000044A6 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0038
  7139                                  .L_lambda_opt_stack_shrink_loop_0038:
  7140 000044A8 4983FE00                	cmp r14, 0
  7141 000044AC 7E11                    	jle .L_make_lambda_opt_exact_finish_0038
  7142 000044AE 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  7143 000044B3 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  7144 000044B7 49FFCE                  	dec r14 ; next loop value
  7145 000044BA 49FFC7                  	inc r15 ; update i
  7146 000044BD EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0038
  7147                                  .L_make_lambda_opt_exact_finish_0038:
  7148 000044BF 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  7149 000044C7 49FFC2                  	inc r10
  7150 000044CA 4C89542410              	mov qword [rsp + 8 * 2], r10
  7151 000044CF E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0038
  7152                                  .L_lambda_opt_arity_check_more_0038:
  7153 000044D4 4D89D6                  	mov r14, r10 ; r14 = num args
  7154 000044D7 4D89D7                  	mov r15, r10 ; r15 = num args
  7155 000044DA 41B901000000            	mov r9, 1; r9 = number of params 
  7156 000044E0 4D29CE                  	sub r14, r9 ; r14 = extra args
  7157 000044E3 4D01F1                  	add r9, r14 ; r9 = num args
  7158 000044E6 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  7158 000044E8 [0100000000000000] 
  7159 000044F0 EB00                    	jmp .L_make_lambda_opt_arg_list_0038
  7160                                  .L_make_lambda_opt_arg_list_0038:
  7161 000044F2 4983FE00                	cmp r14, 0
  7162 000044F6 7E25                    	jle .L_make_lambda_opt_stack_fixed_0038
  7163 000044F8 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  7164 000044FD BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  7165 00004502 E89A0E0100              	call malloc                         ; Allocate memory, result in rax
  7166 00004507 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  7167 0000450A 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  7168 0000450E 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  7169 00004512 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  7170 00004515 49FFC9                  	dec r9                              ; args index minus 1
  7171 00004518 49FFCE                  	dec r14                             ; next iteration
  7172 0000451B EBD5                    	jmp .L_make_lambda_opt_arg_list_0038
  7173                                  .L_make_lambda_opt_stack_fixed_0038:
  7174 0000451D 4D89FE                  	mov r14, r15 ; r14 = num args
  7175 00004520 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  7176 00004523 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  7177 00004527 4D89C1                  	mov r9, r8
  7178 0000452A 41BA01000000            	mov r10, 1; r10 = num of params
  7179 00004530 4D29D6                  	sub r14, r10 ; r14 = extra args
  7180 00004533 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  7181 00004536 49FFCE                  	dec r14 ; how much we need to change stack wise?
  7182 00004539 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  7183 0000453E 4D89CC                  	mov r12, r9
  7184 00004541 4D29F4                  	sub r12, r14
  7185 00004544 49FFCC                  	dec r12
  7186 00004547 49FFCC                  	dec r12
  7187 0000454A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0038
  7188                                  .L_lambda_opt_stack_shrink_loop_more_0038:
  7189 0000454C 4983F800                	cmp r8, 0
  7190 00004550 7E16                    	jle .L_make_lambda_opt_more_finish_0038
  7191 00004552 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  7192 00004556 4D01F4                  	add r12, r14
  7193 00004559 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  7194 0000455D 49FFC8                  	dec r8 ; next iteration
  7195 00004560 4D29F4                  	sub r12, r14 ; next iteration
  7196 00004563 49FFCC                  	dec r12 ; next iteration
  7197 00004566 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0038
  7198                                  .L_make_lambda_opt_more_finish_0038:
  7199 00004568 41BA01000000            	mov r10, 1
  7200 0000456E 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
  7201 00004577 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  7202 0000457B 4C01F4                  	add rsp, r14  ; Add to rsp
  7203 0000457E EB00                    	jmp .L_lambda_opt_stack_adjusted_0038
  7204                                  .L_lambda_opt_stack_adjusted_0038:
  7205 00004580 C8000000                	enter 0, 0
  7206                                  	; preparing a non-tail-call
  7207 00004584 488B4528                	mov rax, PARAM(1)	; param s
  7208 00004588 50                      	push rax
  7209 00004589 6A01                    	push 1	; arg count
  7210 0000458B 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  7211 00004593 803805                  	cmp byte [rax], T_undefined
  7212 00004596 0F84D80C0100            	je L_error_fvar_undefined
  7213 0000459C 803804                  	cmp byte [rax], T_closure
  7214 0000459F 0F85530D0100            	jne L_error_non_closure
  7215 000045A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7216 000045A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7217 000045AB 483D[02000000]          	cmp rax, sob_boolean_false
  7218 000045B1 740C                    	je .L_if_else_011b
  7219 000045B3 48B8-                   	mov rax, L_constants + 1
  7219 000045B5 [0100000000000000] 
  7220 000045BD EB60                    	jmp .L_if_end_011b
  7221                                  .L_if_else_011b:
  7222                                  	; Initiating tail-call optimization
  7223 000045BF 488B4528                	mov rax, PARAM(1)	; param s
  7224 000045C3 50                      	push rax
  7225 000045C4 488B4520                	mov rax, PARAM(0)	; param f
  7226 000045C8 50                      	push rax
  7227 000045C9 6A02                    	push 2	; Number of arguments
  7228 000045CB 488B4510                	mov rax, ENV
  7229 000045CF 488B00                  	mov rax, qword [rax + 8 * 0]
  7230 000045D2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7231 000045D6 488B00                  	mov rax, qword [rax]
  7232 000045D9 803804                  	cmp byte [rax], T_closure
  7233 000045DC 0F85160D0100            	jne L_error_non_closure
  7234 000045E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7235 000045E5 FF7508                  	push qword [rbp + 8]
  7236 000045E8 FF7500                  	push qword [rbp]
  7237 000045EB 41BA06000000            	mov r10, 2 + 4
  7238 000045F1 4C8B4518                	mov r8, COUNT
  7239 000045F5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7240 000045FA 4C8D4DF8                	lea r9, [rbp - 8]
  7241                                  .L_tc_recycle_frame_loop_01f3:
  7242 000045FE 4983FA00                	cmp r10, 0
  7243 00004602 7413                    	je .L_tc_recycle_frame_done_01f3
  7244 00004604 4D8B19                  	mov r11, qword [r9]
  7245 00004607 4D8918                  	mov qword [r8], r11
  7246 0000460A 49FFCA                  	dec r10
  7247 0000460D 4983E808                	sub r8, 8
  7248 00004611 4983E908                	sub r9, 8
  7249 00004615 EBE7                    	jmp .L_tc_recycle_frame_loop_01f3
  7250                                  .L_tc_recycle_frame_done_01f3:
  7251 00004617 498D6008                	lea rsp, [r8 + 8]
  7252 0000461B 5D                      	pop rbp
  7253 0000461C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7254                                  .L_if_end_011b:
  7255 0000461F C9                      	leave
  7256 00004620 C22000                  	ret AND_KILL_FRAME(2)
  7257                                  .L_lambda_opt_end_0038:	; new closure is in rax
  7258 00004623 C9                      	leave
  7259 00004624 C22000                  	ret AND_KILL_FRAME(2)
  7260                                  .L_lambda_simple_end_019d:	; new closure is in rax
  7261 00004627 803804                  	cmp byte [rax], T_closure
  7262 0000462A 0F85C80C0100            	jne L_error_non_closure
  7263 00004630 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7264 00004633 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7265 00004636 48890425[AE140000]      	mov qword [free_var_103], rax
  7266 0000463E 48B8-                   	mov rax, sob_void
  7266 00004640 [0000000000000000] 
  7267                                  
  7268 00004648 4889C7                  	mov rdi, rax
  7269 0000464B E8A60F0100              	call print_sexpr_if_not_void
  7270 00004650 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7271 00004655 E8470D0100              	call malloc
  7272 0000465A 50                      	push rax
  7273 0000465B BF00000000              	mov rdi, 8 * 0	; new rib
  7274 00004660 E83C0D0100              	call malloc
  7275 00004665 50                      	push rax
  7276 00004666 BF08000000              	mov rdi, 8 * 1	; extended env
  7277 0000466B E8310D0100              	call malloc
  7278 00004670 488B7D10                	mov rdi, ENV
  7279 00004674 BE00000000              	mov rsi, 0
  7280 00004679 BA01000000              	mov rdx, 1
  7281                                  .L_lambda_simple_env_loop_01a0:	; ext_env[i + 1] <-- env[i]
  7282 0000467E 4883FE00                	cmp rsi, 0
  7283 00004682 7410                    	je .L_lambda_simple_env_end_01a0
  7284 00004684 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7285 00004688 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7286 0000468C 48FFC6                  	inc rsi
  7287 0000468F 48FFC2                  	inc rdx
  7288 00004692 EBEA                    	jmp .L_lambda_simple_env_loop_01a0
  7289                                  .L_lambda_simple_env_end_01a0:
  7290 00004694 5B                      	pop rbx
  7291 00004695 BE00000000              	mov rsi, 0
  7292                                  .L_lambda_simple_params_loop_01a0:	; copy params
  7293 0000469A 4883FE00                	cmp rsi, 0
  7294 0000469E 740E                    	je .L_lambda_simple_params_end_01a0
  7295 000046A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7296 000046A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7297 000046A9 48FFC6                  	inc rsi
  7298 000046AC EBEC                    	jmp .L_lambda_simple_params_loop_01a0
  7299                                  .L_lambda_simple_params_end_01a0:
  7300 000046AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7301 000046B1 4889C3                  	mov rbx, rax
  7302 000046B4 58                      	pop rax
  7303 000046B5 C60004                  	mov byte [rax], T_closure
  7304 000046B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7305 000046BC 48C74009[C9460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a0
  7306 000046C4 E97C010000              	jmp .L_lambda_simple_end_01a0
  7307                                  .L_lambda_simple_code_01a0:	; lambda-simple body
  7308 000046C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7309 000046CF 740B                    	je .L_lambda_simple_arity_check_ok_01a0
  7310 000046D1 FF742410                	push qword [rsp + 8 * 2]
  7311 000046D5 6A01                    	push 1
  7312 000046D7 E97E0C0100              	jmp L_error_incorrect_arity_simple
  7313                                  .L_lambda_simple_arity_check_ok_01a0:
  7314 000046DC C8000000                	enter 0, 0
  7315                                  	; Initiating tail-call optimization
  7316 000046E0 488B4520                	mov rax, PARAM(0)	; param s
  7317 000046E4 50                      	push rax
  7318 000046E5 48B8-                   	mov rax, L_constants + 1
  7318 000046E7 [0100000000000000] 
  7319 000046EF 50                      	push rax
  7320 000046F0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7321 000046F5 E8A70C0100              	call malloc
  7322 000046FA 50                      	push rax
  7323 000046FB BF08000000              	mov rdi, 8 * 1	; new rib
  7324 00004700 E89C0C0100              	call malloc
  7325 00004705 50                      	push rax
  7326 00004706 BF10000000              	mov rdi, 8 * 2	; extended env
  7327 0000470B E8910C0100              	call malloc
  7328 00004710 488B7D10                	mov rdi, ENV
  7329 00004714 BE00000000              	mov rsi, 0
  7330 00004719 BA01000000              	mov rdx, 1
  7331                                  .L_lambda_simple_env_loop_01a1:	; ext_env[i + 1] <-- env[i]
  7332 0000471E 4883FE01                	cmp rsi, 1
  7333 00004722 7410                    	je .L_lambda_simple_env_end_01a1
  7334 00004724 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7335 00004728 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7336 0000472C 48FFC6                  	inc rsi
  7337 0000472F 48FFC2                  	inc rdx
  7338 00004732 EBEA                    	jmp .L_lambda_simple_env_loop_01a1
  7339                                  .L_lambda_simple_env_end_01a1:
  7340 00004734 5B                      	pop rbx
  7341 00004735 BE00000000              	mov rsi, 0
  7342                                  .L_lambda_simple_params_loop_01a1:	; copy params
  7343 0000473A 4883FE01                	cmp rsi, 1
  7344 0000473E 740E                    	je .L_lambda_simple_params_end_01a1
  7345 00004740 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7346 00004745 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7347 00004749 48FFC6                  	inc rsi
  7348 0000474C EBEC                    	jmp .L_lambda_simple_params_loop_01a1
  7349                                  .L_lambda_simple_params_end_01a1:
  7350 0000474E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7351 00004751 4889C3                  	mov rbx, rax
  7352 00004754 58                      	pop rax
  7353 00004755 C60004                  	mov byte [rax], T_closure
  7354 00004758 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7355 0000475C 48C74009[69470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a1
  7356 00004764 E97E000000              	jmp .L_lambda_simple_end_01a1
  7357                                  .L_lambda_simple_code_01a1:	; lambda-simple body
  7358 00004769 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7359 0000476F 740B                    	je .L_lambda_simple_arity_check_ok_01a1
  7360 00004771 FF742410                	push qword [rsp + 8 * 2]
  7361 00004775 6A02                    	push 2
  7362 00004777 E9DE0B0100              	jmp L_error_incorrect_arity_simple
  7363                                  .L_lambda_simple_arity_check_ok_01a1:
  7364 0000477C C8000000                	enter 0, 0
  7365                                  	; Initiating tail-call optimization
  7366 00004780 488B4520                	mov rax, PARAM(0)	; param r
  7367 00004784 50                      	push rax
  7368 00004785 488B4528                	mov rax, PARAM(1)	; param a
  7369 00004789 50                      	push rax
  7370 0000478A 6A02                    	push 2	; Number of arguments
  7371 0000478C 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  7372 00004794 803805                  	cmp byte [rax], T_undefined
  7373 00004797 0F84D70A0100            	je L_error_fvar_undefined
  7374 0000479D 803804                  	cmp byte [rax], T_closure
  7375 000047A0 0F85520B0100            	jne L_error_non_closure
  7376 000047A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7377 000047A9 FF7508                  	push qword [rbp + 8]
  7378 000047AC FF7500                  	push qword [rbp]
  7379 000047AF 41BA06000000            	mov r10, 2 + 4
  7380 000047B5 4C8B4518                	mov r8, COUNT
  7381 000047B9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7382 000047BE 4C8D4DF8                	lea r9, [rbp - 8]
  7383                                  .L_tc_recycle_frame_loop_01f4:
  7384 000047C2 4983FA00                	cmp r10, 0
  7385 000047C6 7413                    	je .L_tc_recycle_frame_done_01f4
  7386 000047C8 4D8B19                  	mov r11, qword [r9]
  7387 000047CB 4D8918                  	mov qword [r8], r11
  7388 000047CE 49FFCA                  	dec r10
  7389 000047D1 4983E808                	sub r8, 8
  7390 000047D5 4983E908                	sub r9, 8
  7391 000047D9 EBE7                    	jmp .L_tc_recycle_frame_loop_01f4
  7392                                  .L_tc_recycle_frame_done_01f4:
  7393 000047DB 498D6008                	lea rsp, [r8 + 8]
  7394 000047DF 5D                      	pop rbp
  7395 000047E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7396 000047E3 C9                      	leave
  7397 000047E4 C22000                  	ret AND_KILL_FRAME(2)
  7398                                  .L_lambda_simple_end_01a1:	; new closure is in rax
  7399 000047E7 50                      	push rax
  7400 000047E8 6A03                    	push 3	; Number of arguments
  7401 000047EA 488B0425[7C130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7402 000047F2 803805                  	cmp byte [rax], T_undefined
  7403 000047F5 0F84790A0100            	je L_error_fvar_undefined
  7404 000047FB 803804                  	cmp byte [rax], T_closure
  7405 000047FE 0F85F40A0100            	jne L_error_non_closure
  7406 00004804 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7407 00004807 FF7508                  	push qword [rbp + 8]
  7408 0000480A FF7500                  	push qword [rbp]
  7409 0000480D 41BA07000000            	mov r10, 3 + 4
  7410 00004813 4C8B4518                	mov r8, COUNT
  7411 00004817 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7412 0000481C 4C8D4DF8                	lea r9, [rbp - 8]
  7413                                  .L_tc_recycle_frame_loop_01f5:
  7414 00004820 4983FA00                	cmp r10, 0
  7415 00004824 7413                    	je .L_tc_recycle_frame_done_01f5
  7416 00004826 4D8B19                  	mov r11, qword [r9]
  7417 00004829 4D8918                  	mov qword [r8], r11
  7418 0000482C 49FFCA                  	dec r10
  7419 0000482F 4983E808                	sub r8, 8
  7420 00004833 4983E908                	sub r9, 8
  7421 00004837 EBE7                    	jmp .L_tc_recycle_frame_loop_01f5
  7422                                  .L_tc_recycle_frame_done_01f5:
  7423 00004839 498D6008                	lea rsp, [r8 + 8]
  7424 0000483D 5D                      	pop rbp
  7425 0000483E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7426 00004841 C9                      	leave
  7427 00004842 C21800                  	ret AND_KILL_FRAME(1)
  7428                                  .L_lambda_simple_end_01a0:	; new closure is in rax
  7429 00004845 48890425[AD150000]      	mov qword [free_var_118], rax
  7430 0000484D 48B8-                   	mov rax, sob_void
  7430 0000484F [0000000000000000] 
  7431                                  
  7432 00004857 4889C7                  	mov rdi, rax
  7433 0000485A E8970D0100              	call print_sexpr_if_not_void
  7434                                  	; preparing a non-tail-call
  7435 0000485F 48B8-                   	mov rax, L_constants + 2007
  7435 00004861 [D707000000000000] 
  7436 00004869 50                      	push rax
  7437 0000486A 48B8-                   	mov rax, L_constants + 2007
  7437 0000486C [D707000000000000] 
  7438 00004874 50                      	push rax
  7439 00004875 6A02                    	push 2	; arg count
  7440 00004877 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7441 0000487C E8200B0100              	call malloc
  7442 00004881 50                      	push rax
  7443 00004882 BF00000000              	mov rdi, 8 * 0	; new rib
  7444 00004887 E8150B0100              	call malloc
  7445 0000488C 50                      	push rax
  7446 0000488D BF08000000              	mov rdi, 8 * 1	; extended env
  7447 00004892 E80A0B0100              	call malloc
  7448 00004897 488B7D10                	mov rdi, ENV
  7449 0000489B BE00000000              	mov rsi, 0
  7450 000048A0 BA01000000              	mov rdx, 1
  7451                                  .L_lambda_simple_env_loop_01a2:	; ext_env[i + 1] <-- env[i]
  7452 000048A5 4883FE00                	cmp rsi, 0
  7453 000048A9 7410                    	je .L_lambda_simple_env_end_01a2
  7454 000048AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7455 000048AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7456 000048B3 48FFC6                  	inc rsi
  7457 000048B6 48FFC2                  	inc rdx
  7458 000048B9 EBEA                    	jmp .L_lambda_simple_env_loop_01a2
  7459                                  .L_lambda_simple_env_end_01a2:
  7460 000048BB 5B                      	pop rbx
  7461 000048BC BE00000000              	mov rsi, 0
  7462                                  .L_lambda_simple_params_loop_01a2:	; copy params
  7463 000048C1 4883FE00                	cmp rsi, 0
  7464 000048C5 740E                    	je .L_lambda_simple_params_end_01a2
  7465 000048C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7466 000048CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7467 000048D0 48FFC6                  	inc rsi
  7468 000048D3 EBEC                    	jmp .L_lambda_simple_params_loop_01a2
  7469                                  .L_lambda_simple_params_end_01a2:
  7470 000048D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7471 000048D8 4889C3                  	mov rbx, rax
  7472 000048DB 58                      	pop rax
  7473 000048DC C60004                  	mov byte [rax], T_closure
  7474 000048DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7475 000048E3 48C74009[F0480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a2
  7476 000048EB E914060000              	jmp .L_lambda_simple_end_01a2
  7477                                  .L_lambda_simple_code_01a2:	; lambda-simple body
  7478 000048F0 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7479 000048F6 740B                    	je .L_lambda_simple_arity_check_ok_01a2
  7480 000048F8 FF742410                	push qword [rsp + 8 * 2]
  7481 000048FC 6A02                    	push 2
  7482 000048FE E9570A0100              	jmp L_error_incorrect_arity_simple
  7483                                  .L_lambda_simple_arity_check_ok_01a2:
  7484 00004903 C8000000                	enter 0, 0
  7485 00004907 BF08000000              	mov rdi, 8 * 1
  7486 0000490C E8900A0100              	call malloc
  7487 00004911 488B5D20                	mov rbx, PARAM(0)
  7488 00004915 488918                  	mov qword [rax], rbx
  7489 00004918 48894520                	mov PARAM(0), rax
  7490 0000491C 48B8-                   	mov rax, sob_void
  7490 0000491E [0000000000000000] 
  7491                                  
  7492 00004926 BF08000000              	mov rdi, 8 * 1
  7493 0000492B E8710A0100              	call malloc
  7494 00004930 488B5D28                	mov rbx, PARAM(1)
  7495 00004934 488918                  	mov qword [rax], rbx
  7496 00004937 48894528                	mov PARAM(1), rax
  7497 0000493B 48B8-                   	mov rax, sob_void
  7497 0000493D [0000000000000000] 
  7498                                  
  7499 00004945 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7500 0000494A E8520A0100              	call malloc
  7501 0000494F 50                      	push rax
  7502 00004950 BF10000000              	mov rdi, 8 * 2	; new rib
  7503 00004955 E8470A0100              	call malloc
  7504 0000495A 50                      	push rax
  7505 0000495B BF10000000              	mov rdi, 8 * 2	; extended env
  7506 00004960 E83C0A0100              	call malloc
  7507 00004965 488B7D10                	mov rdi, ENV
  7508 00004969 BE00000000              	mov rsi, 0
  7509 0000496E BA01000000              	mov rdx, 1
  7510                                  .L_lambda_simple_env_loop_01a3:	; ext_env[i + 1] <-- env[i]
  7511 00004973 4883FE01                	cmp rsi, 1
  7512 00004977 7410                    	je .L_lambda_simple_env_end_01a3
  7513 00004979 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7514 0000497D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7515 00004981 48FFC6                  	inc rsi
  7516 00004984 48FFC2                  	inc rdx
  7517 00004987 EBEA                    	jmp .L_lambda_simple_env_loop_01a3
  7518                                  .L_lambda_simple_env_end_01a3:
  7519 00004989 5B                      	pop rbx
  7520 0000498A BE00000000              	mov rsi, 0
  7521                                  .L_lambda_simple_params_loop_01a3:	; copy params
  7522 0000498F 4883FE02                	cmp rsi, 2
  7523 00004993 740E                    	je .L_lambda_simple_params_end_01a3
  7524 00004995 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7525 0000499A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7526 0000499E 48FFC6                  	inc rsi
  7527 000049A1 EBEC                    	jmp .L_lambda_simple_params_loop_01a3
  7528                                  .L_lambda_simple_params_end_01a3:
  7529 000049A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7530 000049A6 4889C3                  	mov rbx, rax
  7531 000049A9 58                      	pop rax
  7532 000049AA C60004                  	mov byte [rax], T_closure
  7533 000049AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7534 000049B1 48C74009[BE490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a3
  7535 000049B9 E91D010000              	jmp .L_lambda_simple_end_01a3
  7536                                  .L_lambda_simple_code_01a3:	; lambda-simple body
  7537 000049BE 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7538 000049C4 740B                    	je .L_lambda_simple_arity_check_ok_01a3
  7539 000049C6 FF742410                	push qword [rsp + 8 * 2]
  7540 000049CA 6A02                    	push 2
  7541 000049CC E989090100              	jmp L_error_incorrect_arity_simple
  7542                                  .L_lambda_simple_arity_check_ok_01a3:
  7543 000049D1 C8000000                	enter 0, 0
  7544                                  	; preparing a non-tail-call
  7545 000049D5 488B4528                	mov rax, PARAM(1)	; param sr
  7546 000049D9 50                      	push rax
  7547 000049DA 6A01                    	push 1	; arg count
  7548 000049DC 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  7549 000049E4 803805                  	cmp byte [rax], T_undefined
  7550 000049E7 0F8487080100            	je L_error_fvar_undefined
  7551 000049ED 803804                  	cmp byte [rax], T_closure
  7552 000049F0 0F8502090100            	jne L_error_non_closure
  7553 000049F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7554 000049F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7555 000049FC 483D[02000000]          	cmp rax, sob_boolean_false
  7556 00004A02 7409                    	je .L_if_else_011c
  7557 00004A04 488B4520                	mov rax, PARAM(0)	; param s1
  7558 00004A08 E9CA000000              	jmp .L_if_end_011c
  7559                                  .L_if_else_011c:
  7560                                  	; Initiating tail-call optimization
  7561                                  	; preparing a non-tail-call
  7562                                  	; preparing a non-tail-call
  7563 00004A0D 488B4528                	mov rax, PARAM(1)	; param sr
  7564 00004A11 50                      	push rax
  7565 00004A12 6A01                    	push 1	; arg count
  7566 00004A14 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  7567 00004A1C 803805                  	cmp byte [rax], T_undefined
  7568 00004A1F 0F844F080100            	je L_error_fvar_undefined
  7569 00004A25 803804                  	cmp byte [rax], T_closure
  7570 00004A28 0F85CA080100            	jne L_error_non_closure
  7571 00004A2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7572 00004A31 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7573 00004A34 50                      	push rax
  7574                                  	; preparing a non-tail-call
  7575 00004A35 488B4528                	mov rax, PARAM(1)	; param sr
  7576 00004A39 50                      	push rax
  7577 00004A3A 6A01                    	push 1	; arg count
  7578 00004A3C 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  7579 00004A44 803805                  	cmp byte [rax], T_undefined
  7580 00004A47 0F8427080100            	je L_error_fvar_undefined
  7581 00004A4D 803804                  	cmp byte [rax], T_closure
  7582 00004A50 0F85A2080100            	jne L_error_non_closure
  7583 00004A56 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7584 00004A59 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7585 00004A5C 50                      	push rax
  7586 00004A5D 6A02                    	push 2	; arg count
  7587 00004A5F 488B4510                	mov rax, ENV
  7588 00004A63 488B00                  	mov rax, qword [rax + 8 * 0]
  7589 00004A66 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7590 00004A69 488B00                  	mov rax, qword [rax]
  7591 00004A6C 803804                  	cmp byte [rax], T_closure
  7592 00004A6F 0F8583080100            	jne L_error_non_closure
  7593 00004A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7594 00004A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7595 00004A7B 50                      	push rax
  7596 00004A7C 488B4520                	mov rax, PARAM(0)	; param s1
  7597 00004A80 50                      	push rax
  7598 00004A81 6A02                    	push 2	; Number of arguments
  7599 00004A83 488B4510                	mov rax, ENV
  7600 00004A87 488B00                  	mov rax, qword [rax + 8 * 0]
  7601 00004A8A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7602 00004A8E 488B00                  	mov rax, qword [rax]
  7603 00004A91 803804                  	cmp byte [rax], T_closure
  7604 00004A94 0F855E080100            	jne L_error_non_closure
  7605 00004A9A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7606 00004A9D FF7508                  	push qword [rbp + 8]
  7607 00004AA0 FF7500                  	push qword [rbp]
  7608 00004AA3 41BA06000000            	mov r10, 2 + 4
  7609 00004AA9 4C8B4518                	mov r8, COUNT
  7610 00004AAD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7611 00004AB2 4C8D4DF8                	lea r9, [rbp - 8]
  7612                                  .L_tc_recycle_frame_loop_01f6:
  7613 00004AB6 4983FA00                	cmp r10, 0
  7614 00004ABA 7413                    	je .L_tc_recycle_frame_done_01f6
  7615 00004ABC 4D8B19                  	mov r11, qword [r9]
  7616 00004ABF 4D8918                  	mov qword [r8], r11
  7617 00004AC2 49FFCA                  	dec r10
  7618 00004AC5 4983E808                	sub r8, 8
  7619 00004AC9 4983E908                	sub r9, 8
  7620 00004ACD EBE7                    	jmp .L_tc_recycle_frame_loop_01f6
  7621                                  .L_tc_recycle_frame_done_01f6:
  7622 00004ACF 498D6008                	lea rsp, [r8 + 8]
  7623 00004AD3 5D                      	pop rbp
  7624 00004AD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7625                                  .L_if_end_011c:
  7626 00004AD7 C9                      	leave
  7627 00004AD8 C22000                  	ret AND_KILL_FRAME(2)
  7628                                  .L_lambda_simple_end_01a3:	; new closure is in rax
  7629 00004ADB 50                      	push rax
  7630 00004ADC 488B4520                	mov rax, PARAM(0)	; param run-1
  7631 00004AE0 8F00                    	pop qword [rax]
  7632 00004AE2 48B8-                   	mov rax, sob_void
  7632 00004AE4 [0000000000000000] 
  7633                                  
  7634 00004AEC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7635 00004AF1 E8AB080100              	call malloc
  7636 00004AF6 50                      	push rax
  7637 00004AF7 BF10000000              	mov rdi, 8 * 2	; new rib
  7638 00004AFC E8A0080100              	call malloc
  7639 00004B01 50                      	push rax
  7640 00004B02 BF10000000              	mov rdi, 8 * 2	; extended env
  7641 00004B07 E895080100              	call malloc
  7642 00004B0C 488B7D10                	mov rdi, ENV
  7643 00004B10 BE00000000              	mov rsi, 0
  7644 00004B15 BA01000000              	mov rdx, 1
  7645                                  .L_lambda_simple_env_loop_01a4:	; ext_env[i + 1] <-- env[i]
  7646 00004B1A 4883FE01                	cmp rsi, 1
  7647 00004B1E 7410                    	je .L_lambda_simple_env_end_01a4
  7648 00004B20 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7649 00004B24 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7650 00004B28 48FFC6                  	inc rsi
  7651 00004B2B 48FFC2                  	inc rdx
  7652 00004B2E EBEA                    	jmp .L_lambda_simple_env_loop_01a4
  7653                                  .L_lambda_simple_env_end_01a4:
  7654 00004B30 5B                      	pop rbx
  7655 00004B31 BE00000000              	mov rsi, 0
  7656                                  .L_lambda_simple_params_loop_01a4:	; copy params
  7657 00004B36 4883FE02                	cmp rsi, 2
  7658 00004B3A 740E                    	je .L_lambda_simple_params_end_01a4
  7659 00004B3C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7660 00004B41 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7661 00004B45 48FFC6                  	inc rsi
  7662 00004B48 EBEC                    	jmp .L_lambda_simple_params_loop_01a4
  7663                                  .L_lambda_simple_params_end_01a4:
  7664 00004B4A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7665 00004B4D 4889C3                  	mov rbx, rax
  7666 00004B50 58                      	pop rax
  7667 00004B51 C60004                  	mov byte [rax], T_closure
  7668 00004B54 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7669 00004B58 48C74009[654B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a4
  7670 00004B60 E921010000              	jmp .L_lambda_simple_end_01a4
  7671                                  .L_lambda_simple_code_01a4:	; lambda-simple body
  7672 00004B65 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7673 00004B6B 740B                    	je .L_lambda_simple_arity_check_ok_01a4
  7674 00004B6D FF742410                	push qword [rsp + 8 * 2]
  7675 00004B71 6A02                    	push 2
  7676 00004B73 E9E2070100              	jmp L_error_incorrect_arity_simple
  7677                                  .L_lambda_simple_arity_check_ok_01a4:
  7678 00004B78 C8000000                	enter 0, 0
  7679                                  	; preparing a non-tail-call
  7680 00004B7C 488B4520                	mov rax, PARAM(0)	; param s1
  7681 00004B80 50                      	push rax
  7682 00004B81 6A01                    	push 1	; arg count
  7683 00004B83 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  7684 00004B8B 803805                  	cmp byte [rax], T_undefined
  7685 00004B8E 0F84E0060100            	je L_error_fvar_undefined
  7686 00004B94 803804                  	cmp byte [rax], T_closure
  7687 00004B97 0F855B070100            	jne L_error_non_closure
  7688 00004B9D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7689 00004BA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7690 00004BA3 483D[02000000]          	cmp rax, sob_boolean_false
  7691 00004BA9 7409                    	je .L_if_else_011d
  7692 00004BAB 488B4528                	mov rax, PARAM(1)	; param s2
  7693 00004BAF E9CE000000              	jmp .L_if_end_011d
  7694                                  .L_if_else_011d:
  7695                                  	; Initiating tail-call optimization
  7696                                  	; preparing a non-tail-call
  7697 00004BB4 488B4528                	mov rax, PARAM(1)	; param s2
  7698 00004BB8 50                      	push rax
  7699                                  	; preparing a non-tail-call
  7700 00004BB9 488B4520                	mov rax, PARAM(0)	; param s1
  7701 00004BBD 50                      	push rax
  7702 00004BBE 6A01                    	push 1	; arg count
  7703 00004BC0 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  7704 00004BC8 803805                  	cmp byte [rax], T_undefined
  7705 00004BCB 0F84A3060100            	je L_error_fvar_undefined
  7706 00004BD1 803804                  	cmp byte [rax], T_closure
  7707 00004BD4 0F851E070100            	jne L_error_non_closure
  7708 00004BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7709 00004BDD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7710 00004BE0 50                      	push rax
  7711 00004BE1 6A02                    	push 2	; arg count
  7712 00004BE3 488B4510                	mov rax, ENV
  7713 00004BE7 488B00                  	mov rax, qword [rax + 8 * 0]
  7714 00004BEA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7715 00004BEE 488B00                  	mov rax, qword [rax]
  7716 00004BF1 803804                  	cmp byte [rax], T_closure
  7717 00004BF4 0F85FE060100            	jne L_error_non_closure
  7718 00004BFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7719 00004BFD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7720 00004C00 50                      	push rax
  7721                                  	; preparing a non-tail-call
  7722 00004C01 488B4520                	mov rax, PARAM(0)	; param s1
  7723 00004C05 50                      	push rax
  7724 00004C06 6A01                    	push 1	; arg count
  7725 00004C08 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  7726 00004C10 803805                  	cmp byte [rax], T_undefined
  7727 00004C13 0F845B060100            	je L_error_fvar_undefined
  7728 00004C19 803804                  	cmp byte [rax], T_closure
  7729 00004C1C 0F85D6060100            	jne L_error_non_closure
  7730 00004C22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7731 00004C25 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7732 00004C28 50                      	push rax
  7733 00004C29 6A02                    	push 2	; Number of arguments
  7734 00004C2B 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  7735 00004C33 803805                  	cmp byte [rax], T_undefined
  7736 00004C36 0F8438060100            	je L_error_fvar_undefined
  7737 00004C3C 803804                  	cmp byte [rax], T_closure
  7738 00004C3F 0F85B3060100            	jne L_error_non_closure
  7739 00004C45 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7740 00004C48 FF7508                  	push qword [rbp + 8]
  7741 00004C4B FF7500                  	push qword [rbp]
  7742 00004C4E 41BA06000000            	mov r10, 2 + 4
  7743 00004C54 4C8B4518                	mov r8, COUNT
  7744 00004C58 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7745 00004C5D 4C8D4DF8                	lea r9, [rbp - 8]
  7746                                  .L_tc_recycle_frame_loop_01f7:
  7747 00004C61 4983FA00                	cmp r10, 0
  7748 00004C65 7413                    	je .L_tc_recycle_frame_done_01f7
  7749 00004C67 4D8B19                  	mov r11, qword [r9]
  7750 00004C6A 4D8918                  	mov qword [r8], r11
  7751 00004C6D 49FFCA                  	dec r10
  7752 00004C70 4983E808                	sub r8, 8
  7753 00004C74 4983E908                	sub r9, 8
  7754 00004C78 EBE7                    	jmp .L_tc_recycle_frame_loop_01f7
  7755                                  .L_tc_recycle_frame_done_01f7:
  7756 00004C7A 498D6008                	lea rsp, [r8 + 8]
  7757 00004C7E 5D                      	pop rbp
  7758 00004C7F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7759                                  .L_if_end_011d:
  7760 00004C82 C9                      	leave
  7761 00004C83 C22000                  	ret AND_KILL_FRAME(2)
  7762                                  .L_lambda_simple_end_01a4:	; new closure is in rax
  7763 00004C86 50                      	push rax
  7764 00004C87 488B4528                	mov rax, PARAM(1)	; param run-2
  7765 00004C8B 8F00                    	pop qword [rax]
  7766 00004C8D 48B8-                   	mov rax, sob_void
  7766 00004C8F [0000000000000000] 
  7767                                  
  7768 00004C97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7769 00004C9C E800070100              	call malloc
  7770 00004CA1 50                      	push rax
  7771 00004CA2 BF10000000              	mov rdi, 8 * 2	; new rib
  7772 00004CA7 E8F5060100              	call malloc
  7773 00004CAC 50                      	push rax
  7774 00004CAD BF10000000              	mov rdi, 8 * 2	; extended env
  7775 00004CB2 E8EA060100              	call malloc
  7776 00004CB7 488B7D10                	mov rdi, ENV
  7777 00004CBB BE00000000              	mov rsi, 0
  7778 00004CC0 BA01000000              	mov rdx, 1
  7779                                  .L_lambda_opt_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  7780 00004CC5 4883FE01                	cmp rsi, 1
  7781 00004CC9 7410                    	je .L_lambda_opt_env_end_0039
  7782 00004CCB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7783 00004CCF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7784 00004CD3 48FFC6                  	inc rsi
  7785 00004CD6 48FFC2                  	inc rdx
  7786 00004CD9 EBEA                    	jmp .L_lambda_opt_env_loop_0039
  7787                                  .L_lambda_opt_env_end_0039:
  7788 00004CDB 5B                      	pop rbx
  7789 00004CDC BE00000000              	mov rsi, 0
  7790                                  .L_lambda_opt_params_loop_0039:	; copy params
  7791 00004CE1 4883FE02                	cmp rsi, 2
  7792 00004CE5 740E                    	je .L_lambda_opt_params_end_0039
  7793 00004CE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7794 00004CEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7795 00004CF0 48FFC6                  	inc rsi
  7796 00004CF3 EBEC                    	jmp .L_lambda_opt_params_loop_0039
  7797                                  .L_lambda_opt_params_end_0039:
  7798 00004CF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7799 00004CF8 4889C3                  	mov rbx, rax
  7800 00004CFB 58                      	pop rax
  7801 00004CFC C60004                  	mov byte [rax], T_closure
  7802 00004CFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7803 00004D03 48C74009[104D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0039
  7804 00004D0B E9F0010000              	jmp .L_lambda_opt_end_0039
  7805                                  .L_lambda_opt_code_0039:
  7806 00004D10 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  7807 00004D15 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  7808 00004D19 7407                    	je .L_lambda_opt_arity_check_exact_0039	; Jump if arity matches
  7809 00004D1B 7F4C                    	jg .L_lambda_opt_arity_check_more_0039	; Jump if more arguments passed
  7810 00004D1D E94C060100              	jmp L_error_incorrect_arity_opt
  7811                                  .L_lambda_opt_arity_check_exact_0039:
  7812 00004D22 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  7813 00004D25 4983C603                	add r14, 3 ; add 3 first stack values
  7814 00004D29 41BF00000000            	mov r15, 0 ; r15 = index
  7815 00004D2F 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  7816 00004D33 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  7817 00004D3B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0039
  7818                                  .L_lambda_opt_stack_shrink_loop_0039:
  7819 00004D3D 4983FE00                	cmp r14, 0
  7820 00004D41 7E11                    	jle .L_make_lambda_opt_exact_finish_0039
  7821 00004D43 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  7822 00004D48 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  7823 00004D4C 49FFCE                  	dec r14 ; next loop value
  7824 00004D4F 49FFC7                  	inc r15 ; update i
  7825 00004D52 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0039
  7826                                  .L_make_lambda_opt_exact_finish_0039:
  7827 00004D54 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  7828 00004D5C 49FFC2                  	inc r10
  7829 00004D5F 4C89542410              	mov qword [rsp + 8 * 2], r10
  7830 00004D64 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0039
  7831                                  .L_lambda_opt_arity_check_more_0039:
  7832 00004D69 4D89D6                  	mov r14, r10 ; r14 = num args
  7833 00004D6C 4D89D7                  	mov r15, r10 ; r15 = num args
  7834 00004D6F 41B900000000            	mov r9, 0; r9 = number of params 
  7835 00004D75 4D29CE                  	sub r14, r9 ; r14 = extra args
  7836 00004D78 4D01F1                  	add r9, r14 ; r9 = num args
  7837 00004D7B 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  7837 00004D7D [0100000000000000] 
  7838 00004D85 EB00                    	jmp .L_make_lambda_opt_arg_list_0039
  7839                                  .L_make_lambda_opt_arg_list_0039:
  7840 00004D87 4983FE00                	cmp r14, 0
  7841 00004D8B 7E25                    	jle .L_make_lambda_opt_stack_fixed_0039
  7842 00004D8D 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  7843 00004D92 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  7844 00004D97 E805060100              	call malloc                         ; Allocate memory, result in rax
  7845 00004D9C C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  7846 00004D9F 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  7847 00004DA3 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  7848 00004DA7 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  7849 00004DAA 49FFC9                  	dec r9                              ; args index minus 1
  7850 00004DAD 49FFCE                  	dec r14                             ; next iteration
  7851 00004DB0 EBD5                    	jmp .L_make_lambda_opt_arg_list_0039
  7852                                  .L_make_lambda_opt_stack_fixed_0039:
  7853 00004DB2 4D89FE                  	mov r14, r15 ; r14 = num args
  7854 00004DB5 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  7855 00004DB8 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  7856 00004DBC 4D89C1                  	mov r9, r8
  7857 00004DBF 41BA00000000            	mov r10, 0; r10 = num of params
  7858 00004DC5 4D29D6                  	sub r14, r10 ; r14 = extra args
  7859 00004DC8 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  7860 00004DCB 49FFCE                  	dec r14 ; how much we need to change stack wise?
  7861 00004DCE 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  7862 00004DD3 4D89CC                  	mov r12, r9
  7863 00004DD6 4D29F4                  	sub r12, r14
  7864 00004DD9 49FFCC                  	dec r12
  7865 00004DDC 49FFCC                  	dec r12
  7866 00004DDF EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0039
  7867                                  .L_lambda_opt_stack_shrink_loop_more_0039:
  7868 00004DE1 4983F800                	cmp r8, 0
  7869 00004DE5 7E16                    	jle .L_make_lambda_opt_more_finish_0039
  7870 00004DE7 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  7871 00004DEB 4D01F4                  	add r12, r14
  7872 00004DEE 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  7873 00004DF2 49FFC8                  	dec r8 ; next iteration
  7874 00004DF5 4D29F4                  	sub r12, r14 ; next iteration
  7875 00004DF8 49FFCC                  	dec r12 ; next iteration
  7876 00004DFB EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0039
  7877                                  .L_make_lambda_opt_more_finish_0039:
  7878 00004DFD 41BA00000000            	mov r10, 0
  7879 00004E03 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
  7880 00004E0C 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  7881 00004E10 4C01F4                  	add rsp, r14  ; Add to rsp
  7882 00004E13 EB00                    	jmp .L_lambda_opt_stack_adjusted_0039
  7883                                  .L_lambda_opt_stack_adjusted_0039:
  7884 00004E15 C8000000                	enter 0, 0
  7885                                  	; preparing a non-tail-call
  7886 00004E19 488B4520                	mov rax, PARAM(0)	; param s
  7887 00004E1D 50                      	push rax
  7888 00004E1E 6A01                    	push 1	; arg count
  7889 00004E20 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  7890 00004E28 803805                  	cmp byte [rax], T_undefined
  7891 00004E2B 0F8443040100            	je L_error_fvar_undefined
  7892 00004E31 803804                  	cmp byte [rax], T_closure
  7893 00004E34 0F85BE040100            	jne L_error_non_closure
  7894 00004E3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7895 00004E3D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7896 00004E40 483D[02000000]          	cmp rax, sob_boolean_false
  7897 00004E46 740F                    	je .L_if_else_011e
  7898 00004E48 48B8-                   	mov rax, L_constants + 1
  7898 00004E4A [0100000000000000] 
  7899 00004E52 E9A5000000              	jmp .L_if_end_011e
  7900                                  .L_if_else_011e:
  7901                                  	; Initiating tail-call optimization
  7902                                  	; preparing a non-tail-call
  7903 00004E57 488B4520                	mov rax, PARAM(0)	; param s
  7904 00004E5B 50                      	push rax
  7905 00004E5C 6A01                    	push 1	; arg count
  7906 00004E5E 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  7907 00004E66 803805                  	cmp byte [rax], T_undefined
  7908 00004E69 0F8405040100            	je L_error_fvar_undefined
  7909 00004E6F 803804                  	cmp byte [rax], T_closure
  7910 00004E72 0F8580040100            	jne L_error_non_closure
  7911 00004E78 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7912 00004E7B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7913 00004E7E 50                      	push rax
  7914                                  	; preparing a non-tail-call
  7915 00004E7F 488B4520                	mov rax, PARAM(0)	; param s
  7916 00004E83 50                      	push rax
  7917 00004E84 6A01                    	push 1	; arg count
  7918 00004E86 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  7919 00004E8E 803805                  	cmp byte [rax], T_undefined
  7920 00004E91 0F84DD030100            	je L_error_fvar_undefined
  7921 00004E97 803804                  	cmp byte [rax], T_closure
  7922 00004E9A 0F8558040100            	jne L_error_non_closure
  7923 00004EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7924 00004EA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7925 00004EA6 50                      	push rax
  7926 00004EA7 6A02                    	push 2	; Number of arguments
  7927 00004EA9 488B4510                	mov rax, ENV
  7928 00004EAD 488B00                  	mov rax, qword [rax + 8 * 0]
  7929 00004EB0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7930 00004EB3 488B00                  	mov rax, qword [rax]
  7931 00004EB6 803804                  	cmp byte [rax], T_closure
  7932 00004EB9 0F8539040100            	jne L_error_non_closure
  7933 00004EBF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7934 00004EC2 FF7508                  	push qword [rbp + 8]
  7935 00004EC5 FF7500                  	push qword [rbp]
  7936 00004EC8 41BA06000000            	mov r10, 2 + 4
  7937 00004ECE 4C8B4518                	mov r8, COUNT
  7938 00004ED2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  7939 00004ED7 4C8D4DF8                	lea r9, [rbp - 8]
  7940                                  .L_tc_recycle_frame_loop_01f8:
  7941 00004EDB 4983FA00                	cmp r10, 0
  7942 00004EDF 7413                    	je .L_tc_recycle_frame_done_01f8
  7943 00004EE1 4D8B19                  	mov r11, qword [r9]
  7944 00004EE4 4D8918                  	mov qword [r8], r11
  7945 00004EE7 49FFCA                  	dec r10
  7946 00004EEA 4983E808                	sub r8, 8
  7947 00004EEE 4983E908                	sub r9, 8
  7948 00004EF2 EBE7                    	jmp .L_tc_recycle_frame_loop_01f8
  7949                                  .L_tc_recycle_frame_done_01f8:
  7950 00004EF4 498D6008                	lea rsp, [r8 + 8]
  7951 00004EF8 5D                      	pop rbp
  7952 00004EF9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7953                                  .L_if_end_011e:
  7954 00004EFC C9                      	leave
  7955 00004EFD C21800                  	ret AND_KILL_FRAME(1)
  7956                                  .L_lambda_opt_end_0039:	; new closure is in rax
  7957 00004F00 C9                      	leave
  7958 00004F01 C22000                  	ret AND_KILL_FRAME(2)
  7959                                  .L_lambda_simple_end_01a2:	; new closure is in rax
  7960 00004F04 803804                  	cmp byte [rax], T_closure
  7961 00004F07 0F85EB030100            	jne L_error_non_closure
  7962 00004F0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7963 00004F10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7964 00004F13 48890425[F70F0000]      	mov qword [free_var_32], rax
  7965 00004F1B 48B8-                   	mov rax, sob_void
  7965 00004F1D [0000000000000000] 
  7966                                  
  7967 00004F25 4889C7                  	mov rdi, rax
  7968 00004F28 E8C9060100              	call print_sexpr_if_not_void
  7969                                  	; preparing a non-tail-call
  7970 00004F2D 48B8-                   	mov rax, L_constants + 2007
  7970 00004F2F [D707000000000000] 
  7971 00004F37 50                      	push rax
  7972 00004F38 6A01                    	push 1	; arg count
  7973 00004F3A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7974 00004F3F E85D040100              	call malloc
  7975 00004F44 50                      	push rax
  7976 00004F45 BF00000000              	mov rdi, 8 * 0	; new rib
  7977 00004F4A E852040100              	call malloc
  7978 00004F4F 50                      	push rax
  7979 00004F50 BF08000000              	mov rdi, 8 * 1	; extended env
  7980 00004F55 E847040100              	call malloc
  7981 00004F5A 488B7D10                	mov rdi, ENV
  7982 00004F5E BE00000000              	mov rsi, 0
  7983 00004F63 BA01000000              	mov rdx, 1
  7984                                  .L_lambda_simple_env_loop_01a5:	; ext_env[i + 1] <-- env[i]
  7985 00004F68 4883FE00                	cmp rsi, 0
  7986 00004F6C 7410                    	je .L_lambda_simple_env_end_01a5
  7987 00004F6E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7988 00004F72 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7989 00004F76 48FFC6                  	inc rsi
  7990 00004F79 48FFC2                  	inc rdx
  7991 00004F7C EBEA                    	jmp .L_lambda_simple_env_loop_01a5
  7992                                  .L_lambda_simple_env_end_01a5:
  7993 00004F7E 5B                      	pop rbx
  7994 00004F7F BE00000000              	mov rsi, 0
  7995                                  .L_lambda_simple_params_loop_01a5:	; copy params
  7996 00004F84 4883FE00                	cmp rsi, 0
  7997 00004F88 740E                    	je .L_lambda_simple_params_end_01a5
  7998 00004F8A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7999 00004F8F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8000 00004F93 48FFC6                  	inc rsi
  8001 00004F96 EBEC                    	jmp .L_lambda_simple_params_loop_01a5
  8002                                  .L_lambda_simple_params_end_01a5:
  8003 00004F98 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8004 00004F9B 4889C3                  	mov rbx, rax
  8005 00004F9E 58                      	pop rax
  8006 00004F9F C60004                  	mov byte [rax], T_closure
  8007 00004FA2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8008 00004FA6 48C74009[B34F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a5
  8009 00004FAE E90E040000              	jmp .L_lambda_simple_end_01a5
  8010                                  .L_lambda_simple_code_01a5:	; lambda-simple body
  8011 00004FB3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8012 00004FB9 740B                    	je .L_lambda_simple_arity_check_ok_01a5
  8013 00004FBB FF742410                	push qword [rsp + 8 * 2]
  8014 00004FBF 6A01                    	push 1
  8015 00004FC1 E994030100              	jmp L_error_incorrect_arity_simple
  8016                                  .L_lambda_simple_arity_check_ok_01a5:
  8017 00004FC6 C8000000                	enter 0, 0
  8018 00004FCA BF08000000              	mov rdi, 8 * 1
  8019 00004FCF E8CD030100              	call malloc
  8020 00004FD4 488B5D20                	mov rbx, PARAM(0)
  8021 00004FD8 488918                  	mov qword [rax], rbx
  8022 00004FDB 48894520                	mov PARAM(0), rax
  8023 00004FDF 48B8-                   	mov rax, sob_void
  8023 00004FE1 [0000000000000000] 
  8024                                  
  8025 00004FE9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8026 00004FEE E8AE030100              	call malloc
  8027 00004FF3 50                      	push rax
  8028 00004FF4 BF08000000              	mov rdi, 8 * 1	; new rib
  8029 00004FF9 E8A3030100              	call malloc
  8030 00004FFE 50                      	push rax
  8031 00004FFF BF10000000              	mov rdi, 8 * 2	; extended env
  8032 00005004 E898030100              	call malloc
  8033 00005009 488B7D10                	mov rdi, ENV
  8034 0000500D BE00000000              	mov rsi, 0
  8035 00005012 BA01000000              	mov rdx, 1
  8036                                  .L_lambda_simple_env_loop_01a6:	; ext_env[i + 1] <-- env[i]
  8037 00005017 4883FE01                	cmp rsi, 1
  8038 0000501B 7410                    	je .L_lambda_simple_env_end_01a6
  8039 0000501D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8040 00005021 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8041 00005025 48FFC6                  	inc rsi
  8042 00005028 48FFC2                  	inc rdx
  8043 0000502B EBEA                    	jmp .L_lambda_simple_env_loop_01a6
  8044                                  .L_lambda_simple_env_end_01a6:
  8045 0000502D 5B                      	pop rbx
  8046 0000502E BE00000000              	mov rsi, 0
  8047                                  .L_lambda_simple_params_loop_01a6:	; copy params
  8048 00005033 4883FE01                	cmp rsi, 1
  8049 00005037 740E                    	je .L_lambda_simple_params_end_01a6
  8050 00005039 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8051 0000503E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8052 00005042 48FFC6                  	inc rsi
  8053 00005045 EBEC                    	jmp .L_lambda_simple_params_loop_01a6
  8054                                  .L_lambda_simple_params_end_01a6:
  8055 00005047 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8056 0000504A 4889C3                  	mov rbx, rax
  8057 0000504D 58                      	pop rax
  8058 0000504E C60004                  	mov byte [rax], T_closure
  8059 00005051 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8060 00005055 48C74009[62500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a6
  8061 0000505D E960010000              	jmp .L_lambda_simple_end_01a6
  8062                                  .L_lambda_simple_code_01a6:	; lambda-simple body
  8063 00005062 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8064 00005068 740B                    	je .L_lambda_simple_arity_check_ok_01a6
  8065 0000506A FF742410                	push qword [rsp + 8 * 2]
  8066 0000506E 6A03                    	push 3
  8067 00005070 E9E5020100              	jmp L_error_incorrect_arity_simple
  8068                                  .L_lambda_simple_arity_check_ok_01a6:
  8069 00005075 C8000000                	enter 0, 0
  8070                                  	; preparing a non-tail-call
  8071 00005079 488B4530                	mov rax, PARAM(2)	; param ss
  8072 0000507D 50                      	push rax
  8073 0000507E 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  8074 00005086 803805                  	cmp byte [rax], T_undefined
  8075 00005089 0F84E5010100            	je L_error_fvar_undefined
  8076 0000508F 50                      	push rax
  8077 00005090 6A02                    	push 2	; arg count
  8078 00005092 488B0425[25150000]      	mov rax, qword [free_var_110]	; free var ormap
  8079 0000509A 803805                  	cmp byte [rax], T_undefined
  8080 0000509D 0F84D1010100            	je L_error_fvar_undefined
  8081 000050A3 803804                  	cmp byte [rax], T_closure
  8082 000050A6 0F854C020100            	jne L_error_non_closure
  8083 000050AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  8084 000050AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  8085 000050B2 483D[02000000]          	cmp rax, sob_boolean_false
  8086 000050B8 7409                    	je .L_if_else_011f
  8087 000050BA 488B4528                	mov rax, PARAM(1)	; param unit
  8088 000050BE E9FB000000              	jmp .L_if_end_011f
  8089                                  .L_if_else_011f:
  8090                                  	; Initiating tail-call optimization
  8091                                  	; preparing a non-tail-call
  8092 000050C3 488B4530                	mov rax, PARAM(2)	; param ss
  8093 000050C7 50                      	push rax
  8094 000050C8 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  8095 000050D0 803805                  	cmp byte [rax], T_undefined
  8096 000050D3 0F849B010100            	je L_error_fvar_undefined
  8097 000050D9 50                      	push rax
  8098 000050DA 6A02                    	push 2	; arg count
  8099 000050DC 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  8100 000050E4 803805                  	cmp byte [rax], T_undefined
  8101 000050E7 0F8487010100            	je L_error_fvar_undefined
  8102 000050ED 803804                  	cmp byte [rax], T_closure
  8103 000050F0 0F8502020100            	jne L_error_non_closure
  8104 000050F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8105 000050F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8106 000050FC 50                      	push rax
  8107                                  	; preparing a non-tail-call
  8108                                  	; preparing a non-tail-call
  8109 000050FD 488B4530                	mov rax, PARAM(2)	; param ss
  8110 00005101 50                      	push rax
  8111 00005102 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  8112 0000510A 803805                  	cmp byte [rax], T_undefined
  8113 0000510D 0F8461010100            	je L_error_fvar_undefined
  8114 00005113 50                      	push rax
  8115 00005114 6A02                    	push 2	; arg count
  8116 00005116 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  8117 0000511E 803805                  	cmp byte [rax], T_undefined
  8118 00005121 0F844D010100            	je L_error_fvar_undefined
  8119 00005127 803804                  	cmp byte [rax], T_closure
  8120 0000512A 0F85C8010100            	jne L_error_non_closure
  8121 00005130 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8122 00005133 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8123 00005136 50                      	push rax
  8124 00005137 488B4528                	mov rax, PARAM(1)	; param unit
  8125 0000513B 50                      	push rax
  8126 0000513C 488B4520                	mov rax, PARAM(0)	; param f
  8127 00005140 50                      	push rax
  8128 00005141 6A03                    	push 3	; arg count
  8129 00005143 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
  8130 0000514B 803805                  	cmp byte [rax], T_undefined
  8131 0000514E 0F8420010100            	je L_error_fvar_undefined
  8132 00005154 803804                  	cmp byte [rax], T_closure
  8133 00005157 0F859B010100            	jne L_error_non_closure
  8134 0000515D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8135 00005160 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8136 00005163 50                      	push rax
  8137 00005164 488B4520                	mov rax, PARAM(0)	; param f
  8138 00005168 50                      	push rax
  8139 00005169 6A03                    	push 3	; Number of arguments
  8140 0000516B 488B4510                	mov rax, ENV
  8141 0000516F 488B00                  	mov rax, qword [rax + 8 * 0]
  8142 00005172 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8143 00005175 488B00                  	mov rax, qword [rax]
  8144 00005178 803804                  	cmp byte [rax], T_closure
  8145 0000517B 0F8577010100            	jne L_error_non_closure
  8146 00005181 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8147 00005184 FF7508                  	push qword [rbp + 8]
  8148 00005187 FF7500                  	push qword [rbp]
  8149 0000518A 41BA07000000            	mov r10, 3 + 4
  8150 00005190 4C8B4518                	mov r8, COUNT
  8151 00005194 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8152 00005199 4C8D4DF8                	lea r9, [rbp - 8]
  8153                                  .L_tc_recycle_frame_loop_01f9:
  8154 0000519D 4983FA00                	cmp r10, 0
  8155 000051A1 7413                    	je .L_tc_recycle_frame_done_01f9
  8156 000051A3 4D8B19                  	mov r11, qword [r9]
  8157 000051A6 4D8918                  	mov qword [r8], r11
  8158 000051A9 49FFCA                  	dec r10
  8159 000051AC 4983E808                	sub r8, 8
  8160 000051B0 4983E908                	sub r9, 8
  8161 000051B4 EBE7                    	jmp .L_tc_recycle_frame_loop_01f9
  8162                                  .L_tc_recycle_frame_done_01f9:
  8163 000051B6 498D6008                	lea rsp, [r8 + 8]
  8164 000051BA 5D                      	pop rbp
  8165 000051BB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8166                                  .L_if_end_011f:
  8167 000051BE C9                      	leave
  8168 000051BF C22800                  	ret AND_KILL_FRAME(3)
  8169                                  .L_lambda_simple_end_01a6:	; new closure is in rax
  8170 000051C2 50                      	push rax
  8171 000051C3 488B4520                	mov rax, PARAM(0)	; param run
  8172 000051C7 8F00                    	pop qword [rax]
  8173 000051C9 48B8-                   	mov rax, sob_void
  8173 000051CB [0000000000000000] 
  8174                                  
  8175 000051D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8176 000051D8 E8C4010100              	call malloc
  8177 000051DD 50                      	push rax
  8178 000051DE BF08000000              	mov rdi, 8 * 1	; new rib
  8179 000051E3 E8B9010100              	call malloc
  8180 000051E8 50                      	push rax
  8181 000051E9 BF10000000              	mov rdi, 8 * 2	; extended env
  8182 000051EE E8AE010100              	call malloc
  8183 000051F3 488B7D10                	mov rdi, ENV
  8184 000051F7 BE00000000              	mov rsi, 0
  8185 000051FC BA01000000              	mov rdx, 1
  8186                                  .L_lambda_opt_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  8187 00005201 4883FE01                	cmp rsi, 1
  8188 00005205 7410                    	je .L_lambda_opt_env_end_003a
  8189 00005207 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8190 0000520B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8191 0000520F 48FFC6                  	inc rsi
  8192 00005212 48FFC2                  	inc rdx
  8193 00005215 EBEA                    	jmp .L_lambda_opt_env_loop_003a
  8194                                  .L_lambda_opt_env_end_003a:
  8195 00005217 5B                      	pop rbx
  8196 00005218 BE00000000              	mov rsi, 0
  8197                                  .L_lambda_opt_params_loop_003a:	; copy params
  8198 0000521D 4883FE01                	cmp rsi, 1
  8199 00005221 740E                    	je .L_lambda_opt_params_end_003a
  8200 00005223 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8201 00005228 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8202 0000522C 48FFC6                  	inc rsi
  8203 0000522F EBEC                    	jmp .L_lambda_opt_params_loop_003a
  8204                                  .L_lambda_opt_params_end_003a:
  8205 00005231 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8206 00005234 4889C3                  	mov rbx, rax
  8207 00005237 58                      	pop rax
  8208 00005238 C60004                  	mov byte [rax], T_closure
  8209 0000523B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8210 0000523F 48C74009[4C520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003a
  8211 00005247 E971010000              	jmp .L_lambda_opt_end_003a
  8212                                  .L_lambda_opt_code_003a:
  8213 0000524C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8214 00005251 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8215 00005255 7407                    	je .L_lambda_opt_arity_check_exact_003a	; Jump if arity matches
  8216 00005257 7F4C                    	jg .L_lambda_opt_arity_check_more_003a	; Jump if more arguments passed
  8217 00005259 E910010100              	jmp L_error_incorrect_arity_opt
  8218                                  .L_lambda_opt_arity_check_exact_003a:
  8219 0000525E 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8220 00005261 4983C603                	add r14, 3 ; add 3 first stack values
  8221 00005265 41BF00000000            	mov r15, 0 ; r15 = index
  8222 0000526B 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8223 0000526F 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8224 00005277 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003a
  8225                                  .L_lambda_opt_stack_shrink_loop_003a:
  8226 00005279 4983FE00                	cmp r14, 0
  8227 0000527D 7E11                    	jle .L_make_lambda_opt_exact_finish_003a
  8228 0000527F 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8229 00005284 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8230 00005288 49FFCE                  	dec r14 ; next loop value
  8231 0000528B 49FFC7                  	inc r15 ; update i
  8232 0000528E EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003a
  8233                                  .L_make_lambda_opt_exact_finish_003a:
  8234 00005290 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8235 00005298 49FFC2                  	inc r10
  8236 0000529B 4C89542410              	mov qword [rsp + 8 * 2], r10
  8237 000052A0 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003a
  8238                                  .L_lambda_opt_arity_check_more_003a:
  8239 000052A5 4D89D6                  	mov r14, r10 ; r14 = num args
  8240 000052A8 4D89D7                  	mov r15, r10 ; r15 = num args
  8241 000052AB 41B902000000            	mov r9, 2; r9 = number of params 
  8242 000052B1 4D29CE                  	sub r14, r9 ; r14 = extra args
  8243 000052B4 4D01F1                  	add r9, r14 ; r9 = num args
  8244 000052B7 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8244 000052B9 [0100000000000000] 
  8245 000052C1 EB00                    	jmp .L_make_lambda_opt_arg_list_003a
  8246                                  .L_make_lambda_opt_arg_list_003a:
  8247 000052C3 4983FE00                	cmp r14, 0
  8248 000052C7 7E25                    	jle .L_make_lambda_opt_stack_fixed_003a
  8249 000052C9 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  8250 000052CE BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8251 000052D3 E8C9000100              	call malloc                         ; Allocate memory, result in rax
  8252 000052D8 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8253 000052DB 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  8254 000052DF 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8255 000052E3 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8256 000052E6 49FFC9                  	dec r9                              ; args index minus 1
  8257 000052E9 49FFCE                  	dec r14                             ; next iteration
  8258 000052EC EBD5                    	jmp .L_make_lambda_opt_arg_list_003a
  8259                                  .L_make_lambda_opt_stack_fixed_003a:
  8260 000052EE 4D89FE                  	mov r14, r15 ; r14 = num args
  8261 000052F1 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8262 000052F4 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8263 000052F8 4D89C1                  	mov r9, r8
  8264 000052FB 41BA02000000            	mov r10, 2; r10 = num of params
  8265 00005301 4D29D6                  	sub r14, r10 ; r14 = extra args
  8266 00005304 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8267 00005307 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8268 0000530A 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  8269 0000530F 4D89CC                  	mov r12, r9
  8270 00005312 4D29F4                  	sub r12, r14
  8271 00005315 49FFCC                  	dec r12
  8272 00005318 49FFCC                  	dec r12
  8273 0000531B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003a
  8274                                  .L_lambda_opt_stack_shrink_loop_more_003a:
  8275 0000531D 4983F800                	cmp r8, 0
  8276 00005321 7E16                    	jle .L_make_lambda_opt_more_finish_003a
  8277 00005323 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8278 00005327 4D01F4                  	add r12, r14
  8279 0000532A 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  8280 0000532E 49FFC8                  	dec r8 ; next iteration
  8281 00005331 4D29F4                  	sub r12, r14 ; next iteration
  8282 00005334 49FFCC                  	dec r12 ; next iteration
  8283 00005337 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003a
  8284                                  .L_make_lambda_opt_more_finish_003a:
  8285 00005339 41BA02000000            	mov r10, 2
  8286 0000533F 4AC744F41003000000      	mov qword [rsp + 8 * (r14 + 2)], 3
  8287 00005348 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  8288 0000534C 4C01F4                  	add rsp, r14  ; Add to rsp
  8289 0000534F EB00                    	jmp .L_lambda_opt_stack_adjusted_003a
  8290                                  .L_lambda_opt_stack_adjusted_003a:
  8291 00005351 C8000000                	enter 0, 0
  8292                                  	; Initiating tail-call optimization
  8293 00005355 488B4530                	mov rax, PARAM(2)	; param ss
  8294 00005359 50                      	push rax
  8295 0000535A 488B4528                	mov rax, PARAM(1)	; param unit
  8296 0000535E 50                      	push rax
  8297 0000535F 488B4520                	mov rax, PARAM(0)	; param f
  8298 00005363 50                      	push rax
  8299 00005364 6A03                    	push 3	; Number of arguments
  8300 00005366 488B4510                	mov rax, ENV
  8301 0000536A 488B00                  	mov rax, qword [rax + 8 * 0]
  8302 0000536D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8303 00005370 488B00                  	mov rax, qword [rax]
  8304 00005373 803804                  	cmp byte [rax], T_closure
  8305 00005376 0F857CFF0000            	jne L_error_non_closure
  8306 0000537C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8307 0000537F FF7508                  	push qword [rbp + 8]
  8308 00005382 FF7500                  	push qword [rbp]
  8309 00005385 41BA07000000            	mov r10, 3 + 4
  8310 0000538B 4C8B4518                	mov r8, COUNT
  8311 0000538F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8312 00005394 4C8D4DF8                	lea r9, [rbp - 8]
  8313                                  .L_tc_recycle_frame_loop_01fa:
  8314 00005398 4983FA00                	cmp r10, 0
  8315 0000539C 7413                    	je .L_tc_recycle_frame_done_01fa
  8316 0000539E 4D8B19                  	mov r11, qword [r9]
  8317 000053A1 4D8918                  	mov qword [r8], r11
  8318 000053A4 49FFCA                  	dec r10
  8319 000053A7 4983E808                	sub r8, 8
  8320 000053AB 4983E908                	sub r9, 8
  8321 000053AF EBE7                    	jmp .L_tc_recycle_frame_loop_01fa
  8322                                  .L_tc_recycle_frame_done_01fa:
  8323 000053B1 498D6008                	lea rsp, [r8 + 8]
  8324 000053B5 5D                      	pop rbp
  8325 000053B6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8326 000053B9 C9                      	leave
  8327 000053BA C22800                  	ret AND_KILL_FRAME(3)
  8328                                  .L_lambda_opt_end_003a:	; new closure is in rax
  8329 000053BD C9                      	leave
  8330 000053BE C21800                  	ret AND_KILL_FRAME(1)
  8331                                  .L_lambda_simple_end_01a5:	; new closure is in rax
  8332 000053C1 803804                  	cmp byte [rax], T_closure
  8333 000053C4 0F852EFF0000            	jne L_error_non_closure
  8334 000053CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8335 000053CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  8336 000053D0 48890425[7C130000]      	mov qword [free_var_85], rax
  8337 000053D8 48B8-                   	mov rax, sob_void
  8337 000053DA [0000000000000000] 
  8338                                  
  8339 000053E2 4889C7                  	mov rdi, rax
  8340 000053E5 E80C020100              	call print_sexpr_if_not_void
  8341                                  	; preparing a non-tail-call
  8342 000053EA 48B8-                   	mov rax, L_constants + 2007
  8342 000053EC [D707000000000000] 
  8343 000053F4 50                      	push rax
  8344 000053F5 6A01                    	push 1	; arg count
  8345 000053F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8346 000053FC E8A0FF0000              	call malloc
  8347 00005401 50                      	push rax
  8348 00005402 BF00000000              	mov rdi, 8 * 0	; new rib
  8349 00005407 E895FF0000              	call malloc
  8350 0000540C 50                      	push rax
  8351 0000540D BF08000000              	mov rdi, 8 * 1	; extended env
  8352 00005412 E88AFF0000              	call malloc
  8353 00005417 488B7D10                	mov rdi, ENV
  8354 0000541B BE00000000              	mov rsi, 0
  8355 00005420 BA01000000              	mov rdx, 1
  8356                                  .L_lambda_simple_env_loop_01a7:	; ext_env[i + 1] <-- env[i]
  8357 00005425 4883FE00                	cmp rsi, 0
  8358 00005429 7410                    	je .L_lambda_simple_env_end_01a7
  8359 0000542B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8360 0000542F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8361 00005433 48FFC6                  	inc rsi
  8362 00005436 48FFC2                  	inc rdx
  8363 00005439 EBEA                    	jmp .L_lambda_simple_env_loop_01a7
  8364                                  .L_lambda_simple_env_end_01a7:
  8365 0000543B 5B                      	pop rbx
  8366 0000543C BE00000000              	mov rsi, 0
  8367                                  .L_lambda_simple_params_loop_01a7:	; copy params
  8368 00005441 4883FE00                	cmp rsi, 0
  8369 00005445 740E                    	je .L_lambda_simple_params_end_01a7
  8370 00005447 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8371 0000544C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8372 00005450 48FFC6                  	inc rsi
  8373 00005453 EBEC                    	jmp .L_lambda_simple_params_loop_01a7
  8374                                  .L_lambda_simple_params_end_01a7:
  8375 00005455 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8376 00005458 4889C3                  	mov rbx, rax
  8377 0000545B 58                      	pop rax
  8378 0000545C C60004                  	mov byte [rax], T_closure
  8379 0000545F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8380 00005463 48C74009[70540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a7
  8381 0000546B E95F040000              	jmp .L_lambda_simple_end_01a7
  8382                                  .L_lambda_simple_code_01a7:	; lambda-simple body
  8383 00005470 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8384 00005476 740B                    	je .L_lambda_simple_arity_check_ok_01a7
  8385 00005478 FF742410                	push qword [rsp + 8 * 2]
  8386 0000547C 6A01                    	push 1
  8387 0000547E E9D7FE0000              	jmp L_error_incorrect_arity_simple
  8388                                  .L_lambda_simple_arity_check_ok_01a7:
  8389 00005483 C8000000                	enter 0, 0
  8390 00005487 BF08000000              	mov rdi, 8 * 1
  8391 0000548C E810FF0000              	call malloc
  8392 00005491 488B5D20                	mov rbx, PARAM(0)
  8393 00005495 488918                  	mov qword [rax], rbx
  8394 00005498 48894520                	mov PARAM(0), rax
  8395 0000549C 48B8-                   	mov rax, sob_void
  8395 0000549E [0000000000000000] 
  8396                                  
  8397 000054A6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8398 000054AB E8F1FE0000              	call malloc
  8399 000054B0 50                      	push rax
  8400 000054B1 BF08000000              	mov rdi, 8 * 1	; new rib
  8401 000054B6 E8E6FE0000              	call malloc
  8402 000054BB 50                      	push rax
  8403 000054BC BF10000000              	mov rdi, 8 * 2	; extended env
  8404 000054C1 E8DBFE0000              	call malloc
  8405 000054C6 488B7D10                	mov rdi, ENV
  8406 000054CA BE00000000              	mov rsi, 0
  8407 000054CF BA01000000              	mov rdx, 1
  8408                                  .L_lambda_simple_env_loop_01a8:	; ext_env[i + 1] <-- env[i]
  8409 000054D4 4883FE01                	cmp rsi, 1
  8410 000054D8 7410                    	je .L_lambda_simple_env_end_01a8
  8411 000054DA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8412 000054DE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8413 000054E2 48FFC6                  	inc rsi
  8414 000054E5 48FFC2                  	inc rdx
  8415 000054E8 EBEA                    	jmp .L_lambda_simple_env_loop_01a8
  8416                                  .L_lambda_simple_env_end_01a8:
  8417 000054EA 5B                      	pop rbx
  8418 000054EB BE00000000              	mov rsi, 0
  8419                                  .L_lambda_simple_params_loop_01a8:	; copy params
  8420 000054F0 4883FE01                	cmp rsi, 1
  8421 000054F4 740E                    	je .L_lambda_simple_params_end_01a8
  8422 000054F6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8423 000054FB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8424 000054FF 48FFC6                  	inc rsi
  8425 00005502 EBEC                    	jmp .L_lambda_simple_params_loop_01a8
  8426                                  .L_lambda_simple_params_end_01a8:
  8427 00005504 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8428 00005507 4889C3                  	mov rbx, rax
  8429 0000550A 58                      	pop rax
  8430 0000550B C60004                  	mov byte [rax], T_closure
  8431 0000550E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8432 00005512 48C74009[1F550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a8
  8433 0000551A E9B1010000              	jmp .L_lambda_simple_end_01a8
  8434                                  .L_lambda_simple_code_01a8:	; lambda-simple body
  8435 0000551F 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8436 00005525 740B                    	je .L_lambda_simple_arity_check_ok_01a8
  8437 00005527 FF742410                	push qword [rsp + 8 * 2]
  8438 0000552B 6A03                    	push 3
  8439 0000552D E928FE0000              	jmp L_error_incorrect_arity_simple
  8440                                  .L_lambda_simple_arity_check_ok_01a8:
  8441 00005532 C8000000                	enter 0, 0
  8442                                  	; preparing a non-tail-call
  8443 00005536 488B4530                	mov rax, PARAM(2)	; param ss
  8444 0000553A 50                      	push rax
  8445 0000553B 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
  8446 00005543 803805                  	cmp byte [rax], T_undefined
  8447 00005546 0F8428FD0000            	je L_error_fvar_undefined
  8448 0000554C 50                      	push rax
  8449 0000554D 6A02                    	push 2	; arg count
  8450 0000554F 488B0425[25150000]      	mov rax, qword [free_var_110]	; free var ormap
  8451 00005557 803805                  	cmp byte [rax], T_undefined
  8452 0000555A 0F8414FD0000            	je L_error_fvar_undefined
  8453 00005560 803804                  	cmp byte [rax], T_closure
  8454 00005563 0F858FFD0000            	jne L_error_non_closure
  8455 00005569 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8456 0000556C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8457 0000556F 483D[02000000]          	cmp rax, sob_boolean_false
  8458 00005575 7409                    	je .L_if_else_0120
  8459 00005577 488B4528                	mov rax, PARAM(1)	; param unit
  8460 0000557B E94C010000              	jmp .L_if_end_0120
  8461                                  .L_if_else_0120:
  8462                                  	; Initiating tail-call optimization
  8463                                  	; preparing a non-tail-call
  8464                                  	; preparing a non-tail-call
  8465 00005580 48B8-                   	mov rax, L_constants + 1
  8465 00005582 [0100000000000000] 
  8466 0000558A 50                      	push rax
  8467                                  	; preparing a non-tail-call
  8468                                  	; preparing a non-tail-call
  8469 0000558B 488B4530                	mov rax, PARAM(2)	; param ss
  8470 0000558F 50                      	push rax
  8471 00005590 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
  8472 00005598 803805                  	cmp byte [rax], T_undefined
  8473 0000559B 0F84D3FC0000            	je L_error_fvar_undefined
  8474 000055A1 50                      	push rax
  8475 000055A2 6A02                    	push 2	; arg count
  8476 000055A4 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  8477 000055AC 803805                  	cmp byte [rax], T_undefined
  8478 000055AF 0F84BFFC0000            	je L_error_fvar_undefined
  8479 000055B5 803804                  	cmp byte [rax], T_closure
  8480 000055B8 0F853AFD0000            	jne L_error_non_closure
  8481 000055BE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8482 000055C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8483 000055C4 50                      	push rax
  8484 000055C5 488B4528                	mov rax, PARAM(1)	; param unit
  8485 000055C9 50                      	push rax
  8486 000055CA 488B4520                	mov rax, PARAM(0)	; param f
  8487 000055CE 50                      	push rax
  8488 000055CF 6A03                    	push 3	; arg count
  8489 000055D1 488B4510                	mov rax, ENV
  8490 000055D5 488B00                  	mov rax, qword [rax + 8 * 0]
  8491 000055D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8492 000055DB 488B00                  	mov rax, qword [rax]
  8493 000055DE 803804                  	cmp byte [rax], T_closure
  8494 000055E1 0F8511FD0000            	jne L_error_non_closure
  8495 000055E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8496 000055EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8497 000055ED 50                      	push rax
  8498 000055EE 6A02                    	push 2	; arg count
  8499 000055F0 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
  8500 000055F8 803805                  	cmp byte [rax], T_undefined
  8501 000055FB 0F8473FC0000            	je L_error_fvar_undefined
  8502 00005601 803804                  	cmp byte [rax], T_closure
  8503 00005604 0F85EEFC0000            	jne L_error_non_closure
  8504 0000560A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8505 0000560D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8506 00005610 50                      	push rax
  8507                                  	; preparing a non-tail-call
  8508 00005611 488B4530                	mov rax, PARAM(2)	; param ss
  8509 00005615 50                      	push rax
  8510 00005616 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
  8511 0000561E 803805                  	cmp byte [rax], T_undefined
  8512 00005621 0F844DFC0000            	je L_error_fvar_undefined
  8513 00005627 50                      	push rax
  8514 00005628 6A02                    	push 2	; arg count
  8515 0000562A 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
  8516 00005632 803805                  	cmp byte [rax], T_undefined
  8517 00005635 0F8439FC0000            	je L_error_fvar_undefined
  8518 0000563B 803804                  	cmp byte [rax], T_closure
  8519 0000563E 0F85B4FC0000            	jne L_error_non_closure
  8520 00005644 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8521 00005647 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8522 0000564A 50                      	push rax
  8523 0000564B 6A02                    	push 2	; arg count
  8524 0000564D 488B0425[F70F0000]      	mov rax, qword [free_var_32]	; free var append
  8525 00005655 803805                  	cmp byte [rax], T_undefined
  8526 00005658 0F8416FC0000            	je L_error_fvar_undefined
  8527 0000565E 803804                  	cmp byte [rax], T_closure
  8528 00005661 0F8591FC0000            	jne L_error_non_closure
  8529 00005667 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8530 0000566A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8531 0000566D 50                      	push rax
  8532 0000566E 488B4520                	mov rax, PARAM(0)	; param f
  8533 00005672 50                      	push rax
  8534 00005673 6A02                    	push 2	; Number of arguments
  8535 00005675 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
  8536 0000567D 803805                  	cmp byte [rax], T_undefined
  8537 00005680 0F84EEFB0000            	je L_error_fvar_undefined
  8538 00005686 803804                  	cmp byte [rax], T_closure
  8539 00005689 0F8569FC0000            	jne L_error_non_closure
  8540 0000568F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8541 00005692 FF7508                  	push qword [rbp + 8]
  8542 00005695 FF7500                  	push qword [rbp]
  8543 00005698 41BA06000000            	mov r10, 2 + 4
  8544 0000569E 4C8B4518                	mov r8, COUNT
  8545 000056A2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8546 000056A7 4C8D4DF8                	lea r9, [rbp - 8]
  8547                                  .L_tc_recycle_frame_loop_01fb:
  8548 000056AB 4983FA00                	cmp r10, 0
  8549 000056AF 7413                    	je .L_tc_recycle_frame_done_01fb
  8550 000056B1 4D8B19                  	mov r11, qword [r9]
  8551 000056B4 4D8918                  	mov qword [r8], r11
  8552 000056B7 49FFCA                  	dec r10
  8553 000056BA 4983E808                	sub r8, 8
  8554 000056BE 4983E908                	sub r9, 8
  8555 000056C2 EBE7                    	jmp .L_tc_recycle_frame_loop_01fb
  8556                                  .L_tc_recycle_frame_done_01fb:
  8557 000056C4 498D6008                	lea rsp, [r8 + 8]
  8558 000056C8 5D                      	pop rbp
  8559 000056C9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8560                                  .L_if_end_0120:
  8561 000056CC C9                      	leave
  8562 000056CD C22800                  	ret AND_KILL_FRAME(3)
  8563                                  .L_lambda_simple_end_01a8:	; new closure is in rax
  8564 000056D0 50                      	push rax
  8565 000056D1 488B4520                	mov rax, PARAM(0)	; param run
  8566 000056D5 8F00                    	pop qword [rax]
  8567 000056D7 48B8-                   	mov rax, sob_void
  8567 000056D9 [0000000000000000] 
  8568                                  
  8569 000056E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8570 000056E6 E8B6FC0000              	call malloc
  8571 000056EB 50                      	push rax
  8572 000056EC BF08000000              	mov rdi, 8 * 1	; new rib
  8573 000056F1 E8ABFC0000              	call malloc
  8574 000056F6 50                      	push rax
  8575 000056F7 BF10000000              	mov rdi, 8 * 2	; extended env
  8576 000056FC E8A0FC0000              	call malloc
  8577 00005701 488B7D10                	mov rdi, ENV
  8578 00005705 BE00000000              	mov rsi, 0
  8579 0000570A BA01000000              	mov rdx, 1
  8580                                  .L_lambda_opt_env_loop_003b:	; ext_env[i + 1] <-- env[i]
  8581 0000570F 4883FE01                	cmp rsi, 1
  8582 00005713 7410                    	je .L_lambda_opt_env_end_003b
  8583 00005715 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8584 00005719 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8585 0000571D 48FFC6                  	inc rsi
  8586 00005720 48FFC2                  	inc rdx
  8587 00005723 EBEA                    	jmp .L_lambda_opt_env_loop_003b
  8588                                  .L_lambda_opt_env_end_003b:
  8589 00005725 5B                      	pop rbx
  8590 00005726 BE00000000              	mov rsi, 0
  8591                                  .L_lambda_opt_params_loop_003b:	; copy params
  8592 0000572B 4883FE01                	cmp rsi, 1
  8593 0000572F 740E                    	je .L_lambda_opt_params_end_003b
  8594 00005731 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8595 00005736 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8596 0000573A 48FFC6                  	inc rsi
  8597 0000573D EBEC                    	jmp .L_lambda_opt_params_loop_003b
  8598                                  .L_lambda_opt_params_end_003b:
  8599 0000573F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8600 00005742 4889C3                  	mov rbx, rax
  8601 00005745 58                      	pop rax
  8602 00005746 C60004                  	mov byte [rax], T_closure
  8603 00005749 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8604 0000574D 48C74009[5A570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003b
  8605 00005755 E971010000              	jmp .L_lambda_opt_end_003b
  8606                                  .L_lambda_opt_code_003b:
  8607 0000575A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  8608 0000575F 4983FA02                	cmp r10, 2         ; Compare r10 (argument count) with required params
  8609 00005763 7407                    	je .L_lambda_opt_arity_check_exact_003b	; Jump if arity matches
  8610 00005765 7F4C                    	jg .L_lambda_opt_arity_check_more_003b	; Jump if more arguments passed
  8611 00005767 E902FC0000              	jmp L_error_incorrect_arity_opt
  8612                                  .L_lambda_opt_arity_check_exact_003b:
  8613 0000576C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  8614 0000576F 4983C603                	add r14, 3 ; add 3 first stack values
  8615 00005773 41BF00000000            	mov r15, 0 ; r15 = index
  8616 00005779 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  8617 0000577D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  8618 00005785 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003b
  8619                                  .L_lambda_opt_stack_shrink_loop_003b:
  8620 00005787 4983FE00                	cmp r14, 0
  8621 0000578B 7E11                    	jle .L_make_lambda_opt_exact_finish_003b
  8622 0000578D 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  8623 00005792 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  8624 00005796 49FFCE                  	dec r14 ; next loop value
  8625 00005799 49FFC7                  	inc r15 ; update i
  8626 0000579C EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003b
  8627                                  .L_make_lambda_opt_exact_finish_003b:
  8628 0000579E 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  8629 000057A6 49FFC2                  	inc r10
  8630 000057A9 4C89542410              	mov qword [rsp + 8 * 2], r10
  8631 000057AE E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003b
  8632                                  .L_lambda_opt_arity_check_more_003b:
  8633 000057B3 4D89D6                  	mov r14, r10 ; r14 = num args
  8634 000057B6 4D89D7                  	mov r15, r10 ; r15 = num args
  8635 000057B9 41B902000000            	mov r9, 2; r9 = number of params 
  8636 000057BF 4D29CE                  	sub r14, r9 ; r14 = extra args
  8637 000057C2 4D01F1                  	add r9, r14 ; r9 = num args
  8638 000057C5 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  8638 000057C7 [0100000000000000] 
  8639 000057CF EB00                    	jmp .L_make_lambda_opt_arg_list_003b
  8640                                  .L_make_lambda_opt_arg_list_003b:
  8641 000057D1 4983FE00                	cmp r14, 0
  8642 000057D5 7E25                    	jle .L_make_lambda_opt_stack_fixed_003b
  8643 000057D7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  8644 000057DC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  8645 000057E1 E8BBFB0000              	call malloc                         ; Allocate memory, result in rax
  8646 000057E6 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  8647 000057E9 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  8648 000057ED 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  8649 000057F1 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  8650 000057F4 49FFC9                  	dec r9                              ; args index minus 1
  8651 000057F7 49FFCE                  	dec r14                             ; next iteration
  8652 000057FA EBD5                    	jmp .L_make_lambda_opt_arg_list_003b
  8653                                  .L_make_lambda_opt_stack_fixed_003b:
  8654 000057FC 4D89FE                  	mov r14, r15 ; r14 = num args
  8655 000057FF 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  8656 00005802 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  8657 00005806 4D89C1                  	mov r9, r8
  8658 00005809 41BA02000000            	mov r10, 2; r10 = num of params
  8659 0000580F 4D29D6                  	sub r14, r10 ; r14 = extra args
  8660 00005812 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  8661 00005815 49FFCE                  	dec r14 ; how much we need to change stack wise?
  8662 00005818 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  8663 0000581D 4D89CC                  	mov r12, r9
  8664 00005820 4D29F4                  	sub r12, r14
  8665 00005823 49FFCC                  	dec r12
  8666 00005826 49FFCC                  	dec r12
  8667 00005829 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003b
  8668                                  .L_lambda_opt_stack_shrink_loop_more_003b:
  8669 0000582B 4983F800                	cmp r8, 0
  8670 0000582F 7E16                    	jle .L_make_lambda_opt_more_finish_003b
  8671 00005831 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  8672 00005835 4D01F4                  	add r12, r14
  8673 00005838 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  8674 0000583C 49FFC8                  	dec r8 ; next iteration
  8675 0000583F 4D29F4                  	sub r12, r14 ; next iteration
  8676 00005842 49FFCC                  	dec r12 ; next iteration
  8677 00005845 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003b
  8678                                  .L_make_lambda_opt_more_finish_003b:
  8679 00005847 41BA02000000            	mov r10, 2
  8680 0000584D 4AC744F41003000000      	mov qword [rsp + 8 * (r14 + 2)], 3
  8681 00005856 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  8682 0000585A 4C01F4                  	add rsp, r14  ; Add to rsp
  8683 0000585D EB00                    	jmp .L_lambda_opt_stack_adjusted_003b
  8684                                  .L_lambda_opt_stack_adjusted_003b:
  8685 0000585F C8000000                	enter 0, 0
  8686                                  	; Initiating tail-call optimization
  8687 00005863 488B4530                	mov rax, PARAM(2)	; param ss
  8688 00005867 50                      	push rax
  8689 00005868 488B4528                	mov rax, PARAM(1)	; param unit
  8690 0000586C 50                      	push rax
  8691 0000586D 488B4520                	mov rax, PARAM(0)	; param f
  8692 00005871 50                      	push rax
  8693 00005872 6A03                    	push 3	; Number of arguments
  8694 00005874 488B4510                	mov rax, ENV
  8695 00005878 488B00                  	mov rax, qword [rax + 8 * 0]
  8696 0000587B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8697 0000587E 488B00                  	mov rax, qword [rax]
  8698 00005881 803804                  	cmp byte [rax], T_closure
  8699 00005884 0F856EFA0000            	jne L_error_non_closure
  8700 0000588A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8701 0000588D FF7508                  	push qword [rbp + 8]
  8702 00005890 FF7500                  	push qword [rbp]
  8703 00005893 41BA07000000            	mov r10, 3 + 4
  8704 00005899 4C8B4518                	mov r8, COUNT
  8705 0000589D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8706 000058A2 4C8D4DF8                	lea r9, [rbp - 8]
  8707                                  .L_tc_recycle_frame_loop_01fc:
  8708 000058A6 4983FA00                	cmp r10, 0
  8709 000058AA 7413                    	je .L_tc_recycle_frame_done_01fc
  8710 000058AC 4D8B19                  	mov r11, qword [r9]
  8711 000058AF 4D8918                  	mov qword [r8], r11
  8712 000058B2 49FFCA                  	dec r10
  8713 000058B5 4983E808                	sub r8, 8
  8714 000058B9 4983E908                	sub r9, 8
  8715 000058BD EBE7                    	jmp .L_tc_recycle_frame_loop_01fc
  8716                                  .L_tc_recycle_frame_done_01fc:
  8717 000058BF 498D6008                	lea rsp, [r8 + 8]
  8718 000058C3 5D                      	pop rbp
  8719 000058C4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8720 000058C7 C9                      	leave
  8721 000058C8 C22800                  	ret AND_KILL_FRAME(3)
  8722                                  .L_lambda_opt_end_003b:	; new closure is in rax
  8723 000058CB C9                      	leave
  8724 000058CC C21800                  	ret AND_KILL_FRAME(1)
  8725                                  .L_lambda_simple_end_01a7:	; new closure is in rax
  8726 000058CF 803804                  	cmp byte [rax], T_closure
  8727 000058D2 0F8520FA0000            	jne L_error_non_closure
  8728 000058D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8729 000058DB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8730 000058DE 48890425[8D130000]      	mov qword [free_var_86], rax
  8731 000058E6 48B8-                   	mov rax, sob_void
  8731 000058E8 [0000000000000000] 
  8732                                  
  8733 000058F0 4889C7                  	mov rdi, rax
  8734 000058F3 E8FEFC0000              	call print_sexpr_if_not_void
  8735                                  	; preparing a non-tail-call
  8736 000058F8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8737 000058FD E89FFA0000              	call malloc
  8738 00005902 50                      	push rax
  8739 00005903 BF00000000              	mov rdi, 8 * 0	; new rib
  8740 00005908 E894FA0000              	call malloc
  8741 0000590D 50                      	push rax
  8742 0000590E BF08000000              	mov rdi, 8 * 1	; extended env
  8743 00005913 E889FA0000              	call malloc
  8744 00005918 488B7D10                	mov rdi, ENV
  8745 0000591C BE00000000              	mov rsi, 0
  8746 00005921 BA01000000              	mov rdx, 1
  8747                                  .L_lambda_simple_env_loop_01a9:	; ext_env[i + 1] <-- env[i]
  8748 00005926 4883FE00                	cmp rsi, 0
  8749 0000592A 7410                    	je .L_lambda_simple_env_end_01a9
  8750 0000592C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8751 00005930 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8752 00005934 48FFC6                  	inc rsi
  8753 00005937 48FFC2                  	inc rdx
  8754 0000593A EBEA                    	jmp .L_lambda_simple_env_loop_01a9
  8755                                  .L_lambda_simple_env_end_01a9:
  8756 0000593C 5B                      	pop rbx
  8757 0000593D BE00000000              	mov rsi, 0
  8758                                  .L_lambda_simple_params_loop_01a9:	; copy params
  8759 00005942 4883FE00                	cmp rsi, 0
  8760 00005946 740E                    	je .L_lambda_simple_params_end_01a9
  8761 00005948 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8762 0000594D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8763 00005951 48FFC6                  	inc rsi
  8764 00005954 EBEC                    	jmp .L_lambda_simple_params_loop_01a9
  8765                                  .L_lambda_simple_params_end_01a9:
  8766 00005956 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8767 00005959 4889C3                  	mov rbx, rax
  8768 0000595C 58                      	pop rax
  8769 0000595D C60004                  	mov byte [rax], T_closure
  8770 00005960 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8771 00005964 48C74009[71590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01a9
  8772 0000596C E98A000000              	jmp .L_lambda_simple_end_01a9
  8773                                  .L_lambda_simple_code_01a9:	; lambda-simple body
  8774 00005971 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8775 00005977 740B                    	je .L_lambda_simple_arity_check_ok_01a9
  8776 00005979 FF742410                	push qword [rsp + 8 * 2]
  8777 0000597D 6A00                    	push 0
  8778 0000597F E9D6F90000              	jmp L_error_incorrect_arity_simple
  8779                                  .L_lambda_simple_arity_check_ok_01a9:
  8780 00005984 C8000000                	enter 0, 0
  8781                                  	; Initiating tail-call optimization
  8782 00005988 48B8-                   	mov rax, L_constants + 2187
  8782 0000598A [8B08000000000000] 
  8783 00005992 50                      	push rax
  8784 00005993 48B8-                   	mov rax, L_constants + 2178
  8784 00005995 [8208000000000000] 
  8785 0000599D 50                      	push rax
  8786 0000599E 6A02                    	push 2	; Number of arguments
  8787 000059A0 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
  8788 000059A8 803805                  	cmp byte [rax], T_undefined
  8789 000059AB 0F84C3F80000            	je L_error_fvar_undefined
  8790 000059B1 803804                  	cmp byte [rax], T_closure
  8791 000059B4 0F853EF90000            	jne L_error_non_closure
  8792 000059BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8793 000059BD FF7508                  	push qword [rbp + 8]
  8794 000059C0 FF7500                  	push qword [rbp]
  8795 000059C3 41BA06000000            	mov r10, 2 + 4
  8796 000059C9 4C8B4518                	mov r8, COUNT
  8797 000059CD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8798 000059D2 4C8D4DF8                	lea r9, [rbp - 8]
  8799                                  .L_tc_recycle_frame_loop_01fd:
  8800 000059D6 4983FA00                	cmp r10, 0
  8801 000059DA 7413                    	je .L_tc_recycle_frame_done_01fd
  8802 000059DC 4D8B19                  	mov r11, qword [r9]
  8803 000059DF 4D8918                  	mov qword [r8], r11
  8804 000059E2 49FFCA                  	dec r10
  8805 000059E5 4983E808                	sub r8, 8
  8806 000059E9 4983E908                	sub r9, 8
  8807 000059ED EBE7                    	jmp .L_tc_recycle_frame_loop_01fd
  8808                                  .L_tc_recycle_frame_done_01fd:
  8809 000059EF 498D6008                	lea rsp, [r8 + 8]
  8810 000059F3 5D                      	pop rbp
  8811 000059F4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8812 000059F7 C9                      	leave
  8813 000059F8 C21000                  	ret AND_KILL_FRAME(0)
  8814                                  .L_lambda_simple_end_01a9:	; new closure is in rax
  8815 000059FB 50                      	push rax
  8816 000059FC 6A01                    	push 1	; arg count
  8817 000059FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8818 00005A03 E899F90000              	call malloc
  8819 00005A08 50                      	push rax
  8820 00005A09 BF00000000              	mov rdi, 8 * 0	; new rib
  8821 00005A0E E88EF90000              	call malloc
  8822 00005A13 50                      	push rax
  8823 00005A14 BF08000000              	mov rdi, 8 * 1	; extended env
  8824 00005A19 E883F90000              	call malloc
  8825 00005A1E 488B7D10                	mov rdi, ENV
  8826 00005A22 BE00000000              	mov rsi, 0
  8827 00005A27 BA01000000              	mov rdx, 1
  8828                                  .L_lambda_simple_env_loop_01aa:	; ext_env[i + 1] <-- env[i]
  8829 00005A2C 4883FE00                	cmp rsi, 0
  8830 00005A30 7410                    	je .L_lambda_simple_env_end_01aa
  8831 00005A32 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8832 00005A36 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8833 00005A3A 48FFC6                  	inc rsi
  8834 00005A3D 48FFC2                  	inc rdx
  8835 00005A40 EBEA                    	jmp .L_lambda_simple_env_loop_01aa
  8836                                  .L_lambda_simple_env_end_01aa:
  8837 00005A42 5B                      	pop rbx
  8838 00005A43 BE00000000              	mov rsi, 0
  8839                                  .L_lambda_simple_params_loop_01aa:	; copy params
  8840 00005A48 4883FE00                	cmp rsi, 0
  8841 00005A4C 740E                    	je .L_lambda_simple_params_end_01aa
  8842 00005A4E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8843 00005A53 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8844 00005A57 48FFC6                  	inc rsi
  8845 00005A5A EBEC                    	jmp .L_lambda_simple_params_loop_01aa
  8846                                  .L_lambda_simple_params_end_01aa:
  8847 00005A5C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8848 00005A5F 4889C3                  	mov rbx, rax
  8849 00005A62 58                      	pop rax
  8850 00005A63 C60004                  	mov byte [rax], T_closure
  8851 00005A66 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8852 00005A6A 48C74009[775A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01aa
  8853 00005A72 E9A30B0000              	jmp .L_lambda_simple_end_01aa
  8854                                  .L_lambda_simple_code_01aa:	; lambda-simple body
  8855 00005A77 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8856 00005A7D 740B                    	je .L_lambda_simple_arity_check_ok_01aa
  8857 00005A7F FF742410                	push qword [rsp + 8 * 2]
  8858 00005A83 6A01                    	push 1
  8859 00005A85 E9D0F80000              	jmp L_error_incorrect_arity_simple
  8860                                  .L_lambda_simple_arity_check_ok_01aa:
  8861 00005A8A C8000000                	enter 0, 0
  8862                                  	; Initiating tail-call optimization
  8863 00005A8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8864 00005A93 E809F90000              	call malloc
  8865 00005A98 50                      	push rax
  8866 00005A99 BF08000000              	mov rdi, 8 * 1	; new rib
  8867 00005A9E E8FEF80000              	call malloc
  8868 00005AA3 50                      	push rax
  8869 00005AA4 BF10000000              	mov rdi, 8 * 2	; extended env
  8870 00005AA9 E8F3F80000              	call malloc
  8871 00005AAE 488B7D10                	mov rdi, ENV
  8872 00005AB2 BE00000000              	mov rsi, 0
  8873 00005AB7 BA01000000              	mov rdx, 1
  8874                                  .L_lambda_simple_env_loop_01ab:	; ext_env[i + 1] <-- env[i]
  8875 00005ABC 4883FE01                	cmp rsi, 1
  8876 00005AC0 7410                    	je .L_lambda_simple_env_end_01ab
  8877 00005AC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8878 00005AC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8879 00005ACA 48FFC6                  	inc rsi
  8880 00005ACD 48FFC2                  	inc rdx
  8881 00005AD0 EBEA                    	jmp .L_lambda_simple_env_loop_01ab
  8882                                  .L_lambda_simple_env_end_01ab:
  8883 00005AD2 5B                      	pop rbx
  8884 00005AD3 BE00000000              	mov rsi, 0
  8885                                  .L_lambda_simple_params_loop_01ab:	; copy params
  8886 00005AD8 4883FE01                	cmp rsi, 1
  8887 00005ADC 740E                    	je .L_lambda_simple_params_end_01ab
  8888 00005ADE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8889 00005AE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8890 00005AE7 48FFC6                  	inc rsi
  8891 00005AEA EBEC                    	jmp .L_lambda_simple_params_loop_01ab
  8892                                  .L_lambda_simple_params_end_01ab:
  8893 00005AEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8894 00005AEF 4889C3                  	mov rbx, rax
  8895 00005AF2 58                      	pop rax
  8896 00005AF3 C60004                  	mov byte [rax], T_closure
  8897 00005AF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8898 00005AFA 48C74009[075B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ab
  8899 00005B02 E938080000              	jmp .L_lambda_simple_end_01ab
  8900                                  .L_lambda_simple_code_01ab:	; lambda-simple body
  8901 00005B07 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8902 00005B0D 740B                    	je .L_lambda_simple_arity_check_ok_01ab
  8903 00005B0F FF742410                	push qword [rsp + 8 * 2]
  8904 00005B13 6A02                    	push 2
  8905 00005B15 E940F80000              	jmp L_error_incorrect_arity_simple
  8906                                  .L_lambda_simple_arity_check_ok_01ab:
  8907 00005B1A C8000000                	enter 0, 0
  8908                                  	; preparing a non-tail-call
  8909 00005B1E 488B4520                	mov rax, PARAM(0)	; param a
  8910 00005B22 50                      	push rax
  8911 00005B23 6A01                    	push 1	; arg count
  8912 00005B25 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  8913 00005B2D 803805                  	cmp byte [rax], T_undefined
  8914 00005B30 0F843EF70000            	je L_error_fvar_undefined
  8915 00005B36 803804                  	cmp byte [rax], T_closure
  8916 00005B39 0F85B9F70000            	jne L_error_non_closure
  8917 00005B3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8918 00005B42 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8919 00005B45 483D[02000000]          	cmp rax, sob_boolean_false
  8920 00005B4B 0F8467020000            	je .L_if_else_012c
  8921                                  	; preparing a non-tail-call
  8922 00005B51 488B4528                	mov rax, PARAM(1)	; param b
  8923 00005B55 50                      	push rax
  8924 00005B56 6A01                    	push 1	; arg count
  8925 00005B58 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  8926 00005B60 803805                  	cmp byte [rax], T_undefined
  8927 00005B63 0F840BF70000            	je L_error_fvar_undefined
  8928 00005B69 803804                  	cmp byte [rax], T_closure
  8929 00005B6C 0F8586F70000            	jne L_error_non_closure
  8930 00005B72 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8931 00005B75 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8932 00005B78 483D[02000000]          	cmp rax, sob_boolean_false
  8933 00005B7E 7468                    	je .L_if_else_0123
  8934                                  	; Initiating tail-call optimization
  8935 00005B80 488B4528                	mov rax, PARAM(1)	; param b
  8936 00005B84 50                      	push rax
  8937 00005B85 488B4520                	mov rax, PARAM(0)	; param a
  8938 00005B89 50                      	push rax
  8939 00005B8A 6A02                    	push 2	; Number of arguments
  8940 00005B8C 488B0425[920E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  8941 00005B94 803805                  	cmp byte [rax], T_undefined
  8942 00005B97 0F84D7F60000            	je L_error_fvar_undefined
  8943 00005B9D 803804                  	cmp byte [rax], T_closure
  8944 00005BA0 0F8552F70000            	jne L_error_non_closure
  8945 00005BA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8946 00005BA9 FF7508                  	push qword [rbp + 8]
  8947 00005BAC FF7500                  	push qword [rbp]
  8948 00005BAF 41BA06000000            	mov r10, 2 + 4
  8949 00005BB5 4C8B4518                	mov r8, COUNT
  8950 00005BB9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  8951 00005BBE 4C8D4DF8                	lea r9, [rbp - 8]
  8952                                  .L_tc_recycle_frame_loop_01fe:
  8953 00005BC2 4983FA00                	cmp r10, 0
  8954 00005BC6 7413                    	je .L_tc_recycle_frame_done_01fe
  8955 00005BC8 4D8B19                  	mov r11, qword [r9]
  8956 00005BCB 4D8918                  	mov qword [r8], r11
  8957 00005BCE 49FFCA                  	dec r10
  8958 00005BD1 4983E808                	sub r8, 8
  8959 00005BD5 4983E908                	sub r9, 8
  8960 00005BD9 EBE7                    	jmp .L_tc_recycle_frame_loop_01fe
  8961                                  .L_tc_recycle_frame_done_01fe:
  8962 00005BDB 498D6008                	lea rsp, [r8 + 8]
  8963 00005BDF 5D                      	pop rbp
  8964 00005BE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8965 00005BE3 E9CB010000              	jmp .L_if_end_0123
  8966                                  .L_if_else_0123:
  8967                                  	; preparing a non-tail-call
  8968 00005BE8 488B4528                	mov rax, PARAM(1)	; param b
  8969 00005BEC 50                      	push rax
  8970 00005BED 6A01                    	push 1	; arg count
  8971 00005BEF 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
  8972 00005BF7 803805                  	cmp byte [rax], T_undefined
  8973 00005BFA 0F8474F60000            	je L_error_fvar_undefined
  8974 00005C00 803804                  	cmp byte [rax], T_closure
  8975 00005C03 0F85EFF60000            	jne L_error_non_closure
  8976 00005C09 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8977 00005C0C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8978 00005C0F 483D[02000000]          	cmp rax, sob_boolean_false
  8979 00005C15 0F848B000000            	je .L_if_else_0122
  8980                                  	; Initiating tail-call optimization
  8981 00005C1B 488B4528                	mov rax, PARAM(1)	; param b
  8982 00005C1F 50                      	push rax
  8983                                  	; preparing a non-tail-call
  8984 00005C20 488B4520                	mov rax, PARAM(0)	; param a
  8985 00005C24 50                      	push rax
  8986 00005C25 6A01                    	push 1	; arg count
  8987 00005C27 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  8988 00005C2F 803805                  	cmp byte [rax], T_undefined
  8989 00005C32 0F843CF60000            	je L_error_fvar_undefined
  8990 00005C38 803804                  	cmp byte [rax], T_closure
  8991 00005C3B 0F85B7F60000            	jne L_error_non_closure
  8992 00005C41 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8993 00005C44 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8994 00005C47 50                      	push rax
  8995 00005C48 6A02                    	push 2	; Number of arguments
  8996 00005C4A 488B0425[700E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8997 00005C52 803805                  	cmp byte [rax], T_undefined
  8998 00005C55 0F8419F60000            	je L_error_fvar_undefined
  8999 00005C5B 803804                  	cmp byte [rax], T_closure
  9000 00005C5E 0F8594F60000            	jne L_error_non_closure
  9001 00005C64 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9002 00005C67 FF7508                  	push qword [rbp + 8]
  9003 00005C6A FF7500                  	push qword [rbp]
  9004 00005C6D 41BA06000000            	mov r10, 2 + 4
  9005 00005C73 4C8B4518                	mov r8, COUNT
  9006 00005C77 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9007 00005C7C 4C8D4DF8                	lea r9, [rbp - 8]
  9008                                  .L_tc_recycle_frame_loop_01ff:
  9009 00005C80 4983FA00                	cmp r10, 0
  9010 00005C84 7413                    	je .L_tc_recycle_frame_done_01ff
  9011 00005C86 4D8B19                  	mov r11, qword [r9]
  9012 00005C89 4D8918                  	mov qword [r8], r11
  9013 00005C8C 49FFCA                  	dec r10
  9014 00005C8F 4983E808                	sub r8, 8
  9015 00005C93 4983E908                	sub r9, 8
  9016 00005C97 EBE7                    	jmp .L_tc_recycle_frame_loop_01ff
  9017                                  .L_tc_recycle_frame_done_01ff:
  9018 00005C99 498D6008                	lea rsp, [r8 + 8]
  9019 00005C9D 5D                      	pop rbp
  9020 00005C9E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9021 00005CA1 E90D010000              	jmp .L_if_end_0122
  9022                                  .L_if_else_0122:
  9023                                  	; preparing a non-tail-call
  9024 00005CA6 488B4528                	mov rax, PARAM(1)	; param b
  9025 00005CAA 50                      	push rax
  9026 00005CAB 6A01                    	push 1	; arg count
  9027 00005CAD 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
  9028 00005CB5 803805                  	cmp byte [rax], T_undefined
  9029 00005CB8 0F84B6F50000            	je L_error_fvar_undefined
  9030 00005CBE 803804                  	cmp byte [rax], T_closure
  9031 00005CC1 0F8531F60000            	jne L_error_non_closure
  9032 00005CC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9033 00005CCA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9034 00005CCD 483D[02000000]          	cmp rax, sob_boolean_false
  9035 00005CD3 0F8488000000            	je .L_if_else_0121
  9036                                  	; Initiating tail-call optimization
  9037 00005CD9 488B4528                	mov rax, PARAM(1)	; param b
  9038 00005CDD 50                      	push rax
  9039                                  	; preparing a non-tail-call
  9040 00005CDE 488B4520                	mov rax, PARAM(0)	; param a
  9041 00005CE2 50                      	push rax
  9042 00005CE3 6A01                    	push 1	; arg count
  9043 00005CE5 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9044 00005CED 803805                  	cmp byte [rax], T_undefined
  9045 00005CF0 0F847EF50000            	je L_error_fvar_undefined
  9046 00005CF6 803804                  	cmp byte [rax], T_closure
  9047 00005CF9 0F85F9F50000            	jne L_error_non_closure
  9048 00005CFF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9049 00005D02 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9050 00005D05 50                      	push rax
  9051 00005D06 6A02                    	push 2	; Number of arguments
  9052 00005D08 488B0425[810E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9053 00005D10 803805                  	cmp byte [rax], T_undefined
  9054 00005D13 0F845BF50000            	je L_error_fvar_undefined
  9055 00005D19 803804                  	cmp byte [rax], T_closure
  9056 00005D1C 0F85D6F50000            	jne L_error_non_closure
  9057 00005D22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9058 00005D25 FF7508                  	push qword [rbp + 8]
  9059 00005D28 FF7500                  	push qword [rbp]
  9060 00005D2B 41BA06000000            	mov r10, 2 + 4
  9061 00005D31 4C8B4518                	mov r8, COUNT
  9062 00005D35 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9063 00005D3A 4C8D4DF8                	lea r9, [rbp - 8]
  9064                                  .L_tc_recycle_frame_loop_0200:
  9065 00005D3E 4983FA00                	cmp r10, 0
  9066 00005D42 7413                    	je .L_tc_recycle_frame_done_0200
  9067 00005D44 4D8B19                  	mov r11, qword [r9]
  9068 00005D47 4D8918                  	mov qword [r8], r11
  9069 00005D4A 49FFCA                  	dec r10
  9070 00005D4D 4983E808                	sub r8, 8
  9071 00005D51 4983E908                	sub r9, 8
  9072 00005D55 EBE7                    	jmp .L_tc_recycle_frame_loop_0200
  9073                                  .L_tc_recycle_frame_done_0200:
  9074 00005D57 498D6008                	lea rsp, [r8 + 8]
  9075 00005D5B 5D                      	pop rbp
  9076 00005D5C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9077 00005D5F EB52                    	jmp .L_if_end_0121
  9078                                  .L_if_else_0121:
  9079                                  	; Initiating tail-call optimization
  9080 00005D61 6A00                    	push 0	; Number of arguments
  9081 00005D63 488B4510                	mov rax, ENV
  9082 00005D67 488B00                  	mov rax, qword [rax + 8 * 0]
  9083 00005D6A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9084 00005D6D 803804                  	cmp byte [rax], T_closure
  9085 00005D70 0F8582F50000            	jne L_error_non_closure
  9086 00005D76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9087 00005D79 FF7508                  	push qword [rbp + 8]
  9088 00005D7C FF7500                  	push qword [rbp]
  9089 00005D7F 41BA04000000            	mov r10, 0 + 4
  9090 00005D85 4C8B4518                	mov r8, COUNT
  9091 00005D89 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9092 00005D8E 4C8D4DF8                	lea r9, [rbp - 8]
  9093                                  .L_tc_recycle_frame_loop_0201:
  9094 00005D92 4983FA00                	cmp r10, 0
  9095 00005D96 7413                    	je .L_tc_recycle_frame_done_0201
  9096 00005D98 4D8B19                  	mov r11, qword [r9]
  9097 00005D9B 4D8918                  	mov qword [r8], r11
  9098 00005D9E 49FFCA                  	dec r10
  9099 00005DA1 4983E808                	sub r8, 8
  9100 00005DA5 4983E908                	sub r9, 8
  9101 00005DA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0201
  9102                                  .L_tc_recycle_frame_done_0201:
  9103 00005DAB 498D6008                	lea rsp, [r8 + 8]
  9104 00005DAF 5D                      	pop rbp
  9105 00005DB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9106                                  .L_if_end_0121:
  9107                                  .L_if_end_0122:
  9108                                  .L_if_end_0123:
  9109 00005DB3 E983050000              	jmp .L_if_end_012c
  9110                                  .L_if_else_012c:
  9111                                  	; preparing a non-tail-call
  9112 00005DB8 488B4520                	mov rax, PARAM(0)	; param a
  9113 00005DBC 50                      	push rax
  9114 00005DBD 6A01                    	push 1	; arg count
  9115 00005DBF 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9116 00005DC7 803805                  	cmp byte [rax], T_undefined
  9117 00005DCA 0F84A4F40000            	je L_error_fvar_undefined
  9118 00005DD0 803804                  	cmp byte [rax], T_closure
  9119 00005DD3 0F851FF50000            	jne L_error_non_closure
  9120 00005DD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9121 00005DDC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9122 00005DDF 483D[02000000]          	cmp rax, sob_boolean_false
  9123 00005DE5 0F8467020000            	je .L_if_else_012b
  9124                                  	; preparing a non-tail-call
  9125 00005DEB 488B4528                	mov rax, PARAM(1)	; param b
  9126 00005DEF 50                      	push rax
  9127 00005DF0 6A01                    	push 1	; arg count
  9128 00005DF2 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  9129 00005DFA 803805                  	cmp byte [rax], T_undefined
  9130 00005DFD 0F8471F40000            	je L_error_fvar_undefined
  9131 00005E03 803804                  	cmp byte [rax], T_closure
  9132 00005E06 0F85ECF40000            	jne L_error_non_closure
  9133 00005E0C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9134 00005E0F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9135 00005E12 483D[02000000]          	cmp rax, sob_boolean_false
  9136 00005E18 0F848B000000            	je .L_if_else_0126
  9137                                  	; Initiating tail-call optimization
  9138                                  	; preparing a non-tail-call
  9139 00005E1E 488B4528                	mov rax, PARAM(1)	; param b
  9140 00005E22 50                      	push rax
  9141 00005E23 6A01                    	push 1	; arg count
  9142 00005E25 488B0425[B30F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9143 00005E2D 803805                  	cmp byte [rax], T_undefined
  9144 00005E30 0F843EF40000            	je L_error_fvar_undefined
  9145 00005E36 803804                  	cmp byte [rax], T_closure
  9146 00005E39 0F85B9F40000            	jne L_error_non_closure
  9147 00005E3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9148 00005E42 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9149 00005E45 50                      	push rax
  9150 00005E46 488B4520                	mov rax, PARAM(0)	; param a
  9151 00005E4A 50                      	push rax
  9152 00005E4B 6A02                    	push 2	; Number of arguments
  9153 00005E4D 488B0425[700E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9154 00005E55 803805                  	cmp byte [rax], T_undefined
  9155 00005E58 0F8416F40000            	je L_error_fvar_undefined
  9156 00005E5E 803804                  	cmp byte [rax], T_closure
  9157 00005E61 0F8591F40000            	jne L_error_non_closure
  9158 00005E67 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9159 00005E6A FF7508                  	push qword [rbp + 8]
  9160 00005E6D FF7500                  	push qword [rbp]
  9161 00005E70 41BA06000000            	mov r10, 2 + 4
  9162 00005E76 4C8B4518                	mov r8, COUNT
  9163 00005E7A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9164 00005E7F 4C8D4DF8                	lea r9, [rbp - 8]
  9165                                  .L_tc_recycle_frame_loop_0202:
  9166 00005E83 4983FA00                	cmp r10, 0
  9167 00005E87 7413                    	je .L_tc_recycle_frame_done_0202
  9168 00005E89 4D8B19                  	mov r11, qword [r9]
  9169 00005E8C 4D8918                  	mov qword [r8], r11
  9170 00005E8F 49FFCA                  	dec r10
  9171 00005E92 4983E808                	sub r8, 8
  9172 00005E96 4983E908                	sub r9, 8
  9173 00005E9A EBE7                    	jmp .L_tc_recycle_frame_loop_0202
  9174                                  .L_tc_recycle_frame_done_0202:
  9175 00005E9C 498D6008                	lea rsp, [r8 + 8]
  9176 00005EA0 5D                      	pop rbp
  9177 00005EA1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9178 00005EA4 E9A4010000              	jmp .L_if_end_0126
  9179                                  .L_if_else_0126:
  9180                                  	; preparing a non-tail-call
  9181 00005EA9 488B4528                	mov rax, PARAM(1)	; param b
  9182 00005EAD 50                      	push rax
  9183 00005EAE 6A01                    	push 1	; arg count
  9184 00005EB0 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9185 00005EB8 803805                  	cmp byte [rax], T_undefined
  9186 00005EBB 0F84B3F30000            	je L_error_fvar_undefined
  9187 00005EC1 803804                  	cmp byte [rax], T_closure
  9188 00005EC4 0F852EF40000            	jne L_error_non_closure
  9189 00005ECA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9190 00005ECD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9191 00005ED0 483D[02000000]          	cmp rax, sob_boolean_false
  9192 00005ED6 7468                    	je .L_if_else_0125
  9193                                  	; Initiating tail-call optimization
  9194 00005ED8 488B4528                	mov rax, PARAM(1)	; param b
  9195 00005EDC 50                      	push rax
  9196 00005EDD 488B4520                	mov rax, PARAM(0)	; param a
  9197 00005EE1 50                      	push rax
  9198 00005EE2 6A02                    	push 2	; Number of arguments
  9199 00005EE4 488B0425[700E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9200 00005EEC 803805                  	cmp byte [rax], T_undefined
  9201 00005EEF 0F847FF30000            	je L_error_fvar_undefined
  9202 00005EF5 803804                  	cmp byte [rax], T_closure
  9203 00005EF8 0F85FAF30000            	jne L_error_non_closure
  9204 00005EFE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9205 00005F01 FF7508                  	push qword [rbp + 8]
  9206 00005F04 FF7500                  	push qword [rbp]
  9207 00005F07 41BA06000000            	mov r10, 2 + 4
  9208 00005F0D 4C8B4518                	mov r8, COUNT
  9209 00005F11 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9210 00005F16 4C8D4DF8                	lea r9, [rbp - 8]
  9211                                  .L_tc_recycle_frame_loop_0203:
  9212 00005F1A 4983FA00                	cmp r10, 0
  9213 00005F1E 7413                    	je .L_tc_recycle_frame_done_0203
  9214 00005F20 4D8B19                  	mov r11, qword [r9]
  9215 00005F23 4D8918                  	mov qword [r8], r11
  9216 00005F26 49FFCA                  	dec r10
  9217 00005F29 4983E808                	sub r8, 8
  9218 00005F2D 4983E908                	sub r9, 8
  9219 00005F31 EBE7                    	jmp .L_tc_recycle_frame_loop_0203
  9220                                  .L_tc_recycle_frame_done_0203:
  9221 00005F33 498D6008                	lea rsp, [r8 + 8]
  9222 00005F37 5D                      	pop rbp
  9223 00005F38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9224 00005F3B E90D010000              	jmp .L_if_end_0125
  9225                                  .L_if_else_0125:
  9226                                  	; preparing a non-tail-call
  9227 00005F40 488B4528                	mov rax, PARAM(1)	; param b
  9228 00005F44 50                      	push rax
  9229 00005F45 6A01                    	push 1	; arg count
  9230 00005F47 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
  9231 00005F4F 803805                  	cmp byte [rax], T_undefined
  9232 00005F52 0F841CF30000            	je L_error_fvar_undefined
  9233 00005F58 803804                  	cmp byte [rax], T_closure
  9234 00005F5B 0F8597F30000            	jne L_error_non_closure
  9235 00005F61 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9236 00005F64 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9237 00005F67 483D[02000000]          	cmp rax, sob_boolean_false
  9238 00005F6D 0F8488000000            	je .L_if_else_0124
  9239                                  	; Initiating tail-call optimization
  9240 00005F73 488B4528                	mov rax, PARAM(1)	; param b
  9241 00005F77 50                      	push rax
  9242                                  	; preparing a non-tail-call
  9243 00005F78 488B4520                	mov rax, PARAM(0)	; param a
  9244 00005F7C 50                      	push rax
  9245 00005F7D 6A01                    	push 1	; arg count
  9246 00005F7F 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9247 00005F87 803805                  	cmp byte [rax], T_undefined
  9248 00005F8A 0F84E4F20000            	je L_error_fvar_undefined
  9249 00005F90 803804                  	cmp byte [rax], T_closure
  9250 00005F93 0F855FF30000            	jne L_error_non_closure
  9251 00005F99 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9252 00005F9C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9253 00005F9F 50                      	push rax
  9254 00005FA0 6A02                    	push 2	; Number of arguments
  9255 00005FA2 488B0425[810E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9256 00005FAA 803805                  	cmp byte [rax], T_undefined
  9257 00005FAD 0F84C1F20000            	je L_error_fvar_undefined
  9258 00005FB3 803804                  	cmp byte [rax], T_closure
  9259 00005FB6 0F853CF30000            	jne L_error_non_closure
  9260 00005FBC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9261 00005FBF FF7508                  	push qword [rbp + 8]
  9262 00005FC2 FF7500                  	push qword [rbp]
  9263 00005FC5 41BA06000000            	mov r10, 2 + 4
  9264 00005FCB 4C8B4518                	mov r8, COUNT
  9265 00005FCF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9266 00005FD4 4C8D4DF8                	lea r9, [rbp - 8]
  9267                                  .L_tc_recycle_frame_loop_0204:
  9268 00005FD8 4983FA00                	cmp r10, 0
  9269 00005FDC 7413                    	je .L_tc_recycle_frame_done_0204
  9270 00005FDE 4D8B19                  	mov r11, qword [r9]
  9271 00005FE1 4D8918                  	mov qword [r8], r11
  9272 00005FE4 49FFCA                  	dec r10
  9273 00005FE7 4983E808                	sub r8, 8
  9274 00005FEB 4983E908                	sub r9, 8
  9275 00005FEF EBE7                    	jmp .L_tc_recycle_frame_loop_0204
  9276                                  .L_tc_recycle_frame_done_0204:
  9277 00005FF1 498D6008                	lea rsp, [r8 + 8]
  9278 00005FF5 5D                      	pop rbp
  9279 00005FF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9280 00005FF9 EB52                    	jmp .L_if_end_0124
  9281                                  .L_if_else_0124:
  9282                                  	; Initiating tail-call optimization
  9283 00005FFB 6A00                    	push 0	; Number of arguments
  9284 00005FFD 488B4510                	mov rax, ENV
  9285 00006001 488B00                  	mov rax, qword [rax + 8 * 0]
  9286 00006004 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9287 00006007 803804                  	cmp byte [rax], T_closure
  9288 0000600A 0F85E8F20000            	jne L_error_non_closure
  9289 00006010 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9290 00006013 FF7508                  	push qword [rbp + 8]
  9291 00006016 FF7500                  	push qword [rbp]
  9292 00006019 41BA04000000            	mov r10, 0 + 4
  9293 0000601F 4C8B4518                	mov r8, COUNT
  9294 00006023 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9295 00006028 4C8D4DF8                	lea r9, [rbp - 8]
  9296                                  .L_tc_recycle_frame_loop_0205:
  9297 0000602C 4983FA00                	cmp r10, 0
  9298 00006030 7413                    	je .L_tc_recycle_frame_done_0205
  9299 00006032 4D8B19                  	mov r11, qword [r9]
  9300 00006035 4D8918                  	mov qword [r8], r11
  9301 00006038 49FFCA                  	dec r10
  9302 0000603B 4983E808                	sub r8, 8
  9303 0000603F 4983E908                	sub r9, 8
  9304 00006043 EBE7                    	jmp .L_tc_recycle_frame_loop_0205
  9305                                  .L_tc_recycle_frame_done_0205:
  9306 00006045 498D6008                	lea rsp, [r8 + 8]
  9307 00006049 5D                      	pop rbp
  9308 0000604A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9309                                  .L_if_end_0124:
  9310                                  .L_if_end_0125:
  9311                                  .L_if_end_0126:
  9312 0000604D E9E9020000              	jmp .L_if_end_012b
  9313                                  .L_if_else_012b:
  9314                                  	; preparing a non-tail-call
  9315 00006052 488B4520                	mov rax, PARAM(0)	; param a
  9316 00006056 50                      	push rax
  9317 00006057 6A01                    	push 1	; arg count
  9318 00006059 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
  9319 00006061 803805                  	cmp byte [rax], T_undefined
  9320 00006064 0F840AF20000            	je L_error_fvar_undefined
  9321 0000606A 803804                  	cmp byte [rax], T_closure
  9322 0000606D 0F8585F20000            	jne L_error_non_closure
  9323 00006073 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9324 00006076 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9325 00006079 483D[02000000]          	cmp rax, sob_boolean_false
  9326 0000607F 0F8464020000            	je .L_if_else_012a
  9327                                  	; preparing a non-tail-call
  9328 00006085 488B4528                	mov rax, PARAM(1)	; param b
  9329 00006089 50                      	push rax
  9330 0000608A 6A01                    	push 1	; arg count
  9331 0000608C 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  9332 00006094 803805                  	cmp byte [rax], T_undefined
  9333 00006097 0F84D7F10000            	je L_error_fvar_undefined
  9334 0000609D 803804                  	cmp byte [rax], T_closure
  9335 000060A0 0F8552F20000            	jne L_error_non_closure
  9336 000060A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9337 000060A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9338 000060AC 483D[02000000]          	cmp rax, sob_boolean_false
  9339 000060B2 0F848B000000            	je .L_if_else_0129
  9340                                  	; Initiating tail-call optimization
  9341                                  	; preparing a non-tail-call
  9342 000060B8 488B4528                	mov rax, PARAM(1)	; param b
  9343 000060BC 50                      	push rax
  9344 000060BD 6A01                    	push 1	; arg count
  9345 000060BF 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9346 000060C7 803805                  	cmp byte [rax], T_undefined
  9347 000060CA 0F84A4F10000            	je L_error_fvar_undefined
  9348 000060D0 803804                  	cmp byte [rax], T_closure
  9349 000060D3 0F851FF20000            	jne L_error_non_closure
  9350 000060D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9351 000060DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9352 000060DF 50                      	push rax
  9353 000060E0 488B4520                	mov rax, PARAM(0)	; param a
  9354 000060E4 50                      	push rax
  9355 000060E5 6A02                    	push 2	; Number of arguments
  9356 000060E7 488B0425[810E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9357 000060EF 803805                  	cmp byte [rax], T_undefined
  9358 000060F2 0F847CF10000            	je L_error_fvar_undefined
  9359 000060F8 803804                  	cmp byte [rax], T_closure
  9360 000060FB 0F85F7F10000            	jne L_error_non_closure
  9361 00006101 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9362 00006104 FF7508                  	push qword [rbp + 8]
  9363 00006107 FF7500                  	push qword [rbp]
  9364 0000610A 41BA06000000            	mov r10, 2 + 4
  9365 00006110 4C8B4518                	mov r8, COUNT
  9366 00006114 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9367 00006119 4C8D4DF8                	lea r9, [rbp - 8]
  9368                                  .L_tc_recycle_frame_loop_0206:
  9369 0000611D 4983FA00                	cmp r10, 0
  9370 00006121 7413                    	je .L_tc_recycle_frame_done_0206
  9371 00006123 4D8B19                  	mov r11, qword [r9]
  9372 00006126 4D8918                  	mov qword [r8], r11
  9373 00006129 49FFCA                  	dec r10
  9374 0000612C 4983E808                	sub r8, 8
  9375 00006130 4983E908                	sub r9, 8
  9376 00006134 EBE7                    	jmp .L_tc_recycle_frame_loop_0206
  9377                                  .L_tc_recycle_frame_done_0206:
  9378 00006136 498D6008                	lea rsp, [r8 + 8]
  9379 0000613A 5D                      	pop rbp
  9380 0000613B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9381 0000613E E9A4010000              	jmp .L_if_end_0129
  9382                                  .L_if_else_0129:
  9383                                  	; preparing a non-tail-call
  9384 00006143 488B4528                	mov rax, PARAM(1)	; param b
  9385 00006147 50                      	push rax
  9386 00006148 6A01                    	push 1	; arg count
  9387 0000614A 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9388 00006152 803805                  	cmp byte [rax], T_undefined
  9389 00006155 0F8419F10000            	je L_error_fvar_undefined
  9390 0000615B 803804                  	cmp byte [rax], T_closure
  9391 0000615E 0F8594F10000            	jne L_error_non_closure
  9392 00006164 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9393 00006167 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9394 0000616A 483D[02000000]          	cmp rax, sob_boolean_false
  9395 00006170 0F848B000000            	je .L_if_else_0128
  9396                                  	; Initiating tail-call optimization
  9397                                  	; preparing a non-tail-call
  9398 00006176 488B4528                	mov rax, PARAM(1)	; param b
  9399 0000617A 50                      	push rax
  9400 0000617B 6A01                    	push 1	; arg count
  9401 0000617D 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9402 00006185 803805                  	cmp byte [rax], T_undefined
  9403 00006188 0F84E6F00000            	je L_error_fvar_undefined
  9404 0000618E 803804                  	cmp byte [rax], T_closure
  9405 00006191 0F8561F10000            	jne L_error_non_closure
  9406 00006197 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9407 0000619A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9408 0000619D 50                      	push rax
  9409 0000619E 488B4520                	mov rax, PARAM(0)	; param a
  9410 000061A2 50                      	push rax
  9411 000061A3 6A02                    	push 2	; Number of arguments
  9412 000061A5 488B0425[810E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9413 000061AD 803805                  	cmp byte [rax], T_undefined
  9414 000061B0 0F84BEF00000            	je L_error_fvar_undefined
  9415 000061B6 803804                  	cmp byte [rax], T_closure
  9416 000061B9 0F8539F10000            	jne L_error_non_closure
  9417 000061BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9418 000061C2 FF7508                  	push qword [rbp + 8]
  9419 000061C5 FF7500                  	push qword [rbp]
  9420 000061C8 41BA06000000            	mov r10, 2 + 4
  9421 000061CE 4C8B4518                	mov r8, COUNT
  9422 000061D2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9423 000061D7 4C8D4DF8                	lea r9, [rbp - 8]
  9424                                  .L_tc_recycle_frame_loop_0207:
  9425 000061DB 4983FA00                	cmp r10, 0
  9426 000061DF 7413                    	je .L_tc_recycle_frame_done_0207
  9427 000061E1 4D8B19                  	mov r11, qword [r9]
  9428 000061E4 4D8918                  	mov qword [r8], r11
  9429 000061E7 49FFCA                  	dec r10
  9430 000061EA 4983E808                	sub r8, 8
  9431 000061EE 4983E908                	sub r9, 8
  9432 000061F2 EBE7                    	jmp .L_tc_recycle_frame_loop_0207
  9433                                  .L_tc_recycle_frame_done_0207:
  9434 000061F4 498D6008                	lea rsp, [r8 + 8]
  9435 000061F8 5D                      	pop rbp
  9436 000061F9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9437 000061FC E9E6000000              	jmp .L_if_end_0128
  9438                                  .L_if_else_0128:
  9439                                  	; preparing a non-tail-call
  9440 00006201 488B4528                	mov rax, PARAM(1)	; param b
  9441 00006205 50                      	push rax
  9442 00006206 6A01                    	push 1	; arg count
  9443 00006208 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
  9444 00006210 803805                  	cmp byte [rax], T_undefined
  9445 00006213 0F845BF00000            	je L_error_fvar_undefined
  9446 00006219 803804                  	cmp byte [rax], T_closure
  9447 0000621C 0F85D6F00000            	jne L_error_non_closure
  9448 00006222 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9449 00006225 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9450 00006228 483D[02000000]          	cmp rax, sob_boolean_false
  9451 0000622E 7465                    	je .L_if_else_0127
  9452                                  	; Initiating tail-call optimization
  9453 00006230 488B4528                	mov rax, PARAM(1)	; param b
  9454 00006234 50                      	push rax
  9455 00006235 488B4520                	mov rax, PARAM(0)	; param a
  9456 00006239 50                      	push rax
  9457 0000623A 6A02                    	push 2	; Number of arguments
  9458 0000623C 488B0425[810E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9459 00006244 803805                  	cmp byte [rax], T_undefined
  9460 00006247 0F8427F00000            	je L_error_fvar_undefined
  9461 0000624D 803804                  	cmp byte [rax], T_closure
  9462 00006250 0F85A2F00000            	jne L_error_non_closure
  9463 00006256 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9464 00006259 FF7508                  	push qword [rbp + 8]
  9465 0000625C FF7500                  	push qword [rbp]
  9466 0000625F 41BA06000000            	mov r10, 2 + 4
  9467 00006265 4C8B4518                	mov r8, COUNT
  9468 00006269 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9469 0000626E 4C8D4DF8                	lea r9, [rbp - 8]
  9470                                  .L_tc_recycle_frame_loop_0208:
  9471 00006272 4983FA00                	cmp r10, 0
  9472 00006276 7413                    	je .L_tc_recycle_frame_done_0208
  9473 00006278 4D8B19                  	mov r11, qword [r9]
  9474 0000627B 4D8918                  	mov qword [r8], r11
  9475 0000627E 49FFCA                  	dec r10
  9476 00006281 4983E808                	sub r8, 8
  9477 00006285 4983E908                	sub r9, 8
  9478 00006289 EBE7                    	jmp .L_tc_recycle_frame_loop_0208
  9479                                  .L_tc_recycle_frame_done_0208:
  9480 0000628B 498D6008                	lea rsp, [r8 + 8]
  9481 0000628F 5D                      	pop rbp
  9482 00006290 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9483 00006293 EB52                    	jmp .L_if_end_0127
  9484                                  .L_if_else_0127:
  9485                                  	; Initiating tail-call optimization
  9486 00006295 6A00                    	push 0	; Number of arguments
  9487 00006297 488B4510                	mov rax, ENV
  9488 0000629B 488B00                  	mov rax, qword [rax + 8 * 0]
  9489 0000629E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9490 000062A1 803804                  	cmp byte [rax], T_closure
  9491 000062A4 0F854EF00000            	jne L_error_non_closure
  9492 000062AA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9493 000062AD FF7508                  	push qword [rbp + 8]
  9494 000062B0 FF7500                  	push qword [rbp]
  9495 000062B3 41BA04000000            	mov r10, 0 + 4
  9496 000062B9 4C8B4518                	mov r8, COUNT
  9497 000062BD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9498 000062C2 4C8D4DF8                	lea r9, [rbp - 8]
  9499                                  .L_tc_recycle_frame_loop_0209:
  9500 000062C6 4983FA00                	cmp r10, 0
  9501 000062CA 7413                    	je .L_tc_recycle_frame_done_0209
  9502 000062CC 4D8B19                  	mov r11, qword [r9]
  9503 000062CF 4D8918                  	mov qword [r8], r11
  9504 000062D2 49FFCA                  	dec r10
  9505 000062D5 4983E808                	sub r8, 8
  9506 000062D9 4983E908                	sub r9, 8
  9507 000062DD EBE7                    	jmp .L_tc_recycle_frame_loop_0209
  9508                                  .L_tc_recycle_frame_done_0209:
  9509 000062DF 498D6008                	lea rsp, [r8 + 8]
  9510 000062E3 5D                      	pop rbp
  9511 000062E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9512                                  .L_if_end_0127:
  9513                                  .L_if_end_0128:
  9514                                  .L_if_end_0129:
  9515 000062E7 EB52                    	jmp .L_if_end_012a
  9516                                  .L_if_else_012a:
  9517                                  	; Initiating tail-call optimization
  9518 000062E9 6A00                    	push 0	; Number of arguments
  9519 000062EB 488B4510                	mov rax, ENV
  9520 000062EF 488B00                  	mov rax, qword [rax + 8 * 0]
  9521 000062F2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9522 000062F5 803804                  	cmp byte [rax], T_closure
  9523 000062F8 0F85FAEF0000            	jne L_error_non_closure
  9524 000062FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9525 00006301 FF7508                  	push qword [rbp + 8]
  9526 00006304 FF7500                  	push qword [rbp]
  9527 00006307 41BA04000000            	mov r10, 0 + 4
  9528 0000630D 4C8B4518                	mov r8, COUNT
  9529 00006311 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9530 00006316 4C8D4DF8                	lea r9, [rbp - 8]
  9531                                  .L_tc_recycle_frame_loop_020a:
  9532 0000631A 4983FA00                	cmp r10, 0
  9533 0000631E 7413                    	je .L_tc_recycle_frame_done_020a
  9534 00006320 4D8B19                  	mov r11, qword [r9]
  9535 00006323 4D8918                  	mov qword [r8], r11
  9536 00006326 49FFCA                  	dec r10
  9537 00006329 4983E808                	sub r8, 8
  9538 0000632D 4983E908                	sub r9, 8
  9539 00006331 EBE7                    	jmp .L_tc_recycle_frame_loop_020a
  9540                                  .L_tc_recycle_frame_done_020a:
  9541 00006333 498D6008                	lea rsp, [r8 + 8]
  9542 00006337 5D                      	pop rbp
  9543 00006338 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9544                                  .L_if_end_012a:
  9545                                  .L_if_end_012b:
  9546                                  .L_if_end_012c:
  9547 0000633B C9                      	leave
  9548 0000633C C22000                  	ret AND_KILL_FRAME(2)
  9549                                  .L_lambda_simple_end_01ab:	; new closure is in rax
  9550 0000633F 50                      	push rax
  9551 00006340 6A01                    	push 1	; Number of arguments
  9552 00006342 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9553 00006347 E855F00000              	call malloc
  9554 0000634C 50                      	push rax
  9555 0000634D BF08000000              	mov rdi, 8 * 1	; new rib
  9556 00006352 E84AF00000              	call malloc
  9557 00006357 50                      	push rax
  9558 00006358 BF10000000              	mov rdi, 8 * 2	; extended env
  9559 0000635D E83FF00000              	call malloc
  9560 00006362 488B7D10                	mov rdi, ENV
  9561 00006366 BE00000000              	mov rsi, 0
  9562 0000636B BA01000000              	mov rdx, 1
  9563                                  .L_lambda_simple_env_loop_01ac:	; ext_env[i + 1] <-- env[i]
  9564 00006370 4883FE01                	cmp rsi, 1
  9565 00006374 7410                    	je .L_lambda_simple_env_end_01ac
  9566 00006376 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9567 0000637A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9568 0000637E 48FFC6                  	inc rsi
  9569 00006381 48FFC2                  	inc rdx
  9570 00006384 EBEA                    	jmp .L_lambda_simple_env_loop_01ac
  9571                                  .L_lambda_simple_env_end_01ac:
  9572 00006386 5B                      	pop rbx
  9573 00006387 BE00000000              	mov rsi, 0
  9574                                  .L_lambda_simple_params_loop_01ac:	; copy params
  9575 0000638C 4883FE01                	cmp rsi, 1
  9576 00006390 740E                    	je .L_lambda_simple_params_end_01ac
  9577 00006392 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9578 00006397 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9579 0000639B 48FFC6                  	inc rsi
  9580 0000639E EBEC                    	jmp .L_lambda_simple_params_loop_01ac
  9581                                  .L_lambda_simple_params_end_01ac:
  9582 000063A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9583 000063A3 4889C3                  	mov rbx, rax
  9584 000063A6 58                      	pop rax
  9585 000063A7 C60004                  	mov byte [rax], T_closure
  9586 000063AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9587 000063AE 48C74009[BB630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ac
  9588 000063B6 E915020000              	jmp .L_lambda_simple_end_01ac
  9589                                  .L_lambda_simple_code_01ac:	; lambda-simple body
  9590 000063BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9591 000063C1 740B                    	je .L_lambda_simple_arity_check_ok_01ac
  9592 000063C3 FF742410                	push qword [rsp + 8 * 2]
  9593 000063C7 6A01                    	push 1
  9594 000063C9 E98CEF0000              	jmp L_error_incorrect_arity_simple
  9595                                  .L_lambda_simple_arity_check_ok_01ac:
  9596 000063CE C8000000                	enter 0, 0
  9597 000063D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9598 000063D7 E8C5EF0000              	call malloc
  9599 000063DC 50                      	push rax
  9600 000063DD BF08000000              	mov rdi, 8 * 1	; new rib
  9601 000063E2 E8BAEF0000              	call malloc
  9602 000063E7 50                      	push rax
  9603 000063E8 BF18000000              	mov rdi, 8 * 3	; extended env
  9604 000063ED E8AFEF0000              	call malloc
  9605 000063F2 488B7D10                	mov rdi, ENV
  9606 000063F6 BE00000000              	mov rsi, 0
  9607 000063FB BA01000000              	mov rdx, 1
  9608                                  .L_lambda_opt_env_loop_003c:	; ext_env[i + 1] <-- env[i]
  9609 00006400 4883FE02                	cmp rsi, 2
  9610 00006404 7410                    	je .L_lambda_opt_env_end_003c
  9611 00006406 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9612 0000640A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9613 0000640E 48FFC6                  	inc rsi
  9614 00006411 48FFC2                  	inc rdx
  9615 00006414 EBEA                    	jmp .L_lambda_opt_env_loop_003c
  9616                                  .L_lambda_opt_env_end_003c:
  9617 00006416 5B                      	pop rbx
  9618 00006417 BE00000000              	mov rsi, 0
  9619                                  .L_lambda_opt_params_loop_003c:	; copy params
  9620 0000641C 4883FE01                	cmp rsi, 1
  9621 00006420 740E                    	je .L_lambda_opt_params_end_003c
  9622 00006422 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9623 00006427 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9624 0000642B 48FFC6                  	inc rsi
  9625 0000642E EBEC                    	jmp .L_lambda_opt_params_loop_003c
  9626                                  .L_lambda_opt_params_end_003c:
  9627 00006430 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9628 00006433 4889C3                  	mov rbx, rax
  9629 00006436 58                      	pop rax
  9630 00006437 C60004                  	mov byte [rax], T_closure
  9631 0000643A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9632 0000643E 48C74009[4B640000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003c
  9633 00006446 E981010000              	jmp .L_lambda_opt_end_003c
  9634                                  .L_lambda_opt_code_003c:
  9635 0000644B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
  9636 00006450 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
  9637 00006454 7407                    	je .L_lambda_opt_arity_check_exact_003c	; Jump if arity matches
  9638 00006456 7F4C                    	jg .L_lambda_opt_arity_check_more_003c	; Jump if more arguments passed
  9639 00006458 E911EF0000              	jmp L_error_incorrect_arity_opt
  9640                                  .L_lambda_opt_arity_check_exact_003c:
  9641 0000645D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
  9642 00006460 4983C603                	add r14, 3 ; add 3 first stack values
  9643 00006464 41BF00000000            	mov r15, 0 ; r15 = index
  9644 0000646A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
  9645 0000646E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
  9646 00006476 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003c
  9647                                  .L_lambda_opt_stack_shrink_loop_003c:
  9648 00006478 4983FE00                	cmp r14, 0
  9649 0000647C 7E11                    	jle .L_make_lambda_opt_exact_finish_003c
  9650 0000647E 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
  9651 00006483 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
  9652 00006487 49FFCE                  	dec r14 ; next loop value
  9653 0000648A 49FFC7                  	inc r15 ; update i
  9654 0000648D EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003c
  9655                                  .L_make_lambda_opt_exact_finish_003c:
  9656 0000648F 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
  9657 00006497 49FFC2                  	inc r10
  9658 0000649A 4C89542410              	mov qword [rsp + 8 * 2], r10
  9659 0000649F E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003c
  9660                                  .L_lambda_opt_arity_check_more_003c:
  9661 000064A4 4D89D6                  	mov r14, r10 ; r14 = num args
  9662 000064A7 4D89D7                  	mov r15, r10 ; r15 = num args
  9663 000064AA 41B900000000            	mov r9, 0; r9 = number of params 
  9664 000064B0 4D29CE                  	sub r14, r9 ; r14 = extra args
  9665 000064B3 4D01F1                  	add r9, r14 ; r9 = num args
  9666 000064B6 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
  9666 000064B8 [0100000000000000] 
  9667 000064C0 EB00                    	jmp .L_make_lambda_opt_arg_list_003c
  9668                                  .L_make_lambda_opt_arg_list_003c:
  9669 000064C2 4983FE00                	cmp r14, 0
  9670 000064C6 7E25                    	jle .L_make_lambda_opt_stack_fixed_003c
  9671 000064C8 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
  9672 000064CD BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
  9673 000064D2 E8CAEE0000              	call malloc                         ; Allocate memory, result in rax
  9674 000064D7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
  9675 000064DA 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
  9676 000064DE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
  9677 000064E2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
  9678 000064E5 49FFC9                  	dec r9                              ; args index minus 1
  9679 000064E8 49FFCE                  	dec r14                             ; next iteration
  9680 000064EB EBD5                    	jmp .L_make_lambda_opt_arg_list_003c
  9681                                  .L_make_lambda_opt_stack_fixed_003c:
  9682 000064ED 4D89FE                  	mov r14, r15 ; r14 = num args
  9683 000064F0 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
  9684 000064F3 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
  9685 000064F7 4D89C1                  	mov r9, r8
  9686 000064FA 41BA00000000            	mov r10, 0; r10 = num of params
  9687 00006500 4D29D6                  	sub r14, r10 ; r14 = extra args
  9688 00006503 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
  9689 00006506 49FFCE                  	dec r14 ; how much we need to change stack wise?
  9690 00006509 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
  9691 0000650E 4D89CC                  	mov r12, r9
  9692 00006511 4D29F4                  	sub r12, r14
  9693 00006514 49FFCC                  	dec r12
  9694 00006517 49FFCC                  	dec r12
  9695 0000651A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003c
  9696                                  .L_lambda_opt_stack_shrink_loop_more_003c:
  9697 0000651C 4983F800                	cmp r8, 0
  9698 00006520 7E16                    	jle .L_make_lambda_opt_more_finish_003c
  9699 00006522 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
  9700 00006526 4D01F4                  	add r12, r14
  9701 00006529 4E891CE4                	mov qword [rsp + 8 * r12], r11 
  9702 0000652D 49FFC8                  	dec r8 ; next iteration
  9703 00006530 4D29F4                  	sub r12, r14 ; next iteration
  9704 00006533 49FFCC                  	dec r12 ; next iteration
  9705 00006536 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003c
  9706                                  .L_make_lambda_opt_more_finish_003c:
  9707 00006538 41BA00000000            	mov r10, 0
  9708 0000653E 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
  9709 00006547 49C1E603                	shl r14, 3  ; Multiply r14 by 8
  9710 0000654B 4C01F4                  	add rsp, r14  ; Add to rsp
  9711 0000654E EB00                    	jmp .L_lambda_opt_stack_adjusted_003c
  9712                                  .L_lambda_opt_stack_adjusted_003c:
  9713 00006550 C8000000                	enter 0, 0
  9714                                  	; Initiating tail-call optimization
  9715 00006554 488B4520                	mov rax, PARAM(0)	; param s
  9716 00006558 50                      	push rax
  9717 00006559 48B8-                   	mov rax, L_constants + 2135
  9717 0000655B [5708000000000000] 
  9718 00006563 50                      	push rax
  9719 00006564 488B4510                	mov rax, ENV
  9720 00006568 488B00                  	mov rax, qword [rax + 8 * 0]
  9721 0000656B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9722 0000656E 50                      	push rax
  9723 0000656F 6A03                    	push 3	; Number of arguments
  9724 00006571 488B0425[7C130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9725 00006579 803805                  	cmp byte [rax], T_undefined
  9726 0000657C 0F84F2EC0000            	je L_error_fvar_undefined
  9727 00006582 803804                  	cmp byte [rax], T_closure
  9728 00006585 0F856DED0000            	jne L_error_non_closure
  9729 0000658B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9730 0000658E FF7508                  	push qword [rbp + 8]
  9731 00006591 FF7500                  	push qword [rbp]
  9732 00006594 41BA07000000            	mov r10, 3 + 4
  9733 0000659A 4C8B4518                	mov r8, COUNT
  9734 0000659E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9735 000065A3 4C8D4DF8                	lea r9, [rbp - 8]
  9736                                  .L_tc_recycle_frame_loop_020b:
  9737 000065A7 4983FA00                	cmp r10, 0
  9738 000065AB 7413                    	je .L_tc_recycle_frame_done_020b
  9739 000065AD 4D8B19                  	mov r11, qword [r9]
  9740 000065B0 4D8918                  	mov qword [r8], r11
  9741 000065B3 49FFCA                  	dec r10
  9742 000065B6 4983E808                	sub r8, 8
  9743 000065BA 4983E908                	sub r9, 8
  9744 000065BE EBE7                    	jmp .L_tc_recycle_frame_loop_020b
  9745                                  .L_tc_recycle_frame_done_020b:
  9746 000065C0 498D6008                	lea rsp, [r8 + 8]
  9747 000065C4 5D                      	pop rbp
  9748 000065C5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9749 000065C8 C9                      	leave
  9750 000065C9 C21800                  	ret AND_KILL_FRAME(1)
  9751                                  .L_lambda_opt_end_003c:	; new closure is in rax
  9752 000065CC C9                      	leave
  9753 000065CD C21800                  	ret AND_KILL_FRAME(1)
  9754                                  .L_lambda_simple_end_01ac:	; new closure is in rax
  9755 000065D0 803804                  	cmp byte [rax], T_closure
  9756 000065D3 0F851FED0000            	jne L_error_non_closure
  9757 000065D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9758 000065DC FF7508                  	push qword [rbp + 8]
  9759 000065DF FF7500                  	push qword [rbp]
  9760 000065E2 41BA05000000            	mov r10, 1 + 4
  9761 000065E8 4C8B4518                	mov r8, COUNT
  9762 000065EC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9763 000065F1 4C8D4DF8                	lea r9, [rbp - 8]
  9764                                  .L_tc_recycle_frame_loop_020c:
  9765 000065F5 4983FA00                	cmp r10, 0
  9766 000065F9 7413                    	je .L_tc_recycle_frame_done_020c
  9767 000065FB 4D8B19                  	mov r11, qword [r9]
  9768 000065FE 4D8918                  	mov qword [r8], r11
  9769 00006601 49FFCA                  	dec r10
  9770 00006604 4983E808                	sub r8, 8
  9771 00006608 4983E908                	sub r9, 8
  9772 0000660C EBE7                    	jmp .L_tc_recycle_frame_loop_020c
  9773                                  .L_tc_recycle_frame_done_020c:
  9774 0000660E 498D6008                	lea rsp, [r8 + 8]
  9775 00006612 5D                      	pop rbp
  9776 00006613 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9777 00006616 C9                      	leave
  9778 00006617 C21800                  	ret AND_KILL_FRAME(1)
  9779                                  .L_lambda_simple_end_01aa:	; new closure is in rax
  9780 0000661A 803804                  	cmp byte [rax], T_closure
  9781 0000661D 0F85D5EC0000            	jne L_error_non_closure
  9782 00006623 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9783 00006626 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9784 00006629 48890425[E80D0000]      	mov qword [free_var_1], rax
  9785 00006631 48B8-                   	mov rax, sob_void
  9785 00006633 [0000000000000000] 
  9786                                  
  9787 0000663B 4889C7                  	mov rdi, rax
  9788 0000663E E8B3EF0000              	call print_sexpr_if_not_void
  9789                                  	; preparing a non-tail-call
  9790 00006643 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9791 00006648 E854ED0000              	call malloc
  9792 0000664D 50                      	push rax
  9793 0000664E BF00000000              	mov rdi, 8 * 0	; new rib
  9794 00006653 E849ED0000              	call malloc
  9795 00006658 50                      	push rax
  9796 00006659 BF08000000              	mov rdi, 8 * 1	; extended env
  9797 0000665E E83EED0000              	call malloc
  9798 00006663 488B7D10                	mov rdi, ENV
  9799 00006667 BE00000000              	mov rsi, 0
  9800 0000666C BA01000000              	mov rdx, 1
  9801                                  .L_lambda_simple_env_loop_01ad:	; ext_env[i + 1] <-- env[i]
  9802 00006671 4883FE00                	cmp rsi, 0
  9803 00006675 7410                    	je .L_lambda_simple_env_end_01ad
  9804 00006677 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9805 0000667B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9806 0000667F 48FFC6                  	inc rsi
  9807 00006682 48FFC2                  	inc rdx
  9808 00006685 EBEA                    	jmp .L_lambda_simple_env_loop_01ad
  9809                                  .L_lambda_simple_env_end_01ad:
  9810 00006687 5B                      	pop rbx
  9811 00006688 BE00000000              	mov rsi, 0
  9812                                  .L_lambda_simple_params_loop_01ad:	; copy params
  9813 0000668D 4883FE00                	cmp rsi, 0
  9814 00006691 740E                    	je .L_lambda_simple_params_end_01ad
  9815 00006693 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9816 00006698 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9817 0000669C 48FFC6                  	inc rsi
  9818 0000669F EBEC                    	jmp .L_lambda_simple_params_loop_01ad
  9819                                  .L_lambda_simple_params_end_01ad:
  9820 000066A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9821 000066A4 4889C3                  	mov rbx, rax
  9822 000066A7 58                      	pop rax
  9823 000066A8 C60004                  	mov byte [rax], T_closure
  9824 000066AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9825 000066AF 48C74009[BC660000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ad
  9826 000066B7 E98A000000              	jmp .L_lambda_simple_end_01ad
  9827                                  .L_lambda_simple_code_01ad:	; lambda-simple body
  9828 000066BC 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9829 000066C2 740B                    	je .L_lambda_simple_arity_check_ok_01ad
  9830 000066C4 FF742410                	push qword [rsp + 8 * 2]
  9831 000066C8 6A00                    	push 0
  9832 000066CA E98BEC0000              	jmp L_error_incorrect_arity_simple
  9833                                  .L_lambda_simple_arity_check_ok_01ad:
  9834 000066CF C8000000                	enter 0, 0
  9835                                  	; Initiating tail-call optimization
  9836 000066D3 48B8-                   	mov rax, L_constants + 2187
  9836 000066D5 [8B08000000000000] 
  9837 000066DD 50                      	push rax
  9838 000066DE 48B8-                   	mov rax, L_constants + 2251
  9838 000066E0 [CB08000000000000] 
  9839 000066E8 50                      	push rax
  9840 000066E9 6A02                    	push 2	; Number of arguments
  9841 000066EB 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
  9842 000066F3 803805                  	cmp byte [rax], T_undefined
  9843 000066F6 0F8478EB0000            	je L_error_fvar_undefined
  9844 000066FC 803804                  	cmp byte [rax], T_closure
  9845 000066FF 0F85F3EB0000            	jne L_error_non_closure
  9846 00006705 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9847 00006708 FF7508                  	push qword [rbp + 8]
  9848 0000670B FF7500                  	push qword [rbp]
  9849 0000670E 41BA06000000            	mov r10, 2 + 4
  9850 00006714 4C8B4518                	mov r8, COUNT
  9851 00006718 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
  9852 0000671D 4C8D4DF8                	lea r9, [rbp - 8]
  9853                                  .L_tc_recycle_frame_loop_020d:
  9854 00006721 4983FA00                	cmp r10, 0
  9855 00006725 7413                    	je .L_tc_recycle_frame_done_020d
  9856 00006727 4D8B19                  	mov r11, qword [r9]
  9857 0000672A 4D8918                  	mov qword [r8], r11
  9858 0000672D 49FFCA                  	dec r10
  9859 00006730 4983E808                	sub r8, 8
  9860 00006734 4983E908                	sub r9, 8
  9861 00006738 EBE7                    	jmp .L_tc_recycle_frame_loop_020d
  9862                                  .L_tc_recycle_frame_done_020d:
  9863 0000673A 498D6008                	lea rsp, [r8 + 8]
  9864 0000673E 5D                      	pop rbp
  9865 0000673F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9866 00006742 C9                      	leave
  9867 00006743 C21000                  	ret AND_KILL_FRAME(0)
  9868                                  .L_lambda_simple_end_01ad:	; new closure is in rax
  9869 00006746 50                      	push rax
  9870 00006747 6A01                    	push 1	; arg count
  9871 00006749 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9872 0000674E E84EEC0000              	call malloc
  9873 00006753 50                      	push rax
  9874 00006754 BF00000000              	mov rdi, 8 * 0	; new rib
  9875 00006759 E843EC0000              	call malloc
  9876 0000675E 50                      	push rax
  9877 0000675F BF08000000              	mov rdi, 8 * 1	; extended env
  9878 00006764 E838EC0000              	call malloc
  9879 00006769 488B7D10                	mov rdi, ENV
  9880 0000676D BE00000000              	mov rsi, 0
  9881 00006772 BA01000000              	mov rdx, 1
  9882                                  .L_lambda_simple_env_loop_01ae:	; ext_env[i + 1] <-- env[i]
  9883 00006777 4883FE00                	cmp rsi, 0
  9884 0000677B 7410                    	je .L_lambda_simple_env_end_01ae
  9885 0000677D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9886 00006781 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9887 00006785 48FFC6                  	inc rsi
  9888 00006788 48FFC2                  	inc rdx
  9889 0000678B EBEA                    	jmp .L_lambda_simple_env_loop_01ae
  9890                                  .L_lambda_simple_env_end_01ae:
  9891 0000678D 5B                      	pop rbx
  9892 0000678E BE00000000              	mov rsi, 0
  9893                                  .L_lambda_simple_params_loop_01ae:	; copy params
  9894 00006793 4883FE00                	cmp rsi, 0
  9895 00006797 740E                    	je .L_lambda_simple_params_end_01ae
  9896 00006799 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9897 0000679E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9898 000067A2 48FFC6                  	inc rsi
  9899 000067A5 EBEC                    	jmp .L_lambda_simple_params_loop_01ae
  9900                                  .L_lambda_simple_params_end_01ae:
  9901 000067A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9902 000067AA 4889C3                  	mov rbx, rax
  9903 000067AD 58                      	pop rax
  9904 000067AE C60004                  	mov byte [rax], T_closure
  9905 000067B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9906 000067B5 48C74009[C2670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ae
  9907 000067BD E9490D0000              	jmp .L_lambda_simple_end_01ae
  9908                                  .L_lambda_simple_code_01ae:	; lambda-simple body
  9909 000067C2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9910 000067C8 740B                    	je .L_lambda_simple_arity_check_ok_01ae
  9911 000067CA FF742410                	push qword [rsp + 8 * 2]
  9912 000067CE 6A01                    	push 1
  9913 000067D0 E985EB0000              	jmp L_error_incorrect_arity_simple
  9914                                  .L_lambda_simple_arity_check_ok_01ae:
  9915 000067D5 C8000000                	enter 0, 0
  9916                                  	; Initiating tail-call optimization
  9917 000067D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9918 000067DE E8BEEB0000              	call malloc
  9919 000067E3 50                      	push rax
  9920 000067E4 BF08000000              	mov rdi, 8 * 1	; new rib
  9921 000067E9 E8B3EB0000              	call malloc
  9922 000067EE 50                      	push rax
  9923 000067EF BF10000000              	mov rdi, 8 * 2	; extended env
  9924 000067F4 E8A8EB0000              	call malloc
  9925 000067F9 488B7D10                	mov rdi, ENV
  9926 000067FD BE00000000              	mov rsi, 0
  9927 00006802 BA01000000              	mov rdx, 1
  9928                                  .L_lambda_simple_env_loop_01af:	; ext_env[i + 1] <-- env[i]
  9929 00006807 4883FE01                	cmp rsi, 1
  9930 0000680B 7410                    	je .L_lambda_simple_env_end_01af
  9931 0000680D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9932 00006811 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9933 00006815 48FFC6                  	inc rsi
  9934 00006818 48FFC2                  	inc rdx
  9935 0000681B EBEA                    	jmp .L_lambda_simple_env_loop_01af
  9936                                  .L_lambda_simple_env_end_01af:
  9937 0000681D 5B                      	pop rbx
  9938 0000681E BE00000000              	mov rsi, 0
  9939                                  .L_lambda_simple_params_loop_01af:	; copy params
  9940 00006823 4883FE01                	cmp rsi, 1
  9941 00006827 740E                    	je .L_lambda_simple_params_end_01af
  9942 00006829 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9943 0000682E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9944 00006832 48FFC6                  	inc rsi
  9945 00006835 EBEC                    	jmp .L_lambda_simple_params_loop_01af
  9946                                  .L_lambda_simple_params_end_01af:
  9947 00006837 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9948 0000683A 4889C3                  	mov rbx, rax
  9949 0000683D 58                      	pop rax
  9950 0000683E C60004                  	mov byte [rax], T_closure
  9951 00006841 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9952 00006845 48C74009[52680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01af
  9953 0000684D E938080000              	jmp .L_lambda_simple_end_01af
  9954                                  .L_lambda_simple_code_01af:	; lambda-simple body
  9955 00006852 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9956 00006858 740B                    	je .L_lambda_simple_arity_check_ok_01af
  9957 0000685A FF742410                	push qword [rsp + 8 * 2]
  9958 0000685E 6A02                    	push 2
  9959 00006860 E9F5EA0000              	jmp L_error_incorrect_arity_simple
  9960                                  .L_lambda_simple_arity_check_ok_01af:
  9961 00006865 C8000000                	enter 0, 0
  9962                                  	; preparing a non-tail-call
  9963 00006869 488B4520                	mov rax, PARAM(0)	; param a
  9964 0000686D 50                      	push rax
  9965 0000686E 6A01                    	push 1	; arg count
  9966 00006870 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  9967 00006878 803805                  	cmp byte [rax], T_undefined
  9968 0000687B 0F84F3E90000            	je L_error_fvar_undefined
  9969 00006881 803804                  	cmp byte [rax], T_closure
  9970 00006884 0F856EEA0000            	jne L_error_non_closure
  9971 0000688A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9972 0000688D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9973 00006890 483D[02000000]          	cmp rax, sob_boolean_false
  9974 00006896 0F8467020000            	je .L_if_else_0138
  9975                                  	; preparing a non-tail-call
  9976 0000689C 488B4528                	mov rax, PARAM(1)	; param b
  9977 000068A0 50                      	push rax
  9978 000068A1 6A01                    	push 1	; arg count
  9979 000068A3 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
  9980 000068AB 803805                  	cmp byte [rax], T_undefined
  9981 000068AE 0F84C0E90000            	je L_error_fvar_undefined
  9982 000068B4 803804                  	cmp byte [rax], T_closure
  9983 000068B7 0F853BEA0000            	jne L_error_non_closure
  9984 000068BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9985 000068C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9986 000068C3 483D[02000000]          	cmp rax, sob_boolean_false
  9987 000068C9 7468                    	je .L_if_else_012f
  9988                                  	; Initiating tail-call optimization
  9989 000068CB 488B4528                	mov rax, PARAM(1)	; param b
  9990 000068CF 50                      	push rax
  9991 000068D0 488B4520                	mov rax, PARAM(0)	; param a
  9992 000068D4 50                      	push rax
  9993 000068D5 6A02                    	push 2	; Number of arguments
  9994 000068D7 488B0425[A20F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
  9995 000068DF 803805                  	cmp byte [rax], T_undefined
  9996 000068E2 0F848CE90000            	je L_error_fvar_undefined
  9997 000068E8 803804                  	cmp byte [rax], T_closure
  9998 000068EB 0F8507EA0000            	jne L_error_non_closure
  9999 000068F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10000 000068F4 FF7508                  	push qword [rbp + 8]
 10001 000068F7 FF7500                  	push qword [rbp]
 10002 000068FA 41BA06000000            	mov r10, 2 + 4
 10003 00006900 4C8B4518                	mov r8, COUNT
 10004 00006904 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10005 00006909 4C8D4DF8                	lea r9, [rbp - 8]
 10006                                  .L_tc_recycle_frame_loop_020e:
 10007 0000690D 4983FA00                	cmp r10, 0
 10008 00006911 7413                    	je .L_tc_recycle_frame_done_020e
 10009 00006913 4D8B19                  	mov r11, qword [r9]
 10010 00006916 4D8918                  	mov qword [r8], r11
 10011 00006919 49FFCA                  	dec r10
 10012 0000691C 4983E808                	sub r8, 8
 10013 00006920 4983E908                	sub r9, 8
 10014 00006924 EBE7                    	jmp .L_tc_recycle_frame_loop_020e
 10015                                  .L_tc_recycle_frame_done_020e:
 10016 00006926 498D6008                	lea rsp, [r8 + 8]
 10017 0000692A 5D                      	pop rbp
 10018 0000692B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10019 0000692E E9CB010000              	jmp .L_if_end_012f
 10020                                  .L_if_else_012f:
 10021                                  	; preparing a non-tail-call
 10022 00006933 488B4528                	mov rax, PARAM(1)	; param b
 10023 00006937 50                      	push rax
 10024 00006938 6A01                    	push 1	; arg count
 10025 0000693A 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10026 00006942 803805                  	cmp byte [rax], T_undefined
 10027 00006945 0F8429E90000            	je L_error_fvar_undefined
 10028 0000694B 803804                  	cmp byte [rax], T_closure
 10029 0000694E 0F85A4E90000            	jne L_error_non_closure
 10030 00006954 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10031 00006957 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10032 0000695A 483D[02000000]          	cmp rax, sob_boolean_false
 10033 00006960 0F848B000000            	je .L_if_else_012e
 10034                                  	; Initiating tail-call optimization
 10035 00006966 488B4528                	mov rax, PARAM(1)	; param b
 10036 0000696A 50                      	push rax
 10037                                  	; preparing a non-tail-call
 10038 0000696B 488B4520                	mov rax, PARAM(0)	; param a
 10039 0000696F 50                      	push rax
 10040 00006970 6A01                    	push 1	; arg count
 10041 00006972 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10042 0000697A 803805                  	cmp byte [rax], T_undefined
 10043 0000697D 0F84F1E80000            	je L_error_fvar_undefined
 10044 00006983 803804                  	cmp byte [rax], T_closure
 10045 00006986 0F856CE90000            	jne L_error_non_closure
 10046 0000698C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10047 0000698F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10048 00006992 50                      	push rax
 10049 00006993 6A02                    	push 2	; Number of arguments
 10050 00006995 488B0425[800F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10051 0000699D 803805                  	cmp byte [rax], T_undefined
 10052 000069A0 0F84CEE80000            	je L_error_fvar_undefined
 10053 000069A6 803804                  	cmp byte [rax], T_closure
 10054 000069A9 0F8549E90000            	jne L_error_non_closure
 10055 000069AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10056 000069B2 FF7508                  	push qword [rbp + 8]
 10057 000069B5 FF7500                  	push qword [rbp]
 10058 000069B8 41BA06000000            	mov r10, 2 + 4
 10059 000069BE 4C8B4518                	mov r8, COUNT
 10060 000069C2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10061 000069C7 4C8D4DF8                	lea r9, [rbp - 8]
 10062                                  .L_tc_recycle_frame_loop_020f:
 10063 000069CB 4983FA00                	cmp r10, 0
 10064 000069CF 7413                    	je .L_tc_recycle_frame_done_020f
 10065 000069D1 4D8B19                  	mov r11, qword [r9]
 10066 000069D4 4D8918                  	mov qword [r8], r11
 10067 000069D7 49FFCA                  	dec r10
 10068 000069DA 4983E808                	sub r8, 8
 10069 000069DE 4983E908                	sub r9, 8
 10070 000069E2 EBE7                    	jmp .L_tc_recycle_frame_loop_020f
 10071                                  .L_tc_recycle_frame_done_020f:
 10072 000069E4 498D6008                	lea rsp, [r8 + 8]
 10073 000069E8 5D                      	pop rbp
 10074 000069E9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10075 000069EC E90D010000              	jmp .L_if_end_012e
 10076                                  .L_if_else_012e:
 10077                                  	; preparing a non-tail-call
 10078 000069F1 488B4528                	mov rax, PARAM(1)	; param b
 10079 000069F5 50                      	push rax
 10080 000069F6 6A01                    	push 1	; arg count
 10081 000069F8 488B0425[7A150000]      	mov rax, qword [free_var_115]	; free var real
 10082 00006A00 803805                  	cmp byte [rax], T_undefined
 10083 00006A03 0F846BE80000            	je L_error_fvar_undefined
 10084 00006A09 803804                  	cmp byte [rax], T_closure
 10085 00006A0C 0F85E6E80000            	jne L_error_non_closure
 10086 00006A12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10087 00006A15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10088 00006A18 483D[02000000]          	cmp rax, sob_boolean_false
 10089 00006A1E 0F8488000000            	je .L_if_else_012d
 10090                                  	; Initiating tail-call optimization
 10091 00006A24 488B4528                	mov rax, PARAM(1)	; param b
 10092 00006A28 50                      	push rax
 10093                                  	; preparing a non-tail-call
 10094 00006A29 488B4520                	mov rax, PARAM(0)	; param a
 10095 00006A2D 50                      	push rax
 10096 00006A2E 6A01                    	push 1	; arg count
 10097 00006A30 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10098 00006A38 803805                  	cmp byte [rax], T_undefined
 10099 00006A3B 0F8433E80000            	je L_error_fvar_undefined
 10100 00006A41 803804                  	cmp byte [rax], T_closure
 10101 00006A44 0F85AEE80000            	jne L_error_non_closure
 10102 00006A4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10103 00006A4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10104 00006A50 50                      	push rax
 10105 00006A51 6A02                    	push 2	; Number of arguments
 10106 00006A53 488B0425[910F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10107 00006A5B 803805                  	cmp byte [rax], T_undefined
 10108 00006A5E 0F8410E80000            	je L_error_fvar_undefined
 10109 00006A64 803804                  	cmp byte [rax], T_closure
 10110 00006A67 0F858BE80000            	jne L_error_non_closure
 10111 00006A6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10112 00006A70 FF7508                  	push qword [rbp + 8]
 10113 00006A73 FF7500                  	push qword [rbp]
 10114 00006A76 41BA06000000            	mov r10, 2 + 4
 10115 00006A7C 4C8B4518                	mov r8, COUNT
 10116 00006A80 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10117 00006A85 4C8D4DF8                	lea r9, [rbp - 8]
 10118                                  .L_tc_recycle_frame_loop_0210:
 10119 00006A89 4983FA00                	cmp r10, 0
 10120 00006A8D 7413                    	je .L_tc_recycle_frame_done_0210
 10121 00006A8F 4D8B19                  	mov r11, qword [r9]
 10122 00006A92 4D8918                  	mov qword [r8], r11
 10123 00006A95 49FFCA                  	dec r10
 10124 00006A98 4983E808                	sub r8, 8
 10125 00006A9C 4983E908                	sub r9, 8
 10126 00006AA0 EBE7                    	jmp .L_tc_recycle_frame_loop_0210
 10127                                  .L_tc_recycle_frame_done_0210:
 10128 00006AA2 498D6008                	lea rsp, [r8 + 8]
 10129 00006AA6 5D                      	pop rbp
 10130 00006AA7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10131 00006AAA EB52                    	jmp .L_if_end_012d
 10132                                  .L_if_else_012d:
 10133                                  	; Initiating tail-call optimization
 10134 00006AAC 6A00                    	push 0	; Number of arguments
 10135 00006AAE 488B4510                	mov rax, ENV
 10136 00006AB2 488B00                  	mov rax, qword [rax + 8 * 0]
 10137 00006AB5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10138 00006AB8 803804                  	cmp byte [rax], T_closure
 10139 00006ABB 0F8537E80000            	jne L_error_non_closure
 10140 00006AC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10141 00006AC4 FF7508                  	push qword [rbp + 8]
 10142 00006AC7 FF7500                  	push qword [rbp]
 10143 00006ACA 41BA04000000            	mov r10, 0 + 4
 10144 00006AD0 4C8B4518                	mov r8, COUNT
 10145 00006AD4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10146 00006AD9 4C8D4DF8                	lea r9, [rbp - 8]
 10147                                  .L_tc_recycle_frame_loop_0211:
 10148 00006ADD 4983FA00                	cmp r10, 0
 10149 00006AE1 7413                    	je .L_tc_recycle_frame_done_0211
 10150 00006AE3 4D8B19                  	mov r11, qword [r9]
 10151 00006AE6 4D8918                  	mov qword [r8], r11
 10152 00006AE9 49FFCA                  	dec r10
 10153 00006AEC 4983E808                	sub r8, 8
 10154 00006AF0 4983E908                	sub r9, 8
 10155 00006AF4 EBE7                    	jmp .L_tc_recycle_frame_loop_0211
 10156                                  .L_tc_recycle_frame_done_0211:
 10157 00006AF6 498D6008                	lea rsp, [r8 + 8]
 10158 00006AFA 5D                      	pop rbp
 10159 00006AFB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10160                                  .L_if_end_012d:
 10161                                  .L_if_end_012e:
 10162                                  .L_if_end_012f:
 10163 00006AFE E983050000              	jmp .L_if_end_0138
 10164                                  .L_if_else_0138:
 10165                                  	; preparing a non-tail-call
 10166 00006B03 488B4520                	mov rax, PARAM(0)	; param a
 10167 00006B07 50                      	push rax
 10168 00006B08 6A01                    	push 1	; arg count
 10169 00006B0A 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10170 00006B12 803805                  	cmp byte [rax], T_undefined
 10171 00006B15 0F8459E70000            	je L_error_fvar_undefined
 10172 00006B1B 803804                  	cmp byte [rax], T_closure
 10173 00006B1E 0F85D4E70000            	jne L_error_non_closure
 10174 00006B24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10175 00006B27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10176 00006B2A 483D[02000000]          	cmp rax, sob_boolean_false
 10177 00006B30 0F8467020000            	je .L_if_else_0137
 10178                                  	; preparing a non-tail-call
 10179 00006B36 488B4528                	mov rax, PARAM(1)	; param b
 10180 00006B3A 50                      	push rax
 10181 00006B3B 6A01                    	push 1	; arg count
 10182 00006B3D 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 10183 00006B45 803805                  	cmp byte [rax], T_undefined
 10184 00006B48 0F8426E70000            	je L_error_fvar_undefined
 10185 00006B4E 803804                  	cmp byte [rax], T_closure
 10186 00006B51 0F85A1E70000            	jne L_error_non_closure
 10187 00006B57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10188 00006B5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10189 00006B5D 483D[02000000]          	cmp rax, sob_boolean_false
 10190 00006B63 0F848B000000            	je .L_if_else_0132
 10191                                  	; Initiating tail-call optimization
 10192                                  	; preparing a non-tail-call
 10193 00006B69 488B4528                	mov rax, PARAM(1)	; param b
 10194 00006B6D 50                      	push rax
 10195 00006B6E 6A01                    	push 1	; arg count
 10196 00006B70 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10197 00006B78 803805                  	cmp byte [rax], T_undefined
 10198 00006B7B 0F84F3E60000            	je L_error_fvar_undefined
 10199 00006B81 803804                  	cmp byte [rax], T_closure
 10200 00006B84 0F856EE70000            	jne L_error_non_closure
 10201 00006B8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10202 00006B8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10203 00006B90 50                      	push rax
 10204 00006B91 488B4520                	mov rax, PARAM(0)	; param a
 10205 00006B95 50                      	push rax
 10206 00006B96 6A02                    	push 2	; Number of arguments
 10207 00006B98 488B0425[800F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10208 00006BA0 803805                  	cmp byte [rax], T_undefined
 10209 00006BA3 0F84CBE60000            	je L_error_fvar_undefined
 10210 00006BA9 803804                  	cmp byte [rax], T_closure
 10211 00006BAC 0F8546E70000            	jne L_error_non_closure
 10212 00006BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10213 00006BB5 FF7508                  	push qword [rbp + 8]
 10214 00006BB8 FF7500                  	push qword [rbp]
 10215 00006BBB 41BA06000000            	mov r10, 2 + 4
 10216 00006BC1 4C8B4518                	mov r8, COUNT
 10217 00006BC5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10218 00006BCA 4C8D4DF8                	lea r9, [rbp - 8]
 10219                                  .L_tc_recycle_frame_loop_0212:
 10220 00006BCE 4983FA00                	cmp r10, 0
 10221 00006BD2 7413                    	je .L_tc_recycle_frame_done_0212
 10222 00006BD4 4D8B19                  	mov r11, qword [r9]
 10223 00006BD7 4D8918                  	mov qword [r8], r11
 10224 00006BDA 49FFCA                  	dec r10
 10225 00006BDD 4983E808                	sub r8, 8
 10226 00006BE1 4983E908                	sub r9, 8
 10227 00006BE5 EBE7                    	jmp .L_tc_recycle_frame_loop_0212
 10228                                  .L_tc_recycle_frame_done_0212:
 10229 00006BE7 498D6008                	lea rsp, [r8 + 8]
 10230 00006BEB 5D                      	pop rbp
 10231 00006BEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10232 00006BEF E9A4010000              	jmp .L_if_end_0132
 10233                                  .L_if_else_0132:
 10234                                  	; preparing a non-tail-call
 10235 00006BF4 488B4528                	mov rax, PARAM(1)	; param b
 10236 00006BF8 50                      	push rax
 10237 00006BF9 6A01                    	push 1	; arg count
 10238 00006BFB 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10239 00006C03 803805                  	cmp byte [rax], T_undefined
 10240 00006C06 0F8468E60000            	je L_error_fvar_undefined
 10241 00006C0C 803804                  	cmp byte [rax], T_closure
 10242 00006C0F 0F85E3E60000            	jne L_error_non_closure
 10243 00006C15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10244 00006C18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10245 00006C1B 483D[02000000]          	cmp rax, sob_boolean_false
 10246 00006C21 7468                    	je .L_if_else_0131
 10247                                  	; Initiating tail-call optimization
 10248 00006C23 488B4528                	mov rax, PARAM(1)	; param b
 10249 00006C27 50                      	push rax
 10250 00006C28 488B4520                	mov rax, PARAM(0)	; param a
 10251 00006C2C 50                      	push rax
 10252 00006C2D 6A02                    	push 2	; Number of arguments
 10253 00006C2F 488B0425[800F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10254 00006C37 803805                  	cmp byte [rax], T_undefined
 10255 00006C3A 0F8434E60000            	je L_error_fvar_undefined
 10256 00006C40 803804                  	cmp byte [rax], T_closure
 10257 00006C43 0F85AFE60000            	jne L_error_non_closure
 10258 00006C49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10259 00006C4C FF7508                  	push qword [rbp + 8]
 10260 00006C4F FF7500                  	push qword [rbp]
 10261 00006C52 41BA06000000            	mov r10, 2 + 4
 10262 00006C58 4C8B4518                	mov r8, COUNT
 10263 00006C5C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10264 00006C61 4C8D4DF8                	lea r9, [rbp - 8]
 10265                                  .L_tc_recycle_frame_loop_0213:
 10266 00006C65 4983FA00                	cmp r10, 0
 10267 00006C69 7413                    	je .L_tc_recycle_frame_done_0213
 10268 00006C6B 4D8B19                  	mov r11, qword [r9]
 10269 00006C6E 4D8918                  	mov qword [r8], r11
 10270 00006C71 49FFCA                  	dec r10
 10271 00006C74 4983E808                	sub r8, 8
 10272 00006C78 4983E908                	sub r9, 8
 10273 00006C7C EBE7                    	jmp .L_tc_recycle_frame_loop_0213
 10274                                  .L_tc_recycle_frame_done_0213:
 10275 00006C7E 498D6008                	lea rsp, [r8 + 8]
 10276 00006C82 5D                      	pop rbp
 10277 00006C83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10278 00006C86 E90D010000              	jmp .L_if_end_0131
 10279                                  .L_if_else_0131:
 10280                                  	; preparing a non-tail-call
 10281 00006C8B 488B4528                	mov rax, PARAM(1)	; param b
 10282 00006C8F 50                      	push rax
 10283 00006C90 6A01                    	push 1	; arg count
 10284 00006C92 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 10285 00006C9A 803805                  	cmp byte [rax], T_undefined
 10286 00006C9D 0F84D1E50000            	je L_error_fvar_undefined
 10287 00006CA3 803804                  	cmp byte [rax], T_closure
 10288 00006CA6 0F854CE60000            	jne L_error_non_closure
 10289 00006CAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10290 00006CAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10291 00006CB2 483D[02000000]          	cmp rax, sob_boolean_false
 10292 00006CB8 0F8488000000            	je .L_if_else_0130
 10293                                  	; Initiating tail-call optimization
 10294 00006CBE 488B4528                	mov rax, PARAM(1)	; param b
 10295 00006CC2 50                      	push rax
 10296                                  	; preparing a non-tail-call
 10297 00006CC3 488B4520                	mov rax, PARAM(0)	; param a
 10298 00006CC7 50                      	push rax
 10299 00006CC8 6A01                    	push 1	; arg count
 10300 00006CCA 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10301 00006CD2 803805                  	cmp byte [rax], T_undefined
 10302 00006CD5 0F8499E50000            	je L_error_fvar_undefined
 10303 00006CDB 803804                  	cmp byte [rax], T_closure
 10304 00006CDE 0F8514E60000            	jne L_error_non_closure
 10305 00006CE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10306 00006CE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10307 00006CEA 50                      	push rax
 10308 00006CEB 6A02                    	push 2	; Number of arguments
 10309 00006CED 488B0425[910F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10310 00006CF5 803805                  	cmp byte [rax], T_undefined
 10311 00006CF8 0F8476E50000            	je L_error_fvar_undefined
 10312 00006CFE 803804                  	cmp byte [rax], T_closure
 10313 00006D01 0F85F1E50000            	jne L_error_non_closure
 10314 00006D07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10315 00006D0A FF7508                  	push qword [rbp + 8]
 10316 00006D0D FF7500                  	push qword [rbp]
 10317 00006D10 41BA06000000            	mov r10, 2 + 4
 10318 00006D16 4C8B4518                	mov r8, COUNT
 10319 00006D1A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10320 00006D1F 4C8D4DF8                	lea r9, [rbp - 8]
 10321                                  .L_tc_recycle_frame_loop_0214:
 10322 00006D23 4983FA00                	cmp r10, 0
 10323 00006D27 7413                    	je .L_tc_recycle_frame_done_0214
 10324 00006D29 4D8B19                  	mov r11, qword [r9]
 10325 00006D2C 4D8918                  	mov qword [r8], r11
 10326 00006D2F 49FFCA                  	dec r10
 10327 00006D32 4983E808                	sub r8, 8
 10328 00006D36 4983E908                	sub r9, 8
 10329 00006D3A EBE7                    	jmp .L_tc_recycle_frame_loop_0214
 10330                                  .L_tc_recycle_frame_done_0214:
 10331 00006D3C 498D6008                	lea rsp, [r8 + 8]
 10332 00006D40 5D                      	pop rbp
 10333 00006D41 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10334 00006D44 EB52                    	jmp .L_if_end_0130
 10335                                  .L_if_else_0130:
 10336                                  	; Initiating tail-call optimization
 10337 00006D46 6A00                    	push 0	; Number of arguments
 10338 00006D48 488B4510                	mov rax, ENV
 10339 00006D4C 488B00                  	mov rax, qword [rax + 8 * 0]
 10340 00006D4F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10341 00006D52 803804                  	cmp byte [rax], T_closure
 10342 00006D55 0F859DE50000            	jne L_error_non_closure
 10343 00006D5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10344 00006D5E FF7508                  	push qword [rbp + 8]
 10345 00006D61 FF7500                  	push qword [rbp]
 10346 00006D64 41BA04000000            	mov r10, 0 + 4
 10347 00006D6A 4C8B4518                	mov r8, COUNT
 10348 00006D6E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10349 00006D73 4C8D4DF8                	lea r9, [rbp - 8]
 10350                                  .L_tc_recycle_frame_loop_0215:
 10351 00006D77 4983FA00                	cmp r10, 0
 10352 00006D7B 7413                    	je .L_tc_recycle_frame_done_0215
 10353 00006D7D 4D8B19                  	mov r11, qword [r9]
 10354 00006D80 4D8918                  	mov qword [r8], r11
 10355 00006D83 49FFCA                  	dec r10
 10356 00006D86 4983E808                	sub r8, 8
 10357 00006D8A 4983E908                	sub r9, 8
 10358 00006D8E EBE7                    	jmp .L_tc_recycle_frame_loop_0215
 10359                                  .L_tc_recycle_frame_done_0215:
 10360 00006D90 498D6008                	lea rsp, [r8 + 8]
 10361 00006D94 5D                      	pop rbp
 10362 00006D95 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10363                                  .L_if_end_0130:
 10364                                  .L_if_end_0131:
 10365                                  .L_if_end_0132:
 10366 00006D98 E9E9020000              	jmp .L_if_end_0137
 10367                                  .L_if_else_0137:
 10368                                  	; preparing a non-tail-call
 10369 00006D9D 488B4520                	mov rax, PARAM(0)	; param a
 10370 00006DA1 50                      	push rax
 10371 00006DA2 6A01                    	push 1	; arg count
 10372 00006DA4 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 10373 00006DAC 803805                  	cmp byte [rax], T_undefined
 10374 00006DAF 0F84BFE40000            	je L_error_fvar_undefined
 10375 00006DB5 803804                  	cmp byte [rax], T_closure
 10376 00006DB8 0F853AE50000            	jne L_error_non_closure
 10377 00006DBE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10378 00006DC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10379 00006DC4 483D[02000000]          	cmp rax, sob_boolean_false
 10380 00006DCA 0F8464020000            	je .L_if_else_0136
 10381                                  	; preparing a non-tail-call
 10382 00006DD0 488B4528                	mov rax, PARAM(1)	; param b
 10383 00006DD4 50                      	push rax
 10384 00006DD5 6A01                    	push 1	; arg count
 10385 00006DD7 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 10386 00006DDF 803805                  	cmp byte [rax], T_undefined
 10387 00006DE2 0F848CE40000            	je L_error_fvar_undefined
 10388 00006DE8 803804                  	cmp byte [rax], T_closure
 10389 00006DEB 0F8507E50000            	jne L_error_non_closure
 10390 00006DF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10391 00006DF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10392 00006DF7 483D[02000000]          	cmp rax, sob_boolean_false
 10393 00006DFD 0F848B000000            	je .L_if_else_0135
 10394                                  	; Initiating tail-call optimization
 10395                                  	; preparing a non-tail-call
 10396 00006E03 488B4528                	mov rax, PARAM(1)	; param b
 10397 00006E07 50                      	push rax
 10398 00006E08 6A01                    	push 1	; arg count
 10399 00006E0A 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10400 00006E12 803805                  	cmp byte [rax], T_undefined
 10401 00006E15 0F8459E40000            	je L_error_fvar_undefined
 10402 00006E1B 803804                  	cmp byte [rax], T_closure
 10403 00006E1E 0F85D4E40000            	jne L_error_non_closure
 10404 00006E24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10405 00006E27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10406 00006E2A 50                      	push rax
 10407 00006E2B 488B4520                	mov rax, PARAM(0)	; param a
 10408 00006E2F 50                      	push rax
 10409 00006E30 6A02                    	push 2	; Number of arguments
 10410 00006E32 488B0425[910F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10411 00006E3A 803805                  	cmp byte [rax], T_undefined
 10412 00006E3D 0F8431E40000            	je L_error_fvar_undefined
 10413 00006E43 803804                  	cmp byte [rax], T_closure
 10414 00006E46 0F85ACE40000            	jne L_error_non_closure
 10415 00006E4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10416 00006E4F FF7508                  	push qword [rbp + 8]
 10417 00006E52 FF7500                  	push qword [rbp]
 10418 00006E55 41BA06000000            	mov r10, 2 + 4
 10419 00006E5B 4C8B4518                	mov r8, COUNT
 10420 00006E5F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10421 00006E64 4C8D4DF8                	lea r9, [rbp - 8]
 10422                                  .L_tc_recycle_frame_loop_0216:
 10423 00006E68 4983FA00                	cmp r10, 0
 10424 00006E6C 7413                    	je .L_tc_recycle_frame_done_0216
 10425 00006E6E 4D8B19                  	mov r11, qword [r9]
 10426 00006E71 4D8918                  	mov qword [r8], r11
 10427 00006E74 49FFCA                  	dec r10
 10428 00006E77 4983E808                	sub r8, 8
 10429 00006E7B 4983E908                	sub r9, 8
 10430 00006E7F EBE7                    	jmp .L_tc_recycle_frame_loop_0216
 10431                                  .L_tc_recycle_frame_done_0216:
 10432 00006E81 498D6008                	lea rsp, [r8 + 8]
 10433 00006E85 5D                      	pop rbp
 10434 00006E86 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10435 00006E89 E9A4010000              	jmp .L_if_end_0135
 10436                                  .L_if_else_0135:
 10437                                  	; preparing a non-tail-call
 10438 00006E8E 488B4528                	mov rax, PARAM(1)	; param b
 10439 00006E92 50                      	push rax
 10440 00006E93 6A01                    	push 1	; arg count
 10441 00006E95 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10442 00006E9D 803805                  	cmp byte [rax], T_undefined
 10443 00006EA0 0F84CEE30000            	je L_error_fvar_undefined
 10444 00006EA6 803804                  	cmp byte [rax], T_closure
 10445 00006EA9 0F8549E40000            	jne L_error_non_closure
 10446 00006EAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10447 00006EB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10448 00006EB5 483D[02000000]          	cmp rax, sob_boolean_false
 10449 00006EBB 0F848B000000            	je .L_if_else_0134
 10450                                  	; Initiating tail-call optimization
 10451                                  	; preparing a non-tail-call
 10452 00006EC1 488B4528                	mov rax, PARAM(1)	; param b
 10453 00006EC5 50                      	push rax
 10454 00006EC6 6A01                    	push 1	; arg count
 10455 00006EC8 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10456 00006ED0 803805                  	cmp byte [rax], T_undefined
 10457 00006ED3 0F849BE30000            	je L_error_fvar_undefined
 10458 00006ED9 803804                  	cmp byte [rax], T_closure
 10459 00006EDC 0F8516E40000            	jne L_error_non_closure
 10460 00006EE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10461 00006EE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10462 00006EE8 50                      	push rax
 10463 00006EE9 488B4520                	mov rax, PARAM(0)	; param a
 10464 00006EED 50                      	push rax
 10465 00006EEE 6A02                    	push 2	; Number of arguments
 10466 00006EF0 488B0425[910F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10467 00006EF8 803805                  	cmp byte [rax], T_undefined
 10468 00006EFB 0F8473E30000            	je L_error_fvar_undefined
 10469 00006F01 803804                  	cmp byte [rax], T_closure
 10470 00006F04 0F85EEE30000            	jne L_error_non_closure
 10471 00006F0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10472 00006F0D FF7508                  	push qword [rbp + 8]
 10473 00006F10 FF7500                  	push qword [rbp]
 10474 00006F13 41BA06000000            	mov r10, 2 + 4
 10475 00006F19 4C8B4518                	mov r8, COUNT
 10476 00006F1D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10477 00006F22 4C8D4DF8                	lea r9, [rbp - 8]
 10478                                  .L_tc_recycle_frame_loop_0217:
 10479 00006F26 4983FA00                	cmp r10, 0
 10480 00006F2A 7413                    	je .L_tc_recycle_frame_done_0217
 10481 00006F2C 4D8B19                  	mov r11, qword [r9]
 10482 00006F2F 4D8918                  	mov qword [r8], r11
 10483 00006F32 49FFCA                  	dec r10
 10484 00006F35 4983E808                	sub r8, 8
 10485 00006F39 4983E908                	sub r9, 8
 10486 00006F3D EBE7                    	jmp .L_tc_recycle_frame_loop_0217
 10487                                  .L_tc_recycle_frame_done_0217:
 10488 00006F3F 498D6008                	lea rsp, [r8 + 8]
 10489 00006F43 5D                      	pop rbp
 10490 00006F44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10491 00006F47 E9E6000000              	jmp .L_if_end_0134
 10492                                  .L_if_else_0134:
 10493                                  	; preparing a non-tail-call
 10494 00006F4C 488B4528                	mov rax, PARAM(1)	; param b
 10495 00006F50 50                      	push rax
 10496 00006F51 6A01                    	push 1	; arg count
 10497 00006F53 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 10498 00006F5B 803805                  	cmp byte [rax], T_undefined
 10499 00006F5E 0F8410E30000            	je L_error_fvar_undefined
 10500 00006F64 803804                  	cmp byte [rax], T_closure
 10501 00006F67 0F858BE30000            	jne L_error_non_closure
 10502 00006F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10503 00006F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10504 00006F73 483D[02000000]          	cmp rax, sob_boolean_false
 10505 00006F79 7465                    	je .L_if_else_0133
 10506                                  	; Initiating tail-call optimization
 10507 00006F7B 488B4528                	mov rax, PARAM(1)	; param b
 10508 00006F7F 50                      	push rax
 10509 00006F80 488B4520                	mov rax, PARAM(0)	; param a
 10510 00006F84 50                      	push rax
 10511 00006F85 6A02                    	push 2	; Number of arguments
 10512 00006F87 488B0425[910F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10513 00006F8F 803805                  	cmp byte [rax], T_undefined
 10514 00006F92 0F84DCE20000            	je L_error_fvar_undefined
 10515 00006F98 803804                  	cmp byte [rax], T_closure
 10516 00006F9B 0F8557E30000            	jne L_error_non_closure
 10517 00006FA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10518 00006FA4 FF7508                  	push qword [rbp + 8]
 10519 00006FA7 FF7500                  	push qword [rbp]
 10520 00006FAA 41BA06000000            	mov r10, 2 + 4
 10521 00006FB0 4C8B4518                	mov r8, COUNT
 10522 00006FB4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10523 00006FB9 4C8D4DF8                	lea r9, [rbp - 8]
 10524                                  .L_tc_recycle_frame_loop_0218:
 10525 00006FBD 4983FA00                	cmp r10, 0
 10526 00006FC1 7413                    	je .L_tc_recycle_frame_done_0218
 10527 00006FC3 4D8B19                  	mov r11, qword [r9]
 10528 00006FC6 4D8918                  	mov qword [r8], r11
 10529 00006FC9 49FFCA                  	dec r10
 10530 00006FCC 4983E808                	sub r8, 8
 10531 00006FD0 4983E908                	sub r9, 8
 10532 00006FD4 EBE7                    	jmp .L_tc_recycle_frame_loop_0218
 10533                                  .L_tc_recycle_frame_done_0218:
 10534 00006FD6 498D6008                	lea rsp, [r8 + 8]
 10535 00006FDA 5D                      	pop rbp
 10536 00006FDB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10537 00006FDE EB52                    	jmp .L_if_end_0133
 10538                                  .L_if_else_0133:
 10539                                  	; Initiating tail-call optimization
 10540 00006FE0 6A00                    	push 0	; Number of arguments
 10541 00006FE2 488B4510                	mov rax, ENV
 10542 00006FE6 488B00                  	mov rax, qword [rax + 8 * 0]
 10543 00006FE9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10544 00006FEC 803804                  	cmp byte [rax], T_closure
 10545 00006FEF 0F8503E30000            	jne L_error_non_closure
 10546 00006FF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10547 00006FF8 FF7508                  	push qword [rbp + 8]
 10548 00006FFB FF7500                  	push qword [rbp]
 10549 00006FFE 41BA04000000            	mov r10, 0 + 4
 10550 00007004 4C8B4518                	mov r8, COUNT
 10551 00007008 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10552 0000700D 4C8D4DF8                	lea r9, [rbp - 8]
 10553                                  .L_tc_recycle_frame_loop_0219:
 10554 00007011 4983FA00                	cmp r10, 0
 10555 00007015 7413                    	je .L_tc_recycle_frame_done_0219
 10556 00007017 4D8B19                  	mov r11, qword [r9]
 10557 0000701A 4D8918                  	mov qword [r8], r11
 10558 0000701D 49FFCA                  	dec r10
 10559 00007020 4983E808                	sub r8, 8
 10560 00007024 4983E908                	sub r9, 8
 10561 00007028 EBE7                    	jmp .L_tc_recycle_frame_loop_0219
 10562                                  .L_tc_recycle_frame_done_0219:
 10563 0000702A 498D6008                	lea rsp, [r8 + 8]
 10564 0000702E 5D                      	pop rbp
 10565 0000702F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10566                                  .L_if_end_0133:
 10567                                  .L_if_end_0134:
 10568                                  .L_if_end_0135:
 10569 00007032 EB52                    	jmp .L_if_end_0136
 10570                                  .L_if_else_0136:
 10571                                  	; Initiating tail-call optimization
 10572 00007034 6A00                    	push 0	; Number of arguments
 10573 00007036 488B4510                	mov rax, ENV
 10574 0000703A 488B00                  	mov rax, qword [rax + 8 * 0]
 10575 0000703D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10576 00007040 803804                  	cmp byte [rax], T_closure
 10577 00007043 0F85AFE20000            	jne L_error_non_closure
 10578 00007049 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10579 0000704C FF7508                  	push qword [rbp + 8]
 10580 0000704F FF7500                  	push qword [rbp]
 10581 00007052 41BA04000000            	mov r10, 0 + 4
 10582 00007058 4C8B4518                	mov r8, COUNT
 10583 0000705C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10584 00007061 4C8D4DF8                	lea r9, [rbp - 8]
 10585                                  .L_tc_recycle_frame_loop_021a:
 10586 00007065 4983FA00                	cmp r10, 0
 10587 00007069 7413                    	je .L_tc_recycle_frame_done_021a
 10588 0000706B 4D8B19                  	mov r11, qword [r9]
 10589 0000706E 4D8918                  	mov qword [r8], r11
 10590 00007071 49FFCA                  	dec r10
 10591 00007074 4983E808                	sub r8, 8
 10592 00007078 4983E908                	sub r9, 8
 10593 0000707C EBE7                    	jmp .L_tc_recycle_frame_loop_021a
 10594                                  .L_tc_recycle_frame_done_021a:
 10595 0000707E 498D6008                	lea rsp, [r8 + 8]
 10596 00007082 5D                      	pop rbp
 10597 00007083 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10598                                  .L_if_end_0136:
 10599                                  .L_if_end_0137:
 10600                                  .L_if_end_0138:
 10601 00007086 C9                      	leave
 10602 00007087 C22000                  	ret AND_KILL_FRAME(2)
 10603                                  .L_lambda_simple_end_01af:	; new closure is in rax
 10604 0000708A 50                      	push rax
 10605 0000708B 6A01                    	push 1	; Number of arguments
 10606 0000708D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10607 00007092 E80AE30000              	call malloc
 10608 00007097 50                      	push rax
 10609 00007098 BF08000000              	mov rdi, 8 * 1	; new rib
 10610 0000709D E8FFE20000              	call malloc
 10611 000070A2 50                      	push rax
 10612 000070A3 BF10000000              	mov rdi, 8 * 2	; extended env
 10613 000070A8 E8F4E20000              	call malloc
 10614 000070AD 488B7D10                	mov rdi, ENV
 10615 000070B1 BE00000000              	mov rsi, 0
 10616 000070B6 BA01000000              	mov rdx, 1
 10617                                  .L_lambda_simple_env_loop_01b0:	; ext_env[i + 1] <-- env[i]
 10618 000070BB 4883FE01                	cmp rsi, 1
 10619 000070BF 7410                    	je .L_lambda_simple_env_end_01b0
 10620 000070C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10621 000070C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10622 000070C9 48FFC6                  	inc rsi
 10623 000070CC 48FFC2                  	inc rdx
 10624 000070CF EBEA                    	jmp .L_lambda_simple_env_loop_01b0
 10625                                  .L_lambda_simple_env_end_01b0:
 10626 000070D1 5B                      	pop rbx
 10627 000070D2 BE00000000              	mov rsi, 0
 10628                                  .L_lambda_simple_params_loop_01b0:	; copy params
 10629 000070D7 4883FE01                	cmp rsi, 1
 10630 000070DB 740E                    	je .L_lambda_simple_params_end_01b0
 10631 000070DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10632 000070E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10633 000070E6 48FFC6                  	inc rsi
 10634 000070E9 EBEC                    	jmp .L_lambda_simple_params_loop_01b0
 10635                                  .L_lambda_simple_params_end_01b0:
 10636 000070EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10637 000070EE 4889C3                  	mov rbx, rax
 10638 000070F1 58                      	pop rax
 10639 000070F2 C60004                  	mov byte [rax], T_closure
 10640 000070F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10641 000070F9 48C74009[06710000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b0
 10642 00007101 E9BB030000              	jmp .L_lambda_simple_end_01b0
 10643                                  .L_lambda_simple_code_01b0:	; lambda-simple body
 10644 00007106 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10645 0000710C 740B                    	je .L_lambda_simple_arity_check_ok_01b0
 10646 0000710E FF742410                	push qword [rsp + 8 * 2]
 10647 00007112 6A01                    	push 1
 10648 00007114 E941E20000              	jmp L_error_incorrect_arity_simple
 10649                                  .L_lambda_simple_arity_check_ok_01b0:
 10650 00007119 C8000000                	enter 0, 0
 10651 0000711D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10652 00007122 E87AE20000              	call malloc
 10653 00007127 50                      	push rax
 10654 00007128 BF08000000              	mov rdi, 8 * 1	; new rib
 10655 0000712D E86FE20000              	call malloc
 10656 00007132 50                      	push rax
 10657 00007133 BF18000000              	mov rdi, 8 * 3	; extended env
 10658 00007138 E864E20000              	call malloc
 10659 0000713D 488B7D10                	mov rdi, ENV
 10660 00007141 BE00000000              	mov rsi, 0
 10661 00007146 BA01000000              	mov rdx, 1
 10662                                  .L_lambda_opt_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 10663 0000714B 4883FE02                	cmp rsi, 2
 10664 0000714F 7410                    	je .L_lambda_opt_env_end_003d
 10665 00007151 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10666 00007155 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10667 00007159 48FFC6                  	inc rsi
 10668 0000715C 48FFC2                  	inc rdx
 10669 0000715F EBEA                    	jmp .L_lambda_opt_env_loop_003d
 10670                                  .L_lambda_opt_env_end_003d:
 10671 00007161 5B                      	pop rbx
 10672 00007162 BE00000000              	mov rsi, 0
 10673                                  .L_lambda_opt_params_loop_003d:	; copy params
 10674 00007167 4883FE01                	cmp rsi, 1
 10675 0000716B 740E                    	je .L_lambda_opt_params_end_003d
 10676 0000716D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10677 00007172 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10678 00007176 48FFC6                  	inc rsi
 10679 00007179 EBEC                    	jmp .L_lambda_opt_params_loop_003d
 10680                                  .L_lambda_opt_params_end_003d:
 10681 0000717B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10682 0000717E 4889C3                  	mov rbx, rax
 10683 00007181 58                      	pop rax
 10684 00007182 C60004                  	mov byte [rax], T_closure
 10685 00007185 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10686 00007189 48C74009[96710000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003d
 10687 00007191 E927030000              	jmp .L_lambda_opt_end_003d
 10688                                  .L_lambda_opt_code_003d:
 10689 00007196 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 10690 0000719B 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 10691 0000719F 7407                    	je .L_lambda_opt_arity_check_exact_003d	; Jump if arity matches
 10692 000071A1 7F4C                    	jg .L_lambda_opt_arity_check_more_003d	; Jump if more arguments passed
 10693 000071A3 E9C6E10000              	jmp L_error_incorrect_arity_opt
 10694                                  .L_lambda_opt_arity_check_exact_003d:
 10695 000071A8 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 10696 000071AB 4983C603                	add r14, 3 ; add 3 first stack values
 10697 000071AF 41BF00000000            	mov r15, 0 ; r15 = index
 10698 000071B5 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 10699 000071B9 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 10700 000071C1 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003d
 10701                                  .L_lambda_opt_stack_shrink_loop_003d:
 10702 000071C3 4983FE00                	cmp r14, 0
 10703 000071C7 7E11                    	jle .L_make_lambda_opt_exact_finish_003d
 10704 000071C9 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 10705 000071CE 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 10706 000071D2 49FFCE                  	dec r14 ; next loop value
 10707 000071D5 49FFC7                  	inc r15 ; update i
 10708 000071D8 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003d
 10709                                  .L_make_lambda_opt_exact_finish_003d:
 10710 000071DA 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 10711 000071E2 49FFC2                  	inc r10
 10712 000071E5 4C89542410              	mov qword [rsp + 8 * 2], r10
 10713 000071EA E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003d
 10714                                  .L_lambda_opt_arity_check_more_003d:
 10715 000071EF 4D89D6                  	mov r14, r10 ; r14 = num args
 10716 000071F2 4D89D7                  	mov r15, r10 ; r15 = num args
 10717 000071F5 41B901000000            	mov r9, 1; r9 = number of params 
 10718 000071FB 4D29CE                  	sub r14, r9 ; r14 = extra args
 10719 000071FE 4D01F1                  	add r9, r14 ; r9 = num args
 10720 00007201 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 10720 00007203 [0100000000000000] 
 10721 0000720B EB00                    	jmp .L_make_lambda_opt_arg_list_003d
 10722                                  .L_make_lambda_opt_arg_list_003d:
 10723 0000720D 4983FE00                	cmp r14, 0
 10724 00007211 7E25                    	jle .L_make_lambda_opt_stack_fixed_003d
 10725 00007213 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 10726 00007218 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 10727 0000721D E87FE10000              	call malloc                         ; Allocate memory, result in rax
 10728 00007222 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 10729 00007225 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 10730 00007229 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 10731 0000722D 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 10732 00007230 49FFC9                  	dec r9                              ; args index minus 1
 10733 00007233 49FFCE                  	dec r14                             ; next iteration
 10734 00007236 EBD5                    	jmp .L_make_lambda_opt_arg_list_003d
 10735                                  .L_make_lambda_opt_stack_fixed_003d:
 10736 00007238 4D89FE                  	mov r14, r15 ; r14 = num args
 10737 0000723B 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 10738 0000723E 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 10739 00007242 4D89C1                  	mov r9, r8
 10740 00007245 41BA01000000            	mov r10, 1; r10 = num of params
 10741 0000724B 4D29D6                  	sub r14, r10 ; r14 = extra args
 10742 0000724E 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 10743 00007251 49FFCE                  	dec r14 ; how much we need to change stack wise?
 10744 00007254 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 10745 00007259 4D89CC                  	mov r12, r9
 10746 0000725C 4D29F4                  	sub r12, r14
 10747 0000725F 49FFCC                  	dec r12
 10748 00007262 49FFCC                  	dec r12
 10749 00007265 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003d
 10750                                  .L_lambda_opt_stack_shrink_loop_more_003d:
 10751 00007267 4983F800                	cmp r8, 0
 10752 0000726B 7E16                    	jle .L_make_lambda_opt_more_finish_003d
 10753 0000726D 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 10754 00007271 4D01F4                  	add r12, r14
 10755 00007274 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 10756 00007278 49FFC8                  	dec r8 ; next iteration
 10757 0000727B 4D29F4                  	sub r12, r14 ; next iteration
 10758 0000727E 49FFCC                  	dec r12 ; next iteration
 10759 00007281 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003d
 10760                                  .L_make_lambda_opt_more_finish_003d:
 10761 00007283 41BA01000000            	mov r10, 1
 10762 00007289 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 10763 00007292 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 10764 00007296 4C01F4                  	add rsp, r14  ; Add to rsp
 10765 00007299 EB00                    	jmp .L_lambda_opt_stack_adjusted_003d
 10766                                  .L_lambda_opt_stack_adjusted_003d:
 10767 0000729B C8000000                	enter 0, 0
 10768                                  	; preparing a non-tail-call
 10769 0000729F 488B4528                	mov rax, PARAM(1)	; param s
 10770 000072A3 50                      	push rax
 10771 000072A4 6A01                    	push 1	; arg count
 10772 000072A6 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 10773 000072AE 803805                  	cmp byte [rax], T_undefined
 10774 000072B1 0F84BDDF0000            	je L_error_fvar_undefined
 10775 000072B7 803804                  	cmp byte [rax], T_closure
 10776 000072BA 0F8538E00000            	jne L_error_non_closure
 10777 000072C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10778 000072C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10779 000072C6 483D[02000000]          	cmp rax, sob_boolean_false
 10780 000072CC 7467                    	je .L_if_else_0139
 10781                                  	; Initiating tail-call optimization
 10782 000072CE 488B4520                	mov rax, PARAM(0)	; param a
 10783 000072D2 50                      	push rax
 10784 000072D3 48B8-                   	mov rax, L_constants + 2135
 10784 000072D5 [5708000000000000] 
 10785 000072DD 50                      	push rax
 10786 000072DE 6A02                    	push 2	; Number of arguments
 10787 000072E0 488B4510                	mov rax, ENV
 10788 000072E4 488B00                  	mov rax, qword [rax + 8 * 0]
 10789 000072E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10790 000072EA 803804                  	cmp byte [rax], T_closure
 10791 000072ED 0F8505E00000            	jne L_error_non_closure
 10792 000072F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10793 000072F6 FF7508                  	push qword [rbp + 8]
 10794 000072F9 FF7500                  	push qword [rbp]
 10795 000072FC 41BA06000000            	mov r10, 2 + 4
 10796 00007302 4C8B4518                	mov r8, COUNT
 10797 00007306 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10798 0000730B 4C8D4DF8                	lea r9, [rbp - 8]
 10799                                  .L_tc_recycle_frame_loop_021b:
 10800 0000730F 4983FA00                	cmp r10, 0
 10801 00007313 7413                    	je .L_tc_recycle_frame_done_021b
 10802 00007315 4D8B19                  	mov r11, qword [r9]
 10803 00007318 4D8918                  	mov qword [r8], r11
 10804 0000731B 49FFCA                  	dec r10
 10805 0000731E 4983E808                	sub r8, 8
 10806 00007322 4983E908                	sub r9, 8
 10807 00007326 EBE7                    	jmp .L_tc_recycle_frame_loop_021b
 10808                                  .L_tc_recycle_frame_done_021b:
 10809 00007328 498D6008                	lea rsp, [r8 + 8]
 10810 0000732C 5D                      	pop rbp
 10811 0000732D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10812 00007330 E984010000              	jmp .L_if_end_0139
 10813                                  .L_if_else_0139:
 10814                                  	; Initiating tail-call optimization
 10815                                  	; preparing a non-tail-call
 10816 00007335 488B4528                	mov rax, PARAM(1)	; param s
 10817 00007339 50                      	push rax
 10818 0000733A 48B8-                   	mov rax, L_constants + 2135
 10818 0000733C [5708000000000000] 
 10819 00007344 50                      	push rax
 10820 00007345 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 10821 0000734D 803805                  	cmp byte [rax], T_undefined
 10822 00007350 0F841EDF0000            	je L_error_fvar_undefined
 10823 00007356 50                      	push rax
 10824 00007357 6A03                    	push 3	; arg count
 10825 00007359 488B0425[7C130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10826 00007361 803805                  	cmp byte [rax], T_undefined
 10827 00007364 0F840ADF0000            	je L_error_fvar_undefined
 10828 0000736A 803804                  	cmp byte [rax], T_closure
 10829 0000736D 0F8585DF0000            	jne L_error_non_closure
 10830 00007373 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10831 00007376 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10832 00007379 50                      	push rax
 10833 0000737A 6A01                    	push 1	; Number of arguments
 10834 0000737C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10835 00007381 E81BE00000              	call malloc
 10836 00007386 50                      	push rax
 10837 00007387 BF10000000              	mov rdi, 8 * 2	; new rib
 10838 0000738C E810E00000              	call malloc
 10839 00007391 50                      	push rax
 10840 00007392 BF20000000              	mov rdi, 8 * 4	; extended env
 10841 00007397 E805E00000              	call malloc
 10842 0000739C 488B7D10                	mov rdi, ENV
 10843 000073A0 BE00000000              	mov rsi, 0
 10844 000073A5 BA01000000              	mov rdx, 1
 10845                                  .L_lambda_simple_env_loop_01b1:	; ext_env[i + 1] <-- env[i]
 10846 000073AA 4883FE03                	cmp rsi, 3
 10847 000073AE 7410                    	je .L_lambda_simple_env_end_01b1
 10848 000073B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10849 000073B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10850 000073B8 48FFC6                  	inc rsi
 10851 000073BB 48FFC2                  	inc rdx
 10852 000073BE EBEA                    	jmp .L_lambda_simple_env_loop_01b1
 10853                                  .L_lambda_simple_env_end_01b1:
 10854 000073C0 5B                      	pop rbx
 10855 000073C1 BE00000000              	mov rsi, 0
 10856                                  .L_lambda_simple_params_loop_01b1:	; copy params
 10857 000073C6 4883FE02                	cmp rsi, 2
 10858 000073CA 740E                    	je .L_lambda_simple_params_end_01b1
 10859 000073CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10860 000073D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10861 000073D5 48FFC6                  	inc rsi
 10862 000073D8 EBEC                    	jmp .L_lambda_simple_params_loop_01b1
 10863                                  .L_lambda_simple_params_end_01b1:
 10864 000073DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10865 000073DD 4889C3                  	mov rbx, rax
 10866 000073E0 58                      	pop rax
 10867 000073E1 C60004                  	mov byte [rax], T_closure
 10868 000073E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10869 000073E8 48C74009[F5730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b1
 10870 000073F0 E97E000000              	jmp .L_lambda_simple_end_01b1
 10871                                  .L_lambda_simple_code_01b1:	; lambda-simple body
 10872 000073F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10873 000073FB 740B                    	je .L_lambda_simple_arity_check_ok_01b1
 10874 000073FD FF742410                	push qword [rsp + 8 * 2]
 10875 00007401 6A01                    	push 1
 10876 00007403 E952DF0000              	jmp L_error_incorrect_arity_simple
 10877                                  .L_lambda_simple_arity_check_ok_01b1:
 10878 00007408 C8000000                	enter 0, 0
 10879                                  	; Initiating tail-call optimization
 10880 0000740C 488B4520                	mov rax, PARAM(0)	; param b
 10881 00007410 50                      	push rax
 10882 00007411 488B4510                	mov rax, ENV
 10883 00007415 488B00                  	mov rax, qword [rax + 8 * 0]
 10884 00007418 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 10885 0000741B 50                      	push rax
 10886 0000741C 6A02                    	push 2	; Number of arguments
 10887 0000741E 488B4510                	mov rax, ENV
 10888 00007422 488B4008                	mov rax, qword [rax + 8 * 1]
 10889 00007426 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10890 00007429 803804                  	cmp byte [rax], T_closure
 10891 0000742C 0F85C6DE0000            	jne L_error_non_closure
 10892 00007432 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10893 00007435 FF7508                  	push qword [rbp + 8]
 10894 00007438 FF7500                  	push qword [rbp]
 10895 0000743B 41BA06000000            	mov r10, 2 + 4
 10896 00007441 4C8B4518                	mov r8, COUNT
 10897 00007445 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10898 0000744A 4C8D4DF8                	lea r9, [rbp - 8]
 10899                                  .L_tc_recycle_frame_loop_021c:
 10900 0000744E 4983FA00                	cmp r10, 0
 10901 00007452 7413                    	je .L_tc_recycle_frame_done_021c
 10902 00007454 4D8B19                  	mov r11, qword [r9]
 10903 00007457 4D8918                  	mov qword [r8], r11
 10904 0000745A 49FFCA                  	dec r10
 10905 0000745D 4983E808                	sub r8, 8
 10906 00007461 4983E908                	sub r9, 8
 10907 00007465 EBE7                    	jmp .L_tc_recycle_frame_loop_021c
 10908                                  .L_tc_recycle_frame_done_021c:
 10909 00007467 498D6008                	lea rsp, [r8 + 8]
 10910 0000746B 5D                      	pop rbp
 10911 0000746C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10912 0000746F C9                      	leave
 10913 00007470 C21800                  	ret AND_KILL_FRAME(1)
 10914                                  .L_lambda_simple_end_01b1:	; new closure is in rax
 10915 00007473 803804                  	cmp byte [rax], T_closure
 10916 00007476 0F857CDE0000            	jne L_error_non_closure
 10917 0000747C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10918 0000747F FF7508                  	push qword [rbp + 8]
 10919 00007482 FF7500                  	push qword [rbp]
 10920 00007485 41BA05000000            	mov r10, 1 + 4
 10921 0000748B 4C8B4518                	mov r8, COUNT
 10922 0000748F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10923 00007494 4C8D4DF8                	lea r9, [rbp - 8]
 10924                                  .L_tc_recycle_frame_loop_021d:
 10925 00007498 4983FA00                	cmp r10, 0
 10926 0000749C 7413                    	je .L_tc_recycle_frame_done_021d
 10927 0000749E 4D8B19                  	mov r11, qword [r9]
 10928 000074A1 4D8918                  	mov qword [r8], r11
 10929 000074A4 49FFCA                  	dec r10
 10930 000074A7 4983E808                	sub r8, 8
 10931 000074AB 4983E908                	sub r9, 8
 10932 000074AF EBE7                    	jmp .L_tc_recycle_frame_loop_021d
 10933                                  .L_tc_recycle_frame_done_021d:
 10934 000074B1 498D6008                	lea rsp, [r8 + 8]
 10935 000074B5 5D                      	pop rbp
 10936 000074B6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10937                                  .L_if_end_0139:
 10938 000074B9 C9                      	leave
 10939 000074BA C22000                  	ret AND_KILL_FRAME(2)
 10940                                  .L_lambda_opt_end_003d:	; new closure is in rax
 10941 000074BD C9                      	leave
 10942 000074BE C21800                  	ret AND_KILL_FRAME(1)
 10943                                  .L_lambda_simple_end_01b0:	; new closure is in rax
 10944 000074C1 803804                  	cmp byte [rax], T_closure
 10945 000074C4 0F852EDE0000            	jne L_error_non_closure
 10946 000074CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10947 000074CD FF7508                  	push qword [rbp + 8]
 10948 000074D0 FF7500                  	push qword [rbp]
 10949 000074D3 41BA05000000            	mov r10, 1 + 4
 10950 000074D9 4C8B4518                	mov r8, COUNT
 10951 000074DD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 10952 000074E2 4C8D4DF8                	lea r9, [rbp - 8]
 10953                                  .L_tc_recycle_frame_loop_021e:
 10954 000074E6 4983FA00                	cmp r10, 0
 10955 000074EA 7413                    	je .L_tc_recycle_frame_done_021e
 10956 000074EC 4D8B19                  	mov r11, qword [r9]
 10957 000074EF 4D8918                  	mov qword [r8], r11
 10958 000074F2 49FFCA                  	dec r10
 10959 000074F5 4983E808                	sub r8, 8
 10960 000074F9 4983E908                	sub r9, 8
 10961 000074FD EBE7                    	jmp .L_tc_recycle_frame_loop_021e
 10962                                  .L_tc_recycle_frame_done_021e:
 10963 000074FF 498D6008                	lea rsp, [r8 + 8]
 10964 00007503 5D                      	pop rbp
 10965 00007504 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10966 00007507 C9                      	leave
 10967 00007508 C21800                  	ret AND_KILL_FRAME(1)
 10968                                  .L_lambda_simple_end_01ae:	; new closure is in rax
 10969 0000750B 803804                  	cmp byte [rax], T_closure
 10970 0000750E 0F85E4DD0000            	jne L_error_non_closure
 10971 00007514 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10972 00007517 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10973 0000751A 48890425[F90D0000]      	mov qword [free_var_2], rax
 10974 00007522 48B8-                   	mov rax, sob_void
 10974 00007524 [0000000000000000] 
 10975                                  
 10976 0000752C 4889C7                  	mov rdi, rax
 10977 0000752F E8C2E00000              	call print_sexpr_if_not_void
 10978                                  	; preparing a non-tail-call
 10979 00007534 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10980 00007539 E863DE0000              	call malloc
 10981 0000753E 50                      	push rax
 10982 0000753F BF00000000              	mov rdi, 8 * 0	; new rib
 10983 00007544 E858DE0000              	call malloc
 10984 00007549 50                      	push rax
 10985 0000754A BF08000000              	mov rdi, 8 * 1	; extended env
 10986 0000754F E84DDE0000              	call malloc
 10987 00007554 488B7D10                	mov rdi, ENV
 10988 00007558 BE00000000              	mov rsi, 0
 10989 0000755D BA01000000              	mov rdx, 1
 10990                                  .L_lambda_simple_env_loop_01b2:	; ext_env[i + 1] <-- env[i]
 10991 00007562 4883FE00                	cmp rsi, 0
 10992 00007566 7410                    	je .L_lambda_simple_env_end_01b2
 10993 00007568 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10994 0000756C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10995 00007570 48FFC6                  	inc rsi
 10996 00007573 48FFC2                  	inc rdx
 10997 00007576 EBEA                    	jmp .L_lambda_simple_env_loop_01b2
 10998                                  .L_lambda_simple_env_end_01b2:
 10999 00007578 5B                      	pop rbx
 11000 00007579 BE00000000              	mov rsi, 0
 11001                                  .L_lambda_simple_params_loop_01b2:	; copy params
 11002 0000757E 4883FE00                	cmp rsi, 0
 11003 00007582 740E                    	je .L_lambda_simple_params_end_01b2
 11004 00007584 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11005 00007589 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11006 0000758D 48FFC6                  	inc rsi
 11007 00007590 EBEC                    	jmp .L_lambda_simple_params_loop_01b2
 11008                                  .L_lambda_simple_params_end_01b2:
 11009 00007592 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11010 00007595 4889C3                  	mov rbx, rax
 11011 00007598 58                      	pop rax
 11012 00007599 C60004                  	mov byte [rax], T_closure
 11013 0000759C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11014 000075A0 48C74009[AD750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b2
 11015 000075A8 E98A000000              	jmp .L_lambda_simple_end_01b2
 11016                                  .L_lambda_simple_code_01b2:	; lambda-simple body
 11017 000075AD 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11018 000075B3 740B                    	je .L_lambda_simple_arity_check_ok_01b2
 11019 000075B5 FF742410                	push qword [rsp + 8 * 2]
 11020 000075B9 6A00                    	push 0
 11021 000075BB E99ADD0000              	jmp L_error_incorrect_arity_simple
 11022                                  .L_lambda_simple_arity_check_ok_01b2:
 11023 000075C0 C8000000                	enter 0, 0
 11024                                  	; Initiating tail-call optimization
 11025 000075C4 48B8-                   	mov rax, L_constants + 2187
 11025 000075C6 [8B08000000000000] 
 11026 000075CE 50                      	push rax
 11027 000075CF 48B8-                   	mov rax, L_constants + 2279
 11027 000075D1 [E708000000000000] 
 11028 000075D9 50                      	push rax
 11029 000075DA 6A02                    	push 2	; Number of arguments
 11030 000075DC 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
 11031 000075E4 803805                  	cmp byte [rax], T_undefined
 11032 000075E7 0F8487DC0000            	je L_error_fvar_undefined
 11033 000075ED 803804                  	cmp byte [rax], T_closure
 11034 000075F0 0F8502DD0000            	jne L_error_non_closure
 11035 000075F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11036 000075F9 FF7508                  	push qword [rbp + 8]
 11037 000075FC FF7500                  	push qword [rbp]
 11038 000075FF 41BA06000000            	mov r10, 2 + 4
 11039 00007605 4C8B4518                	mov r8, COUNT
 11040 00007609 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11041 0000760E 4C8D4DF8                	lea r9, [rbp - 8]
 11042                                  .L_tc_recycle_frame_loop_021f:
 11043 00007612 4983FA00                	cmp r10, 0
 11044 00007616 7413                    	je .L_tc_recycle_frame_done_021f
 11045 00007618 4D8B19                  	mov r11, qword [r9]
 11046 0000761B 4D8918                  	mov qword [r8], r11
 11047 0000761E 49FFCA                  	dec r10
 11048 00007621 4983E808                	sub r8, 8
 11049 00007625 4983E908                	sub r9, 8
 11050 00007629 EBE7                    	jmp .L_tc_recycle_frame_loop_021f
 11051                                  .L_tc_recycle_frame_done_021f:
 11052 0000762B 498D6008                	lea rsp, [r8 + 8]
 11053 0000762F 5D                      	pop rbp
 11054 00007630 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11055 00007633 C9                      	leave
 11056 00007634 C21000                  	ret AND_KILL_FRAME(0)
 11057                                  .L_lambda_simple_end_01b2:	; new closure is in rax
 11058 00007637 50                      	push rax
 11059 00007638 6A01                    	push 1	; arg count
 11060 0000763A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11061 0000763F E85DDD0000              	call malloc
 11062 00007644 50                      	push rax
 11063 00007645 BF00000000              	mov rdi, 8 * 0	; new rib
 11064 0000764A E852DD0000              	call malloc
 11065 0000764F 50                      	push rax
 11066 00007650 BF08000000              	mov rdi, 8 * 1	; extended env
 11067 00007655 E847DD0000              	call malloc
 11068 0000765A 488B7D10                	mov rdi, ENV
 11069 0000765E BE00000000              	mov rsi, 0
 11070 00007663 BA01000000              	mov rdx, 1
 11071                                  .L_lambda_simple_env_loop_01b3:	; ext_env[i + 1] <-- env[i]
 11072 00007668 4883FE00                	cmp rsi, 0
 11073 0000766C 7410                    	je .L_lambda_simple_env_end_01b3
 11074 0000766E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11075 00007672 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11076 00007676 48FFC6                  	inc rsi
 11077 00007679 48FFC2                  	inc rdx
 11078 0000767C EBEA                    	jmp .L_lambda_simple_env_loop_01b3
 11079                                  .L_lambda_simple_env_end_01b3:
 11080 0000767E 5B                      	pop rbx
 11081 0000767F BE00000000              	mov rsi, 0
 11082                                  .L_lambda_simple_params_loop_01b3:	; copy params
 11083 00007684 4883FE00                	cmp rsi, 0
 11084 00007688 740E                    	je .L_lambda_simple_params_end_01b3
 11085 0000768A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11086 0000768F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11087 00007693 48FFC6                  	inc rsi
 11088 00007696 EBEC                    	jmp .L_lambda_simple_params_loop_01b3
 11089                                  .L_lambda_simple_params_end_01b3:
 11090 00007698 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11091 0000769B 4889C3                  	mov rbx, rax
 11092 0000769E 58                      	pop rax
 11093 0000769F C60004                  	mov byte [rax], T_closure
 11094 000076A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11095 000076A6 48C74009[B3760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b3
 11096 000076AE E9A30B0000              	jmp .L_lambda_simple_end_01b3
 11097                                  .L_lambda_simple_code_01b3:	; lambda-simple body
 11098 000076B3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11099 000076B9 740B                    	je .L_lambda_simple_arity_check_ok_01b3
 11100 000076BB FF742410                	push qword [rsp + 8 * 2]
 11101 000076BF 6A01                    	push 1
 11102 000076C1 E994DC0000              	jmp L_error_incorrect_arity_simple
 11103                                  .L_lambda_simple_arity_check_ok_01b3:
 11104 000076C6 C8000000                	enter 0, 0
 11105                                  	; Initiating tail-call optimization
 11106 000076CA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11107 000076CF E8CDDC0000              	call malloc
 11108 000076D4 50                      	push rax
 11109 000076D5 BF08000000              	mov rdi, 8 * 1	; new rib
 11110 000076DA E8C2DC0000              	call malloc
 11111 000076DF 50                      	push rax
 11112 000076E0 BF10000000              	mov rdi, 8 * 2	; extended env
 11113 000076E5 E8B7DC0000              	call malloc
 11114 000076EA 488B7D10                	mov rdi, ENV
 11115 000076EE BE00000000              	mov rsi, 0
 11116 000076F3 BA01000000              	mov rdx, 1
 11117                                  .L_lambda_simple_env_loop_01b4:	; ext_env[i + 1] <-- env[i]
 11118 000076F8 4883FE01                	cmp rsi, 1
 11119 000076FC 7410                    	je .L_lambda_simple_env_end_01b4
 11120 000076FE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11121 00007702 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11122 00007706 48FFC6                  	inc rsi
 11123 00007709 48FFC2                  	inc rdx
 11124 0000770C EBEA                    	jmp .L_lambda_simple_env_loop_01b4
 11125                                  .L_lambda_simple_env_end_01b4:
 11126 0000770E 5B                      	pop rbx
 11127 0000770F BE00000000              	mov rsi, 0
 11128                                  .L_lambda_simple_params_loop_01b4:	; copy params
 11129 00007714 4883FE01                	cmp rsi, 1
 11130 00007718 740E                    	je .L_lambda_simple_params_end_01b4
 11131 0000771A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11132 0000771F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11133 00007723 48FFC6                  	inc rsi
 11134 00007726 EBEC                    	jmp .L_lambda_simple_params_loop_01b4
 11135                                  .L_lambda_simple_params_end_01b4:
 11136 00007728 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11137 0000772B 4889C3                  	mov rbx, rax
 11138 0000772E 58                      	pop rax
 11139 0000772F C60004                  	mov byte [rax], T_closure
 11140 00007732 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11141 00007736 48C74009[43770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b4
 11142 0000773E E938080000              	jmp .L_lambda_simple_end_01b4
 11143                                  .L_lambda_simple_code_01b4:	; lambda-simple body
 11144 00007743 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11145 00007749 740B                    	je .L_lambda_simple_arity_check_ok_01b4
 11146 0000774B FF742410                	push qword [rsp + 8 * 2]
 11147 0000774F 6A02                    	push 2
 11148 00007751 E904DC0000              	jmp L_error_incorrect_arity_simple
 11149                                  .L_lambda_simple_arity_check_ok_01b4:
 11150 00007756 C8000000                	enter 0, 0
 11151                                  	; preparing a non-tail-call
 11152 0000775A 488B4520                	mov rax, PARAM(0)	; param a
 11153 0000775E 50                      	push rax
 11154 0000775F 6A01                    	push 1	; arg count
 11155 00007761 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 11156 00007769 803805                  	cmp byte [rax], T_undefined
 11157 0000776C 0F8402DB0000            	je L_error_fvar_undefined
 11158 00007772 803804                  	cmp byte [rax], T_closure
 11159 00007775 0F857DDB0000            	jne L_error_non_closure
 11160 0000777B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11161 0000777E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11162 00007781 483D[02000000]          	cmp rax, sob_boolean_false
 11163 00007787 0F8467020000            	je .L_if_else_0145
 11164                                  	; preparing a non-tail-call
 11165 0000778D 488B4528                	mov rax, PARAM(1)	; param b
 11166 00007791 50                      	push rax
 11167 00007792 6A01                    	push 1	; arg count
 11168 00007794 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 11169 0000779C 803805                  	cmp byte [rax], T_undefined
 11170 0000779F 0F84CFDA0000            	je L_error_fvar_undefined
 11171 000077A5 803804                  	cmp byte [rax], T_closure
 11172 000077A8 0F854ADB0000            	jne L_error_non_closure
 11173 000077AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11174 000077B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11175 000077B4 483D[02000000]          	cmp rax, sob_boolean_false
 11176 000077BA 7468                    	je .L_if_else_013c
 11177                                  	; Initiating tail-call optimization
 11178 000077BC 488B4528                	mov rax, PARAM(1)	; param b
 11179 000077C0 50                      	push rax
 11180 000077C1 488B4520                	mov rax, PARAM(0)	; param a
 11181 000077C5 50                      	push rax
 11182 000077C6 6A02                    	push 2	; Number of arguments
 11183 000077C8 488B0425[6F0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11184 000077D0 803805                  	cmp byte [rax], T_undefined
 11185 000077D3 0F849BDA0000            	je L_error_fvar_undefined
 11186 000077D9 803804                  	cmp byte [rax], T_closure
 11187 000077DC 0F8516DB0000            	jne L_error_non_closure
 11188 000077E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11189 000077E5 FF7508                  	push qword [rbp + 8]
 11190 000077E8 FF7500                  	push qword [rbp]
 11191 000077EB 41BA06000000            	mov r10, 2 + 4
 11192 000077F1 4C8B4518                	mov r8, COUNT
 11193 000077F5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11194 000077FA 4C8D4DF8                	lea r9, [rbp - 8]
 11195                                  .L_tc_recycle_frame_loop_0220:
 11196 000077FE 4983FA00                	cmp r10, 0
 11197 00007802 7413                    	je .L_tc_recycle_frame_done_0220
 11198 00007804 4D8B19                  	mov r11, qword [r9]
 11199 00007807 4D8918                  	mov qword [r8], r11
 11200 0000780A 49FFCA                  	dec r10
 11201 0000780D 4983E808                	sub r8, 8
 11202 00007811 4983E908                	sub r9, 8
 11203 00007815 EBE7                    	jmp .L_tc_recycle_frame_loop_0220
 11204                                  .L_tc_recycle_frame_done_0220:
 11205 00007817 498D6008                	lea rsp, [r8 + 8]
 11206 0000781B 5D                      	pop rbp
 11207 0000781C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11208 0000781F E9CB010000              	jmp .L_if_end_013c
 11209                                  .L_if_else_013c:
 11210                                  	; preparing a non-tail-call
 11211 00007824 488B4528                	mov rax, PARAM(1)	; param b
 11212 00007828 50                      	push rax
 11213 00007829 6A01                    	push 1	; arg count
 11214 0000782B 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11215 00007833 803805                  	cmp byte [rax], T_undefined
 11216 00007836 0F8438DA0000            	je L_error_fvar_undefined
 11217 0000783C 803804                  	cmp byte [rax], T_closure
 11218 0000783F 0F85B3DA0000            	jne L_error_non_closure
 11219 00007845 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11220 00007848 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11221 0000784B 483D[02000000]          	cmp rax, sob_boolean_false
 11222 00007851 0F848B000000            	je .L_if_else_013b
 11223                                  	; Initiating tail-call optimization
 11224 00007857 488B4528                	mov rax, PARAM(1)	; param b
 11225 0000785B 50                      	push rax
 11226                                  	; preparing a non-tail-call
 11227 0000785C 488B4520                	mov rax, PARAM(0)	; param a
 11228 00007860 50                      	push rax
 11229 00007861 6A01                    	push 1	; arg count
 11230 00007863 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11231 0000786B 803805                  	cmp byte [rax], T_undefined
 11232 0000786E 0F8400DA0000            	je L_error_fvar_undefined
 11233 00007874 803804                  	cmp byte [rax], T_closure
 11234 00007877 0F857BDA0000            	jne L_error_non_closure
 11235 0000787D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11236 00007880 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11237 00007883 50                      	push rax
 11238 00007884 6A02                    	push 2	; Number of arguments
 11239 00007886 488B0425[4D0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11240 0000788E 803805                  	cmp byte [rax], T_undefined
 11241 00007891 0F84DDD90000            	je L_error_fvar_undefined
 11242 00007897 803804                  	cmp byte [rax], T_closure
 11243 0000789A 0F8558DA0000            	jne L_error_non_closure
 11244 000078A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11245 000078A3 FF7508                  	push qword [rbp + 8]
 11246 000078A6 FF7500                  	push qword [rbp]
 11247 000078A9 41BA06000000            	mov r10, 2 + 4
 11248 000078AF 4C8B4518                	mov r8, COUNT
 11249 000078B3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11250 000078B8 4C8D4DF8                	lea r9, [rbp - 8]
 11251                                  .L_tc_recycle_frame_loop_0221:
 11252 000078BC 4983FA00                	cmp r10, 0
 11253 000078C0 7413                    	je .L_tc_recycle_frame_done_0221
 11254 000078C2 4D8B19                  	mov r11, qword [r9]
 11255 000078C5 4D8918                  	mov qword [r8], r11
 11256 000078C8 49FFCA                  	dec r10
 11257 000078CB 4983E808                	sub r8, 8
 11258 000078CF 4983E908                	sub r9, 8
 11259 000078D3 EBE7                    	jmp .L_tc_recycle_frame_loop_0221
 11260                                  .L_tc_recycle_frame_done_0221:
 11261 000078D5 498D6008                	lea rsp, [r8 + 8]
 11262 000078D9 5D                      	pop rbp
 11263 000078DA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11264 000078DD E90D010000              	jmp .L_if_end_013b
 11265                                  .L_if_else_013b:
 11266                                  	; preparing a non-tail-call
 11267 000078E2 488B4528                	mov rax, PARAM(1)	; param b
 11268 000078E6 50                      	push rax
 11269 000078E7 6A01                    	push 1	; arg count
 11270 000078E9 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 11271 000078F1 803805                  	cmp byte [rax], T_undefined
 11272 000078F4 0F847AD90000            	je L_error_fvar_undefined
 11273 000078FA 803804                  	cmp byte [rax], T_closure
 11274 000078FD 0F85F5D90000            	jne L_error_non_closure
 11275 00007903 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11276 00007906 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11277 00007909 483D[02000000]          	cmp rax, sob_boolean_false
 11278 0000790F 0F8488000000            	je .L_if_else_013a
 11279                                  	; Initiating tail-call optimization
 11280 00007915 488B4528                	mov rax, PARAM(1)	; param b
 11281 00007919 50                      	push rax
 11282                                  	; preparing a non-tail-call
 11283 0000791A 488B4520                	mov rax, PARAM(0)	; param a
 11284 0000791E 50                      	push rax
 11285 0000791F 6A01                    	push 1	; arg count
 11286 00007921 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11287 00007929 803805                  	cmp byte [rax], T_undefined
 11288 0000792C 0F8442D90000            	je L_error_fvar_undefined
 11289 00007932 803804                  	cmp byte [rax], T_closure
 11290 00007935 0F85BDD90000            	jne L_error_non_closure
 11291 0000793B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11292 0000793E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11293 00007941 50                      	push rax
 11294 00007942 6A02                    	push 2	; Number of arguments
 11295 00007944 488B0425[5E0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11296 0000794C 803805                  	cmp byte [rax], T_undefined
 11297 0000794F 0F841FD90000            	je L_error_fvar_undefined
 11298 00007955 803804                  	cmp byte [rax], T_closure
 11299 00007958 0F859AD90000            	jne L_error_non_closure
 11300 0000795E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11301 00007961 FF7508                  	push qword [rbp + 8]
 11302 00007964 FF7500                  	push qword [rbp]
 11303 00007967 41BA06000000            	mov r10, 2 + 4
 11304 0000796D 4C8B4518                	mov r8, COUNT
 11305 00007971 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11306 00007976 4C8D4DF8                	lea r9, [rbp - 8]
 11307                                  .L_tc_recycle_frame_loop_0222:
 11308 0000797A 4983FA00                	cmp r10, 0
 11309 0000797E 7413                    	je .L_tc_recycle_frame_done_0222
 11310 00007980 4D8B19                  	mov r11, qword [r9]
 11311 00007983 4D8918                  	mov qword [r8], r11
 11312 00007986 49FFCA                  	dec r10
 11313 00007989 4983E808                	sub r8, 8
 11314 0000798D 4983E908                	sub r9, 8
 11315 00007991 EBE7                    	jmp .L_tc_recycle_frame_loop_0222
 11316                                  .L_tc_recycle_frame_done_0222:
 11317 00007993 498D6008                	lea rsp, [r8 + 8]
 11318 00007997 5D                      	pop rbp
 11319 00007998 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11320 0000799B EB52                    	jmp .L_if_end_013a
 11321                                  .L_if_else_013a:
 11322                                  	; Initiating tail-call optimization
 11323 0000799D 6A00                    	push 0	; Number of arguments
 11324 0000799F 488B4510                	mov rax, ENV
 11325 000079A3 488B00                  	mov rax, qword [rax + 8 * 0]
 11326 000079A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11327 000079A9 803804                  	cmp byte [rax], T_closure
 11328 000079AC 0F8546D90000            	jne L_error_non_closure
 11329 000079B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11330 000079B5 FF7508                  	push qword [rbp + 8]
 11331 000079B8 FF7500                  	push qword [rbp]
 11332 000079BB 41BA04000000            	mov r10, 0 + 4
 11333 000079C1 4C8B4518                	mov r8, COUNT
 11334 000079C5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11335 000079CA 4C8D4DF8                	lea r9, [rbp - 8]
 11336                                  .L_tc_recycle_frame_loop_0223:
 11337 000079CE 4983FA00                	cmp r10, 0
 11338 000079D2 7413                    	je .L_tc_recycle_frame_done_0223
 11339 000079D4 4D8B19                  	mov r11, qword [r9]
 11340 000079D7 4D8918                  	mov qword [r8], r11
 11341 000079DA 49FFCA                  	dec r10
 11342 000079DD 4983E808                	sub r8, 8
 11343 000079E1 4983E908                	sub r9, 8
 11344 000079E5 EBE7                    	jmp .L_tc_recycle_frame_loop_0223
 11345                                  .L_tc_recycle_frame_done_0223:
 11346 000079E7 498D6008                	lea rsp, [r8 + 8]
 11347 000079EB 5D                      	pop rbp
 11348 000079EC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11349                                  .L_if_end_013a:
 11350                                  .L_if_end_013b:
 11351                                  .L_if_end_013c:
 11352 000079EF E983050000              	jmp .L_if_end_0145
 11353                                  .L_if_else_0145:
 11354                                  	; preparing a non-tail-call
 11355 000079F4 488B4520                	mov rax, PARAM(0)	; param a
 11356 000079F8 50                      	push rax
 11357 000079F9 6A01                    	push 1	; arg count
 11358 000079FB 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11359 00007A03 803805                  	cmp byte [rax], T_undefined
 11360 00007A06 0F8468D80000            	je L_error_fvar_undefined
 11361 00007A0C 803804                  	cmp byte [rax], T_closure
 11362 00007A0F 0F85E3D80000            	jne L_error_non_closure
 11363 00007A15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11364 00007A18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11365 00007A1B 483D[02000000]          	cmp rax, sob_boolean_false
 11366 00007A21 0F8467020000            	je .L_if_else_0144
 11367                                  	; preparing a non-tail-call
 11368 00007A27 488B4528                	mov rax, PARAM(1)	; param b
 11369 00007A2B 50                      	push rax
 11370 00007A2C 6A01                    	push 1	; arg count
 11371 00007A2E 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 11372 00007A36 803805                  	cmp byte [rax], T_undefined
 11373 00007A39 0F8435D80000            	je L_error_fvar_undefined
 11374 00007A3F 803804                  	cmp byte [rax], T_closure
 11375 00007A42 0F85B0D80000            	jne L_error_non_closure
 11376 00007A48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11377 00007A4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11378 00007A4E 483D[02000000]          	cmp rax, sob_boolean_false
 11379 00007A54 0F848B000000            	je .L_if_else_013f
 11380                                  	; Initiating tail-call optimization
 11381                                  	; preparing a non-tail-call
 11382 00007A5A 488B4528                	mov rax, PARAM(1)	; param b
 11383 00007A5E 50                      	push rax
 11384 00007A5F 6A01                    	push 1	; arg count
 11385 00007A61 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11386 00007A69 803805                  	cmp byte [rax], T_undefined
 11387 00007A6C 0F8402D80000            	je L_error_fvar_undefined
 11388 00007A72 803804                  	cmp byte [rax], T_closure
 11389 00007A75 0F857DD80000            	jne L_error_non_closure
 11390 00007A7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11391 00007A7E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11392 00007A81 50                      	push rax
 11393 00007A82 488B4520                	mov rax, PARAM(0)	; param a
 11394 00007A86 50                      	push rax
 11395 00007A87 6A02                    	push 2	; Number of arguments
 11396 00007A89 488B0425[4D0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11397 00007A91 803805                  	cmp byte [rax], T_undefined
 11398 00007A94 0F84DAD70000            	je L_error_fvar_undefined
 11399 00007A9A 803804                  	cmp byte [rax], T_closure
 11400 00007A9D 0F8555D80000            	jne L_error_non_closure
 11401 00007AA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11402 00007AA6 FF7508                  	push qword [rbp + 8]
 11403 00007AA9 FF7500                  	push qword [rbp]
 11404 00007AAC 41BA06000000            	mov r10, 2 + 4
 11405 00007AB2 4C8B4518                	mov r8, COUNT
 11406 00007AB6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11407 00007ABB 4C8D4DF8                	lea r9, [rbp - 8]
 11408                                  .L_tc_recycle_frame_loop_0224:
 11409 00007ABF 4983FA00                	cmp r10, 0
 11410 00007AC3 7413                    	je .L_tc_recycle_frame_done_0224
 11411 00007AC5 4D8B19                  	mov r11, qword [r9]
 11412 00007AC8 4D8918                  	mov qword [r8], r11
 11413 00007ACB 49FFCA                  	dec r10
 11414 00007ACE 4983E808                	sub r8, 8
 11415 00007AD2 4983E908                	sub r9, 8
 11416 00007AD6 EBE7                    	jmp .L_tc_recycle_frame_loop_0224
 11417                                  .L_tc_recycle_frame_done_0224:
 11418 00007AD8 498D6008                	lea rsp, [r8 + 8]
 11419 00007ADC 5D                      	pop rbp
 11420 00007ADD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11421 00007AE0 E9A4010000              	jmp .L_if_end_013f
 11422                                  .L_if_else_013f:
 11423                                  	; preparing a non-tail-call
 11424 00007AE5 488B4528                	mov rax, PARAM(1)	; param b
 11425 00007AE9 50                      	push rax
 11426 00007AEA 6A01                    	push 1	; arg count
 11427 00007AEC 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11428 00007AF4 803805                  	cmp byte [rax], T_undefined
 11429 00007AF7 0F8477D70000            	je L_error_fvar_undefined
 11430 00007AFD 803804                  	cmp byte [rax], T_closure
 11431 00007B00 0F85F2D70000            	jne L_error_non_closure
 11432 00007B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11433 00007B09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11434 00007B0C 483D[02000000]          	cmp rax, sob_boolean_false
 11435 00007B12 7468                    	je .L_if_else_013e
 11436                                  	; Initiating tail-call optimization
 11437 00007B14 488B4528                	mov rax, PARAM(1)	; param b
 11438 00007B18 50                      	push rax
 11439 00007B19 488B4520                	mov rax, PARAM(0)	; param a
 11440 00007B1D 50                      	push rax
 11441 00007B1E 6A02                    	push 2	; Number of arguments
 11442 00007B20 488B0425[4D0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11443 00007B28 803805                  	cmp byte [rax], T_undefined
 11444 00007B2B 0F8443D70000            	je L_error_fvar_undefined
 11445 00007B31 803804                  	cmp byte [rax], T_closure
 11446 00007B34 0F85BED70000            	jne L_error_non_closure
 11447 00007B3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11448 00007B3D FF7508                  	push qword [rbp + 8]
 11449 00007B40 FF7500                  	push qword [rbp]
 11450 00007B43 41BA06000000            	mov r10, 2 + 4
 11451 00007B49 4C8B4518                	mov r8, COUNT
 11452 00007B4D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11453 00007B52 4C8D4DF8                	lea r9, [rbp - 8]
 11454                                  .L_tc_recycle_frame_loop_0225:
 11455 00007B56 4983FA00                	cmp r10, 0
 11456 00007B5A 7413                    	je .L_tc_recycle_frame_done_0225
 11457 00007B5C 4D8B19                  	mov r11, qword [r9]
 11458 00007B5F 4D8918                  	mov qword [r8], r11
 11459 00007B62 49FFCA                  	dec r10
 11460 00007B65 4983E808                	sub r8, 8
 11461 00007B69 4983E908                	sub r9, 8
 11462 00007B6D EBE7                    	jmp .L_tc_recycle_frame_loop_0225
 11463                                  .L_tc_recycle_frame_done_0225:
 11464 00007B6F 498D6008                	lea rsp, [r8 + 8]
 11465 00007B73 5D                      	pop rbp
 11466 00007B74 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11467 00007B77 E90D010000              	jmp .L_if_end_013e
 11468                                  .L_if_else_013e:
 11469                                  	; preparing a non-tail-call
 11470 00007B7C 488B4528                	mov rax, PARAM(1)	; param b
 11471 00007B80 50                      	push rax
 11472 00007B81 6A01                    	push 1	; arg count
 11473 00007B83 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 11474 00007B8B 803805                  	cmp byte [rax], T_undefined
 11475 00007B8E 0F84E0D60000            	je L_error_fvar_undefined
 11476 00007B94 803804                  	cmp byte [rax], T_closure
 11477 00007B97 0F855BD70000            	jne L_error_non_closure
 11478 00007B9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11479 00007BA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11480 00007BA3 483D[02000000]          	cmp rax, sob_boolean_false
 11481 00007BA9 0F8488000000            	je .L_if_else_013d
 11482                                  	; Initiating tail-call optimization
 11483 00007BAF 488B4528                	mov rax, PARAM(1)	; param b
 11484 00007BB3 50                      	push rax
 11485                                  	; preparing a non-tail-call
 11486 00007BB4 488B4520                	mov rax, PARAM(0)	; param a
 11487 00007BB8 50                      	push rax
 11488 00007BB9 6A01                    	push 1	; arg count
 11489 00007BBB 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11490 00007BC3 803805                  	cmp byte [rax], T_undefined
 11491 00007BC6 0F84A8D60000            	je L_error_fvar_undefined
 11492 00007BCC 803804                  	cmp byte [rax], T_closure
 11493 00007BCF 0F8523D70000            	jne L_error_non_closure
 11494 00007BD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11495 00007BD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11496 00007BDB 50                      	push rax
 11497 00007BDC 6A02                    	push 2	; Number of arguments
 11498 00007BDE 488B0425[5E0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11499 00007BE6 803805                  	cmp byte [rax], T_undefined
 11500 00007BE9 0F8485D60000            	je L_error_fvar_undefined
 11501 00007BEF 803804                  	cmp byte [rax], T_closure
 11502 00007BF2 0F8500D70000            	jne L_error_non_closure
 11503 00007BF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11504 00007BFB FF7508                  	push qword [rbp + 8]
 11505 00007BFE FF7500                  	push qword [rbp]
 11506 00007C01 41BA06000000            	mov r10, 2 + 4
 11507 00007C07 4C8B4518                	mov r8, COUNT
 11508 00007C0B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11509 00007C10 4C8D4DF8                	lea r9, [rbp - 8]
 11510                                  .L_tc_recycle_frame_loop_0226:
 11511 00007C14 4983FA00                	cmp r10, 0
 11512 00007C18 7413                    	je .L_tc_recycle_frame_done_0226
 11513 00007C1A 4D8B19                  	mov r11, qword [r9]
 11514 00007C1D 4D8918                  	mov qword [r8], r11
 11515 00007C20 49FFCA                  	dec r10
 11516 00007C23 4983E808                	sub r8, 8
 11517 00007C27 4983E908                	sub r9, 8
 11518 00007C2B EBE7                    	jmp .L_tc_recycle_frame_loop_0226
 11519                                  .L_tc_recycle_frame_done_0226:
 11520 00007C2D 498D6008                	lea rsp, [r8 + 8]
 11521 00007C31 5D                      	pop rbp
 11522 00007C32 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11523 00007C35 EB52                    	jmp .L_if_end_013d
 11524                                  .L_if_else_013d:
 11525                                  	; Initiating tail-call optimization
 11526 00007C37 6A00                    	push 0	; Number of arguments
 11527 00007C39 488B4510                	mov rax, ENV
 11528 00007C3D 488B00                  	mov rax, qword [rax + 8 * 0]
 11529 00007C40 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11530 00007C43 803804                  	cmp byte [rax], T_closure
 11531 00007C46 0F85ACD60000            	jne L_error_non_closure
 11532 00007C4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11533 00007C4F FF7508                  	push qword [rbp + 8]
 11534 00007C52 FF7500                  	push qword [rbp]
 11535 00007C55 41BA04000000            	mov r10, 0 + 4
 11536 00007C5B 4C8B4518                	mov r8, COUNT
 11537 00007C5F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11538 00007C64 4C8D4DF8                	lea r9, [rbp - 8]
 11539                                  .L_tc_recycle_frame_loop_0227:
 11540 00007C68 4983FA00                	cmp r10, 0
 11541 00007C6C 7413                    	je .L_tc_recycle_frame_done_0227
 11542 00007C6E 4D8B19                  	mov r11, qword [r9]
 11543 00007C71 4D8918                  	mov qword [r8], r11
 11544 00007C74 49FFCA                  	dec r10
 11545 00007C77 4983E808                	sub r8, 8
 11546 00007C7B 4983E908                	sub r9, 8
 11547 00007C7F EBE7                    	jmp .L_tc_recycle_frame_loop_0227
 11548                                  .L_tc_recycle_frame_done_0227:
 11549 00007C81 498D6008                	lea rsp, [r8 + 8]
 11550 00007C85 5D                      	pop rbp
 11551 00007C86 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11552                                  .L_if_end_013d:
 11553                                  .L_if_end_013e:
 11554                                  .L_if_end_013f:
 11555 00007C89 E9E9020000              	jmp .L_if_end_0144
 11556                                  .L_if_else_0144:
 11557                                  	; preparing a non-tail-call
 11558 00007C8E 488B4520                	mov rax, PARAM(0)	; param a
 11559 00007C92 50                      	push rax
 11560 00007C93 6A01                    	push 1	; arg count
 11561 00007C95 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 11562 00007C9D 803805                  	cmp byte [rax], T_undefined
 11563 00007CA0 0F84CED50000            	je L_error_fvar_undefined
 11564 00007CA6 803804                  	cmp byte [rax], T_closure
 11565 00007CA9 0F8549D60000            	jne L_error_non_closure
 11566 00007CAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11567 00007CB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11568 00007CB5 483D[02000000]          	cmp rax, sob_boolean_false
 11569 00007CBB 0F8464020000            	je .L_if_else_0143
 11570                                  	; preparing a non-tail-call
 11571 00007CC1 488B4528                	mov rax, PARAM(1)	; param b
 11572 00007CC5 50                      	push rax
 11573 00007CC6 6A01                    	push 1	; arg count
 11574 00007CC8 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 11575 00007CD0 803805                  	cmp byte [rax], T_undefined
 11576 00007CD3 0F849BD50000            	je L_error_fvar_undefined
 11577 00007CD9 803804                  	cmp byte [rax], T_closure
 11578 00007CDC 0F8516D60000            	jne L_error_non_closure
 11579 00007CE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11580 00007CE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11581 00007CE8 483D[02000000]          	cmp rax, sob_boolean_false
 11582 00007CEE 0F848B000000            	je .L_if_else_0142
 11583                                  	; Initiating tail-call optimization
 11584                                  	; preparing a non-tail-call
 11585 00007CF4 488B4528                	mov rax, PARAM(1)	; param b
 11586 00007CF8 50                      	push rax
 11587 00007CF9 6A01                    	push 1	; arg count
 11588 00007CFB 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11589 00007D03 803805                  	cmp byte [rax], T_undefined
 11590 00007D06 0F8468D50000            	je L_error_fvar_undefined
 11591 00007D0C 803804                  	cmp byte [rax], T_closure
 11592 00007D0F 0F85E3D50000            	jne L_error_non_closure
 11593 00007D15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11594 00007D18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11595 00007D1B 50                      	push rax
 11596 00007D1C 488B4520                	mov rax, PARAM(0)	; param a
 11597 00007D20 50                      	push rax
 11598 00007D21 6A02                    	push 2	; Number of arguments
 11599 00007D23 488B0425[5E0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11600 00007D2B 803805                  	cmp byte [rax], T_undefined
 11601 00007D2E 0F8440D50000            	je L_error_fvar_undefined
 11602 00007D34 803804                  	cmp byte [rax], T_closure
 11603 00007D37 0F85BBD50000            	jne L_error_non_closure
 11604 00007D3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11605 00007D40 FF7508                  	push qword [rbp + 8]
 11606 00007D43 FF7500                  	push qword [rbp]
 11607 00007D46 41BA06000000            	mov r10, 2 + 4
 11608 00007D4C 4C8B4518                	mov r8, COUNT
 11609 00007D50 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11610 00007D55 4C8D4DF8                	lea r9, [rbp - 8]
 11611                                  .L_tc_recycle_frame_loop_0228:
 11612 00007D59 4983FA00                	cmp r10, 0
 11613 00007D5D 7413                    	je .L_tc_recycle_frame_done_0228
 11614 00007D5F 4D8B19                  	mov r11, qword [r9]
 11615 00007D62 4D8918                  	mov qword [r8], r11
 11616 00007D65 49FFCA                  	dec r10
 11617 00007D68 4983E808                	sub r8, 8
 11618 00007D6C 4983E908                	sub r9, 8
 11619 00007D70 EBE7                    	jmp .L_tc_recycle_frame_loop_0228
 11620                                  .L_tc_recycle_frame_done_0228:
 11621 00007D72 498D6008                	lea rsp, [r8 + 8]
 11622 00007D76 5D                      	pop rbp
 11623 00007D77 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11624 00007D7A E9A4010000              	jmp .L_if_end_0142
 11625                                  .L_if_else_0142:
 11626                                  	; preparing a non-tail-call
 11627 00007D7F 488B4528                	mov rax, PARAM(1)	; param b
 11628 00007D83 50                      	push rax
 11629 00007D84 6A01                    	push 1	; arg count
 11630 00007D86 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11631 00007D8E 803805                  	cmp byte [rax], T_undefined
 11632 00007D91 0F84DDD40000            	je L_error_fvar_undefined
 11633 00007D97 803804                  	cmp byte [rax], T_closure
 11634 00007D9A 0F8558D50000            	jne L_error_non_closure
 11635 00007DA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11636 00007DA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11637 00007DA6 483D[02000000]          	cmp rax, sob_boolean_false
 11638 00007DAC 0F848B000000            	je .L_if_else_0141
 11639                                  	; Initiating tail-call optimization
 11640                                  	; preparing a non-tail-call
 11641 00007DB2 488B4528                	mov rax, PARAM(1)	; param b
 11642 00007DB6 50                      	push rax
 11643 00007DB7 6A01                    	push 1	; arg count
 11644 00007DB9 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11645 00007DC1 803805                  	cmp byte [rax], T_undefined
 11646 00007DC4 0F84AAD40000            	je L_error_fvar_undefined
 11647 00007DCA 803804                  	cmp byte [rax], T_closure
 11648 00007DCD 0F8525D50000            	jne L_error_non_closure
 11649 00007DD3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11650 00007DD6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11651 00007DD9 50                      	push rax
 11652 00007DDA 488B4520                	mov rax, PARAM(0)	; param a
 11653 00007DDE 50                      	push rax
 11654 00007DDF 6A02                    	push 2	; Number of arguments
 11655 00007DE1 488B0425[5E0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11656 00007DE9 803805                  	cmp byte [rax], T_undefined
 11657 00007DEC 0F8482D40000            	je L_error_fvar_undefined
 11658 00007DF2 803804                  	cmp byte [rax], T_closure
 11659 00007DF5 0F85FDD40000            	jne L_error_non_closure
 11660 00007DFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11661 00007DFE FF7508                  	push qword [rbp + 8]
 11662 00007E01 FF7500                  	push qword [rbp]
 11663 00007E04 41BA06000000            	mov r10, 2 + 4
 11664 00007E0A 4C8B4518                	mov r8, COUNT
 11665 00007E0E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11666 00007E13 4C8D4DF8                	lea r9, [rbp - 8]
 11667                                  .L_tc_recycle_frame_loop_0229:
 11668 00007E17 4983FA00                	cmp r10, 0
 11669 00007E1B 7413                    	je .L_tc_recycle_frame_done_0229
 11670 00007E1D 4D8B19                  	mov r11, qword [r9]
 11671 00007E20 4D8918                  	mov qword [r8], r11
 11672 00007E23 49FFCA                  	dec r10
 11673 00007E26 4983E808                	sub r8, 8
 11674 00007E2A 4983E908                	sub r9, 8
 11675 00007E2E EBE7                    	jmp .L_tc_recycle_frame_loop_0229
 11676                                  .L_tc_recycle_frame_done_0229:
 11677 00007E30 498D6008                	lea rsp, [r8 + 8]
 11678 00007E34 5D                      	pop rbp
 11679 00007E35 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11680 00007E38 E9E6000000              	jmp .L_if_end_0141
 11681                                  .L_if_else_0141:
 11682                                  	; preparing a non-tail-call
 11683 00007E3D 488B4528                	mov rax, PARAM(1)	; param b
 11684 00007E41 50                      	push rax
 11685 00007E42 6A01                    	push 1	; arg count
 11686 00007E44 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 11687 00007E4C 803805                  	cmp byte [rax], T_undefined
 11688 00007E4F 0F841FD40000            	je L_error_fvar_undefined
 11689 00007E55 803804                  	cmp byte [rax], T_closure
 11690 00007E58 0F859AD40000            	jne L_error_non_closure
 11691 00007E5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11692 00007E61 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11693 00007E64 483D[02000000]          	cmp rax, sob_boolean_false
 11694 00007E6A 7465                    	je .L_if_else_0140
 11695                                  	; Initiating tail-call optimization
 11696 00007E6C 488B4528                	mov rax, PARAM(1)	; param b
 11697 00007E70 50                      	push rax
 11698 00007E71 488B4520                	mov rax, PARAM(0)	; param a
 11699 00007E75 50                      	push rax
 11700 00007E76 6A02                    	push 2	; Number of arguments
 11701 00007E78 488B0425[5E0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11702 00007E80 803805                  	cmp byte [rax], T_undefined
 11703 00007E83 0F84EBD30000            	je L_error_fvar_undefined
 11704 00007E89 803804                  	cmp byte [rax], T_closure
 11705 00007E8C 0F8566D40000            	jne L_error_non_closure
 11706 00007E92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11707 00007E95 FF7508                  	push qword [rbp + 8]
 11708 00007E98 FF7500                  	push qword [rbp]
 11709 00007E9B 41BA06000000            	mov r10, 2 + 4
 11710 00007EA1 4C8B4518                	mov r8, COUNT
 11711 00007EA5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11712 00007EAA 4C8D4DF8                	lea r9, [rbp - 8]
 11713                                  .L_tc_recycle_frame_loop_022a:
 11714 00007EAE 4983FA00                	cmp r10, 0
 11715 00007EB2 7413                    	je .L_tc_recycle_frame_done_022a
 11716 00007EB4 4D8B19                  	mov r11, qword [r9]
 11717 00007EB7 4D8918                  	mov qword [r8], r11
 11718 00007EBA 49FFCA                  	dec r10
 11719 00007EBD 4983E808                	sub r8, 8
 11720 00007EC1 4983E908                	sub r9, 8
 11721 00007EC5 EBE7                    	jmp .L_tc_recycle_frame_loop_022a
 11722                                  .L_tc_recycle_frame_done_022a:
 11723 00007EC7 498D6008                	lea rsp, [r8 + 8]
 11724 00007ECB 5D                      	pop rbp
 11725 00007ECC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11726 00007ECF EB52                    	jmp .L_if_end_0140
 11727                                  .L_if_else_0140:
 11728                                  	; Initiating tail-call optimization
 11729 00007ED1 6A00                    	push 0	; Number of arguments
 11730 00007ED3 488B4510                	mov rax, ENV
 11731 00007ED7 488B00                  	mov rax, qword [rax + 8 * 0]
 11732 00007EDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11733 00007EDD 803804                  	cmp byte [rax], T_closure
 11734 00007EE0 0F8512D40000            	jne L_error_non_closure
 11735 00007EE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11736 00007EE9 FF7508                  	push qword [rbp + 8]
 11737 00007EEC FF7500                  	push qword [rbp]
 11738 00007EEF 41BA04000000            	mov r10, 0 + 4
 11739 00007EF5 4C8B4518                	mov r8, COUNT
 11740 00007EF9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11741 00007EFE 4C8D4DF8                	lea r9, [rbp - 8]
 11742                                  .L_tc_recycle_frame_loop_022b:
 11743 00007F02 4983FA00                	cmp r10, 0
 11744 00007F06 7413                    	je .L_tc_recycle_frame_done_022b
 11745 00007F08 4D8B19                  	mov r11, qword [r9]
 11746 00007F0B 4D8918                  	mov qword [r8], r11
 11747 00007F0E 49FFCA                  	dec r10
 11748 00007F11 4983E808                	sub r8, 8
 11749 00007F15 4983E908                	sub r9, 8
 11750 00007F19 EBE7                    	jmp .L_tc_recycle_frame_loop_022b
 11751                                  .L_tc_recycle_frame_done_022b:
 11752 00007F1B 498D6008                	lea rsp, [r8 + 8]
 11753 00007F1F 5D                      	pop rbp
 11754 00007F20 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11755                                  .L_if_end_0140:
 11756                                  .L_if_end_0141:
 11757                                  .L_if_end_0142:
 11758 00007F23 EB52                    	jmp .L_if_end_0143
 11759                                  .L_if_else_0143:
 11760                                  	; Initiating tail-call optimization
 11761 00007F25 6A00                    	push 0	; Number of arguments
 11762 00007F27 488B4510                	mov rax, ENV
 11763 00007F2B 488B00                  	mov rax, qword [rax + 8 * 0]
 11764 00007F2E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11765 00007F31 803804                  	cmp byte [rax], T_closure
 11766 00007F34 0F85BED30000            	jne L_error_non_closure
 11767 00007F3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11768 00007F3D FF7508                  	push qword [rbp + 8]
 11769 00007F40 FF7500                  	push qword [rbp]
 11770 00007F43 41BA04000000            	mov r10, 0 + 4
 11771 00007F49 4C8B4518                	mov r8, COUNT
 11772 00007F4D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11773 00007F52 4C8D4DF8                	lea r9, [rbp - 8]
 11774                                  .L_tc_recycle_frame_loop_022c:
 11775 00007F56 4983FA00                	cmp r10, 0
 11776 00007F5A 7413                    	je .L_tc_recycle_frame_done_022c
 11777 00007F5C 4D8B19                  	mov r11, qword [r9]
 11778 00007F5F 4D8918                  	mov qword [r8], r11
 11779 00007F62 49FFCA                  	dec r10
 11780 00007F65 4983E808                	sub r8, 8
 11781 00007F69 4983E908                	sub r9, 8
 11782 00007F6D EBE7                    	jmp .L_tc_recycle_frame_loop_022c
 11783                                  .L_tc_recycle_frame_done_022c:
 11784 00007F6F 498D6008                	lea rsp, [r8 + 8]
 11785 00007F73 5D                      	pop rbp
 11786 00007F74 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11787                                  .L_if_end_0143:
 11788                                  .L_if_end_0144:
 11789                                  .L_if_end_0145:
 11790 00007F77 C9                      	leave
 11791 00007F78 C22000                  	ret AND_KILL_FRAME(2)
 11792                                  .L_lambda_simple_end_01b4:	; new closure is in rax
 11793 00007F7B 50                      	push rax
 11794 00007F7C 6A01                    	push 1	; Number of arguments
 11795 00007F7E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11796 00007F83 E819D40000              	call malloc
 11797 00007F88 50                      	push rax
 11798 00007F89 BF08000000              	mov rdi, 8 * 1	; new rib
 11799 00007F8E E80ED40000              	call malloc
 11800 00007F93 50                      	push rax
 11801 00007F94 BF10000000              	mov rdi, 8 * 2	; extended env
 11802 00007F99 E803D40000              	call malloc
 11803 00007F9E 488B7D10                	mov rdi, ENV
 11804 00007FA2 BE00000000              	mov rsi, 0
 11805 00007FA7 BA01000000              	mov rdx, 1
 11806                                  .L_lambda_simple_env_loop_01b5:	; ext_env[i + 1] <-- env[i]
 11807 00007FAC 4883FE01                	cmp rsi, 1
 11808 00007FB0 7410                    	je .L_lambda_simple_env_end_01b5
 11809 00007FB2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11810 00007FB6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11811 00007FBA 48FFC6                  	inc rsi
 11812 00007FBD 48FFC2                  	inc rdx
 11813 00007FC0 EBEA                    	jmp .L_lambda_simple_env_loop_01b5
 11814                                  .L_lambda_simple_env_end_01b5:
 11815 00007FC2 5B                      	pop rbx
 11816 00007FC3 BE00000000              	mov rsi, 0
 11817                                  .L_lambda_simple_params_loop_01b5:	; copy params
 11818 00007FC8 4883FE01                	cmp rsi, 1
 11819 00007FCC 740E                    	je .L_lambda_simple_params_end_01b5
 11820 00007FCE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11821 00007FD3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11822 00007FD7 48FFC6                  	inc rsi
 11823 00007FDA EBEC                    	jmp .L_lambda_simple_params_loop_01b5
 11824                                  .L_lambda_simple_params_end_01b5:
 11825 00007FDC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11826 00007FDF 4889C3                  	mov rbx, rax
 11827 00007FE2 58                      	pop rax
 11828 00007FE3 C60004                  	mov byte [rax], T_closure
 11829 00007FE6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11830 00007FEA 48C74009[F77F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b5
 11831 00007FF2 E915020000              	jmp .L_lambda_simple_end_01b5
 11832                                  .L_lambda_simple_code_01b5:	; lambda-simple body
 11833 00007FF7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11834 00007FFD 740B                    	je .L_lambda_simple_arity_check_ok_01b5
 11835 00007FFF FF742410                	push qword [rsp + 8 * 2]
 11836 00008003 6A01                    	push 1
 11837 00008005 E950D30000              	jmp L_error_incorrect_arity_simple
 11838                                  .L_lambda_simple_arity_check_ok_01b5:
 11839 0000800A C8000000                	enter 0, 0
 11840 0000800E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11841 00008013 E889D30000              	call malloc
 11842 00008018 50                      	push rax
 11843 00008019 BF08000000              	mov rdi, 8 * 1	; new rib
 11844 0000801E E87ED30000              	call malloc
 11845 00008023 50                      	push rax
 11846 00008024 BF18000000              	mov rdi, 8 * 3	; extended env
 11847 00008029 E873D30000              	call malloc
 11848 0000802E 488B7D10                	mov rdi, ENV
 11849 00008032 BE00000000              	mov rsi, 0
 11850 00008037 BA01000000              	mov rdx, 1
 11851                                  .L_lambda_opt_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11852 0000803C 4883FE02                	cmp rsi, 2
 11853 00008040 7410                    	je .L_lambda_opt_env_end_003e
 11854 00008042 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11855 00008046 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11856 0000804A 48FFC6                  	inc rsi
 11857 0000804D 48FFC2                  	inc rdx
 11858 00008050 EBEA                    	jmp .L_lambda_opt_env_loop_003e
 11859                                  .L_lambda_opt_env_end_003e:
 11860 00008052 5B                      	pop rbx
 11861 00008053 BE00000000              	mov rsi, 0
 11862                                  .L_lambda_opt_params_loop_003e:	; copy params
 11863 00008058 4883FE01                	cmp rsi, 1
 11864 0000805C 740E                    	je .L_lambda_opt_params_end_003e
 11865 0000805E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11866 00008063 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11867 00008067 48FFC6                  	inc rsi
 11868 0000806A EBEC                    	jmp .L_lambda_opt_params_loop_003e
 11869                                  .L_lambda_opt_params_end_003e:
 11870 0000806C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11871 0000806F 4889C3                  	mov rbx, rax
 11872 00008072 58                      	pop rax
 11873 00008073 C60004                  	mov byte [rax], T_closure
 11874 00008076 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11875 0000807A 48C74009[87800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003e
 11876 00008082 E981010000              	jmp .L_lambda_opt_end_003e
 11877                                  .L_lambda_opt_code_003e:
 11878 00008087 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 11879 0000808C 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 11880 00008090 7407                    	je .L_lambda_opt_arity_check_exact_003e	; Jump if arity matches
 11881 00008092 7F4C                    	jg .L_lambda_opt_arity_check_more_003e	; Jump if more arguments passed
 11882 00008094 E9D5D20000              	jmp L_error_incorrect_arity_opt
 11883                                  .L_lambda_opt_arity_check_exact_003e:
 11884 00008099 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 11885 0000809C 4983C603                	add r14, 3 ; add 3 first stack values
 11886 000080A0 41BF00000000            	mov r15, 0 ; r15 = index
 11887 000080A6 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 11888 000080AA 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 11889 000080B2 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003e
 11890                                  .L_lambda_opt_stack_shrink_loop_003e:
 11891 000080B4 4983FE00                	cmp r14, 0
 11892 000080B8 7E11                    	jle .L_make_lambda_opt_exact_finish_003e
 11893 000080BA 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 11894 000080BF 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 11895 000080C3 49FFCE                  	dec r14 ; next loop value
 11896 000080C6 49FFC7                  	inc r15 ; update i
 11897 000080C9 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003e
 11898                                  .L_make_lambda_opt_exact_finish_003e:
 11899 000080CB 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 11900 000080D3 49FFC2                  	inc r10
 11901 000080D6 4C89542410              	mov qword [rsp + 8 * 2], r10
 11902 000080DB E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003e
 11903                                  .L_lambda_opt_arity_check_more_003e:
 11904 000080E0 4D89D6                  	mov r14, r10 ; r14 = num args
 11905 000080E3 4D89D7                  	mov r15, r10 ; r15 = num args
 11906 000080E6 41B900000000            	mov r9, 0; r9 = number of params 
 11907 000080EC 4D29CE                  	sub r14, r9 ; r14 = extra args
 11908 000080EF 4D01F1                  	add r9, r14 ; r9 = num args
 11909 000080F2 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 11909 000080F4 [0100000000000000] 
 11910 000080FC EB00                    	jmp .L_make_lambda_opt_arg_list_003e
 11911                                  .L_make_lambda_opt_arg_list_003e:
 11912 000080FE 4983FE00                	cmp r14, 0
 11913 00008102 7E25                    	jle .L_make_lambda_opt_stack_fixed_003e
 11914 00008104 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 11915 00008109 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 11916 0000810E E88ED20000              	call malloc                         ; Allocate memory, result in rax
 11917 00008113 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 11918 00008116 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 11919 0000811A 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 11920 0000811E 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 11921 00008121 49FFC9                  	dec r9                              ; args index minus 1
 11922 00008124 49FFCE                  	dec r14                             ; next iteration
 11923 00008127 EBD5                    	jmp .L_make_lambda_opt_arg_list_003e
 11924                                  .L_make_lambda_opt_stack_fixed_003e:
 11925 00008129 4D89FE                  	mov r14, r15 ; r14 = num args
 11926 0000812C 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 11927 0000812F 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 11928 00008133 4D89C1                  	mov r9, r8
 11929 00008136 41BA00000000            	mov r10, 0; r10 = num of params
 11930 0000813C 4D29D6                  	sub r14, r10 ; r14 = extra args
 11931 0000813F 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 11932 00008142 49FFCE                  	dec r14 ; how much we need to change stack wise?
 11933 00008145 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 11934 0000814A 4D89CC                  	mov r12, r9
 11935 0000814D 4D29F4                  	sub r12, r14
 11936 00008150 49FFCC                  	dec r12
 11937 00008153 49FFCC                  	dec r12
 11938 00008156 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003e
 11939                                  .L_lambda_opt_stack_shrink_loop_more_003e:
 11940 00008158 4983F800                	cmp r8, 0
 11941 0000815C 7E16                    	jle .L_make_lambda_opt_more_finish_003e
 11942 0000815E 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 11943 00008162 4D01F4                  	add r12, r14
 11944 00008165 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 11945 00008169 49FFC8                  	dec r8 ; next iteration
 11946 0000816C 4D29F4                  	sub r12, r14 ; next iteration
 11947 0000816F 49FFCC                  	dec r12 ; next iteration
 11948 00008172 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003e
 11949                                  .L_make_lambda_opt_more_finish_003e:
 11950 00008174 41BA00000000            	mov r10, 0
 11951 0000817A 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 11952 00008183 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 11953 00008187 4C01F4                  	add rsp, r14  ; Add to rsp
 11954 0000818A EB00                    	jmp .L_lambda_opt_stack_adjusted_003e
 11955                                  .L_lambda_opt_stack_adjusted_003e:
 11956 0000818C C8000000                	enter 0, 0
 11957                                  	; Initiating tail-call optimization
 11958 00008190 488B4520                	mov rax, PARAM(0)	; param s
 11959 00008194 50                      	push rax
 11960 00008195 48B8-                   	mov rax, L_constants + 2270
 11960 00008197 [DE08000000000000] 
 11961 0000819F 50                      	push rax
 11962 000081A0 488B4510                	mov rax, ENV
 11963 000081A4 488B00                  	mov rax, qword [rax + 8 * 0]
 11964 000081A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 11965 000081AA 50                      	push rax
 11966 000081AB 6A03                    	push 3	; Number of arguments
 11967 000081AD 488B0425[7C130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11968 000081B5 803805                  	cmp byte [rax], T_undefined
 11969 000081B8 0F84B6D00000            	je L_error_fvar_undefined
 11970 000081BE 803804                  	cmp byte [rax], T_closure
 11971 000081C1 0F8531D10000            	jne L_error_non_closure
 11972 000081C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11973 000081CA FF7508                  	push qword [rbp + 8]
 11974 000081CD FF7500                  	push qword [rbp]
 11975 000081D0 41BA07000000            	mov r10, 3 + 4
 11976 000081D6 4C8B4518                	mov r8, COUNT
 11977 000081DA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 11978 000081DF 4C8D4DF8                	lea r9, [rbp - 8]
 11979                                  .L_tc_recycle_frame_loop_022d:
 11980 000081E3 4983FA00                	cmp r10, 0
 11981 000081E7 7413                    	je .L_tc_recycle_frame_done_022d
 11982 000081E9 4D8B19                  	mov r11, qword [r9]
 11983 000081EC 4D8918                  	mov qword [r8], r11
 11984 000081EF 49FFCA                  	dec r10
 11985 000081F2 4983E808                	sub r8, 8
 11986 000081F6 4983E908                	sub r9, 8
 11987 000081FA EBE7                    	jmp .L_tc_recycle_frame_loop_022d
 11988                                  .L_tc_recycle_frame_done_022d:
 11989 000081FC 498D6008                	lea rsp, [r8 + 8]
 11990 00008200 5D                      	pop rbp
 11991 00008201 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11992 00008204 C9                      	leave
 11993 00008205 C21800                  	ret AND_KILL_FRAME(1)
 11994                                  .L_lambda_opt_end_003e:	; new closure is in rax
 11995 00008208 C9                      	leave
 11996 00008209 C21800                  	ret AND_KILL_FRAME(1)
 11997                                  .L_lambda_simple_end_01b5:	; new closure is in rax
 11998 0000820C 803804                  	cmp byte [rax], T_closure
 11999 0000820F 0F85E3D00000            	jne L_error_non_closure
 12000 00008215 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12001 00008218 FF7508                  	push qword [rbp + 8]
 12002 0000821B FF7500                  	push qword [rbp]
 12003 0000821E 41BA05000000            	mov r10, 1 + 4
 12004 00008224 4C8B4518                	mov r8, COUNT
 12005 00008228 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12006 0000822D 4C8D4DF8                	lea r9, [rbp - 8]
 12007                                  .L_tc_recycle_frame_loop_022e:
 12008 00008231 4983FA00                	cmp r10, 0
 12009 00008235 7413                    	je .L_tc_recycle_frame_done_022e
 12010 00008237 4D8B19                  	mov r11, qword [r9]
 12011 0000823A 4D8918                  	mov qword [r8], r11
 12012 0000823D 49FFCA                  	dec r10
 12013 00008240 4983E808                	sub r8, 8
 12014 00008244 4983E908                	sub r9, 8
 12015 00008248 EBE7                    	jmp .L_tc_recycle_frame_loop_022e
 12016                                  .L_tc_recycle_frame_done_022e:
 12017 0000824A 498D6008                	lea rsp, [r8 + 8]
 12018 0000824E 5D                      	pop rbp
 12019 0000824F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12020 00008252 C9                      	leave
 12021 00008253 C21800                  	ret AND_KILL_FRAME(1)
 12022                                  .L_lambda_simple_end_01b3:	; new closure is in rax
 12023 00008256 803804                  	cmp byte [rax], T_closure
 12024 00008259 0F8599D00000            	jne L_error_non_closure
 12025 0000825F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12026 00008262 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12027 00008265 48890425[D70D0000]      	mov qword [free_var_0], rax
 12028 0000826D 48B8-                   	mov rax, sob_void
 12028 0000826F [0000000000000000] 
 12029                                  
 12030 00008277 4889C7                  	mov rdi, rax
 12031 0000827A E877D30000              	call print_sexpr_if_not_void
 12032                                  	; preparing a non-tail-call
 12033 0000827F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12034 00008284 E818D10000              	call malloc
 12035 00008289 50                      	push rax
 12036 0000828A BF00000000              	mov rdi, 8 * 0	; new rib
 12037 0000828F E80DD10000              	call malloc
 12038 00008294 50                      	push rax
 12039 00008295 BF08000000              	mov rdi, 8 * 1	; extended env
 12040 0000829A E802D10000              	call malloc
 12041 0000829F 488B7D10                	mov rdi, ENV
 12042 000082A3 BE00000000              	mov rsi, 0
 12043 000082A8 BA01000000              	mov rdx, 1
 12044                                  .L_lambda_simple_env_loop_01b6:	; ext_env[i + 1] <-- env[i]
 12045 000082AD 4883FE00                	cmp rsi, 0
 12046 000082B1 7410                    	je .L_lambda_simple_env_end_01b6
 12047 000082B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12048 000082B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12049 000082BB 48FFC6                  	inc rsi
 12050 000082BE 48FFC2                  	inc rdx
 12051 000082C1 EBEA                    	jmp .L_lambda_simple_env_loop_01b6
 12052                                  .L_lambda_simple_env_end_01b6:
 12053 000082C3 5B                      	pop rbx
 12054 000082C4 BE00000000              	mov rsi, 0
 12055                                  .L_lambda_simple_params_loop_01b6:	; copy params
 12056 000082C9 4883FE00                	cmp rsi, 0
 12057 000082CD 740E                    	je .L_lambda_simple_params_end_01b6
 12058 000082CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12059 000082D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12060 000082D8 48FFC6                  	inc rsi
 12061 000082DB EBEC                    	jmp .L_lambda_simple_params_loop_01b6
 12062                                  .L_lambda_simple_params_end_01b6:
 12063 000082DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12064 000082E0 4889C3                  	mov rbx, rax
 12065 000082E3 58                      	pop rax
 12066 000082E4 C60004                  	mov byte [rax], T_closure
 12067 000082E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12068 000082EB 48C74009[F8820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b6
 12069 000082F3 E98A000000              	jmp .L_lambda_simple_end_01b6
 12070                                  .L_lambda_simple_code_01b6:	; lambda-simple body
 12071 000082F8 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12072 000082FE 740B                    	je .L_lambda_simple_arity_check_ok_01b6
 12073 00008300 FF742410                	push qword [rsp + 8 * 2]
 12074 00008304 6A00                    	push 0
 12075 00008306 E94FD00000              	jmp L_error_incorrect_arity_simple
 12076                                  .L_lambda_simple_arity_check_ok_01b6:
 12077 0000830B C8000000                	enter 0, 0
 12078                                  	; Initiating tail-call optimization
 12079 0000830F 48B8-                   	mov rax, L_constants + 2187
 12079 00008311 [8B08000000000000] 
 12080 00008319 50                      	push rax
 12081 0000831A 48B8-                   	mov rax, L_constants + 2298
 12081 0000831C [FA08000000000000] 
 12082 00008324 50                      	push rax
 12083 00008325 6A02                    	push 2	; Number of arguments
 12084 00008327 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
 12085 0000832F 803805                  	cmp byte [rax], T_undefined
 12086 00008332 0F843CCF0000            	je L_error_fvar_undefined
 12087 00008338 803804                  	cmp byte [rax], T_closure
 12088 0000833B 0F85B7CF0000            	jne L_error_non_closure
 12089 00008341 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12090 00008344 FF7508                  	push qword [rbp + 8]
 12091 00008347 FF7500                  	push qword [rbp]
 12092 0000834A 41BA06000000            	mov r10, 2 + 4
 12093 00008350 4C8B4518                	mov r8, COUNT
 12094 00008354 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12095 00008359 4C8D4DF8                	lea r9, [rbp - 8]
 12096                                  .L_tc_recycle_frame_loop_022f:
 12097 0000835D 4983FA00                	cmp r10, 0
 12098 00008361 7413                    	je .L_tc_recycle_frame_done_022f
 12099 00008363 4D8B19                  	mov r11, qword [r9]
 12100 00008366 4D8918                  	mov qword [r8], r11
 12101 00008369 49FFCA                  	dec r10
 12102 0000836C 4983E808                	sub r8, 8
 12103 00008370 4983E908                	sub r9, 8
 12104 00008374 EBE7                    	jmp .L_tc_recycle_frame_loop_022f
 12105                                  .L_tc_recycle_frame_done_022f:
 12106 00008376 498D6008                	lea rsp, [r8 + 8]
 12107 0000837A 5D                      	pop rbp
 12108 0000837B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12109 0000837E C9                      	leave
 12110 0000837F C21000                  	ret AND_KILL_FRAME(0)
 12111                                  .L_lambda_simple_end_01b6:	; new closure is in rax
 12112 00008382 50                      	push rax
 12113 00008383 6A01                    	push 1	; arg count
 12114 00008385 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12115 0000838A E812D00000              	call malloc
 12116 0000838F 50                      	push rax
 12117 00008390 BF00000000              	mov rdi, 8 * 0	; new rib
 12118 00008395 E807D00000              	call malloc
 12119 0000839A 50                      	push rax
 12120 0000839B BF08000000              	mov rdi, 8 * 1	; extended env
 12121 000083A0 E8FCCF0000              	call malloc
 12122 000083A5 488B7D10                	mov rdi, ENV
 12123 000083A9 BE00000000              	mov rsi, 0
 12124 000083AE BA01000000              	mov rdx, 1
 12125                                  .L_lambda_simple_env_loop_01b7:	; ext_env[i + 1] <-- env[i]
 12126 000083B3 4883FE00                	cmp rsi, 0
 12127 000083B7 7410                    	je .L_lambda_simple_env_end_01b7
 12128 000083B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12129 000083BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12130 000083C1 48FFC6                  	inc rsi
 12131 000083C4 48FFC2                  	inc rdx
 12132 000083C7 EBEA                    	jmp .L_lambda_simple_env_loop_01b7
 12133                                  .L_lambda_simple_env_end_01b7:
 12134 000083C9 5B                      	pop rbx
 12135 000083CA BE00000000              	mov rsi, 0
 12136                                  .L_lambda_simple_params_loop_01b7:	; copy params
 12137 000083CF 4883FE00                	cmp rsi, 0
 12138 000083D3 740E                    	je .L_lambda_simple_params_end_01b7
 12139 000083D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12140 000083DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12141 000083DE 48FFC6                  	inc rsi
 12142 000083E1 EBEC                    	jmp .L_lambda_simple_params_loop_01b7
 12143                                  .L_lambda_simple_params_end_01b7:
 12144 000083E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12145 000083E6 4889C3                  	mov rbx, rax
 12146 000083E9 58                      	pop rax
 12147 000083EA C60004                  	mov byte [rax], T_closure
 12148 000083ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12149 000083F1 48C74009[FE830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b7
 12150 000083F9 E9490D0000              	jmp .L_lambda_simple_end_01b7
 12151                                  .L_lambda_simple_code_01b7:	; lambda-simple body
 12152 000083FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12153 00008404 740B                    	je .L_lambda_simple_arity_check_ok_01b7
 12154 00008406 FF742410                	push qword [rsp + 8 * 2]
 12155 0000840A 6A01                    	push 1
 12156 0000840C E949CF0000              	jmp L_error_incorrect_arity_simple
 12157                                  .L_lambda_simple_arity_check_ok_01b7:
 12158 00008411 C8000000                	enter 0, 0
 12159                                  	; Initiating tail-call optimization
 12160 00008415 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12161 0000841A E882CF0000              	call malloc
 12162 0000841F 50                      	push rax
 12163 00008420 BF08000000              	mov rdi, 8 * 1	; new rib
 12164 00008425 E877CF0000              	call malloc
 12165 0000842A 50                      	push rax
 12166 0000842B BF10000000              	mov rdi, 8 * 2	; extended env
 12167 00008430 E86CCF0000              	call malloc
 12168 00008435 488B7D10                	mov rdi, ENV
 12169 00008439 BE00000000              	mov rsi, 0
 12170 0000843E BA01000000              	mov rdx, 1
 12171                                  .L_lambda_simple_env_loop_01b8:	; ext_env[i + 1] <-- env[i]
 12172 00008443 4883FE01                	cmp rsi, 1
 12173 00008447 7410                    	je .L_lambda_simple_env_end_01b8
 12174 00008449 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12175 0000844D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12176 00008451 48FFC6                  	inc rsi
 12177 00008454 48FFC2                  	inc rdx
 12178 00008457 EBEA                    	jmp .L_lambda_simple_env_loop_01b8
 12179                                  .L_lambda_simple_env_end_01b8:
 12180 00008459 5B                      	pop rbx
 12181 0000845A BE00000000              	mov rsi, 0
 12182                                  .L_lambda_simple_params_loop_01b8:	; copy params
 12183 0000845F 4883FE01                	cmp rsi, 1
 12184 00008463 740E                    	je .L_lambda_simple_params_end_01b8
 12185 00008465 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12186 0000846A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12187 0000846E 48FFC6                  	inc rsi
 12188 00008471 EBEC                    	jmp .L_lambda_simple_params_loop_01b8
 12189                                  .L_lambda_simple_params_end_01b8:
 12190 00008473 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12191 00008476 4889C3                  	mov rbx, rax
 12192 00008479 58                      	pop rax
 12193 0000847A C60004                  	mov byte [rax], T_closure
 12194 0000847D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12195 00008481 48C74009[8E840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b8
 12196 00008489 E938080000              	jmp .L_lambda_simple_end_01b8
 12197                                  .L_lambda_simple_code_01b8:	; lambda-simple body
 12198 0000848E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12199 00008494 740B                    	je .L_lambda_simple_arity_check_ok_01b8
 12200 00008496 FF742410                	push qword [rsp + 8 * 2]
 12201 0000849A 6A02                    	push 2
 12202 0000849C E9B9CE0000              	jmp L_error_incorrect_arity_simple
 12203                                  .L_lambda_simple_arity_check_ok_01b8:
 12204 000084A1 C8000000                	enter 0, 0
 12205                                  	; preparing a non-tail-call
 12206 000084A5 488B4520                	mov rax, PARAM(0)	; param a
 12207 000084A9 50                      	push rax
 12208 000084AA 6A01                    	push 1	; arg count
 12209 000084AC 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 12210 000084B4 803805                  	cmp byte [rax], T_undefined
 12211 000084B7 0F84B7CD0000            	je L_error_fvar_undefined
 12212 000084BD 803804                  	cmp byte [rax], T_closure
 12213 000084C0 0F8532CE0000            	jne L_error_non_closure
 12214 000084C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12215 000084C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12216 000084CC 483D[02000000]          	cmp rax, sob_boolean_false
 12217 000084D2 0F8467020000            	je .L_if_else_0151
 12218                                  	; preparing a non-tail-call
 12219 000084D8 488B4528                	mov rax, PARAM(1)	; param b
 12220 000084DC 50                      	push rax
 12221 000084DD 6A01                    	push 1	; arg count
 12222 000084DF 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 12223 000084E7 803805                  	cmp byte [rax], T_undefined
 12224 000084EA 0F8484CD0000            	je L_error_fvar_undefined
 12225 000084F0 803804                  	cmp byte [rax], T_closure
 12226 000084F3 0F85FFCD0000            	jne L_error_non_closure
 12227 000084F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12228 000084FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12229 000084FF 483D[02000000]          	cmp rax, sob_boolean_false
 12230 00008505 7468                    	je .L_if_else_0148
 12231                                  	; Initiating tail-call optimization
 12232 00008507 488B4528                	mov rax, PARAM(1)	; param b
 12233 0000850B 50                      	push rax
 12234 0000850C 488B4520                	mov rax, PARAM(0)	; param a
 12235 00008510 50                      	push rax
 12236 00008511 6A02                    	push 2	; Number of arguments
 12237 00008513 488B0425[D60E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12238 0000851B 803805                  	cmp byte [rax], T_undefined
 12239 0000851E 0F8450CD0000            	je L_error_fvar_undefined
 12240 00008524 803804                  	cmp byte [rax], T_closure
 12241 00008527 0F85CBCD0000            	jne L_error_non_closure
 12242 0000852D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12243 00008530 FF7508                  	push qword [rbp + 8]
 12244 00008533 FF7500                  	push qword [rbp]
 12245 00008536 41BA06000000            	mov r10, 2 + 4
 12246 0000853C 4C8B4518                	mov r8, COUNT
 12247 00008540 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12248 00008545 4C8D4DF8                	lea r9, [rbp - 8]
 12249                                  .L_tc_recycle_frame_loop_0230:
 12250 00008549 4983FA00                	cmp r10, 0
 12251 0000854D 7413                    	je .L_tc_recycle_frame_done_0230
 12252 0000854F 4D8B19                  	mov r11, qword [r9]
 12253 00008552 4D8918                  	mov qword [r8], r11
 12254 00008555 49FFCA                  	dec r10
 12255 00008558 4983E808                	sub r8, 8
 12256 0000855C 4983E908                	sub r9, 8
 12257 00008560 EBE7                    	jmp .L_tc_recycle_frame_loop_0230
 12258                                  .L_tc_recycle_frame_done_0230:
 12259 00008562 498D6008                	lea rsp, [r8 + 8]
 12260 00008566 5D                      	pop rbp
 12261 00008567 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12262 0000856A E9CB010000              	jmp .L_if_end_0148
 12263                                  .L_if_else_0148:
 12264                                  	; preparing a non-tail-call
 12265 0000856F 488B4528                	mov rax, PARAM(1)	; param b
 12266 00008573 50                      	push rax
 12267 00008574 6A01                    	push 1	; arg count
 12268 00008576 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12269 0000857E 803805                  	cmp byte [rax], T_undefined
 12270 00008581 0F84EDCC0000            	je L_error_fvar_undefined
 12271 00008587 803804                  	cmp byte [rax], T_closure
 12272 0000858A 0F8568CD0000            	jne L_error_non_closure
 12273 00008590 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12274 00008593 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12275 00008596 483D[02000000]          	cmp rax, sob_boolean_false
 12276 0000859C 0F848B000000            	je .L_if_else_0147
 12277                                  	; Initiating tail-call optimization
 12278 000085A2 488B4528                	mov rax, PARAM(1)	; param b
 12279 000085A6 50                      	push rax
 12280                                  	; preparing a non-tail-call
 12281 000085A7 488B4520                	mov rax, PARAM(0)	; param a
 12282 000085AB 50                      	push rax
 12283 000085AC 6A01                    	push 1	; arg count
 12284 000085AE 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12285 000085B6 803805                  	cmp byte [rax], T_undefined
 12286 000085B9 0F84B5CC0000            	je L_error_fvar_undefined
 12287 000085BF 803804                  	cmp byte [rax], T_closure
 12288 000085C2 0F8530CD0000            	jne L_error_non_closure
 12289 000085C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12290 000085CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12291 000085CE 50                      	push rax
 12292 000085CF 6A02                    	push 2	; Number of arguments
 12293 000085D1 488B0425[B40E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12294 000085D9 803805                  	cmp byte [rax], T_undefined
 12295 000085DC 0F8492CC0000            	je L_error_fvar_undefined
 12296 000085E2 803804                  	cmp byte [rax], T_closure
 12297 000085E5 0F850DCD0000            	jne L_error_non_closure
 12298 000085EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12299 000085EE FF7508                  	push qword [rbp + 8]
 12300 000085F1 FF7500                  	push qword [rbp]
 12301 000085F4 41BA06000000            	mov r10, 2 + 4
 12302 000085FA 4C8B4518                	mov r8, COUNT
 12303 000085FE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12304 00008603 4C8D4DF8                	lea r9, [rbp - 8]
 12305                                  .L_tc_recycle_frame_loop_0231:
 12306 00008607 4983FA00                	cmp r10, 0
 12307 0000860B 7413                    	je .L_tc_recycle_frame_done_0231
 12308 0000860D 4D8B19                  	mov r11, qword [r9]
 12309 00008610 4D8918                  	mov qword [r8], r11
 12310 00008613 49FFCA                  	dec r10
 12311 00008616 4983E808                	sub r8, 8
 12312 0000861A 4983E908                	sub r9, 8
 12313 0000861E EBE7                    	jmp .L_tc_recycle_frame_loop_0231
 12314                                  .L_tc_recycle_frame_done_0231:
 12315 00008620 498D6008                	lea rsp, [r8 + 8]
 12316 00008624 5D                      	pop rbp
 12317 00008625 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12318 00008628 E90D010000              	jmp .L_if_end_0147
 12319                                  .L_if_else_0147:
 12320                                  	; preparing a non-tail-call
 12321 0000862D 488B4528                	mov rax, PARAM(1)	; param b
 12322 00008631 50                      	push rax
 12323 00008632 6A01                    	push 1	; arg count
 12324 00008634 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 12325 0000863C 803805                  	cmp byte [rax], T_undefined
 12326 0000863F 0F842FCC0000            	je L_error_fvar_undefined
 12327 00008645 803804                  	cmp byte [rax], T_closure
 12328 00008648 0F85AACC0000            	jne L_error_non_closure
 12329 0000864E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12330 00008651 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12331 00008654 483D[02000000]          	cmp rax, sob_boolean_false
 12332 0000865A 0F8488000000            	je .L_if_else_0146
 12333                                  	; Initiating tail-call optimization
 12334 00008660 488B4528                	mov rax, PARAM(1)	; param b
 12335 00008664 50                      	push rax
 12336                                  	; preparing a non-tail-call
 12337 00008665 488B4520                	mov rax, PARAM(0)	; param a
 12338 00008669 50                      	push rax
 12339 0000866A 6A01                    	push 1	; arg count
 12340 0000866C 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12341 00008674 803805                  	cmp byte [rax], T_undefined
 12342 00008677 0F84F7CB0000            	je L_error_fvar_undefined
 12343 0000867D 803804                  	cmp byte [rax], T_closure
 12344 00008680 0F8572CC0000            	jne L_error_non_closure
 12345 00008686 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12346 00008689 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12347 0000868C 50                      	push rax
 12348 0000868D 6A02                    	push 2	; Number of arguments
 12349 0000868F 488B0425[C50E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12350 00008697 803805                  	cmp byte [rax], T_undefined
 12351 0000869A 0F84D4CB0000            	je L_error_fvar_undefined
 12352 000086A0 803804                  	cmp byte [rax], T_closure
 12353 000086A3 0F854FCC0000            	jne L_error_non_closure
 12354 000086A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12355 000086AC FF7508                  	push qword [rbp + 8]
 12356 000086AF FF7500                  	push qword [rbp]
 12357 000086B2 41BA06000000            	mov r10, 2 + 4
 12358 000086B8 4C8B4518                	mov r8, COUNT
 12359 000086BC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12360 000086C1 4C8D4DF8                	lea r9, [rbp - 8]
 12361                                  .L_tc_recycle_frame_loop_0232:
 12362 000086C5 4983FA00                	cmp r10, 0
 12363 000086C9 7413                    	je .L_tc_recycle_frame_done_0232
 12364 000086CB 4D8B19                  	mov r11, qword [r9]
 12365 000086CE 4D8918                  	mov qword [r8], r11
 12366 000086D1 49FFCA                  	dec r10
 12367 000086D4 4983E808                	sub r8, 8
 12368 000086D8 4983E908                	sub r9, 8
 12369 000086DC EBE7                    	jmp .L_tc_recycle_frame_loop_0232
 12370                                  .L_tc_recycle_frame_done_0232:
 12371 000086DE 498D6008                	lea rsp, [r8 + 8]
 12372 000086E2 5D                      	pop rbp
 12373 000086E3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12374 000086E6 EB52                    	jmp .L_if_end_0146
 12375                                  .L_if_else_0146:
 12376                                  	; Initiating tail-call optimization
 12377 000086E8 6A00                    	push 0	; Number of arguments
 12378 000086EA 488B4510                	mov rax, ENV
 12379 000086EE 488B00                  	mov rax, qword [rax + 8 * 0]
 12380 000086F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12381 000086F4 803804                  	cmp byte [rax], T_closure
 12382 000086F7 0F85FBCB0000            	jne L_error_non_closure
 12383 000086FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12384 00008700 FF7508                  	push qword [rbp + 8]
 12385 00008703 FF7500                  	push qword [rbp]
 12386 00008706 41BA04000000            	mov r10, 0 + 4
 12387 0000870C 4C8B4518                	mov r8, COUNT
 12388 00008710 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12389 00008715 4C8D4DF8                	lea r9, [rbp - 8]
 12390                                  .L_tc_recycle_frame_loop_0233:
 12391 00008719 4983FA00                	cmp r10, 0
 12392 0000871D 7413                    	je .L_tc_recycle_frame_done_0233
 12393 0000871F 4D8B19                  	mov r11, qword [r9]
 12394 00008722 4D8918                  	mov qword [r8], r11
 12395 00008725 49FFCA                  	dec r10
 12396 00008728 4983E808                	sub r8, 8
 12397 0000872C 4983E908                	sub r9, 8
 12398 00008730 EBE7                    	jmp .L_tc_recycle_frame_loop_0233
 12399                                  .L_tc_recycle_frame_done_0233:
 12400 00008732 498D6008                	lea rsp, [r8 + 8]
 12401 00008736 5D                      	pop rbp
 12402 00008737 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12403                                  .L_if_end_0146:
 12404                                  .L_if_end_0147:
 12405                                  .L_if_end_0148:
 12406 0000873A E983050000              	jmp .L_if_end_0151
 12407                                  .L_if_else_0151:
 12408                                  	; preparing a non-tail-call
 12409 0000873F 488B4520                	mov rax, PARAM(0)	; param a
 12410 00008743 50                      	push rax
 12411 00008744 6A01                    	push 1	; arg count
 12412 00008746 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12413 0000874E 803805                  	cmp byte [rax], T_undefined
 12414 00008751 0F841DCB0000            	je L_error_fvar_undefined
 12415 00008757 803804                  	cmp byte [rax], T_closure
 12416 0000875A 0F8598CB0000            	jne L_error_non_closure
 12417 00008760 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12418 00008763 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12419 00008766 483D[02000000]          	cmp rax, sob_boolean_false
 12420 0000876C 0F8467020000            	je .L_if_else_0150
 12421                                  	; preparing a non-tail-call
 12422 00008772 488B4528                	mov rax, PARAM(1)	; param b
 12423 00008776 50                      	push rax
 12424 00008777 6A01                    	push 1	; arg count
 12425 00008779 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 12426 00008781 803805                  	cmp byte [rax], T_undefined
 12427 00008784 0F84EACA0000            	je L_error_fvar_undefined
 12428 0000878A 803804                  	cmp byte [rax], T_closure
 12429 0000878D 0F8565CB0000            	jne L_error_non_closure
 12430 00008793 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12431 00008796 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12432 00008799 483D[02000000]          	cmp rax, sob_boolean_false
 12433 0000879F 0F848B000000            	je .L_if_else_014b
 12434                                  	; Initiating tail-call optimization
 12435                                  	; preparing a non-tail-call
 12436 000087A5 488B4528                	mov rax, PARAM(1)	; param b
 12437 000087A9 50                      	push rax
 12438 000087AA 6A01                    	push 1	; arg count
 12439 000087AC 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12440 000087B4 803805                  	cmp byte [rax], T_undefined
 12441 000087B7 0F84B7CA0000            	je L_error_fvar_undefined
 12442 000087BD 803804                  	cmp byte [rax], T_closure
 12443 000087C0 0F8532CB0000            	jne L_error_non_closure
 12444 000087C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12445 000087C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12446 000087CC 50                      	push rax
 12447 000087CD 488B4520                	mov rax, PARAM(0)	; param a
 12448 000087D1 50                      	push rax
 12449 000087D2 6A02                    	push 2	; Number of arguments
 12450 000087D4 488B0425[B40E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12451 000087DC 803805                  	cmp byte [rax], T_undefined
 12452 000087DF 0F848FCA0000            	je L_error_fvar_undefined
 12453 000087E5 803804                  	cmp byte [rax], T_closure
 12454 000087E8 0F850ACB0000            	jne L_error_non_closure
 12455 000087EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12456 000087F1 FF7508                  	push qword [rbp + 8]
 12457 000087F4 FF7500                  	push qword [rbp]
 12458 000087F7 41BA06000000            	mov r10, 2 + 4
 12459 000087FD 4C8B4518                	mov r8, COUNT
 12460 00008801 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12461 00008806 4C8D4DF8                	lea r9, [rbp - 8]
 12462                                  .L_tc_recycle_frame_loop_0234:
 12463 0000880A 4983FA00                	cmp r10, 0
 12464 0000880E 7413                    	je .L_tc_recycle_frame_done_0234
 12465 00008810 4D8B19                  	mov r11, qword [r9]
 12466 00008813 4D8918                  	mov qword [r8], r11
 12467 00008816 49FFCA                  	dec r10
 12468 00008819 4983E808                	sub r8, 8
 12469 0000881D 4983E908                	sub r9, 8
 12470 00008821 EBE7                    	jmp .L_tc_recycle_frame_loop_0234
 12471                                  .L_tc_recycle_frame_done_0234:
 12472 00008823 498D6008                	lea rsp, [r8 + 8]
 12473 00008827 5D                      	pop rbp
 12474 00008828 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12475 0000882B E9A4010000              	jmp .L_if_end_014b
 12476                                  .L_if_else_014b:
 12477                                  	; preparing a non-tail-call
 12478 00008830 488B4528                	mov rax, PARAM(1)	; param b
 12479 00008834 50                      	push rax
 12480 00008835 6A01                    	push 1	; arg count
 12481 00008837 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12482 0000883F 803805                  	cmp byte [rax], T_undefined
 12483 00008842 0F842CCA0000            	je L_error_fvar_undefined
 12484 00008848 803804                  	cmp byte [rax], T_closure
 12485 0000884B 0F85A7CA0000            	jne L_error_non_closure
 12486 00008851 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12487 00008854 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12488 00008857 483D[02000000]          	cmp rax, sob_boolean_false
 12489 0000885D 7468                    	je .L_if_else_014a
 12490                                  	; Initiating tail-call optimization
 12491 0000885F 488B4528                	mov rax, PARAM(1)	; param b
 12492 00008863 50                      	push rax
 12493 00008864 488B4520                	mov rax, PARAM(0)	; param a
 12494 00008868 50                      	push rax
 12495 00008869 6A02                    	push 2	; Number of arguments
 12496 0000886B 488B0425[B40E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12497 00008873 803805                  	cmp byte [rax], T_undefined
 12498 00008876 0F84F8C90000            	je L_error_fvar_undefined
 12499 0000887C 803804                  	cmp byte [rax], T_closure
 12500 0000887F 0F8573CA0000            	jne L_error_non_closure
 12501 00008885 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12502 00008888 FF7508                  	push qword [rbp + 8]
 12503 0000888B FF7500                  	push qword [rbp]
 12504 0000888E 41BA06000000            	mov r10, 2 + 4
 12505 00008894 4C8B4518                	mov r8, COUNT
 12506 00008898 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12507 0000889D 4C8D4DF8                	lea r9, [rbp - 8]
 12508                                  .L_tc_recycle_frame_loop_0235:
 12509 000088A1 4983FA00                	cmp r10, 0
 12510 000088A5 7413                    	je .L_tc_recycle_frame_done_0235
 12511 000088A7 4D8B19                  	mov r11, qword [r9]
 12512 000088AA 4D8918                  	mov qword [r8], r11
 12513 000088AD 49FFCA                  	dec r10
 12514 000088B0 4983E808                	sub r8, 8
 12515 000088B4 4983E908                	sub r9, 8
 12516 000088B8 EBE7                    	jmp .L_tc_recycle_frame_loop_0235
 12517                                  .L_tc_recycle_frame_done_0235:
 12518 000088BA 498D6008                	lea rsp, [r8 + 8]
 12519 000088BE 5D                      	pop rbp
 12520 000088BF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12521 000088C2 E90D010000              	jmp .L_if_end_014a
 12522                                  .L_if_else_014a:
 12523                                  	; preparing a non-tail-call
 12524 000088C7 488B4528                	mov rax, PARAM(1)	; param b
 12525 000088CB 50                      	push rax
 12526 000088CC 6A01                    	push 1	; arg count
 12527 000088CE 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 12528 000088D6 803805                  	cmp byte [rax], T_undefined
 12529 000088D9 0F8495C90000            	je L_error_fvar_undefined
 12530 000088DF 803804                  	cmp byte [rax], T_closure
 12531 000088E2 0F8510CA0000            	jne L_error_non_closure
 12532 000088E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12533 000088EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12534 000088EE 483D[02000000]          	cmp rax, sob_boolean_false
 12535 000088F4 0F8488000000            	je .L_if_else_0149
 12536                                  	; Initiating tail-call optimization
 12537 000088FA 488B4528                	mov rax, PARAM(1)	; param b
 12538 000088FE 50                      	push rax
 12539                                  	; preparing a non-tail-call
 12540 000088FF 488B4520                	mov rax, PARAM(0)	; param a
 12541 00008903 50                      	push rax
 12542 00008904 6A01                    	push 1	; arg count
 12543 00008906 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12544 0000890E 803805                  	cmp byte [rax], T_undefined
 12545 00008911 0F845DC90000            	je L_error_fvar_undefined
 12546 00008917 803804                  	cmp byte [rax], T_closure
 12547 0000891A 0F85D8C90000            	jne L_error_non_closure
 12548 00008920 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12549 00008923 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12550 00008926 50                      	push rax
 12551 00008927 6A02                    	push 2	; Number of arguments
 12552 00008929 488B0425[C50E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12553 00008931 803805                  	cmp byte [rax], T_undefined
 12554 00008934 0F843AC90000            	je L_error_fvar_undefined
 12555 0000893A 803804                  	cmp byte [rax], T_closure
 12556 0000893D 0F85B5C90000            	jne L_error_non_closure
 12557 00008943 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12558 00008946 FF7508                  	push qword [rbp + 8]
 12559 00008949 FF7500                  	push qword [rbp]
 12560 0000894C 41BA06000000            	mov r10, 2 + 4
 12561 00008952 4C8B4518                	mov r8, COUNT
 12562 00008956 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12563 0000895B 4C8D4DF8                	lea r9, [rbp - 8]
 12564                                  .L_tc_recycle_frame_loop_0236:
 12565 0000895F 4983FA00                	cmp r10, 0
 12566 00008963 7413                    	je .L_tc_recycle_frame_done_0236
 12567 00008965 4D8B19                  	mov r11, qword [r9]
 12568 00008968 4D8918                  	mov qword [r8], r11
 12569 0000896B 49FFCA                  	dec r10
 12570 0000896E 4983E808                	sub r8, 8
 12571 00008972 4983E908                	sub r9, 8
 12572 00008976 EBE7                    	jmp .L_tc_recycle_frame_loop_0236
 12573                                  .L_tc_recycle_frame_done_0236:
 12574 00008978 498D6008                	lea rsp, [r8 + 8]
 12575 0000897C 5D                      	pop rbp
 12576 0000897D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12577 00008980 EB52                    	jmp .L_if_end_0149
 12578                                  .L_if_else_0149:
 12579                                  	; Initiating tail-call optimization
 12580 00008982 6A00                    	push 0	; Number of arguments
 12581 00008984 488B4510                	mov rax, ENV
 12582 00008988 488B00                  	mov rax, qword [rax + 8 * 0]
 12583 0000898B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12584 0000898E 803804                  	cmp byte [rax], T_closure
 12585 00008991 0F8561C90000            	jne L_error_non_closure
 12586 00008997 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12587 0000899A FF7508                  	push qword [rbp + 8]
 12588 0000899D FF7500                  	push qword [rbp]
 12589 000089A0 41BA04000000            	mov r10, 0 + 4
 12590 000089A6 4C8B4518                	mov r8, COUNT
 12591 000089AA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12592 000089AF 4C8D4DF8                	lea r9, [rbp - 8]
 12593                                  .L_tc_recycle_frame_loop_0237:
 12594 000089B3 4983FA00                	cmp r10, 0
 12595 000089B7 7413                    	je .L_tc_recycle_frame_done_0237
 12596 000089B9 4D8B19                  	mov r11, qword [r9]
 12597 000089BC 4D8918                  	mov qword [r8], r11
 12598 000089BF 49FFCA                  	dec r10
 12599 000089C2 4983E808                	sub r8, 8
 12600 000089C6 4983E908                	sub r9, 8
 12601 000089CA EBE7                    	jmp .L_tc_recycle_frame_loop_0237
 12602                                  .L_tc_recycle_frame_done_0237:
 12603 000089CC 498D6008                	lea rsp, [r8 + 8]
 12604 000089D0 5D                      	pop rbp
 12605 000089D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12606                                  .L_if_end_0149:
 12607                                  .L_if_end_014a:
 12608                                  .L_if_end_014b:
 12609 000089D4 E9E9020000              	jmp .L_if_end_0150
 12610                                  .L_if_else_0150:
 12611                                  	; preparing a non-tail-call
 12612 000089D9 488B4520                	mov rax, PARAM(0)	; param a
 12613 000089DD 50                      	push rax
 12614 000089DE 6A01                    	push 1	; arg count
 12615 000089E0 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 12616 000089E8 803805                  	cmp byte [rax], T_undefined
 12617 000089EB 0F8483C80000            	je L_error_fvar_undefined
 12618 000089F1 803804                  	cmp byte [rax], T_closure
 12619 000089F4 0F85FEC80000            	jne L_error_non_closure
 12620 000089FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 12621 000089FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 12622 00008A00 483D[02000000]          	cmp rax, sob_boolean_false
 12623 00008A06 0F8464020000            	je .L_if_else_014f
 12624                                  	; preparing a non-tail-call
 12625 00008A0C 488B4528                	mov rax, PARAM(1)	; param b
 12626 00008A10 50                      	push rax
 12627 00008A11 6A01                    	push 1	; arg count
 12628 00008A13 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 12629 00008A1B 803805                  	cmp byte [rax], T_undefined
 12630 00008A1E 0F8450C80000            	je L_error_fvar_undefined
 12631 00008A24 803804                  	cmp byte [rax], T_closure
 12632 00008A27 0F85CBC80000            	jne L_error_non_closure
 12633 00008A2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12634 00008A30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12635 00008A33 483D[02000000]          	cmp rax, sob_boolean_false
 12636 00008A39 0F848B000000            	je .L_if_else_014e
 12637                                  	; Initiating tail-call optimization
 12638                                  	; preparing a non-tail-call
 12639 00008A3F 488B4528                	mov rax, PARAM(1)	; param b
 12640 00008A43 50                      	push rax
 12641 00008A44 6A01                    	push 1	; arg count
 12642 00008A46 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12643 00008A4E 803805                  	cmp byte [rax], T_undefined
 12644 00008A51 0F841DC80000            	je L_error_fvar_undefined
 12645 00008A57 803804                  	cmp byte [rax], T_closure
 12646 00008A5A 0F8598C80000            	jne L_error_non_closure
 12647 00008A60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12648 00008A63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12649 00008A66 50                      	push rax
 12650 00008A67 488B4520                	mov rax, PARAM(0)	; param a
 12651 00008A6B 50                      	push rax
 12652 00008A6C 6A02                    	push 2	; Number of arguments
 12653 00008A6E 488B0425[C50E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12654 00008A76 803805                  	cmp byte [rax], T_undefined
 12655 00008A79 0F84F5C70000            	je L_error_fvar_undefined
 12656 00008A7F 803804                  	cmp byte [rax], T_closure
 12657 00008A82 0F8570C80000            	jne L_error_non_closure
 12658 00008A88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12659 00008A8B FF7508                  	push qword [rbp + 8]
 12660 00008A8E FF7500                  	push qword [rbp]
 12661 00008A91 41BA06000000            	mov r10, 2 + 4
 12662 00008A97 4C8B4518                	mov r8, COUNT
 12663 00008A9B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12664 00008AA0 4C8D4DF8                	lea r9, [rbp - 8]
 12665                                  .L_tc_recycle_frame_loop_0238:
 12666 00008AA4 4983FA00                	cmp r10, 0
 12667 00008AA8 7413                    	je .L_tc_recycle_frame_done_0238
 12668 00008AAA 4D8B19                  	mov r11, qword [r9]
 12669 00008AAD 4D8918                  	mov qword [r8], r11
 12670 00008AB0 49FFCA                  	dec r10
 12671 00008AB3 4983E808                	sub r8, 8
 12672 00008AB7 4983E908                	sub r9, 8
 12673 00008ABB EBE7                    	jmp .L_tc_recycle_frame_loop_0238
 12674                                  .L_tc_recycle_frame_done_0238:
 12675 00008ABD 498D6008                	lea rsp, [r8 + 8]
 12676 00008AC1 5D                      	pop rbp
 12677 00008AC2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12678 00008AC5 E9A4010000              	jmp .L_if_end_014e
 12679                                  .L_if_else_014e:
 12680                                  	; preparing a non-tail-call
 12681 00008ACA 488B4528                	mov rax, PARAM(1)	; param b
 12682 00008ACE 50                      	push rax
 12683 00008ACF 6A01                    	push 1	; arg count
 12684 00008AD1 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12685 00008AD9 803805                  	cmp byte [rax], T_undefined
 12686 00008ADC 0F8492C70000            	je L_error_fvar_undefined
 12687 00008AE2 803804                  	cmp byte [rax], T_closure
 12688 00008AE5 0F850DC80000            	jne L_error_non_closure
 12689 00008AEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12690 00008AEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 12691 00008AF1 483D[02000000]          	cmp rax, sob_boolean_false
 12692 00008AF7 0F848B000000            	je .L_if_else_014d
 12693                                  	; Initiating tail-call optimization
 12694                                  	; preparing a non-tail-call
 12695 00008AFD 488B4528                	mov rax, PARAM(1)	; param b
 12696 00008B01 50                      	push rax
 12697 00008B02 6A01                    	push 1	; arg count
 12698 00008B04 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12699 00008B0C 803805                  	cmp byte [rax], T_undefined
 12700 00008B0F 0F845FC70000            	je L_error_fvar_undefined
 12701 00008B15 803804                  	cmp byte [rax], T_closure
 12702 00008B18 0F85DAC70000            	jne L_error_non_closure
 12703 00008B1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12704 00008B21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12705 00008B24 50                      	push rax
 12706 00008B25 488B4520                	mov rax, PARAM(0)	; param a
 12707 00008B29 50                      	push rax
 12708 00008B2A 6A02                    	push 2	; Number of arguments
 12709 00008B2C 488B0425[C50E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12710 00008B34 803805                  	cmp byte [rax], T_undefined
 12711 00008B37 0F8437C70000            	je L_error_fvar_undefined
 12712 00008B3D 803804                  	cmp byte [rax], T_closure
 12713 00008B40 0F85B2C70000            	jne L_error_non_closure
 12714 00008B46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12715 00008B49 FF7508                  	push qword [rbp + 8]
 12716 00008B4C FF7500                  	push qword [rbp]
 12717 00008B4F 41BA06000000            	mov r10, 2 + 4
 12718 00008B55 4C8B4518                	mov r8, COUNT
 12719 00008B59 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12720 00008B5E 4C8D4DF8                	lea r9, [rbp - 8]
 12721                                  .L_tc_recycle_frame_loop_0239:
 12722 00008B62 4983FA00                	cmp r10, 0
 12723 00008B66 7413                    	je .L_tc_recycle_frame_done_0239
 12724 00008B68 4D8B19                  	mov r11, qword [r9]
 12725 00008B6B 4D8918                  	mov qword [r8], r11
 12726 00008B6E 49FFCA                  	dec r10
 12727 00008B71 4983E808                	sub r8, 8
 12728 00008B75 4983E908                	sub r9, 8
 12729 00008B79 EBE7                    	jmp .L_tc_recycle_frame_loop_0239
 12730                                  .L_tc_recycle_frame_done_0239:
 12731 00008B7B 498D6008                	lea rsp, [r8 + 8]
 12732 00008B7F 5D                      	pop rbp
 12733 00008B80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12734 00008B83 E9E6000000              	jmp .L_if_end_014d
 12735                                  .L_if_else_014d:
 12736                                  	; preparing a non-tail-call
 12737 00008B88 488B4528                	mov rax, PARAM(1)	; param b
 12738 00008B8C 50                      	push rax
 12739 00008B8D 6A01                    	push 1	; arg count
 12740 00008B8F 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 12741 00008B97 803805                  	cmp byte [rax], T_undefined
 12742 00008B9A 0F84D4C60000            	je L_error_fvar_undefined
 12743 00008BA0 803804                  	cmp byte [rax], T_closure
 12744 00008BA3 0F854FC70000            	jne L_error_non_closure
 12745 00008BA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12746 00008BAC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12747 00008BAF 483D[02000000]          	cmp rax, sob_boolean_false
 12748 00008BB5 7465                    	je .L_if_else_014c
 12749                                  	; Initiating tail-call optimization
 12750 00008BB7 488B4528                	mov rax, PARAM(1)	; param b
 12751 00008BBB 50                      	push rax
 12752 00008BBC 488B4520                	mov rax, PARAM(0)	; param a
 12753 00008BC0 50                      	push rax
 12754 00008BC1 6A02                    	push 2	; Number of arguments
 12755 00008BC3 488B0425[C50E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12756 00008BCB 803805                  	cmp byte [rax], T_undefined
 12757 00008BCE 0F84A0C60000            	je L_error_fvar_undefined
 12758 00008BD4 803804                  	cmp byte [rax], T_closure
 12759 00008BD7 0F851BC70000            	jne L_error_non_closure
 12760 00008BDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12761 00008BE0 FF7508                  	push qword [rbp + 8]
 12762 00008BE3 FF7500                  	push qword [rbp]
 12763 00008BE6 41BA06000000            	mov r10, 2 + 4
 12764 00008BEC 4C8B4518                	mov r8, COUNT
 12765 00008BF0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12766 00008BF5 4C8D4DF8                	lea r9, [rbp - 8]
 12767                                  .L_tc_recycle_frame_loop_023a:
 12768 00008BF9 4983FA00                	cmp r10, 0
 12769 00008BFD 7413                    	je .L_tc_recycle_frame_done_023a
 12770 00008BFF 4D8B19                  	mov r11, qword [r9]
 12771 00008C02 4D8918                  	mov qword [r8], r11
 12772 00008C05 49FFCA                  	dec r10
 12773 00008C08 4983E808                	sub r8, 8
 12774 00008C0C 4983E908                	sub r9, 8
 12775 00008C10 EBE7                    	jmp .L_tc_recycle_frame_loop_023a
 12776                                  .L_tc_recycle_frame_done_023a:
 12777 00008C12 498D6008                	lea rsp, [r8 + 8]
 12778 00008C16 5D                      	pop rbp
 12779 00008C17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12780 00008C1A EB52                    	jmp .L_if_end_014c
 12781                                  .L_if_else_014c:
 12782                                  	; Initiating tail-call optimization
 12783 00008C1C 6A00                    	push 0	; Number of arguments
 12784 00008C1E 488B4510                	mov rax, ENV
 12785 00008C22 488B00                  	mov rax, qword [rax + 8 * 0]
 12786 00008C25 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12787 00008C28 803804                  	cmp byte [rax], T_closure
 12788 00008C2B 0F85C7C60000            	jne L_error_non_closure
 12789 00008C31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12790 00008C34 FF7508                  	push qword [rbp + 8]
 12791 00008C37 FF7500                  	push qword [rbp]
 12792 00008C3A 41BA04000000            	mov r10, 0 + 4
 12793 00008C40 4C8B4518                	mov r8, COUNT
 12794 00008C44 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12795 00008C49 4C8D4DF8                	lea r9, [rbp - 8]
 12796                                  .L_tc_recycle_frame_loop_023b:
 12797 00008C4D 4983FA00                	cmp r10, 0
 12798 00008C51 7413                    	je .L_tc_recycle_frame_done_023b
 12799 00008C53 4D8B19                  	mov r11, qword [r9]
 12800 00008C56 4D8918                  	mov qword [r8], r11
 12801 00008C59 49FFCA                  	dec r10
 12802 00008C5C 4983E808                	sub r8, 8
 12803 00008C60 4983E908                	sub r9, 8
 12804 00008C64 EBE7                    	jmp .L_tc_recycle_frame_loop_023b
 12805                                  .L_tc_recycle_frame_done_023b:
 12806 00008C66 498D6008                	lea rsp, [r8 + 8]
 12807 00008C6A 5D                      	pop rbp
 12808 00008C6B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12809                                  .L_if_end_014c:
 12810                                  .L_if_end_014d:
 12811                                  .L_if_end_014e:
 12812 00008C6E EB52                    	jmp .L_if_end_014f
 12813                                  .L_if_else_014f:
 12814                                  	; Initiating tail-call optimization
 12815 00008C70 6A00                    	push 0	; Number of arguments
 12816 00008C72 488B4510                	mov rax, ENV
 12817 00008C76 488B00                  	mov rax, qword [rax + 8 * 0]
 12818 00008C79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12819 00008C7C 803804                  	cmp byte [rax], T_closure
 12820 00008C7F 0F8573C60000            	jne L_error_non_closure
 12821 00008C85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12822 00008C88 FF7508                  	push qword [rbp + 8]
 12823 00008C8B FF7500                  	push qword [rbp]
 12824 00008C8E 41BA04000000            	mov r10, 0 + 4
 12825 00008C94 4C8B4518                	mov r8, COUNT
 12826 00008C98 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 12827 00008C9D 4C8D4DF8                	lea r9, [rbp - 8]
 12828                                  .L_tc_recycle_frame_loop_023c:
 12829 00008CA1 4983FA00                	cmp r10, 0
 12830 00008CA5 7413                    	je .L_tc_recycle_frame_done_023c
 12831 00008CA7 4D8B19                  	mov r11, qword [r9]
 12832 00008CAA 4D8918                  	mov qword [r8], r11
 12833 00008CAD 49FFCA                  	dec r10
 12834 00008CB0 4983E808                	sub r8, 8
 12835 00008CB4 4983E908                	sub r9, 8
 12836 00008CB8 EBE7                    	jmp .L_tc_recycle_frame_loop_023c
 12837                                  .L_tc_recycle_frame_done_023c:
 12838 00008CBA 498D6008                	lea rsp, [r8 + 8]
 12839 00008CBE 5D                      	pop rbp
 12840 00008CBF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12841                                  .L_if_end_014f:
 12842                                  .L_if_end_0150:
 12843                                  .L_if_end_0151:
 12844 00008CC2 C9                      	leave
 12845 00008CC3 C22000                  	ret AND_KILL_FRAME(2)
 12846                                  .L_lambda_simple_end_01b8:	; new closure is in rax
 12847 00008CC6 50                      	push rax
 12848 00008CC7 6A01                    	push 1	; Number of arguments
 12849 00008CC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12850 00008CCE E8CEC60000              	call malloc
 12851 00008CD3 50                      	push rax
 12852 00008CD4 BF08000000              	mov rdi, 8 * 1	; new rib
 12853 00008CD9 E8C3C60000              	call malloc
 12854 00008CDE 50                      	push rax
 12855 00008CDF BF10000000              	mov rdi, 8 * 2	; extended env
 12856 00008CE4 E8B8C60000              	call malloc
 12857 00008CE9 488B7D10                	mov rdi, ENV
 12858 00008CED BE00000000              	mov rsi, 0
 12859 00008CF2 BA01000000              	mov rdx, 1
 12860                                  .L_lambda_simple_env_loop_01b9:	; ext_env[i + 1] <-- env[i]
 12861 00008CF7 4883FE01                	cmp rsi, 1
 12862 00008CFB 7410                    	je .L_lambda_simple_env_end_01b9
 12863 00008CFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12864 00008D01 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12865 00008D05 48FFC6                  	inc rsi
 12866 00008D08 48FFC2                  	inc rdx
 12867 00008D0B EBEA                    	jmp .L_lambda_simple_env_loop_01b9
 12868                                  .L_lambda_simple_env_end_01b9:
 12869 00008D0D 5B                      	pop rbx
 12870 00008D0E BE00000000              	mov rsi, 0
 12871                                  .L_lambda_simple_params_loop_01b9:	; copy params
 12872 00008D13 4883FE01                	cmp rsi, 1
 12873 00008D17 740E                    	je .L_lambda_simple_params_end_01b9
 12874 00008D19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12875 00008D1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12876 00008D22 48FFC6                  	inc rsi
 12877 00008D25 EBEC                    	jmp .L_lambda_simple_params_loop_01b9
 12878                                  .L_lambda_simple_params_end_01b9:
 12879 00008D27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12880 00008D2A 4889C3                  	mov rbx, rax
 12881 00008D2D 58                      	pop rax
 12882 00008D2E C60004                  	mov byte [rax], T_closure
 12883 00008D31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12884 00008D35 48C74009[428D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01b9
 12885 00008D3D E9BB030000              	jmp .L_lambda_simple_end_01b9
 12886                                  .L_lambda_simple_code_01b9:	; lambda-simple body
 12887 00008D42 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12888 00008D48 740B                    	je .L_lambda_simple_arity_check_ok_01b9
 12889 00008D4A FF742410                	push qword [rsp + 8 * 2]
 12890 00008D4E 6A01                    	push 1
 12891 00008D50 E905C60000              	jmp L_error_incorrect_arity_simple
 12892                                  .L_lambda_simple_arity_check_ok_01b9:
 12893 00008D55 C8000000                	enter 0, 0
 12894 00008D59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12895 00008D5E E83EC60000              	call malloc
 12896 00008D63 50                      	push rax
 12897 00008D64 BF08000000              	mov rdi, 8 * 1	; new rib
 12898 00008D69 E833C60000              	call malloc
 12899 00008D6E 50                      	push rax
 12900 00008D6F BF18000000              	mov rdi, 8 * 3	; extended env
 12901 00008D74 E828C60000              	call malloc
 12902 00008D79 488B7D10                	mov rdi, ENV
 12903 00008D7D BE00000000              	mov rsi, 0
 12904 00008D82 BA01000000              	mov rdx, 1
 12905                                  .L_lambda_opt_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 12906 00008D87 4883FE02                	cmp rsi, 2
 12907 00008D8B 7410                    	je .L_lambda_opt_env_end_003f
 12908 00008D8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12909 00008D91 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12910 00008D95 48FFC6                  	inc rsi
 12911 00008D98 48FFC2                  	inc rdx
 12912 00008D9B EBEA                    	jmp .L_lambda_opt_env_loop_003f
 12913                                  .L_lambda_opt_env_end_003f:
 12914 00008D9D 5B                      	pop rbx
 12915 00008D9E BE00000000              	mov rsi, 0
 12916                                  .L_lambda_opt_params_loop_003f:	; copy params
 12917 00008DA3 4883FE01                	cmp rsi, 1
 12918 00008DA7 740E                    	je .L_lambda_opt_params_end_003f
 12919 00008DA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12920 00008DAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12921 00008DB2 48FFC6                  	inc rsi
 12922 00008DB5 EBEC                    	jmp .L_lambda_opt_params_loop_003f
 12923                                  .L_lambda_opt_params_end_003f:
 12924 00008DB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12925 00008DBA 4889C3                  	mov rbx, rax
 12926 00008DBD 58                      	pop rax
 12927 00008DBE C60004                  	mov byte [rax], T_closure
 12928 00008DC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12929 00008DC5 48C74009[D28D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_003f
 12930 00008DCD E927030000              	jmp .L_lambda_opt_end_003f
 12931                                  .L_lambda_opt_code_003f:
 12932 00008DD2 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 12933 00008DD7 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 12934 00008DDB 7407                    	je .L_lambda_opt_arity_check_exact_003f	; Jump if arity matches
 12935 00008DDD 7F4C                    	jg .L_lambda_opt_arity_check_more_003f	; Jump if more arguments passed
 12936 00008DDF E98AC50000              	jmp L_error_incorrect_arity_opt
 12937                                  .L_lambda_opt_arity_check_exact_003f:
 12938 00008DE4 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 12939 00008DE7 4983C603                	add r14, 3 ; add 3 first stack values
 12940 00008DEB 41BF00000000            	mov r15, 0 ; r15 = index
 12941 00008DF1 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 12942 00008DF5 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 12943 00008DFD EB00                    	jmp .L_lambda_opt_stack_shrink_loop_003f
 12944                                  .L_lambda_opt_stack_shrink_loop_003f:
 12945 00008DFF 4983FE00                	cmp r14, 0
 12946 00008E03 7E11                    	jle .L_make_lambda_opt_exact_finish_003f
 12947 00008E05 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 12948 00008E0A 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 12949 00008E0E 49FFCE                  	dec r14 ; next loop value
 12950 00008E11 49FFC7                  	inc r15 ; update i
 12951 00008E14 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_003f
 12952                                  .L_make_lambda_opt_exact_finish_003f:
 12953 00008E16 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 12954 00008E1E 49FFC2                  	inc r10
 12955 00008E21 4C89542410              	mov qword [rsp + 8 * 2], r10
 12956 00008E26 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_003f
 12957                                  .L_lambda_opt_arity_check_more_003f:
 12958 00008E2B 4D89D6                  	mov r14, r10 ; r14 = num args
 12959 00008E2E 4D89D7                  	mov r15, r10 ; r15 = num args
 12960 00008E31 41B901000000            	mov r9, 1; r9 = number of params 
 12961 00008E37 4D29CE                  	sub r14, r9 ; r14 = extra args
 12962 00008E3A 4D01F1                  	add r9, r14 ; r9 = num args
 12963 00008E3D 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 12963 00008E3F [0100000000000000] 
 12964 00008E47 EB00                    	jmp .L_make_lambda_opt_arg_list_003f
 12965                                  .L_make_lambda_opt_arg_list_003f:
 12966 00008E49 4983FE00                	cmp r14, 0
 12967 00008E4D 7E25                    	jle .L_make_lambda_opt_stack_fixed_003f
 12968 00008E4F 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 12969 00008E54 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 12970 00008E59 E843C50000              	call malloc                         ; Allocate memory, result in rax
 12971 00008E5E C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 12972 00008E61 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 12973 00008E65 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 12974 00008E69 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 12975 00008E6C 49FFC9                  	dec r9                              ; args index minus 1
 12976 00008E6F 49FFCE                  	dec r14                             ; next iteration
 12977 00008E72 EBD5                    	jmp .L_make_lambda_opt_arg_list_003f
 12978                                  .L_make_lambda_opt_stack_fixed_003f:
 12979 00008E74 4D89FE                  	mov r14, r15 ; r14 = num args
 12980 00008E77 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 12981 00008E7A 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 12982 00008E7E 4D89C1                  	mov r9, r8
 12983 00008E81 41BA01000000            	mov r10, 1; r10 = num of params
 12984 00008E87 4D29D6                  	sub r14, r10 ; r14 = extra args
 12985 00008E8A 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 12986 00008E8D 49FFCE                  	dec r14 ; how much we need to change stack wise?
 12987 00008E90 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 12988 00008E95 4D89CC                  	mov r12, r9
 12989 00008E98 4D29F4                  	sub r12, r14
 12990 00008E9B 49FFCC                  	dec r12
 12991 00008E9E 49FFCC                  	dec r12
 12992 00008EA1 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_003f
 12993                                  .L_lambda_opt_stack_shrink_loop_more_003f:
 12994 00008EA3 4983F800                	cmp r8, 0
 12995 00008EA7 7E16                    	jle .L_make_lambda_opt_more_finish_003f
 12996 00008EA9 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 12997 00008EAD 4D01F4                  	add r12, r14
 12998 00008EB0 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 12999 00008EB4 49FFC8                  	dec r8 ; next iteration
 13000 00008EB7 4D29F4                  	sub r12, r14 ; next iteration
 13001 00008EBA 49FFCC                  	dec r12 ; next iteration
 13002 00008EBD EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_003f
 13003                                  .L_make_lambda_opt_more_finish_003f:
 13004 00008EBF 41BA01000000            	mov r10, 1
 13005 00008EC5 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 13006 00008ECE 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 13007 00008ED2 4C01F4                  	add rsp, r14  ; Add to rsp
 13008 00008ED5 EB00                    	jmp .L_lambda_opt_stack_adjusted_003f
 13009                                  .L_lambda_opt_stack_adjusted_003f:
 13010 00008ED7 C8000000                	enter 0, 0
 13011                                  	; preparing a non-tail-call
 13012 00008EDB 488B4528                	mov rax, PARAM(1)	; param s
 13013 00008EDF 50                      	push rax
 13014 00008EE0 6A01                    	push 1	; arg count
 13015 00008EE2 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 13016 00008EEA 803805                  	cmp byte [rax], T_undefined
 13017 00008EED 0F8481C30000            	je L_error_fvar_undefined
 13018 00008EF3 803804                  	cmp byte [rax], T_closure
 13019 00008EF6 0F85FCC30000            	jne L_error_non_closure
 13020 00008EFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13021 00008EFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13022 00008F02 483D[02000000]          	cmp rax, sob_boolean_false
 13023 00008F08 7467                    	je .L_if_else_0152
 13024                                  	; Initiating tail-call optimization
 13025 00008F0A 488B4520                	mov rax, PARAM(0)	; param a
 13026 00008F0E 50                      	push rax
 13027 00008F0F 48B8-                   	mov rax, L_constants + 2270
 13027 00008F11 [DE08000000000000] 
 13028 00008F19 50                      	push rax
 13029 00008F1A 6A02                    	push 2	; Number of arguments
 13030 00008F1C 488B4510                	mov rax, ENV
 13031 00008F20 488B00                  	mov rax, qword [rax + 8 * 0]
 13032 00008F23 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13033 00008F26 803804                  	cmp byte [rax], T_closure
 13034 00008F29 0F85C9C30000            	jne L_error_non_closure
 13035 00008F2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13036 00008F32 FF7508                  	push qword [rbp + 8]
 13037 00008F35 FF7500                  	push qword [rbp]
 13038 00008F38 41BA06000000            	mov r10, 2 + 4
 13039 00008F3E 4C8B4518                	mov r8, COUNT
 13040 00008F42 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13041 00008F47 4C8D4DF8                	lea r9, [rbp - 8]
 13042                                  .L_tc_recycle_frame_loop_023d:
 13043 00008F4B 4983FA00                	cmp r10, 0
 13044 00008F4F 7413                    	je .L_tc_recycle_frame_done_023d
 13045 00008F51 4D8B19                  	mov r11, qword [r9]
 13046 00008F54 4D8918                  	mov qword [r8], r11
 13047 00008F57 49FFCA                  	dec r10
 13048 00008F5A 4983E808                	sub r8, 8
 13049 00008F5E 4983E908                	sub r9, 8
 13050 00008F62 EBE7                    	jmp .L_tc_recycle_frame_loop_023d
 13051                                  .L_tc_recycle_frame_done_023d:
 13052 00008F64 498D6008                	lea rsp, [r8 + 8]
 13053 00008F68 5D                      	pop rbp
 13054 00008F69 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13055 00008F6C E984010000              	jmp .L_if_end_0152
 13056                                  .L_if_else_0152:
 13057                                  	; Initiating tail-call optimization
 13058                                  	; preparing a non-tail-call
 13059 00008F71 488B4528                	mov rax, PARAM(1)	; param s
 13060 00008F75 50                      	push rax
 13061 00008F76 48B8-                   	mov rax, L_constants + 2270
 13061 00008F78 [DE08000000000000] 
 13062 00008F80 50                      	push rax
 13063 00008F81 488B0425[D70D0000]      	mov rax, qword [free_var_0]	; free var *
 13064 00008F89 803805                  	cmp byte [rax], T_undefined
 13065 00008F8C 0F84E2C20000            	je L_error_fvar_undefined
 13066 00008F92 50                      	push rax
 13067 00008F93 6A03                    	push 3	; arg count
 13068 00008F95 488B0425[7C130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13069 00008F9D 803805                  	cmp byte [rax], T_undefined
 13070 00008FA0 0F84CEC20000            	je L_error_fvar_undefined
 13071 00008FA6 803804                  	cmp byte [rax], T_closure
 13072 00008FA9 0F8549C30000            	jne L_error_non_closure
 13073 00008FAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13074 00008FB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13075 00008FB5 50                      	push rax
 13076 00008FB6 6A01                    	push 1	; Number of arguments
 13077 00008FB8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13078 00008FBD E8DFC30000              	call malloc
 13079 00008FC2 50                      	push rax
 13080 00008FC3 BF10000000              	mov rdi, 8 * 2	; new rib
 13081 00008FC8 E8D4C30000              	call malloc
 13082 00008FCD 50                      	push rax
 13083 00008FCE BF20000000              	mov rdi, 8 * 4	; extended env
 13084 00008FD3 E8C9C30000              	call malloc
 13085 00008FD8 488B7D10                	mov rdi, ENV
 13086 00008FDC BE00000000              	mov rsi, 0
 13087 00008FE1 BA01000000              	mov rdx, 1
 13088                                  .L_lambda_simple_env_loop_01ba:	; ext_env[i + 1] <-- env[i]
 13089 00008FE6 4883FE03                	cmp rsi, 3
 13090 00008FEA 7410                    	je .L_lambda_simple_env_end_01ba
 13091 00008FEC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13092 00008FF0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13093 00008FF4 48FFC6                  	inc rsi
 13094 00008FF7 48FFC2                  	inc rdx
 13095 00008FFA EBEA                    	jmp .L_lambda_simple_env_loop_01ba
 13096                                  .L_lambda_simple_env_end_01ba:
 13097 00008FFC 5B                      	pop rbx
 13098 00008FFD BE00000000              	mov rsi, 0
 13099                                  .L_lambda_simple_params_loop_01ba:	; copy params
 13100 00009002 4883FE02                	cmp rsi, 2
 13101 00009006 740E                    	je .L_lambda_simple_params_end_01ba
 13102 00009008 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13103 0000900D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13104 00009011 48FFC6                  	inc rsi
 13105 00009014 EBEC                    	jmp .L_lambda_simple_params_loop_01ba
 13106                                  .L_lambda_simple_params_end_01ba:
 13107 00009016 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13108 00009019 4889C3                  	mov rbx, rax
 13109 0000901C 58                      	pop rax
 13110 0000901D C60004                  	mov byte [rax], T_closure
 13111 00009020 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13112 00009024 48C74009[31900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ba
 13113 0000902C E97E000000              	jmp .L_lambda_simple_end_01ba
 13114                                  .L_lambda_simple_code_01ba:	; lambda-simple body
 13115 00009031 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13116 00009037 740B                    	je .L_lambda_simple_arity_check_ok_01ba
 13117 00009039 FF742410                	push qword [rsp + 8 * 2]
 13118 0000903D 6A01                    	push 1
 13119 0000903F E916C30000              	jmp L_error_incorrect_arity_simple
 13120                                  .L_lambda_simple_arity_check_ok_01ba:
 13121 00009044 C8000000                	enter 0, 0
 13122                                  	; Initiating tail-call optimization
 13123 00009048 488B4520                	mov rax, PARAM(0)	; param b
 13124 0000904C 50                      	push rax
 13125 0000904D 488B4510                	mov rax, ENV
 13126 00009051 488B00                  	mov rax, qword [rax + 8 * 0]
 13127 00009054 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13128 00009057 50                      	push rax
 13129 00009058 6A02                    	push 2	; Number of arguments
 13130 0000905A 488B4510                	mov rax, ENV
 13131 0000905E 488B4008                	mov rax, qword [rax + 8 * 1]
 13132 00009062 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13133 00009065 803804                  	cmp byte [rax], T_closure
 13134 00009068 0F858AC20000            	jne L_error_non_closure
 13135 0000906E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13136 00009071 FF7508                  	push qword [rbp + 8]
 13137 00009074 FF7500                  	push qword [rbp]
 13138 00009077 41BA06000000            	mov r10, 2 + 4
 13139 0000907D 4C8B4518                	mov r8, COUNT
 13140 00009081 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13141 00009086 4C8D4DF8                	lea r9, [rbp - 8]
 13142                                  .L_tc_recycle_frame_loop_023e:
 13143 0000908A 4983FA00                	cmp r10, 0
 13144 0000908E 7413                    	je .L_tc_recycle_frame_done_023e
 13145 00009090 4D8B19                  	mov r11, qword [r9]
 13146 00009093 4D8918                  	mov qword [r8], r11
 13147 00009096 49FFCA                  	dec r10
 13148 00009099 4983E808                	sub r8, 8
 13149 0000909D 4983E908                	sub r9, 8
 13150 000090A1 EBE7                    	jmp .L_tc_recycle_frame_loop_023e
 13151                                  .L_tc_recycle_frame_done_023e:
 13152 000090A3 498D6008                	lea rsp, [r8 + 8]
 13153 000090A7 5D                      	pop rbp
 13154 000090A8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13155 000090AB C9                      	leave
 13156 000090AC C21800                  	ret AND_KILL_FRAME(1)
 13157                                  .L_lambda_simple_end_01ba:	; new closure is in rax
 13158 000090AF 803804                  	cmp byte [rax], T_closure
 13159 000090B2 0F8540C20000            	jne L_error_non_closure
 13160 000090B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13161 000090BB FF7508                  	push qword [rbp + 8]
 13162 000090BE FF7500                  	push qword [rbp]
 13163 000090C1 41BA05000000            	mov r10, 1 + 4
 13164 000090C7 4C8B4518                	mov r8, COUNT
 13165 000090CB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13166 000090D0 4C8D4DF8                	lea r9, [rbp - 8]
 13167                                  .L_tc_recycle_frame_loop_023f:
 13168 000090D4 4983FA00                	cmp r10, 0
 13169 000090D8 7413                    	je .L_tc_recycle_frame_done_023f
 13170 000090DA 4D8B19                  	mov r11, qword [r9]
 13171 000090DD 4D8918                  	mov qword [r8], r11
 13172 000090E0 49FFCA                  	dec r10
 13173 000090E3 4983E808                	sub r8, 8
 13174 000090E7 4983E908                	sub r9, 8
 13175 000090EB EBE7                    	jmp .L_tc_recycle_frame_loop_023f
 13176                                  .L_tc_recycle_frame_done_023f:
 13177 000090ED 498D6008                	lea rsp, [r8 + 8]
 13178 000090F1 5D                      	pop rbp
 13179 000090F2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13180                                  .L_if_end_0152:
 13181 000090F5 C9                      	leave
 13182 000090F6 C22000                  	ret AND_KILL_FRAME(2)
 13183                                  .L_lambda_opt_end_003f:	; new closure is in rax
 13184 000090F9 C9                      	leave
 13185 000090FA C21800                  	ret AND_KILL_FRAME(1)
 13186                                  .L_lambda_simple_end_01b9:	; new closure is in rax
 13187 000090FD 803804                  	cmp byte [rax], T_closure
 13188 00009100 0F85F2C10000            	jne L_error_non_closure
 13189 00009106 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13190 00009109 FF7508                  	push qword [rbp + 8]
 13191 0000910C FF7500                  	push qword [rbp]
 13192 0000910F 41BA05000000            	mov r10, 1 + 4
 13193 00009115 4C8B4518                	mov r8, COUNT
 13194 00009119 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13195 0000911E 4C8D4DF8                	lea r9, [rbp - 8]
 13196                                  .L_tc_recycle_frame_loop_0240:
 13197 00009122 4983FA00                	cmp r10, 0
 13198 00009126 7413                    	je .L_tc_recycle_frame_done_0240
 13199 00009128 4D8B19                  	mov r11, qword [r9]
 13200 0000912B 4D8918                  	mov qword [r8], r11
 13201 0000912E 49FFCA                  	dec r10
 13202 00009131 4983E808                	sub r8, 8
 13203 00009135 4983E908                	sub r9, 8
 13204 00009139 EBE7                    	jmp .L_tc_recycle_frame_loop_0240
 13205                                  .L_tc_recycle_frame_done_0240:
 13206 0000913B 498D6008                	lea rsp, [r8 + 8]
 13207 0000913F 5D                      	pop rbp
 13208 00009140 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13209 00009143 C9                      	leave
 13210 00009144 C21800                  	ret AND_KILL_FRAME(1)
 13211                                  .L_lambda_simple_end_01b7:	; new closure is in rax
 13212 00009147 803804                  	cmp byte [rax], T_closure
 13213 0000914A 0F85A8C10000            	jne L_error_non_closure
 13214 00009150 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13215 00009153 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13216 00009156 48890425[0A0E0000]      	mov qword [free_var_3], rax
 13217 0000915E 48B8-                   	mov rax, sob_void
 13217 00009160 [0000000000000000] 
 13218                                  
 13219 00009168 4889C7                  	mov rdi, rax
 13220 0000916B E886C40000              	call print_sexpr_if_not_void
 13221 00009170 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13222 00009175 E827C20000              	call malloc
 13223 0000917A 50                      	push rax
 13224 0000917B BF00000000              	mov rdi, 8 * 0	; new rib
 13225 00009180 E81CC20000              	call malloc
 13226 00009185 50                      	push rax
 13227 00009186 BF08000000              	mov rdi, 8 * 1	; extended env
 13228 0000918B E811C20000              	call malloc
 13229 00009190 488B7D10                	mov rdi, ENV
 13230 00009194 BE00000000              	mov rsi, 0
 13231 00009199 BA01000000              	mov rdx, 1
 13232                                  .L_lambda_simple_env_loop_01bb:	; ext_env[i + 1] <-- env[i]
 13233 0000919E 4883FE00                	cmp rsi, 0
 13234 000091A2 7410                    	je .L_lambda_simple_env_end_01bb
 13235 000091A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13236 000091A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13237 000091AC 48FFC6                  	inc rsi
 13238 000091AF 48FFC2                  	inc rdx
 13239 000091B2 EBEA                    	jmp .L_lambda_simple_env_loop_01bb
 13240                                  .L_lambda_simple_env_end_01bb:
 13241 000091B4 5B                      	pop rbx
 13242 000091B5 BE00000000              	mov rsi, 0
 13243                                  .L_lambda_simple_params_loop_01bb:	; copy params
 13244 000091BA 4883FE00                	cmp rsi, 0
 13245 000091BE 740E                    	je .L_lambda_simple_params_end_01bb
 13246 000091C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13247 000091C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13248 000091C9 48FFC6                  	inc rsi
 13249 000091CC EBEC                    	jmp .L_lambda_simple_params_loop_01bb
 13250                                  .L_lambda_simple_params_end_01bb:
 13251 000091CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13252 000091D1 4889C3                  	mov rbx, rax
 13253 000091D4 58                      	pop rax
 13254 000091D5 C60004                  	mov byte [rax], T_closure
 13255 000091D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13256 000091DC 48C74009[E9910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01bb
 13257 000091E4 E90D010000              	jmp .L_lambda_simple_end_01bb
 13258                                  .L_lambda_simple_code_01bb:	; lambda-simple body
 13259 000091E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13260 000091EF 740B                    	je .L_lambda_simple_arity_check_ok_01bb
 13261 000091F1 FF742410                	push qword [rsp + 8 * 2]
 13262 000091F5 6A01                    	push 1
 13263 000091F7 E95EC10000              	jmp L_error_incorrect_arity_simple
 13264                                  .L_lambda_simple_arity_check_ok_01bb:
 13265 000091FC C8000000                	enter 0, 0
 13266                                  	; preparing a non-tail-call
 13267 00009200 488B4520                	mov rax, PARAM(0)	; param n
 13268 00009204 50                      	push rax
 13269 00009205 6A01                    	push 1	; arg count
 13270 00009207 488B0425[DE170000]      	mov rax, qword [free_var_151]	; free var zero?
 13271 0000920F 803805                  	cmp byte [rax], T_undefined
 13272 00009212 0F845CC00000            	je L_error_fvar_undefined
 13273 00009218 803804                  	cmp byte [rax], T_closure
 13274 0000921B 0F85D7C00000            	jne L_error_non_closure
 13275 00009221 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13276 00009224 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13277 00009227 483D[02000000]          	cmp rax, sob_boolean_false
 13278 0000922D 740F                    	je .L_if_else_0153
 13279 0000922F 48B8-                   	mov rax, L_constants + 2270
 13279 00009231 [DE08000000000000] 
 13280 00009239 E9B4000000              	jmp .L_if_end_0153
 13281                                  .L_if_else_0153:
 13282                                  	; Initiating tail-call optimization
 13283                                  	; preparing a non-tail-call
 13284                                  	; preparing a non-tail-call
 13285 0000923E 48B8-                   	mov rax, L_constants + 2270
 13285 00009240 [DE08000000000000] 
 13286 00009248 50                      	push rax
 13287 00009249 488B4520                	mov rax, PARAM(0)	; param n
 13288 0000924D 50                      	push rax
 13289 0000924E 6A02                    	push 2	; arg count
 13290 00009250 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 13291 00009258 803805                  	cmp byte [rax], T_undefined
 13292 0000925B 0F8413C00000            	je L_error_fvar_undefined
 13293 00009261 803804                  	cmp byte [rax], T_closure
 13294 00009264 0F858EC00000            	jne L_error_non_closure
 13295 0000926A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13296 0000926D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13297 00009270 50                      	push rax
 13298 00009271 6A01                    	push 1	; arg count
 13299 00009273 488B0425[6B130000]      	mov rax, qword [free_var_84]	; free var fact
 13300 0000927B 803805                  	cmp byte [rax], T_undefined
 13301 0000927E 0F84F0BF0000            	je L_error_fvar_undefined
 13302 00009284 803804                  	cmp byte [rax], T_closure
 13303 00009287 0F856BC00000            	jne L_error_non_closure
 13304 0000928D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13305 00009290 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13306 00009293 50                      	push rax
 13307 00009294 488B4520                	mov rax, PARAM(0)	; param n
 13308 00009298 50                      	push rax
 13309 00009299 6A02                    	push 2	; Number of arguments
 13310 0000929B 488B0425[D70D0000]      	mov rax, qword [free_var_0]	; free var *
 13311 000092A3 803805                  	cmp byte [rax], T_undefined
 13312 000092A6 0F84C8BF0000            	je L_error_fvar_undefined
 13313 000092AC 803804                  	cmp byte [rax], T_closure
 13314 000092AF 0F8543C00000            	jne L_error_non_closure
 13315 000092B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13316 000092B8 FF7508                  	push qword [rbp + 8]
 13317 000092BB FF7500                  	push qword [rbp]
 13318 000092BE 41BA06000000            	mov r10, 2 + 4
 13319 000092C4 4C8B4518                	mov r8, COUNT
 13320 000092C8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13321 000092CD 4C8D4DF8                	lea r9, [rbp - 8]
 13322                                  .L_tc_recycle_frame_loop_0241:
 13323 000092D1 4983FA00                	cmp r10, 0
 13324 000092D5 7413                    	je .L_tc_recycle_frame_done_0241
 13325 000092D7 4D8B19                  	mov r11, qword [r9]
 13326 000092DA 4D8918                  	mov qword [r8], r11
 13327 000092DD 49FFCA                  	dec r10
 13328 000092E0 4983E808                	sub r8, 8
 13329 000092E4 4983E908                	sub r9, 8
 13330 000092E8 EBE7                    	jmp .L_tc_recycle_frame_loop_0241
 13331                                  .L_tc_recycle_frame_done_0241:
 13332 000092EA 498D6008                	lea rsp, [r8 + 8]
 13333 000092EE 5D                      	pop rbp
 13334 000092EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13335                                  .L_if_end_0153:
 13336 000092F2 C9                      	leave
 13337 000092F3 C21800                  	ret AND_KILL_FRAME(1)
 13338                                  .L_lambda_simple_end_01bb:	; new closure is in rax
 13339 000092F6 48890425[6B130000]      	mov qword [free_var_84], rax
 13340 000092FE 48B8-                   	mov rax, sob_void
 13340 00009300 [0000000000000000] 
 13341                                  
 13342 00009308 4889C7                  	mov rdi, rax
 13343 0000930B E8E6C20000              	call print_sexpr_if_not_void
 13344 00009310 48B8-                   	mov rax, L_constants + 0
 13344 00009312 [0000000000000000] 
 13345 0000931A 48890425[1B0E0000]      	mov qword [free_var_4], rax
 13346 00009322 48B8-                   	mov rax, sob_void
 13346 00009324 [0000000000000000] 
 13347                                  
 13348 0000932C 4889C7                  	mov rdi, rax
 13349 0000932F E8C2C20000              	call print_sexpr_if_not_void
 13350 00009334 48B8-                   	mov rax, L_constants + 0
 13350 00009336 [0000000000000000] 
 13351 0000933E 48890425[2C0E0000]      	mov qword [free_var_5], rax
 13352 00009346 48B8-                   	mov rax, sob_void
 13352 00009348 [0000000000000000] 
 13353                                  
 13354 00009350 4889C7                  	mov rdi, rax
 13355 00009353 E89EC20000              	call print_sexpr_if_not_void
 13356 00009358 48B8-                   	mov rax, L_constants + 0
 13356 0000935A [0000000000000000] 
 13357 00009362 48890425[4E0E0000]      	mov qword [free_var_7], rax
 13358 0000936A 48B8-                   	mov rax, sob_void
 13358 0000936C [0000000000000000] 
 13359                                  
 13360 00009374 4889C7                  	mov rdi, rax
 13361 00009377 E87AC20000              	call print_sexpr_if_not_void
 13362 0000937C 48B8-                   	mov rax, L_constants + 0
 13362 0000937E [0000000000000000] 
 13363 00009386 48890425[5F0E0000]      	mov qword [free_var_8], rax
 13364 0000938E 48B8-                   	mov rax, sob_void
 13364 00009390 [0000000000000000] 
 13365                                  
 13366 00009398 4889C7                  	mov rdi, rax
 13367 0000939B E856C20000              	call print_sexpr_if_not_void
 13368 000093A0 48B8-                   	mov rax, L_constants + 0
 13368 000093A2 [0000000000000000] 
 13369 000093AA 48890425[3D0E0000]      	mov qword [free_var_6], rax
 13370 000093B2 48B8-                   	mov rax, sob_void
 13370 000093B4 [0000000000000000] 
 13371                                  
 13372 000093BC 4889C7                  	mov rdi, rax
 13373 000093BF E832C20000              	call print_sexpr_if_not_void
 13374                                  	; preparing a non-tail-call
 13375 000093C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13376 000093C9 E8D3BF0000              	call malloc
 13377 000093CE 50                      	push rax
 13378 000093CF BF00000000              	mov rdi, 8 * 0	; new rib
 13379 000093D4 E8C8BF0000              	call malloc
 13380 000093D9 50                      	push rax
 13381 000093DA BF08000000              	mov rdi, 8 * 1	; extended env
 13382 000093DF E8BDBF0000              	call malloc
 13383 000093E4 488B7D10                	mov rdi, ENV
 13384 000093E8 BE00000000              	mov rsi, 0
 13385 000093ED BA01000000              	mov rdx, 1
 13386                                  .L_lambda_simple_env_loop_01bc:	; ext_env[i + 1] <-- env[i]
 13387 000093F2 4883FE00                	cmp rsi, 0
 13388 000093F6 7410                    	je .L_lambda_simple_env_end_01bc
 13389 000093F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13390 000093FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13391 00009400 48FFC6                  	inc rsi
 13392 00009403 48FFC2                  	inc rdx
 13393 00009406 EBEA                    	jmp .L_lambda_simple_env_loop_01bc
 13394                                  .L_lambda_simple_env_end_01bc:
 13395 00009408 5B                      	pop rbx
 13396 00009409 BE00000000              	mov rsi, 0
 13397                                  .L_lambda_simple_params_loop_01bc:	; copy params
 13398 0000940E 4883FE00                	cmp rsi, 0
 13399 00009412 740E                    	je .L_lambda_simple_params_end_01bc
 13400 00009414 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13401 00009419 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13402 0000941D 48FFC6                  	inc rsi
 13403 00009420 EBEC                    	jmp .L_lambda_simple_params_loop_01bc
 13404                                  .L_lambda_simple_params_end_01bc:
 13405 00009422 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13406 00009425 4889C3                  	mov rbx, rax
 13407 00009428 58                      	pop rax
 13408 00009429 C60004                  	mov byte [rax], T_closure
 13409 0000942C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13410 00009430 48C74009[3D940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01bc
 13411 00009438 E98A000000              	jmp .L_lambda_simple_end_01bc
 13412                                  .L_lambda_simple_code_01bc:	; lambda-simple body
 13413 0000943D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13414 00009443 740B                    	je .L_lambda_simple_arity_check_ok_01bc
 13415 00009445 FF742410                	push qword [rsp + 8 * 2]
 13416 00009449 6A00                    	push 0
 13417 0000944B E90ABF0000              	jmp L_error_incorrect_arity_simple
 13418                                  .L_lambda_simple_arity_check_ok_01bc:
 13419 00009450 C8000000                	enter 0, 0
 13420                                  	; Initiating tail-call optimization
 13421 00009454 48B8-                   	mov rax, L_constants + 2408
 13421 00009456 [6809000000000000] 
 13422 0000945E 50                      	push rax
 13423 0000945F 48B8-                   	mov rax, L_constants + 2399
 13423 00009461 [5F09000000000000] 
 13424 00009469 50                      	push rax
 13425 0000946A 6A02                    	push 2	; Number of arguments
 13426 0000946C 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
 13427 00009474 803805                  	cmp byte [rax], T_undefined
 13428 00009477 0F84F7BD0000            	je L_error_fvar_undefined
 13429 0000947D 803804                  	cmp byte [rax], T_closure
 13430 00009480 0F8572BE0000            	jne L_error_non_closure
 13431 00009486 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13432 00009489 FF7508                  	push qword [rbp + 8]
 13433 0000948C FF7500                  	push qword [rbp]
 13434 0000948F 41BA06000000            	mov r10, 2 + 4
 13435 00009495 4C8B4518                	mov r8, COUNT
 13436 00009499 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13437 0000949E 4C8D4DF8                	lea r9, [rbp - 8]
 13438                                  .L_tc_recycle_frame_loop_0242:
 13439 000094A2 4983FA00                	cmp r10, 0
 13440 000094A6 7413                    	je .L_tc_recycle_frame_done_0242
 13441 000094A8 4D8B19                  	mov r11, qword [r9]
 13442 000094AB 4D8918                  	mov qword [r8], r11
 13443 000094AE 49FFCA                  	dec r10
 13444 000094B1 4983E808                	sub r8, 8
 13445 000094B5 4983E908                	sub r9, 8
 13446 000094B9 EBE7                    	jmp .L_tc_recycle_frame_loop_0242
 13447                                  .L_tc_recycle_frame_done_0242:
 13448 000094BB 498D6008                	lea rsp, [r8 + 8]
 13449 000094BF 5D                      	pop rbp
 13450 000094C0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13451 000094C3 C9                      	leave
 13452 000094C4 C21000                  	ret AND_KILL_FRAME(0)
 13453                                  .L_lambda_simple_end_01bc:	; new closure is in rax
 13454 000094C7 50                      	push rax
 13455 000094C8 6A01                    	push 1	; arg count
 13456 000094CA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13457 000094CF E8CDBE0000              	call malloc
 13458 000094D4 50                      	push rax
 13459 000094D5 BF00000000              	mov rdi, 8 * 0	; new rib
 13460 000094DA E8C2BE0000              	call malloc
 13461 000094DF 50                      	push rax
 13462 000094E0 BF08000000              	mov rdi, 8 * 1	; extended env
 13463 000094E5 E8B7BE0000              	call malloc
 13464 000094EA 488B7D10                	mov rdi, ENV
 13465 000094EE BE00000000              	mov rsi, 0
 13466 000094F3 BA01000000              	mov rdx, 1
 13467                                  .L_lambda_simple_env_loop_01bd:	; ext_env[i + 1] <-- env[i]
 13468 000094F8 4883FE00                	cmp rsi, 0
 13469 000094FC 7410                    	je .L_lambda_simple_env_end_01bd
 13470 000094FE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13471 00009502 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13472 00009506 48FFC6                  	inc rsi
 13473 00009509 48FFC2                  	inc rdx
 13474 0000950C EBEA                    	jmp .L_lambda_simple_env_loop_01bd
 13475                                  .L_lambda_simple_env_end_01bd:
 13476 0000950E 5B                      	pop rbx
 13477 0000950F BE00000000              	mov rsi, 0
 13478                                  .L_lambda_simple_params_loop_01bd:	; copy params
 13479 00009514 4883FE00                	cmp rsi, 0
 13480 00009518 740E                    	je .L_lambda_simple_params_end_01bd
 13481 0000951A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13482 0000951F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13483 00009523 48FFC6                  	inc rsi
 13484 00009526 EBEC                    	jmp .L_lambda_simple_params_loop_01bd
 13485                                  .L_lambda_simple_params_end_01bd:
 13486 00009528 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13487 0000952B 4889C3                  	mov rbx, rax
 13488 0000952E 58                      	pop rax
 13489 0000952F C60004                  	mov byte [rax], T_closure
 13490 00009532 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13491 00009536 48C74009[43950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01bd
 13492 0000953E E944190000              	jmp .L_lambda_simple_end_01bd
 13493                                  .L_lambda_simple_code_01bd:	; lambda-simple body
 13494 00009543 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13495 00009549 740B                    	je .L_lambda_simple_arity_check_ok_01bd
 13496 0000954B FF742410                	push qword [rsp + 8 * 2]
 13497 0000954F 6A01                    	push 1
 13498 00009551 E904BE0000              	jmp L_error_incorrect_arity_simple
 13499                                  .L_lambda_simple_arity_check_ok_01bd:
 13500 00009556 C8000000                	enter 0, 0
 13501                                  	; Initiating tail-call optimization
 13502 0000955A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13503 0000955F E83DBE0000              	call malloc
 13504 00009564 50                      	push rax
 13505 00009565 BF08000000              	mov rdi, 8 * 1	; new rib
 13506 0000956A E832BE0000              	call malloc
 13507 0000956F 50                      	push rax
 13508 00009570 BF10000000              	mov rdi, 8 * 2	; extended env
 13509 00009575 E827BE0000              	call malloc
 13510 0000957A 488B7D10                	mov rdi, ENV
 13511 0000957E BE00000000              	mov rsi, 0
 13512 00009583 BA01000000              	mov rdx, 1
 13513                                  .L_lambda_simple_env_loop_01be:	; ext_env[i + 1] <-- env[i]
 13514 00009588 4883FE01                	cmp rsi, 1
 13515 0000958C 7410                    	je .L_lambda_simple_env_end_01be
 13516 0000958E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13517 00009592 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13518 00009596 48FFC6                  	inc rsi
 13519 00009599 48FFC2                  	inc rdx
 13520 0000959C EBEA                    	jmp .L_lambda_simple_env_loop_01be
 13521                                  .L_lambda_simple_env_end_01be:
 13522 0000959E 5B                      	pop rbx
 13523 0000959F BE00000000              	mov rsi, 0
 13524                                  .L_lambda_simple_params_loop_01be:	; copy params
 13525 000095A4 4883FE01                	cmp rsi, 1
 13526 000095A8 740E                    	je .L_lambda_simple_params_end_01be
 13527 000095AA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13528 000095AF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13529 000095B3 48FFC6                  	inc rsi
 13530 000095B6 EBEC                    	jmp .L_lambda_simple_params_loop_01be
 13531                                  .L_lambda_simple_params_end_01be:
 13532 000095B8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13533 000095BB 4889C3                  	mov rbx, rax
 13534 000095BE 58                      	pop rax
 13535 000095BF C60004                  	mov byte [rax], T_closure
 13536 000095C2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13537 000095C6 48C74009[D3950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01be
 13538 000095CE E999080000              	jmp .L_lambda_simple_end_01be
 13539                                  .L_lambda_simple_code_01be:	; lambda-simple body
 13540 000095D3 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13541 000095D9 740B                    	je .L_lambda_simple_arity_check_ok_01be
 13542 000095DB FF742410                	push qword [rsp + 8 * 2]
 13543 000095DF 6A03                    	push 3
 13544 000095E1 E974BD0000              	jmp L_error_incorrect_arity_simple
 13545                                  .L_lambda_simple_arity_check_ok_01be:
 13546 000095E6 C8000000                	enter 0, 0
 13547 000095EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13548 000095EF E8ADBD0000              	call malloc
 13549 000095F4 50                      	push rax
 13550 000095F5 BF18000000              	mov rdi, 8 * 3	; new rib
 13551 000095FA E8A2BD0000              	call malloc
 13552 000095FF 50                      	push rax
 13553 00009600 BF18000000              	mov rdi, 8 * 3	; extended env
 13554 00009605 E897BD0000              	call malloc
 13555 0000960A 488B7D10                	mov rdi, ENV
 13556 0000960E BE00000000              	mov rsi, 0
 13557 00009613 BA01000000              	mov rdx, 1
 13558                                  .L_lambda_simple_env_loop_01bf:	; ext_env[i + 1] <-- env[i]
 13559 00009618 4883FE02                	cmp rsi, 2
 13560 0000961C 7410                    	je .L_lambda_simple_env_end_01bf
 13561 0000961E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13562 00009622 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13563 00009626 48FFC6                  	inc rsi
 13564 00009629 48FFC2                  	inc rdx
 13565 0000962C EBEA                    	jmp .L_lambda_simple_env_loop_01bf
 13566                                  .L_lambda_simple_env_end_01bf:
 13567 0000962E 5B                      	pop rbx
 13568 0000962F BE00000000              	mov rsi, 0
 13569                                  .L_lambda_simple_params_loop_01bf:	; copy params
 13570 00009634 4883FE03                	cmp rsi, 3
 13571 00009638 740E                    	je .L_lambda_simple_params_end_01bf
 13572 0000963A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13573 0000963F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13574 00009643 48FFC6                  	inc rsi
 13575 00009646 EBEC                    	jmp .L_lambda_simple_params_loop_01bf
 13576                                  .L_lambda_simple_params_end_01bf:
 13577 00009648 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13578 0000964B 4889C3                  	mov rbx, rax
 13579 0000964E 58                      	pop rax
 13580 0000964F C60004                  	mov byte [rax], T_closure
 13581 00009652 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13582 00009656 48C74009[63960000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01bf
 13583 0000965E E905080000              	jmp .L_lambda_simple_end_01bf
 13584                                  .L_lambda_simple_code_01bf:	; lambda-simple body
 13585 00009663 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13586 00009669 740B                    	je .L_lambda_simple_arity_check_ok_01bf
 13587 0000966B FF742410                	push qword [rsp + 8 * 2]
 13588 0000966F 6A02                    	push 2
 13589 00009671 E9E4BC0000              	jmp L_error_incorrect_arity_simple
 13590                                  .L_lambda_simple_arity_check_ok_01bf:
 13591 00009676 C8000000                	enter 0, 0
 13592                                  	; preparing a non-tail-call
 13593 0000967A 488B4520                	mov rax, PARAM(0)	; param a
 13594 0000967E 50                      	push rax
 13595 0000967F 6A01                    	push 1	; arg count
 13596 00009681 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 13597 00009689 803805                  	cmp byte [rax], T_undefined
 13598 0000968C 0F84E2BB0000            	je L_error_fvar_undefined
 13599 00009692 803804                  	cmp byte [rax], T_closure
 13600 00009695 0F855DBC0000            	jne L_error_non_closure
 13601 0000969B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13602 0000969E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13603 000096A1 483D[02000000]          	cmp rax, sob_boolean_false
 13604 000096A7 0F8455020000            	je .L_if_else_015f
 13605                                  	; preparing a non-tail-call
 13606 000096AD 488B4528                	mov rax, PARAM(1)	; param b
 13607 000096B1 50                      	push rax
 13608 000096B2 6A01                    	push 1	; arg count
 13609 000096B4 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 13610 000096BC 803805                  	cmp byte [rax], T_undefined
 13611 000096BF 0F84AFBB0000            	je L_error_fvar_undefined
 13612 000096C5 803804                  	cmp byte [rax], T_closure
 13613 000096C8 0F852ABC0000            	jne L_error_non_closure
 13614 000096CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 13615 000096D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13616 000096D4 483D[02000000]          	cmp rax, sob_boolean_false
 13617 000096DA 7461                    	je .L_if_else_0156
 13618                                  	; Initiating tail-call optimization
 13619 000096DC 488B4528                	mov rax, PARAM(1)	; param b
 13620 000096E0 50                      	push rax
 13621 000096E1 488B4520                	mov rax, PARAM(0)	; param a
 13622 000096E5 50                      	push rax
 13623 000096E6 6A02                    	push 2	; Number of arguments
 13624 000096E8 488B4510                	mov rax, ENV
 13625 000096EC 488B00                  	mov rax, qword [rax + 8 * 0]
 13626 000096EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 13627 000096F2 803804                  	cmp byte [rax], T_closure
 13628 000096F5 0F85FDBB0000            	jne L_error_non_closure
 13629 000096FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 13630 000096FE FF7508                  	push qword [rbp + 8]
 13631 00009701 FF7500                  	push qword [rbp]
 13632 00009704 41BA06000000            	mov r10, 2 + 4
 13633 0000970A 4C8B4518                	mov r8, COUNT
 13634 0000970E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13635 00009713 4C8D4DF8                	lea r9, [rbp - 8]
 13636                                  .L_tc_recycle_frame_loop_0243:
 13637 00009717 4983FA00                	cmp r10, 0
 13638 0000971B 7413                    	je .L_tc_recycle_frame_done_0243
 13639 0000971D 4D8B19                  	mov r11, qword [r9]
 13640 00009720 4D8918                  	mov qword [r8], r11
 13641 00009723 49FFCA                  	dec r10
 13642 00009726 4983E808                	sub r8, 8
 13643 0000972A 4983E908                	sub r9, 8
 13644 0000972E EBE7                    	jmp .L_tc_recycle_frame_loop_0243
 13645                                  .L_tc_recycle_frame_done_0243:
 13646 00009730 498D6008                	lea rsp, [r8 + 8]
 13647 00009734 5D                      	pop rbp
 13648 00009735 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13649 00009738 E9C0010000              	jmp .L_if_end_0156
 13650                                  .L_if_else_0156:
 13651                                  	; preparing a non-tail-call
 13652 0000973D 488B4528                	mov rax, PARAM(1)	; param b
 13653 00009741 50                      	push rax
 13654 00009742 6A01                    	push 1	; arg count
 13655 00009744 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13656 0000974C 803805                  	cmp byte [rax], T_undefined
 13657 0000974F 0F841FBB0000            	je L_error_fvar_undefined
 13658 00009755 803804                  	cmp byte [rax], T_closure
 13659 00009758 0F859ABB0000            	jne L_error_non_closure
 13660 0000975E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13661 00009761 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13662 00009764 483D[02000000]          	cmp rax, sob_boolean_false
 13663 0000976A 0F8485000000            	je .L_if_else_0155
 13664                                  	; Initiating tail-call optimization
 13665 00009770 488B4528                	mov rax, PARAM(1)	; param b
 13666 00009774 50                      	push rax
 13667                                  	; preparing a non-tail-call
 13668 00009775 488B4520                	mov rax, PARAM(0)	; param a
 13669 00009779 50                      	push rax
 13670 0000977A 6A01                    	push 1	; arg count
 13671 0000977C 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13672 00009784 803805                  	cmp byte [rax], T_undefined
 13673 00009787 0F84E7BA0000            	je L_error_fvar_undefined
 13674 0000978D 803804                  	cmp byte [rax], T_closure
 13675 00009790 0F8562BB0000            	jne L_error_non_closure
 13676 00009796 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13677 00009799 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13678 0000979C 50                      	push rax
 13679 0000979D 6A02                    	push 2	; Number of arguments
 13680 0000979F 488B4510                	mov rax, ENV
 13681 000097A3 488B00                  	mov rax, qword [rax + 8 * 0]
 13682 000097A6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13683 000097AA 803804                  	cmp byte [rax], T_closure
 13684 000097AD 0F8545BB0000            	jne L_error_non_closure
 13685 000097B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13686 000097B6 FF7508                  	push qword [rbp + 8]
 13687 000097B9 FF7500                  	push qword [rbp]
 13688 000097BC 41BA06000000            	mov r10, 2 + 4
 13689 000097C2 4C8B4518                	mov r8, COUNT
 13690 000097C6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13691 000097CB 4C8D4DF8                	lea r9, [rbp - 8]
 13692                                  .L_tc_recycle_frame_loop_0244:
 13693 000097CF 4983FA00                	cmp r10, 0
 13694 000097D3 7413                    	je .L_tc_recycle_frame_done_0244
 13695 000097D5 4D8B19                  	mov r11, qword [r9]
 13696 000097D8 4D8918                  	mov qword [r8], r11
 13697 000097DB 49FFCA                  	dec r10
 13698 000097DE 4983E808                	sub r8, 8
 13699 000097E2 4983E908                	sub r9, 8
 13700 000097E6 EBE7                    	jmp .L_tc_recycle_frame_loop_0244
 13701                                  .L_tc_recycle_frame_done_0244:
 13702 000097E8 498D6008                	lea rsp, [r8 + 8]
 13703 000097EC 5D                      	pop rbp
 13704 000097ED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13705 000097F0 E908010000              	jmp .L_if_end_0155
 13706                                  .L_if_else_0155:
 13707                                  	; preparing a non-tail-call
 13708 000097F5 488B4528                	mov rax, PARAM(1)	; param b
 13709 000097F9 50                      	push rax
 13710 000097FA 6A01                    	push 1	; arg count
 13711 000097FC 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 13712 00009804 803805                  	cmp byte [rax], T_undefined
 13713 00009807 0F8467BA0000            	je L_error_fvar_undefined
 13714 0000980D 803804                  	cmp byte [rax], T_closure
 13715 00009810 0F85E2BA0000            	jne L_error_non_closure
 13716 00009816 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13717 00009819 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13718 0000981C 483D[02000000]          	cmp rax, sob_boolean_false
 13719 00009822 0F8482000000            	je .L_if_else_0154
 13720                                  	; Initiating tail-call optimization
 13721 00009828 488B4528                	mov rax, PARAM(1)	; param b
 13722 0000982C 50                      	push rax
 13723                                  	; preparing a non-tail-call
 13724 0000982D 488B4520                	mov rax, PARAM(0)	; param a
 13725 00009831 50                      	push rax
 13726 00009832 6A01                    	push 1	; arg count
 13727 00009834 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13728 0000983C 803805                  	cmp byte [rax], T_undefined
 13729 0000983F 0F842FBA0000            	je L_error_fvar_undefined
 13730 00009845 803804                  	cmp byte [rax], T_closure
 13731 00009848 0F85AABA0000            	jne L_error_non_closure
 13732 0000984E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13733 00009851 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13734 00009854 50                      	push rax
 13735 00009855 6A02                    	push 2	; Number of arguments
 13736 00009857 488B4510                	mov rax, ENV
 13737 0000985B 488B00                  	mov rax, qword [rax + 8 * 0]
 13738 0000985E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13739 00009862 803804                  	cmp byte [rax], T_closure
 13740 00009865 0F858DBA0000            	jne L_error_non_closure
 13741 0000986B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13742 0000986E FF7508                  	push qword [rbp + 8]
 13743 00009871 FF7500                  	push qword [rbp]
 13744 00009874 41BA06000000            	mov r10, 2 + 4
 13745 0000987A 4C8B4518                	mov r8, COUNT
 13746 0000987E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13747 00009883 4C8D4DF8                	lea r9, [rbp - 8]
 13748                                  .L_tc_recycle_frame_loop_0245:
 13749 00009887 4983FA00                	cmp r10, 0
 13750 0000988B 7413                    	je .L_tc_recycle_frame_done_0245
 13751 0000988D 4D8B19                  	mov r11, qword [r9]
 13752 00009890 4D8918                  	mov qword [r8], r11
 13753 00009893 49FFCA                  	dec r10
 13754 00009896 4983E808                	sub r8, 8
 13755 0000989A 4983E908                	sub r9, 8
 13756 0000989E EBE7                    	jmp .L_tc_recycle_frame_loop_0245
 13757                                  .L_tc_recycle_frame_done_0245:
 13758 000098A0 498D6008                	lea rsp, [r8 + 8]
 13759 000098A4 5D                      	pop rbp
 13760 000098A5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13761 000098A8 EB53                    	jmp .L_if_end_0154
 13762                                  .L_if_else_0154:
 13763                                  	; Initiating tail-call optimization
 13764 000098AA 6A00                    	push 0	; Number of arguments
 13765 000098AC 488B4510                	mov rax, ENV
 13766 000098B0 488B4008                	mov rax, qword [rax + 8 * 1]
 13767 000098B4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13768 000098B7 803804                  	cmp byte [rax], T_closure
 13769 000098BA 0F8538BA0000            	jne L_error_non_closure
 13770 000098C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13771 000098C3 FF7508                  	push qword [rbp + 8]
 13772 000098C6 FF7500                  	push qword [rbp]
 13773 000098C9 41BA04000000            	mov r10, 0 + 4
 13774 000098CF 4C8B4518                	mov r8, COUNT
 13775 000098D3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13776 000098D8 4C8D4DF8                	lea r9, [rbp - 8]
 13777                                  .L_tc_recycle_frame_loop_0246:
 13778 000098DC 4983FA00                	cmp r10, 0
 13779 000098E0 7413                    	je .L_tc_recycle_frame_done_0246
 13780 000098E2 4D8B19                  	mov r11, qword [r9]
 13781 000098E5 4D8918                  	mov qword [r8], r11
 13782 000098E8 49FFCA                  	dec r10
 13783 000098EB 4983E808                	sub r8, 8
 13784 000098EF 4983E908                	sub r9, 8
 13785 000098F3 EBE7                    	jmp .L_tc_recycle_frame_loop_0246
 13786                                  .L_tc_recycle_frame_done_0246:
 13787 000098F5 498D6008                	lea rsp, [r8 + 8]
 13788 000098F9 5D                      	pop rbp
 13789 000098FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13790                                  .L_if_end_0154:
 13791                                  .L_if_end_0155:
 13792                                  .L_if_end_0156:
 13793 000098FD E962050000              	jmp .L_if_end_015f
 13794                                  .L_if_else_015f:
 13795                                  	; preparing a non-tail-call
 13796 00009902 488B4520                	mov rax, PARAM(0)	; param a
 13797 00009906 50                      	push rax
 13798 00009907 6A01                    	push 1	; arg count
 13799 00009909 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13800 00009911 803805                  	cmp byte [rax], T_undefined
 13801 00009914 0F845AB90000            	je L_error_fvar_undefined
 13802 0000991A 803804                  	cmp byte [rax], T_closure
 13803 0000991D 0F85D5B90000            	jne L_error_non_closure
 13804 00009923 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13805 00009926 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13806 00009929 483D[02000000]          	cmp rax, sob_boolean_false
 13807 0000992F 0F8456020000            	je .L_if_else_015e
 13808                                  	; preparing a non-tail-call
 13809 00009935 488B4528                	mov rax, PARAM(1)	; param b
 13810 00009939 50                      	push rax
 13811 0000993A 6A01                    	push 1	; arg count
 13812 0000993C 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 13813 00009944 803805                  	cmp byte [rax], T_undefined
 13814 00009947 0F8427B90000            	je L_error_fvar_undefined
 13815 0000994D 803804                  	cmp byte [rax], T_closure
 13816 00009950 0F85A2B90000            	jne L_error_non_closure
 13817 00009956 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13818 00009959 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13819 0000995C 483D[02000000]          	cmp rax, sob_boolean_false
 13820 00009962 0F8485000000            	je .L_if_else_0159
 13821                                  	; Initiating tail-call optimization
 13822                                  	; preparing a non-tail-call
 13823 00009968 488B4528                	mov rax, PARAM(1)	; param b
 13824 0000996C 50                      	push rax
 13825 0000996D 6A01                    	push 1	; arg count
 13826 0000996F 488B0425[C40F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13827 00009977 803805                  	cmp byte [rax], T_undefined
 13828 0000997A 0F84F4B80000            	je L_error_fvar_undefined
 13829 00009980 803804                  	cmp byte [rax], T_closure
 13830 00009983 0F856FB90000            	jne L_error_non_closure
 13831 00009989 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13832 0000998C FF5009                  	call SOB_CLOSURE_CODE(rax)
 13833 0000998F 50                      	push rax
 13834 00009990 488B4520                	mov rax, PARAM(0)	; param a
 13835 00009994 50                      	push rax
 13836 00009995 6A02                    	push 2	; Number of arguments
 13837 00009997 488B4510                	mov rax, ENV
 13838 0000999B 488B00                  	mov rax, qword [rax + 8 * 0]
 13839 0000999E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13840 000099A2 803804                  	cmp byte [rax], T_closure
 13841 000099A5 0F854DB90000            	jne L_error_non_closure
 13842 000099AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 13843 000099AE FF7508                  	push qword [rbp + 8]
 13844 000099B1 FF7500                  	push qword [rbp]
 13845 000099B4 41BA06000000            	mov r10, 2 + 4
 13846 000099BA 4C8B4518                	mov r8, COUNT
 13847 000099BE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13848 000099C3 4C8D4DF8                	lea r9, [rbp - 8]
 13849                                  .L_tc_recycle_frame_loop_0247:
 13850 000099C7 4983FA00                	cmp r10, 0
 13851 000099CB 7413                    	je .L_tc_recycle_frame_done_0247
 13852 000099CD 4D8B19                  	mov r11, qword [r9]
 13853 000099D0 4D8918                  	mov qword [r8], r11
 13854 000099D3 49FFCA                  	dec r10
 13855 000099D6 4983E808                	sub r8, 8
 13856 000099DA 4983E908                	sub r9, 8
 13857 000099DE EBE7                    	jmp .L_tc_recycle_frame_loop_0247
 13858                                  .L_tc_recycle_frame_done_0247:
 13859 000099E0 498D6008                	lea rsp, [r8 + 8]
 13860 000099E4 5D                      	pop rbp
 13861 000099E5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13862 000099E8 E999010000              	jmp .L_if_end_0159
 13863                                  .L_if_else_0159:
 13864                                  	; preparing a non-tail-call
 13865 000099ED 488B4528                	mov rax, PARAM(1)	; param b
 13866 000099F1 50                      	push rax
 13867 000099F2 6A01                    	push 1	; arg count
 13868 000099F4 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13869 000099FC 803805                  	cmp byte [rax], T_undefined
 13870 000099FF 0F846FB80000            	je L_error_fvar_undefined
 13871 00009A05 803804                  	cmp byte [rax], T_closure
 13872 00009A08 0F85EAB80000            	jne L_error_non_closure
 13873 00009A0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13874 00009A11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13875 00009A14 483D[02000000]          	cmp rax, sob_boolean_false
 13876 00009A1A 7462                    	je .L_if_else_0158
 13877                                  	; Initiating tail-call optimization
 13878 00009A1C 488B4528                	mov rax, PARAM(1)	; param b
 13879 00009A20 50                      	push rax
 13880 00009A21 488B4520                	mov rax, PARAM(0)	; param a
 13881 00009A25 50                      	push rax
 13882 00009A26 6A02                    	push 2	; Number of arguments
 13883 00009A28 488B4510                	mov rax, ENV
 13884 00009A2C 488B00                  	mov rax, qword [rax + 8 * 0]
 13885 00009A2F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13886 00009A33 803804                  	cmp byte [rax], T_closure
 13887 00009A36 0F85BCB80000            	jne L_error_non_closure
 13888 00009A3C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13889 00009A3F FF7508                  	push qword [rbp + 8]
 13890 00009A42 FF7500                  	push qword [rbp]
 13891 00009A45 41BA06000000            	mov r10, 2 + 4
 13892 00009A4B 4C8B4518                	mov r8, COUNT
 13893 00009A4F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13894 00009A54 4C8D4DF8                	lea r9, [rbp - 8]
 13895                                  .L_tc_recycle_frame_loop_0248:
 13896 00009A58 4983FA00                	cmp r10, 0
 13897 00009A5C 7413                    	je .L_tc_recycle_frame_done_0248
 13898 00009A5E 4D8B19                  	mov r11, qword [r9]
 13899 00009A61 4D8918                  	mov qword [r8], r11
 13900 00009A64 49FFCA                  	dec r10
 13901 00009A67 4983E808                	sub r8, 8
 13902 00009A6B 4983E908                	sub r9, 8
 13903 00009A6F EBE7                    	jmp .L_tc_recycle_frame_loop_0248
 13904                                  .L_tc_recycle_frame_done_0248:
 13905 00009A71 498D6008                	lea rsp, [r8 + 8]
 13906 00009A75 5D                      	pop rbp
 13907 00009A76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13908 00009A79 E908010000              	jmp .L_if_end_0158
 13909                                  .L_if_else_0158:
 13910                                  	; preparing a non-tail-call
 13911 00009A7E 488B4528                	mov rax, PARAM(1)	; param b
 13912 00009A82 50                      	push rax
 13913 00009A83 6A01                    	push 1	; arg count
 13914 00009A85 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 13915 00009A8D 803805                  	cmp byte [rax], T_undefined
 13916 00009A90 0F84DEB70000            	je L_error_fvar_undefined
 13917 00009A96 803804                  	cmp byte [rax], T_closure
 13918 00009A99 0F8559B80000            	jne L_error_non_closure
 13919 00009A9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13920 00009AA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13921 00009AA5 483D[02000000]          	cmp rax, sob_boolean_false
 13922 00009AAB 0F8482000000            	je .L_if_else_0157
 13923                                  	; Initiating tail-call optimization
 13924 00009AB1 488B4528                	mov rax, PARAM(1)	; param b
 13925 00009AB5 50                      	push rax
 13926                                  	; preparing a non-tail-call
 13927 00009AB6 488B4520                	mov rax, PARAM(0)	; param a
 13928 00009ABA 50                      	push rax
 13929 00009ABB 6A01                    	push 1	; arg count
 13930 00009ABD 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13931 00009AC5 803805                  	cmp byte [rax], T_undefined
 13932 00009AC8 0F84A6B70000            	je L_error_fvar_undefined
 13933 00009ACE 803804                  	cmp byte [rax], T_closure
 13934 00009AD1 0F8521B80000            	jne L_error_non_closure
 13935 00009AD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13936 00009ADA FF5009                  	call SOB_CLOSURE_CODE(rax)
 13937 00009ADD 50                      	push rax
 13938 00009ADE 6A02                    	push 2	; Number of arguments
 13939 00009AE0 488B4510                	mov rax, ENV
 13940 00009AE4 488B00                  	mov rax, qword [rax + 8 * 0]
 13941 00009AE7 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13942 00009AEB 803804                  	cmp byte [rax], T_closure
 13943 00009AEE 0F8504B80000            	jne L_error_non_closure
 13944 00009AF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13945 00009AF7 FF7508                  	push qword [rbp + 8]
 13946 00009AFA FF7500                  	push qword [rbp]
 13947 00009AFD 41BA06000000            	mov r10, 2 + 4
 13948 00009B03 4C8B4518                	mov r8, COUNT
 13949 00009B07 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13950 00009B0C 4C8D4DF8                	lea r9, [rbp - 8]
 13951                                  .L_tc_recycle_frame_loop_0249:
 13952 00009B10 4983FA00                	cmp r10, 0
 13953 00009B14 7413                    	je .L_tc_recycle_frame_done_0249
 13954 00009B16 4D8B19                  	mov r11, qword [r9]
 13955 00009B19 4D8918                  	mov qword [r8], r11
 13956 00009B1C 49FFCA                  	dec r10
 13957 00009B1F 4983E808                	sub r8, 8
 13958 00009B23 4983E908                	sub r9, 8
 13959 00009B27 EBE7                    	jmp .L_tc_recycle_frame_loop_0249
 13960                                  .L_tc_recycle_frame_done_0249:
 13961 00009B29 498D6008                	lea rsp, [r8 + 8]
 13962 00009B2D 5D                      	pop rbp
 13963 00009B2E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13964 00009B31 EB53                    	jmp .L_if_end_0157
 13965                                  .L_if_else_0157:
 13966                                  	; Initiating tail-call optimization
 13967 00009B33 6A00                    	push 0	; Number of arguments
 13968 00009B35 488B4510                	mov rax, ENV
 13969 00009B39 488B4008                	mov rax, qword [rax + 8 * 1]
 13970 00009B3D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13971 00009B40 803804                  	cmp byte [rax], T_closure
 13972 00009B43 0F85AFB70000            	jne L_error_non_closure
 13973 00009B49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13974 00009B4C FF7508                  	push qword [rbp + 8]
 13975 00009B4F FF7500                  	push qword [rbp]
 13976 00009B52 41BA04000000            	mov r10, 0 + 4
 13977 00009B58 4C8B4518                	mov r8, COUNT
 13978 00009B5C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 13979 00009B61 4C8D4DF8                	lea r9, [rbp - 8]
 13980                                  .L_tc_recycle_frame_loop_024a:
 13981 00009B65 4983FA00                	cmp r10, 0
 13982 00009B69 7413                    	je .L_tc_recycle_frame_done_024a
 13983 00009B6B 4D8B19                  	mov r11, qword [r9]
 13984 00009B6E 4D8918                  	mov qword [r8], r11
 13985 00009B71 49FFCA                  	dec r10
 13986 00009B74 4983E808                	sub r8, 8
 13987 00009B78 4983E908                	sub r9, 8
 13988 00009B7C EBE7                    	jmp .L_tc_recycle_frame_loop_024a
 13989                                  .L_tc_recycle_frame_done_024a:
 13990 00009B7E 498D6008                	lea rsp, [r8 + 8]
 13991 00009B82 5D                      	pop rbp
 13992 00009B83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13993                                  .L_if_end_0157:
 13994                                  .L_if_end_0158:
 13995                                  .L_if_end_0159:
 13996 00009B86 E9D9020000              	jmp .L_if_end_015e
 13997                                  .L_if_else_015e:
 13998                                  	; preparing a non-tail-call
 13999 00009B8B 488B4520                	mov rax, PARAM(0)	; param a
 14000 00009B8F 50                      	push rax
 14001 00009B90 6A01                    	push 1	; arg count
 14002 00009B92 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 14003 00009B9A 803805                  	cmp byte [rax], T_undefined
 14004 00009B9D 0F84D1B60000            	je L_error_fvar_undefined
 14005 00009BA3 803804                  	cmp byte [rax], T_closure
 14006 00009BA6 0F854CB70000            	jne L_error_non_closure
 14007 00009BAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 14008 00009BAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 14009 00009BB2 483D[02000000]          	cmp rax, sob_boolean_false
 14010 00009BB8 0F8453020000            	je .L_if_else_015d
 14011                                  	; preparing a non-tail-call
 14012 00009BBE 488B4528                	mov rax, PARAM(1)	; param b
 14013 00009BC2 50                      	push rax
 14014 00009BC3 6A01                    	push 1	; arg count
 14015 00009BC5 488B0425[E2130000]      	mov rax, qword [free_var_91]	; free var integer?
 14016 00009BCD 803805                  	cmp byte [rax], T_undefined
 14017 00009BD0 0F849EB60000            	je L_error_fvar_undefined
 14018 00009BD6 803804                  	cmp byte [rax], T_closure
 14019 00009BD9 0F8519B70000            	jne L_error_non_closure
 14020 00009BDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14021 00009BE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14022 00009BE5 483D[02000000]          	cmp rax, sob_boolean_false
 14023 00009BEB 0F8485000000            	je .L_if_else_015c
 14024                                  	; Initiating tail-call optimization
 14025                                  	; preparing a non-tail-call
 14026 00009BF1 488B4528                	mov rax, PARAM(1)	; param b
 14027 00009BF5 50                      	push rax
 14028 00009BF6 6A01                    	push 1	; arg count
 14029 00009BF8 488B0425[D1130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14030 00009C00 803805                  	cmp byte [rax], T_undefined
 14031 00009C03 0F846BB60000            	je L_error_fvar_undefined
 14032 00009C09 803804                  	cmp byte [rax], T_closure
 14033 00009C0C 0F85E6B60000            	jne L_error_non_closure
 14034 00009C12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14035 00009C15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14036 00009C18 50                      	push rax
 14037 00009C19 488B4520                	mov rax, PARAM(0)	; param a
 14038 00009C1D 50                      	push rax
 14039 00009C1E 6A02                    	push 2	; Number of arguments
 14040 00009C20 488B4510                	mov rax, ENV
 14041 00009C24 488B00                  	mov rax, qword [rax + 8 * 0]
 14042 00009C27 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14043 00009C2B 803804                  	cmp byte [rax], T_closure
 14044 00009C2E 0F85C4B60000            	jne L_error_non_closure
 14045 00009C34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14046 00009C37 FF7508                  	push qword [rbp + 8]
 14047 00009C3A FF7500                  	push qword [rbp]
 14048 00009C3D 41BA06000000            	mov r10, 2 + 4
 14049 00009C43 4C8B4518                	mov r8, COUNT
 14050 00009C47 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14051 00009C4C 4C8D4DF8                	lea r9, [rbp - 8]
 14052                                  .L_tc_recycle_frame_loop_024b:
 14053 00009C50 4983FA00                	cmp r10, 0
 14054 00009C54 7413                    	je .L_tc_recycle_frame_done_024b
 14055 00009C56 4D8B19                  	mov r11, qword [r9]
 14056 00009C59 4D8918                  	mov qword [r8], r11
 14057 00009C5C 49FFCA                  	dec r10
 14058 00009C5F 4983E808                	sub r8, 8
 14059 00009C63 4983E908                	sub r9, 8
 14060 00009C67 EBE7                    	jmp .L_tc_recycle_frame_loop_024b
 14061                                  .L_tc_recycle_frame_done_024b:
 14062 00009C69 498D6008                	lea rsp, [r8 + 8]
 14063 00009C6D 5D                      	pop rbp
 14064 00009C6E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14065 00009C71 E999010000              	jmp .L_if_end_015c
 14066                                  .L_if_else_015c:
 14067                                  	; preparing a non-tail-call
 14068 00009C76 488B4528                	mov rax, PARAM(1)	; param b
 14069 00009C7A 50                      	push rax
 14070 00009C7B 6A01                    	push 1	; arg count
 14071 00009C7D 488B0425[AF130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14072 00009C85 803805                  	cmp byte [rax], T_undefined
 14073 00009C88 0F84E6B50000            	je L_error_fvar_undefined
 14074 00009C8E 803804                  	cmp byte [rax], T_closure
 14075 00009C91 0F8561B60000            	jne L_error_non_closure
 14076 00009C97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14077 00009C9A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14078 00009C9D 483D[02000000]          	cmp rax, sob_boolean_false
 14079 00009CA3 0F8485000000            	je .L_if_else_015b
 14080                                  	; Initiating tail-call optimization
 14081                                  	; preparing a non-tail-call
 14082 00009CA9 488B4528                	mov rax, PARAM(1)	; param b
 14083 00009CAD 50                      	push rax
 14084 00009CAE 6A01                    	push 1	; arg count
 14085 00009CB0 488B0425[9E130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14086 00009CB8 803805                  	cmp byte [rax], T_undefined
 14087 00009CBB 0F84B3B50000            	je L_error_fvar_undefined
 14088 00009CC1 803804                  	cmp byte [rax], T_closure
 14089 00009CC4 0F852EB60000            	jne L_error_non_closure
 14090 00009CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14091 00009CCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 14092 00009CD0 50                      	push rax
 14093 00009CD1 488B4520                	mov rax, PARAM(0)	; param a
 14094 00009CD5 50                      	push rax
 14095 00009CD6 6A02                    	push 2	; Number of arguments
 14096 00009CD8 488B4510                	mov rax, ENV
 14097 00009CDC 488B00                  	mov rax, qword [rax + 8 * 0]
 14098 00009CDF 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14099 00009CE3 803804                  	cmp byte [rax], T_closure
 14100 00009CE6 0F850CB60000            	jne L_error_non_closure
 14101 00009CEC FF7001                  	push SOB_CLOSURE_ENV(rax)
 14102 00009CEF FF7508                  	push qword [rbp + 8]
 14103 00009CF2 FF7500                  	push qword [rbp]
 14104 00009CF5 41BA06000000            	mov r10, 2 + 4
 14105 00009CFB 4C8B4518                	mov r8, COUNT
 14106 00009CFF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14107 00009D04 4C8D4DF8                	lea r9, [rbp - 8]
 14108                                  .L_tc_recycle_frame_loop_024c:
 14109 00009D08 4983FA00                	cmp r10, 0
 14110 00009D0C 7413                    	je .L_tc_recycle_frame_done_024c
 14111 00009D0E 4D8B19                  	mov r11, qword [r9]
 14112 00009D11 4D8918                  	mov qword [r8], r11
 14113 00009D14 49FFCA                  	dec r10
 14114 00009D17 4983E808                	sub r8, 8
 14115 00009D1B 4983E908                	sub r9, 8
 14116 00009D1F EBE7                    	jmp .L_tc_recycle_frame_loop_024c
 14117                                  .L_tc_recycle_frame_done_024c:
 14118 00009D21 498D6008                	lea rsp, [r8 + 8]
 14119 00009D25 5D                      	pop rbp
 14120 00009D26 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14121 00009D29 E9E1000000              	jmp .L_if_end_015b
 14122                                  .L_if_else_015b:
 14123                                  	; preparing a non-tail-call
 14124 00009D2E 488B4528                	mov rax, PARAM(1)	; param b
 14125 00009D32 50                      	push rax
 14126 00009D33 6A01                    	push 1	; arg count
 14127 00009D35 488B0425[8B150000]      	mov rax, qword [free_var_116]	; free var real?
 14128 00009D3D 803805                  	cmp byte [rax], T_undefined
 14129 00009D40 0F842EB50000            	je L_error_fvar_undefined
 14130 00009D46 803804                  	cmp byte [rax], T_closure
 14131 00009D49 0F85A9B50000            	jne L_error_non_closure
 14132 00009D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14133 00009D52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14134 00009D55 483D[02000000]          	cmp rax, sob_boolean_false
 14135 00009D5B 745F                    	je .L_if_else_015a
 14136                                  	; Initiating tail-call optimization
 14137 00009D5D 488B4528                	mov rax, PARAM(1)	; param b
 14138 00009D61 50                      	push rax
 14139 00009D62 488B4520                	mov rax, PARAM(0)	; param a
 14140 00009D66 50                      	push rax
 14141 00009D67 6A02                    	push 2	; Number of arguments
 14142 00009D69 488B4510                	mov rax, ENV
 14143 00009D6D 488B00                  	mov rax, qword [rax + 8 * 0]
 14144 00009D70 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14145 00009D74 803804                  	cmp byte [rax], T_closure
 14146 00009D77 0F857BB50000            	jne L_error_non_closure
 14147 00009D7D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14148 00009D80 FF7508                  	push qword [rbp + 8]
 14149 00009D83 FF7500                  	push qword [rbp]
 14150 00009D86 41BA06000000            	mov r10, 2 + 4
 14151 00009D8C 4C8B4518                	mov r8, COUNT
 14152 00009D90 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14153 00009D95 4C8D4DF8                	lea r9, [rbp - 8]
 14154                                  .L_tc_recycle_frame_loop_024d:
 14155 00009D99 4983FA00                	cmp r10, 0
 14156 00009D9D 7413                    	je .L_tc_recycle_frame_done_024d
 14157 00009D9F 4D8B19                  	mov r11, qword [r9]
 14158 00009DA2 4D8918                  	mov qword [r8], r11
 14159 00009DA5 49FFCA                  	dec r10
 14160 00009DA8 4983E808                	sub r8, 8
 14161 00009DAC 4983E908                	sub r9, 8
 14162 00009DB0 EBE7                    	jmp .L_tc_recycle_frame_loop_024d
 14163                                  .L_tc_recycle_frame_done_024d:
 14164 00009DB2 498D6008                	lea rsp, [r8 + 8]
 14165 00009DB6 5D                      	pop rbp
 14166 00009DB7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14167 00009DBA EB53                    	jmp .L_if_end_015a
 14168                                  .L_if_else_015a:
 14169                                  	; Initiating tail-call optimization
 14170 00009DBC 6A00                    	push 0	; Number of arguments
 14171 00009DBE 488B4510                	mov rax, ENV
 14172 00009DC2 488B4008                	mov rax, qword [rax + 8 * 1]
 14173 00009DC6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14174 00009DC9 803804                  	cmp byte [rax], T_closure
 14175 00009DCC 0F8526B50000            	jne L_error_non_closure
 14176 00009DD2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14177 00009DD5 FF7508                  	push qword [rbp + 8]
 14178 00009DD8 FF7500                  	push qword [rbp]
 14179 00009DDB 41BA04000000            	mov r10, 0 + 4
 14180 00009DE1 4C8B4518                	mov r8, COUNT
 14181 00009DE5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14182 00009DEA 4C8D4DF8                	lea r9, [rbp - 8]
 14183                                  .L_tc_recycle_frame_loop_024e:
 14184 00009DEE 4983FA00                	cmp r10, 0
 14185 00009DF2 7413                    	je .L_tc_recycle_frame_done_024e
 14186 00009DF4 4D8B19                  	mov r11, qword [r9]
 14187 00009DF7 4D8918                  	mov qword [r8], r11
 14188 00009DFA 49FFCA                  	dec r10
 14189 00009DFD 4983E808                	sub r8, 8
 14190 00009E01 4983E908                	sub r9, 8
 14191 00009E05 EBE7                    	jmp .L_tc_recycle_frame_loop_024e
 14192                                  .L_tc_recycle_frame_done_024e:
 14193 00009E07 498D6008                	lea rsp, [r8 + 8]
 14194 00009E0B 5D                      	pop rbp
 14195 00009E0C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14196                                  .L_if_end_015a:
 14197                                  .L_if_end_015b:
 14198                                  .L_if_end_015c:
 14199 00009E0F EB53                    	jmp .L_if_end_015d
 14200                                  .L_if_else_015d:
 14201                                  	; Initiating tail-call optimization
 14202 00009E11 6A00                    	push 0	; Number of arguments
 14203 00009E13 488B4510                	mov rax, ENV
 14204 00009E17 488B4008                	mov rax, qword [rax + 8 * 1]
 14205 00009E1B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14206 00009E1E 803804                  	cmp byte [rax], T_closure
 14207 00009E21 0F85D1B40000            	jne L_error_non_closure
 14208 00009E27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14209 00009E2A FF7508                  	push qword [rbp + 8]
 14210 00009E2D FF7500                  	push qword [rbp]
 14211 00009E30 41BA04000000            	mov r10, 0 + 4
 14212 00009E36 4C8B4518                	mov r8, COUNT
 14213 00009E3A 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14214 00009E3F 4C8D4DF8                	lea r9, [rbp - 8]
 14215                                  .L_tc_recycle_frame_loop_024f:
 14216 00009E43 4983FA00                	cmp r10, 0
 14217 00009E47 7413                    	je .L_tc_recycle_frame_done_024f
 14218 00009E49 4D8B19                  	mov r11, qword [r9]
 14219 00009E4C 4D8918                  	mov qword [r8], r11
 14220 00009E4F 49FFCA                  	dec r10
 14221 00009E52 4983E808                	sub r8, 8
 14222 00009E56 4983E908                	sub r9, 8
 14223 00009E5A EBE7                    	jmp .L_tc_recycle_frame_loop_024f
 14224                                  .L_tc_recycle_frame_done_024f:
 14225 00009E5C 498D6008                	lea rsp, [r8 + 8]
 14226 00009E60 5D                      	pop rbp
 14227 00009E61 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14228                                  .L_if_end_015d:
 14229                                  .L_if_end_015e:
 14230                                  .L_if_end_015f:
 14231 00009E64 C9                      	leave
 14232 00009E65 C22000                  	ret AND_KILL_FRAME(2)
 14233                                  .L_lambda_simple_end_01bf:	; new closure is in rax
 14234 00009E68 C9                      	leave
 14235 00009E69 C22800                  	ret AND_KILL_FRAME(3)
 14236                                  .L_lambda_simple_end_01be:	; new closure is in rax
 14237 00009E6C 50                      	push rax
 14238 00009E6D 6A01                    	push 1	; Number of arguments
 14239 00009E6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14240 00009E74 E828B50000              	call malloc
 14241 00009E79 50                      	push rax
 14242 00009E7A BF08000000              	mov rdi, 8 * 1	; new rib
 14243 00009E7F E81DB50000              	call malloc
 14244 00009E84 50                      	push rax
 14245 00009E85 BF10000000              	mov rdi, 8 * 2	; extended env
 14246 00009E8A E812B50000              	call malloc
 14247 00009E8F 488B7D10                	mov rdi, ENV
 14248 00009E93 BE00000000              	mov rsi, 0
 14249 00009E98 BA01000000              	mov rdx, 1
 14250                                  .L_lambda_simple_env_loop_01c0:	; ext_env[i + 1] <-- env[i]
 14251 00009E9D 4883FE01                	cmp rsi, 1
 14252 00009EA1 7410                    	je .L_lambda_simple_env_end_01c0
 14253 00009EA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14254 00009EA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14255 00009EAB 48FFC6                  	inc rsi
 14256 00009EAE 48FFC2                  	inc rdx
 14257 00009EB1 EBEA                    	jmp .L_lambda_simple_env_loop_01c0
 14258                                  .L_lambda_simple_env_end_01c0:
 14259 00009EB3 5B                      	pop rbx
 14260 00009EB4 BE00000000              	mov rsi, 0
 14261                                  .L_lambda_simple_params_loop_01c0:	; copy params
 14262 00009EB9 4883FE01                	cmp rsi, 1
 14263 00009EBD 740E                    	je .L_lambda_simple_params_end_01c0
 14264 00009EBF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14265 00009EC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14266 00009EC8 48FFC6                  	inc rsi
 14267 00009ECB EBEC                    	jmp .L_lambda_simple_params_loop_01c0
 14268                                  .L_lambda_simple_params_end_01c0:
 14269 00009ECD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14270 00009ED0 4889C3                  	mov rbx, rax
 14271 00009ED3 58                      	pop rax
 14272 00009ED4 C60004                  	mov byte [rax], T_closure
 14273 00009ED7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14274 00009EDB 48C74009[E89E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c0
 14275 00009EE3 E9550F0000              	jmp .L_lambda_simple_end_01c0
 14276                                  .L_lambda_simple_code_01c0:	; lambda-simple body
 14277 00009EE8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14278 00009EEE 740B                    	je .L_lambda_simple_arity_check_ok_01c0
 14279 00009EF0 FF742410                	push qword [rsp + 8 * 2]
 14280 00009EF4 6A01                    	push 1
 14281 00009EF6 E95FB40000              	jmp L_error_incorrect_arity_simple
 14282                                  .L_lambda_simple_arity_check_ok_01c0:
 14283 00009EFB C8000000                	enter 0, 0
 14284                                  	; Initiating tail-call optimization
 14285                                  	; preparing a non-tail-call
 14286 00009EFF 488B0425[2B0F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 14287 00009F07 803805                  	cmp byte [rax], T_undefined
 14288 00009F0A 0F8464B30000            	je L_error_fvar_undefined
 14289 00009F10 50                      	push rax
 14290 00009F11 488B0425[1A0F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 14291 00009F19 803805                  	cmp byte [rax], T_undefined
 14292 00009F1C 0F8452B30000            	je L_error_fvar_undefined
 14293 00009F22 50                      	push rax
 14294 00009F23 488B0425[3C0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 14295 00009F2B 803805                  	cmp byte [rax], T_undefined
 14296 00009F2E 0F8440B30000            	je L_error_fvar_undefined
 14297 00009F34 50                      	push rax
 14298 00009F35 6A03                    	push 3	; arg count
 14299 00009F37 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 14300 00009F3B 803804                  	cmp byte [rax], T_closure
 14301 00009F3E 0F85B4B30000            	jne L_error_non_closure
 14302 00009F44 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14303 00009F47 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14304 00009F4A 50                      	push rax
 14305 00009F4B 6A01                    	push 1	; Number of arguments
 14306 00009F4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14307 00009F52 E84AB40000              	call malloc
 14308 00009F57 50                      	push rax
 14309 00009F58 BF08000000              	mov rdi, 8 * 1	; new rib
 14310 00009F5D E83FB40000              	call malloc
 14311 00009F62 50                      	push rax
 14312 00009F63 BF18000000              	mov rdi, 8 * 3	; extended env
 14313 00009F68 E834B40000              	call malloc
 14314 00009F6D 488B7D10                	mov rdi, ENV
 14315 00009F71 BE00000000              	mov rsi, 0
 14316 00009F76 BA01000000              	mov rdx, 1
 14317                                  .L_lambda_simple_env_loop_01c1:	; ext_env[i + 1] <-- env[i]
 14318 00009F7B 4883FE02                	cmp rsi, 2
 14319 00009F7F 7410                    	je .L_lambda_simple_env_end_01c1
 14320 00009F81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14321 00009F85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14322 00009F89 48FFC6                  	inc rsi
 14323 00009F8C 48FFC2                  	inc rdx
 14324 00009F8F EBEA                    	jmp .L_lambda_simple_env_loop_01c1
 14325                                  .L_lambda_simple_env_end_01c1:
 14326 00009F91 5B                      	pop rbx
 14327 00009F92 BE00000000              	mov rsi, 0
 14328                                  .L_lambda_simple_params_loop_01c1:	; copy params
 14329 00009F97 4883FE01                	cmp rsi, 1
 14330 00009F9B 740E                    	je .L_lambda_simple_params_end_01c1
 14331 00009F9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14332 00009FA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14333 00009FA6 48FFC6                  	inc rsi
 14334 00009FA9 EBEC                    	jmp .L_lambda_simple_params_loop_01c1
 14335                                  .L_lambda_simple_params_end_01c1:
 14336 00009FAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14337 00009FAE 4889C3                  	mov rbx, rax
 14338 00009FB1 58                      	pop rax
 14339 00009FB2 C60004                  	mov byte [rax], T_closure
 14340 00009FB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14341 00009FB9 48C74009[C69F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c1
 14342 00009FC1 E92D0E0000              	jmp .L_lambda_simple_end_01c1
 14343                                  .L_lambda_simple_code_01c1:	; lambda-simple body
 14344 00009FC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14345 00009FCC 740B                    	je .L_lambda_simple_arity_check_ok_01c1
 14346 00009FCE FF742410                	push qword [rsp + 8 * 2]
 14347 00009FD2 6A01                    	push 1
 14348 00009FD4 E981B30000              	jmp L_error_incorrect_arity_simple
 14349                                  .L_lambda_simple_arity_check_ok_01c1:
 14350 00009FD9 C8000000                	enter 0, 0
 14351                                  	; Initiating tail-call optimization
 14352                                  	; preparing a non-tail-call
 14353 00009FDD 488B0425[F80E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 14354 00009FE5 803805                  	cmp byte [rax], T_undefined
 14355 00009FE8 0F8486B20000            	je L_error_fvar_undefined
 14356 00009FEE 50                      	push rax
 14357 00009FEF 488B0425[E70E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 14358 00009FF7 803805                  	cmp byte [rax], T_undefined
 14359 00009FFA 0F8474B20000            	je L_error_fvar_undefined
 14360 0000A000 50                      	push rax
 14361 0000A001 488B0425[090F0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 14362 0000A009 803805                  	cmp byte [rax], T_undefined
 14363 0000A00C 0F8462B20000            	je L_error_fvar_undefined
 14364 0000A012 50                      	push rax
 14365 0000A013 6A03                    	push 3	; arg count
 14366 0000A015 488B4510                	mov rax, ENV
 14367 0000A019 488B00                  	mov rax, qword [rax + 8 * 0]
 14368 0000A01C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 14369 0000A01F 803804                  	cmp byte [rax], T_closure
 14370 0000A022 0F85D0B20000            	jne L_error_non_closure
 14371 0000A028 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14372 0000A02B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14373 0000A02E 50                      	push rax
 14374 0000A02F 6A01                    	push 1	; Number of arguments
 14375 0000A031 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14376 0000A036 E866B30000              	call malloc
 14377 0000A03B 50                      	push rax
 14378 0000A03C BF08000000              	mov rdi, 8 * 1	; new rib
 14379 0000A041 E85BB30000              	call malloc
 14380 0000A046 50                      	push rax
 14381 0000A047 BF20000000              	mov rdi, 8 * 4	; extended env
 14382 0000A04C E850B30000              	call malloc
 14383 0000A051 488B7D10                	mov rdi, ENV
 14384 0000A055 BE00000000              	mov rsi, 0
 14385 0000A05A BA01000000              	mov rdx, 1
 14386                                  .L_lambda_simple_env_loop_01c2:	; ext_env[i + 1] <-- env[i]
 14387 0000A05F 4883FE03                	cmp rsi, 3
 14388 0000A063 7410                    	je .L_lambda_simple_env_end_01c2
 14389 0000A065 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14390 0000A069 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14391 0000A06D 48FFC6                  	inc rsi
 14392 0000A070 48FFC2                  	inc rdx
 14393 0000A073 EBEA                    	jmp .L_lambda_simple_env_loop_01c2
 14394                                  .L_lambda_simple_env_end_01c2:
 14395 0000A075 5B                      	pop rbx
 14396 0000A076 BE00000000              	mov rsi, 0
 14397                                  .L_lambda_simple_params_loop_01c2:	; copy params
 14398 0000A07B 4883FE01                	cmp rsi, 1
 14399 0000A07F 740E                    	je .L_lambda_simple_params_end_01c2
 14400 0000A081 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14401 0000A086 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14402 0000A08A 48FFC6                  	inc rsi
 14403 0000A08D EBEC                    	jmp .L_lambda_simple_params_loop_01c2
 14404                                  .L_lambda_simple_params_end_01c2:
 14405 0000A08F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14406 0000A092 4889C3                  	mov rbx, rax
 14407 0000A095 58                      	pop rax
 14408 0000A096 C60004                  	mov byte [rax], T_closure
 14409 0000A099 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14410 0000A09D 48C74009[AAA00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c2
 14411 0000A0A5 E9FF0C0000              	jmp .L_lambda_simple_end_01c2
 14412                                  .L_lambda_simple_code_01c2:	; lambda-simple body
 14413 0000A0AA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14414 0000A0B0 740B                    	je .L_lambda_simple_arity_check_ok_01c2
 14415 0000A0B2 FF742410                	push qword [rsp + 8 * 2]
 14416 0000A0B6 6A01                    	push 1
 14417 0000A0B8 E99DB20000              	jmp L_error_incorrect_arity_simple
 14418                                  .L_lambda_simple_arity_check_ok_01c2:
 14419 0000A0BD C8000000                	enter 0, 0
 14420                                  	; Initiating tail-call optimization
 14421 0000A0C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14422 0000A0C6 E8D6B20000              	call malloc
 14423 0000A0CB 50                      	push rax
 14424 0000A0CC BF08000000              	mov rdi, 8 * 1	; new rib
 14425 0000A0D1 E8CBB20000              	call malloc
 14426 0000A0D6 50                      	push rax
 14427 0000A0D7 BF28000000              	mov rdi, 8 * 5	; extended env
 14428 0000A0DC E8C0B20000              	call malloc
 14429 0000A0E1 488B7D10                	mov rdi, ENV
 14430 0000A0E5 BE00000000              	mov rsi, 0
 14431 0000A0EA BA01000000              	mov rdx, 1
 14432                                  .L_lambda_simple_env_loop_01c3:	; ext_env[i + 1] <-- env[i]
 14433 0000A0EF 4883FE04                	cmp rsi, 4
 14434 0000A0F3 7410                    	je .L_lambda_simple_env_end_01c3
 14435 0000A0F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14436 0000A0F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14437 0000A0FD 48FFC6                  	inc rsi
 14438 0000A100 48FFC2                  	inc rdx
 14439 0000A103 EBEA                    	jmp .L_lambda_simple_env_loop_01c3
 14440                                  .L_lambda_simple_env_end_01c3:
 14441 0000A105 5B                      	pop rbx
 14442 0000A106 BE00000000              	mov rsi, 0
 14443                                  .L_lambda_simple_params_loop_01c3:	; copy params
 14444 0000A10B 4883FE01                	cmp rsi, 1
 14445 0000A10F 740E                    	je .L_lambda_simple_params_end_01c3
 14446 0000A111 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14447 0000A116 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14448 0000A11A 48FFC6                  	inc rsi
 14449 0000A11D EBEC                    	jmp .L_lambda_simple_params_loop_01c3
 14450                                  .L_lambda_simple_params_end_01c3:
 14451 0000A11F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14452 0000A122 4889C3                  	mov rbx, rax
 14453 0000A125 58                      	pop rax
 14454 0000A126 C60004                  	mov byte [rax], T_closure
 14455 0000A129 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14456 0000A12D 48C74009[3AA10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c3
 14457 0000A135 E99B000000              	jmp .L_lambda_simple_end_01c3
 14458                                  .L_lambda_simple_code_01c3:	; lambda-simple body
 14459 0000A13A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14460 0000A140 740B                    	je .L_lambda_simple_arity_check_ok_01c3
 14461 0000A142 FF742410                	push qword [rsp + 8 * 2]
 14462 0000A146 6A02                    	push 2
 14463 0000A148 E90DB20000              	jmp L_error_incorrect_arity_simple
 14464                                  .L_lambda_simple_arity_check_ok_01c3:
 14465 0000A14D C8000000                	enter 0, 0
 14466                                  	; Initiating tail-call optimization
 14467                                  	; preparing a non-tail-call
 14468 0000A151 488B4528                	mov rax, PARAM(1)	; param b
 14469 0000A155 50                      	push rax
 14470 0000A156 488B4520                	mov rax, PARAM(0)	; param a
 14471 0000A15A 50                      	push rax
 14472 0000A15B 6A02                    	push 2	; arg count
 14473 0000A15D 488B4510                	mov rax, ENV
 14474 0000A161 488B4008                	mov rax, qword [rax + 8 * 1]
 14475 0000A165 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14476 0000A168 803804                  	cmp byte [rax], T_closure
 14477 0000A16B 0F8587B10000            	jne L_error_non_closure
 14478 0000A171 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14479 0000A174 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14480 0000A177 50                      	push rax
 14481 0000A178 6A01                    	push 1	; Number of arguments
 14482 0000A17A 488B0425[E1140000]      	mov rax, qword [free_var_106]	; free var not
 14483 0000A182 803805                  	cmp byte [rax], T_undefined
 14484 0000A185 0F84E9B00000            	je L_error_fvar_undefined
 14485 0000A18B 803804                  	cmp byte [rax], T_closure
 14486 0000A18E 0F8564B10000            	jne L_error_non_closure
 14487 0000A194 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14488 0000A197 FF7508                  	push qword [rbp + 8]
 14489 0000A19A FF7500                  	push qword [rbp]
 14490 0000A19D 41BA05000000            	mov r10, 1 + 4
 14491 0000A1A3 4C8B4518                	mov r8, COUNT
 14492 0000A1A7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14493 0000A1AC 4C8D4DF8                	lea r9, [rbp - 8]
 14494                                  .L_tc_recycle_frame_loop_0250:
 14495 0000A1B0 4983FA00                	cmp r10, 0
 14496 0000A1B4 7413                    	je .L_tc_recycle_frame_done_0250
 14497 0000A1B6 4D8B19                  	mov r11, qword [r9]
 14498 0000A1B9 4D8918                  	mov qword [r8], r11
 14499 0000A1BC 49FFCA                  	dec r10
 14500 0000A1BF 4983E808                	sub r8, 8
 14501 0000A1C3 4983E908                	sub r9, 8
 14502 0000A1C7 EBE7                    	jmp .L_tc_recycle_frame_loop_0250
 14503                                  .L_tc_recycle_frame_done_0250:
 14504 0000A1C9 498D6008                	lea rsp, [r8 + 8]
 14505 0000A1CD 5D                      	pop rbp
 14506 0000A1CE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14507 0000A1D1 C9                      	leave
 14508 0000A1D2 C22000                  	ret AND_KILL_FRAME(2)
 14509                                  .L_lambda_simple_end_01c3:	; new closure is in rax
 14510 0000A1D5 50                      	push rax
 14511 0000A1D6 6A01                    	push 1	; Number of arguments
 14512 0000A1D8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14513 0000A1DD E8BFB10000              	call malloc
 14514 0000A1E2 50                      	push rax
 14515 0000A1E3 BF08000000              	mov rdi, 8 * 1	; new rib
 14516 0000A1E8 E8B4B10000              	call malloc
 14517 0000A1ED 50                      	push rax
 14518 0000A1EE BF28000000              	mov rdi, 8 * 5	; extended env
 14519 0000A1F3 E8A9B10000              	call malloc
 14520 0000A1F8 488B7D10                	mov rdi, ENV
 14521 0000A1FC BE00000000              	mov rsi, 0
 14522 0000A201 BA01000000              	mov rdx, 1
 14523                                  .L_lambda_simple_env_loop_01c4:	; ext_env[i + 1] <-- env[i]
 14524 0000A206 4883FE04                	cmp rsi, 4
 14525 0000A20A 7410                    	je .L_lambda_simple_env_end_01c4
 14526 0000A20C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14527 0000A210 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14528 0000A214 48FFC6                  	inc rsi
 14529 0000A217 48FFC2                  	inc rdx
 14530 0000A21A EBEA                    	jmp .L_lambda_simple_env_loop_01c4
 14531                                  .L_lambda_simple_env_end_01c4:
 14532 0000A21C 5B                      	pop rbx
 14533 0000A21D BE00000000              	mov rsi, 0
 14534                                  .L_lambda_simple_params_loop_01c4:	; copy params
 14535 0000A222 4883FE01                	cmp rsi, 1
 14536 0000A226 740E                    	je .L_lambda_simple_params_end_01c4
 14537 0000A228 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14538 0000A22D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14539 0000A231 48FFC6                  	inc rsi
 14540 0000A234 EBEC                    	jmp .L_lambda_simple_params_loop_01c4
 14541                                  .L_lambda_simple_params_end_01c4:
 14542 0000A236 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14543 0000A239 4889C3                  	mov rbx, rax
 14544 0000A23C 58                      	pop rax
 14545 0000A23D C60004                  	mov byte [rax], T_closure
 14546 0000A240 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14547 0000A244 48C74009[51A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c4
 14548 0000A24C E90E0B0000              	jmp .L_lambda_simple_end_01c4
 14549                                  .L_lambda_simple_code_01c4:	; lambda-simple body
 14550 0000A251 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14551 0000A257 740B                    	je .L_lambda_simple_arity_check_ok_01c4
 14552 0000A259 FF742410                	push qword [rsp + 8 * 2]
 14553 0000A25D 6A01                    	push 1
 14554 0000A25F E9F6B00000              	jmp L_error_incorrect_arity_simple
 14555                                  .L_lambda_simple_arity_check_ok_01c4:
 14556 0000A264 C8000000                	enter 0, 0
 14557                                  	; Initiating tail-call optimization
 14558 0000A268 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14559 0000A26D E82FB10000              	call malloc
 14560 0000A272 50                      	push rax
 14561 0000A273 BF08000000              	mov rdi, 8 * 1	; new rib
 14562 0000A278 E824B10000              	call malloc
 14563 0000A27D 50                      	push rax
 14564 0000A27E BF30000000              	mov rdi, 8 * 6	; extended env
 14565 0000A283 E819B10000              	call malloc
 14566 0000A288 488B7D10                	mov rdi, ENV
 14567 0000A28C BE00000000              	mov rsi, 0
 14568 0000A291 BA01000000              	mov rdx, 1
 14569                                  .L_lambda_simple_env_loop_01c5:	; ext_env[i + 1] <-- env[i]
 14570 0000A296 4883FE05                	cmp rsi, 5
 14571 0000A29A 7410                    	je .L_lambda_simple_env_end_01c5
 14572 0000A29C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14573 0000A2A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14574 0000A2A4 48FFC6                  	inc rsi
 14575 0000A2A7 48FFC2                  	inc rdx
 14576 0000A2AA EBEA                    	jmp .L_lambda_simple_env_loop_01c5
 14577                                  .L_lambda_simple_env_end_01c5:
 14578 0000A2AC 5B                      	pop rbx
 14579 0000A2AD BE00000000              	mov rsi, 0
 14580                                  .L_lambda_simple_params_loop_01c5:	; copy params
 14581 0000A2B2 4883FE01                	cmp rsi, 1
 14582 0000A2B6 740E                    	je .L_lambda_simple_params_end_01c5
 14583 0000A2B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14584 0000A2BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14585 0000A2C1 48FFC6                  	inc rsi
 14586 0000A2C4 EBEC                    	jmp .L_lambda_simple_params_loop_01c5
 14587                                  .L_lambda_simple_params_end_01c5:
 14588 0000A2C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14589 0000A2C9 4889C3                  	mov rbx, rax
 14590 0000A2CC 58                      	pop rax
 14591 0000A2CD C60004                  	mov byte [rax], T_closure
 14592 0000A2D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14593 0000A2D4 48C74009[DEA20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c5
 14594 0000A2DC EB78                    	jmp .L_lambda_simple_end_01c5
 14595                                  .L_lambda_simple_code_01c5:	; lambda-simple body
 14596 0000A2DE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14597 0000A2E4 740B                    	je .L_lambda_simple_arity_check_ok_01c5
 14598 0000A2E6 FF742410                	push qword [rsp + 8 * 2]
 14599 0000A2EA 6A02                    	push 2
 14600 0000A2EC E969B00000              	jmp L_error_incorrect_arity_simple
 14601                                  .L_lambda_simple_arity_check_ok_01c5:
 14602 0000A2F1 C8000000                	enter 0, 0
 14603                                  	; Initiating tail-call optimization
 14604 0000A2F5 488B4520                	mov rax, PARAM(0)	; param a
 14605 0000A2F9 50                      	push rax
 14606 0000A2FA 488B4528                	mov rax, PARAM(1)	; param b
 14607 0000A2FE 50                      	push rax
 14608 0000A2FF 6A02                    	push 2	; Number of arguments
 14609 0000A301 488B4510                	mov rax, ENV
 14610 0000A305 488B4010                	mov rax, qword [rax + 8 * 2]
 14611 0000A309 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14612 0000A30C 803804                  	cmp byte [rax], T_closure
 14613 0000A30F 0F85E3AF0000            	jne L_error_non_closure
 14614 0000A315 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14615 0000A318 FF7508                  	push qword [rbp + 8]
 14616 0000A31B FF7500                  	push qword [rbp]
 14617 0000A31E 41BA06000000            	mov r10, 2 + 4
 14618 0000A324 4C8B4518                	mov r8, COUNT
 14619 0000A328 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14620 0000A32D 4C8D4DF8                	lea r9, [rbp - 8]
 14621                                  .L_tc_recycle_frame_loop_0251:
 14622 0000A331 4983FA00                	cmp r10, 0
 14623 0000A335 7413                    	je .L_tc_recycle_frame_done_0251
 14624 0000A337 4D8B19                  	mov r11, qword [r9]
 14625 0000A33A 4D8918                  	mov qword [r8], r11
 14626 0000A33D 49FFCA                  	dec r10
 14627 0000A340 4983E808                	sub r8, 8
 14628 0000A344 4983E908                	sub r9, 8
 14629 0000A348 EBE7                    	jmp .L_tc_recycle_frame_loop_0251
 14630                                  .L_tc_recycle_frame_done_0251:
 14631 0000A34A 498D6008                	lea rsp, [r8 + 8]
 14632 0000A34E 5D                      	pop rbp
 14633 0000A34F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14634 0000A352 C9                      	leave
 14635 0000A353 C22000                  	ret AND_KILL_FRAME(2)
 14636                                  .L_lambda_simple_end_01c5:	; new closure is in rax
 14637 0000A356 50                      	push rax
 14638 0000A357 6A01                    	push 1	; Number of arguments
 14639 0000A359 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14640 0000A35E E83EB00000              	call malloc
 14641 0000A363 50                      	push rax
 14642 0000A364 BF08000000              	mov rdi, 8 * 1	; new rib
 14643 0000A369 E833B00000              	call malloc
 14644 0000A36E 50                      	push rax
 14645 0000A36F BF30000000              	mov rdi, 8 * 6	; extended env
 14646 0000A374 E828B00000              	call malloc
 14647 0000A379 488B7D10                	mov rdi, ENV
 14648 0000A37D BE00000000              	mov rsi, 0
 14649 0000A382 BA01000000              	mov rdx, 1
 14650                                  .L_lambda_simple_env_loop_01c6:	; ext_env[i + 1] <-- env[i]
 14651 0000A387 4883FE05                	cmp rsi, 5
 14652 0000A38B 7410                    	je .L_lambda_simple_env_end_01c6
 14653 0000A38D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14654 0000A391 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14655 0000A395 48FFC6                  	inc rsi
 14656 0000A398 48FFC2                  	inc rdx
 14657 0000A39B EBEA                    	jmp .L_lambda_simple_env_loop_01c6
 14658                                  .L_lambda_simple_env_end_01c6:
 14659 0000A39D 5B                      	pop rbx
 14660 0000A39E BE00000000              	mov rsi, 0
 14661                                  .L_lambda_simple_params_loop_01c6:	; copy params
 14662 0000A3A3 4883FE01                	cmp rsi, 1
 14663 0000A3A7 740E                    	je .L_lambda_simple_params_end_01c6
 14664 0000A3A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14665 0000A3AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14666 0000A3B2 48FFC6                  	inc rsi
 14667 0000A3B5 EBEC                    	jmp .L_lambda_simple_params_loop_01c6
 14668                                  .L_lambda_simple_params_end_01c6:
 14669 0000A3B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14670 0000A3BA 4889C3                  	mov rbx, rax
 14671 0000A3BD 58                      	pop rax
 14672 0000A3BE C60004                  	mov byte [rax], T_closure
 14673 0000A3C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14674 0000A3C5 48C74009[D2A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c6
 14675 0000A3CD E943090000              	jmp .L_lambda_simple_end_01c6
 14676                                  .L_lambda_simple_code_01c6:	; lambda-simple body
 14677 0000A3D2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14678 0000A3D8 740B                    	je .L_lambda_simple_arity_check_ok_01c6
 14679 0000A3DA FF742410                	push qword [rsp + 8 * 2]
 14680 0000A3DE 6A01                    	push 1
 14681 0000A3E0 E975AF0000              	jmp L_error_incorrect_arity_simple
 14682                                  .L_lambda_simple_arity_check_ok_01c6:
 14683 0000A3E5 C8000000                	enter 0, 0
 14684                                  	; Initiating tail-call optimization
 14685 0000A3E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14686 0000A3EE E8AEAF0000              	call malloc
 14687 0000A3F3 50                      	push rax
 14688 0000A3F4 BF08000000              	mov rdi, 8 * 1	; new rib
 14689 0000A3F9 E8A3AF0000              	call malloc
 14690 0000A3FE 50                      	push rax
 14691 0000A3FF BF38000000              	mov rdi, 8 * 7	; extended env
 14692 0000A404 E898AF0000              	call malloc
 14693 0000A409 488B7D10                	mov rdi, ENV
 14694 0000A40D BE00000000              	mov rsi, 0
 14695 0000A412 BA01000000              	mov rdx, 1
 14696                                  .L_lambda_simple_env_loop_01c7:	; ext_env[i + 1] <-- env[i]
 14697 0000A417 4883FE06                	cmp rsi, 6
 14698 0000A41B 7410                    	je .L_lambda_simple_env_end_01c7
 14699 0000A41D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14700 0000A421 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14701 0000A425 48FFC6                  	inc rsi
 14702 0000A428 48FFC2                  	inc rdx
 14703 0000A42B EBEA                    	jmp .L_lambda_simple_env_loop_01c7
 14704                                  .L_lambda_simple_env_end_01c7:
 14705 0000A42D 5B                      	pop rbx
 14706 0000A42E BE00000000              	mov rsi, 0
 14707                                  .L_lambda_simple_params_loop_01c7:	; copy params
 14708 0000A433 4883FE01                	cmp rsi, 1
 14709 0000A437 740E                    	je .L_lambda_simple_params_end_01c7
 14710 0000A439 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14711 0000A43E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14712 0000A442 48FFC6                  	inc rsi
 14713 0000A445 EBEC                    	jmp .L_lambda_simple_params_loop_01c7
 14714                                  .L_lambda_simple_params_end_01c7:
 14715 0000A447 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14716 0000A44A 4889C3                  	mov rbx, rax
 14717 0000A44D 58                      	pop rax
 14718 0000A44E C60004                  	mov byte [rax], T_closure
 14719 0000A451 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14720 0000A455 48C74009[62A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c7
 14721 0000A45D E99A000000              	jmp .L_lambda_simple_end_01c7
 14722                                  .L_lambda_simple_code_01c7:	; lambda-simple body
 14723 0000A462 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14724 0000A468 740B                    	je .L_lambda_simple_arity_check_ok_01c7
 14725 0000A46A FF742410                	push qword [rsp + 8 * 2]
 14726 0000A46E 6A02                    	push 2
 14727 0000A470 E9E5AE0000              	jmp L_error_incorrect_arity_simple
 14728                                  .L_lambda_simple_arity_check_ok_01c7:
 14729 0000A475 C8000000                	enter 0, 0
 14730                                  	; Initiating tail-call optimization
 14731                                  	; preparing a non-tail-call
 14732 0000A479 488B4528                	mov rax, PARAM(1)	; param b
 14733 0000A47D 50                      	push rax
 14734 0000A47E 488B4520                	mov rax, PARAM(0)	; param a
 14735 0000A482 50                      	push rax
 14736 0000A483 6A02                    	push 2	; arg count
 14737 0000A485 488B4510                	mov rax, ENV
 14738 0000A489 488B00                  	mov rax, qword [rax + 8 * 0]
 14739 0000A48C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 14740 0000A48F 803804                  	cmp byte [rax], T_closure
 14741 0000A492 0F8560AE0000            	jne L_error_non_closure
 14742 0000A498 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14743 0000A49B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14744 0000A49E 50                      	push rax
 14745 0000A49F 6A01                    	push 1	; Number of arguments
 14746 0000A4A1 488B0425[E1140000]      	mov rax, qword [free_var_106]	; free var not
 14747 0000A4A9 803805                  	cmp byte [rax], T_undefined
 14748 0000A4AC 0F84C2AD0000            	je L_error_fvar_undefined
 14749 0000A4B2 803804                  	cmp byte [rax], T_closure
 14750 0000A4B5 0F853DAE0000            	jne L_error_non_closure
 14751 0000A4BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14752 0000A4BE FF7508                  	push qword [rbp + 8]
 14753 0000A4C1 FF7500                  	push qword [rbp]
 14754 0000A4C4 41BA05000000            	mov r10, 1 + 4
 14755 0000A4CA 4C8B4518                	mov r8, COUNT
 14756 0000A4CE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 14757 0000A4D3 4C8D4DF8                	lea r9, [rbp - 8]
 14758                                  .L_tc_recycle_frame_loop_0252:
 14759 0000A4D7 4983FA00                	cmp r10, 0
 14760 0000A4DB 7413                    	je .L_tc_recycle_frame_done_0252
 14761 0000A4DD 4D8B19                  	mov r11, qword [r9]
 14762 0000A4E0 4D8918                  	mov qword [r8], r11
 14763 0000A4E3 49FFCA                  	dec r10
 14764 0000A4E6 4983E808                	sub r8, 8
 14765 0000A4EA 4983E908                	sub r9, 8
 14766 0000A4EE EBE7                    	jmp .L_tc_recycle_frame_loop_0252
 14767                                  .L_tc_recycle_frame_done_0252:
 14768 0000A4F0 498D6008                	lea rsp, [r8 + 8]
 14769 0000A4F4 5D                      	pop rbp
 14770 0000A4F5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14771 0000A4F8 C9                      	leave
 14772 0000A4F9 C22000                  	ret AND_KILL_FRAME(2)
 14773                                  .L_lambda_simple_end_01c7:	; new closure is in rax
 14774 0000A4FC 50                      	push rax
 14775 0000A4FD 6A01                    	push 1	; Number of arguments
 14776 0000A4FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14777 0000A504 E898AE0000              	call malloc
 14778 0000A509 50                      	push rax
 14779 0000A50A BF08000000              	mov rdi, 8 * 1	; new rib
 14780 0000A50F E88DAE0000              	call malloc
 14781 0000A514 50                      	push rax
 14782 0000A515 BF38000000              	mov rdi, 8 * 7	; extended env
 14783 0000A51A E882AE0000              	call malloc
 14784 0000A51F 488B7D10                	mov rdi, ENV
 14785 0000A523 BE00000000              	mov rsi, 0
 14786 0000A528 BA01000000              	mov rdx, 1
 14787                                  .L_lambda_simple_env_loop_01c8:	; ext_env[i + 1] <-- env[i]
 14788 0000A52D 4883FE06                	cmp rsi, 6
 14789 0000A531 7410                    	je .L_lambda_simple_env_end_01c8
 14790 0000A533 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14791 0000A537 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14792 0000A53B 48FFC6                  	inc rsi
 14793 0000A53E 48FFC2                  	inc rdx
 14794 0000A541 EBEA                    	jmp .L_lambda_simple_env_loop_01c8
 14795                                  .L_lambda_simple_env_end_01c8:
 14796 0000A543 5B                      	pop rbx
 14797 0000A544 BE00000000              	mov rsi, 0
 14798                                  .L_lambda_simple_params_loop_01c8:	; copy params
 14799 0000A549 4883FE01                	cmp rsi, 1
 14800 0000A54D 740E                    	je .L_lambda_simple_params_end_01c8
 14801 0000A54F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14802 0000A554 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14803 0000A558 48FFC6                  	inc rsi
 14804 0000A55B EBEC                    	jmp .L_lambda_simple_params_loop_01c8
 14805                                  .L_lambda_simple_params_end_01c8:
 14806 0000A55D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14807 0000A560 4889C3                  	mov rbx, rax
 14808 0000A563 58                      	pop rax
 14809 0000A564 C60004                  	mov byte [rax], T_closure
 14810 0000A567 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14811 0000A56B 48C74009[78A50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c8
 14812 0000A573 E953070000              	jmp .L_lambda_simple_end_01c8
 14813                                  .L_lambda_simple_code_01c8:	; lambda-simple body
 14814 0000A578 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14815 0000A57E 740B                    	je .L_lambda_simple_arity_check_ok_01c8
 14816 0000A580 FF742410                	push qword [rsp + 8 * 2]
 14817 0000A584 6A01                    	push 1
 14818 0000A586 E9CFAD0000              	jmp L_error_incorrect_arity_simple
 14819                                  .L_lambda_simple_arity_check_ok_01c8:
 14820 0000A58B C8000000                	enter 0, 0
 14821                                  	; Initiating tail-call optimization
 14822 0000A58F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14823 0000A594 E808AE0000              	call malloc
 14824 0000A599 50                      	push rax
 14825 0000A59A BF08000000              	mov rdi, 8 * 1	; new rib
 14826 0000A59F E8FDAD0000              	call malloc
 14827 0000A5A4 50                      	push rax
 14828 0000A5A5 BF40000000              	mov rdi, 8 * 8	; extended env
 14829 0000A5AA E8F2AD0000              	call malloc
 14830 0000A5AF 488B7D10                	mov rdi, ENV
 14831 0000A5B3 BE00000000              	mov rsi, 0
 14832 0000A5B8 BA01000000              	mov rdx, 1
 14833                                  .L_lambda_simple_env_loop_01c9:	; ext_env[i + 1] <-- env[i]
 14834 0000A5BD 4883FE07                	cmp rsi, 7
 14835 0000A5C1 7410                    	je .L_lambda_simple_env_end_01c9
 14836 0000A5C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14837 0000A5C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14838 0000A5CB 48FFC6                  	inc rsi
 14839 0000A5CE 48FFC2                  	inc rdx
 14840 0000A5D1 EBEA                    	jmp .L_lambda_simple_env_loop_01c9
 14841                                  .L_lambda_simple_env_end_01c9:
 14842 0000A5D3 5B                      	pop rbx
 14843 0000A5D4 BE00000000              	mov rsi, 0
 14844                                  .L_lambda_simple_params_loop_01c9:	; copy params
 14845 0000A5D9 4883FE01                	cmp rsi, 1
 14846 0000A5DD 740E                    	je .L_lambda_simple_params_end_01c9
 14847 0000A5DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14848 0000A5E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14849 0000A5E8 48FFC6                  	inc rsi
 14850 0000A5EB EBEC                    	jmp .L_lambda_simple_params_loop_01c9
 14851                                  .L_lambda_simple_params_end_01c9:
 14852 0000A5ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14853 0000A5F0 4889C3                  	mov rbx, rax
 14854 0000A5F3 58                      	pop rax
 14855 0000A5F4 C60004                  	mov byte [rax], T_closure
 14856 0000A5F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14857 0000A5FB 48C74009[08A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01c9
 14858 0000A603 E9E4040000              	jmp .L_lambda_simple_end_01c9
 14859                                  .L_lambda_simple_code_01c9:	; lambda-simple body
 14860 0000A608 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14861 0000A60E 740B                    	je .L_lambda_simple_arity_check_ok_01c9
 14862 0000A610 FF742410                	push qword [rsp + 8 * 2]
 14863 0000A614 6A01                    	push 1
 14864 0000A616 E93FAD0000              	jmp L_error_incorrect_arity_simple
 14865                                  .L_lambda_simple_arity_check_ok_01c9:
 14866 0000A61B C8000000                	enter 0, 0
 14867                                  	; Initiating tail-call optimization
 14868 0000A61F 48B8-                   	mov rax, L_constants + 2007
 14868 0000A621 [D707000000000000] 
 14869 0000A629 50                      	push rax
 14870 0000A62A 6A01                    	push 1	; Number of arguments
 14871 0000A62C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14872 0000A631 E86BAD0000              	call malloc
 14873 0000A636 50                      	push rax
 14874 0000A637 BF08000000              	mov rdi, 8 * 1	; new rib
 14875 0000A63C E860AD0000              	call malloc
 14876 0000A641 50                      	push rax
 14877 0000A642 BF48000000              	mov rdi, 8 * 9	; extended env
 14878 0000A647 E855AD0000              	call malloc
 14879 0000A64C 488B7D10                	mov rdi, ENV
 14880 0000A650 BE00000000              	mov rsi, 0
 14881 0000A655 BA01000000              	mov rdx, 1
 14882                                  .L_lambda_simple_env_loop_01ca:	; ext_env[i + 1] <-- env[i]
 14883 0000A65A 4883FE08                	cmp rsi, 8
 14884 0000A65E 7410                    	je .L_lambda_simple_env_end_01ca
 14885 0000A660 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14886 0000A664 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14887 0000A668 48FFC6                  	inc rsi
 14888 0000A66B 48FFC2                  	inc rdx
 14889 0000A66E EBEA                    	jmp .L_lambda_simple_env_loop_01ca
 14890                                  .L_lambda_simple_env_end_01ca:
 14891 0000A670 5B                      	pop rbx
 14892 0000A671 BE00000000              	mov rsi, 0
 14893                                  .L_lambda_simple_params_loop_01ca:	; copy params
 14894 0000A676 4883FE01                	cmp rsi, 1
 14895 0000A67A 740E                    	je .L_lambda_simple_params_end_01ca
 14896 0000A67C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14897 0000A681 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14898 0000A685 48FFC6                  	inc rsi
 14899 0000A688 EBEC                    	jmp .L_lambda_simple_params_loop_01ca
 14900                                  .L_lambda_simple_params_end_01ca:
 14901 0000A68A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14902 0000A68D 4889C3                  	mov rbx, rax
 14903 0000A690 58                      	pop rax
 14904 0000A691 C60004                  	mov byte [rax], T_closure
 14905 0000A694 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14906 0000A698 48C74009[A5A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ca
 14907 0000A6A0 E9FD030000              	jmp .L_lambda_simple_end_01ca
 14908                                  .L_lambda_simple_code_01ca:	; lambda-simple body
 14909 0000A6A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14910 0000A6AB 740B                    	je .L_lambda_simple_arity_check_ok_01ca
 14911 0000A6AD FF742410                	push qword [rsp + 8 * 2]
 14912 0000A6B1 6A01                    	push 1
 14913 0000A6B3 E9A2AC0000              	jmp L_error_incorrect_arity_simple
 14914                                  .L_lambda_simple_arity_check_ok_01ca:
 14915 0000A6B8 C8000000                	enter 0, 0
 14916 0000A6BC BF08000000              	mov rdi, 8 * 1
 14917 0000A6C1 E8DBAC0000              	call malloc
 14918 0000A6C6 488B5D20                	mov rbx, PARAM(0)
 14919 0000A6CA 488918                  	mov qword [rax], rbx
 14920 0000A6CD 48894520                	mov PARAM(0), rax
 14921 0000A6D1 48B8-                   	mov rax, sob_void
 14921 0000A6D3 [0000000000000000] 
 14922                                  
 14923 0000A6DB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14924 0000A6E0 E8BCAC0000              	call malloc
 14925 0000A6E5 50                      	push rax
 14926 0000A6E6 BF08000000              	mov rdi, 8 * 1	; new rib
 14927 0000A6EB E8B1AC0000              	call malloc
 14928 0000A6F0 50                      	push rax
 14929 0000A6F1 BF50000000              	mov rdi, 8 * 10	; extended env
 14930 0000A6F6 E8A6AC0000              	call malloc
 14931 0000A6FB 488B7D10                	mov rdi, ENV
 14932 0000A6FF BE00000000              	mov rsi, 0
 14933 0000A704 BA01000000              	mov rdx, 1
 14934                                  .L_lambda_simple_env_loop_01cb:	; ext_env[i + 1] <-- env[i]
 14935 0000A709 4883FE09                	cmp rsi, 9
 14936 0000A70D 7410                    	je .L_lambda_simple_env_end_01cb
 14937 0000A70F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14938 0000A713 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14939 0000A717 48FFC6                  	inc rsi
 14940 0000A71A 48FFC2                  	inc rdx
 14941 0000A71D EBEA                    	jmp .L_lambda_simple_env_loop_01cb
 14942                                  .L_lambda_simple_env_end_01cb:
 14943 0000A71F 5B                      	pop rbx
 14944 0000A720 BE00000000              	mov rsi, 0
 14945                                  .L_lambda_simple_params_loop_01cb:	; copy params
 14946 0000A725 4883FE01                	cmp rsi, 1
 14947 0000A729 740E                    	je .L_lambda_simple_params_end_01cb
 14948 0000A72B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14949 0000A730 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14950 0000A734 48FFC6                  	inc rsi
 14951 0000A737 EBEC                    	jmp .L_lambda_simple_params_loop_01cb
 14952                                  .L_lambda_simple_params_end_01cb:
 14953 0000A739 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14954 0000A73C 4889C3                  	mov rbx, rax
 14955 0000A73F 58                      	pop rax
 14956 0000A740 C60004                  	mov byte [rax], T_closure
 14957 0000A743 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14958 0000A747 48C74009[54A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01cb
 14959 0000A74F E954010000              	jmp .L_lambda_simple_end_01cb
 14960                                  .L_lambda_simple_code_01cb:	; lambda-simple body
 14961 0000A754 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14962 0000A75A 740B                    	je .L_lambda_simple_arity_check_ok_01cb
 14963 0000A75C FF742410                	push qword [rsp + 8 * 2]
 14964 0000A760 6A02                    	push 2
 14965 0000A762 E9F3AB0000              	jmp L_error_incorrect_arity_simple
 14966                                  .L_lambda_simple_arity_check_ok_01cb:
 14967 0000A767 C8000000                	enter 0, 0
 14968                                  	; preparing a non-tail-call
 14969 0000A76B 488B4528                	mov rax, PARAM(1)	; param s
 14970 0000A76F 50                      	push rax
 14971 0000A770 6A01                    	push 1	; arg count
 14972 0000A772 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 14973 0000A77A 803805                  	cmp byte [rax], T_undefined
 14974 0000A77D 0F84F1AA0000            	je L_error_fvar_undefined
 14975 0000A783 803804                  	cmp byte [rax], T_closure
 14976 0000A786 0F856CAB0000            	jne L_error_non_closure
 14977 0000A78C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14978 0000A78F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14979 0000A792 483D[02000000]          	cmp rax, sob_boolean_false
 14980 0000A798 0F8506010000            	jne .L_or_end_0022
 14981                                  
 14982                                  	; preparing a non-tail-call
 14983                                  	; preparing a non-tail-call
 14984 0000A79E 488B4528                	mov rax, PARAM(1)	; param s
 14985 0000A7A2 50                      	push rax
 14986 0000A7A3 6A01                    	push 1	; arg count
 14987 0000A7A5 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 14988 0000A7AD 803805                  	cmp byte [rax], T_undefined
 14989 0000A7B0 0F84BEAA0000            	je L_error_fvar_undefined
 14990 0000A7B6 803804                  	cmp byte [rax], T_closure
 14991 0000A7B9 0F8539AB0000            	jne L_error_non_closure
 14992 0000A7BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14993 0000A7C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14994 0000A7C5 50                      	push rax
 14995 0000A7C6 488B4520                	mov rax, PARAM(0)	; param a
 14996 0000A7CA 50                      	push rax
 14997 0000A7CB 6A02                    	push 2	; arg count
 14998 0000A7CD 488B4510                	mov rax, ENV
 14999 0000A7D1 488B4008                	mov rax, qword [rax + 8 * 1]
 15000 0000A7D5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15001 0000A7D8 803804                  	cmp byte [rax], T_closure
 15002 0000A7DB 0F8517AB0000            	jne L_error_non_closure
 15003 0000A7E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15004 0000A7E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15005 0000A7E7 483D[02000000]          	cmp rax, sob_boolean_false
 15006 0000A7ED 0F84A7000000            	je .L_if_else_0160
 15007                                  	; Initiating tail-call optimization
 15008                                  	; preparing a non-tail-call
 15009 0000A7F3 488B4528                	mov rax, PARAM(1)	; param s
 15010 0000A7F7 50                      	push rax
 15011 0000A7F8 6A01                    	push 1	; arg count
 15012 0000A7FA 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 15013 0000A802 803805                  	cmp byte [rax], T_undefined
 15014 0000A805 0F8469AA0000            	je L_error_fvar_undefined
 15015 0000A80B 803804                  	cmp byte [rax], T_closure
 15016 0000A80E 0F85E4AA0000            	jne L_error_non_closure
 15017 0000A814 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15018 0000A817 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15019 0000A81A 50                      	push rax
 15020                                  	; preparing a non-tail-call
 15021 0000A81B 488B4528                	mov rax, PARAM(1)	; param s
 15022 0000A81F 50                      	push rax
 15023 0000A820 6A01                    	push 1	; arg count
 15024 0000A822 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 15025 0000A82A 803805                  	cmp byte [rax], T_undefined
 15026 0000A82D 0F8441AA0000            	je L_error_fvar_undefined
 15027 0000A833 803804                  	cmp byte [rax], T_closure
 15028 0000A836 0F85BCAA0000            	jne L_error_non_closure
 15029 0000A83C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15030 0000A83F FF5009                  	call SOB_CLOSURE_CODE(rax)
 15031 0000A842 50                      	push rax
 15032 0000A843 6A02                    	push 2	; Number of arguments
 15033 0000A845 488B4510                	mov rax, ENV
 15034 0000A849 488B00                  	mov rax, qword [rax + 8 * 0]
 15035 0000A84C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15036 0000A84F 488B00                  	mov rax, qword [rax]
 15037 0000A852 803804                  	cmp byte [rax], T_closure
 15038 0000A855 0F859DAA0000            	jne L_error_non_closure
 15039 0000A85B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15040 0000A85E FF7508                  	push qword [rbp + 8]
 15041 0000A861 FF7500                  	push qword [rbp]
 15042 0000A864 41BA06000000            	mov r10, 2 + 4
 15043 0000A86A 4C8B4518                	mov r8, COUNT
 15044 0000A86E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15045 0000A873 4C8D4DF8                	lea r9, [rbp - 8]
 15046                                  .L_tc_recycle_frame_loop_0253:
 15047 0000A877 4983FA00                	cmp r10, 0
 15048 0000A87B 7413                    	je .L_tc_recycle_frame_done_0253
 15049 0000A87D 4D8B19                  	mov r11, qword [r9]
 15050 0000A880 4D8918                  	mov qword [r8], r11
 15051 0000A883 49FFCA                  	dec r10
 15052 0000A886 4983E808                	sub r8, 8
 15053 0000A88A 4983E908                	sub r9, 8
 15054 0000A88E EBE7                    	jmp .L_tc_recycle_frame_loop_0253
 15055                                  .L_tc_recycle_frame_done_0253:
 15056 0000A890 498D6008                	lea rsp, [r8 + 8]
 15057 0000A894 5D                      	pop rbp
 15058 0000A895 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15059 0000A898 EB0A                    	jmp .L_if_end_0160
 15060                                  .L_if_else_0160:
 15061 0000A89A 48B8-                   	mov rax, L_constants + 2
 15061 0000A89C [0200000000000000] 
 15062                                  .L_if_end_0160:
 15063                                  .L_or_end_0022:
 15064 0000A8A4 C9                      	leave
 15065 0000A8A5 C22000                  	ret AND_KILL_FRAME(2)
 15066                                  .L_lambda_simple_end_01cb:	; new closure is in rax
 15067 0000A8A8 50                      	push rax
 15068 0000A8A9 488B4520                	mov rax, PARAM(0)	; param run
 15069 0000A8AD 8F00                    	pop qword [rax]
 15070 0000A8AF 48B8-                   	mov rax, sob_void
 15070 0000A8B1 [0000000000000000] 
 15071                                  
 15072 0000A8B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15073 0000A8BE E8DEAA0000              	call malloc
 15074 0000A8C3 50                      	push rax
 15075 0000A8C4 BF08000000              	mov rdi, 8 * 1	; new rib
 15076 0000A8C9 E8D3AA0000              	call malloc
 15077 0000A8CE 50                      	push rax
 15078 0000A8CF BF50000000              	mov rdi, 8 * 10	; extended env
 15079 0000A8D4 E8C8AA0000              	call malloc
 15080 0000A8D9 488B7D10                	mov rdi, ENV
 15081 0000A8DD BE00000000              	mov rsi, 0
 15082 0000A8E2 BA01000000              	mov rdx, 1
 15083                                  .L_lambda_opt_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 15084 0000A8E7 4883FE09                	cmp rsi, 9
 15085 0000A8EB 7410                    	je .L_lambda_opt_env_end_0040
 15086 0000A8ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15087 0000A8F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15088 0000A8F5 48FFC6                  	inc rsi
 15089 0000A8F8 48FFC2                  	inc rdx
 15090 0000A8FB EBEA                    	jmp .L_lambda_opt_env_loop_0040
 15091                                  .L_lambda_opt_env_end_0040:
 15092 0000A8FD 5B                      	pop rbx
 15093 0000A8FE BE00000000              	mov rsi, 0
 15094                                  .L_lambda_opt_params_loop_0040:	; copy params
 15095 0000A903 4883FE01                	cmp rsi, 1
 15096 0000A907 740E                    	je .L_lambda_opt_params_end_0040
 15097 0000A909 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15098 0000A90E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15099 0000A912 48FFC6                  	inc rsi
 15100 0000A915 EBEC                    	jmp .L_lambda_opt_params_loop_0040
 15101                                  .L_lambda_opt_params_end_0040:
 15102 0000A917 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15103 0000A91A 4889C3                  	mov rbx, rax
 15104 0000A91D 58                      	pop rax
 15105 0000A91E C60004                  	mov byte [rax], T_closure
 15106 0000A921 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15107 0000A925 48C74009[32A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0040
 15108 0000A92D E96C010000              	jmp .L_lambda_opt_end_0040
 15109                                  .L_lambda_opt_code_0040:
 15110 0000A932 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 15111 0000A937 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 15112 0000A93B 7407                    	je .L_lambda_opt_arity_check_exact_0040	; Jump if arity matches
 15113 0000A93D 7F4C                    	jg .L_lambda_opt_arity_check_more_0040	; Jump if more arguments passed
 15114 0000A93F E92AAA0000              	jmp L_error_incorrect_arity_opt
 15115                                  .L_lambda_opt_arity_check_exact_0040:
 15116 0000A944 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 15117 0000A947 4983C603                	add r14, 3 ; add 3 first stack values
 15118 0000A94B 41BF00000000            	mov r15, 0 ; r15 = index
 15119 0000A951 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 15120 0000A955 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 15121 0000A95D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0040
 15122                                  .L_lambda_opt_stack_shrink_loop_0040:
 15123 0000A95F 4983FE00                	cmp r14, 0
 15124 0000A963 7E11                    	jle .L_make_lambda_opt_exact_finish_0040
 15125 0000A965 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 15126 0000A96A 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 15127 0000A96E 49FFCE                  	dec r14 ; next loop value
 15128 0000A971 49FFC7                  	inc r15 ; update i
 15129 0000A974 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0040
 15130                                  .L_make_lambda_opt_exact_finish_0040:
 15131 0000A976 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 15132 0000A97E 49FFC2                  	inc r10
 15133 0000A981 4C89542410              	mov qword [rsp + 8 * 2], r10
 15134 0000A986 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0040
 15135                                  .L_lambda_opt_arity_check_more_0040:
 15136 0000A98B 4D89D6                  	mov r14, r10 ; r14 = num args
 15137 0000A98E 4D89D7                  	mov r15, r10 ; r15 = num args
 15138 0000A991 41B901000000            	mov r9, 1; r9 = number of params 
 15139 0000A997 4D29CE                  	sub r14, r9 ; r14 = extra args
 15140 0000A99A 4D01F1                  	add r9, r14 ; r9 = num args
 15141 0000A99D 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 15141 0000A99F [0100000000000000] 
 15142 0000A9A7 EB00                    	jmp .L_make_lambda_opt_arg_list_0040
 15143                                  .L_make_lambda_opt_arg_list_0040:
 15144 0000A9A9 4983FE00                	cmp r14, 0
 15145 0000A9AD 7E25                    	jle .L_make_lambda_opt_stack_fixed_0040
 15146 0000A9AF 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 15147 0000A9B4 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 15148 0000A9B9 E8E3A90000              	call malloc                         ; Allocate memory, result in rax
 15149 0000A9BE C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 15150 0000A9C1 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 15151 0000A9C5 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 15152 0000A9C9 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 15153 0000A9CC 49FFC9                  	dec r9                              ; args index minus 1
 15154 0000A9CF 49FFCE                  	dec r14                             ; next iteration
 15155 0000A9D2 EBD5                    	jmp .L_make_lambda_opt_arg_list_0040
 15156                                  .L_make_lambda_opt_stack_fixed_0040:
 15157 0000A9D4 4D89FE                  	mov r14, r15 ; r14 = num args
 15158 0000A9D7 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 15159 0000A9DA 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 15160 0000A9DE 4D89C1                  	mov r9, r8
 15161 0000A9E1 41BA01000000            	mov r10, 1; r10 = num of params
 15162 0000A9E7 4D29D6                  	sub r14, r10 ; r14 = extra args
 15163 0000A9EA 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 15164 0000A9ED 49FFCE                  	dec r14 ; how much we need to change stack wise?
 15165 0000A9F0 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 15166 0000A9F5 4D89CC                  	mov r12, r9
 15167 0000A9F8 4D29F4                  	sub r12, r14
 15168 0000A9FB 49FFCC                  	dec r12
 15169 0000A9FE 49FFCC                  	dec r12
 15170 0000AA01 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0040
 15171                                  .L_lambda_opt_stack_shrink_loop_more_0040:
 15172 0000AA03 4983F800                	cmp r8, 0
 15173 0000AA07 7E16                    	jle .L_make_lambda_opt_more_finish_0040
 15174 0000AA09 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 15175 0000AA0D 4D01F4                  	add r12, r14
 15176 0000AA10 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 15177 0000AA14 49FFC8                  	dec r8 ; next iteration
 15178 0000AA17 4D29F4                  	sub r12, r14 ; next iteration
 15179 0000AA1A 49FFCC                  	dec r12 ; next iteration
 15180 0000AA1D EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0040
 15181                                  .L_make_lambda_opt_more_finish_0040:
 15182 0000AA1F 41BA01000000            	mov r10, 1
 15183 0000AA25 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 15184 0000AA2E 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 15185 0000AA32 4C01F4                  	add rsp, r14  ; Add to rsp
 15186 0000AA35 EB00                    	jmp .L_lambda_opt_stack_adjusted_0040
 15187                                  .L_lambda_opt_stack_adjusted_0040:
 15188 0000AA37 C8000000                	enter 0, 0
 15189                                  	; Initiating tail-call optimization
 15190 0000AA3B 488B4528                	mov rax, PARAM(1)	; param s
 15191 0000AA3F 50                      	push rax
 15192 0000AA40 488B4520                	mov rax, PARAM(0)	; param a
 15193 0000AA44 50                      	push rax
 15194 0000AA45 6A02                    	push 2	; Number of arguments
 15195 0000AA47 488B4510                	mov rax, ENV
 15196 0000AA4B 488B00                  	mov rax, qword [rax + 8 * 0]
 15197 0000AA4E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15198 0000AA51 488B00                  	mov rax, qword [rax]
 15199 0000AA54 803804                  	cmp byte [rax], T_closure
 15200 0000AA57 0F859BA80000            	jne L_error_non_closure
 15201 0000AA5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15202 0000AA60 FF7508                  	push qword [rbp + 8]
 15203 0000AA63 FF7500                  	push qword [rbp]
 15204 0000AA66 41BA06000000            	mov r10, 2 + 4
 15205 0000AA6C 4C8B4518                	mov r8, COUNT
 15206 0000AA70 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15207 0000AA75 4C8D4DF8                	lea r9, [rbp - 8]
 15208                                  .L_tc_recycle_frame_loop_0254:
 15209 0000AA79 4983FA00                	cmp r10, 0
 15210 0000AA7D 7413                    	je .L_tc_recycle_frame_done_0254
 15211 0000AA7F 4D8B19                  	mov r11, qword [r9]
 15212 0000AA82 4D8918                  	mov qword [r8], r11
 15213 0000AA85 49FFCA                  	dec r10
 15214 0000AA88 4983E808                	sub r8, 8
 15215 0000AA8C 4983E908                	sub r9, 8
 15216 0000AA90 EBE7                    	jmp .L_tc_recycle_frame_loop_0254
 15217                                  .L_tc_recycle_frame_done_0254:
 15218 0000AA92 498D6008                	lea rsp, [r8 + 8]
 15219 0000AA96 5D                      	pop rbp
 15220 0000AA97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15221 0000AA9A C9                      	leave
 15222 0000AA9B C22000                  	ret AND_KILL_FRAME(2)
 15223                                  .L_lambda_opt_end_0040:	; new closure is in rax
 15224 0000AA9E C9                      	leave
 15225 0000AA9F C21800                  	ret AND_KILL_FRAME(1)
 15226                                  .L_lambda_simple_end_01ca:	; new closure is in rax
 15227 0000AAA2 803804                  	cmp byte [rax], T_closure
 15228 0000AAA5 0F854DA80000            	jne L_error_non_closure
 15229 0000AAAB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15230 0000AAAE FF7508                  	push qword [rbp + 8]
 15231 0000AAB1 FF7500                  	push qword [rbp]
 15232 0000AAB4 41BA05000000            	mov r10, 1 + 4
 15233 0000AABA 4C8B4518                	mov r8, COUNT
 15234 0000AABE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15235 0000AAC3 4C8D4DF8                	lea r9, [rbp - 8]
 15236                                  .L_tc_recycle_frame_loop_0255:
 15237 0000AAC7 4983FA00                	cmp r10, 0
 15238 0000AACB 7413                    	je .L_tc_recycle_frame_done_0255
 15239 0000AACD 4D8B19                  	mov r11, qword [r9]
 15240 0000AAD0 4D8918                  	mov qword [r8], r11
 15241 0000AAD3 49FFCA                  	dec r10
 15242 0000AAD6 4983E808                	sub r8, 8
 15243 0000AADA 4983E908                	sub r9, 8
 15244 0000AADE EBE7                    	jmp .L_tc_recycle_frame_loop_0255
 15245                                  .L_tc_recycle_frame_done_0255:
 15246 0000AAE0 498D6008                	lea rsp, [r8 + 8]
 15247 0000AAE4 5D                      	pop rbp
 15248 0000AAE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15249 0000AAE8 C9                      	leave
 15250 0000AAE9 C21800                  	ret AND_KILL_FRAME(1)
 15251                                  .L_lambda_simple_end_01c9:	; new closure is in rax
 15252 0000AAEC 50                      	push rax
 15253 0000AAED 6A01                    	push 1	; Number of arguments
 15254 0000AAEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15255 0000AAF4 E8A8A80000              	call malloc
 15256 0000AAF9 50                      	push rax
 15257 0000AAFA BF08000000              	mov rdi, 8 * 1	; new rib
 15258 0000AAFF E89DA80000              	call malloc
 15259 0000AB04 50                      	push rax
 15260 0000AB05 BF40000000              	mov rdi, 8 * 8	; extended env
 15261 0000AB0A E892A80000              	call malloc
 15262 0000AB0F 488B7D10                	mov rdi, ENV
 15263 0000AB13 BE00000000              	mov rsi, 0
 15264 0000AB18 BA01000000              	mov rdx, 1
 15265                                  .L_lambda_simple_env_loop_01cc:	; ext_env[i + 1] <-- env[i]
 15266 0000AB1D 4883FE07                	cmp rsi, 7
 15267 0000AB21 7410                    	je .L_lambda_simple_env_end_01cc
 15268 0000AB23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15269 0000AB27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15270 0000AB2B 48FFC6                  	inc rsi
 15271 0000AB2E 48FFC2                  	inc rdx
 15272 0000AB31 EBEA                    	jmp .L_lambda_simple_env_loop_01cc
 15273                                  .L_lambda_simple_env_end_01cc:
 15274 0000AB33 5B                      	pop rbx
 15275 0000AB34 BE00000000              	mov rsi, 0
 15276                                  .L_lambda_simple_params_loop_01cc:	; copy params
 15277 0000AB39 4883FE01                	cmp rsi, 1
 15278 0000AB3D 740E                    	je .L_lambda_simple_params_end_01cc
 15279 0000AB3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15280 0000AB44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15281 0000AB48 48FFC6                  	inc rsi
 15282 0000AB4B EBEC                    	jmp .L_lambda_simple_params_loop_01cc
 15283                                  .L_lambda_simple_params_end_01cc:
 15284 0000AB4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15285 0000AB50 4889C3                  	mov rbx, rax
 15286 0000AB53 58                      	pop rax
 15287 0000AB54 C60004                  	mov byte [rax], T_closure
 15288 0000AB57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15289 0000AB5B 48C74009[68AB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01cc
 15290 0000AB63 E919010000              	jmp .L_lambda_simple_end_01cc
 15291                                  .L_lambda_simple_code_01cc:	; lambda-simple body
 15292 0000AB68 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15293 0000AB6E 740B                    	je .L_lambda_simple_arity_check_ok_01cc
 15294 0000AB70 FF742410                	push qword [rsp + 8 * 2]
 15295 0000AB74 6A01                    	push 1
 15296 0000AB76 E9DFA70000              	jmp L_error_incorrect_arity_simple
 15297                                  .L_lambda_simple_arity_check_ok_01cc:
 15298 0000AB7B C8000000                	enter 0, 0
 15299                                  	; preparing a non-tail-call
 15300 0000AB7F 488B4510                	mov rax, ENV
 15301 0000AB83 488B4020                	mov rax, qword [rax + 8 * 4]
 15302 0000AB87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15303 0000AB8A 50                      	push rax
 15304 0000AB8B 6A01                    	push 1	; arg count
 15305 0000AB8D 488B4520                	mov rax, PARAM(0)	; param make-run
 15306 0000AB91 803804                  	cmp byte [rax], T_closure
 15307 0000AB94 0F855EA70000            	jne L_error_non_closure
 15308 0000AB9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15309 0000AB9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15310 0000ABA0 48890425[1B0E0000]      	mov qword [free_var_4], rax
 15311 0000ABA8 48B8-                   	mov rax, sob_void
 15311 0000ABAA [0000000000000000] 
 15312                                  
 15313                                  	; preparing a non-tail-call
 15314 0000ABB2 488B4510                	mov rax, ENV
 15315 0000ABB6 488B00                  	mov rax, qword [rax + 8 * 0]
 15316 0000ABB9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 15317 0000ABBC 50                      	push rax
 15318 0000ABBD 6A01                    	push 1	; arg count
 15319 0000ABBF 488B4520                	mov rax, PARAM(0)	; param make-run
 15320 0000ABC3 803804                  	cmp byte [rax], T_closure
 15321 0000ABC6 0F852CA70000            	jne L_error_non_closure
 15322 0000ABCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15323 0000ABCF FF5009                  	call SOB_CLOSURE_CODE(rax)
 15324 0000ABD2 48890425[2C0E0000]      	mov qword [free_var_5], rax
 15325 0000ABDA 48B8-                   	mov rax, sob_void
 15325 0000ABDC [0000000000000000] 
 15326                                  
 15327                                  	; preparing a non-tail-call
 15328 0000ABE4 488B4510                	mov rax, ENV
 15329 0000ABE8 488B4008                	mov rax, qword [rax + 8 * 1]
 15330 0000ABEC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15331 0000ABEF 50                      	push rax
 15332 0000ABF0 6A01                    	push 1	; arg count
 15333 0000ABF2 488B4520                	mov rax, PARAM(0)	; param make-run
 15334 0000ABF6 803804                  	cmp byte [rax], T_closure
 15335 0000ABF9 0F85F9A60000            	jne L_error_non_closure
 15336 0000ABFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 15337 0000AC02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15338 0000AC05 48890425[4E0E0000]      	mov qword [free_var_7], rax
 15339 0000AC0D 48B8-                   	mov rax, sob_void
 15339 0000AC0F [0000000000000000] 
 15340                                  
 15341                                  	; preparing a non-tail-call
 15342 0000AC17 488B4510                	mov rax, ENV
 15343 0000AC1B 488B4010                	mov rax, qword [rax + 8 * 2]
 15344 0000AC1F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 15345 0000AC22 50                      	push rax
 15346 0000AC23 6A01                    	push 1	; arg count
 15347 0000AC25 488B4520                	mov rax, PARAM(0)	; param make-run
 15348 0000AC29 803804                  	cmp byte [rax], T_closure
 15349 0000AC2C 0F85C6A60000            	jne L_error_non_closure
 15350 0000AC32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15351 0000AC35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15352 0000AC38 48890425[5F0E0000]      	mov qword [free_var_8], rax
 15353 0000AC40 48B8-                   	mov rax, sob_void
 15353 0000AC42 [0000000000000000] 
 15354                                  
 15355                                  	; preparing a non-tail-call
 15356 0000AC4A 488B4510                	mov rax, ENV
 15357 0000AC4E 488B4018                	mov rax, qword [rax + 8 * 3]
 15358 0000AC52 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 15359 0000AC55 50                      	push rax
 15360 0000AC56 6A01                    	push 1	; arg count
 15361 0000AC58 488B4520                	mov rax, PARAM(0)	; param make-run
 15362 0000AC5C 803804                  	cmp byte [rax], T_closure
 15363 0000AC5F 0F8593A60000            	jne L_error_non_closure
 15364 0000AC65 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15365 0000AC68 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15366 0000AC6B 48890425[3D0E0000]      	mov qword [free_var_6], rax
 15367 0000AC73 48B8-                   	mov rax, sob_void
 15367 0000AC75 [0000000000000000] 
 15368 0000AC7D C9                      	leave
 15369 0000AC7E C21800                  	ret AND_KILL_FRAME(1)
 15370                                  .L_lambda_simple_end_01cc:	; new closure is in rax
 15371 0000AC81 803804                  	cmp byte [rax], T_closure
 15372 0000AC84 0F856EA60000            	jne L_error_non_closure
 15373 0000AC8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15374 0000AC8D FF7508                  	push qword [rbp + 8]
 15375 0000AC90 FF7500                  	push qword [rbp]
 15376 0000AC93 41BA05000000            	mov r10, 1 + 4
 15377 0000AC99 4C8B4518                	mov r8, COUNT
 15378 0000AC9D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15379 0000ACA2 4C8D4DF8                	lea r9, [rbp - 8]
 15380                                  .L_tc_recycle_frame_loop_0256:
 15381 0000ACA6 4983FA00                	cmp r10, 0
 15382 0000ACAA 7413                    	je .L_tc_recycle_frame_done_0256
 15383 0000ACAC 4D8B19                  	mov r11, qword [r9]
 15384 0000ACAF 4D8918                  	mov qword [r8], r11
 15385 0000ACB2 49FFCA                  	dec r10
 15386 0000ACB5 4983E808                	sub r8, 8
 15387 0000ACB9 4983E908                	sub r9, 8
 15388 0000ACBD EBE7                    	jmp .L_tc_recycle_frame_loop_0256
 15389                                  .L_tc_recycle_frame_done_0256:
 15390 0000ACBF 498D6008                	lea rsp, [r8 + 8]
 15391 0000ACC3 5D                      	pop rbp
 15392 0000ACC4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15393 0000ACC7 C9                      	leave
 15394 0000ACC8 C21800                  	ret AND_KILL_FRAME(1)
 15395                                  .L_lambda_simple_end_01c8:	; new closure is in rax
 15396 0000ACCB 803804                  	cmp byte [rax], T_closure
 15397 0000ACCE 0F8524A60000            	jne L_error_non_closure
 15398 0000ACD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15399 0000ACD7 FF7508                  	push qword [rbp + 8]
 15400 0000ACDA FF7500                  	push qword [rbp]
 15401 0000ACDD 41BA05000000            	mov r10, 1 + 4
 15402 0000ACE3 4C8B4518                	mov r8, COUNT
 15403 0000ACE7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15404 0000ACEC 4C8D4DF8                	lea r9, [rbp - 8]
 15405                                  .L_tc_recycle_frame_loop_0257:
 15406 0000ACF0 4983FA00                	cmp r10, 0
 15407 0000ACF4 7413                    	je .L_tc_recycle_frame_done_0257
 15408 0000ACF6 4D8B19                  	mov r11, qword [r9]
 15409 0000ACF9 4D8918                  	mov qword [r8], r11
 15410 0000ACFC 49FFCA                  	dec r10
 15411 0000ACFF 4983E808                	sub r8, 8
 15412 0000AD03 4983E908                	sub r9, 8
 15413 0000AD07 EBE7                    	jmp .L_tc_recycle_frame_loop_0257
 15414                                  .L_tc_recycle_frame_done_0257:
 15415 0000AD09 498D6008                	lea rsp, [r8 + 8]
 15416 0000AD0D 5D                      	pop rbp
 15417 0000AD0E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15418 0000AD11 C9                      	leave
 15419 0000AD12 C21800                  	ret AND_KILL_FRAME(1)
 15420                                  .L_lambda_simple_end_01c6:	; new closure is in rax
 15421 0000AD15 803804                  	cmp byte [rax], T_closure
 15422 0000AD18 0F85DAA50000            	jne L_error_non_closure
 15423 0000AD1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15424 0000AD21 FF7508                  	push qword [rbp + 8]
 15425 0000AD24 FF7500                  	push qword [rbp]
 15426 0000AD27 41BA05000000            	mov r10, 1 + 4
 15427 0000AD2D 4C8B4518                	mov r8, COUNT
 15428 0000AD31 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15429 0000AD36 4C8D4DF8                	lea r9, [rbp - 8]
 15430                                  .L_tc_recycle_frame_loop_0258:
 15431 0000AD3A 4983FA00                	cmp r10, 0
 15432 0000AD3E 7413                    	je .L_tc_recycle_frame_done_0258
 15433 0000AD40 4D8B19                  	mov r11, qword [r9]
 15434 0000AD43 4D8918                  	mov qword [r8], r11
 15435 0000AD46 49FFCA                  	dec r10
 15436 0000AD49 4983E808                	sub r8, 8
 15437 0000AD4D 4983E908                	sub r9, 8
 15438 0000AD51 EBE7                    	jmp .L_tc_recycle_frame_loop_0258
 15439                                  .L_tc_recycle_frame_done_0258:
 15440 0000AD53 498D6008                	lea rsp, [r8 + 8]
 15441 0000AD57 5D                      	pop rbp
 15442 0000AD58 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15443 0000AD5B C9                      	leave
 15444 0000AD5C C21800                  	ret AND_KILL_FRAME(1)
 15445                                  .L_lambda_simple_end_01c4:	; new closure is in rax
 15446 0000AD5F 803804                  	cmp byte [rax], T_closure
 15447 0000AD62 0F8590A50000            	jne L_error_non_closure
 15448 0000AD68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15449 0000AD6B FF7508                  	push qword [rbp + 8]
 15450 0000AD6E FF7500                  	push qword [rbp]
 15451 0000AD71 41BA05000000            	mov r10, 1 + 4
 15452 0000AD77 4C8B4518                	mov r8, COUNT
 15453 0000AD7B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15454 0000AD80 4C8D4DF8                	lea r9, [rbp - 8]
 15455                                  .L_tc_recycle_frame_loop_0259:
 15456 0000AD84 4983FA00                	cmp r10, 0
 15457 0000AD88 7413                    	je .L_tc_recycle_frame_done_0259
 15458 0000AD8A 4D8B19                  	mov r11, qword [r9]
 15459 0000AD8D 4D8918                  	mov qword [r8], r11
 15460 0000AD90 49FFCA                  	dec r10
 15461 0000AD93 4983E808                	sub r8, 8
 15462 0000AD97 4983E908                	sub r9, 8
 15463 0000AD9B EBE7                    	jmp .L_tc_recycle_frame_loop_0259
 15464                                  .L_tc_recycle_frame_done_0259:
 15465 0000AD9D 498D6008                	lea rsp, [r8 + 8]
 15466 0000ADA1 5D                      	pop rbp
 15467 0000ADA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15468 0000ADA5 C9                      	leave
 15469 0000ADA6 C21800                  	ret AND_KILL_FRAME(1)
 15470                                  .L_lambda_simple_end_01c2:	; new closure is in rax
 15471 0000ADA9 803804                  	cmp byte [rax], T_closure
 15472 0000ADAC 0F8546A50000            	jne L_error_non_closure
 15473 0000ADB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15474 0000ADB5 FF7508                  	push qword [rbp + 8]
 15475 0000ADB8 FF7500                  	push qword [rbp]
 15476 0000ADBB 41BA05000000            	mov r10, 1 + 4
 15477 0000ADC1 4C8B4518                	mov r8, COUNT
 15478 0000ADC5 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15479 0000ADCA 4C8D4DF8                	lea r9, [rbp - 8]
 15480                                  .L_tc_recycle_frame_loop_025a:
 15481 0000ADCE 4983FA00                	cmp r10, 0
 15482 0000ADD2 7413                    	je .L_tc_recycle_frame_done_025a
 15483 0000ADD4 4D8B19                  	mov r11, qword [r9]
 15484 0000ADD7 4D8918                  	mov qword [r8], r11
 15485 0000ADDA 49FFCA                  	dec r10
 15486 0000ADDD 4983E808                	sub r8, 8
 15487 0000ADE1 4983E908                	sub r9, 8
 15488 0000ADE5 EBE7                    	jmp .L_tc_recycle_frame_loop_025a
 15489                                  .L_tc_recycle_frame_done_025a:
 15490 0000ADE7 498D6008                	lea rsp, [r8 + 8]
 15491 0000ADEB 5D                      	pop rbp
 15492 0000ADEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15493 0000ADEF C9                      	leave
 15494 0000ADF0 C21800                  	ret AND_KILL_FRAME(1)
 15495                                  .L_lambda_simple_end_01c1:	; new closure is in rax
 15496 0000ADF3 803804                  	cmp byte [rax], T_closure
 15497 0000ADF6 0F85FCA40000            	jne L_error_non_closure
 15498 0000ADFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15499 0000ADFF FF7508                  	push qword [rbp + 8]
 15500 0000AE02 FF7500                  	push qword [rbp]
 15501 0000AE05 41BA05000000            	mov r10, 1 + 4
 15502 0000AE0B 4C8B4518                	mov r8, COUNT
 15503 0000AE0F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15504 0000AE14 4C8D4DF8                	lea r9, [rbp - 8]
 15505                                  .L_tc_recycle_frame_loop_025b:
 15506 0000AE18 4983FA00                	cmp r10, 0
 15507 0000AE1C 7413                    	je .L_tc_recycle_frame_done_025b
 15508 0000AE1E 4D8B19                  	mov r11, qword [r9]
 15509 0000AE21 4D8918                  	mov qword [r8], r11
 15510 0000AE24 49FFCA                  	dec r10
 15511 0000AE27 4983E808                	sub r8, 8
 15512 0000AE2B 4983E908                	sub r9, 8
 15513 0000AE2F EBE7                    	jmp .L_tc_recycle_frame_loop_025b
 15514                                  .L_tc_recycle_frame_done_025b:
 15515 0000AE31 498D6008                	lea rsp, [r8 + 8]
 15516 0000AE35 5D                      	pop rbp
 15517 0000AE36 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15518 0000AE39 C9                      	leave
 15519 0000AE3A C21800                  	ret AND_KILL_FRAME(1)
 15520                                  .L_lambda_simple_end_01c0:	; new closure is in rax
 15521 0000AE3D 803804                  	cmp byte [rax], T_closure
 15522 0000AE40 0F85B2A40000            	jne L_error_non_closure
 15523 0000AE46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15524 0000AE49 FF7508                  	push qword [rbp + 8]
 15525 0000AE4C FF7500                  	push qword [rbp]
 15526 0000AE4F 41BA05000000            	mov r10, 1 + 4
 15527 0000AE55 4C8B4518                	mov r8, COUNT
 15528 0000AE59 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15529 0000AE5E 4C8D4DF8                	lea r9, [rbp - 8]
 15530                                  .L_tc_recycle_frame_loop_025c:
 15531 0000AE62 4983FA00                	cmp r10, 0
 15532 0000AE66 7413                    	je .L_tc_recycle_frame_done_025c
 15533 0000AE68 4D8B19                  	mov r11, qword [r9]
 15534 0000AE6B 4D8918                  	mov qword [r8], r11
 15535 0000AE6E 49FFCA                  	dec r10
 15536 0000AE71 4983E808                	sub r8, 8
 15537 0000AE75 4983E908                	sub r9, 8
 15538 0000AE79 EBE7                    	jmp .L_tc_recycle_frame_loop_025c
 15539                                  .L_tc_recycle_frame_done_025c:
 15540 0000AE7B 498D6008                	lea rsp, [r8 + 8]
 15541 0000AE7F 5D                      	pop rbp
 15542 0000AE80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15543 0000AE83 C9                      	leave
 15544 0000AE84 C21800                  	ret AND_KILL_FRAME(1)
 15545                                  .L_lambda_simple_end_01bd:	; new closure is in rax
 15546 0000AE87 803804                  	cmp byte [rax], T_closure
 15547 0000AE8A 0F8568A40000            	jne L_error_non_closure
 15548 0000AE90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15549 0000AE93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15550                                  
 15551 0000AE96 4889C7                  	mov rdi, rax
 15552 0000AE99 E858A70000              	call print_sexpr_if_not_void
 15553 0000AE9E 48B8-                   	mov rax, L_constants + 0
 15553 0000AEA0 [0000000000000000] 
 15554 0000AEA8 48890425[C1120000]      	mov qword [free_var_74], rax
 15555 0000AEB0 48B8-                   	mov rax, sob_void
 15555 0000AEB2 [0000000000000000] 
 15556                                  
 15557 0000AEBA 4889C7                  	mov rdi, rax
 15558 0000AEBD E834A70000              	call print_sexpr_if_not_void
 15559 0000AEC2 48B8-                   	mov rax, L_constants + 0
 15559 0000AEC4 [0000000000000000] 
 15560 0000AECC 48890425[B0120000]      	mov qword [free_var_73], rax
 15561 0000AED4 48B8-                   	mov rax, sob_void
 15561 0000AED6 [0000000000000000] 
 15562                                  
 15563 0000AEDE 4889C7                  	mov rdi, rax
 15564 0000AEE1 E810A70000              	call print_sexpr_if_not_void
 15565 0000AEE6 48B8-                   	mov rax, L_constants + 0
 15565 0000AEE8 [0000000000000000] 
 15566 0000AEF0 48890425[D2120000]      	mov qword [free_var_75], rax
 15567 0000AEF8 48B8-                   	mov rax, sob_void
 15567 0000AEFA [0000000000000000] 
 15568                                  
 15569 0000AF02 4889C7                  	mov rdi, rax
 15570 0000AF05 E8ECA60000              	call print_sexpr_if_not_void
 15571 0000AF0A 48B8-                   	mov rax, L_constants + 0
 15571 0000AF0C [0000000000000000] 
 15572 0000AF14 48890425[F4120000]      	mov qword [free_var_77], rax
 15573 0000AF1C 48B8-                   	mov rax, sob_void
 15573 0000AF1E [0000000000000000] 
 15574                                  
 15575 0000AF26 4889C7                  	mov rdi, rax
 15576 0000AF29 E8C8A60000              	call print_sexpr_if_not_void
 15577 0000AF2E 48B8-                   	mov rax, L_constants + 0
 15577 0000AF30 [0000000000000000] 
 15578 0000AF38 48890425[E3120000]      	mov qword [free_var_76], rax
 15579 0000AF40 48B8-                   	mov rax, sob_void
 15579 0000AF42 [0000000000000000] 
 15580                                  
 15581 0000AF4A 4889C7                  	mov rdi, rax
 15582 0000AF4D E8A4A60000              	call print_sexpr_if_not_void
 15583                                  	; preparing a non-tail-call
 15584 0000AF52 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15585 0000AF57 E845A40000              	call malloc
 15586 0000AF5C 50                      	push rax
 15587 0000AF5D BF00000000              	mov rdi, 8 * 0	; new rib
 15588 0000AF62 E83AA40000              	call malloc
 15589 0000AF67 50                      	push rax
 15590 0000AF68 BF08000000              	mov rdi, 8 * 1	; extended env
 15591 0000AF6D E82FA40000              	call malloc
 15592 0000AF72 488B7D10                	mov rdi, ENV
 15593 0000AF76 BE00000000              	mov rsi, 0
 15594 0000AF7B BA01000000              	mov rdx, 1
 15595                                  .L_lambda_simple_env_loop_01cd:	; ext_env[i + 1] <-- env[i]
 15596 0000AF80 4883FE00                	cmp rsi, 0
 15597 0000AF84 7410                    	je .L_lambda_simple_env_end_01cd
 15598 0000AF86 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15599 0000AF8A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15600 0000AF8E 48FFC6                  	inc rsi
 15601 0000AF91 48FFC2                  	inc rdx
 15602 0000AF94 EBEA                    	jmp .L_lambda_simple_env_loop_01cd
 15603                                  .L_lambda_simple_env_end_01cd:
 15604 0000AF96 5B                      	pop rbx
 15605 0000AF97 BE00000000              	mov rsi, 0
 15606                                  .L_lambda_simple_params_loop_01cd:	; copy params
 15607 0000AF9C 4883FE00                	cmp rsi, 0
 15608 0000AFA0 740E                    	je .L_lambda_simple_params_end_01cd
 15609 0000AFA2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15610 0000AFA7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15611 0000AFAB 48FFC6                  	inc rsi
 15612 0000AFAE EBEC                    	jmp .L_lambda_simple_params_loop_01cd
 15613                                  .L_lambda_simple_params_end_01cd:
 15614 0000AFB0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15615 0000AFB3 4889C3                  	mov rbx, rax
 15616 0000AFB6 58                      	pop rax
 15617 0000AFB7 C60004                  	mov byte [rax], T_closure
 15618 0000AFBA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15619 0000AFBE 48C74009[CBAF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01cd
 15620 0000AFC6 E93F020000              	jmp .L_lambda_simple_end_01cd
 15621                                  .L_lambda_simple_code_01cd:	; lambda-simple body
 15622 0000AFCB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15623 0000AFD1 740B                    	je .L_lambda_simple_arity_check_ok_01cd
 15624 0000AFD3 FF742410                	push qword [rsp + 8 * 2]
 15625 0000AFD7 6A01                    	push 1
 15626 0000AFD9 E97CA30000              	jmp L_error_incorrect_arity_simple
 15627                                  .L_lambda_simple_arity_check_ok_01cd:
 15628 0000AFDE C8000000                	enter 0, 0
 15629 0000AFE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15630 0000AFE7 E8B5A30000              	call malloc
 15631 0000AFEC 50                      	push rax
 15632 0000AFED BF08000000              	mov rdi, 8 * 1	; new rib
 15633 0000AFF2 E8AAA30000              	call malloc
 15634 0000AFF7 50                      	push rax
 15635 0000AFF8 BF10000000              	mov rdi, 8 * 2	; extended env
 15636 0000AFFD E89FA30000              	call malloc
 15637 0000B002 488B7D10                	mov rdi, ENV
 15638 0000B006 BE00000000              	mov rsi, 0
 15639 0000B00B BA01000000              	mov rdx, 1
 15640                                  .L_lambda_opt_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 15641 0000B010 4883FE01                	cmp rsi, 1
 15642 0000B014 7410                    	je .L_lambda_opt_env_end_0041
 15643 0000B016 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15644 0000B01A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15645 0000B01E 48FFC6                  	inc rsi
 15646 0000B021 48FFC2                  	inc rdx
 15647 0000B024 EBEA                    	jmp .L_lambda_opt_env_loop_0041
 15648                                  .L_lambda_opt_env_end_0041:
 15649 0000B026 5B                      	pop rbx
 15650 0000B027 BE00000000              	mov rsi, 0
 15651                                  .L_lambda_opt_params_loop_0041:	; copy params
 15652 0000B02C 4883FE01                	cmp rsi, 1
 15653 0000B030 740E                    	je .L_lambda_opt_params_end_0041
 15654 0000B032 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15655 0000B037 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15656 0000B03B 48FFC6                  	inc rsi
 15657 0000B03E EBEC                    	jmp .L_lambda_opt_params_loop_0041
 15658                                  .L_lambda_opt_params_end_0041:
 15659 0000B040 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15660 0000B043 4889C3                  	mov rbx, rax
 15661 0000B046 58                      	pop rax
 15662 0000B047 C60004                  	mov byte [rax], T_closure
 15663 0000B04A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15664 0000B04E 48C74009[5BB00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0041
 15665 0000B056 E9AB010000              	jmp .L_lambda_opt_end_0041
 15666                                  .L_lambda_opt_code_0041:
 15667 0000B05B 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 15668 0000B060 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 15669 0000B064 7407                    	je .L_lambda_opt_arity_check_exact_0041	; Jump if arity matches
 15670 0000B066 7F4C                    	jg .L_lambda_opt_arity_check_more_0041	; Jump if more arguments passed
 15671 0000B068 E901A30000              	jmp L_error_incorrect_arity_opt
 15672                                  .L_lambda_opt_arity_check_exact_0041:
 15673 0000B06D 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 15674 0000B070 4983C603                	add r14, 3 ; add 3 first stack values
 15675 0000B074 41BF00000000            	mov r15, 0 ; r15 = index
 15676 0000B07A 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 15677 0000B07E 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 15678 0000B086 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0041
 15679                                  .L_lambda_opt_stack_shrink_loop_0041:
 15680 0000B088 4983FE00                	cmp r14, 0
 15681 0000B08C 7E11                    	jle .L_make_lambda_opt_exact_finish_0041
 15682 0000B08E 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 15683 0000B093 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 15684 0000B097 49FFCE                  	dec r14 ; next loop value
 15685 0000B09A 49FFC7                  	inc r15 ; update i
 15686 0000B09D EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0041
 15687                                  .L_make_lambda_opt_exact_finish_0041:
 15688 0000B09F 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 15689 0000B0A7 49FFC2                  	inc r10
 15690 0000B0AA 4C89542410              	mov qword [rsp + 8 * 2], r10
 15691 0000B0AF E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0041
 15692                                  .L_lambda_opt_arity_check_more_0041:
 15693 0000B0B4 4D89D6                  	mov r14, r10 ; r14 = num args
 15694 0000B0B7 4D89D7                  	mov r15, r10 ; r15 = num args
 15695 0000B0BA 41B900000000            	mov r9, 0; r9 = number of params 
 15696 0000B0C0 4D29CE                  	sub r14, r9 ; r14 = extra args
 15697 0000B0C3 4D01F1                  	add r9, r14 ; r9 = num args
 15698 0000B0C6 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 15698 0000B0C8 [0100000000000000] 
 15699 0000B0D0 EB00                    	jmp .L_make_lambda_opt_arg_list_0041
 15700                                  .L_make_lambda_opt_arg_list_0041:
 15701 0000B0D2 4983FE00                	cmp r14, 0
 15702 0000B0D6 7E25                    	jle .L_make_lambda_opt_stack_fixed_0041
 15703 0000B0D8 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 15704 0000B0DD BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 15705 0000B0E2 E8BAA20000              	call malloc                         ; Allocate memory, result in rax
 15706 0000B0E7 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 15707 0000B0EA 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 15708 0000B0EE 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 15709 0000B0F2 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 15710 0000B0F5 49FFC9                  	dec r9                              ; args index minus 1
 15711 0000B0F8 49FFCE                  	dec r14                             ; next iteration
 15712 0000B0FB EBD5                    	jmp .L_make_lambda_opt_arg_list_0041
 15713                                  .L_make_lambda_opt_stack_fixed_0041:
 15714 0000B0FD 4D89FE                  	mov r14, r15 ; r14 = num args
 15715 0000B100 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 15716 0000B103 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 15717 0000B107 4D89C1                  	mov r9, r8
 15718 0000B10A 41BA00000000            	mov r10, 0; r10 = num of params
 15719 0000B110 4D29D6                  	sub r14, r10 ; r14 = extra args
 15720 0000B113 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 15721 0000B116 49FFCE                  	dec r14 ; how much we need to change stack wise?
 15722 0000B119 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 15723 0000B11E 4D89CC                  	mov r12, r9
 15724 0000B121 4D29F4                  	sub r12, r14
 15725 0000B124 49FFCC                  	dec r12
 15726 0000B127 49FFCC                  	dec r12
 15727 0000B12A EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0041
 15728                                  .L_lambda_opt_stack_shrink_loop_more_0041:
 15729 0000B12C 4983F800                	cmp r8, 0
 15730 0000B130 7E16                    	jle .L_make_lambda_opt_more_finish_0041
 15731 0000B132 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 15732 0000B136 4D01F4                  	add r12, r14
 15733 0000B139 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 15734 0000B13D 49FFC8                  	dec r8 ; next iteration
 15735 0000B140 4D29F4                  	sub r12, r14 ; next iteration
 15736 0000B143 49FFCC                  	dec r12 ; next iteration
 15737 0000B146 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0041
 15738                                  .L_make_lambda_opt_more_finish_0041:
 15739 0000B148 41BA00000000            	mov r10, 0
 15740 0000B14E 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 15741 0000B157 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 15742 0000B15B 4C01F4                  	add rsp, r14  ; Add to rsp
 15743 0000B15E EB00                    	jmp .L_lambda_opt_stack_adjusted_0041
 15744                                  .L_lambda_opt_stack_adjusted_0041:
 15745 0000B160 C8000000                	enter 0, 0
 15746                                  	; Initiating tail-call optimization
 15747                                  	; preparing a non-tail-call
 15748 0000B164 488B4520                	mov rax, PARAM(0)	; param s
 15749 0000B168 50                      	push rax
 15750 0000B169 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 15751 0000B171 803805                  	cmp byte [rax], T_undefined
 15752 0000B174 0F84FAA00000            	je L_error_fvar_undefined
 15753 0000B17A 50                      	push rax
 15754 0000B17B 6A02                    	push 2	; arg count
 15755 0000B17D 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
 15756 0000B185 803805                  	cmp byte [rax], T_undefined
 15757 0000B188 0F84E6A00000            	je L_error_fvar_undefined
 15758 0000B18E 803804                  	cmp byte [rax], T_closure
 15759 0000B191 0F8561A10000            	jne L_error_non_closure
 15760 0000B197 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15761 0000B19A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15762 0000B19D 50                      	push rax
 15763 0000B19E 488B4510                	mov rax, ENV
 15764 0000B1A2 488B00                  	mov rax, qword [rax + 8 * 0]
 15765 0000B1A5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 15766 0000B1A8 50                      	push rax
 15767 0000B1A9 6A02                    	push 2	; Number of arguments
 15768 0000B1AB 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
 15769 0000B1B3 803805                  	cmp byte [rax], T_undefined
 15770 0000B1B6 0F84B8A00000            	je L_error_fvar_undefined
 15771 0000B1BC 803804                  	cmp byte [rax], T_closure
 15772 0000B1BF 0F8533A10000            	jne L_error_non_closure
 15773 0000B1C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15774 0000B1C8 FF7508                  	push qword [rbp + 8]
 15775 0000B1CB FF7500                  	push qword [rbp]
 15776 0000B1CE 41BA06000000            	mov r10, 2 + 4
 15777 0000B1D4 4C8B4518                	mov r8, COUNT
 15778 0000B1D8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 15779 0000B1DD 4C8D4DF8                	lea r9, [rbp - 8]
 15780                                  .L_tc_recycle_frame_loop_025d:
 15781 0000B1E1 4983FA00                	cmp r10, 0
 15782 0000B1E5 7413                    	je .L_tc_recycle_frame_done_025d
 15783 0000B1E7 4D8B19                  	mov r11, qword [r9]
 15784 0000B1EA 4D8918                  	mov qword [r8], r11
 15785 0000B1ED 49FFCA                  	dec r10
 15786 0000B1F0 4983E808                	sub r8, 8
 15787 0000B1F4 4983E908                	sub r9, 8
 15788 0000B1F8 EBE7                    	jmp .L_tc_recycle_frame_loop_025d
 15789                                  .L_tc_recycle_frame_done_025d:
 15790 0000B1FA 498D6008                	lea rsp, [r8 + 8]
 15791 0000B1FE 5D                      	pop rbp
 15792 0000B1FF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15793 0000B202 C9                      	leave
 15794 0000B203 C21800                  	ret AND_KILL_FRAME(1)
 15795                                  .L_lambda_opt_end_0041:	; new closure is in rax
 15796 0000B206 C9                      	leave
 15797 0000B207 C21800                  	ret AND_KILL_FRAME(1)
 15798                                  .L_lambda_simple_end_01cd:	; new closure is in rax
 15799 0000B20A 50                      	push rax
 15800 0000B20B 6A01                    	push 1	; arg count
 15801 0000B20D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15802 0000B212 E88AA10000              	call malloc
 15803 0000B217 50                      	push rax
 15804 0000B218 BF00000000              	mov rdi, 8 * 0	; new rib
 15805 0000B21D E87FA10000              	call malloc
 15806 0000B222 50                      	push rax
 15807 0000B223 BF08000000              	mov rdi, 8 * 1	; extended env
 15808 0000B228 E874A10000              	call malloc
 15809 0000B22D 488B7D10                	mov rdi, ENV
 15810 0000B231 BE00000000              	mov rsi, 0
 15811 0000B236 BA01000000              	mov rdx, 1
 15812                                  .L_lambda_simple_env_loop_01ce:	; ext_env[i + 1] <-- env[i]
 15813 0000B23B 4883FE00                	cmp rsi, 0
 15814 0000B23F 7410                    	je .L_lambda_simple_env_end_01ce
 15815 0000B241 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15816 0000B245 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15817 0000B249 48FFC6                  	inc rsi
 15818 0000B24C 48FFC2                  	inc rdx
 15819 0000B24F EBEA                    	jmp .L_lambda_simple_env_loop_01ce
 15820                                  .L_lambda_simple_env_end_01ce:
 15821 0000B251 5B                      	pop rbx
 15822 0000B252 BE00000000              	mov rsi, 0
 15823                                  .L_lambda_simple_params_loop_01ce:	; copy params
 15824 0000B257 4883FE00                	cmp rsi, 0
 15825 0000B25B 740E                    	je .L_lambda_simple_params_end_01ce
 15826 0000B25D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15827 0000B262 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15828 0000B266 48FFC6                  	inc rsi
 15829 0000B269 EBEC                    	jmp .L_lambda_simple_params_loop_01ce
 15830                                  .L_lambda_simple_params_end_01ce:
 15831 0000B26B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15832 0000B26E 4889C3                  	mov rbx, rax
 15833 0000B271 58                      	pop rax
 15834 0000B272 C60004                  	mov byte [rax], T_closure
 15835 0000B275 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15836 0000B279 48C74009[86B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ce
 15837 0000B281 E938010000              	jmp .L_lambda_simple_end_01ce
 15838                                  .L_lambda_simple_code_01ce:	; lambda-simple body
 15839 0000B286 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15840 0000B28C 740B                    	je .L_lambda_simple_arity_check_ok_01ce
 15841 0000B28E FF742410                	push qword [rsp + 8 * 2]
 15842 0000B292 6A01                    	push 1
 15843 0000B294 E9C1A00000              	jmp L_error_incorrect_arity_simple
 15844                                  .L_lambda_simple_arity_check_ok_01ce:
 15845 0000B299 C8000000                	enter 0, 0
 15846                                  	; preparing a non-tail-call
 15847 0000B29D 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 15848 0000B2A5 803805                  	cmp byte [rax], T_undefined
 15849 0000B2A8 0F84C69F0000            	je L_error_fvar_undefined
 15850 0000B2AE 50                      	push rax
 15851 0000B2AF 6A01                    	push 1	; arg count
 15852 0000B2B1 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15853 0000B2B5 803804                  	cmp byte [rax], T_closure
 15854 0000B2B8 0F853AA00000            	jne L_error_non_closure
 15855 0000B2BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15856 0000B2C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15857 0000B2C4 48890425[C1120000]      	mov qword [free_var_74], rax
 15858 0000B2CC 48B8-                   	mov rax, sob_void
 15858 0000B2CE [0000000000000000] 
 15859                                  
 15860                                  	; preparing a non-tail-call
 15861 0000B2D6 488B0425[2C0E0000]      	mov rax, qword [free_var_5]	; free var <=
 15862 0000B2DE 803805                  	cmp byte [rax], T_undefined
 15863 0000B2E1 0F848D9F0000            	je L_error_fvar_undefined
 15864 0000B2E7 50                      	push rax
 15865 0000B2E8 6A01                    	push 1	; arg count
 15866 0000B2EA 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15867 0000B2EE 803804                  	cmp byte [rax], T_closure
 15868 0000B2F1 0F8501A00000            	jne L_error_non_closure
 15869 0000B2F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15870 0000B2FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 15871 0000B2FD 48890425[B0120000]      	mov qword [free_var_73], rax
 15872 0000B305 48B8-                   	mov rax, sob_void
 15872 0000B307 [0000000000000000] 
 15873                                  
 15874                                  	; preparing a non-tail-call
 15875 0000B30F 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 15876 0000B317 803805                  	cmp byte [rax], T_undefined
 15877 0000B31A 0F84549F0000            	je L_error_fvar_undefined
 15878 0000B320 50                      	push rax
 15879 0000B321 6A01                    	push 1	; arg count
 15880 0000B323 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15881 0000B327 803804                  	cmp byte [rax], T_closure
 15882 0000B32A 0F85C89F0000            	jne L_error_non_closure
 15883 0000B330 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15884 0000B333 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15885 0000B336 48890425[D2120000]      	mov qword [free_var_75], rax
 15886 0000B33E 48B8-                   	mov rax, sob_void
 15886 0000B340 [0000000000000000] 
 15887                                  
 15888                                  	; preparing a non-tail-call
 15889 0000B348 488B0425[4E0E0000]      	mov rax, qword [free_var_7]	; free var >
 15890 0000B350 803805                  	cmp byte [rax], T_undefined
 15891 0000B353 0F841B9F0000            	je L_error_fvar_undefined
 15892 0000B359 50                      	push rax
 15893 0000B35A 6A01                    	push 1	; arg count
 15894 0000B35C 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15895 0000B360 803804                  	cmp byte [rax], T_closure
 15896 0000B363 0F858F9F0000            	jne L_error_non_closure
 15897 0000B369 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15898 0000B36C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15899 0000B36F 48890425[F4120000]      	mov qword [free_var_77], rax
 15900 0000B377 48B8-                   	mov rax, sob_void
 15900 0000B379 [0000000000000000] 
 15901                                  
 15902                                  	; preparing a non-tail-call
 15903 0000B381 488B0425[5F0E0000]      	mov rax, qword [free_var_8]	; free var >=
 15904 0000B389 803805                  	cmp byte [rax], T_undefined
 15905 0000B38C 0F84E29E0000            	je L_error_fvar_undefined
 15906 0000B392 50                      	push rax
 15907 0000B393 6A01                    	push 1	; arg count
 15908 0000B395 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15909 0000B399 803804                  	cmp byte [rax], T_closure
 15910 0000B39C 0F85569F0000            	jne L_error_non_closure
 15911 0000B3A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15912 0000B3A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15913 0000B3A8 48890425[E3120000]      	mov qword [free_var_76], rax
 15914 0000B3B0 48B8-                   	mov rax, sob_void
 15914 0000B3B2 [0000000000000000] 
 15915 0000B3BA C9                      	leave
 15916 0000B3BB C21800                  	ret AND_KILL_FRAME(1)
 15917                                  .L_lambda_simple_end_01ce:	; new closure is in rax
 15918 0000B3BE 803804                  	cmp byte [rax], T_closure
 15919 0000B3C1 0F85319F0000            	jne L_error_non_closure
 15920 0000B3C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15921 0000B3CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 15922                                  
 15923 0000B3CD 4889C7                  	mov rdi, rax
 15924 0000B3D0 E821A20000              	call print_sexpr_if_not_void
 15925 0000B3D5 48B8-                   	mov rax, L_constants + 0
 15925 0000B3D7 [0000000000000000] 
 15926 0000B3DF 48890425[8E120000]      	mov qword [free_var_71], rax
 15927 0000B3E7 48B8-                   	mov rax, sob_void
 15927 0000B3E9 [0000000000000000] 
 15928                                  
 15929 0000B3F1 4889C7                  	mov rdi, rax
 15930 0000B3F4 E8FDA10000              	call print_sexpr_if_not_void
 15931 0000B3F9 48B8-                   	mov rax, L_constants + 0
 15931 0000B3FB [0000000000000000] 
 15932 0000B403 48890425[9F120000]      	mov qword [free_var_72], rax
 15933 0000B40B 48B8-                   	mov rax, sob_void
 15933 0000B40D [0000000000000000] 
 15934                                  
 15935 0000B415 4889C7                  	mov rdi, rax
 15936 0000B418 E8D9A10000              	call print_sexpr_if_not_void
 15937                                  	; preparing a non-tail-call
 15938                                  	; preparing a non-tail-call
 15939                                  	; preparing a non-tail-call
 15940 0000B41D 48B8-                   	mov rax, L_constants + 2569
 15940 0000B41F [090A000000000000] 
 15941 0000B427 50                      	push rax
 15942 0000B428 6A01                    	push 1	; arg count
 15943 0000B42A 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 15944 0000B432 803805                  	cmp byte [rax], T_undefined
 15945 0000B435 0F84399E0000            	je L_error_fvar_undefined
 15946 0000B43B 803804                  	cmp byte [rax], T_closure
 15947 0000B43E 0F85B49E0000            	jne L_error_non_closure
 15948 0000B444 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15949 0000B447 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15950 0000B44A 50                      	push rax
 15951                                  	; preparing a non-tail-call
 15952 0000B44B 48B8-                   	mov rax, L_constants + 2573
 15952 0000B44D [0D0A000000000000] 
 15953 0000B455 50                      	push rax
 15954 0000B456 6A01                    	push 1	; arg count
 15955 0000B458 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 15956 0000B460 803805                  	cmp byte [rax], T_undefined
 15957 0000B463 0F840B9E0000            	je L_error_fvar_undefined
 15958 0000B469 803804                  	cmp byte [rax], T_closure
 15959 0000B46C 0F85869E0000            	jne L_error_non_closure
 15960 0000B472 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15961 0000B475 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15962 0000B478 50                      	push rax
 15963 0000B479 6A02                    	push 2	; arg count
 15964 0000B47B 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 15965 0000B483 803805                  	cmp byte [rax], T_undefined
 15966 0000B486 0F84E89D0000            	je L_error_fvar_undefined
 15967 0000B48C 803804                  	cmp byte [rax], T_closure
 15968 0000B48F 0F85639E0000            	jne L_error_non_closure
 15969 0000B495 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15970 0000B498 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15971 0000B49B 50                      	push rax
 15972 0000B49C 6A01                    	push 1	; arg count
 15973 0000B49E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15974 0000B4A3 E8F99E0000              	call malloc
 15975 0000B4A8 50                      	push rax
 15976 0000B4A9 BF00000000              	mov rdi, 8 * 0	; new rib
 15977 0000B4AE E8EE9E0000              	call malloc
 15978 0000B4B3 50                      	push rax
 15979 0000B4B4 BF08000000              	mov rdi, 8 * 1	; extended env
 15980 0000B4B9 E8E39E0000              	call malloc
 15981 0000B4BE 488B7D10                	mov rdi, ENV
 15982 0000B4C2 BE00000000              	mov rsi, 0
 15983 0000B4C7 BA01000000              	mov rdx, 1
 15984                                  .L_lambda_simple_env_loop_01cf:	; ext_env[i + 1] <-- env[i]
 15985 0000B4CC 4883FE00                	cmp rsi, 0
 15986 0000B4D0 7410                    	je .L_lambda_simple_env_end_01cf
 15987 0000B4D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15988 0000B4D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15989 0000B4DA 48FFC6                  	inc rsi
 15990 0000B4DD 48FFC2                  	inc rdx
 15991 0000B4E0 EBEA                    	jmp .L_lambda_simple_env_loop_01cf
 15992                                  .L_lambda_simple_env_end_01cf:
 15993 0000B4E2 5B                      	pop rbx
 15994 0000B4E3 BE00000000              	mov rsi, 0
 15995                                  .L_lambda_simple_params_loop_01cf:	; copy params
 15996 0000B4E8 4883FE00                	cmp rsi, 0
 15997 0000B4EC 740E                    	je .L_lambda_simple_params_end_01cf
 15998 0000B4EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15999 0000B4F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16000 0000B4F7 48FFC6                  	inc rsi
 16001 0000B4FA EBEC                    	jmp .L_lambda_simple_params_loop_01cf
 16002                                  .L_lambda_simple_params_end_01cf:
 16003 0000B4FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16004 0000B4FF 4889C3                  	mov rbx, rax
 16005 0000B502 58                      	pop rax
 16006 0000B503 C60004                  	mov byte [rax], T_closure
 16007 0000B506 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16008 0000B50A 48C74009[17B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01cf
 16009 0000B512 E963030000              	jmp .L_lambda_simple_end_01cf
 16010                                  .L_lambda_simple_code_01cf:	; lambda-simple body
 16011 0000B517 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16012 0000B51D 740B                    	je .L_lambda_simple_arity_check_ok_01cf
 16013 0000B51F FF742410                	push qword [rsp + 8 * 2]
 16014 0000B523 6A01                    	push 1
 16015 0000B525 E9309E0000              	jmp L_error_incorrect_arity_simple
 16016                                  .L_lambda_simple_arity_check_ok_01cf:
 16017 0000B52A C8000000                	enter 0, 0
 16018 0000B52E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16019 0000B533 E8699E0000              	call malloc
 16020 0000B538 50                      	push rax
 16021 0000B539 BF08000000              	mov rdi, 8 * 1	; new rib
 16022 0000B53E E85E9E0000              	call malloc
 16023 0000B543 50                      	push rax
 16024 0000B544 BF10000000              	mov rdi, 8 * 2	; extended env
 16025 0000B549 E8539E0000              	call malloc
 16026 0000B54E 488B7D10                	mov rdi, ENV
 16027 0000B552 BE00000000              	mov rsi, 0
 16028 0000B557 BA01000000              	mov rdx, 1
 16029                                  .L_lambda_simple_env_loop_01d0:	; ext_env[i + 1] <-- env[i]
 16030 0000B55C 4883FE01                	cmp rsi, 1
 16031 0000B560 7410                    	je .L_lambda_simple_env_end_01d0
 16032 0000B562 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16033 0000B566 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16034 0000B56A 48FFC6                  	inc rsi
 16035 0000B56D 48FFC2                  	inc rdx
 16036 0000B570 EBEA                    	jmp .L_lambda_simple_env_loop_01d0
 16037                                  .L_lambda_simple_env_end_01d0:
 16038 0000B572 5B                      	pop rbx
 16039 0000B573 BE00000000              	mov rsi, 0
 16040                                  .L_lambda_simple_params_loop_01d0:	; copy params
 16041 0000B578 4883FE01                	cmp rsi, 1
 16042 0000B57C 740E                    	je .L_lambda_simple_params_end_01d0
 16043 0000B57E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16044 0000B583 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16045 0000B587 48FFC6                  	inc rsi
 16046 0000B58A EBEC                    	jmp .L_lambda_simple_params_loop_01d0
 16047                                  .L_lambda_simple_params_end_01d0:
 16048 0000B58C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16049 0000B58F 4889C3                  	mov rbx, rax
 16050 0000B592 58                      	pop rax
 16051 0000B593 C60004                  	mov byte [rax], T_closure
 16052 0000B596 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16053 0000B59A 48C74009[A7B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d0
 16054 0000B5A2 E919010000              	jmp .L_lambda_simple_end_01d0
 16055                                  .L_lambda_simple_code_01d0:	; lambda-simple body
 16056 0000B5A7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16057 0000B5AD 740B                    	je .L_lambda_simple_arity_check_ok_01d0
 16058 0000B5AF FF742410                	push qword [rsp + 8 * 2]
 16059 0000B5B3 6A01                    	push 1
 16060 0000B5B5 E9A09D0000              	jmp L_error_incorrect_arity_simple
 16061                                  .L_lambda_simple_arity_check_ok_01d0:
 16062 0000B5BA C8000000                	enter 0, 0
 16063                                  	; preparing a non-tail-call
 16064 0000B5BE 48B8-                   	mov rax, L_constants + 2571
 16064 0000B5C0 [0B0A000000000000] 
 16065 0000B5C8 50                      	push rax
 16066 0000B5C9 488B4520                	mov rax, PARAM(0)	; param ch
 16067 0000B5CD 50                      	push rax
 16068 0000B5CE 48B8-                   	mov rax, L_constants + 2569
 16068 0000B5D0 [090A000000000000] 
 16069 0000B5D8 50                      	push rax
 16070 0000B5D9 6A03                    	push 3	; arg count
 16071 0000B5DB 488B0425[B0120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16072 0000B5E3 803805                  	cmp byte [rax], T_undefined
 16073 0000B5E6 0F84889C0000            	je L_error_fvar_undefined
 16074 0000B5EC 803804                  	cmp byte [rax], T_closure
 16075 0000B5EF 0F85039D0000            	jne L_error_non_closure
 16076 0000B5F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16077 0000B5F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16078 0000B5FB 483D[02000000]          	cmp rax, sob_boolean_false
 16079 0000B601 0F84B1000000            	je .L_if_else_0161
 16080                                  	; Initiating tail-call optimization
 16081                                  	; preparing a non-tail-call
 16082 0000B607 488B4510                	mov rax, ENV
 16083 0000B60B 488B00                  	mov rax, qword [rax + 8 * 0]
 16084 0000B60E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16085 0000B611 50                      	push rax
 16086                                  	; preparing a non-tail-call
 16087 0000B612 488B4520                	mov rax, PARAM(0)	; param ch
 16088 0000B616 50                      	push rax
 16089 0000B617 6A01                    	push 1	; arg count
 16090 0000B619 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16091 0000B621 803805                  	cmp byte [rax], T_undefined
 16092 0000B624 0F844A9C0000            	je L_error_fvar_undefined
 16093 0000B62A 803804                  	cmp byte [rax], T_closure
 16094 0000B62D 0F85C59C0000            	jne L_error_non_closure
 16095 0000B633 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16096 0000B636 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16097 0000B639 50                      	push rax
 16098 0000B63A 6A02                    	push 2	; arg count
 16099 0000B63C 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 16100 0000B644 803805                  	cmp byte [rax], T_undefined
 16101 0000B647 0F84279C0000            	je L_error_fvar_undefined
 16102 0000B64D 803804                  	cmp byte [rax], T_closure
 16103 0000B650 0F85A29C0000            	jne L_error_non_closure
 16104 0000B656 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16105 0000B659 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16106 0000B65C 50                      	push rax
 16107 0000B65D 6A01                    	push 1	; Number of arguments
 16108 0000B65F 488B0425[C0130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16109 0000B667 803805                  	cmp byte [rax], T_undefined
 16110 0000B66A 0F84049C0000            	je L_error_fvar_undefined
 16111 0000B670 803804                  	cmp byte [rax], T_closure
 16112 0000B673 0F857F9C0000            	jne L_error_non_closure
 16113 0000B679 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16114 0000B67C FF7508                  	push qword [rbp + 8]
 16115 0000B67F FF7500                  	push qword [rbp]
 16116 0000B682 41BA05000000            	mov r10, 1 + 4
 16117 0000B688 4C8B4518                	mov r8, COUNT
 16118 0000B68C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16119 0000B691 4C8D4DF8                	lea r9, [rbp - 8]
 16120                                  .L_tc_recycle_frame_loop_025e:
 16121 0000B695 4983FA00                	cmp r10, 0
 16122 0000B699 7413                    	je .L_tc_recycle_frame_done_025e
 16123 0000B69B 4D8B19                  	mov r11, qword [r9]
 16124 0000B69E 4D8918                  	mov qword [r8], r11
 16125 0000B6A1 49FFCA                  	dec r10
 16126 0000B6A4 4983E808                	sub r8, 8
 16127 0000B6A8 4983E908                	sub r9, 8
 16128 0000B6AC EBE7                    	jmp .L_tc_recycle_frame_loop_025e
 16129                                  .L_tc_recycle_frame_done_025e:
 16130 0000B6AE 498D6008                	lea rsp, [r8 + 8]
 16131 0000B6B2 5D                      	pop rbp
 16132 0000B6B3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16133 0000B6B6 EB04                    	jmp .L_if_end_0161
 16134                                  .L_if_else_0161:
 16135 0000B6B8 488B4520                	mov rax, PARAM(0)	; param ch
 16136                                  .L_if_end_0161:
 16137 0000B6BC C9                      	leave
 16138 0000B6BD C21800                  	ret AND_KILL_FRAME(1)
 16139                                  .L_lambda_simple_end_01d0:	; new closure is in rax
 16140 0000B6C0 48890425[8E120000]      	mov qword [free_var_71], rax
 16141 0000B6C8 48B8-                   	mov rax, sob_void
 16141 0000B6CA [0000000000000000] 
 16142                                  
 16143 0000B6D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16144 0000B6D7 E8C59C0000              	call malloc
 16145 0000B6DC 50                      	push rax
 16146 0000B6DD BF08000000              	mov rdi, 8 * 1	; new rib
 16147 0000B6E2 E8BA9C0000              	call malloc
 16148 0000B6E7 50                      	push rax
 16149 0000B6E8 BF10000000              	mov rdi, 8 * 2	; extended env
 16150 0000B6ED E8AF9C0000              	call malloc
 16151 0000B6F2 488B7D10                	mov rdi, ENV
 16152 0000B6F6 BE00000000              	mov rsi, 0
 16153 0000B6FB BA01000000              	mov rdx, 1
 16154                                  .L_lambda_simple_env_loop_01d1:	; ext_env[i + 1] <-- env[i]
 16155 0000B700 4883FE01                	cmp rsi, 1
 16156 0000B704 7410                    	je .L_lambda_simple_env_end_01d1
 16157 0000B706 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16158 0000B70A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16159 0000B70E 48FFC6                  	inc rsi
 16160 0000B711 48FFC2                  	inc rdx
 16161 0000B714 EBEA                    	jmp .L_lambda_simple_env_loop_01d1
 16162                                  .L_lambda_simple_env_end_01d1:
 16163 0000B716 5B                      	pop rbx
 16164 0000B717 BE00000000              	mov rsi, 0
 16165                                  .L_lambda_simple_params_loop_01d1:	; copy params
 16166 0000B71C 4883FE01                	cmp rsi, 1
 16167 0000B720 740E                    	je .L_lambda_simple_params_end_01d1
 16168 0000B722 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16169 0000B727 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16170 0000B72B 48FFC6                  	inc rsi
 16171 0000B72E EBEC                    	jmp .L_lambda_simple_params_loop_01d1
 16172                                  .L_lambda_simple_params_end_01d1:
 16173 0000B730 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16174 0000B733 4889C3                  	mov rbx, rax
 16175 0000B736 58                      	pop rax
 16176 0000B737 C60004                  	mov byte [rax], T_closure
 16177 0000B73A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16178 0000B73E 48C74009[4BB70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d1
 16179 0000B746 E919010000              	jmp .L_lambda_simple_end_01d1
 16180                                  .L_lambda_simple_code_01d1:	; lambda-simple body
 16181 0000B74B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16182 0000B751 740B                    	je .L_lambda_simple_arity_check_ok_01d1
 16183 0000B753 FF742410                	push qword [rsp + 8 * 2]
 16184 0000B757 6A01                    	push 1
 16185 0000B759 E9FC9B0000              	jmp L_error_incorrect_arity_simple
 16186                                  .L_lambda_simple_arity_check_ok_01d1:
 16187 0000B75E C8000000                	enter 0, 0
 16188                                  	; preparing a non-tail-call
 16189 0000B762 48B8-                   	mov rax, L_constants + 2575
 16189 0000B764 [0F0A000000000000] 
 16190 0000B76C 50                      	push rax
 16191 0000B76D 488B4520                	mov rax, PARAM(0)	; param ch
 16192 0000B771 50                      	push rax
 16193 0000B772 48B8-                   	mov rax, L_constants + 2573
 16193 0000B774 [0D0A000000000000] 
 16194 0000B77C 50                      	push rax
 16195 0000B77D 6A03                    	push 3	; arg count
 16196 0000B77F 488B0425[B0120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16197 0000B787 803805                  	cmp byte [rax], T_undefined
 16198 0000B78A 0F84E49A0000            	je L_error_fvar_undefined
 16199 0000B790 803804                  	cmp byte [rax], T_closure
 16200 0000B793 0F855F9B0000            	jne L_error_non_closure
 16201 0000B799 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16202 0000B79C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16203 0000B79F 483D[02000000]          	cmp rax, sob_boolean_false
 16204 0000B7A5 0F84B1000000            	je .L_if_else_0162
 16205                                  	; Initiating tail-call optimization
 16206                                  	; preparing a non-tail-call
 16207 0000B7AB 488B4510                	mov rax, ENV
 16208 0000B7AF 488B00                  	mov rax, qword [rax + 8 * 0]
 16209 0000B7B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16210 0000B7B5 50                      	push rax
 16211                                  	; preparing a non-tail-call
 16212 0000B7B6 488B4520                	mov rax, PARAM(0)	; param ch
 16213 0000B7BA 50                      	push rax
 16214 0000B7BB 6A01                    	push 1	; arg count
 16215 0000B7BD 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16216 0000B7C5 803805                  	cmp byte [rax], T_undefined
 16217 0000B7C8 0F84A69A0000            	je L_error_fvar_undefined
 16218 0000B7CE 803804                  	cmp byte [rax], T_closure
 16219 0000B7D1 0F85219B0000            	jne L_error_non_closure
 16220 0000B7D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16221 0000B7DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16222 0000B7DD 50                      	push rax
 16223 0000B7DE 6A02                    	push 2	; arg count
 16224 0000B7E0 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 16225 0000B7E8 803805                  	cmp byte [rax], T_undefined
 16226 0000B7EB 0F84839A0000            	je L_error_fvar_undefined
 16227 0000B7F1 803804                  	cmp byte [rax], T_closure
 16228 0000B7F4 0F85FE9A0000            	jne L_error_non_closure
 16229 0000B7FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 16230 0000B7FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 16231 0000B800 50                      	push rax
 16232 0000B801 6A01                    	push 1	; Number of arguments
 16233 0000B803 488B0425[C0130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16234 0000B80B 803805                  	cmp byte [rax], T_undefined
 16235 0000B80E 0F84609A0000            	je L_error_fvar_undefined
 16236 0000B814 803804                  	cmp byte [rax], T_closure
 16237 0000B817 0F85DB9A0000            	jne L_error_non_closure
 16238 0000B81D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16239 0000B820 FF7508                  	push qword [rbp + 8]
 16240 0000B823 FF7500                  	push qword [rbp]
 16241 0000B826 41BA05000000            	mov r10, 1 + 4
 16242 0000B82C 4C8B4518                	mov r8, COUNT
 16243 0000B830 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16244 0000B835 4C8D4DF8                	lea r9, [rbp - 8]
 16245                                  .L_tc_recycle_frame_loop_025f:
 16246 0000B839 4983FA00                	cmp r10, 0
 16247 0000B83D 7413                    	je .L_tc_recycle_frame_done_025f
 16248 0000B83F 4D8B19                  	mov r11, qword [r9]
 16249 0000B842 4D8918                  	mov qword [r8], r11
 16250 0000B845 49FFCA                  	dec r10
 16251 0000B848 4983E808                	sub r8, 8
 16252 0000B84C 4983E908                	sub r9, 8
 16253 0000B850 EBE7                    	jmp .L_tc_recycle_frame_loop_025f
 16254                                  .L_tc_recycle_frame_done_025f:
 16255 0000B852 498D6008                	lea rsp, [r8 + 8]
 16256 0000B856 5D                      	pop rbp
 16257 0000B857 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16258 0000B85A EB04                    	jmp .L_if_end_0162
 16259                                  .L_if_else_0162:
 16260 0000B85C 488B4520                	mov rax, PARAM(0)	; param ch
 16261                                  .L_if_end_0162:
 16262 0000B860 C9                      	leave
 16263 0000B861 C21800                  	ret AND_KILL_FRAME(1)
 16264                                  .L_lambda_simple_end_01d1:	; new closure is in rax
 16265 0000B864 48890425[9F120000]      	mov qword [free_var_72], rax
 16266 0000B86C 48B8-                   	mov rax, sob_void
 16266 0000B86E [0000000000000000] 
 16267 0000B876 C9                      	leave
 16268 0000B877 C21800                  	ret AND_KILL_FRAME(1)
 16269                                  .L_lambda_simple_end_01cf:	; new closure is in rax
 16270 0000B87A 803804                  	cmp byte [rax], T_closure
 16271 0000B87D 0F85759A0000            	jne L_error_non_closure
 16272 0000B883 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16273 0000B886 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16274                                  
 16275 0000B889 4889C7                  	mov rdi, rax
 16276 0000B88C E8659D0000              	call print_sexpr_if_not_void
 16277 0000B891 48B8-                   	mov rax, L_constants + 0
 16277 0000B893 [0000000000000000] 
 16278 0000B89B 48890425[4A120000]      	mov qword [free_var_67], rax
 16279 0000B8A3 48B8-                   	mov rax, sob_void
 16279 0000B8A5 [0000000000000000] 
 16280                                  
 16281 0000B8AD 4889C7                  	mov rdi, rax
 16282 0000B8B0 E8419D0000              	call print_sexpr_if_not_void
 16283 0000B8B5 48B8-                   	mov rax, L_constants + 0
 16283 0000B8B7 [0000000000000000] 
 16284 0000B8BF 48890425[39120000]      	mov qword [free_var_66], rax
 16285 0000B8C7 48B8-                   	mov rax, sob_void
 16285 0000B8C9 [0000000000000000] 
 16286                                  
 16287 0000B8D1 4889C7                  	mov rdi, rax
 16288 0000B8D4 E81D9D0000              	call print_sexpr_if_not_void
 16289 0000B8D9 48B8-                   	mov rax, L_constants + 0
 16289 0000B8DB [0000000000000000] 
 16290 0000B8E3 48890425[5B120000]      	mov qword [free_var_68], rax
 16291 0000B8EB 48B8-                   	mov rax, sob_void
 16291 0000B8ED [0000000000000000] 
 16292                                  
 16293 0000B8F5 4889C7                  	mov rdi, rax
 16294 0000B8F8 E8F99C0000              	call print_sexpr_if_not_void
 16295 0000B8FD 48B8-                   	mov rax, L_constants + 0
 16295 0000B8FF [0000000000000000] 
 16296 0000B907 48890425[7D120000]      	mov qword [free_var_70], rax
 16297 0000B90F 48B8-                   	mov rax, sob_void
 16297 0000B911 [0000000000000000] 
 16298                                  
 16299 0000B919 4889C7                  	mov rdi, rax
 16300 0000B91C E8D59C0000              	call print_sexpr_if_not_void
 16301 0000B921 48B8-                   	mov rax, L_constants + 0
 16301 0000B923 [0000000000000000] 
 16302 0000B92B 48890425[6C120000]      	mov qword [free_var_69], rax
 16303 0000B933 48B8-                   	mov rax, sob_void
 16303 0000B935 [0000000000000000] 
 16304                                  
 16305 0000B93D 4889C7                  	mov rdi, rax
 16306 0000B940 E8B19C0000              	call print_sexpr_if_not_void
 16307                                  	; preparing a non-tail-call
 16308 0000B945 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16309 0000B94A E8529A0000              	call malloc
 16310 0000B94F 50                      	push rax
 16311 0000B950 BF00000000              	mov rdi, 8 * 0	; new rib
 16312 0000B955 E8479A0000              	call malloc
 16313 0000B95A 50                      	push rax
 16314 0000B95B BF08000000              	mov rdi, 8 * 1	; extended env
 16315 0000B960 E83C9A0000              	call malloc
 16316 0000B965 488B7D10                	mov rdi, ENV
 16317 0000B969 BE00000000              	mov rsi, 0
 16318 0000B96E BA01000000              	mov rdx, 1
 16319                                  .L_lambda_simple_env_loop_01d2:	; ext_env[i + 1] <-- env[i]
 16320 0000B973 4883FE00                	cmp rsi, 0
 16321 0000B977 7410                    	je .L_lambda_simple_env_end_01d2
 16322 0000B979 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16323 0000B97D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16324 0000B981 48FFC6                  	inc rsi
 16325 0000B984 48FFC2                  	inc rdx
 16326 0000B987 EBEA                    	jmp .L_lambda_simple_env_loop_01d2
 16327                                  .L_lambda_simple_env_end_01d2:
 16328 0000B989 5B                      	pop rbx
 16329 0000B98A BE00000000              	mov rsi, 0
 16330                                  .L_lambda_simple_params_loop_01d2:	; copy params
 16331 0000B98F 4883FE00                	cmp rsi, 0
 16332 0000B993 740E                    	je .L_lambda_simple_params_end_01d2
 16333 0000B995 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16334 0000B99A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16335 0000B99E 48FFC6                  	inc rsi
 16336 0000B9A1 EBEC                    	jmp .L_lambda_simple_params_loop_01d2
 16337                                  .L_lambda_simple_params_end_01d2:
 16338 0000B9A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16339 0000B9A6 4889C3                  	mov rbx, rax
 16340 0000B9A9 58                      	pop rax
 16341 0000B9AA C60004                  	mov byte [rax], T_closure
 16342 0000B9AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16343 0000B9B1 48C74009[BEB90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d2
 16344 0000B9B9 E943030000              	jmp .L_lambda_simple_end_01d2
 16345                                  .L_lambda_simple_code_01d2:	; lambda-simple body
 16346 0000B9BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16347 0000B9C4 740B                    	je .L_lambda_simple_arity_check_ok_01d2
 16348 0000B9C6 FF742410                	push qword [rsp + 8 * 2]
 16349 0000B9CA 6A01                    	push 1
 16350 0000B9CC E989990000              	jmp L_error_incorrect_arity_simple
 16351                                  .L_lambda_simple_arity_check_ok_01d2:
 16352 0000B9D1 C8000000                	enter 0, 0
 16353 0000B9D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16354 0000B9DA E8C2990000              	call malloc
 16355 0000B9DF 50                      	push rax
 16356 0000B9E0 BF08000000              	mov rdi, 8 * 1	; new rib
 16357 0000B9E5 E8B7990000              	call malloc
 16358 0000B9EA 50                      	push rax
 16359 0000B9EB BF10000000              	mov rdi, 8 * 2	; extended env
 16360 0000B9F0 E8AC990000              	call malloc
 16361 0000B9F5 488B7D10                	mov rdi, ENV
 16362 0000B9F9 BE00000000              	mov rsi, 0
 16363 0000B9FE BA01000000              	mov rdx, 1
 16364                                  .L_lambda_opt_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 16365 0000BA03 4883FE01                	cmp rsi, 1
 16366 0000BA07 7410                    	je .L_lambda_opt_env_end_0042
 16367 0000BA09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16368 0000BA0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16369 0000BA11 48FFC6                  	inc rsi
 16370 0000BA14 48FFC2                  	inc rdx
 16371 0000BA17 EBEA                    	jmp .L_lambda_opt_env_loop_0042
 16372                                  .L_lambda_opt_env_end_0042:
 16373 0000BA19 5B                      	pop rbx
 16374 0000BA1A BE00000000              	mov rsi, 0
 16375                                  .L_lambda_opt_params_loop_0042:	; copy params
 16376 0000BA1F 4883FE01                	cmp rsi, 1
 16377 0000BA23 740E                    	je .L_lambda_opt_params_end_0042
 16378 0000BA25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16379 0000BA2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16380 0000BA2E 48FFC6                  	inc rsi
 16381 0000BA31 EBEC                    	jmp .L_lambda_opt_params_loop_0042
 16382                                  .L_lambda_opt_params_end_0042:
 16383 0000BA33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16384 0000BA36 4889C3                  	mov rbx, rax
 16385 0000BA39 58                      	pop rax
 16386 0000BA3A C60004                  	mov byte [rax], T_closure
 16387 0000BA3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16388 0000BA41 48C74009[4EBA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0042
 16389 0000BA49 E9AF020000              	jmp .L_lambda_opt_end_0042
 16390                                  .L_lambda_opt_code_0042:
 16391 0000BA4E 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 16392 0000BA53 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 16393 0000BA57 7407                    	je .L_lambda_opt_arity_check_exact_0042	; Jump if arity matches
 16394 0000BA59 7F4C                    	jg .L_lambda_opt_arity_check_more_0042	; Jump if more arguments passed
 16395 0000BA5B E90E990000              	jmp L_error_incorrect_arity_opt
 16396                                  .L_lambda_opt_arity_check_exact_0042:
 16397 0000BA60 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 16398 0000BA63 4983C603                	add r14, 3 ; add 3 first stack values
 16399 0000BA67 41BF00000000            	mov r15, 0 ; r15 = index
 16400 0000BA6D 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 16401 0000BA71 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 16402 0000BA79 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0042
 16403                                  .L_lambda_opt_stack_shrink_loop_0042:
 16404 0000BA7B 4983FE00                	cmp r14, 0
 16405 0000BA7F 7E11                    	jle .L_make_lambda_opt_exact_finish_0042
 16406 0000BA81 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 16407 0000BA86 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 16408 0000BA8A 49FFCE                  	dec r14 ; next loop value
 16409 0000BA8D 49FFC7                  	inc r15 ; update i
 16410 0000BA90 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0042
 16411                                  .L_make_lambda_opt_exact_finish_0042:
 16412 0000BA92 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 16413 0000BA9A 49FFC2                  	inc r10
 16414 0000BA9D 4C89542410              	mov qword [rsp + 8 * 2], r10
 16415 0000BAA2 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0042
 16416                                  .L_lambda_opt_arity_check_more_0042:
 16417 0000BAA7 4D89D6                  	mov r14, r10 ; r14 = num args
 16418 0000BAAA 4D89D7                  	mov r15, r10 ; r15 = num args
 16419 0000BAAD 41B900000000            	mov r9, 0; r9 = number of params 
 16420 0000BAB3 4D29CE                  	sub r14, r9 ; r14 = extra args
 16421 0000BAB6 4D01F1                  	add r9, r14 ; r9 = num args
 16422 0000BAB9 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 16422 0000BABB [0100000000000000] 
 16423 0000BAC3 EB00                    	jmp .L_make_lambda_opt_arg_list_0042
 16424                                  .L_make_lambda_opt_arg_list_0042:
 16425 0000BAC5 4983FE00                	cmp r14, 0
 16426 0000BAC9 7E25                    	jle .L_make_lambda_opt_stack_fixed_0042
 16427 0000BACB 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 16428 0000BAD0 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 16429 0000BAD5 E8C7980000              	call malloc                         ; Allocate memory, result in rax
 16430 0000BADA C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 16431 0000BADD 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 16432 0000BAE1 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 16433 0000BAE5 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 16434 0000BAE8 49FFC9                  	dec r9                              ; args index minus 1
 16435 0000BAEB 49FFCE                  	dec r14                             ; next iteration
 16436 0000BAEE EBD5                    	jmp .L_make_lambda_opt_arg_list_0042
 16437                                  .L_make_lambda_opt_stack_fixed_0042:
 16438 0000BAF0 4D89FE                  	mov r14, r15 ; r14 = num args
 16439 0000BAF3 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 16440 0000BAF6 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 16441 0000BAFA 4D89C1                  	mov r9, r8
 16442 0000BAFD 41BA00000000            	mov r10, 0; r10 = num of params
 16443 0000BB03 4D29D6                  	sub r14, r10 ; r14 = extra args
 16444 0000BB06 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 16445 0000BB09 49FFCE                  	dec r14 ; how much we need to change stack wise?
 16446 0000BB0C 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 16447 0000BB11 4D89CC                  	mov r12, r9
 16448 0000BB14 4D29F4                  	sub r12, r14
 16449 0000BB17 49FFCC                  	dec r12
 16450 0000BB1A 49FFCC                  	dec r12
 16451 0000BB1D EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0042
 16452                                  .L_lambda_opt_stack_shrink_loop_more_0042:
 16453 0000BB1F 4983F800                	cmp r8, 0
 16454 0000BB23 7E16                    	jle .L_make_lambda_opt_more_finish_0042
 16455 0000BB25 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 16456 0000BB29 4D01F4                  	add r12, r14
 16457 0000BB2C 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 16458 0000BB30 49FFC8                  	dec r8 ; next iteration
 16459 0000BB33 4D29F4                  	sub r12, r14 ; next iteration
 16460 0000BB36 49FFCC                  	dec r12 ; next iteration
 16461 0000BB39 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0042
 16462                                  .L_make_lambda_opt_more_finish_0042:
 16463 0000BB3B 41BA00000000            	mov r10, 0
 16464 0000BB41 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 16465 0000BB4A 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 16466 0000BB4E 4C01F4                  	add rsp, r14  ; Add to rsp
 16467 0000BB51 EB00                    	jmp .L_lambda_opt_stack_adjusted_0042
 16468                                  .L_lambda_opt_stack_adjusted_0042:
 16469 0000BB53 C8000000                	enter 0, 0
 16470                                  	; Initiating tail-call optimization
 16471                                  	; preparing a non-tail-call
 16472 0000BB57 488B4520                	mov rax, PARAM(0)	; param s
 16473 0000BB5B 50                      	push rax
 16474 0000BB5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16475 0000BB61 E83B980000              	call malloc
 16476 0000BB66 50                      	push rax
 16477 0000BB67 BF08000000              	mov rdi, 8 * 1	; new rib
 16478 0000BB6C E830980000              	call malloc
 16479 0000BB71 50                      	push rax
 16480 0000BB72 BF18000000              	mov rdi, 8 * 3	; extended env
 16481 0000BB77 E825980000              	call malloc
 16482 0000BB7C 488B7D10                	mov rdi, ENV
 16483 0000BB80 BE00000000              	mov rsi, 0
 16484 0000BB85 BA01000000              	mov rdx, 1
 16485                                  .L_lambda_simple_env_loop_01d3:	; ext_env[i + 1] <-- env[i]
 16486 0000BB8A 4883FE02                	cmp rsi, 2
 16487 0000BB8E 7410                    	je .L_lambda_simple_env_end_01d3
 16488 0000BB90 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16489 0000BB94 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16490 0000BB98 48FFC6                  	inc rsi
 16491 0000BB9B 48FFC2                  	inc rdx
 16492 0000BB9E EBEA                    	jmp .L_lambda_simple_env_loop_01d3
 16493                                  .L_lambda_simple_env_end_01d3:
 16494 0000BBA0 5B                      	pop rbx
 16495 0000BBA1 BE00000000              	mov rsi, 0
 16496                                  .L_lambda_simple_params_loop_01d3:	; copy params
 16497 0000BBA6 4883FE01                	cmp rsi, 1
 16498 0000BBAA 740E                    	je .L_lambda_simple_params_end_01d3
 16499 0000BBAC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16500 0000BBB1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16501 0000BBB5 48FFC6                  	inc rsi
 16502 0000BBB8 EBEC                    	jmp .L_lambda_simple_params_loop_01d3
 16503                                  .L_lambda_simple_params_end_01d3:
 16504 0000BBBA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16505 0000BBBD 4889C3                  	mov rbx, rax
 16506 0000BBC0 58                      	pop rax
 16507 0000BBC1 C60004                  	mov byte [rax], T_closure
 16508 0000BBC4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16509 0000BBC8 48C74009[D5BB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d3
 16510 0000BBD0 E99C000000              	jmp .L_lambda_simple_end_01d3
 16511                                  .L_lambda_simple_code_01d3:	; lambda-simple body
 16512 0000BBD5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16513 0000BBDB 740B                    	je .L_lambda_simple_arity_check_ok_01d3
 16514 0000BBDD FF742410                	push qword [rsp + 8 * 2]
 16515 0000BBE1 6A01                    	push 1
 16516 0000BBE3 E972970000              	jmp L_error_incorrect_arity_simple
 16517                                  .L_lambda_simple_arity_check_ok_01d3:
 16518 0000BBE8 C8000000                	enter 0, 0
 16519                                  	; Initiating tail-call optimization
 16520                                  	; preparing a non-tail-call
 16521 0000BBEC 488B4520                	mov rax, PARAM(0)	; param ch
 16522 0000BBF0 50                      	push rax
 16523 0000BBF1 6A01                    	push 1	; arg count
 16524 0000BBF3 488B0425[8E120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 16525 0000BBFB 803805                  	cmp byte [rax], T_undefined
 16526 0000BBFE 0F8470960000            	je L_error_fvar_undefined
 16527 0000BC04 803804                  	cmp byte [rax], T_closure
 16528 0000BC07 0F85EB960000            	jne L_error_non_closure
 16529 0000BC0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16530 0000BC10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16531 0000BC13 50                      	push rax
 16532 0000BC14 6A01                    	push 1	; Number of arguments
 16533 0000BC16 488B0425[28120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16534 0000BC1E 803805                  	cmp byte [rax], T_undefined
 16535 0000BC21 0F844D960000            	je L_error_fvar_undefined
 16536 0000BC27 803804                  	cmp byte [rax], T_closure
 16537 0000BC2A 0F85C8960000            	jne L_error_non_closure
 16538 0000BC30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16539 0000BC33 FF7508                  	push qword [rbp + 8]
 16540 0000BC36 FF7500                  	push qword [rbp]
 16541 0000BC39 41BA05000000            	mov r10, 1 + 4
 16542 0000BC3F 4C8B4518                	mov r8, COUNT
 16543 0000BC43 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16544 0000BC48 4C8D4DF8                	lea r9, [rbp - 8]
 16545                                  .L_tc_recycle_frame_loop_0260:
 16546 0000BC4C 4983FA00                	cmp r10, 0
 16547 0000BC50 7413                    	je .L_tc_recycle_frame_done_0260
 16548 0000BC52 4D8B19                  	mov r11, qword [r9]
 16549 0000BC55 4D8918                  	mov qword [r8], r11
 16550 0000BC58 49FFCA                  	dec r10
 16551 0000BC5B 4983E808                	sub r8, 8
 16552 0000BC5F 4983E908                	sub r9, 8
 16553 0000BC63 EBE7                    	jmp .L_tc_recycle_frame_loop_0260
 16554                                  .L_tc_recycle_frame_done_0260:
 16555 0000BC65 498D6008                	lea rsp, [r8 + 8]
 16556 0000BC69 5D                      	pop rbp
 16557 0000BC6A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16558 0000BC6D C9                      	leave
 16559 0000BC6E C21800                  	ret AND_KILL_FRAME(1)
 16560                                  .L_lambda_simple_end_01d3:	; new closure is in rax
 16561 0000BC71 50                      	push rax
 16562 0000BC72 6A02                    	push 2	; arg count
 16563 0000BC74 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
 16564 0000BC7C 803805                  	cmp byte [rax], T_undefined
 16565 0000BC7F 0F84EF950000            	je L_error_fvar_undefined
 16566 0000BC85 803804                  	cmp byte [rax], T_closure
 16567 0000BC88 0F856A960000            	jne L_error_non_closure
 16568 0000BC8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16569 0000BC91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16570 0000BC94 50                      	push rax
 16571 0000BC95 488B4510                	mov rax, ENV
 16572 0000BC99 488B00                  	mov rax, qword [rax + 8 * 0]
 16573 0000BC9C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16574 0000BC9F 50                      	push rax
 16575 0000BCA0 6A02                    	push 2	; Number of arguments
 16576 0000BCA2 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
 16577 0000BCAA 803805                  	cmp byte [rax], T_undefined
 16578 0000BCAD 0F84C1950000            	je L_error_fvar_undefined
 16579 0000BCB3 803804                  	cmp byte [rax], T_closure
 16580 0000BCB6 0F853C960000            	jne L_error_non_closure
 16581 0000BCBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16582 0000BCBF FF7508                  	push qword [rbp + 8]
 16583 0000BCC2 FF7500                  	push qword [rbp]
 16584 0000BCC5 41BA06000000            	mov r10, 2 + 4
 16585 0000BCCB 4C8B4518                	mov r8, COUNT
 16586 0000BCCF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16587 0000BCD4 4C8D4DF8                	lea r9, [rbp - 8]
 16588                                  .L_tc_recycle_frame_loop_0261:
 16589 0000BCD8 4983FA00                	cmp r10, 0
 16590 0000BCDC 7413                    	je .L_tc_recycle_frame_done_0261
 16591 0000BCDE 4D8B19                  	mov r11, qword [r9]
 16592 0000BCE1 4D8918                  	mov qword [r8], r11
 16593 0000BCE4 49FFCA                  	dec r10
 16594 0000BCE7 4983E808                	sub r8, 8
 16595 0000BCEB 4983E908                	sub r9, 8
 16596 0000BCEF EBE7                    	jmp .L_tc_recycle_frame_loop_0261
 16597                                  .L_tc_recycle_frame_done_0261:
 16598 0000BCF1 498D6008                	lea rsp, [r8 + 8]
 16599 0000BCF5 5D                      	pop rbp
 16600 0000BCF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16601 0000BCF9 C9                      	leave
 16602 0000BCFA C21800                  	ret AND_KILL_FRAME(1)
 16603                                  .L_lambda_opt_end_0042:	; new closure is in rax
 16604 0000BCFD C9                      	leave
 16605 0000BCFE C21800                  	ret AND_KILL_FRAME(1)
 16606                                  .L_lambda_simple_end_01d2:	; new closure is in rax
 16607 0000BD01 50                      	push rax
 16608 0000BD02 6A01                    	push 1	; arg count
 16609 0000BD04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16610 0000BD09 E893960000              	call malloc
 16611 0000BD0E 50                      	push rax
 16612 0000BD0F BF00000000              	mov rdi, 8 * 0	; new rib
 16613 0000BD14 E888960000              	call malloc
 16614 0000BD19 50                      	push rax
 16615 0000BD1A BF08000000              	mov rdi, 8 * 1	; extended env
 16616 0000BD1F E87D960000              	call malloc
 16617 0000BD24 488B7D10                	mov rdi, ENV
 16618 0000BD28 BE00000000              	mov rsi, 0
 16619 0000BD2D BA01000000              	mov rdx, 1
 16620                                  .L_lambda_simple_env_loop_01d4:	; ext_env[i + 1] <-- env[i]
 16621 0000BD32 4883FE00                	cmp rsi, 0
 16622 0000BD36 7410                    	je .L_lambda_simple_env_end_01d4
 16623 0000BD38 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16624 0000BD3C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16625 0000BD40 48FFC6                  	inc rsi
 16626 0000BD43 48FFC2                  	inc rdx
 16627 0000BD46 EBEA                    	jmp .L_lambda_simple_env_loop_01d4
 16628                                  .L_lambda_simple_env_end_01d4:
 16629 0000BD48 5B                      	pop rbx
 16630 0000BD49 BE00000000              	mov rsi, 0
 16631                                  .L_lambda_simple_params_loop_01d4:	; copy params
 16632 0000BD4E 4883FE00                	cmp rsi, 0
 16633 0000BD52 740E                    	je .L_lambda_simple_params_end_01d4
 16634 0000BD54 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16635 0000BD59 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16636 0000BD5D 48FFC6                  	inc rsi
 16637 0000BD60 EBEC                    	jmp .L_lambda_simple_params_loop_01d4
 16638                                  .L_lambda_simple_params_end_01d4:
 16639 0000BD62 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16640 0000BD65 4889C3                  	mov rbx, rax
 16641 0000BD68 58                      	pop rax
 16642 0000BD69 C60004                  	mov byte [rax], T_closure
 16643 0000BD6C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16644 0000BD70 48C74009[7DBD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d4
 16645 0000BD78 E938010000              	jmp .L_lambda_simple_end_01d4
 16646                                  .L_lambda_simple_code_01d4:	; lambda-simple body
 16647 0000BD7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16648 0000BD83 740B                    	je .L_lambda_simple_arity_check_ok_01d4
 16649 0000BD85 FF742410                	push qword [rsp + 8 * 2]
 16650 0000BD89 6A01                    	push 1
 16651 0000BD8B E9CA950000              	jmp L_error_incorrect_arity_simple
 16652                                  .L_lambda_simple_arity_check_ok_01d4:
 16653 0000BD90 C8000000                	enter 0, 0
 16654                                  	; preparing a non-tail-call
 16655 0000BD94 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 16656 0000BD9C 803805                  	cmp byte [rax], T_undefined
 16657 0000BD9F 0F84CF940000            	je L_error_fvar_undefined
 16658 0000BDA5 50                      	push rax
 16659 0000BDA6 6A01                    	push 1	; arg count
 16660 0000BDA8 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16661 0000BDAC 803804                  	cmp byte [rax], T_closure
 16662 0000BDAF 0F8543950000            	jne L_error_non_closure
 16663 0000BDB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16664 0000BDB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16665 0000BDBB 48890425[4A120000]      	mov qword [free_var_67], rax
 16666 0000BDC3 48B8-                   	mov rax, sob_void
 16666 0000BDC5 [0000000000000000] 
 16667                                  
 16668                                  	; preparing a non-tail-call
 16669 0000BDCD 488B0425[2C0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16670 0000BDD5 803805                  	cmp byte [rax], T_undefined
 16671 0000BDD8 0F8496940000            	je L_error_fvar_undefined
 16672 0000BDDE 50                      	push rax
 16673 0000BDDF 6A01                    	push 1	; arg count
 16674 0000BDE1 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16675 0000BDE5 803804                  	cmp byte [rax], T_closure
 16676 0000BDE8 0F850A950000            	jne L_error_non_closure
 16677 0000BDEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16678 0000BDF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16679 0000BDF4 48890425[39120000]      	mov qword [free_var_66], rax
 16680 0000BDFC 48B8-                   	mov rax, sob_void
 16680 0000BDFE [0000000000000000] 
 16681                                  
 16682                                  	; preparing a non-tail-call
 16683 0000BE06 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 16684 0000BE0E 803805                  	cmp byte [rax], T_undefined
 16685 0000BE11 0F845D940000            	je L_error_fvar_undefined
 16686 0000BE17 50                      	push rax
 16687 0000BE18 6A01                    	push 1	; arg count
 16688 0000BE1A 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16689 0000BE1E 803804                  	cmp byte [rax], T_closure
 16690 0000BE21 0F85D1940000            	jne L_error_non_closure
 16691 0000BE27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16692 0000BE2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16693 0000BE2D 48890425[5B120000]      	mov qword [free_var_68], rax
 16694 0000BE35 48B8-                   	mov rax, sob_void
 16694 0000BE37 [0000000000000000] 
 16695                                  
 16696                                  	; preparing a non-tail-call
 16697 0000BE3F 488B0425[4E0E0000]      	mov rax, qword [free_var_7]	; free var >
 16698 0000BE47 803805                  	cmp byte [rax], T_undefined
 16699 0000BE4A 0F8424940000            	je L_error_fvar_undefined
 16700 0000BE50 50                      	push rax
 16701 0000BE51 6A01                    	push 1	; arg count
 16702 0000BE53 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16703 0000BE57 803804                  	cmp byte [rax], T_closure
 16704 0000BE5A 0F8598940000            	jne L_error_non_closure
 16705 0000BE60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16706 0000BE63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16707 0000BE66 48890425[7D120000]      	mov qword [free_var_70], rax
 16708 0000BE6E 48B8-                   	mov rax, sob_void
 16708 0000BE70 [0000000000000000] 
 16709                                  
 16710                                  	; preparing a non-tail-call
 16711 0000BE78 488B0425[5F0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16712 0000BE80 803805                  	cmp byte [rax], T_undefined
 16713 0000BE83 0F84EB930000            	je L_error_fvar_undefined
 16714 0000BE89 50                      	push rax
 16715 0000BE8A 6A01                    	push 1	; arg count
 16716 0000BE8C 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 16717 0000BE90 803804                  	cmp byte [rax], T_closure
 16718 0000BE93 0F855F940000            	jne L_error_non_closure
 16719 0000BE99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16720 0000BE9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16721 0000BE9F 48890425[6C120000]      	mov qword [free_var_69], rax
 16722 0000BEA7 48B8-                   	mov rax, sob_void
 16722 0000BEA9 [0000000000000000] 
 16723 0000BEB1 C9                      	leave
 16724 0000BEB2 C21800                  	ret AND_KILL_FRAME(1)
 16725                                  .L_lambda_simple_end_01d4:	; new closure is in rax
 16726 0000BEB5 803804                  	cmp byte [rax], T_closure
 16727 0000BEB8 0F853A940000            	jne L_error_non_closure
 16728 0000BEBE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16729 0000BEC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16730                                  
 16731 0000BEC4 4889C7                  	mov rdi, rax
 16732 0000BEC7 E82A970000              	call print_sexpr_if_not_void
 16733 0000BECC 48B8-                   	mov rax, L_constants + 0
 16733 0000BECE [0000000000000000] 
 16734 0000BED6 48890425[35160000]      	mov qword [free_var_126], rax
 16735 0000BEDE 48B8-                   	mov rax, sob_void
 16735 0000BEE0 [0000000000000000] 
 16736                                  
 16737 0000BEE8 4889C7                  	mov rdi, rax
 16738 0000BEEB E806970000              	call print_sexpr_if_not_void
 16739 0000BEF0 48B8-                   	mov rax, L_constants + 0
 16739 0000BEF2 [0000000000000000] 
 16740 0000BEFA 48890425[9B160000]      	mov qword [free_var_132], rax
 16741 0000BF02 48B8-                   	mov rax, sob_void
 16741 0000BF04 [0000000000000000] 
 16742                                  
 16743 0000BF0C 4889C7                  	mov rdi, rax
 16744 0000BF0F E8E2960000              	call print_sexpr_if_not_void
 16745                                  	; preparing a non-tail-call
 16746 0000BF14 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16747 0000BF19 E883940000              	call malloc
 16748 0000BF1E 50                      	push rax
 16749 0000BF1F BF00000000              	mov rdi, 8 * 0	; new rib
 16750 0000BF24 E878940000              	call malloc
 16751 0000BF29 50                      	push rax
 16752 0000BF2A BF08000000              	mov rdi, 8 * 1	; extended env
 16753 0000BF2F E86D940000              	call malloc
 16754 0000BF34 488B7D10                	mov rdi, ENV
 16755 0000BF38 BE00000000              	mov rsi, 0
 16756 0000BF3D BA01000000              	mov rdx, 1
 16757                                  .L_lambda_simple_env_loop_01d5:	; ext_env[i + 1] <-- env[i]
 16758 0000BF42 4883FE00                	cmp rsi, 0
 16759 0000BF46 7410                    	je .L_lambda_simple_env_end_01d5
 16760 0000BF48 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16761 0000BF4C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16762 0000BF50 48FFC6                  	inc rsi
 16763 0000BF53 48FFC2                  	inc rdx
 16764 0000BF56 EBEA                    	jmp .L_lambda_simple_env_loop_01d5
 16765                                  .L_lambda_simple_env_end_01d5:
 16766 0000BF58 5B                      	pop rbx
 16767 0000BF59 BE00000000              	mov rsi, 0
 16768                                  .L_lambda_simple_params_loop_01d5:	; copy params
 16769 0000BF5E 4883FE00                	cmp rsi, 0
 16770 0000BF62 740E                    	je .L_lambda_simple_params_end_01d5
 16771 0000BF64 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16772 0000BF69 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16773 0000BF6D 48FFC6                  	inc rsi
 16774 0000BF70 EBEC                    	jmp .L_lambda_simple_params_loop_01d5
 16775                                  .L_lambda_simple_params_end_01d5:
 16776 0000BF72 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16777 0000BF75 4889C3                  	mov rbx, rax
 16778 0000BF78 58                      	pop rax
 16779 0000BF79 C60004                  	mov byte [rax], T_closure
 16780 0000BF7C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16781 0000BF80 48C74009[8DBF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d5
 16782 0000BF88 E95E010000              	jmp .L_lambda_simple_end_01d5
 16783                                  .L_lambda_simple_code_01d5:	; lambda-simple body
 16784 0000BF8D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16785 0000BF93 740B                    	je .L_lambda_simple_arity_check_ok_01d5
 16786 0000BF95 FF742410                	push qword [rsp + 8 * 2]
 16787 0000BF99 6A01                    	push 1
 16788 0000BF9B E9BA930000              	jmp L_error_incorrect_arity_simple
 16789                                  .L_lambda_simple_arity_check_ok_01d5:
 16790 0000BFA0 C8000000                	enter 0, 0
 16791 0000BFA4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16792 0000BFA9 E8F3930000              	call malloc
 16793 0000BFAE 50                      	push rax
 16794 0000BFAF BF08000000              	mov rdi, 8 * 1	; new rib
 16795 0000BFB4 E8E8930000              	call malloc
 16796 0000BFB9 50                      	push rax
 16797 0000BFBA BF10000000              	mov rdi, 8 * 2	; extended env
 16798 0000BFBF E8DD930000              	call malloc
 16799 0000BFC4 488B7D10                	mov rdi, ENV
 16800 0000BFC8 BE00000000              	mov rsi, 0
 16801 0000BFCD BA01000000              	mov rdx, 1
 16802                                  .L_lambda_simple_env_loop_01d6:	; ext_env[i + 1] <-- env[i]
 16803 0000BFD2 4883FE01                	cmp rsi, 1
 16804 0000BFD6 7410                    	je .L_lambda_simple_env_end_01d6
 16805 0000BFD8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16806 0000BFDC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16807 0000BFE0 48FFC6                  	inc rsi
 16808 0000BFE3 48FFC2                  	inc rdx
 16809 0000BFE6 EBEA                    	jmp .L_lambda_simple_env_loop_01d6
 16810                                  .L_lambda_simple_env_end_01d6:
 16811 0000BFE8 5B                      	pop rbx
 16812 0000BFE9 BE00000000              	mov rsi, 0
 16813                                  .L_lambda_simple_params_loop_01d6:	; copy params
 16814 0000BFEE 4883FE01                	cmp rsi, 1
 16815 0000BFF2 740E                    	je .L_lambda_simple_params_end_01d6
 16816 0000BFF4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16817 0000BFF9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16818 0000BFFD 48FFC6                  	inc rsi
 16819 0000C000 EBEC                    	jmp .L_lambda_simple_params_loop_01d6
 16820                                  .L_lambda_simple_params_end_01d6:
 16821 0000C002 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16822 0000C005 4889C3                  	mov rbx, rax
 16823 0000C008 58                      	pop rax
 16824 0000C009 C60004                  	mov byte [rax], T_closure
 16825 0000C00C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16826 0000C010 48C74009[1DC00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d6
 16827 0000C018 E9CA000000              	jmp .L_lambda_simple_end_01d6
 16828                                  .L_lambda_simple_code_01d6:	; lambda-simple body
 16829 0000C01D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16830 0000C023 740B                    	je .L_lambda_simple_arity_check_ok_01d6
 16831 0000C025 FF742410                	push qword [rsp + 8 * 2]
 16832 0000C029 6A01                    	push 1
 16833 0000C02B E92A930000              	jmp L_error_incorrect_arity_simple
 16834                                  .L_lambda_simple_arity_check_ok_01d6:
 16835 0000C030 C8000000                	enter 0, 0
 16836                                  	; Initiating tail-call optimization
 16837                                  	; preparing a non-tail-call
 16838                                  	; preparing a non-tail-call
 16839 0000C034 488B4520                	mov rax, PARAM(0)	; param str
 16840 0000C038 50                      	push rax
 16841 0000C039 6A01                    	push 1	; arg count
 16842 0000C03B 488B0425[BE150000]      	mov rax, qword [free_var_119]	; free var string->list
 16843 0000C043 803805                  	cmp byte [rax], T_undefined
 16844 0000C046 0F8428920000            	je L_error_fvar_undefined
 16845 0000C04C 803804                  	cmp byte [rax], T_closure
 16846 0000C04F 0F85A3920000            	jne L_error_non_closure
 16847 0000C055 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16848 0000C058 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16849 0000C05B 50                      	push rax
 16850 0000C05C 488B4510                	mov rax, ENV
 16851 0000C060 488B00                  	mov rax, qword [rax + 8 * 0]
 16852 0000C063 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 16853 0000C066 50                      	push rax
 16854 0000C067 6A02                    	push 2	; arg count
 16855 0000C069 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
 16856 0000C071 803805                  	cmp byte [rax], T_undefined
 16857 0000C074 0F84FA910000            	je L_error_fvar_undefined
 16858 0000C07A 803804                  	cmp byte [rax], T_closure
 16859 0000C07D 0F8575920000            	jne L_error_non_closure
 16860 0000C083 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16861 0000C086 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16862 0000C089 50                      	push rax
 16863 0000C08A 6A01                    	push 1	; Number of arguments
 16864 0000C08C 488B0425[15140000]      	mov rax, qword [free_var_94]	; free var list->string
 16865 0000C094 803805                  	cmp byte [rax], T_undefined
 16866 0000C097 0F84D7910000            	je L_error_fvar_undefined
 16867 0000C09D 803804                  	cmp byte [rax], T_closure
 16868 0000C0A0 0F8552920000            	jne L_error_non_closure
 16869 0000C0A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16870 0000C0A9 FF7508                  	push qword [rbp + 8]
 16871 0000C0AC FF7500                  	push qword [rbp]
 16872 0000C0AF 41BA05000000            	mov r10, 1 + 4
 16873 0000C0B5 4C8B4518                	mov r8, COUNT
 16874 0000C0B9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 16875 0000C0BE 4C8D4DF8                	lea r9, [rbp - 8]
 16876                                  .L_tc_recycle_frame_loop_0262:
 16877 0000C0C2 4983FA00                	cmp r10, 0
 16878 0000C0C6 7413                    	je .L_tc_recycle_frame_done_0262
 16879 0000C0C8 4D8B19                  	mov r11, qword [r9]
 16880 0000C0CB 4D8918                  	mov qword [r8], r11
 16881 0000C0CE 49FFCA                  	dec r10
 16882 0000C0D1 4983E808                	sub r8, 8
 16883 0000C0D5 4983E908                	sub r9, 8
 16884 0000C0D9 EBE7                    	jmp .L_tc_recycle_frame_loop_0262
 16885                                  .L_tc_recycle_frame_done_0262:
 16886 0000C0DB 498D6008                	lea rsp, [r8 + 8]
 16887 0000C0DF 5D                      	pop rbp
 16888 0000C0E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16889 0000C0E3 C9                      	leave
 16890 0000C0E4 C21800                  	ret AND_KILL_FRAME(1)
 16891                                  .L_lambda_simple_end_01d6:	; new closure is in rax
 16892 0000C0E7 C9                      	leave
 16893 0000C0E8 C21800                  	ret AND_KILL_FRAME(1)
 16894                                  .L_lambda_simple_end_01d5:	; new closure is in rax
 16895 0000C0EB 50                      	push rax
 16896 0000C0EC 6A01                    	push 1	; arg count
 16897 0000C0EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16898 0000C0F3 E8A9920000              	call malloc
 16899 0000C0F8 50                      	push rax
 16900 0000C0F9 BF00000000              	mov rdi, 8 * 0	; new rib
 16901 0000C0FE E89E920000              	call malloc
 16902 0000C103 50                      	push rax
 16903 0000C104 BF08000000              	mov rdi, 8 * 1	; extended env
 16904 0000C109 E893920000              	call malloc
 16905 0000C10E 488B7D10                	mov rdi, ENV
 16906 0000C112 BE00000000              	mov rsi, 0
 16907 0000C117 BA01000000              	mov rdx, 1
 16908                                  .L_lambda_simple_env_loop_01d7:	; ext_env[i + 1] <-- env[i]
 16909 0000C11C 4883FE00                	cmp rsi, 0
 16910 0000C120 7410                    	je .L_lambda_simple_env_end_01d7
 16911 0000C122 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16912 0000C126 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16913 0000C12A 48FFC6                  	inc rsi
 16914 0000C12D 48FFC2                  	inc rdx
 16915 0000C130 EBEA                    	jmp .L_lambda_simple_env_loop_01d7
 16916                                  .L_lambda_simple_env_end_01d7:
 16917 0000C132 5B                      	pop rbx
 16918 0000C133 BE00000000              	mov rsi, 0
 16919                                  .L_lambda_simple_params_loop_01d7:	; copy params
 16920 0000C138 4883FE00                	cmp rsi, 0
 16921 0000C13C 740E                    	je .L_lambda_simple_params_end_01d7
 16922 0000C13E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16923 0000C143 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16924 0000C147 48FFC6                  	inc rsi
 16925 0000C14A EBEC                    	jmp .L_lambda_simple_params_loop_01d7
 16926                                  .L_lambda_simple_params_end_01d7:
 16927 0000C14C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16928 0000C14F 4889C3                  	mov rbx, rax
 16929 0000C152 58                      	pop rax
 16930 0000C153 C60004                  	mov byte [rax], T_closure
 16931 0000C156 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16932 0000C15A 48C74009[67C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d7
 16933 0000C162 E98D000000              	jmp .L_lambda_simple_end_01d7
 16934                                  .L_lambda_simple_code_01d7:	; lambda-simple body
 16935 0000C167 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16936 0000C16D 740B                    	je .L_lambda_simple_arity_check_ok_01d7
 16937 0000C16F FF742410                	push qword [rsp + 8 * 2]
 16938 0000C173 6A01                    	push 1
 16939 0000C175 E9E0910000              	jmp L_error_incorrect_arity_simple
 16940                                  .L_lambda_simple_arity_check_ok_01d7:
 16941 0000C17A C8000000                	enter 0, 0
 16942                                  	; preparing a non-tail-call
 16943 0000C17E 488B0425[8E120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 16944 0000C186 803805                  	cmp byte [rax], T_undefined
 16945 0000C189 0F84E5900000            	je L_error_fvar_undefined
 16946 0000C18F 50                      	push rax
 16947 0000C190 6A01                    	push 1	; arg count
 16948 0000C192 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 16949 0000C196 803804                  	cmp byte [rax], T_closure
 16950 0000C199 0F8559910000            	jne L_error_non_closure
 16951 0000C19F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16952 0000C1A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16953 0000C1A5 48890425[35160000]      	mov qword [free_var_126], rax
 16954 0000C1AD 48B8-                   	mov rax, sob_void
 16954 0000C1AF [0000000000000000] 
 16955                                  
 16956                                  	; preparing a non-tail-call
 16957 0000C1B7 488B0425[9F120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 16958 0000C1BF 803805                  	cmp byte [rax], T_undefined
 16959 0000C1C2 0F84AC900000            	je L_error_fvar_undefined
 16960 0000C1C8 50                      	push rax
 16961 0000C1C9 6A01                    	push 1	; arg count
 16962 0000C1CB 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 16963 0000C1CF 803804                  	cmp byte [rax], T_closure
 16964 0000C1D2 0F8520910000            	jne L_error_non_closure
 16965 0000C1D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16966 0000C1DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 16967 0000C1DE 48890425[9B160000]      	mov qword [free_var_132], rax
 16968 0000C1E6 48B8-                   	mov rax, sob_void
 16968 0000C1E8 [0000000000000000] 
 16969 0000C1F0 C9                      	leave
 16970 0000C1F1 C21800                  	ret AND_KILL_FRAME(1)
 16971                                  .L_lambda_simple_end_01d7:	; new closure is in rax
 16972 0000C1F4 803804                  	cmp byte [rax], T_closure
 16973 0000C1F7 0F85FB900000            	jne L_error_non_closure
 16974 0000C1FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 16975 0000C200 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16976                                  
 16977 0000C203 4889C7                  	mov rdi, rax
 16978 0000C206 E8EB930000              	call print_sexpr_if_not_void
 16979 0000C20B 48B8-                   	mov rax, L_constants + 0
 16979 0000C20D [0000000000000000] 
 16980 0000C215 48890425[BD160000]      	mov qword [free_var_134], rax
 16981 0000C21D 48B8-                   	mov rax, sob_void
 16981 0000C21F [0000000000000000] 
 16982                                  
 16983 0000C227 4889C7                  	mov rdi, rax
 16984 0000C22A E8C7930000              	call print_sexpr_if_not_void
 16985 0000C22F 48B8-                   	mov rax, L_constants + 0
 16985 0000C231 [0000000000000000] 
 16986 0000C239 48890425[AC160000]      	mov qword [free_var_133], rax
 16987 0000C241 48B8-                   	mov rax, sob_void
 16987 0000C243 [0000000000000000] 
 16988                                  
 16989 0000C24B 4889C7                  	mov rdi, rax
 16990 0000C24E E8A3930000              	call print_sexpr_if_not_void
 16991 0000C253 48B8-                   	mov rax, L_constants + 0
 16991 0000C255 [0000000000000000] 
 16992 0000C25D 48890425[CE160000]      	mov qword [free_var_135], rax
 16993 0000C265 48B8-                   	mov rax, sob_void
 16993 0000C267 [0000000000000000] 
 16994                                  
 16995 0000C26F 4889C7                  	mov rdi, rax
 16996 0000C272 E87F930000              	call print_sexpr_if_not_void
 16997 0000C277 48B8-                   	mov rax, L_constants + 0
 16997 0000C279 [0000000000000000] 
 16998 0000C281 48890425[DF160000]      	mov qword [free_var_136], rax
 16999 0000C289 48B8-                   	mov rax, sob_void
 16999 0000C28B [0000000000000000] 
 17000                                  
 17001 0000C293 4889C7                  	mov rdi, rax
 17002 0000C296 E85B930000              	call print_sexpr_if_not_void
 17003 0000C29B 48B8-                   	mov rax, L_constants + 0
 17003 0000C29D [0000000000000000] 
 17004 0000C2A5 48890425[F0160000]      	mov qword [free_var_137], rax
 17005 0000C2AD 48B8-                   	mov rax, sob_void
 17005 0000C2AF [0000000000000000] 
 17006                                  
 17007 0000C2B7 4889C7                  	mov rdi, rax
 17008 0000C2BA E837930000              	call print_sexpr_if_not_void
 17009 0000C2BF 48B8-                   	mov rax, L_constants + 0
 17009 0000C2C1 [0000000000000000] 
 17010 0000C2C9 48890425[F1150000]      	mov qword [free_var_122], rax
 17011 0000C2D1 48B8-                   	mov rax, sob_void
 17011 0000C2D3 [0000000000000000] 
 17012                                  
 17013 0000C2DB 4889C7                  	mov rdi, rax
 17014 0000C2DE E813930000              	call print_sexpr_if_not_void
 17015 0000C2E3 48B8-                   	mov rax, L_constants + 0
 17015 0000C2E5 [0000000000000000] 
 17016 0000C2ED 48890425[E0150000]      	mov qword [free_var_121], rax
 17017 0000C2F5 48B8-                   	mov rax, sob_void
 17017 0000C2F7 [0000000000000000] 
 17018                                  
 17019 0000C2FF 4889C7                  	mov rdi, rax
 17020 0000C302 E8EF920000              	call print_sexpr_if_not_void
 17021 0000C307 48B8-                   	mov rax, L_constants + 0
 17021 0000C309 [0000000000000000] 
 17022 0000C311 48890425[02160000]      	mov qword [free_var_123], rax
 17023 0000C319 48B8-                   	mov rax, sob_void
 17023 0000C31B [0000000000000000] 
 17024                                  
 17025 0000C323 4889C7                  	mov rdi, rax
 17026 0000C326 E8CB920000              	call print_sexpr_if_not_void
 17027 0000C32B 48B8-                   	mov rax, L_constants + 0
 17027 0000C32D [0000000000000000] 
 17028 0000C335 48890425[13160000]      	mov qword [free_var_124], rax
 17029 0000C33D 48B8-                   	mov rax, sob_void
 17029 0000C33F [0000000000000000] 
 17030                                  
 17031 0000C347 4889C7                  	mov rdi, rax
 17032 0000C34A E8A7920000              	call print_sexpr_if_not_void
 17033 0000C34F 48B8-                   	mov rax, L_constants + 0
 17033 0000C351 [0000000000000000] 
 17034 0000C359 48890425[24160000]      	mov qword [free_var_125], rax
 17035 0000C361 48B8-                   	mov rax, sob_void
 17035 0000C363 [0000000000000000] 
 17036                                  
 17037 0000C36B 4889C7                  	mov rdi, rax
 17038 0000C36E E883920000              	call print_sexpr_if_not_void
 17039                                  	; preparing a non-tail-call
 17040 0000C373 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17041 0000C378 E824900000              	call malloc
 17042 0000C37D 50                      	push rax
 17043 0000C37E BF00000000              	mov rdi, 8 * 0	; new rib
 17044 0000C383 E819900000              	call malloc
 17045 0000C388 50                      	push rax
 17046 0000C389 BF08000000              	mov rdi, 8 * 1	; extended env
 17047 0000C38E E80E900000              	call malloc
 17048 0000C393 488B7D10                	mov rdi, ENV
 17049 0000C397 BE00000000              	mov rsi, 0
 17050 0000C39C BA01000000              	mov rdx, 1
 17051                                  .L_lambda_simple_env_loop_01d8:	; ext_env[i + 1] <-- env[i]
 17052 0000C3A1 4883FE00                	cmp rsi, 0
 17053 0000C3A5 7410                    	je .L_lambda_simple_env_end_01d8
 17054 0000C3A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17055 0000C3AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17056 0000C3AF 48FFC6                  	inc rsi
 17057 0000C3B2 48FFC2                  	inc rdx
 17058 0000C3B5 EBEA                    	jmp .L_lambda_simple_env_loop_01d8
 17059                                  .L_lambda_simple_env_end_01d8:
 17060 0000C3B7 5B                      	pop rbx
 17061 0000C3B8 BE00000000              	mov rsi, 0
 17062                                  .L_lambda_simple_params_loop_01d8:	; copy params
 17063 0000C3BD 4883FE00                	cmp rsi, 0
 17064 0000C3C1 740E                    	je .L_lambda_simple_params_end_01d8
 17065 0000C3C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17066 0000C3C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17067 0000C3CC 48FFC6                  	inc rsi
 17068 0000C3CF EBEC                    	jmp .L_lambda_simple_params_loop_01d8
 17069                                  .L_lambda_simple_params_end_01d8:
 17070 0000C3D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17071 0000C3D4 4889C3                  	mov rbx, rax
 17072 0000C3D7 58                      	pop rax
 17073 0000C3D8 C60004                  	mov byte [rax], T_closure
 17074 0000C3DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17075 0000C3DF 48C74009[ECC30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d8
 17076 0000C3E7 E99F0C0000              	jmp .L_lambda_simple_end_01d8
 17077                                  .L_lambda_simple_code_01d8:	; lambda-simple body
 17078 0000C3EC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17079 0000C3F2 740B                    	je .L_lambda_simple_arity_check_ok_01d8
 17080 0000C3F4 FF742410                	push qword [rsp + 8 * 2]
 17081 0000C3F8 6A02                    	push 2
 17082 0000C3FA E95B8F0000              	jmp L_error_incorrect_arity_simple
 17083                                  .L_lambda_simple_arity_check_ok_01d8:
 17084 0000C3FF C8000000                	enter 0, 0
 17085                                  	; Initiating tail-call optimization
 17086 0000C403 48B8-                   	mov rax, L_constants + 2007
 17086 0000C405 [D707000000000000] 
 17087 0000C40D 50                      	push rax
 17088 0000C40E 6A01                    	push 1	; Number of arguments
 17089 0000C410 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17090 0000C415 E8878F0000              	call malloc
 17091 0000C41A 50                      	push rax
 17092 0000C41B BF10000000              	mov rdi, 8 * 2	; new rib
 17093 0000C420 E87C8F0000              	call malloc
 17094 0000C425 50                      	push rax
 17095 0000C426 BF10000000              	mov rdi, 8 * 2	; extended env
 17096 0000C42B E8718F0000              	call malloc
 17097 0000C430 488B7D10                	mov rdi, ENV
 17098 0000C434 BE00000000              	mov rsi, 0
 17099 0000C439 BA01000000              	mov rdx, 1
 17100                                  .L_lambda_simple_env_loop_01d9:	; ext_env[i + 1] <-- env[i]
 17101 0000C43E 4883FE01                	cmp rsi, 1
 17102 0000C442 7410                    	je .L_lambda_simple_env_end_01d9
 17103 0000C444 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17104 0000C448 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17105 0000C44C 48FFC6                  	inc rsi
 17106 0000C44F 48FFC2                  	inc rdx
 17107 0000C452 EBEA                    	jmp .L_lambda_simple_env_loop_01d9
 17108                                  .L_lambda_simple_env_end_01d9:
 17109 0000C454 5B                      	pop rbx
 17110 0000C455 BE00000000              	mov rsi, 0
 17111                                  .L_lambda_simple_params_loop_01d9:	; copy params
 17112 0000C45A 4883FE02                	cmp rsi, 2
 17113 0000C45E 740E                    	je .L_lambda_simple_params_end_01d9
 17114 0000C460 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17115 0000C465 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17116 0000C469 48FFC6                  	inc rsi
 17117 0000C46C EBEC                    	jmp .L_lambda_simple_params_loop_01d9
 17118                                  .L_lambda_simple_params_end_01d9:
 17119 0000C46E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17120 0000C471 4889C3                  	mov rbx, rax
 17121 0000C474 58                      	pop rax
 17122 0000C475 C60004                  	mov byte [rax], T_closure
 17123 0000C478 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17124 0000C47C 48C74009[89C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01d9
 17125 0000C484 E9B80B0000              	jmp .L_lambda_simple_end_01d9
 17126                                  .L_lambda_simple_code_01d9:	; lambda-simple body
 17127 0000C489 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17128 0000C48F 740B                    	je .L_lambda_simple_arity_check_ok_01d9
 17129 0000C491 FF742410                	push qword [rsp + 8 * 2]
 17130 0000C495 6A01                    	push 1
 17131 0000C497 E9BE8E0000              	jmp L_error_incorrect_arity_simple
 17132                                  .L_lambda_simple_arity_check_ok_01d9:
 17133 0000C49C C8000000                	enter 0, 0
 17134 0000C4A0 BF08000000              	mov rdi, 8 * 1
 17135 0000C4A5 E8F78E0000              	call malloc
 17136 0000C4AA 488B5D20                	mov rbx, PARAM(0)
 17137 0000C4AE 488918                  	mov qword [rax], rbx
 17138 0000C4B1 48894520                	mov PARAM(0), rax
 17139 0000C4B5 48B8-                   	mov rax, sob_void
 17139 0000C4B7 [0000000000000000] 
 17140                                  
 17141 0000C4BF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17142 0000C4C4 E8D88E0000              	call malloc
 17143 0000C4C9 50                      	push rax
 17144 0000C4CA BF08000000              	mov rdi, 8 * 1	; new rib
 17145 0000C4CF E8CD8E0000              	call malloc
 17146 0000C4D4 50                      	push rax
 17147 0000C4D5 BF18000000              	mov rdi, 8 * 3	; extended env
 17148 0000C4DA E8C28E0000              	call malloc
 17149 0000C4DF 488B7D10                	mov rdi, ENV
 17150 0000C4E3 BE00000000              	mov rsi, 0
 17151 0000C4E8 BA01000000              	mov rdx, 1
 17152                                  .L_lambda_simple_env_loop_01da:	; ext_env[i + 1] <-- env[i]
 17153 0000C4ED 4883FE02                	cmp rsi, 2
 17154 0000C4F1 7410                    	je .L_lambda_simple_env_end_01da
 17155 0000C4F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17156 0000C4F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17157 0000C4FB 48FFC6                  	inc rsi
 17158 0000C4FE 48FFC2                  	inc rdx
 17159 0000C501 EBEA                    	jmp .L_lambda_simple_env_loop_01da
 17160                                  .L_lambda_simple_env_end_01da:
 17161 0000C503 5B                      	pop rbx
 17162 0000C504 BE00000000              	mov rsi, 0
 17163                                  .L_lambda_simple_params_loop_01da:	; copy params
 17164 0000C509 4883FE01                	cmp rsi, 1
 17165 0000C50D 740E                    	je .L_lambda_simple_params_end_01da
 17166 0000C50F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17167 0000C514 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17168 0000C518 48FFC6                  	inc rsi
 17169 0000C51B EBEC                    	jmp .L_lambda_simple_params_loop_01da
 17170                                  .L_lambda_simple_params_end_01da:
 17171 0000C51D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17172 0000C520 4889C3                  	mov rbx, rax
 17173 0000C523 58                      	pop rax
 17174 0000C524 C60004                  	mov byte [rax], T_closure
 17175 0000C527 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17176 0000C52B 48C74009[38C50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01da
 17177 0000C533 E984020000              	jmp .L_lambda_simple_end_01da
 17178                                  .L_lambda_simple_code_01da:	; lambda-simple body
 17179 0000C538 48837C241005            	cmp qword [rsp + 8 * 2], 5
 17180 0000C53E 740B                    	je .L_lambda_simple_arity_check_ok_01da
 17181 0000C540 FF742410                	push qword [rsp + 8 * 2]
 17182 0000C544 6A05                    	push 5
 17183 0000C546 E90F8E0000              	jmp L_error_incorrect_arity_simple
 17184                                  .L_lambda_simple_arity_check_ok_01da:
 17185 0000C54B C8000000                	enter 0, 0
 17186                                  	; preparing a non-tail-call
 17187 0000C54F 488B4530                	mov rax, PARAM(2)	; param len1
 17188 0000C553 50                      	push rax
 17189 0000C554 488B4520                	mov rax, PARAM(0)	; param i
 17190 0000C558 50                      	push rax
 17191 0000C559 6A02                    	push 2	; arg count
 17192 0000C55B 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 17193 0000C563 803805                  	cmp byte [rax], T_undefined
 17194 0000C566 0F84088D0000            	je L_error_fvar_undefined
 17195 0000C56C 803804                  	cmp byte [rax], T_closure
 17196 0000C56F 0F85838D0000            	jne L_error_non_closure
 17197 0000C575 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17198 0000C578 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17199 0000C57B 483D[02000000]          	cmp rax, sob_boolean_false
 17200 0000C581 742E                    	je .L_if_else_0163
 17201                                  	; preparing a non-tail-call
 17202 0000C583 488B4540                	mov rax, PARAM(4)	; param len2
 17203 0000C587 50                      	push rax
 17204 0000C588 488B4530                	mov rax, PARAM(2)	; param len1
 17205 0000C58C 50                      	push rax
 17206 0000C58D 6A02                    	push 2	; arg count
 17207 0000C58F 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 17208 0000C597 803805                  	cmp byte [rax], T_undefined
 17209 0000C59A 0F84D48C0000            	je L_error_fvar_undefined
 17210 0000C5A0 803804                  	cmp byte [rax], T_closure
 17211 0000C5A3 0F854F8D0000            	jne L_error_non_closure
 17212 0000C5A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17213 0000C5AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17214 0000C5AF EB0A                    	jmp .L_if_end_0163
 17215                                  .L_if_else_0163:
 17216 0000C5B1 48B8-                   	mov rax, L_constants + 2
 17216 0000C5B3 [0200000000000000] 
 17217                                  .L_if_end_0163:
 17218 0000C5BB 483D[02000000]          	cmp rax, sob_boolean_false
 17219 0000C5C1 0F85F1010000            	jne .L_or_end_0023
 17220                                  
 17221                                  	; preparing a non-tail-call
 17222 0000C5C7 488B4530                	mov rax, PARAM(2)	; param len1
 17223 0000C5CB 50                      	push rax
 17224 0000C5CC 488B4520                	mov rax, PARAM(0)	; param i
 17225 0000C5D0 50                      	push rax
 17226 0000C5D1 6A02                    	push 2	; arg count
 17227 0000C5D3 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 17228 0000C5DB 803805                  	cmp byte [rax], T_undefined
 17229 0000C5DE 0F84908C0000            	je L_error_fvar_undefined
 17230 0000C5E4 803804                  	cmp byte [rax], T_closure
 17231 0000C5E7 0F850B8D0000            	jne L_error_non_closure
 17232 0000C5ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 17233 0000C5F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17234 0000C5F3 483D[02000000]          	cmp rax, sob_boolean_false
 17235 0000C5F9 0F84AF010000            	je .L_if_else_0165
 17236                                  	; preparing a non-tail-call
 17237                                  	; preparing a non-tail-call
 17238 0000C5FF 488B4520                	mov rax, PARAM(0)	; param i
 17239 0000C603 50                      	push rax
 17240 0000C604 488B4538                	mov rax, PARAM(3)	; param str2
 17241 0000C608 50                      	push rax
 17242 0000C609 6A02                    	push 2	; arg count
 17243 0000C60B 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17244 0000C613 803805                  	cmp byte [rax], T_undefined
 17245 0000C616 0F84588C0000            	je L_error_fvar_undefined
 17246 0000C61C 803804                  	cmp byte [rax], T_closure
 17247 0000C61F 0F85D38C0000            	jne L_error_non_closure
 17248 0000C625 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17249 0000C628 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17250 0000C62B 50                      	push rax
 17251                                  	; preparing a non-tail-call
 17252 0000C62C 488B4520                	mov rax, PARAM(0)	; param i
 17253 0000C630 50                      	push rax
 17254 0000C631 488B4528                	mov rax, PARAM(1)	; param str1
 17255 0000C635 50                      	push rax
 17256 0000C636 6A02                    	push 2	; arg count
 17257 0000C638 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17258 0000C640 803805                  	cmp byte [rax], T_undefined
 17259 0000C643 0F842B8C0000            	je L_error_fvar_undefined
 17260 0000C649 803804                  	cmp byte [rax], T_closure
 17261 0000C64C 0F85A68C0000            	jne L_error_non_closure
 17262 0000C652 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17263 0000C655 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17264 0000C658 50                      	push rax
 17265 0000C659 6A02                    	push 2	; arg count
 17266 0000C65B 488B4510                	mov rax, ENV
 17267 0000C65F 488B4008                	mov rax, qword [rax + 8 * 1]
 17268 0000C663 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 17269 0000C666 803804                  	cmp byte [rax], T_closure
 17270 0000C669 0F85898C0000            	jne L_error_non_closure
 17271 0000C66F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17272 0000C672 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17273 0000C675 483D[02000000]          	cmp rax, sob_boolean_false
 17274 0000C67B 0F852B010000            	jne .L_or_end_0024
 17275                                  
 17276                                  	; preparing a non-tail-call
 17277                                  	; preparing a non-tail-call
 17278 0000C681 488B4520                	mov rax, PARAM(0)	; param i
 17279 0000C685 50                      	push rax
 17280 0000C686 488B4538                	mov rax, PARAM(3)	; param str2
 17281 0000C68A 50                      	push rax
 17282 0000C68B 6A02                    	push 2	; arg count
 17283 0000C68D 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17284 0000C695 803805                  	cmp byte [rax], T_undefined
 17285 0000C698 0F84D68B0000            	je L_error_fvar_undefined
 17286 0000C69E 803804                  	cmp byte [rax], T_closure
 17287 0000C6A1 0F85518C0000            	jne L_error_non_closure
 17288 0000C6A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17289 0000C6AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 17290 0000C6AD 50                      	push rax
 17291                                  	; preparing a non-tail-call
 17292 0000C6AE 488B4520                	mov rax, PARAM(0)	; param i
 17293 0000C6B2 50                      	push rax
 17294 0000C6B3 488B4528                	mov rax, PARAM(1)	; param str1
 17295 0000C6B7 50                      	push rax
 17296 0000C6B8 6A02                    	push 2	; arg count
 17297 0000C6BA 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17298 0000C6C2 803805                  	cmp byte [rax], T_undefined
 17299 0000C6C5 0F84A98B0000            	je L_error_fvar_undefined
 17300 0000C6CB 803804                  	cmp byte [rax], T_closure
 17301 0000C6CE 0F85248C0000            	jne L_error_non_closure
 17302 0000C6D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17303 0000C6D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17304 0000C6DA 50                      	push rax
 17305 0000C6DB 6A02                    	push 2	; arg count
 17306 0000C6DD 488B4510                	mov rax, ENV
 17307 0000C6E1 488B4008                	mov rax, qword [rax + 8 * 1]
 17308 0000C6E5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 17309 0000C6E9 803804                  	cmp byte [rax], T_closure
 17310 0000C6EC 0F85068C0000            	jne L_error_non_closure
 17311 0000C6F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17312 0000C6F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17313 0000C6F8 483D[02000000]          	cmp rax, sob_boolean_false
 17314 0000C6FE 0F849E000000            	je .L_if_else_0164
 17315                                  	; Initiating tail-call optimization
 17316 0000C704 488B4540                	mov rax, PARAM(4)	; param len2
 17317 0000C708 50                      	push rax
 17318 0000C709 488B4538                	mov rax, PARAM(3)	; param str2
 17319 0000C70D 50                      	push rax
 17320 0000C70E 488B4530                	mov rax, PARAM(2)	; param len1
 17321 0000C712 50                      	push rax
 17322 0000C713 488B4528                	mov rax, PARAM(1)	; param str1
 17323 0000C717 50                      	push rax
 17324                                  	; preparing a non-tail-call
 17325 0000C718 48B8-                   	mov rax, L_constants + 2270
 17325 0000C71A [DE08000000000000] 
 17326 0000C722 50                      	push rax
 17327 0000C723 488B4520                	mov rax, PARAM(0)	; param i
 17328 0000C727 50                      	push rax
 17329 0000C728 6A02                    	push 2	; arg count
 17330 0000C72A 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 17331 0000C732 803805                  	cmp byte [rax], T_undefined
 17332 0000C735 0F84398B0000            	je L_error_fvar_undefined
 17333 0000C73B 803804                  	cmp byte [rax], T_closure
 17334 0000C73E 0F85B48B0000            	jne L_error_non_closure
 17335 0000C744 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17336 0000C747 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17337 0000C74A 50                      	push rax
 17338 0000C74B 6A05                    	push 5	; Number of arguments
 17339 0000C74D 488B4510                	mov rax, ENV
 17340 0000C751 488B00                  	mov rax, qword [rax + 8 * 0]
 17341 0000C754 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17342 0000C757 488B00                  	mov rax, qword [rax]
 17343 0000C75A 803804                  	cmp byte [rax], T_closure
 17344 0000C75D 0F85958B0000            	jne L_error_non_closure
 17345 0000C763 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17346 0000C766 FF7508                  	push qword [rbp + 8]
 17347 0000C769 FF7500                  	push qword [rbp]
 17348 0000C76C 41BA09000000            	mov r10, 5 + 4
 17349 0000C772 4C8B4518                	mov r8, COUNT
 17350 0000C776 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17351 0000C77B 4C8D4DF8                	lea r9, [rbp - 8]
 17352                                  .L_tc_recycle_frame_loop_0263:
 17353 0000C77F 4983FA00                	cmp r10, 0
 17354 0000C783 7413                    	je .L_tc_recycle_frame_done_0263
 17355 0000C785 4D8B19                  	mov r11, qword [r9]
 17356 0000C788 4D8918                  	mov qword [r8], r11
 17357 0000C78B 49FFCA                  	dec r10
 17358 0000C78E 4983E808                	sub r8, 8
 17359 0000C792 4983E908                	sub r9, 8
 17360 0000C796 EBE7                    	jmp .L_tc_recycle_frame_loop_0263
 17361                                  .L_tc_recycle_frame_done_0263:
 17362 0000C798 498D6008                	lea rsp, [r8 + 8]
 17363 0000C79C 5D                      	pop rbp
 17364 0000C79D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17365 0000C7A0 EB0A                    	jmp .L_if_end_0164
 17366                                  .L_if_else_0164:
 17367 0000C7A2 48B8-                   	mov rax, L_constants + 2
 17367 0000C7A4 [0200000000000000] 
 17368                                  .L_if_end_0164:
 17369                                  .L_or_end_0024:
 17370 0000C7AC EB0A                    	jmp .L_if_end_0165
 17371                                  .L_if_else_0165:
 17372 0000C7AE 48B8-                   	mov rax, L_constants + 2
 17372 0000C7B0 [0200000000000000] 
 17373                                  .L_if_end_0165:
 17374                                  .L_or_end_0023:
 17375 0000C7B8 C9                      	leave
 17376 0000C7B9 C23800                  	ret AND_KILL_FRAME(5)
 17377                                  .L_lambda_simple_end_01da:	; new closure is in rax
 17378 0000C7BC 50                      	push rax
 17379 0000C7BD 488B4520                	mov rax, PARAM(0)	; param run
 17380 0000C7C1 8F00                    	pop qword [rax]
 17381 0000C7C3 48B8-                   	mov rax, sob_void
 17381 0000C7C5 [0000000000000000] 
 17382                                  
 17383                                  	; preparing a non-tail-call
 17384 0000C7CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17385 0000C7D2 E8CA8B0000              	call malloc
 17386 0000C7D7 50                      	push rax
 17387 0000C7D8 BF08000000              	mov rdi, 8 * 1	; new rib
 17388 0000C7DD E8BF8B0000              	call malloc
 17389 0000C7E2 50                      	push rax
 17390 0000C7E3 BF18000000              	mov rdi, 8 * 3	; extended env
 17391 0000C7E8 E8B48B0000              	call malloc
 17392 0000C7ED 488B7D10                	mov rdi, ENV
 17393 0000C7F1 BE00000000              	mov rsi, 0
 17394 0000C7F6 BA01000000              	mov rdx, 1
 17395                                  .L_lambda_simple_env_loop_01db:	; ext_env[i + 1] <-- env[i]
 17396 0000C7FB 4883FE02                	cmp rsi, 2
 17397 0000C7FF 7410                    	je .L_lambda_simple_env_end_01db
 17398 0000C801 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17399 0000C805 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17400 0000C809 48FFC6                  	inc rsi
 17401 0000C80C 48FFC2                  	inc rdx
 17402 0000C80F EBEA                    	jmp .L_lambda_simple_env_loop_01db
 17403                                  .L_lambda_simple_env_end_01db:
 17404 0000C811 5B                      	pop rbx
 17405 0000C812 BE00000000              	mov rsi, 0
 17406                                  .L_lambda_simple_params_loop_01db:	; copy params
 17407 0000C817 4883FE01                	cmp rsi, 1
 17408 0000C81B 740E                    	je .L_lambda_simple_params_end_01db
 17409 0000C81D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17410 0000C822 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17411 0000C826 48FFC6                  	inc rsi
 17412 0000C829 EBEC                    	jmp .L_lambda_simple_params_loop_01db
 17413                                  .L_lambda_simple_params_end_01db:
 17414 0000C82B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17415 0000C82E 4889C3                  	mov rbx, rax
 17416 0000C831 58                      	pop rax
 17417 0000C832 C60004                  	mov byte [rax], T_closure
 17418 0000C835 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17419 0000C839 48C74009[46C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01db
 17420 0000C841 E988020000              	jmp .L_lambda_simple_end_01db
 17421                                  .L_lambda_simple_code_01db:	; lambda-simple body
 17422 0000C846 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17423 0000C84C 740B                    	je .L_lambda_simple_arity_check_ok_01db
 17424 0000C84E FF742410                	push qword [rsp + 8 * 2]
 17425 0000C852 6A02                    	push 2
 17426 0000C854 E9018B0000              	jmp L_error_incorrect_arity_simple
 17427                                  .L_lambda_simple_arity_check_ok_01db:
 17428 0000C859 C8000000                	enter 0, 0
 17429                                  	; Initiating tail-call optimization
 17430                                  	; preparing a non-tail-call
 17431 0000C85D 488B4528                	mov rax, PARAM(1)	; param str2
 17432 0000C861 50                      	push rax
 17433 0000C862 6A01                    	push 1	; arg count
 17434 0000C864 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 17435 0000C86C 803805                  	cmp byte [rax], T_undefined
 17436 0000C86F 0F84FF890000            	je L_error_fvar_undefined
 17437 0000C875 803804                  	cmp byte [rax], T_closure
 17438 0000C878 0F857A8A0000            	jne L_error_non_closure
 17439 0000C87E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17440 0000C881 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17441 0000C884 50                      	push rax
 17442                                  	; preparing a non-tail-call
 17443 0000C885 488B4520                	mov rax, PARAM(0)	; param str1
 17444 0000C889 50                      	push rax
 17445 0000C88A 6A01                    	push 1	; arg count
 17446 0000C88C 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 17447 0000C894 803805                  	cmp byte [rax], T_undefined
 17448 0000C897 0F84D7890000            	je L_error_fvar_undefined
 17449 0000C89D 803804                  	cmp byte [rax], T_closure
 17450 0000C8A0 0F85528A0000            	jne L_error_non_closure
 17451 0000C8A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17452 0000C8A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17453 0000C8AC 50                      	push rax
 17454 0000C8AD 6A02                    	push 2	; Number of arguments
 17455 0000C8AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17456 0000C8B4 E8E88A0000              	call malloc
 17457 0000C8B9 50                      	push rax
 17458 0000C8BA BF10000000              	mov rdi, 8 * 2	; new rib
 17459 0000C8BF E8DD8A0000              	call malloc
 17460 0000C8C4 50                      	push rax
 17461 0000C8C5 BF20000000              	mov rdi, 8 * 4	; extended env
 17462 0000C8CA E8D28A0000              	call malloc
 17463 0000C8CF 488B7D10                	mov rdi, ENV
 17464 0000C8D3 BE00000000              	mov rsi, 0
 17465 0000C8D8 BA01000000              	mov rdx, 1
 17466                                  .L_lambda_simple_env_loop_01dc:	; ext_env[i + 1] <-- env[i]
 17467 0000C8DD 4883FE03                	cmp rsi, 3
 17468 0000C8E1 7410                    	je .L_lambda_simple_env_end_01dc
 17469 0000C8E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17470 0000C8E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17471 0000C8EB 48FFC6                  	inc rsi
 17472 0000C8EE 48FFC2                  	inc rdx
 17473 0000C8F1 EBEA                    	jmp .L_lambda_simple_env_loop_01dc
 17474                                  .L_lambda_simple_env_end_01dc:
 17475 0000C8F3 5B                      	pop rbx
 17476 0000C8F4 BE00000000              	mov rsi, 0
 17477                                  .L_lambda_simple_params_loop_01dc:	; copy params
 17478 0000C8F9 4883FE02                	cmp rsi, 2
 17479 0000C8FD 740E                    	je .L_lambda_simple_params_end_01dc
 17480 0000C8FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17481 0000C904 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17482 0000C908 48FFC6                  	inc rsi
 17483 0000C90B EBEC                    	jmp .L_lambda_simple_params_loop_01dc
 17484                                  .L_lambda_simple_params_end_01dc:
 17485 0000C90D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17486 0000C910 4889C3                  	mov rbx, rax
 17487 0000C913 58                      	pop rax
 17488 0000C914 C60004                  	mov byte [rax], T_closure
 17489 0000C917 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17490 0000C91B 48C74009[28C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01dc
 17491 0000C923 E95C010000              	jmp .L_lambda_simple_end_01dc
 17492                                  .L_lambda_simple_code_01dc:	; lambda-simple body
 17493 0000C928 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17494 0000C92E 740B                    	je .L_lambda_simple_arity_check_ok_01dc
 17495 0000C930 FF742410                	push qword [rsp + 8 * 2]
 17496 0000C934 6A02                    	push 2
 17497 0000C936 E91F8A0000              	jmp L_error_incorrect_arity_simple
 17498                                  .L_lambda_simple_arity_check_ok_01dc:
 17499 0000C93B C8000000                	enter 0, 0
 17500                                  	; preparing a non-tail-call
 17501 0000C93F 488B4528                	mov rax, PARAM(1)	; param len2
 17502 0000C943 50                      	push rax
 17503 0000C944 488B4520                	mov rax, PARAM(0)	; param len1
 17504 0000C948 50                      	push rax
 17505 0000C949 6A02                    	push 2	; arg count
 17506 0000C94B 488B0425[2C0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17507 0000C953 803805                  	cmp byte [rax], T_undefined
 17508 0000C956 0F8418890000            	je L_error_fvar_undefined
 17509 0000C95C 803804                  	cmp byte [rax], T_closure
 17510 0000C95F 0F8593890000            	jne L_error_non_closure
 17511 0000C965 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17512 0000C968 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17513 0000C96B 483D[02000000]          	cmp rax, sob_boolean_false
 17514 0000C971 0F8487000000            	je .L_if_else_0166
 17515                                  	; Initiating tail-call optimization
 17516 0000C977 488B4528                	mov rax, PARAM(1)	; param len2
 17517 0000C97B 50                      	push rax
 17518 0000C97C 488B4510                	mov rax, ENV
 17519 0000C980 488B00                  	mov rax, qword [rax + 8 * 0]
 17520 0000C983 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 17521 0000C987 50                      	push rax
 17522 0000C988 488B4520                	mov rax, PARAM(0)	; param len1
 17523 0000C98C 50                      	push rax
 17524 0000C98D 488B4510                	mov rax, ENV
 17525 0000C991 488B00                  	mov rax, qword [rax + 8 * 0]
 17526 0000C994 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 17527 0000C997 50                      	push rax
 17528 0000C998 48B8-                   	mov rax, L_constants + 2135
 17528 0000C99A [5708000000000000] 
 17529 0000C9A2 50                      	push rax
 17530 0000C9A3 6A05                    	push 5	; Number of arguments
 17531 0000C9A5 488B4510                	mov rax, ENV
 17532 0000C9A9 488B4008                	mov rax, qword [rax + 8 * 1]
 17533 0000C9AD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17534 0000C9B0 488B00                  	mov rax, qword [rax]
 17535 0000C9B3 803804                  	cmp byte [rax], T_closure
 17536 0000C9B6 0F853C890000            	jne L_error_non_closure
 17537 0000C9BC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17538 0000C9BF FF7508                  	push qword [rbp + 8]
 17539 0000C9C2 FF7500                  	push qword [rbp]
 17540 0000C9C5 41BA09000000            	mov r10, 5 + 4
 17541 0000C9CB 4C8B4518                	mov r8, COUNT
 17542 0000C9CF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17543 0000C9D4 4C8D4DF8                	lea r9, [rbp - 8]
 17544                                  .L_tc_recycle_frame_loop_0264:
 17545 0000C9D8 4983FA00                	cmp r10, 0
 17546 0000C9DC 7413                    	je .L_tc_recycle_frame_done_0264
 17547 0000C9DE 4D8B19                  	mov r11, qword [r9]
 17548 0000C9E1 4D8918                  	mov qword [r8], r11
 17549 0000C9E4 49FFCA                  	dec r10
 17550 0000C9E7 4983E808                	sub r8, 8
 17551 0000C9EB 4983E908                	sub r9, 8
 17552 0000C9EF EBE7                    	jmp .L_tc_recycle_frame_loop_0264
 17553                                  .L_tc_recycle_frame_done_0264:
 17554 0000C9F1 498D6008                	lea rsp, [r8 + 8]
 17555 0000C9F5 5D                      	pop rbp
 17556 0000C9F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17557 0000C9F9 E982000000              	jmp .L_if_end_0166
 17558                                  .L_if_else_0166:
 17559                                  	; Initiating tail-call optimization
 17560 0000C9FE 488B4520                	mov rax, PARAM(0)	; param len1
 17561 0000CA02 50                      	push rax
 17562 0000CA03 488B4510                	mov rax, ENV
 17563 0000CA07 488B00                  	mov rax, qword [rax + 8 * 0]
 17564 0000CA0A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 17565 0000CA0D 50                      	push rax
 17566 0000CA0E 488B4528                	mov rax, PARAM(1)	; param len2
 17567 0000CA12 50                      	push rax
 17568 0000CA13 488B4510                	mov rax, ENV
 17569 0000CA17 488B00                  	mov rax, qword [rax + 8 * 0]
 17570 0000CA1A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 17571 0000CA1E 50                      	push rax
 17572 0000CA1F 48B8-                   	mov rax, L_constants + 2135
 17572 0000CA21 [5708000000000000] 
 17573 0000CA29 50                      	push rax
 17574 0000CA2A 6A05                    	push 5	; Number of arguments
 17575 0000CA2C 488B4510                	mov rax, ENV
 17576 0000CA30 488B4008                	mov rax, qword [rax + 8 * 1]
 17577 0000CA34 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17578 0000CA37 488B00                  	mov rax, qword [rax]
 17579 0000CA3A 803804                  	cmp byte [rax], T_closure
 17580 0000CA3D 0F85B5880000            	jne L_error_non_closure
 17581 0000CA43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17582 0000CA46 FF7508                  	push qword [rbp + 8]
 17583 0000CA49 FF7500                  	push qword [rbp]
 17584 0000CA4C 41BA09000000            	mov r10, 5 + 4
 17585 0000CA52 4C8B4518                	mov r8, COUNT
 17586 0000CA56 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17587 0000CA5B 4C8D4DF8                	lea r9, [rbp - 8]
 17588                                  .L_tc_recycle_frame_loop_0265:
 17589 0000CA5F 4983FA00                	cmp r10, 0
 17590 0000CA63 7413                    	je .L_tc_recycle_frame_done_0265
 17591 0000CA65 4D8B19                  	mov r11, qword [r9]
 17592 0000CA68 4D8918                  	mov qword [r8], r11
 17593 0000CA6B 49FFCA                  	dec r10
 17594 0000CA6E 4983E808                	sub r8, 8
 17595 0000CA72 4983E908                	sub r9, 8
 17596 0000CA76 EBE7                    	jmp .L_tc_recycle_frame_loop_0265
 17597                                  .L_tc_recycle_frame_done_0265:
 17598 0000CA78 498D6008                	lea rsp, [r8 + 8]
 17599 0000CA7C 5D                      	pop rbp
 17600 0000CA7D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17601                                  .L_if_end_0166:
 17602 0000CA80 C9                      	leave
 17603 0000CA81 C22000                  	ret AND_KILL_FRAME(2)
 17604                                  .L_lambda_simple_end_01dc:	; new closure is in rax
 17605 0000CA84 803804                  	cmp byte [rax], T_closure
 17606 0000CA87 0F856B880000            	jne L_error_non_closure
 17607 0000CA8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17608 0000CA90 FF7508                  	push qword [rbp + 8]
 17609 0000CA93 FF7500                  	push qword [rbp]
 17610 0000CA96 41BA06000000            	mov r10, 2 + 4
 17611 0000CA9C 4C8B4518                	mov r8, COUNT
 17612 0000CAA0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17613 0000CAA5 4C8D4DF8                	lea r9, [rbp - 8]
 17614                                  .L_tc_recycle_frame_loop_0266:
 17615 0000CAA9 4983FA00                	cmp r10, 0
 17616 0000CAAD 7413                    	je .L_tc_recycle_frame_done_0266
 17617 0000CAAF 4D8B19                  	mov r11, qword [r9]
 17618 0000CAB2 4D8918                  	mov qword [r8], r11
 17619 0000CAB5 49FFCA                  	dec r10
 17620 0000CAB8 4983E808                	sub r8, 8
 17621 0000CABC 4983E908                	sub r9, 8
 17622 0000CAC0 EBE7                    	jmp .L_tc_recycle_frame_loop_0266
 17623                                  .L_tc_recycle_frame_done_0266:
 17624 0000CAC2 498D6008                	lea rsp, [r8 + 8]
 17625 0000CAC6 5D                      	pop rbp
 17626 0000CAC7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17627 0000CACA C9                      	leave
 17628 0000CACB C22000                  	ret AND_KILL_FRAME(2)
 17629                                  .L_lambda_simple_end_01db:	; new closure is in rax
 17630 0000CACE 50                      	push rax
 17631 0000CACF 6A01                    	push 1	; arg count
 17632 0000CAD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17633 0000CAD6 E8C6880000              	call malloc
 17634 0000CADB 50                      	push rax
 17635 0000CADC BF08000000              	mov rdi, 8 * 1	; new rib
 17636 0000CAE1 E8BB880000              	call malloc
 17637 0000CAE6 50                      	push rax
 17638 0000CAE7 BF18000000              	mov rdi, 8 * 3	; extended env
 17639 0000CAEC E8B0880000              	call malloc
 17640 0000CAF1 488B7D10                	mov rdi, ENV
 17641 0000CAF5 BE00000000              	mov rsi, 0
 17642 0000CAFA BA01000000              	mov rdx, 1
 17643                                  .L_lambda_simple_env_loop_01dd:	; ext_env[i + 1] <-- env[i]
 17644 0000CAFF 4883FE02                	cmp rsi, 2
 17645 0000CB03 7410                    	je .L_lambda_simple_env_end_01dd
 17646 0000CB05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17647 0000CB09 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17648 0000CB0D 48FFC6                  	inc rsi
 17649 0000CB10 48FFC2                  	inc rdx
 17650 0000CB13 EBEA                    	jmp .L_lambda_simple_env_loop_01dd
 17651                                  .L_lambda_simple_env_end_01dd:
 17652 0000CB15 5B                      	pop rbx
 17653 0000CB16 BE00000000              	mov rsi, 0
 17654                                  .L_lambda_simple_params_loop_01dd:	; copy params
 17655 0000CB1B 4883FE01                	cmp rsi, 1
 17656 0000CB1F 740E                    	je .L_lambda_simple_params_end_01dd
 17657 0000CB21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17658 0000CB26 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17659 0000CB2A 48FFC6                  	inc rsi
 17660 0000CB2D EBEC                    	jmp .L_lambda_simple_params_loop_01dd
 17661                                  .L_lambda_simple_params_end_01dd:
 17662 0000CB2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17663 0000CB32 4889C3                  	mov rbx, rax
 17664 0000CB35 58                      	pop rax
 17665 0000CB36 C60004                  	mov byte [rax], T_closure
 17666 0000CB39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17667 0000CB3D 48C74009[4ACB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01dd
 17668 0000CB45 E9E4040000              	jmp .L_lambda_simple_end_01dd
 17669                                  .L_lambda_simple_code_01dd:	; lambda-simple body
 17670 0000CB4A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17671 0000CB50 740B                    	je .L_lambda_simple_arity_check_ok_01dd
 17672 0000CB52 FF742410                	push qword [rsp + 8 * 2]
 17673 0000CB56 6A01                    	push 1
 17674 0000CB58 E9FD870000              	jmp L_error_incorrect_arity_simple
 17675                                  .L_lambda_simple_arity_check_ok_01dd:
 17676 0000CB5D C8000000                	enter 0, 0
 17677                                  	; Initiating tail-call optimization
 17678 0000CB61 48B8-                   	mov rax, L_constants + 2007
 17678 0000CB63 [D707000000000000] 
 17679 0000CB6B 50                      	push rax
 17680 0000CB6C 6A01                    	push 1	; Number of arguments
 17681 0000CB6E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17682 0000CB73 E829880000              	call malloc
 17683 0000CB78 50                      	push rax
 17684 0000CB79 BF08000000              	mov rdi, 8 * 1	; new rib
 17685 0000CB7E E81E880000              	call malloc
 17686 0000CB83 50                      	push rax
 17687 0000CB84 BF20000000              	mov rdi, 8 * 4	; extended env
 17688 0000CB89 E813880000              	call malloc
 17689 0000CB8E 488B7D10                	mov rdi, ENV
 17690 0000CB92 BE00000000              	mov rsi, 0
 17691 0000CB97 BA01000000              	mov rdx, 1
 17692                                  .L_lambda_simple_env_loop_01de:	; ext_env[i + 1] <-- env[i]
 17693 0000CB9C 4883FE03                	cmp rsi, 3
 17694 0000CBA0 7410                    	je .L_lambda_simple_env_end_01de
 17695 0000CBA2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17696 0000CBA6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17697 0000CBAA 48FFC6                  	inc rsi
 17698 0000CBAD 48FFC2                  	inc rdx
 17699 0000CBB0 EBEA                    	jmp .L_lambda_simple_env_loop_01de
 17700                                  .L_lambda_simple_env_end_01de:
 17701 0000CBB2 5B                      	pop rbx
 17702 0000CBB3 BE00000000              	mov rsi, 0
 17703                                  .L_lambda_simple_params_loop_01de:	; copy params
 17704 0000CBB8 4883FE01                	cmp rsi, 1
 17705 0000CBBC 740E                    	je .L_lambda_simple_params_end_01de
 17706 0000CBBE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17707 0000CBC3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17708 0000CBC7 48FFC6                  	inc rsi
 17709 0000CBCA EBEC                    	jmp .L_lambda_simple_params_loop_01de
 17710                                  .L_lambda_simple_params_end_01de:
 17711 0000CBCC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17712 0000CBCF 4889C3                  	mov rbx, rax
 17713 0000CBD2 58                      	pop rax
 17714 0000CBD3 C60004                  	mov byte [rax], T_closure
 17715 0000CBD6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17716 0000CBDA 48C74009[E7CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01de
 17717 0000CBE2 E9FD030000              	jmp .L_lambda_simple_end_01de
 17718                                  .L_lambda_simple_code_01de:	; lambda-simple body
 17719 0000CBE7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17720 0000CBED 740B                    	je .L_lambda_simple_arity_check_ok_01de
 17721 0000CBEF FF742410                	push qword [rsp + 8 * 2]
 17722 0000CBF3 6A01                    	push 1
 17723 0000CBF5 E960870000              	jmp L_error_incorrect_arity_simple
 17724                                  .L_lambda_simple_arity_check_ok_01de:
 17725 0000CBFA C8000000                	enter 0, 0
 17726 0000CBFE BF08000000              	mov rdi, 8 * 1
 17727 0000CC03 E899870000              	call malloc
 17728 0000CC08 488B5D20                	mov rbx, PARAM(0)
 17729 0000CC0C 488918                  	mov qword [rax], rbx
 17730 0000CC0F 48894520                	mov PARAM(0), rax
 17731 0000CC13 48B8-                   	mov rax, sob_void
 17731 0000CC15 [0000000000000000] 
 17732                                  
 17733 0000CC1D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17734 0000CC22 E87A870000              	call malloc
 17735 0000CC27 50                      	push rax
 17736 0000CC28 BF08000000              	mov rdi, 8 * 1	; new rib
 17737 0000CC2D E86F870000              	call malloc
 17738 0000CC32 50                      	push rax
 17739 0000CC33 BF28000000              	mov rdi, 8 * 5	; extended env
 17740 0000CC38 E864870000              	call malloc
 17741 0000CC3D 488B7D10                	mov rdi, ENV
 17742 0000CC41 BE00000000              	mov rsi, 0
 17743 0000CC46 BA01000000              	mov rdx, 1
 17744                                  .L_lambda_simple_env_loop_01df:	; ext_env[i + 1] <-- env[i]
 17745 0000CC4B 4883FE04                	cmp rsi, 4
 17746 0000CC4F 7410                    	je .L_lambda_simple_env_end_01df
 17747 0000CC51 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17748 0000CC55 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17749 0000CC59 48FFC6                  	inc rsi
 17750 0000CC5C 48FFC2                  	inc rdx
 17751 0000CC5F EBEA                    	jmp .L_lambda_simple_env_loop_01df
 17752                                  .L_lambda_simple_env_end_01df:
 17753 0000CC61 5B                      	pop rbx
 17754 0000CC62 BE00000000              	mov rsi, 0
 17755                                  .L_lambda_simple_params_loop_01df:	; copy params
 17756 0000CC67 4883FE01                	cmp rsi, 1
 17757 0000CC6B 740E                    	je .L_lambda_simple_params_end_01df
 17758 0000CC6D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17759 0000CC72 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17760 0000CC76 48FFC6                  	inc rsi
 17761 0000CC79 EBEC                    	jmp .L_lambda_simple_params_loop_01df
 17762                                  .L_lambda_simple_params_end_01df:
 17763 0000CC7B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17764 0000CC7E 4889C3                  	mov rbx, rax
 17765 0000CC81 58                      	pop rax
 17766 0000CC82 C60004                  	mov byte [rax], T_closure
 17767 0000CC85 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17768 0000CC89 48C74009[96CC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01df
 17769 0000CC91 E954010000              	jmp .L_lambda_simple_end_01df
 17770                                  .L_lambda_simple_code_01df:	; lambda-simple body
 17771 0000CC96 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17772 0000CC9C 740B                    	je .L_lambda_simple_arity_check_ok_01df
 17773 0000CC9E FF742410                	push qword [rsp + 8 * 2]
 17774 0000CCA2 6A02                    	push 2
 17775 0000CCA4 E9B1860000              	jmp L_error_incorrect_arity_simple
 17776                                  .L_lambda_simple_arity_check_ok_01df:
 17777 0000CCA9 C8000000                	enter 0, 0
 17778                                  	; preparing a non-tail-call
 17779 0000CCAD 488B4528                	mov rax, PARAM(1)	; param strs
 17780 0000CCB1 50                      	push rax
 17781 0000CCB2 6A01                    	push 1	; arg count
 17782 0000CCB4 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 17783 0000CCBC 803805                  	cmp byte [rax], T_undefined
 17784 0000CCBF 0F84AF850000            	je L_error_fvar_undefined
 17785 0000CCC5 803804                  	cmp byte [rax], T_closure
 17786 0000CCC8 0F852A860000            	jne L_error_non_closure
 17787 0000CCCE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17788 0000CCD1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17789 0000CCD4 483D[02000000]          	cmp rax, sob_boolean_false
 17790 0000CCDA 0F8506010000            	jne .L_or_end_0025
 17791                                  
 17792                                  	; preparing a non-tail-call
 17793                                  	; preparing a non-tail-call
 17794 0000CCE0 488B4528                	mov rax, PARAM(1)	; param strs
 17795 0000CCE4 50                      	push rax
 17796 0000CCE5 6A01                    	push 1	; arg count
 17797 0000CCE7 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 17798 0000CCEF 803805                  	cmp byte [rax], T_undefined
 17799 0000CCF2 0F847C850000            	je L_error_fvar_undefined
 17800 0000CCF8 803804                  	cmp byte [rax], T_closure
 17801 0000CCFB 0F85F7850000            	jne L_error_non_closure
 17802 0000CD01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17803 0000CD04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17804 0000CD07 50                      	push rax
 17805 0000CD08 488B4520                	mov rax, PARAM(0)	; param str
 17806 0000CD0C 50                      	push rax
 17807 0000CD0D 6A02                    	push 2	; arg count
 17808 0000CD0F 488B4510                	mov rax, ENV
 17809 0000CD13 488B4008                	mov rax, qword [rax + 8 * 1]
 17810 0000CD17 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 17811 0000CD1A 803804                  	cmp byte [rax], T_closure
 17812 0000CD1D 0F85D5850000            	jne L_error_non_closure
 17813 0000CD23 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17814 0000CD26 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17815 0000CD29 483D[02000000]          	cmp rax, sob_boolean_false
 17816 0000CD2F 0F84A7000000            	je .L_if_else_0167
 17817                                  	; Initiating tail-call optimization
 17818                                  	; preparing a non-tail-call
 17819 0000CD35 488B4528                	mov rax, PARAM(1)	; param strs
 17820 0000CD39 50                      	push rax
 17821 0000CD3A 6A01                    	push 1	; arg count
 17822 0000CD3C 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 17823 0000CD44 803805                  	cmp byte [rax], T_undefined
 17824 0000CD47 0F8427850000            	je L_error_fvar_undefined
 17825 0000CD4D 803804                  	cmp byte [rax], T_closure
 17826 0000CD50 0F85A2850000            	jne L_error_non_closure
 17827 0000CD56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17828 0000CD59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17829 0000CD5C 50                      	push rax
 17830                                  	; preparing a non-tail-call
 17831 0000CD5D 488B4528                	mov rax, PARAM(1)	; param strs
 17832 0000CD61 50                      	push rax
 17833 0000CD62 6A01                    	push 1	; arg count
 17834 0000CD64 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 17835 0000CD6C 803805                  	cmp byte [rax], T_undefined
 17836 0000CD6F 0F84FF840000            	je L_error_fvar_undefined
 17837 0000CD75 803804                  	cmp byte [rax], T_closure
 17838 0000CD78 0F857A850000            	jne L_error_non_closure
 17839 0000CD7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17840 0000CD81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17841 0000CD84 50                      	push rax
 17842 0000CD85 6A02                    	push 2	; Number of arguments
 17843 0000CD87 488B4510                	mov rax, ENV
 17844 0000CD8B 488B00                  	mov rax, qword [rax + 8 * 0]
 17845 0000CD8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17846 0000CD91 488B00                  	mov rax, qword [rax]
 17847 0000CD94 803804                  	cmp byte [rax], T_closure
 17848 0000CD97 0F855B850000            	jne L_error_non_closure
 17849 0000CD9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17850 0000CDA0 FF7508                  	push qword [rbp + 8]
 17851 0000CDA3 FF7500                  	push qword [rbp]
 17852 0000CDA6 41BA06000000            	mov r10, 2 + 4
 17853 0000CDAC 4C8B4518                	mov r8, COUNT
 17854 0000CDB0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 17855 0000CDB5 4C8D4DF8                	lea r9, [rbp - 8]
 17856                                  .L_tc_recycle_frame_loop_0267:
 17857 0000CDB9 4983FA00                	cmp r10, 0
 17858 0000CDBD 7413                    	je .L_tc_recycle_frame_done_0267
 17859 0000CDBF 4D8B19                  	mov r11, qword [r9]
 17860 0000CDC2 4D8918                  	mov qword [r8], r11
 17861 0000CDC5 49FFCA                  	dec r10
 17862 0000CDC8 4983E808                	sub r8, 8
 17863 0000CDCC 4983E908                	sub r9, 8
 17864 0000CDD0 EBE7                    	jmp .L_tc_recycle_frame_loop_0267
 17865                                  .L_tc_recycle_frame_done_0267:
 17866 0000CDD2 498D6008                	lea rsp, [r8 + 8]
 17867 0000CDD6 5D                      	pop rbp
 17868 0000CDD7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17869 0000CDDA EB0A                    	jmp .L_if_end_0167
 17870                                  .L_if_else_0167:
 17871 0000CDDC 48B8-                   	mov rax, L_constants + 2
 17871 0000CDDE [0200000000000000] 
 17872                                  .L_if_end_0167:
 17873                                  .L_or_end_0025:
 17874 0000CDE6 C9                      	leave
 17875 0000CDE7 C22000                  	ret AND_KILL_FRAME(2)
 17876                                  .L_lambda_simple_end_01df:	; new closure is in rax
 17877 0000CDEA 50                      	push rax
 17878 0000CDEB 488B4520                	mov rax, PARAM(0)	; param run
 17879 0000CDEF 8F00                    	pop qword [rax]
 17880 0000CDF1 48B8-                   	mov rax, sob_void
 17880 0000CDF3 [0000000000000000] 
 17881                                  
 17882 0000CDFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17883 0000CE00 E89C850000              	call malloc
 17884 0000CE05 50                      	push rax
 17885 0000CE06 BF08000000              	mov rdi, 8 * 1	; new rib
 17886 0000CE0B E891850000              	call malloc
 17887 0000CE10 50                      	push rax
 17888 0000CE11 BF28000000              	mov rdi, 8 * 5	; extended env
 17889 0000CE16 E886850000              	call malloc
 17890 0000CE1B 488B7D10                	mov rdi, ENV
 17891 0000CE1F BE00000000              	mov rsi, 0
 17892 0000CE24 BA01000000              	mov rdx, 1
 17893                                  .L_lambda_opt_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 17894 0000CE29 4883FE04                	cmp rsi, 4
 17895 0000CE2D 7410                    	je .L_lambda_opt_env_end_0043
 17896 0000CE2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17897 0000CE33 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17898 0000CE37 48FFC6                  	inc rsi
 17899 0000CE3A 48FFC2                  	inc rdx
 17900 0000CE3D EBEA                    	jmp .L_lambda_opt_env_loop_0043
 17901                                  .L_lambda_opt_env_end_0043:
 17902 0000CE3F 5B                      	pop rbx
 17903 0000CE40 BE00000000              	mov rsi, 0
 17904                                  .L_lambda_opt_params_loop_0043:	; copy params
 17905 0000CE45 4883FE01                	cmp rsi, 1
 17906 0000CE49 740E                    	je .L_lambda_opt_params_end_0043
 17907 0000CE4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17908 0000CE50 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17909 0000CE54 48FFC6                  	inc rsi
 17910 0000CE57 EBEC                    	jmp .L_lambda_opt_params_loop_0043
 17911                                  .L_lambda_opt_params_end_0043:
 17912 0000CE59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17913 0000CE5C 4889C3                  	mov rbx, rax
 17914 0000CE5F 58                      	pop rax
 17915 0000CE60 C60004                  	mov byte [rax], T_closure
 17916 0000CE63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17917 0000CE67 48C74009[74CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0043
 17918 0000CE6F E96C010000              	jmp .L_lambda_opt_end_0043
 17919                                  .L_lambda_opt_code_0043:
 17920 0000CE74 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 17921 0000CE79 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 17922 0000CE7D 7407                    	je .L_lambda_opt_arity_check_exact_0043	; Jump if arity matches
 17923 0000CE7F 7F4C                    	jg .L_lambda_opt_arity_check_more_0043	; Jump if more arguments passed
 17924 0000CE81 E9E8840000              	jmp L_error_incorrect_arity_opt
 17925                                  .L_lambda_opt_arity_check_exact_0043:
 17926 0000CE86 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 17927 0000CE89 4983C603                	add r14, 3 ; add 3 first stack values
 17928 0000CE8D 41BF00000000            	mov r15, 0 ; r15 = index
 17929 0000CE93 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 17930 0000CE97 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 17931 0000CE9F EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0043
 17932                                  .L_lambda_opt_stack_shrink_loop_0043:
 17933 0000CEA1 4983FE00                	cmp r14, 0
 17934 0000CEA5 7E11                    	jle .L_make_lambda_opt_exact_finish_0043
 17935 0000CEA7 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 17936 0000CEAC 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 17937 0000CEB0 49FFCE                  	dec r14 ; next loop value
 17938 0000CEB3 49FFC7                  	inc r15 ; update i
 17939 0000CEB6 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0043
 17940                                  .L_make_lambda_opt_exact_finish_0043:
 17941 0000CEB8 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 17942 0000CEC0 49FFC2                  	inc r10
 17943 0000CEC3 4C89542410              	mov qword [rsp + 8 * 2], r10
 17944 0000CEC8 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0043
 17945                                  .L_lambda_opt_arity_check_more_0043:
 17946 0000CECD 4D89D6                  	mov r14, r10 ; r14 = num args
 17947 0000CED0 4D89D7                  	mov r15, r10 ; r15 = num args
 17948 0000CED3 41B901000000            	mov r9, 1; r9 = number of params 
 17949 0000CED9 4D29CE                  	sub r14, r9 ; r14 = extra args
 17950 0000CEDC 4D01F1                  	add r9, r14 ; r9 = num args
 17951 0000CEDF 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 17951 0000CEE1 [0100000000000000] 
 17952 0000CEE9 EB00                    	jmp .L_make_lambda_opt_arg_list_0043
 17953                                  .L_make_lambda_opt_arg_list_0043:
 17954 0000CEEB 4983FE00                	cmp r14, 0
 17955 0000CEEF 7E25                    	jle .L_make_lambda_opt_stack_fixed_0043
 17956 0000CEF1 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 17957 0000CEF6 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 17958 0000CEFB E8A1840000              	call malloc                         ; Allocate memory, result in rax
 17959 0000CF00 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 17960 0000CF03 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 17961 0000CF07 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 17962 0000CF0B 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 17963 0000CF0E 49FFC9                  	dec r9                              ; args index minus 1
 17964 0000CF11 49FFCE                  	dec r14                             ; next iteration
 17965 0000CF14 EBD5                    	jmp .L_make_lambda_opt_arg_list_0043
 17966                                  .L_make_lambda_opt_stack_fixed_0043:
 17967 0000CF16 4D89FE                  	mov r14, r15 ; r14 = num args
 17968 0000CF19 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 17969 0000CF1C 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 17970 0000CF20 4D89C1                  	mov r9, r8
 17971 0000CF23 41BA01000000            	mov r10, 1; r10 = num of params
 17972 0000CF29 4D29D6                  	sub r14, r10 ; r14 = extra args
 17973 0000CF2C 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 17974 0000CF2F 49FFCE                  	dec r14 ; how much we need to change stack wise?
 17975 0000CF32 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 17976 0000CF37 4D89CC                  	mov r12, r9
 17977 0000CF3A 4D29F4                  	sub r12, r14
 17978 0000CF3D 49FFCC                  	dec r12
 17979 0000CF40 49FFCC                  	dec r12
 17980 0000CF43 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0043
 17981                                  .L_lambda_opt_stack_shrink_loop_more_0043:
 17982 0000CF45 4983F800                	cmp r8, 0
 17983 0000CF49 7E16                    	jle .L_make_lambda_opt_more_finish_0043
 17984 0000CF4B 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 17985 0000CF4F 4D01F4                  	add r12, r14
 17986 0000CF52 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 17987 0000CF56 49FFC8                  	dec r8 ; next iteration
 17988 0000CF59 4D29F4                  	sub r12, r14 ; next iteration
 17989 0000CF5C 49FFCC                  	dec r12 ; next iteration
 17990 0000CF5F EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0043
 17991                                  .L_make_lambda_opt_more_finish_0043:
 17992 0000CF61 41BA01000000            	mov r10, 1
 17993 0000CF67 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 17994 0000CF70 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 17995 0000CF74 4C01F4                  	add rsp, r14  ; Add to rsp
 17996 0000CF77 EB00                    	jmp .L_lambda_opt_stack_adjusted_0043
 17997                                  .L_lambda_opt_stack_adjusted_0043:
 17998 0000CF79 C8000000                	enter 0, 0
 17999                                  	; Initiating tail-call optimization
 18000 0000CF7D 488B4528                	mov rax, PARAM(1)	; param strs
 18001 0000CF81 50                      	push rax
 18002 0000CF82 488B4520                	mov rax, PARAM(0)	; param str
 18003 0000CF86 50                      	push rax
 18004 0000CF87 6A02                    	push 2	; Number of arguments
 18005 0000CF89 488B4510                	mov rax, ENV
 18006 0000CF8D 488B00                  	mov rax, qword [rax + 8 * 0]
 18007 0000CF90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18008 0000CF93 488B00                  	mov rax, qword [rax]
 18009 0000CF96 803804                  	cmp byte [rax], T_closure
 18010 0000CF99 0F8559830000            	jne L_error_non_closure
 18011 0000CF9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18012 0000CFA2 FF7508                  	push qword [rbp + 8]
 18013 0000CFA5 FF7500                  	push qword [rbp]
 18014 0000CFA8 41BA06000000            	mov r10, 2 + 4
 18015 0000CFAE 4C8B4518                	mov r8, COUNT
 18016 0000CFB2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18017 0000CFB7 4C8D4DF8                	lea r9, [rbp - 8]
 18018                                  .L_tc_recycle_frame_loop_0268:
 18019 0000CFBB 4983FA00                	cmp r10, 0
 18020 0000CFBF 7413                    	je .L_tc_recycle_frame_done_0268
 18021 0000CFC1 4D8B19                  	mov r11, qword [r9]
 18022 0000CFC4 4D8918                  	mov qword [r8], r11
 18023 0000CFC7 49FFCA                  	dec r10
 18024 0000CFCA 4983E808                	sub r8, 8
 18025 0000CFCE 4983E908                	sub r9, 8
 18026 0000CFD2 EBE7                    	jmp .L_tc_recycle_frame_loop_0268
 18027                                  .L_tc_recycle_frame_done_0268:
 18028 0000CFD4 498D6008                	lea rsp, [r8 + 8]
 18029 0000CFD8 5D                      	pop rbp
 18030 0000CFD9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18031 0000CFDC C9                      	leave
 18032 0000CFDD C22000                  	ret AND_KILL_FRAME(2)
 18033                                  .L_lambda_opt_end_0043:	; new closure is in rax
 18034 0000CFE0 C9                      	leave
 18035 0000CFE1 C21800                  	ret AND_KILL_FRAME(1)
 18036                                  .L_lambda_simple_end_01de:	; new closure is in rax
 18037 0000CFE4 803804                  	cmp byte [rax], T_closure
 18038 0000CFE7 0F850B830000            	jne L_error_non_closure
 18039 0000CFED FF7001                  	push SOB_CLOSURE_ENV(rax)
 18040 0000CFF0 FF7508                  	push qword [rbp + 8]
 18041 0000CFF3 FF7500                  	push qword [rbp]
 18042 0000CFF6 41BA05000000            	mov r10, 1 + 4
 18043 0000CFFC 4C8B4518                	mov r8, COUNT
 18044 0000D000 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18045 0000D005 4C8D4DF8                	lea r9, [rbp - 8]
 18046                                  .L_tc_recycle_frame_loop_0269:
 18047 0000D009 4983FA00                	cmp r10, 0
 18048 0000D00D 7413                    	je .L_tc_recycle_frame_done_0269
 18049 0000D00F 4D8B19                  	mov r11, qword [r9]
 18050 0000D012 4D8918                  	mov qword [r8], r11
 18051 0000D015 49FFCA                  	dec r10
 18052 0000D018 4983E808                	sub r8, 8
 18053 0000D01C 4983E908                	sub r9, 8
 18054 0000D020 EBE7                    	jmp .L_tc_recycle_frame_loop_0269
 18055                                  .L_tc_recycle_frame_done_0269:
 18056 0000D022 498D6008                	lea rsp, [r8 + 8]
 18057 0000D026 5D                      	pop rbp
 18058 0000D027 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18059 0000D02A C9                      	leave
 18060 0000D02B C21800                  	ret AND_KILL_FRAME(1)
 18061                                  .L_lambda_simple_end_01dd:	; new closure is in rax
 18062 0000D02E 803804                  	cmp byte [rax], T_closure
 18063 0000D031 0F85C1820000            	jne L_error_non_closure
 18064 0000D037 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18065 0000D03A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18066 0000D03D C9                      	leave
 18067 0000D03E C21800                  	ret AND_KILL_FRAME(1)
 18068                                  .L_lambda_simple_end_01d9:	; new closure is in rax
 18069 0000D041 803804                  	cmp byte [rax], T_closure
 18070 0000D044 0F85AE820000            	jne L_error_non_closure
 18071 0000D04A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18072 0000D04D FF7508                  	push qword [rbp + 8]
 18073 0000D050 FF7500                  	push qword [rbp]
 18074 0000D053 41BA05000000            	mov r10, 1 + 4
 18075 0000D059 4C8B4518                	mov r8, COUNT
 18076 0000D05D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18077 0000D062 4C8D4DF8                	lea r9, [rbp - 8]
 18078                                  .L_tc_recycle_frame_loop_026a:
 18079 0000D066 4983FA00                	cmp r10, 0
 18080 0000D06A 7413                    	je .L_tc_recycle_frame_done_026a
 18081 0000D06C 4D8B19                  	mov r11, qword [r9]
 18082 0000D06F 4D8918                  	mov qword [r8], r11
 18083 0000D072 49FFCA                  	dec r10
 18084 0000D075 4983E808                	sub r8, 8
 18085 0000D079 4983E908                	sub r9, 8
 18086 0000D07D EBE7                    	jmp .L_tc_recycle_frame_loop_026a
 18087                                  .L_tc_recycle_frame_done_026a:
 18088 0000D07F 498D6008                	lea rsp, [r8 + 8]
 18089 0000D083 5D                      	pop rbp
 18090 0000D084 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18091 0000D087 C9                      	leave
 18092 0000D088 C22000                  	ret AND_KILL_FRAME(2)
 18093                                  .L_lambda_simple_end_01d8:	; new closure is in rax
 18094 0000D08B 50                      	push rax
 18095 0000D08C 6A01                    	push 1	; arg count
 18096 0000D08E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18097 0000D093 E809830000              	call malloc
 18098 0000D098 50                      	push rax
 18099 0000D099 BF00000000              	mov rdi, 8 * 0	; new rib
 18100 0000D09E E8FE820000              	call malloc
 18101 0000D0A3 50                      	push rax
 18102 0000D0A4 BF08000000              	mov rdi, 8 * 1	; extended env
 18103 0000D0A9 E8F3820000              	call malloc
 18104 0000D0AE 488B7D10                	mov rdi, ENV
 18105 0000D0B2 BE00000000              	mov rsi, 0
 18106 0000D0B7 BA01000000              	mov rdx, 1
 18107                                  .L_lambda_simple_env_loop_01e0:	; ext_env[i + 1] <-- env[i]
 18108 0000D0BC 4883FE00                	cmp rsi, 0
 18109 0000D0C0 7410                    	je .L_lambda_simple_env_end_01e0
 18110 0000D0C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18111 0000D0C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18112 0000D0CA 48FFC6                  	inc rsi
 18113 0000D0CD 48FFC2                  	inc rdx
 18114 0000D0D0 EBEA                    	jmp .L_lambda_simple_env_loop_01e0
 18115                                  .L_lambda_simple_env_end_01e0:
 18116 0000D0D2 5B                      	pop rbx
 18117 0000D0D3 BE00000000              	mov rsi, 0
 18118                                  .L_lambda_simple_params_loop_01e0:	; copy params
 18119 0000D0D8 4883FE00                	cmp rsi, 0
 18120 0000D0DC 740E                    	je .L_lambda_simple_params_end_01e0
 18121 0000D0DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18122 0000D0E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18123 0000D0E7 48FFC6                  	inc rsi
 18124 0000D0EA EBEC                    	jmp .L_lambda_simple_params_loop_01e0
 18125                                  .L_lambda_simple_params_end_01e0:
 18126 0000D0EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18127 0000D0EF 4889C3                  	mov rbx, rax
 18128 0000D0F2 58                      	pop rax
 18129 0000D0F3 C60004                  	mov byte [rax], T_closure
 18130 0000D0F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18131 0000D0FA 48C74009[07D10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e0
 18132 0000D102 E947010000              	jmp .L_lambda_simple_end_01e0
 18133                                  .L_lambda_simple_code_01e0:	; lambda-simple body
 18134 0000D107 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18135 0000D10D 740B                    	je .L_lambda_simple_arity_check_ok_01e0
 18136 0000D10F FF742410                	push qword [rsp + 8 * 2]
 18137 0000D113 6A01                    	push 1
 18138 0000D115 E940820000              	jmp L_error_incorrect_arity_simple
 18139                                  .L_lambda_simple_arity_check_ok_01e0:
 18140 0000D11A C8000000                	enter 0, 0
 18141                                  	; preparing a non-tail-call
 18142 0000D11E 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 18143 0000D126 803805                  	cmp byte [rax], T_undefined
 18144 0000D129 0F8445810000            	je L_error_fvar_undefined
 18145 0000D12F 50                      	push rax
 18146 0000D130 488B0425[C1120000]      	mov rax, qword [free_var_74]	; free var char<?
 18147 0000D138 803805                  	cmp byte [rax], T_undefined
 18148 0000D13B 0F8433810000            	je L_error_fvar_undefined
 18149 0000D141 50                      	push rax
 18150 0000D142 6A02                    	push 2	; arg count
 18151 0000D144 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18152 0000D148 803804                  	cmp byte [rax], T_closure
 18153 0000D14B 0F85A7810000            	jne L_error_non_closure
 18154 0000D151 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18155 0000D154 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18156 0000D157 48890425[BD160000]      	mov qword [free_var_134], rax
 18157 0000D15F 48B8-                   	mov rax, sob_void
 18157 0000D161 [0000000000000000] 
 18158                                  
 18159                                  	; preparing a non-tail-call
 18160 0000D169 488B0425[5B120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18161 0000D171 803805                  	cmp byte [rax], T_undefined
 18162 0000D174 0F84FA800000            	je L_error_fvar_undefined
 18163 0000D17A 50                      	push rax
 18164 0000D17B 488B0425[4A120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 18165 0000D183 803805                  	cmp byte [rax], T_undefined
 18166 0000D186 0F84E8800000            	je L_error_fvar_undefined
 18167 0000D18C 50                      	push rax
 18168 0000D18D 6A02                    	push 2	; arg count
 18169 0000D18F 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18170 0000D193 803804                  	cmp byte [rax], T_closure
 18171 0000D196 0F855C810000            	jne L_error_non_closure
 18172 0000D19C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18173 0000D19F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18174 0000D1A2 48890425[F1150000]      	mov qword [free_var_122], rax
 18175 0000D1AA 48B8-                   	mov rax, sob_void
 18175 0000D1AC [0000000000000000] 
 18176                                  
 18177                                  	; preparing a non-tail-call
 18178 0000D1B4 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 18179 0000D1BC 803805                  	cmp byte [rax], T_undefined
 18180 0000D1BF 0F84AF800000            	je L_error_fvar_undefined
 18181 0000D1C5 50                      	push rax
 18182 0000D1C6 488B0425[F4120000]      	mov rax, qword [free_var_77]	; free var char>?
 18183 0000D1CE 803805                  	cmp byte [rax], T_undefined
 18184 0000D1D1 0F849D800000            	je L_error_fvar_undefined
 18185 0000D1D7 50                      	push rax
 18186 0000D1D8 6A02                    	push 2	; arg count
 18187 0000D1DA 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18188 0000D1DE 803804                  	cmp byte [rax], T_closure
 18189 0000D1E1 0F8511810000            	jne L_error_non_closure
 18190 0000D1E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18191 0000D1EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 18192 0000D1ED 48890425[F0160000]      	mov qword [free_var_137], rax
 18193 0000D1F5 48B8-                   	mov rax, sob_void
 18193 0000D1F7 [0000000000000000] 
 18194                                  
 18195                                  	; preparing a non-tail-call
 18196 0000D1FF 488B0425[5B120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18197 0000D207 803805                  	cmp byte [rax], T_undefined
 18198 0000D20A 0F8464800000            	je L_error_fvar_undefined
 18199 0000D210 50                      	push rax
 18200 0000D211 488B0425[7D120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 18201 0000D219 803805                  	cmp byte [rax], T_undefined
 18202 0000D21C 0F8452800000            	je L_error_fvar_undefined
 18203 0000D222 50                      	push rax
 18204 0000D223 6A02                    	push 2	; arg count
 18205 0000D225 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18206 0000D229 803804                  	cmp byte [rax], T_closure
 18207 0000D22C 0F85C6800000            	jne L_error_non_closure
 18208 0000D232 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18209 0000D235 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18210 0000D238 48890425[24160000]      	mov qword [free_var_125], rax
 18211 0000D240 48B8-                   	mov rax, sob_void
 18211 0000D242 [0000000000000000] 
 18212 0000D24A C9                      	leave
 18213 0000D24B C21800                  	ret AND_KILL_FRAME(1)
 18214                                  .L_lambda_simple_end_01e0:	; new closure is in rax
 18215 0000D24E 803804                  	cmp byte [rax], T_closure
 18216 0000D251 0F85A1800000            	jne L_error_non_closure
 18217 0000D257 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18218 0000D25A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18219                                  
 18220 0000D25D 4889C7                  	mov rdi, rax
 18221 0000D260 E891830000              	call print_sexpr_if_not_void
 18222                                  	; preparing a non-tail-call
 18223 0000D265 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18224 0000D26A E832810000              	call malloc
 18225 0000D26F 50                      	push rax
 18226 0000D270 BF00000000              	mov rdi, 8 * 0	; new rib
 18227 0000D275 E827810000              	call malloc
 18228 0000D27A 50                      	push rax
 18229 0000D27B BF08000000              	mov rdi, 8 * 1	; extended env
 18230 0000D280 E81C810000              	call malloc
 18231 0000D285 488B7D10                	mov rdi, ENV
 18232 0000D289 BE00000000              	mov rsi, 0
 18233 0000D28E BA01000000              	mov rdx, 1
 18234                                  .L_lambda_simple_env_loop_01e1:	; ext_env[i + 1] <-- env[i]
 18235 0000D293 4883FE00                	cmp rsi, 0
 18236 0000D297 7410                    	je .L_lambda_simple_env_end_01e1
 18237 0000D299 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18238 0000D29D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18239 0000D2A1 48FFC6                  	inc rsi
 18240 0000D2A4 48FFC2                  	inc rdx
 18241 0000D2A7 EBEA                    	jmp .L_lambda_simple_env_loop_01e1
 18242                                  .L_lambda_simple_env_end_01e1:
 18243 0000D2A9 5B                      	pop rbx
 18244 0000D2AA BE00000000              	mov rsi, 0
 18245                                  .L_lambda_simple_params_loop_01e1:	; copy params
 18246 0000D2AF 4883FE00                	cmp rsi, 0
 18247 0000D2B3 740E                    	je .L_lambda_simple_params_end_01e1
 18248 0000D2B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18249 0000D2BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18250 0000D2BE 48FFC6                  	inc rsi
 18251 0000D2C1 EBEC                    	jmp .L_lambda_simple_params_loop_01e1
 18252                                  .L_lambda_simple_params_end_01e1:
 18253 0000D2C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18254 0000D2C6 4889C3                  	mov rbx, rax
 18255 0000D2C9 58                      	pop rax
 18256 0000D2CA C60004                  	mov byte [rax], T_closure
 18257 0000D2CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18258 0000D2D1 48C74009[DED20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e1
 18259 0000D2D9 E95F0C0000              	jmp .L_lambda_simple_end_01e1
 18260                                  .L_lambda_simple_code_01e1:	; lambda-simple body
 18261 0000D2DE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18262 0000D2E4 740B                    	je .L_lambda_simple_arity_check_ok_01e1
 18263 0000D2E6 FF742410                	push qword [rsp + 8 * 2]
 18264 0000D2EA 6A02                    	push 2
 18265 0000D2EC E969800000              	jmp L_error_incorrect_arity_simple
 18266                                  .L_lambda_simple_arity_check_ok_01e1:
 18267 0000D2F1 C8000000                	enter 0, 0
 18268                                  	; Initiating tail-call optimization
 18269 0000D2F5 48B8-                   	mov rax, L_constants + 2007
 18269 0000D2F7 [D707000000000000] 
 18270 0000D2FF 50                      	push rax
 18271 0000D300 6A01                    	push 1	; Number of arguments
 18272 0000D302 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18273 0000D307 E895800000              	call malloc
 18274 0000D30C 50                      	push rax
 18275 0000D30D BF10000000              	mov rdi, 8 * 2	; new rib
 18276 0000D312 E88A800000              	call malloc
 18277 0000D317 50                      	push rax
 18278 0000D318 BF10000000              	mov rdi, 8 * 2	; extended env
 18279 0000D31D E87F800000              	call malloc
 18280 0000D322 488B7D10                	mov rdi, ENV
 18281 0000D326 BE00000000              	mov rsi, 0
 18282 0000D32B BA01000000              	mov rdx, 1
 18283                                  .L_lambda_simple_env_loop_01e2:	; ext_env[i + 1] <-- env[i]
 18284 0000D330 4883FE01                	cmp rsi, 1
 18285 0000D334 7410                    	je .L_lambda_simple_env_end_01e2
 18286 0000D336 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18287 0000D33A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18288 0000D33E 48FFC6                  	inc rsi
 18289 0000D341 48FFC2                  	inc rdx
 18290 0000D344 EBEA                    	jmp .L_lambda_simple_env_loop_01e2
 18291                                  .L_lambda_simple_env_end_01e2:
 18292 0000D346 5B                      	pop rbx
 18293 0000D347 BE00000000              	mov rsi, 0
 18294                                  .L_lambda_simple_params_loop_01e2:	; copy params
 18295 0000D34C 4883FE02                	cmp rsi, 2
 18296 0000D350 740E                    	je .L_lambda_simple_params_end_01e2
 18297 0000D352 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18298 0000D357 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18299 0000D35B 48FFC6                  	inc rsi
 18300 0000D35E EBEC                    	jmp .L_lambda_simple_params_loop_01e2
 18301                                  .L_lambda_simple_params_end_01e2:
 18302 0000D360 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18303 0000D363 4889C3                  	mov rbx, rax
 18304 0000D366 58                      	pop rax
 18305 0000D367 C60004                  	mov byte [rax], T_closure
 18306 0000D36A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18307 0000D36E 48C74009[7BD30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e2
 18308 0000D376 E9780B0000              	jmp .L_lambda_simple_end_01e2
 18309                                  .L_lambda_simple_code_01e2:	; lambda-simple body
 18310 0000D37B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18311 0000D381 740B                    	je .L_lambda_simple_arity_check_ok_01e2
 18312 0000D383 FF742410                	push qword [rsp + 8 * 2]
 18313 0000D387 6A01                    	push 1
 18314 0000D389 E9CC7F0000              	jmp L_error_incorrect_arity_simple
 18315                                  .L_lambda_simple_arity_check_ok_01e2:
 18316 0000D38E C8000000                	enter 0, 0
 18317 0000D392 BF08000000              	mov rdi, 8 * 1
 18318 0000D397 E805800000              	call malloc
 18319 0000D39C 488B5D20                	mov rbx, PARAM(0)
 18320 0000D3A0 488918                  	mov qword [rax], rbx
 18321 0000D3A3 48894520                	mov PARAM(0), rax
 18322 0000D3A7 48B8-                   	mov rax, sob_void
 18322 0000D3A9 [0000000000000000] 
 18323                                  
 18324 0000D3B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18325 0000D3B6 E8E67F0000              	call malloc
 18326 0000D3BB 50                      	push rax
 18327 0000D3BC BF08000000              	mov rdi, 8 * 1	; new rib
 18328 0000D3C1 E8DB7F0000              	call malloc
 18329 0000D3C6 50                      	push rax
 18330 0000D3C7 BF18000000              	mov rdi, 8 * 3	; extended env
 18331 0000D3CC E8D07F0000              	call malloc
 18332 0000D3D1 488B7D10                	mov rdi, ENV
 18333 0000D3D5 BE00000000              	mov rsi, 0
 18334 0000D3DA BA01000000              	mov rdx, 1
 18335                                  .L_lambda_simple_env_loop_01e3:	; ext_env[i + 1] <-- env[i]
 18336 0000D3DF 4883FE02                	cmp rsi, 2
 18337 0000D3E3 7410                    	je .L_lambda_simple_env_end_01e3
 18338 0000D3E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18339 0000D3E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18340 0000D3ED 48FFC6                  	inc rsi
 18341 0000D3F0 48FFC2                  	inc rdx
 18342 0000D3F3 EBEA                    	jmp .L_lambda_simple_env_loop_01e3
 18343                                  .L_lambda_simple_env_end_01e3:
 18344 0000D3F5 5B                      	pop rbx
 18345 0000D3F6 BE00000000              	mov rsi, 0
 18346                                  .L_lambda_simple_params_loop_01e3:	; copy params
 18347 0000D3FB 4883FE01                	cmp rsi, 1
 18348 0000D3FF 740E                    	je .L_lambda_simple_params_end_01e3
 18349 0000D401 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18350 0000D406 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18351 0000D40A 48FFC6                  	inc rsi
 18352 0000D40D EBEC                    	jmp .L_lambda_simple_params_loop_01e3
 18353                                  .L_lambda_simple_params_end_01e3:
 18354 0000D40F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18355 0000D412 4889C3                  	mov rbx, rax
 18356 0000D415 58                      	pop rax
 18357 0000D416 C60004                  	mov byte [rax], T_closure
 18358 0000D419 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18359 0000D41D 48C74009[2AD40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e3
 18360 0000D425 E944020000              	jmp .L_lambda_simple_end_01e3
 18361                                  .L_lambda_simple_code_01e3:	; lambda-simple body
 18362 0000D42A 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18363 0000D430 740B                    	je .L_lambda_simple_arity_check_ok_01e3
 18364 0000D432 FF742410                	push qword [rsp + 8 * 2]
 18365 0000D436 6A05                    	push 5
 18366 0000D438 E91D7F0000              	jmp L_error_incorrect_arity_simple
 18367                                  .L_lambda_simple_arity_check_ok_01e3:
 18368 0000D43D C8000000                	enter 0, 0
 18369                                  	; preparing a non-tail-call
 18370 0000D441 488B4530                	mov rax, PARAM(2)	; param len1
 18371 0000D445 50                      	push rax
 18372 0000D446 488B4520                	mov rax, PARAM(0)	; param i
 18373 0000D44A 50                      	push rax
 18374 0000D44B 6A02                    	push 2	; arg count
 18375 0000D44D 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 18376 0000D455 803805                  	cmp byte [rax], T_undefined
 18377 0000D458 0F84167E0000            	je L_error_fvar_undefined
 18378 0000D45E 803804                  	cmp byte [rax], T_closure
 18379 0000D461 0F85917E0000            	jne L_error_non_closure
 18380 0000D467 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18381 0000D46A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18382 0000D46D 483D[02000000]          	cmp rax, sob_boolean_false
 18383 0000D473 0F85F1010000            	jne .L_or_end_0026
 18384                                  
 18385                                  	; preparing a non-tail-call
 18386                                  	; preparing a non-tail-call
 18387 0000D479 488B4520                	mov rax, PARAM(0)	; param i
 18388 0000D47D 50                      	push rax
 18389 0000D47E 488B4538                	mov rax, PARAM(3)	; param str2
 18390 0000D482 50                      	push rax
 18391 0000D483 6A02                    	push 2	; arg count
 18392 0000D485 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18393 0000D48D 803805                  	cmp byte [rax], T_undefined
 18394 0000D490 0F84DE7D0000            	je L_error_fvar_undefined
 18395 0000D496 803804                  	cmp byte [rax], T_closure
 18396 0000D499 0F85597E0000            	jne L_error_non_closure
 18397 0000D49F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18398 0000D4A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18399 0000D4A5 50                      	push rax
 18400                                  	; preparing a non-tail-call
 18401 0000D4A6 488B4520                	mov rax, PARAM(0)	; param i
 18402 0000D4AA 50                      	push rax
 18403 0000D4AB 488B4528                	mov rax, PARAM(1)	; param str1
 18404 0000D4AF 50                      	push rax
 18405 0000D4B0 6A02                    	push 2	; arg count
 18406 0000D4B2 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18407 0000D4BA 803805                  	cmp byte [rax], T_undefined
 18408 0000D4BD 0F84B17D0000            	je L_error_fvar_undefined
 18409 0000D4C3 803804                  	cmp byte [rax], T_closure
 18410 0000D4C6 0F852C7E0000            	jne L_error_non_closure
 18411 0000D4CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18412 0000D4CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 18413 0000D4D2 50                      	push rax
 18414 0000D4D3 6A02                    	push 2	; arg count
 18415 0000D4D5 488B4510                	mov rax, ENV
 18416 0000D4D9 488B4008                	mov rax, qword [rax + 8 * 1]
 18417 0000D4DD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18418 0000D4E0 803804                  	cmp byte [rax], T_closure
 18419 0000D4E3 0F850F7E0000            	jne L_error_non_closure
 18420 0000D4E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18421 0000D4EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18422 0000D4EF 483D[02000000]          	cmp rax, sob_boolean_false
 18423 0000D4F5 0F856F010000            	jne .L_or_end_0026
 18424                                  
 18425                                  	; preparing a non-tail-call
 18426 0000D4FB 488B4530                	mov rax, PARAM(2)	; param len1
 18427 0000D4FF 50                      	push rax
 18428 0000D500 488B4520                	mov rax, PARAM(0)	; param i
 18429 0000D504 50                      	push rax
 18430 0000D505 6A02                    	push 2	; arg count
 18431 0000D507 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 18432 0000D50F 803805                  	cmp byte [rax], T_undefined
 18433 0000D512 0F845C7D0000            	je L_error_fvar_undefined
 18434 0000D518 803804                  	cmp byte [rax], T_closure
 18435 0000D51B 0F85D77D0000            	jne L_error_non_closure
 18436 0000D521 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18437 0000D524 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18438 0000D527 483D[02000000]          	cmp rax, sob_boolean_false
 18439 0000D52D 0F842D010000            	je .L_if_else_0169
 18440                                  	; preparing a non-tail-call
 18441                                  	; preparing a non-tail-call
 18442 0000D533 488B4520                	mov rax, PARAM(0)	; param i
 18443 0000D537 50                      	push rax
 18444 0000D538 488B4538                	mov rax, PARAM(3)	; param str2
 18445 0000D53C 50                      	push rax
 18446 0000D53D 6A02                    	push 2	; arg count
 18447 0000D53F 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18448 0000D547 803805                  	cmp byte [rax], T_undefined
 18449 0000D54A 0F84247D0000            	je L_error_fvar_undefined
 18450 0000D550 803804                  	cmp byte [rax], T_closure
 18451 0000D553 0F859F7D0000            	jne L_error_non_closure
 18452 0000D559 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18453 0000D55C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18454 0000D55F 50                      	push rax
 18455                                  	; preparing a non-tail-call
 18456 0000D560 488B4520                	mov rax, PARAM(0)	; param i
 18457 0000D564 50                      	push rax
 18458 0000D565 488B4528                	mov rax, PARAM(1)	; param str1
 18459 0000D569 50                      	push rax
 18460 0000D56A 6A02                    	push 2	; arg count
 18461 0000D56C 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18462 0000D574 803805                  	cmp byte [rax], T_undefined
 18463 0000D577 0F84F77C0000            	je L_error_fvar_undefined
 18464 0000D57D 803804                  	cmp byte [rax], T_closure
 18465 0000D580 0F85727D0000            	jne L_error_non_closure
 18466 0000D586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18467 0000D589 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18468 0000D58C 50                      	push rax
 18469 0000D58D 6A02                    	push 2	; arg count
 18470 0000D58F 488B4510                	mov rax, ENV
 18471 0000D593 488B4008                	mov rax, qword [rax + 8 * 1]
 18472 0000D597 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18473 0000D59B 803804                  	cmp byte [rax], T_closure
 18474 0000D59E 0F85547D0000            	jne L_error_non_closure
 18475 0000D5A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18476 0000D5A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18477 0000D5AA 483D[02000000]          	cmp rax, sob_boolean_false
 18478 0000D5B0 0F849E000000            	je .L_if_else_0168
 18479                                  	; Initiating tail-call optimization
 18480 0000D5B6 488B4540                	mov rax, PARAM(4)	; param len2
 18481 0000D5BA 50                      	push rax
 18482 0000D5BB 488B4538                	mov rax, PARAM(3)	; param str2
 18483 0000D5BF 50                      	push rax
 18484 0000D5C0 488B4530                	mov rax, PARAM(2)	; param len1
 18485 0000D5C4 50                      	push rax
 18486 0000D5C5 488B4528                	mov rax, PARAM(1)	; param str1
 18487 0000D5C9 50                      	push rax
 18488                                  	; preparing a non-tail-call
 18489 0000D5CA 48B8-                   	mov rax, L_constants + 2270
 18489 0000D5CC [DE08000000000000] 
 18490 0000D5D4 50                      	push rax
 18491 0000D5D5 488B4520                	mov rax, PARAM(0)	; param i
 18492 0000D5D9 50                      	push rax
 18493 0000D5DA 6A02                    	push 2	; arg count
 18494 0000D5DC 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 18495 0000D5E4 803805                  	cmp byte [rax], T_undefined
 18496 0000D5E7 0F84877C0000            	je L_error_fvar_undefined
 18497 0000D5ED 803804                  	cmp byte [rax], T_closure
 18498 0000D5F0 0F85027D0000            	jne L_error_non_closure
 18499 0000D5F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18500 0000D5F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18501 0000D5FC 50                      	push rax
 18502 0000D5FD 6A05                    	push 5	; Number of arguments
 18503 0000D5FF 488B4510                	mov rax, ENV
 18504 0000D603 488B00                  	mov rax, qword [rax + 8 * 0]
 18505 0000D606 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18506 0000D609 488B00                  	mov rax, qword [rax]
 18507 0000D60C 803804                  	cmp byte [rax], T_closure
 18508 0000D60F 0F85E37C0000            	jne L_error_non_closure
 18509 0000D615 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18510 0000D618 FF7508                  	push qword [rbp + 8]
 18511 0000D61B FF7500                  	push qword [rbp]
 18512 0000D61E 41BA09000000            	mov r10, 5 + 4
 18513 0000D624 4C8B4518                	mov r8, COUNT
 18514 0000D628 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18515 0000D62D 4C8D4DF8                	lea r9, [rbp - 8]
 18516                                  .L_tc_recycle_frame_loop_026b:
 18517 0000D631 4983FA00                	cmp r10, 0
 18518 0000D635 7413                    	je .L_tc_recycle_frame_done_026b
 18519 0000D637 4D8B19                  	mov r11, qword [r9]
 18520 0000D63A 4D8918                  	mov qword [r8], r11
 18521 0000D63D 49FFCA                  	dec r10
 18522 0000D640 4983E808                	sub r8, 8
 18523 0000D644 4983E908                	sub r9, 8
 18524 0000D648 EBE7                    	jmp .L_tc_recycle_frame_loop_026b
 18525                                  .L_tc_recycle_frame_done_026b:
 18526 0000D64A 498D6008                	lea rsp, [r8 + 8]
 18527 0000D64E 5D                      	pop rbp
 18528 0000D64F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18529 0000D652 EB0A                    	jmp .L_if_end_0168
 18530                                  .L_if_else_0168:
 18531 0000D654 48B8-                   	mov rax, L_constants + 2
 18531 0000D656 [0200000000000000] 
 18532                                  .L_if_end_0168:
 18533 0000D65E EB0A                    	jmp .L_if_end_0169
 18534                                  .L_if_else_0169:
 18535 0000D660 48B8-                   	mov rax, L_constants + 2
 18535 0000D662 [0200000000000000] 
 18536                                  .L_if_end_0169:
 18537                                  .L_or_end_0026:
 18538 0000D66A C9                      	leave
 18539 0000D66B C23800                  	ret AND_KILL_FRAME(5)
 18540                                  .L_lambda_simple_end_01e3:	; new closure is in rax
 18541 0000D66E 50                      	push rax
 18542 0000D66F 488B4520                	mov rax, PARAM(0)	; param run
 18543 0000D673 8F00                    	pop qword [rax]
 18544 0000D675 48B8-                   	mov rax, sob_void
 18544 0000D677 [0000000000000000] 
 18545                                  
 18546                                  	; preparing a non-tail-call
 18547 0000D67F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18548 0000D684 E8187D0000              	call malloc
 18549 0000D689 50                      	push rax
 18550 0000D68A BF08000000              	mov rdi, 8 * 1	; new rib
 18551 0000D68F E80D7D0000              	call malloc
 18552 0000D694 50                      	push rax
 18553 0000D695 BF18000000              	mov rdi, 8 * 3	; extended env
 18554 0000D69A E8027D0000              	call malloc
 18555 0000D69F 488B7D10                	mov rdi, ENV
 18556 0000D6A3 BE00000000              	mov rsi, 0
 18557 0000D6A8 BA01000000              	mov rdx, 1
 18558                                  .L_lambda_simple_env_loop_01e4:	; ext_env[i + 1] <-- env[i]
 18559 0000D6AD 4883FE02                	cmp rsi, 2
 18560 0000D6B1 7410                    	je .L_lambda_simple_env_end_01e4
 18561 0000D6B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18562 0000D6B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18563 0000D6BB 48FFC6                  	inc rsi
 18564 0000D6BE 48FFC2                  	inc rdx
 18565 0000D6C1 EBEA                    	jmp .L_lambda_simple_env_loop_01e4
 18566                                  .L_lambda_simple_env_end_01e4:
 18567 0000D6C3 5B                      	pop rbx
 18568 0000D6C4 BE00000000              	mov rsi, 0
 18569                                  .L_lambda_simple_params_loop_01e4:	; copy params
 18570 0000D6C9 4883FE01                	cmp rsi, 1
 18571 0000D6CD 740E                    	je .L_lambda_simple_params_end_01e4
 18572 0000D6CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18573 0000D6D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18574 0000D6D8 48FFC6                  	inc rsi
 18575 0000D6DB EBEC                    	jmp .L_lambda_simple_params_loop_01e4
 18576                                  .L_lambda_simple_params_end_01e4:
 18577 0000D6DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18578 0000D6E0 4889C3                  	mov rbx, rax
 18579 0000D6E3 58                      	pop rax
 18580 0000D6E4 C60004                  	mov byte [rax], T_closure
 18581 0000D6E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18582 0000D6EB 48C74009[F8D60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e4
 18583 0000D6F3 E988020000              	jmp .L_lambda_simple_end_01e4
 18584                                  .L_lambda_simple_code_01e4:	; lambda-simple body
 18585 0000D6F8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18586 0000D6FE 740B                    	je .L_lambda_simple_arity_check_ok_01e4
 18587 0000D700 FF742410                	push qword [rsp + 8 * 2]
 18588 0000D704 6A02                    	push 2
 18589 0000D706 E94F7C0000              	jmp L_error_incorrect_arity_simple
 18590                                  .L_lambda_simple_arity_check_ok_01e4:
 18591 0000D70B C8000000                	enter 0, 0
 18592                                  	; Initiating tail-call optimization
 18593                                  	; preparing a non-tail-call
 18594 0000D70F 488B4528                	mov rax, PARAM(1)	; param str2
 18595 0000D713 50                      	push rax
 18596 0000D714 6A01                    	push 1	; arg count
 18597 0000D716 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 18598 0000D71E 803805                  	cmp byte [rax], T_undefined
 18599 0000D721 0F844D7B0000            	je L_error_fvar_undefined
 18600 0000D727 803804                  	cmp byte [rax], T_closure
 18601 0000D72A 0F85C87B0000            	jne L_error_non_closure
 18602 0000D730 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18603 0000D733 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18604 0000D736 50                      	push rax
 18605                                  	; preparing a non-tail-call
 18606 0000D737 488B4520                	mov rax, PARAM(0)	; param str1
 18607 0000D73B 50                      	push rax
 18608 0000D73C 6A01                    	push 1	; arg count
 18609 0000D73E 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 18610 0000D746 803805                  	cmp byte [rax], T_undefined
 18611 0000D749 0F84257B0000            	je L_error_fvar_undefined
 18612 0000D74F 803804                  	cmp byte [rax], T_closure
 18613 0000D752 0F85A07B0000            	jne L_error_non_closure
 18614 0000D758 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18615 0000D75B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18616 0000D75E 50                      	push rax
 18617 0000D75F 6A02                    	push 2	; Number of arguments
 18618 0000D761 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18619 0000D766 E8367C0000              	call malloc
 18620 0000D76B 50                      	push rax
 18621 0000D76C BF10000000              	mov rdi, 8 * 2	; new rib
 18622 0000D771 E82B7C0000              	call malloc
 18623 0000D776 50                      	push rax
 18624 0000D777 BF20000000              	mov rdi, 8 * 4	; extended env
 18625 0000D77C E8207C0000              	call malloc
 18626 0000D781 488B7D10                	mov rdi, ENV
 18627 0000D785 BE00000000              	mov rsi, 0
 18628 0000D78A BA01000000              	mov rdx, 1
 18629                                  .L_lambda_simple_env_loop_01e5:	; ext_env[i + 1] <-- env[i]
 18630 0000D78F 4883FE03                	cmp rsi, 3
 18631 0000D793 7410                    	je .L_lambda_simple_env_end_01e5
 18632 0000D795 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18633 0000D799 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18634 0000D79D 48FFC6                  	inc rsi
 18635 0000D7A0 48FFC2                  	inc rdx
 18636 0000D7A3 EBEA                    	jmp .L_lambda_simple_env_loop_01e5
 18637                                  .L_lambda_simple_env_end_01e5:
 18638 0000D7A5 5B                      	pop rbx
 18639 0000D7A6 BE00000000              	mov rsi, 0
 18640                                  .L_lambda_simple_params_loop_01e5:	; copy params
 18641 0000D7AB 4883FE02                	cmp rsi, 2
 18642 0000D7AF 740E                    	je .L_lambda_simple_params_end_01e5
 18643 0000D7B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18644 0000D7B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18645 0000D7BA 48FFC6                  	inc rsi
 18646 0000D7BD EBEC                    	jmp .L_lambda_simple_params_loop_01e5
 18647                                  .L_lambda_simple_params_end_01e5:
 18648 0000D7BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18649 0000D7C2 4889C3                  	mov rbx, rax
 18650 0000D7C5 58                      	pop rax
 18651 0000D7C6 C60004                  	mov byte [rax], T_closure
 18652 0000D7C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18653 0000D7CD 48C74009[DAD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e5
 18654 0000D7D5 E95C010000              	jmp .L_lambda_simple_end_01e5
 18655                                  .L_lambda_simple_code_01e5:	; lambda-simple body
 18656 0000D7DA 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18657 0000D7E0 740B                    	je .L_lambda_simple_arity_check_ok_01e5
 18658 0000D7E2 FF742410                	push qword [rsp + 8 * 2]
 18659 0000D7E6 6A02                    	push 2
 18660 0000D7E8 E96D7B0000              	jmp L_error_incorrect_arity_simple
 18661                                  .L_lambda_simple_arity_check_ok_01e5:
 18662 0000D7ED C8000000                	enter 0, 0
 18663                                  	; preparing a non-tail-call
 18664 0000D7F1 488B4528                	mov rax, PARAM(1)	; param len2
 18665 0000D7F5 50                      	push rax
 18666 0000D7F6 488B4520                	mov rax, PARAM(0)	; param len1
 18667 0000D7FA 50                      	push rax
 18668 0000D7FB 6A02                    	push 2	; arg count
 18669 0000D7FD 488B0425[2C0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18670 0000D805 803805                  	cmp byte [rax], T_undefined
 18671 0000D808 0F84667A0000            	je L_error_fvar_undefined
 18672 0000D80E 803804                  	cmp byte [rax], T_closure
 18673 0000D811 0F85E17A0000            	jne L_error_non_closure
 18674 0000D817 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18675 0000D81A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18676 0000D81D 483D[02000000]          	cmp rax, sob_boolean_false
 18677 0000D823 0F8487000000            	je .L_if_else_016a
 18678                                  	; Initiating tail-call optimization
 18679 0000D829 488B4528                	mov rax, PARAM(1)	; param len2
 18680 0000D82D 50                      	push rax
 18681 0000D82E 488B4510                	mov rax, ENV
 18682 0000D832 488B00                  	mov rax, qword [rax + 8 * 0]
 18683 0000D835 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18684 0000D839 50                      	push rax
 18685 0000D83A 488B4520                	mov rax, PARAM(0)	; param len1
 18686 0000D83E 50                      	push rax
 18687 0000D83F 488B4510                	mov rax, ENV
 18688 0000D843 488B00                  	mov rax, qword [rax + 8 * 0]
 18689 0000D846 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18690 0000D849 50                      	push rax
 18691 0000D84A 48B8-                   	mov rax, L_constants + 2135
 18691 0000D84C [5708000000000000] 
 18692 0000D854 50                      	push rax
 18693 0000D855 6A05                    	push 5	; Number of arguments
 18694 0000D857 488B4510                	mov rax, ENV
 18695 0000D85B 488B4008                	mov rax, qword [rax + 8 * 1]
 18696 0000D85F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18697 0000D862 488B00                  	mov rax, qword [rax]
 18698 0000D865 803804                  	cmp byte [rax], T_closure
 18699 0000D868 0F858A7A0000            	jne L_error_non_closure
 18700 0000D86E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18701 0000D871 FF7508                  	push qword [rbp + 8]
 18702 0000D874 FF7500                  	push qword [rbp]
 18703 0000D877 41BA09000000            	mov r10, 5 + 4
 18704 0000D87D 4C8B4518                	mov r8, COUNT
 18705 0000D881 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18706 0000D886 4C8D4DF8                	lea r9, [rbp - 8]
 18707                                  .L_tc_recycle_frame_loop_026c:
 18708 0000D88A 4983FA00                	cmp r10, 0
 18709 0000D88E 7413                    	je .L_tc_recycle_frame_done_026c
 18710 0000D890 4D8B19                  	mov r11, qword [r9]
 18711 0000D893 4D8918                  	mov qword [r8], r11
 18712 0000D896 49FFCA                  	dec r10
 18713 0000D899 4983E808                	sub r8, 8
 18714 0000D89D 4983E908                	sub r9, 8
 18715 0000D8A1 EBE7                    	jmp .L_tc_recycle_frame_loop_026c
 18716                                  .L_tc_recycle_frame_done_026c:
 18717 0000D8A3 498D6008                	lea rsp, [r8 + 8]
 18718 0000D8A7 5D                      	pop rbp
 18719 0000D8A8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18720 0000D8AB E982000000              	jmp .L_if_end_016a
 18721                                  .L_if_else_016a:
 18722                                  	; Initiating tail-call optimization
 18723 0000D8B0 488B4520                	mov rax, PARAM(0)	; param len1
 18724 0000D8B4 50                      	push rax
 18725 0000D8B5 488B4510                	mov rax, ENV
 18726 0000D8B9 488B00                  	mov rax, qword [rax + 8 * 0]
 18727 0000D8BC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18728 0000D8BF 50                      	push rax
 18729 0000D8C0 488B4528                	mov rax, PARAM(1)	; param len2
 18730 0000D8C4 50                      	push rax
 18731 0000D8C5 488B4510                	mov rax, ENV
 18732 0000D8C9 488B00                  	mov rax, qword [rax + 8 * 0]
 18733 0000D8CC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18734 0000D8D0 50                      	push rax
 18735 0000D8D1 48B8-                   	mov rax, L_constants + 2135
 18735 0000D8D3 [5708000000000000] 
 18736 0000D8DB 50                      	push rax
 18737 0000D8DC 6A05                    	push 5	; Number of arguments
 18738 0000D8DE 488B4510                	mov rax, ENV
 18739 0000D8E2 488B4008                	mov rax, qword [rax + 8 * 1]
 18740 0000D8E6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18741 0000D8E9 488B00                  	mov rax, qword [rax]
 18742 0000D8EC 803804                  	cmp byte [rax], T_closure
 18743 0000D8EF 0F85037A0000            	jne L_error_non_closure
 18744 0000D8F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18745 0000D8F8 FF7508                  	push qword [rbp + 8]
 18746 0000D8FB FF7500                  	push qword [rbp]
 18747 0000D8FE 41BA09000000            	mov r10, 5 + 4
 18748 0000D904 4C8B4518                	mov r8, COUNT
 18749 0000D908 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18750 0000D90D 4C8D4DF8                	lea r9, [rbp - 8]
 18751                                  .L_tc_recycle_frame_loop_026d:
 18752 0000D911 4983FA00                	cmp r10, 0
 18753 0000D915 7413                    	je .L_tc_recycle_frame_done_026d
 18754 0000D917 4D8B19                  	mov r11, qword [r9]
 18755 0000D91A 4D8918                  	mov qword [r8], r11
 18756 0000D91D 49FFCA                  	dec r10
 18757 0000D920 4983E808                	sub r8, 8
 18758 0000D924 4983E908                	sub r9, 8
 18759 0000D928 EBE7                    	jmp .L_tc_recycle_frame_loop_026d
 18760                                  .L_tc_recycle_frame_done_026d:
 18761 0000D92A 498D6008                	lea rsp, [r8 + 8]
 18762 0000D92E 5D                      	pop rbp
 18763 0000D92F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18764                                  .L_if_end_016a:
 18765 0000D932 C9                      	leave
 18766 0000D933 C22000                  	ret AND_KILL_FRAME(2)
 18767                                  .L_lambda_simple_end_01e5:	; new closure is in rax
 18768 0000D936 803804                  	cmp byte [rax], T_closure
 18769 0000D939 0F85B9790000            	jne L_error_non_closure
 18770 0000D93F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18771 0000D942 FF7508                  	push qword [rbp + 8]
 18772 0000D945 FF7500                  	push qword [rbp]
 18773 0000D948 41BA06000000            	mov r10, 2 + 4
 18774 0000D94E 4C8B4518                	mov r8, COUNT
 18775 0000D952 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 18776 0000D957 4C8D4DF8                	lea r9, [rbp - 8]
 18777                                  .L_tc_recycle_frame_loop_026e:
 18778 0000D95B 4983FA00                	cmp r10, 0
 18779 0000D95F 7413                    	je .L_tc_recycle_frame_done_026e
 18780 0000D961 4D8B19                  	mov r11, qword [r9]
 18781 0000D964 4D8918                  	mov qword [r8], r11
 18782 0000D967 49FFCA                  	dec r10
 18783 0000D96A 4983E808                	sub r8, 8
 18784 0000D96E 4983E908                	sub r9, 8
 18785 0000D972 EBE7                    	jmp .L_tc_recycle_frame_loop_026e
 18786                                  .L_tc_recycle_frame_done_026e:
 18787 0000D974 498D6008                	lea rsp, [r8 + 8]
 18788 0000D978 5D                      	pop rbp
 18789 0000D979 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18790 0000D97C C9                      	leave
 18791 0000D97D C22000                  	ret AND_KILL_FRAME(2)
 18792                                  .L_lambda_simple_end_01e4:	; new closure is in rax
 18793 0000D980 50                      	push rax
 18794 0000D981 6A01                    	push 1	; arg count
 18795 0000D983 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18796 0000D988 E8147A0000              	call malloc
 18797 0000D98D 50                      	push rax
 18798 0000D98E BF08000000              	mov rdi, 8 * 1	; new rib
 18799 0000D993 E8097A0000              	call malloc
 18800 0000D998 50                      	push rax
 18801 0000D999 BF18000000              	mov rdi, 8 * 3	; extended env
 18802 0000D99E E8FE790000              	call malloc
 18803 0000D9A3 488B7D10                	mov rdi, ENV
 18804 0000D9A7 BE00000000              	mov rsi, 0
 18805 0000D9AC BA01000000              	mov rdx, 1
 18806                                  .L_lambda_simple_env_loop_01e6:	; ext_env[i + 1] <-- env[i]
 18807 0000D9B1 4883FE02                	cmp rsi, 2
 18808 0000D9B5 7410                    	je .L_lambda_simple_env_end_01e6
 18809 0000D9B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18810 0000D9BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18811 0000D9BF 48FFC6                  	inc rsi
 18812 0000D9C2 48FFC2                  	inc rdx
 18813 0000D9C5 EBEA                    	jmp .L_lambda_simple_env_loop_01e6
 18814                                  .L_lambda_simple_env_end_01e6:
 18815 0000D9C7 5B                      	pop rbx
 18816 0000D9C8 BE00000000              	mov rsi, 0
 18817                                  .L_lambda_simple_params_loop_01e6:	; copy params
 18818 0000D9CD 4883FE01                	cmp rsi, 1
 18819 0000D9D1 740E                    	je .L_lambda_simple_params_end_01e6
 18820 0000D9D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18821 0000D9D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18822 0000D9DC 48FFC6                  	inc rsi
 18823 0000D9DF EBEC                    	jmp .L_lambda_simple_params_loop_01e6
 18824                                  .L_lambda_simple_params_end_01e6:
 18825 0000D9E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18826 0000D9E4 4889C3                  	mov rbx, rax
 18827 0000D9E7 58                      	pop rax
 18828 0000D9E8 C60004                  	mov byte [rax], T_closure
 18829 0000D9EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18830 0000D9EF 48C74009[FCD90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e6
 18831 0000D9F7 E9E4040000              	jmp .L_lambda_simple_end_01e6
 18832                                  .L_lambda_simple_code_01e6:	; lambda-simple body
 18833 0000D9FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18834 0000DA02 740B                    	je .L_lambda_simple_arity_check_ok_01e6
 18835 0000DA04 FF742410                	push qword [rsp + 8 * 2]
 18836 0000DA08 6A01                    	push 1
 18837 0000DA0A E94B790000              	jmp L_error_incorrect_arity_simple
 18838                                  .L_lambda_simple_arity_check_ok_01e6:
 18839 0000DA0F C8000000                	enter 0, 0
 18840                                  	; Initiating tail-call optimization
 18841 0000DA13 48B8-                   	mov rax, L_constants + 2007
 18841 0000DA15 [D707000000000000] 
 18842 0000DA1D 50                      	push rax
 18843 0000DA1E 6A01                    	push 1	; Number of arguments
 18844 0000DA20 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18845 0000DA25 E877790000              	call malloc
 18846 0000DA2A 50                      	push rax
 18847 0000DA2B BF08000000              	mov rdi, 8 * 1	; new rib
 18848 0000DA30 E86C790000              	call malloc
 18849 0000DA35 50                      	push rax
 18850 0000DA36 BF20000000              	mov rdi, 8 * 4	; extended env
 18851 0000DA3B E861790000              	call malloc
 18852 0000DA40 488B7D10                	mov rdi, ENV
 18853 0000DA44 BE00000000              	mov rsi, 0
 18854 0000DA49 BA01000000              	mov rdx, 1
 18855                                  .L_lambda_simple_env_loop_01e7:	; ext_env[i + 1] <-- env[i]
 18856 0000DA4E 4883FE03                	cmp rsi, 3
 18857 0000DA52 7410                    	je .L_lambda_simple_env_end_01e7
 18858 0000DA54 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18859 0000DA58 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18860 0000DA5C 48FFC6                  	inc rsi
 18861 0000DA5F 48FFC2                  	inc rdx
 18862 0000DA62 EBEA                    	jmp .L_lambda_simple_env_loop_01e7
 18863                                  .L_lambda_simple_env_end_01e7:
 18864 0000DA64 5B                      	pop rbx
 18865 0000DA65 BE00000000              	mov rsi, 0
 18866                                  .L_lambda_simple_params_loop_01e7:	; copy params
 18867 0000DA6A 4883FE01                	cmp rsi, 1
 18868 0000DA6E 740E                    	je .L_lambda_simple_params_end_01e7
 18869 0000DA70 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18870 0000DA75 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18871 0000DA79 48FFC6                  	inc rsi
 18872 0000DA7C EBEC                    	jmp .L_lambda_simple_params_loop_01e7
 18873                                  .L_lambda_simple_params_end_01e7:
 18874 0000DA7E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18875 0000DA81 4889C3                  	mov rbx, rax
 18876 0000DA84 58                      	pop rax
 18877 0000DA85 C60004                  	mov byte [rax], T_closure
 18878 0000DA88 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18879 0000DA8C 48C74009[99DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e7
 18880 0000DA94 E9FD030000              	jmp .L_lambda_simple_end_01e7
 18881                                  .L_lambda_simple_code_01e7:	; lambda-simple body
 18882 0000DA99 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18883 0000DA9F 740B                    	je .L_lambda_simple_arity_check_ok_01e7
 18884 0000DAA1 FF742410                	push qword [rsp + 8 * 2]
 18885 0000DAA5 6A01                    	push 1
 18886 0000DAA7 E9AE780000              	jmp L_error_incorrect_arity_simple
 18887                                  .L_lambda_simple_arity_check_ok_01e7:
 18888 0000DAAC C8000000                	enter 0, 0
 18889 0000DAB0 BF08000000              	mov rdi, 8 * 1
 18890 0000DAB5 E8E7780000              	call malloc
 18891 0000DABA 488B5D20                	mov rbx, PARAM(0)
 18892 0000DABE 488918                  	mov qword [rax], rbx
 18893 0000DAC1 48894520                	mov PARAM(0), rax
 18894 0000DAC5 48B8-                   	mov rax, sob_void
 18894 0000DAC7 [0000000000000000] 
 18895                                  
 18896 0000DACF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18897 0000DAD4 E8C8780000              	call malloc
 18898 0000DAD9 50                      	push rax
 18899 0000DADA BF08000000              	mov rdi, 8 * 1	; new rib
 18900 0000DADF E8BD780000              	call malloc
 18901 0000DAE4 50                      	push rax
 18902 0000DAE5 BF28000000              	mov rdi, 8 * 5	; extended env
 18903 0000DAEA E8B2780000              	call malloc
 18904 0000DAEF 488B7D10                	mov rdi, ENV
 18905 0000DAF3 BE00000000              	mov rsi, 0
 18906 0000DAF8 BA01000000              	mov rdx, 1
 18907                                  .L_lambda_simple_env_loop_01e8:	; ext_env[i + 1] <-- env[i]
 18908 0000DAFD 4883FE04                	cmp rsi, 4
 18909 0000DB01 7410                    	je .L_lambda_simple_env_end_01e8
 18910 0000DB03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18911 0000DB07 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18912 0000DB0B 48FFC6                  	inc rsi
 18913 0000DB0E 48FFC2                  	inc rdx
 18914 0000DB11 EBEA                    	jmp .L_lambda_simple_env_loop_01e8
 18915                                  .L_lambda_simple_env_end_01e8:
 18916 0000DB13 5B                      	pop rbx
 18917 0000DB14 BE00000000              	mov rsi, 0
 18918                                  .L_lambda_simple_params_loop_01e8:	; copy params
 18919 0000DB19 4883FE01                	cmp rsi, 1
 18920 0000DB1D 740E                    	je .L_lambda_simple_params_end_01e8
 18921 0000DB1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18922 0000DB24 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18923 0000DB28 48FFC6                  	inc rsi
 18924 0000DB2B EBEC                    	jmp .L_lambda_simple_params_loop_01e8
 18925                                  .L_lambda_simple_params_end_01e8:
 18926 0000DB2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18927 0000DB30 4889C3                  	mov rbx, rax
 18928 0000DB33 58                      	pop rax
 18929 0000DB34 C60004                  	mov byte [rax], T_closure
 18930 0000DB37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18931 0000DB3B 48C74009[48DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e8
 18932 0000DB43 E954010000              	jmp .L_lambda_simple_end_01e8
 18933                                  .L_lambda_simple_code_01e8:	; lambda-simple body
 18934 0000DB48 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18935 0000DB4E 740B                    	je .L_lambda_simple_arity_check_ok_01e8
 18936 0000DB50 FF742410                	push qword [rsp + 8 * 2]
 18937 0000DB54 6A02                    	push 2
 18938 0000DB56 E9FF770000              	jmp L_error_incorrect_arity_simple
 18939                                  .L_lambda_simple_arity_check_ok_01e8:
 18940 0000DB5B C8000000                	enter 0, 0
 18941                                  	; preparing a non-tail-call
 18942 0000DB5F 488B4528                	mov rax, PARAM(1)	; param strs
 18943 0000DB63 50                      	push rax
 18944 0000DB64 6A01                    	push 1	; arg count
 18945 0000DB66 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 18946 0000DB6E 803805                  	cmp byte [rax], T_undefined
 18947 0000DB71 0F84FD760000            	je L_error_fvar_undefined
 18948 0000DB77 803804                  	cmp byte [rax], T_closure
 18949 0000DB7A 0F8578770000            	jne L_error_non_closure
 18950 0000DB80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18951 0000DB83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18952 0000DB86 483D[02000000]          	cmp rax, sob_boolean_false
 18953 0000DB8C 0F8506010000            	jne .L_or_end_0027
 18954                                  
 18955                                  	; preparing a non-tail-call
 18956                                  	; preparing a non-tail-call
 18957 0000DB92 488B4528                	mov rax, PARAM(1)	; param strs
 18958 0000DB96 50                      	push rax
 18959 0000DB97 6A01                    	push 1	; arg count
 18960 0000DB99 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 18961 0000DBA1 803805                  	cmp byte [rax], T_undefined
 18962 0000DBA4 0F84CA760000            	je L_error_fvar_undefined
 18963 0000DBAA 803804                  	cmp byte [rax], T_closure
 18964 0000DBAD 0F8545770000            	jne L_error_non_closure
 18965 0000DBB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18966 0000DBB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18967 0000DBB9 50                      	push rax
 18968 0000DBBA 488B4520                	mov rax, PARAM(0)	; param str
 18969 0000DBBE 50                      	push rax
 18970 0000DBBF 6A02                    	push 2	; arg count
 18971 0000DBC1 488B4510                	mov rax, ENV
 18972 0000DBC5 488B4008                	mov rax, qword [rax + 8 * 1]
 18973 0000DBC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 18974 0000DBCC 803804                  	cmp byte [rax], T_closure
 18975 0000DBCF 0F8523770000            	jne L_error_non_closure
 18976 0000DBD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18977 0000DBD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18978 0000DBDB 483D[02000000]          	cmp rax, sob_boolean_false
 18979 0000DBE1 0F84A7000000            	je .L_if_else_016b
 18980                                  	; Initiating tail-call optimization
 18981                                  	; preparing a non-tail-call
 18982 0000DBE7 488B4528                	mov rax, PARAM(1)	; param strs
 18983 0000DBEB 50                      	push rax
 18984 0000DBEC 6A01                    	push 1	; arg count
 18985 0000DBEE 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 18986 0000DBF6 803805                  	cmp byte [rax], T_undefined
 18987 0000DBF9 0F8475760000            	je L_error_fvar_undefined
 18988 0000DBFF 803804                  	cmp byte [rax], T_closure
 18989 0000DC02 0F85F0760000            	jne L_error_non_closure
 18990 0000DC08 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18991 0000DC0B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18992 0000DC0E 50                      	push rax
 18993                                  	; preparing a non-tail-call
 18994 0000DC0F 488B4528                	mov rax, PARAM(1)	; param strs
 18995 0000DC13 50                      	push rax
 18996 0000DC14 6A01                    	push 1	; arg count
 18997 0000DC16 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 18998 0000DC1E 803805                  	cmp byte [rax], T_undefined
 18999 0000DC21 0F844D760000            	je L_error_fvar_undefined
 19000 0000DC27 803804                  	cmp byte [rax], T_closure
 19001 0000DC2A 0F85C8760000            	jne L_error_non_closure
 19002 0000DC30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19003 0000DC33 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19004 0000DC36 50                      	push rax
 19005 0000DC37 6A02                    	push 2	; Number of arguments
 19006 0000DC39 488B4510                	mov rax, ENV
 19007 0000DC3D 488B00                  	mov rax, qword [rax + 8 * 0]
 19008 0000DC40 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19009 0000DC43 488B00                  	mov rax, qword [rax]
 19010 0000DC46 803804                  	cmp byte [rax], T_closure
 19011 0000DC49 0F85A9760000            	jne L_error_non_closure
 19012 0000DC4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19013 0000DC52 FF7508                  	push qword [rbp + 8]
 19014 0000DC55 FF7500                  	push qword [rbp]
 19015 0000DC58 41BA06000000            	mov r10, 2 + 4
 19016 0000DC5E 4C8B4518                	mov r8, COUNT
 19017 0000DC62 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19018 0000DC67 4C8D4DF8                	lea r9, [rbp - 8]
 19019                                  .L_tc_recycle_frame_loop_026f:
 19020 0000DC6B 4983FA00                	cmp r10, 0
 19021 0000DC6F 7413                    	je .L_tc_recycle_frame_done_026f
 19022 0000DC71 4D8B19                  	mov r11, qword [r9]
 19023 0000DC74 4D8918                  	mov qword [r8], r11
 19024 0000DC77 49FFCA                  	dec r10
 19025 0000DC7A 4983E808                	sub r8, 8
 19026 0000DC7E 4983E908                	sub r9, 8
 19027 0000DC82 EBE7                    	jmp .L_tc_recycle_frame_loop_026f
 19028                                  .L_tc_recycle_frame_done_026f:
 19029 0000DC84 498D6008                	lea rsp, [r8 + 8]
 19030 0000DC88 5D                      	pop rbp
 19031 0000DC89 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19032 0000DC8C EB0A                    	jmp .L_if_end_016b
 19033                                  .L_if_else_016b:
 19034 0000DC8E 48B8-                   	mov rax, L_constants + 2
 19034 0000DC90 [0200000000000000] 
 19035                                  .L_if_end_016b:
 19036                                  .L_or_end_0027:
 19037 0000DC98 C9                      	leave
 19038 0000DC99 C22000                  	ret AND_KILL_FRAME(2)
 19039                                  .L_lambda_simple_end_01e8:	; new closure is in rax
 19040 0000DC9C 50                      	push rax
 19041 0000DC9D 488B4520                	mov rax, PARAM(0)	; param run
 19042 0000DCA1 8F00                    	pop qword [rax]
 19043 0000DCA3 48B8-                   	mov rax, sob_void
 19043 0000DCA5 [0000000000000000] 
 19044                                  
 19045 0000DCAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19046 0000DCB2 E8EA760000              	call malloc
 19047 0000DCB7 50                      	push rax
 19048 0000DCB8 BF08000000              	mov rdi, 8 * 1	; new rib
 19049 0000DCBD E8DF760000              	call malloc
 19050 0000DCC2 50                      	push rax
 19051 0000DCC3 BF28000000              	mov rdi, 8 * 5	; extended env
 19052 0000DCC8 E8D4760000              	call malloc
 19053 0000DCCD 488B7D10                	mov rdi, ENV
 19054 0000DCD1 BE00000000              	mov rsi, 0
 19055 0000DCD6 BA01000000              	mov rdx, 1
 19056                                  .L_lambda_opt_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 19057 0000DCDB 4883FE04                	cmp rsi, 4
 19058 0000DCDF 7410                    	je .L_lambda_opt_env_end_0044
 19059 0000DCE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19060 0000DCE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19061 0000DCE9 48FFC6                  	inc rsi
 19062 0000DCEC 48FFC2                  	inc rdx
 19063 0000DCEF EBEA                    	jmp .L_lambda_opt_env_loop_0044
 19064                                  .L_lambda_opt_env_end_0044:
 19065 0000DCF1 5B                      	pop rbx
 19066 0000DCF2 BE00000000              	mov rsi, 0
 19067                                  .L_lambda_opt_params_loop_0044:	; copy params
 19068 0000DCF7 4883FE01                	cmp rsi, 1
 19069 0000DCFB 740E                    	je .L_lambda_opt_params_end_0044
 19070 0000DCFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19071 0000DD02 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19072 0000DD06 48FFC6                  	inc rsi
 19073 0000DD09 EBEC                    	jmp .L_lambda_opt_params_loop_0044
 19074                                  .L_lambda_opt_params_end_0044:
 19075 0000DD0B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19076 0000DD0E 4889C3                  	mov rbx, rax
 19077 0000DD11 58                      	pop rax
 19078 0000DD12 C60004                  	mov byte [rax], T_closure
 19079 0000DD15 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19080 0000DD19 48C74009[26DD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0044
 19081 0000DD21 E96C010000              	jmp .L_lambda_opt_end_0044
 19082                                  .L_lambda_opt_code_0044:
 19083 0000DD26 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 19084 0000DD2B 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 19085 0000DD2F 7407                    	je .L_lambda_opt_arity_check_exact_0044	; Jump if arity matches
 19086 0000DD31 7F4C                    	jg .L_lambda_opt_arity_check_more_0044	; Jump if more arguments passed
 19087 0000DD33 E936760000              	jmp L_error_incorrect_arity_opt
 19088                                  .L_lambda_opt_arity_check_exact_0044:
 19089 0000DD38 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 19090 0000DD3B 4983C603                	add r14, 3 ; add 3 first stack values
 19091 0000DD3F 41BF00000000            	mov r15, 0 ; r15 = index
 19092 0000DD45 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 19093 0000DD49 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 19094 0000DD51 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0044
 19095                                  .L_lambda_opt_stack_shrink_loop_0044:
 19096 0000DD53 4983FE00                	cmp r14, 0
 19097 0000DD57 7E11                    	jle .L_make_lambda_opt_exact_finish_0044
 19098 0000DD59 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 19099 0000DD5E 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 19100 0000DD62 49FFCE                  	dec r14 ; next loop value
 19101 0000DD65 49FFC7                  	inc r15 ; update i
 19102 0000DD68 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0044
 19103                                  .L_make_lambda_opt_exact_finish_0044:
 19104 0000DD6A 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 19105 0000DD72 49FFC2                  	inc r10
 19106 0000DD75 4C89542410              	mov qword [rsp + 8 * 2], r10
 19107 0000DD7A E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0044
 19108                                  .L_lambda_opt_arity_check_more_0044:
 19109 0000DD7F 4D89D6                  	mov r14, r10 ; r14 = num args
 19110 0000DD82 4D89D7                  	mov r15, r10 ; r15 = num args
 19111 0000DD85 41B901000000            	mov r9, 1; r9 = number of params 
 19112 0000DD8B 4D29CE                  	sub r14, r9 ; r14 = extra args
 19113 0000DD8E 4D01F1                  	add r9, r14 ; r9 = num args
 19114 0000DD91 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 19114 0000DD93 [0100000000000000] 
 19115 0000DD9B EB00                    	jmp .L_make_lambda_opt_arg_list_0044
 19116                                  .L_make_lambda_opt_arg_list_0044:
 19117 0000DD9D 4983FE00                	cmp r14, 0
 19118 0000DDA1 7E25                    	jle .L_make_lambda_opt_stack_fixed_0044
 19119 0000DDA3 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 19120 0000DDA8 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 19121 0000DDAD E8EF750000              	call malloc                         ; Allocate memory, result in rax
 19122 0000DDB2 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 19123 0000DDB5 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 19124 0000DDB9 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 19125 0000DDBD 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 19126 0000DDC0 49FFC9                  	dec r9                              ; args index minus 1
 19127 0000DDC3 49FFCE                  	dec r14                             ; next iteration
 19128 0000DDC6 EBD5                    	jmp .L_make_lambda_opt_arg_list_0044
 19129                                  .L_make_lambda_opt_stack_fixed_0044:
 19130 0000DDC8 4D89FE                  	mov r14, r15 ; r14 = num args
 19131 0000DDCB 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 19132 0000DDCE 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 19133 0000DDD2 4D89C1                  	mov r9, r8
 19134 0000DDD5 41BA01000000            	mov r10, 1; r10 = num of params
 19135 0000DDDB 4D29D6                  	sub r14, r10 ; r14 = extra args
 19136 0000DDDE 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 19137 0000DDE1 49FFCE                  	dec r14 ; how much we need to change stack wise?
 19138 0000DDE4 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 19139 0000DDE9 4D89CC                  	mov r12, r9
 19140 0000DDEC 4D29F4                  	sub r12, r14
 19141 0000DDEF 49FFCC                  	dec r12
 19142 0000DDF2 49FFCC                  	dec r12
 19143 0000DDF5 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0044
 19144                                  .L_lambda_opt_stack_shrink_loop_more_0044:
 19145 0000DDF7 4983F800                	cmp r8, 0
 19146 0000DDFB 7E16                    	jle .L_make_lambda_opt_more_finish_0044
 19147 0000DDFD 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 19148 0000DE01 4D01F4                  	add r12, r14
 19149 0000DE04 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 19150 0000DE08 49FFC8                  	dec r8 ; next iteration
 19151 0000DE0B 4D29F4                  	sub r12, r14 ; next iteration
 19152 0000DE0E 49FFCC                  	dec r12 ; next iteration
 19153 0000DE11 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0044
 19154                                  .L_make_lambda_opt_more_finish_0044:
 19155 0000DE13 41BA01000000            	mov r10, 1
 19156 0000DE19 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 19157 0000DE22 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 19158 0000DE26 4C01F4                  	add rsp, r14  ; Add to rsp
 19159 0000DE29 EB00                    	jmp .L_lambda_opt_stack_adjusted_0044
 19160                                  .L_lambda_opt_stack_adjusted_0044:
 19161 0000DE2B C8000000                	enter 0, 0
 19162                                  	; Initiating tail-call optimization
 19163 0000DE2F 488B4528                	mov rax, PARAM(1)	; param strs
 19164 0000DE33 50                      	push rax
 19165 0000DE34 488B4520                	mov rax, PARAM(0)	; param str
 19166 0000DE38 50                      	push rax
 19167 0000DE39 6A02                    	push 2	; Number of arguments
 19168 0000DE3B 488B4510                	mov rax, ENV
 19169 0000DE3F 488B00                  	mov rax, qword [rax + 8 * 0]
 19170 0000DE42 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19171 0000DE45 488B00                  	mov rax, qword [rax]
 19172 0000DE48 803804                  	cmp byte [rax], T_closure
 19173 0000DE4B 0F85A7740000            	jne L_error_non_closure
 19174 0000DE51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19175 0000DE54 FF7508                  	push qword [rbp + 8]
 19176 0000DE57 FF7500                  	push qword [rbp]
 19177 0000DE5A 41BA06000000            	mov r10, 2 + 4
 19178 0000DE60 4C8B4518                	mov r8, COUNT
 19179 0000DE64 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19180 0000DE69 4C8D4DF8                	lea r9, [rbp - 8]
 19181                                  .L_tc_recycle_frame_loop_0270:
 19182 0000DE6D 4983FA00                	cmp r10, 0
 19183 0000DE71 7413                    	je .L_tc_recycle_frame_done_0270
 19184 0000DE73 4D8B19                  	mov r11, qword [r9]
 19185 0000DE76 4D8918                  	mov qword [r8], r11
 19186 0000DE79 49FFCA                  	dec r10
 19187 0000DE7C 4983E808                	sub r8, 8
 19188 0000DE80 4983E908                	sub r9, 8
 19189 0000DE84 EBE7                    	jmp .L_tc_recycle_frame_loop_0270
 19190                                  .L_tc_recycle_frame_done_0270:
 19191 0000DE86 498D6008                	lea rsp, [r8 + 8]
 19192 0000DE8A 5D                      	pop rbp
 19193 0000DE8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19194 0000DE8E C9                      	leave
 19195 0000DE8F C22000                  	ret AND_KILL_FRAME(2)
 19196                                  .L_lambda_opt_end_0044:	; new closure is in rax
 19197 0000DE92 C9                      	leave
 19198 0000DE93 C21800                  	ret AND_KILL_FRAME(1)
 19199                                  .L_lambda_simple_end_01e7:	; new closure is in rax
 19200 0000DE96 803804                  	cmp byte [rax], T_closure
 19201 0000DE99 0F8559740000            	jne L_error_non_closure
 19202 0000DE9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19203 0000DEA2 FF7508                  	push qword [rbp + 8]
 19204 0000DEA5 FF7500                  	push qword [rbp]
 19205 0000DEA8 41BA05000000            	mov r10, 1 + 4
 19206 0000DEAE 4C8B4518                	mov r8, COUNT
 19207 0000DEB2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19208 0000DEB7 4C8D4DF8                	lea r9, [rbp - 8]
 19209                                  .L_tc_recycle_frame_loop_0271:
 19210 0000DEBB 4983FA00                	cmp r10, 0
 19211 0000DEBF 7413                    	je .L_tc_recycle_frame_done_0271
 19212 0000DEC1 4D8B19                  	mov r11, qword [r9]
 19213 0000DEC4 4D8918                  	mov qword [r8], r11
 19214 0000DEC7 49FFCA                  	dec r10
 19215 0000DECA 4983E808                	sub r8, 8
 19216 0000DECE 4983E908                	sub r9, 8
 19217 0000DED2 EBE7                    	jmp .L_tc_recycle_frame_loop_0271
 19218                                  .L_tc_recycle_frame_done_0271:
 19219 0000DED4 498D6008                	lea rsp, [r8 + 8]
 19220 0000DED8 5D                      	pop rbp
 19221 0000DED9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19222 0000DEDC C9                      	leave
 19223 0000DEDD C21800                  	ret AND_KILL_FRAME(1)
 19224                                  .L_lambda_simple_end_01e6:	; new closure is in rax
 19225 0000DEE0 803804                  	cmp byte [rax], T_closure
 19226 0000DEE3 0F850F740000            	jne L_error_non_closure
 19227 0000DEE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19228 0000DEEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19229 0000DEEF C9                      	leave
 19230 0000DEF0 C21800                  	ret AND_KILL_FRAME(1)
 19231                                  .L_lambda_simple_end_01e2:	; new closure is in rax
 19232 0000DEF3 803804                  	cmp byte [rax], T_closure
 19233 0000DEF6 0F85FC730000            	jne L_error_non_closure
 19234 0000DEFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 19235 0000DEFF FF7508                  	push qword [rbp + 8]
 19236 0000DF02 FF7500                  	push qword [rbp]
 19237 0000DF05 41BA05000000            	mov r10, 1 + 4
 19238 0000DF0B 4C8B4518                	mov r8, COUNT
 19239 0000DF0F 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19240 0000DF14 4C8D4DF8                	lea r9, [rbp - 8]
 19241                                  .L_tc_recycle_frame_loop_0272:
 19242 0000DF18 4983FA00                	cmp r10, 0
 19243 0000DF1C 7413                    	je .L_tc_recycle_frame_done_0272
 19244 0000DF1E 4D8B19                  	mov r11, qword [r9]
 19245 0000DF21 4D8918                  	mov qword [r8], r11
 19246 0000DF24 49FFCA                  	dec r10
 19247 0000DF27 4983E808                	sub r8, 8
 19248 0000DF2B 4983E908                	sub r9, 8
 19249 0000DF2F EBE7                    	jmp .L_tc_recycle_frame_loop_0272
 19250                                  .L_tc_recycle_frame_done_0272:
 19251 0000DF31 498D6008                	lea rsp, [r8 + 8]
 19252 0000DF35 5D                      	pop rbp
 19253 0000DF36 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19254 0000DF39 C9                      	leave
 19255 0000DF3A C22000                  	ret AND_KILL_FRAME(2)
 19256                                  .L_lambda_simple_end_01e1:	; new closure is in rax
 19257 0000DF3D 50                      	push rax
 19258 0000DF3E 6A01                    	push 1	; arg count
 19259 0000DF40 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19260 0000DF45 E857740000              	call malloc
 19261 0000DF4A 50                      	push rax
 19262 0000DF4B BF00000000              	mov rdi, 8 * 0	; new rib
 19263 0000DF50 E84C740000              	call malloc
 19264 0000DF55 50                      	push rax
 19265 0000DF56 BF08000000              	mov rdi, 8 * 1	; extended env
 19266 0000DF5B E841740000              	call malloc
 19267 0000DF60 488B7D10                	mov rdi, ENV
 19268 0000DF64 BE00000000              	mov rsi, 0
 19269 0000DF69 BA01000000              	mov rdx, 1
 19270                                  .L_lambda_simple_env_loop_01e9:	; ext_env[i + 1] <-- env[i]
 19271 0000DF6E 4883FE00                	cmp rsi, 0
 19272 0000DF72 7410                    	je .L_lambda_simple_env_end_01e9
 19273 0000DF74 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19274 0000DF78 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19275 0000DF7C 48FFC6                  	inc rsi
 19276 0000DF7F 48FFC2                  	inc rdx
 19277 0000DF82 EBEA                    	jmp .L_lambda_simple_env_loop_01e9
 19278                                  .L_lambda_simple_env_end_01e9:
 19279 0000DF84 5B                      	pop rbx
 19280 0000DF85 BE00000000              	mov rsi, 0
 19281                                  .L_lambda_simple_params_loop_01e9:	; copy params
 19282 0000DF8A 4883FE00                	cmp rsi, 0
 19283 0000DF8E 740E                    	je .L_lambda_simple_params_end_01e9
 19284 0000DF90 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19285 0000DF95 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19286 0000DF99 48FFC6                  	inc rsi
 19287 0000DF9C EBEC                    	jmp .L_lambda_simple_params_loop_01e9
 19288                                  .L_lambda_simple_params_end_01e9:
 19289 0000DF9E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19290 0000DFA1 4889C3                  	mov rbx, rax
 19291 0000DFA4 58                      	pop rax
 19292 0000DFA5 C60004                  	mov byte [rax], T_closure
 19293 0000DFA8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19294 0000DFAC 48C74009[B9DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01e9
 19295 0000DFB4 E947010000              	jmp .L_lambda_simple_end_01e9
 19296                                  .L_lambda_simple_code_01e9:	; lambda-simple body
 19297 0000DFB9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19298 0000DFBF 740B                    	je .L_lambda_simple_arity_check_ok_01e9
 19299 0000DFC1 FF742410                	push qword [rsp + 8 * 2]
 19300 0000DFC5 6A01                    	push 1
 19301 0000DFC7 E98E730000              	jmp L_error_incorrect_arity_simple
 19302                                  .L_lambda_simple_arity_check_ok_01e9:
 19303 0000DFCC C8000000                	enter 0, 0
 19304                                  	; preparing a non-tail-call
 19305 0000DFD0 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 19306 0000DFD8 803805                  	cmp byte [rax], T_undefined
 19307 0000DFDB 0F8493720000            	je L_error_fvar_undefined
 19308 0000DFE1 50                      	push rax
 19309 0000DFE2 488B0425[C1120000]      	mov rax, qword [free_var_74]	; free var char<?
 19310 0000DFEA 803805                  	cmp byte [rax], T_undefined
 19311 0000DFED 0F8481720000            	je L_error_fvar_undefined
 19312 0000DFF3 50                      	push rax
 19313 0000DFF4 6A02                    	push 2	; arg count
 19314 0000DFF6 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19315 0000DFFA 803804                  	cmp byte [rax], T_closure
 19316 0000DFFD 0F85F5720000            	jne L_error_non_closure
 19317 0000E003 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19318 0000E006 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19319 0000E009 48890425[AC160000]      	mov qword [free_var_133], rax
 19320 0000E011 48B8-                   	mov rax, sob_void
 19320 0000E013 [0000000000000000] 
 19321                                  
 19322                                  	; preparing a non-tail-call
 19323 0000E01B 488B0425[5B120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19324 0000E023 803805                  	cmp byte [rax], T_undefined
 19325 0000E026 0F8448720000            	je L_error_fvar_undefined
 19326 0000E02C 50                      	push rax
 19327 0000E02D 488B0425[4A120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19328 0000E035 803805                  	cmp byte [rax], T_undefined
 19329 0000E038 0F8436720000            	je L_error_fvar_undefined
 19330 0000E03E 50                      	push rax
 19331 0000E03F 6A02                    	push 2	; arg count
 19332 0000E041 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19333 0000E045 803804                  	cmp byte [rax], T_closure
 19334 0000E048 0F85AA720000            	jne L_error_non_closure
 19335 0000E04E FF7001                  	push SOB_CLOSURE_ENV(rax)
 19336 0000E051 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19337 0000E054 48890425[E0150000]      	mov qword [free_var_121], rax
 19338 0000E05C 48B8-                   	mov rax, sob_void
 19338 0000E05E [0000000000000000] 
 19339                                  
 19340                                  	; preparing a non-tail-call
 19341 0000E066 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 19342 0000E06E 803805                  	cmp byte [rax], T_undefined
 19343 0000E071 0F84FD710000            	je L_error_fvar_undefined
 19344 0000E077 50                      	push rax
 19345 0000E078 488B0425[F4120000]      	mov rax, qword [free_var_77]	; free var char>?
 19346 0000E080 803805                  	cmp byte [rax], T_undefined
 19347 0000E083 0F84EB710000            	je L_error_fvar_undefined
 19348 0000E089 50                      	push rax
 19349 0000E08A 6A02                    	push 2	; arg count
 19350 0000E08C 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19351 0000E090 803804                  	cmp byte [rax], T_closure
 19352 0000E093 0F855F720000            	jne L_error_non_closure
 19353 0000E099 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19354 0000E09C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19355 0000E09F 48890425[DF160000]      	mov qword [free_var_136], rax
 19356 0000E0A7 48B8-                   	mov rax, sob_void
 19356 0000E0A9 [0000000000000000] 
 19357                                  
 19358                                  	; preparing a non-tail-call
 19359 0000E0B1 488B0425[5B120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19360 0000E0B9 803805                  	cmp byte [rax], T_undefined
 19361 0000E0BC 0F84B2710000            	je L_error_fvar_undefined
 19362 0000E0C2 50                      	push rax
 19363 0000E0C3 488B0425[7D120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19364 0000E0CB 803805                  	cmp byte [rax], T_undefined
 19365 0000E0CE 0F84A0710000            	je L_error_fvar_undefined
 19366 0000E0D4 50                      	push rax
 19367 0000E0D5 6A02                    	push 2	; arg count
 19368 0000E0D7 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19369 0000E0DB 803804                  	cmp byte [rax], T_closure
 19370 0000E0DE 0F8514720000            	jne L_error_non_closure
 19371 0000E0E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19372 0000E0E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19373 0000E0EA 48890425[13160000]      	mov qword [free_var_124], rax
 19374 0000E0F2 48B8-                   	mov rax, sob_void
 19374 0000E0F4 [0000000000000000] 
 19375 0000E0FC C9                      	leave
 19376 0000E0FD C21800                  	ret AND_KILL_FRAME(1)
 19377                                  .L_lambda_simple_end_01e9:	; new closure is in rax
 19378 0000E100 803804                  	cmp byte [rax], T_closure
 19379 0000E103 0F85EF710000            	jne L_error_non_closure
 19380 0000E109 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19381 0000E10C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19382                                  
 19383 0000E10F 4889C7                  	mov rdi, rax
 19384 0000E112 E8DF740000              	call print_sexpr_if_not_void
 19385                                  	; preparing a non-tail-call
 19386 0000E117 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19387 0000E11C E880720000              	call malloc
 19388 0000E121 50                      	push rax
 19389 0000E122 BF00000000              	mov rdi, 8 * 0	; new rib
 19390 0000E127 E875720000              	call malloc
 19391 0000E12C 50                      	push rax
 19392 0000E12D BF08000000              	mov rdi, 8 * 1	; extended env
 19393 0000E132 E86A720000              	call malloc
 19394 0000E137 488B7D10                	mov rdi, ENV
 19395 0000E13B BE00000000              	mov rsi, 0
 19396 0000E140 BA01000000              	mov rdx, 1
 19397                                  .L_lambda_simple_env_loop_01ea:	; ext_env[i + 1] <-- env[i]
 19398 0000E145 4883FE00                	cmp rsi, 0
 19399 0000E149 7410                    	je .L_lambda_simple_env_end_01ea
 19400 0000E14B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19401 0000E14F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19402 0000E153 48FFC6                  	inc rsi
 19403 0000E156 48FFC2                  	inc rdx
 19404 0000E159 EBEA                    	jmp .L_lambda_simple_env_loop_01ea
 19405                                  .L_lambda_simple_env_end_01ea:
 19406 0000E15B 5B                      	pop rbx
 19407 0000E15C BE00000000              	mov rsi, 0
 19408                                  .L_lambda_simple_params_loop_01ea:	; copy params
 19409 0000E161 4883FE00                	cmp rsi, 0
 19410 0000E165 740E                    	je .L_lambda_simple_params_end_01ea
 19411 0000E167 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19412 0000E16C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19413 0000E170 48FFC6                  	inc rsi
 19414 0000E173 EBEC                    	jmp .L_lambda_simple_params_loop_01ea
 19415                                  .L_lambda_simple_params_end_01ea:
 19416 0000E175 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19417 0000E178 4889C3                  	mov rbx, rax
 19418 0000E17B 58                      	pop rax
 19419 0000E17C C60004                  	mov byte [rax], T_closure
 19420 0000E17F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19421 0000E183 48C74009[90E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ea
 19422 0000E18B E9570B0000              	jmp .L_lambda_simple_end_01ea
 19423                                  .L_lambda_simple_code_01ea:	; lambda-simple body
 19424 0000E190 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19425 0000E196 740B                    	je .L_lambda_simple_arity_check_ok_01ea
 19426 0000E198 FF742410                	push qword [rsp + 8 * 2]
 19427 0000E19C 6A01                    	push 1
 19428 0000E19E E9B7710000              	jmp L_error_incorrect_arity_simple
 19429                                  .L_lambda_simple_arity_check_ok_01ea:
 19430 0000E1A3 C8000000                	enter 0, 0
 19431                                  	; Initiating tail-call optimization
 19432 0000E1A7 48B8-                   	mov rax, L_constants + 2007
 19432 0000E1A9 [D707000000000000] 
 19433 0000E1B1 50                      	push rax
 19434 0000E1B2 6A01                    	push 1	; Number of arguments
 19435 0000E1B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19436 0000E1B9 E8E3710000              	call malloc
 19437 0000E1BE 50                      	push rax
 19438 0000E1BF BF08000000              	mov rdi, 8 * 1	; new rib
 19439 0000E1C4 E8D8710000              	call malloc
 19440 0000E1C9 50                      	push rax
 19441 0000E1CA BF10000000              	mov rdi, 8 * 2	; extended env
 19442 0000E1CF E8CD710000              	call malloc
 19443 0000E1D4 488B7D10                	mov rdi, ENV
 19444 0000E1D8 BE00000000              	mov rsi, 0
 19445 0000E1DD BA01000000              	mov rdx, 1
 19446                                  .L_lambda_simple_env_loop_01eb:	; ext_env[i + 1] <-- env[i]
 19447 0000E1E2 4883FE01                	cmp rsi, 1
 19448 0000E1E6 7410                    	je .L_lambda_simple_env_end_01eb
 19449 0000E1E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19450 0000E1EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19451 0000E1F0 48FFC6                  	inc rsi
 19452 0000E1F3 48FFC2                  	inc rdx
 19453 0000E1F6 EBEA                    	jmp .L_lambda_simple_env_loop_01eb
 19454                                  .L_lambda_simple_env_end_01eb:
 19455 0000E1F8 5B                      	pop rbx
 19456 0000E1F9 BE00000000              	mov rsi, 0
 19457                                  .L_lambda_simple_params_loop_01eb:	; copy params
 19458 0000E1FE 4883FE01                	cmp rsi, 1
 19459 0000E202 740E                    	je .L_lambda_simple_params_end_01eb
 19460 0000E204 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19461 0000E209 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19462 0000E20D 48FFC6                  	inc rsi
 19463 0000E210 EBEC                    	jmp .L_lambda_simple_params_loop_01eb
 19464                                  .L_lambda_simple_params_end_01eb:
 19465 0000E212 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19466 0000E215 4889C3                  	mov rbx, rax
 19467 0000E218 58                      	pop rax
 19468 0000E219 C60004                  	mov byte [rax], T_closure
 19469 0000E21C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19470 0000E220 48C74009[2DE20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01eb
 19471 0000E228 E9700A0000              	jmp .L_lambda_simple_end_01eb
 19472                                  .L_lambda_simple_code_01eb:	; lambda-simple body
 19473 0000E22D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19474 0000E233 740B                    	je .L_lambda_simple_arity_check_ok_01eb
 19475 0000E235 FF742410                	push qword [rsp + 8 * 2]
 19476 0000E239 6A01                    	push 1
 19477 0000E23B E91A710000              	jmp L_error_incorrect_arity_simple
 19478                                  .L_lambda_simple_arity_check_ok_01eb:
 19479 0000E240 C8000000                	enter 0, 0
 19480 0000E244 BF08000000              	mov rdi, 8 * 1
 19481 0000E249 E853710000              	call malloc
 19482 0000E24E 488B5D20                	mov rbx, PARAM(0)
 19483 0000E252 488918                  	mov qword [rax], rbx
 19484 0000E255 48894520                	mov PARAM(0), rax
 19485 0000E259 48B8-                   	mov rax, sob_void
 19485 0000E25B [0000000000000000] 
 19486                                  
 19487 0000E263 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19488 0000E268 E834710000              	call malloc
 19489 0000E26D 50                      	push rax
 19490 0000E26E BF08000000              	mov rdi, 8 * 1	; new rib
 19491 0000E273 E829710000              	call malloc
 19492 0000E278 50                      	push rax
 19493 0000E279 BF18000000              	mov rdi, 8 * 3	; extended env
 19494 0000E27E E81E710000              	call malloc
 19495 0000E283 488B7D10                	mov rdi, ENV
 19496 0000E287 BE00000000              	mov rsi, 0
 19497 0000E28C BA01000000              	mov rdx, 1
 19498                                  .L_lambda_simple_env_loop_01ec:	; ext_env[i + 1] <-- env[i]
 19499 0000E291 4883FE02                	cmp rsi, 2
 19500 0000E295 7410                    	je .L_lambda_simple_env_end_01ec
 19501 0000E297 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19502 0000E29B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19503 0000E29F 48FFC6                  	inc rsi
 19504 0000E2A2 48FFC2                  	inc rdx
 19505 0000E2A5 EBEA                    	jmp .L_lambda_simple_env_loop_01ec
 19506                                  .L_lambda_simple_env_end_01ec:
 19507 0000E2A7 5B                      	pop rbx
 19508 0000E2A8 BE00000000              	mov rsi, 0
 19509                                  .L_lambda_simple_params_loop_01ec:	; copy params
 19510 0000E2AD 4883FE01                	cmp rsi, 1
 19511 0000E2B1 740E                    	je .L_lambda_simple_params_end_01ec
 19512 0000E2B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19513 0000E2B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19514 0000E2BC 48FFC6                  	inc rsi
 19515 0000E2BF EBEC                    	jmp .L_lambda_simple_params_loop_01ec
 19516                                  .L_lambda_simple_params_end_01ec:
 19517 0000E2C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19518 0000E2C4 4889C3                  	mov rbx, rax
 19519 0000E2C7 58                      	pop rax
 19520 0000E2C8 C60004                  	mov byte [rax], T_closure
 19521 0000E2CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19522 0000E2CF 48C74009[DCE20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ec
 19523 0000E2D7 E9BC010000              	jmp .L_lambda_simple_end_01ec
 19524                                  .L_lambda_simple_code_01ec:	; lambda-simple body
 19525 0000E2DC 48837C241004            	cmp qword [rsp + 8 * 2], 4
 19526 0000E2E2 740B                    	je .L_lambda_simple_arity_check_ok_01ec
 19527 0000E2E4 FF742410                	push qword [rsp + 8 * 2]
 19528 0000E2E8 6A04                    	push 4
 19529 0000E2EA E96B700000              	jmp L_error_incorrect_arity_simple
 19530                                  .L_lambda_simple_arity_check_ok_01ec:
 19531 0000E2EF C8000000                	enter 0, 0
 19532                                  	; preparing a non-tail-call
 19533 0000E2F3 488B4538                	mov rax, PARAM(3)	; param len
 19534 0000E2F7 50                      	push rax
 19535 0000E2F8 488B4520                	mov rax, PARAM(0)	; param i
 19536 0000E2FC 50                      	push rax
 19537 0000E2FD 6A02                    	push 2	; arg count
 19538 0000E2FF 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 19539 0000E307 803805                  	cmp byte [rax], T_undefined
 19540 0000E30A 0F84646F0000            	je L_error_fvar_undefined
 19541 0000E310 803804                  	cmp byte [rax], T_closure
 19542 0000E313 0F85DF6F0000            	jne L_error_non_closure
 19543 0000E319 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19544 0000E31C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19545 0000E31F 483D[02000000]          	cmp rax, sob_boolean_false
 19546 0000E325 0F8569010000            	jne .L_or_end_0028
 19547                                  
 19548                                  	; preparing a non-tail-call
 19549 0000E32B 488B4538                	mov rax, PARAM(3)	; param len
 19550 0000E32F 50                      	push rax
 19551 0000E330 488B4520                	mov rax, PARAM(0)	; param i
 19552 0000E334 50                      	push rax
 19553 0000E335 6A02                    	push 2	; arg count
 19554 0000E337 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 19555 0000E33F 803805                  	cmp byte [rax], T_undefined
 19556 0000E342 0F842C6F0000            	je L_error_fvar_undefined
 19557 0000E348 803804                  	cmp byte [rax], T_closure
 19558 0000E34B 0F85A76F0000            	jne L_error_non_closure
 19559 0000E351 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19560 0000E354 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19561 0000E357 483D[02000000]          	cmp rax, sob_boolean_false
 19562 0000E35D 0F8427010000            	je .L_if_else_016d
 19563                                  	; preparing a non-tail-call
 19564                                  	; preparing a non-tail-call
 19565 0000E363 488B4520                	mov rax, PARAM(0)	; param i
 19566 0000E367 50                      	push rax
 19567 0000E368 488B4530                	mov rax, PARAM(2)	; param str2
 19568 0000E36C 50                      	push rax
 19569 0000E36D 6A02                    	push 2	; arg count
 19570 0000E36F 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19571 0000E377 803805                  	cmp byte [rax], T_undefined
 19572 0000E37A 0F84F46E0000            	je L_error_fvar_undefined
 19573 0000E380 803804                  	cmp byte [rax], T_closure
 19574 0000E383 0F856F6F0000            	jne L_error_non_closure
 19575 0000E389 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19576 0000E38C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19577 0000E38F 50                      	push rax
 19578                                  	; preparing a non-tail-call
 19579 0000E390 488B4520                	mov rax, PARAM(0)	; param i
 19580 0000E394 50                      	push rax
 19581 0000E395 488B4528                	mov rax, PARAM(1)	; param str1
 19582 0000E399 50                      	push rax
 19583 0000E39A 6A02                    	push 2	; arg count
 19584 0000E39C 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19585 0000E3A4 803805                  	cmp byte [rax], T_undefined
 19586 0000E3A7 0F84C76E0000            	je L_error_fvar_undefined
 19587 0000E3AD 803804                  	cmp byte [rax], T_closure
 19588 0000E3B0 0F85426F0000            	jne L_error_non_closure
 19589 0000E3B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19590 0000E3B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19591 0000E3BC 50                      	push rax
 19592 0000E3BD 6A02                    	push 2	; arg count
 19593 0000E3BF 488B4510                	mov rax, ENV
 19594 0000E3C3 488B4008                	mov rax, qword [rax + 8 * 1]
 19595 0000E3C7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 19596 0000E3CA 803804                  	cmp byte [rax], T_closure
 19597 0000E3CD 0F85256F0000            	jne L_error_non_closure
 19598 0000E3D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19599 0000E3D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19600 0000E3D9 483D[02000000]          	cmp rax, sob_boolean_false
 19601 0000E3DF 0F8499000000            	je .L_if_else_016c
 19602                                  	; Initiating tail-call optimization
 19603 0000E3E5 488B4538                	mov rax, PARAM(3)	; param len
 19604 0000E3E9 50                      	push rax
 19605 0000E3EA 488B4530                	mov rax, PARAM(2)	; param str2
 19606 0000E3EE 50                      	push rax
 19607 0000E3EF 488B4528                	mov rax, PARAM(1)	; param str1
 19608 0000E3F3 50                      	push rax
 19609                                  	; preparing a non-tail-call
 19610 0000E3F4 48B8-                   	mov rax, L_constants + 2270
 19610 0000E3F6 [DE08000000000000] 
 19611 0000E3FE 50                      	push rax
 19612 0000E3FF 488B4520                	mov rax, PARAM(0)	; param i
 19613 0000E403 50                      	push rax
 19614 0000E404 6A02                    	push 2	; arg count
 19615 0000E406 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 19616 0000E40E 803805                  	cmp byte [rax], T_undefined
 19617 0000E411 0F845D6E0000            	je L_error_fvar_undefined
 19618 0000E417 803804                  	cmp byte [rax], T_closure
 19619 0000E41A 0F85D86E0000            	jne L_error_non_closure
 19620 0000E420 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19621 0000E423 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19622 0000E426 50                      	push rax
 19623 0000E427 6A04                    	push 4	; Number of arguments
 19624 0000E429 488B4510                	mov rax, ENV
 19625 0000E42D 488B00                  	mov rax, qword [rax + 8 * 0]
 19626 0000E430 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19627 0000E433 488B00                  	mov rax, qword [rax]
 19628 0000E436 803804                  	cmp byte [rax], T_closure
 19629 0000E439 0F85B96E0000            	jne L_error_non_closure
 19630 0000E43F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19631 0000E442 FF7508                  	push qword [rbp + 8]
 19632 0000E445 FF7500                  	push qword [rbp]
 19633 0000E448 41BA08000000            	mov r10, 4 + 4
 19634 0000E44E 4C8B4518                	mov r8, COUNT
 19635 0000E452 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19636 0000E457 4C8D4DF8                	lea r9, [rbp - 8]
 19637                                  .L_tc_recycle_frame_loop_0273:
 19638 0000E45B 4983FA00                	cmp r10, 0
 19639 0000E45F 7413                    	je .L_tc_recycle_frame_done_0273
 19640 0000E461 4D8B19                  	mov r11, qword [r9]
 19641 0000E464 4D8918                  	mov qword [r8], r11
 19642 0000E467 49FFCA                  	dec r10
 19643 0000E46A 4983E808                	sub r8, 8
 19644 0000E46E 4983E908                	sub r9, 8
 19645 0000E472 EBE7                    	jmp .L_tc_recycle_frame_loop_0273
 19646                                  .L_tc_recycle_frame_done_0273:
 19647 0000E474 498D6008                	lea rsp, [r8 + 8]
 19648 0000E478 5D                      	pop rbp
 19649 0000E479 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19650 0000E47C EB0A                    	jmp .L_if_end_016c
 19651                                  .L_if_else_016c:
 19652 0000E47E 48B8-                   	mov rax, L_constants + 2
 19652 0000E480 [0200000000000000] 
 19653                                  .L_if_end_016c:
 19654 0000E488 EB0A                    	jmp .L_if_end_016d
 19655                                  .L_if_else_016d:
 19656 0000E48A 48B8-                   	mov rax, L_constants + 2
 19656 0000E48C [0200000000000000] 
 19657                                  .L_if_end_016d:
 19658                                  .L_or_end_0028:
 19659 0000E494 C9                      	leave
 19660 0000E495 C23000                  	ret AND_KILL_FRAME(4)
 19661                                  .L_lambda_simple_end_01ec:	; new closure is in rax
 19662 0000E498 50                      	push rax
 19663 0000E499 488B4520                	mov rax, PARAM(0)	; param run
 19664 0000E49D 8F00                    	pop qword [rax]
 19665 0000E49F 48B8-                   	mov rax, sob_void
 19665 0000E4A1 [0000000000000000] 
 19666                                  
 19667                                  	; preparing a non-tail-call
 19668 0000E4A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19669 0000E4AE E8EE6E0000              	call malloc
 19670 0000E4B3 50                      	push rax
 19671 0000E4B4 BF08000000              	mov rdi, 8 * 1	; new rib
 19672 0000E4B9 E8E36E0000              	call malloc
 19673 0000E4BE 50                      	push rax
 19674 0000E4BF BF18000000              	mov rdi, 8 * 3	; extended env
 19675 0000E4C4 E8D86E0000              	call malloc
 19676 0000E4C9 488B7D10                	mov rdi, ENV
 19677 0000E4CD BE00000000              	mov rsi, 0
 19678 0000E4D2 BA01000000              	mov rdx, 1
 19679                                  .L_lambda_simple_env_loop_01ed:	; ext_env[i + 1] <-- env[i]
 19680 0000E4D7 4883FE02                	cmp rsi, 2
 19681 0000E4DB 7410                    	je .L_lambda_simple_env_end_01ed
 19682 0000E4DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19683 0000E4E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19684 0000E4E5 48FFC6                  	inc rsi
 19685 0000E4E8 48FFC2                  	inc rdx
 19686 0000E4EB EBEA                    	jmp .L_lambda_simple_env_loop_01ed
 19687                                  .L_lambda_simple_env_end_01ed:
 19688 0000E4ED 5B                      	pop rbx
 19689 0000E4EE BE00000000              	mov rsi, 0
 19690                                  .L_lambda_simple_params_loop_01ed:	; copy params
 19691 0000E4F3 4883FE01                	cmp rsi, 1
 19692 0000E4F7 740E                    	je .L_lambda_simple_params_end_01ed
 19693 0000E4F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19694 0000E4FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19695 0000E502 48FFC6                  	inc rsi
 19696 0000E505 EBEC                    	jmp .L_lambda_simple_params_loop_01ed
 19697                                  .L_lambda_simple_params_end_01ed:
 19698 0000E507 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19699 0000E50A 4889C3                  	mov rbx, rax
 19700 0000E50D 58                      	pop rax
 19701 0000E50E C60004                  	mov byte [rax], T_closure
 19702 0000E511 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19703 0000E515 48C74009[22E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ed
 19704 0000E51D E908020000              	jmp .L_lambda_simple_end_01ed
 19705                                  .L_lambda_simple_code_01ed:	; lambda-simple body
 19706 0000E522 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19707 0000E528 740B                    	je .L_lambda_simple_arity_check_ok_01ed
 19708 0000E52A FF742410                	push qword [rsp + 8 * 2]
 19709 0000E52E 6A02                    	push 2
 19710 0000E530 E9256E0000              	jmp L_error_incorrect_arity_simple
 19711                                  .L_lambda_simple_arity_check_ok_01ed:
 19712 0000E535 C8000000                	enter 0, 0
 19713                                  	; Initiating tail-call optimization
 19714                                  	; preparing a non-tail-call
 19715 0000E539 488B4528                	mov rax, PARAM(1)	; param str2
 19716 0000E53D 50                      	push rax
 19717 0000E53E 6A01                    	push 1	; arg count
 19718 0000E540 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 19719 0000E548 803805                  	cmp byte [rax], T_undefined
 19720 0000E54B 0F84236D0000            	je L_error_fvar_undefined
 19721 0000E551 803804                  	cmp byte [rax], T_closure
 19722 0000E554 0F859E6D0000            	jne L_error_non_closure
 19723 0000E55A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19724 0000E55D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19725 0000E560 50                      	push rax
 19726                                  	; preparing a non-tail-call
 19727 0000E561 488B4520                	mov rax, PARAM(0)	; param str1
 19728 0000E565 50                      	push rax
 19729 0000E566 6A01                    	push 1	; arg count
 19730 0000E568 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 19731 0000E570 803805                  	cmp byte [rax], T_undefined
 19732 0000E573 0F84FB6C0000            	je L_error_fvar_undefined
 19733 0000E579 803804                  	cmp byte [rax], T_closure
 19734 0000E57C 0F85766D0000            	jne L_error_non_closure
 19735 0000E582 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19736 0000E585 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19737 0000E588 50                      	push rax
 19738 0000E589 6A02                    	push 2	; Number of arguments
 19739 0000E58B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19740 0000E590 E80C6E0000              	call malloc
 19741 0000E595 50                      	push rax
 19742 0000E596 BF10000000              	mov rdi, 8 * 2	; new rib
 19743 0000E59B E8016E0000              	call malloc
 19744 0000E5A0 50                      	push rax
 19745 0000E5A1 BF20000000              	mov rdi, 8 * 4	; extended env
 19746 0000E5A6 E8F66D0000              	call malloc
 19747 0000E5AB 488B7D10                	mov rdi, ENV
 19748 0000E5AF BE00000000              	mov rsi, 0
 19749 0000E5B4 BA01000000              	mov rdx, 1
 19750                                  .L_lambda_simple_env_loop_01ee:	; ext_env[i + 1] <-- env[i]
 19751 0000E5B9 4883FE03                	cmp rsi, 3
 19752 0000E5BD 7410                    	je .L_lambda_simple_env_end_01ee
 19753 0000E5BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19754 0000E5C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19755 0000E5C7 48FFC6                  	inc rsi
 19756 0000E5CA 48FFC2                  	inc rdx
 19757 0000E5CD EBEA                    	jmp .L_lambda_simple_env_loop_01ee
 19758                                  .L_lambda_simple_env_end_01ee:
 19759 0000E5CF 5B                      	pop rbx
 19760 0000E5D0 BE00000000              	mov rsi, 0
 19761                                  .L_lambda_simple_params_loop_01ee:	; copy params
 19762 0000E5D5 4883FE02                	cmp rsi, 2
 19763 0000E5D9 740E                    	je .L_lambda_simple_params_end_01ee
 19764 0000E5DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19765 0000E5E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19766 0000E5E4 48FFC6                  	inc rsi
 19767 0000E5E7 EBEC                    	jmp .L_lambda_simple_params_loop_01ee
 19768                                  .L_lambda_simple_params_end_01ee:
 19769 0000E5E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19770 0000E5EC 4889C3                  	mov rbx, rax
 19771 0000E5EF 58                      	pop rax
 19772 0000E5F0 C60004                  	mov byte [rax], T_closure
 19773 0000E5F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19774 0000E5F7 48C74009[04E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ee
 19775 0000E5FF E9DC000000              	jmp .L_lambda_simple_end_01ee
 19776                                  .L_lambda_simple_code_01ee:	; lambda-simple body
 19777 0000E604 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19778 0000E60A 740B                    	je .L_lambda_simple_arity_check_ok_01ee
 19779 0000E60C FF742410                	push qword [rsp + 8 * 2]
 19780 0000E610 6A02                    	push 2
 19781 0000E612 E9436D0000              	jmp L_error_incorrect_arity_simple
 19782                                  .L_lambda_simple_arity_check_ok_01ee:
 19783 0000E617 C8000000                	enter 0, 0
 19784                                  	; preparing a non-tail-call
 19785 0000E61B 488B4528                	mov rax, PARAM(1)	; param len2
 19786 0000E61F 50                      	push rax
 19787 0000E620 488B4520                	mov rax, PARAM(0)	; param len1
 19788 0000E624 50                      	push rax
 19789 0000E625 6A02                    	push 2	; arg count
 19790 0000E627 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 19791 0000E62F 803805                  	cmp byte [rax], T_undefined
 19792 0000E632 0F843C6C0000            	je L_error_fvar_undefined
 19793 0000E638 803804                  	cmp byte [rax], T_closure
 19794 0000E63B 0F85B76C0000            	jne L_error_non_closure
 19795 0000E641 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19796 0000E644 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19797 0000E647 483D[02000000]          	cmp rax, sob_boolean_false
 19798 0000E64D 0F847F000000            	je .L_if_else_016e
 19799                                  	; Initiating tail-call optimization
 19800 0000E653 488B4520                	mov rax, PARAM(0)	; param len1
 19801 0000E657 50                      	push rax
 19802 0000E658 488B4510                	mov rax, ENV
 19803 0000E65C 488B00                  	mov rax, qword [rax + 8 * 0]
 19804 0000E65F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19805 0000E663 50                      	push rax
 19806 0000E664 488B4510                	mov rax, ENV
 19807 0000E668 488B00                  	mov rax, qword [rax + 8 * 0]
 19808 0000E66B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19809 0000E66E 50                      	push rax
 19810 0000E66F 48B8-                   	mov rax, L_constants + 2135
 19810 0000E671 [5708000000000000] 
 19811 0000E679 50                      	push rax
 19812 0000E67A 6A04                    	push 4	; Number of arguments
 19813 0000E67C 488B4510                	mov rax, ENV
 19814 0000E680 488B4008                	mov rax, qword [rax + 8 * 1]
 19815 0000E684 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19816 0000E687 488B00                  	mov rax, qword [rax]
 19817 0000E68A 803804                  	cmp byte [rax], T_closure
 19818 0000E68D 0F85656C0000            	jne L_error_non_closure
 19819 0000E693 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19820 0000E696 FF7508                  	push qword [rbp + 8]
 19821 0000E699 FF7500                  	push qword [rbp]
 19822 0000E69C 41BA08000000            	mov r10, 4 + 4
 19823 0000E6A2 4C8B4518                	mov r8, COUNT
 19824 0000E6A6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19825 0000E6AB 4C8D4DF8                	lea r9, [rbp - 8]
 19826                                  .L_tc_recycle_frame_loop_0274:
 19827 0000E6AF 4983FA00                	cmp r10, 0
 19828 0000E6B3 7413                    	je .L_tc_recycle_frame_done_0274
 19829 0000E6B5 4D8B19                  	mov r11, qword [r9]
 19830 0000E6B8 4D8918                  	mov qword [r8], r11
 19831 0000E6BB 49FFCA                  	dec r10
 19832 0000E6BE 4983E808                	sub r8, 8
 19833 0000E6C2 4983E908                	sub r9, 8
 19834 0000E6C6 EBE7                    	jmp .L_tc_recycle_frame_loop_0274
 19835                                  .L_tc_recycle_frame_done_0274:
 19836 0000E6C8 498D6008                	lea rsp, [r8 + 8]
 19837 0000E6CC 5D                      	pop rbp
 19838 0000E6CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19839 0000E6D0 EB0A                    	jmp .L_if_end_016e
 19840                                  .L_if_else_016e:
 19841 0000E6D2 48B8-                   	mov rax, L_constants + 2
 19841 0000E6D4 [0200000000000000] 
 19842                                  .L_if_end_016e:
 19843 0000E6DC C9                      	leave
 19844 0000E6DD C22000                  	ret AND_KILL_FRAME(2)
 19845                                  .L_lambda_simple_end_01ee:	; new closure is in rax
 19846 0000E6E0 803804                  	cmp byte [rax], T_closure
 19847 0000E6E3 0F850F6C0000            	jne L_error_non_closure
 19848 0000E6E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19849 0000E6EC FF7508                  	push qword [rbp + 8]
 19850 0000E6EF FF7500                  	push qword [rbp]
 19851 0000E6F2 41BA06000000            	mov r10, 2 + 4
 19852 0000E6F8 4C8B4518                	mov r8, COUNT
 19853 0000E6FC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 19854 0000E701 4C8D4DF8                	lea r9, [rbp - 8]
 19855                                  .L_tc_recycle_frame_loop_0275:
 19856 0000E705 4983FA00                	cmp r10, 0
 19857 0000E709 7413                    	je .L_tc_recycle_frame_done_0275
 19858 0000E70B 4D8B19                  	mov r11, qword [r9]
 19859 0000E70E 4D8918                  	mov qword [r8], r11
 19860 0000E711 49FFCA                  	dec r10
 19861 0000E714 4983E808                	sub r8, 8
 19862 0000E718 4983E908                	sub r9, 8
 19863 0000E71C EBE7                    	jmp .L_tc_recycle_frame_loop_0275
 19864                                  .L_tc_recycle_frame_done_0275:
 19865 0000E71E 498D6008                	lea rsp, [r8 + 8]
 19866 0000E722 5D                      	pop rbp
 19867 0000E723 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19868 0000E726 C9                      	leave
 19869 0000E727 C22000                  	ret AND_KILL_FRAME(2)
 19870                                  .L_lambda_simple_end_01ed:	; new closure is in rax
 19871 0000E72A 50                      	push rax
 19872 0000E72B 6A01                    	push 1	; arg count
 19873 0000E72D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19874 0000E732 E86A6C0000              	call malloc
 19875 0000E737 50                      	push rax
 19876 0000E738 BF08000000              	mov rdi, 8 * 1	; new rib
 19877 0000E73D E85F6C0000              	call malloc
 19878 0000E742 50                      	push rax
 19879 0000E743 BF18000000              	mov rdi, 8 * 3	; extended env
 19880 0000E748 E8546C0000              	call malloc
 19881 0000E74D 488B7D10                	mov rdi, ENV
 19882 0000E751 BE00000000              	mov rsi, 0
 19883 0000E756 BA01000000              	mov rdx, 1
 19884                                  .L_lambda_simple_env_loop_01ef:	; ext_env[i + 1] <-- env[i]
 19885 0000E75B 4883FE02                	cmp rsi, 2
 19886 0000E75F 7410                    	je .L_lambda_simple_env_end_01ef
 19887 0000E761 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19888 0000E765 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19889 0000E769 48FFC6                  	inc rsi
 19890 0000E76C 48FFC2                  	inc rdx
 19891 0000E76F EBEA                    	jmp .L_lambda_simple_env_loop_01ef
 19892                                  .L_lambda_simple_env_end_01ef:
 19893 0000E771 5B                      	pop rbx
 19894 0000E772 BE00000000              	mov rsi, 0
 19895                                  .L_lambda_simple_params_loop_01ef:	; copy params
 19896 0000E777 4883FE01                	cmp rsi, 1
 19897 0000E77B 740E                    	je .L_lambda_simple_params_end_01ef
 19898 0000E77D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19899 0000E782 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19900 0000E786 48FFC6                  	inc rsi
 19901 0000E789 EBEC                    	jmp .L_lambda_simple_params_loop_01ef
 19902                                  .L_lambda_simple_params_end_01ef:
 19903 0000E78B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19904 0000E78E 4889C3                  	mov rbx, rax
 19905 0000E791 58                      	pop rax
 19906 0000E792 C60004                  	mov byte [rax], T_closure
 19907 0000E795 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19908 0000E799 48C74009[A6E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ef
 19909 0000E7A1 E9E4040000              	jmp .L_lambda_simple_end_01ef
 19910                                  .L_lambda_simple_code_01ef:	; lambda-simple body
 19911 0000E7A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19912 0000E7AC 740B                    	je .L_lambda_simple_arity_check_ok_01ef
 19913 0000E7AE FF742410                	push qword [rsp + 8 * 2]
 19914 0000E7B2 6A01                    	push 1
 19915 0000E7B4 E9A16B0000              	jmp L_error_incorrect_arity_simple
 19916                                  .L_lambda_simple_arity_check_ok_01ef:
 19917 0000E7B9 C8000000                	enter 0, 0
 19918                                  	; Initiating tail-call optimization
 19919 0000E7BD 48B8-                   	mov rax, L_constants + 2007
 19919 0000E7BF [D707000000000000] 
 19920 0000E7C7 50                      	push rax
 19921 0000E7C8 6A01                    	push 1	; Number of arguments
 19922 0000E7CA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19923 0000E7CF E8CD6B0000              	call malloc
 19924 0000E7D4 50                      	push rax
 19925 0000E7D5 BF08000000              	mov rdi, 8 * 1	; new rib
 19926 0000E7DA E8C26B0000              	call malloc
 19927 0000E7DF 50                      	push rax
 19928 0000E7E0 BF20000000              	mov rdi, 8 * 4	; extended env
 19929 0000E7E5 E8B76B0000              	call malloc
 19930 0000E7EA 488B7D10                	mov rdi, ENV
 19931 0000E7EE BE00000000              	mov rsi, 0
 19932 0000E7F3 BA01000000              	mov rdx, 1
 19933                                  .L_lambda_simple_env_loop_01f0:	; ext_env[i + 1] <-- env[i]
 19934 0000E7F8 4883FE03                	cmp rsi, 3
 19935 0000E7FC 7410                    	je .L_lambda_simple_env_end_01f0
 19936 0000E7FE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19937 0000E802 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19938 0000E806 48FFC6                  	inc rsi
 19939 0000E809 48FFC2                  	inc rdx
 19940 0000E80C EBEA                    	jmp .L_lambda_simple_env_loop_01f0
 19941                                  .L_lambda_simple_env_end_01f0:
 19942 0000E80E 5B                      	pop rbx
 19943 0000E80F BE00000000              	mov rsi, 0
 19944                                  .L_lambda_simple_params_loop_01f0:	; copy params
 19945 0000E814 4883FE01                	cmp rsi, 1
 19946 0000E818 740E                    	je .L_lambda_simple_params_end_01f0
 19947 0000E81A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19948 0000E81F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19949 0000E823 48FFC6                  	inc rsi
 19950 0000E826 EBEC                    	jmp .L_lambda_simple_params_loop_01f0
 19951                                  .L_lambda_simple_params_end_01f0:
 19952 0000E828 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19953 0000E82B 4889C3                  	mov rbx, rax
 19954 0000E82E 58                      	pop rax
 19955 0000E82F C60004                  	mov byte [rax], T_closure
 19956 0000E832 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19957 0000E836 48C74009[43E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f0
 19958 0000E83E E9FD030000              	jmp .L_lambda_simple_end_01f0
 19959                                  .L_lambda_simple_code_01f0:	; lambda-simple body
 19960 0000E843 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19961 0000E849 740B                    	je .L_lambda_simple_arity_check_ok_01f0
 19962 0000E84B FF742410                	push qword [rsp + 8 * 2]
 19963 0000E84F 6A01                    	push 1
 19964 0000E851 E9046B0000              	jmp L_error_incorrect_arity_simple
 19965                                  .L_lambda_simple_arity_check_ok_01f0:
 19966 0000E856 C8000000                	enter 0, 0
 19967 0000E85A BF08000000              	mov rdi, 8 * 1
 19968 0000E85F E83D6B0000              	call malloc
 19969 0000E864 488B5D20                	mov rbx, PARAM(0)
 19970 0000E868 488918                  	mov qword [rax], rbx
 19971 0000E86B 48894520                	mov PARAM(0), rax
 19972 0000E86F 48B8-                   	mov rax, sob_void
 19972 0000E871 [0000000000000000] 
 19973                                  
 19974 0000E879 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19975 0000E87E E81E6B0000              	call malloc
 19976 0000E883 50                      	push rax
 19977 0000E884 BF08000000              	mov rdi, 8 * 1	; new rib
 19978 0000E889 E8136B0000              	call malloc
 19979 0000E88E 50                      	push rax
 19980 0000E88F BF28000000              	mov rdi, 8 * 5	; extended env
 19981 0000E894 E8086B0000              	call malloc
 19982 0000E899 488B7D10                	mov rdi, ENV
 19983 0000E89D BE00000000              	mov rsi, 0
 19984 0000E8A2 BA01000000              	mov rdx, 1
 19985                                  .L_lambda_simple_env_loop_01f1:	; ext_env[i + 1] <-- env[i]
 19986 0000E8A7 4883FE04                	cmp rsi, 4
 19987 0000E8AB 7410                    	je .L_lambda_simple_env_end_01f1
 19988 0000E8AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19989 0000E8B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19990 0000E8B5 48FFC6                  	inc rsi
 19991 0000E8B8 48FFC2                  	inc rdx
 19992 0000E8BB EBEA                    	jmp .L_lambda_simple_env_loop_01f1
 19993                                  .L_lambda_simple_env_end_01f1:
 19994 0000E8BD 5B                      	pop rbx
 19995 0000E8BE BE00000000              	mov rsi, 0
 19996                                  .L_lambda_simple_params_loop_01f1:	; copy params
 19997 0000E8C3 4883FE01                	cmp rsi, 1
 19998 0000E8C7 740E                    	je .L_lambda_simple_params_end_01f1
 19999 0000E8C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20000 0000E8CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20001 0000E8D2 48FFC6                  	inc rsi
 20002 0000E8D5 EBEC                    	jmp .L_lambda_simple_params_loop_01f1
 20003                                  .L_lambda_simple_params_end_01f1:
 20004 0000E8D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20005 0000E8DA 4889C3                  	mov rbx, rax
 20006 0000E8DD 58                      	pop rax
 20007 0000E8DE C60004                  	mov byte [rax], T_closure
 20008 0000E8E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20009 0000E8E5 48C74009[F2E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f1
 20010 0000E8ED E954010000              	jmp .L_lambda_simple_end_01f1
 20011                                  .L_lambda_simple_code_01f1:	; lambda-simple body
 20012 0000E8F2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20013 0000E8F8 740B                    	je .L_lambda_simple_arity_check_ok_01f1
 20014 0000E8FA FF742410                	push qword [rsp + 8 * 2]
 20015 0000E8FE 6A02                    	push 2
 20016 0000E900 E9556A0000              	jmp L_error_incorrect_arity_simple
 20017                                  .L_lambda_simple_arity_check_ok_01f1:
 20018 0000E905 C8000000                	enter 0, 0
 20019                                  	; preparing a non-tail-call
 20020 0000E909 488B4528                	mov rax, PARAM(1)	; param strs
 20021 0000E90D 50                      	push rax
 20022 0000E90E 6A01                    	push 1	; arg count
 20023 0000E910 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 20024 0000E918 803805                  	cmp byte [rax], T_undefined
 20025 0000E91B 0F8453690000            	je L_error_fvar_undefined
 20026 0000E921 803804                  	cmp byte [rax], T_closure
 20027 0000E924 0F85CE690000            	jne L_error_non_closure
 20028 0000E92A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20029 0000E92D FF5009                  	call SOB_CLOSURE_CODE(rax)
 20030 0000E930 483D[02000000]          	cmp rax, sob_boolean_false
 20031 0000E936 0F8506010000            	jne .L_or_end_0029
 20032                                  
 20033                                  	; preparing a non-tail-call
 20034                                  	; preparing a non-tail-call
 20035 0000E93C 488B4528                	mov rax, PARAM(1)	; param strs
 20036 0000E940 50                      	push rax
 20037 0000E941 6A01                    	push 1	; arg count
 20038 0000E943 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 20039 0000E94B 803805                  	cmp byte [rax], T_undefined
 20040 0000E94E 0F8420690000            	je L_error_fvar_undefined
 20041 0000E954 803804                  	cmp byte [rax], T_closure
 20042 0000E957 0F859B690000            	jne L_error_non_closure
 20043 0000E95D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20044 0000E960 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20045 0000E963 50                      	push rax
 20046 0000E964 488B4520                	mov rax, PARAM(0)	; param str
 20047 0000E968 50                      	push rax
 20048 0000E969 6A02                    	push 2	; arg count
 20049 0000E96B 488B4510                	mov rax, ENV
 20050 0000E96F 488B4008                	mov rax, qword [rax + 8 * 1]
 20051 0000E973 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20052 0000E976 803804                  	cmp byte [rax], T_closure
 20053 0000E979 0F8579690000            	jne L_error_non_closure
 20054 0000E97F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20055 0000E982 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20056 0000E985 483D[02000000]          	cmp rax, sob_boolean_false
 20057 0000E98B 0F84A7000000            	je .L_if_else_016f
 20058                                  	; Initiating tail-call optimization
 20059                                  	; preparing a non-tail-call
 20060 0000E991 488B4528                	mov rax, PARAM(1)	; param strs
 20061 0000E995 50                      	push rax
 20062 0000E996 6A01                    	push 1	; arg count
 20063 0000E998 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 20064 0000E9A0 803805                  	cmp byte [rax], T_undefined
 20065 0000E9A3 0F84CB680000            	je L_error_fvar_undefined
 20066 0000E9A9 803804                  	cmp byte [rax], T_closure
 20067 0000E9AC 0F8546690000            	jne L_error_non_closure
 20068 0000E9B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20069 0000E9B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20070 0000E9B8 50                      	push rax
 20071                                  	; preparing a non-tail-call
 20072 0000E9B9 488B4528                	mov rax, PARAM(1)	; param strs
 20073 0000E9BD 50                      	push rax
 20074 0000E9BE 6A01                    	push 1	; arg count
 20075 0000E9C0 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 20076 0000E9C8 803805                  	cmp byte [rax], T_undefined
 20077 0000E9CB 0F84A3680000            	je L_error_fvar_undefined
 20078 0000E9D1 803804                  	cmp byte [rax], T_closure
 20079 0000E9D4 0F851E690000            	jne L_error_non_closure
 20080 0000E9DA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20081 0000E9DD FF5009                  	call SOB_CLOSURE_CODE(rax)
 20082 0000E9E0 50                      	push rax
 20083 0000E9E1 6A02                    	push 2	; Number of arguments
 20084 0000E9E3 488B4510                	mov rax, ENV
 20085 0000E9E7 488B00                  	mov rax, qword [rax + 8 * 0]
 20086 0000E9EA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20087 0000E9ED 488B00                  	mov rax, qword [rax]
 20088 0000E9F0 803804                  	cmp byte [rax], T_closure
 20089 0000E9F3 0F85FF680000            	jne L_error_non_closure
 20090 0000E9F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20091 0000E9FC FF7508                  	push qword [rbp + 8]
 20092 0000E9FF FF7500                  	push qword [rbp]
 20093 0000EA02 41BA06000000            	mov r10, 2 + 4
 20094 0000EA08 4C8B4518                	mov r8, COUNT
 20095 0000EA0C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20096 0000EA11 4C8D4DF8                	lea r9, [rbp - 8]
 20097                                  .L_tc_recycle_frame_loop_0276:
 20098 0000EA15 4983FA00                	cmp r10, 0
 20099 0000EA19 7413                    	je .L_tc_recycle_frame_done_0276
 20100 0000EA1B 4D8B19                  	mov r11, qword [r9]
 20101 0000EA1E 4D8918                  	mov qword [r8], r11
 20102 0000EA21 49FFCA                  	dec r10
 20103 0000EA24 4983E808                	sub r8, 8
 20104 0000EA28 4983E908                	sub r9, 8
 20105 0000EA2C EBE7                    	jmp .L_tc_recycle_frame_loop_0276
 20106                                  .L_tc_recycle_frame_done_0276:
 20107 0000EA2E 498D6008                	lea rsp, [r8 + 8]
 20108 0000EA32 5D                      	pop rbp
 20109 0000EA33 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20110 0000EA36 EB0A                    	jmp .L_if_end_016f
 20111                                  .L_if_else_016f:
 20112 0000EA38 48B8-                   	mov rax, L_constants + 2
 20112 0000EA3A [0200000000000000] 
 20113                                  .L_if_end_016f:
 20114                                  .L_or_end_0029:
 20115 0000EA42 C9                      	leave
 20116 0000EA43 C22000                  	ret AND_KILL_FRAME(2)
 20117                                  .L_lambda_simple_end_01f1:	; new closure is in rax
 20118 0000EA46 50                      	push rax
 20119 0000EA47 488B4520                	mov rax, PARAM(0)	; param run
 20120 0000EA4B 8F00                    	pop qword [rax]
 20121 0000EA4D 48B8-                   	mov rax, sob_void
 20121 0000EA4F [0000000000000000] 
 20122                                  
 20123 0000EA57 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20124 0000EA5C E840690000              	call malloc
 20125 0000EA61 50                      	push rax
 20126 0000EA62 BF08000000              	mov rdi, 8 * 1	; new rib
 20127 0000EA67 E835690000              	call malloc
 20128 0000EA6C 50                      	push rax
 20129 0000EA6D BF28000000              	mov rdi, 8 * 5	; extended env
 20130 0000EA72 E82A690000              	call malloc
 20131 0000EA77 488B7D10                	mov rdi, ENV
 20132 0000EA7B BE00000000              	mov rsi, 0
 20133 0000EA80 BA01000000              	mov rdx, 1
 20134                                  .L_lambda_opt_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 20135 0000EA85 4883FE04                	cmp rsi, 4
 20136 0000EA89 7410                    	je .L_lambda_opt_env_end_0045
 20137 0000EA8B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20138 0000EA8F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20139 0000EA93 48FFC6                  	inc rsi
 20140 0000EA96 48FFC2                  	inc rdx
 20141 0000EA99 EBEA                    	jmp .L_lambda_opt_env_loop_0045
 20142                                  .L_lambda_opt_env_end_0045:
 20143 0000EA9B 5B                      	pop rbx
 20144 0000EA9C BE00000000              	mov rsi, 0
 20145                                  .L_lambda_opt_params_loop_0045:	; copy params
 20146 0000EAA1 4883FE01                	cmp rsi, 1
 20147 0000EAA5 740E                    	je .L_lambda_opt_params_end_0045
 20148 0000EAA7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20149 0000EAAC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20150 0000EAB0 48FFC6                  	inc rsi
 20151 0000EAB3 EBEC                    	jmp .L_lambda_opt_params_loop_0045
 20152                                  .L_lambda_opt_params_end_0045:
 20153 0000EAB5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20154 0000EAB8 4889C3                  	mov rbx, rax
 20155 0000EABB 58                      	pop rax
 20156 0000EABC C60004                  	mov byte [rax], T_closure
 20157 0000EABF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20158 0000EAC3 48C74009[D0EA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0045
 20159 0000EACB E96C010000              	jmp .L_lambda_opt_end_0045
 20160                                  .L_lambda_opt_code_0045:
 20161 0000EAD0 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 20162 0000EAD5 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 20163 0000EAD9 7407                    	je .L_lambda_opt_arity_check_exact_0045	; Jump if arity matches
 20164 0000EADB 7F4C                    	jg .L_lambda_opt_arity_check_more_0045	; Jump if more arguments passed
 20165 0000EADD E98C680000              	jmp L_error_incorrect_arity_opt
 20166                                  .L_lambda_opt_arity_check_exact_0045:
 20167 0000EAE2 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 20168 0000EAE5 4983C603                	add r14, 3 ; add 3 first stack values
 20169 0000EAE9 41BF00000000            	mov r15, 0 ; r15 = index
 20170 0000EAEF 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 20171 0000EAF3 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 20172 0000EAFB EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0045
 20173                                  .L_lambda_opt_stack_shrink_loop_0045:
 20174 0000EAFD 4983FE00                	cmp r14, 0
 20175 0000EB01 7E11                    	jle .L_make_lambda_opt_exact_finish_0045
 20176 0000EB03 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 20177 0000EB08 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 20178 0000EB0C 49FFCE                  	dec r14 ; next loop value
 20179 0000EB0F 49FFC7                  	inc r15 ; update i
 20180 0000EB12 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0045
 20181                                  .L_make_lambda_opt_exact_finish_0045:
 20182 0000EB14 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 20183 0000EB1C 49FFC2                  	inc r10
 20184 0000EB1F 4C89542410              	mov qword [rsp + 8 * 2], r10
 20185 0000EB24 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0045
 20186                                  .L_lambda_opt_arity_check_more_0045:
 20187 0000EB29 4D89D6                  	mov r14, r10 ; r14 = num args
 20188 0000EB2C 4D89D7                  	mov r15, r10 ; r15 = num args
 20189 0000EB2F 41B901000000            	mov r9, 1; r9 = number of params 
 20190 0000EB35 4D29CE                  	sub r14, r9 ; r14 = extra args
 20191 0000EB38 4D01F1                  	add r9, r14 ; r9 = num args
 20192 0000EB3B 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 20192 0000EB3D [0100000000000000] 
 20193 0000EB45 EB00                    	jmp .L_make_lambda_opt_arg_list_0045
 20194                                  .L_make_lambda_opt_arg_list_0045:
 20195 0000EB47 4983FE00                	cmp r14, 0
 20196 0000EB4B 7E25                    	jle .L_make_lambda_opt_stack_fixed_0045
 20197 0000EB4D 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 20198 0000EB52 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 20199 0000EB57 E845680000              	call malloc                         ; Allocate memory, result in rax
 20200 0000EB5C C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 20201 0000EB5F 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 20202 0000EB63 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 20203 0000EB67 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 20204 0000EB6A 49FFC9                  	dec r9                              ; args index minus 1
 20205 0000EB6D 49FFCE                  	dec r14                             ; next iteration
 20206 0000EB70 EBD5                    	jmp .L_make_lambda_opt_arg_list_0045
 20207                                  .L_make_lambda_opt_stack_fixed_0045:
 20208 0000EB72 4D89FE                  	mov r14, r15 ; r14 = num args
 20209 0000EB75 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 20210 0000EB78 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 20211 0000EB7C 4D89C1                  	mov r9, r8
 20212 0000EB7F 41BA01000000            	mov r10, 1; r10 = num of params
 20213 0000EB85 4D29D6                  	sub r14, r10 ; r14 = extra args
 20214 0000EB88 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 20215 0000EB8B 49FFCE                  	dec r14 ; how much we need to change stack wise?
 20216 0000EB8E 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 20217 0000EB93 4D89CC                  	mov r12, r9
 20218 0000EB96 4D29F4                  	sub r12, r14
 20219 0000EB99 49FFCC                  	dec r12
 20220 0000EB9C 49FFCC                  	dec r12
 20221 0000EB9F EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0045
 20222                                  .L_lambda_opt_stack_shrink_loop_more_0045:
 20223 0000EBA1 4983F800                	cmp r8, 0
 20224 0000EBA5 7E16                    	jle .L_make_lambda_opt_more_finish_0045
 20225 0000EBA7 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 20226 0000EBAB 4D01F4                  	add r12, r14
 20227 0000EBAE 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 20228 0000EBB2 49FFC8                  	dec r8 ; next iteration
 20229 0000EBB5 4D29F4                  	sub r12, r14 ; next iteration
 20230 0000EBB8 49FFCC                  	dec r12 ; next iteration
 20231 0000EBBB EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0045
 20232                                  .L_make_lambda_opt_more_finish_0045:
 20233 0000EBBD 41BA01000000            	mov r10, 1
 20234 0000EBC3 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 20235 0000EBCC 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 20236 0000EBD0 4C01F4                  	add rsp, r14  ; Add to rsp
 20237 0000EBD3 EB00                    	jmp .L_lambda_opt_stack_adjusted_0045
 20238                                  .L_lambda_opt_stack_adjusted_0045:
 20239 0000EBD5 C8000000                	enter 0, 0
 20240                                  	; Initiating tail-call optimization
 20241 0000EBD9 488B4528                	mov rax, PARAM(1)	; param strs
 20242 0000EBDD 50                      	push rax
 20243 0000EBDE 488B4520                	mov rax, PARAM(0)	; param str
 20244 0000EBE2 50                      	push rax
 20245 0000EBE3 6A02                    	push 2	; Number of arguments
 20246 0000EBE5 488B4510                	mov rax, ENV
 20247 0000EBE9 488B00                  	mov rax, qword [rax + 8 * 0]
 20248 0000EBEC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20249 0000EBEF 488B00                  	mov rax, qword [rax]
 20250 0000EBF2 803804                  	cmp byte [rax], T_closure
 20251 0000EBF5 0F85FD660000            	jne L_error_non_closure
 20252 0000EBFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20253 0000EBFE FF7508                  	push qword [rbp + 8]
 20254 0000EC01 FF7500                  	push qword [rbp]
 20255 0000EC04 41BA06000000            	mov r10, 2 + 4
 20256 0000EC0A 4C8B4518                	mov r8, COUNT
 20257 0000EC0E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20258 0000EC13 4C8D4DF8                	lea r9, [rbp - 8]
 20259                                  .L_tc_recycle_frame_loop_0277:
 20260 0000EC17 4983FA00                	cmp r10, 0
 20261 0000EC1B 7413                    	je .L_tc_recycle_frame_done_0277
 20262 0000EC1D 4D8B19                  	mov r11, qword [r9]
 20263 0000EC20 4D8918                  	mov qword [r8], r11
 20264 0000EC23 49FFCA                  	dec r10
 20265 0000EC26 4983E808                	sub r8, 8
 20266 0000EC2A 4983E908                	sub r9, 8
 20267 0000EC2E EBE7                    	jmp .L_tc_recycle_frame_loop_0277
 20268                                  .L_tc_recycle_frame_done_0277:
 20269 0000EC30 498D6008                	lea rsp, [r8 + 8]
 20270 0000EC34 5D                      	pop rbp
 20271 0000EC35 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20272 0000EC38 C9                      	leave
 20273 0000EC39 C22000                  	ret AND_KILL_FRAME(2)
 20274                                  .L_lambda_opt_end_0045:	; new closure is in rax
 20275 0000EC3C C9                      	leave
 20276 0000EC3D C21800                  	ret AND_KILL_FRAME(1)
 20277                                  .L_lambda_simple_end_01f0:	; new closure is in rax
 20278 0000EC40 803804                  	cmp byte [rax], T_closure
 20279 0000EC43 0F85AF660000            	jne L_error_non_closure
 20280 0000EC49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20281 0000EC4C FF7508                  	push qword [rbp + 8]
 20282 0000EC4F FF7500                  	push qword [rbp]
 20283 0000EC52 41BA05000000            	mov r10, 1 + 4
 20284 0000EC58 4C8B4518                	mov r8, COUNT
 20285 0000EC5C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20286 0000EC61 4C8D4DF8                	lea r9, [rbp - 8]
 20287                                  .L_tc_recycle_frame_loop_0278:
 20288 0000EC65 4983FA00                	cmp r10, 0
 20289 0000EC69 7413                    	je .L_tc_recycle_frame_done_0278
 20290 0000EC6B 4D8B19                  	mov r11, qword [r9]
 20291 0000EC6E 4D8918                  	mov qword [r8], r11
 20292 0000EC71 49FFCA                  	dec r10
 20293 0000EC74 4983E808                	sub r8, 8
 20294 0000EC78 4983E908                	sub r9, 8
 20295 0000EC7C EBE7                    	jmp .L_tc_recycle_frame_loop_0278
 20296                                  .L_tc_recycle_frame_done_0278:
 20297 0000EC7E 498D6008                	lea rsp, [r8 + 8]
 20298 0000EC82 5D                      	pop rbp
 20299 0000EC83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20300 0000EC86 C9                      	leave
 20301 0000EC87 C21800                  	ret AND_KILL_FRAME(1)
 20302                                  .L_lambda_simple_end_01ef:	; new closure is in rax
 20303 0000EC8A 803804                  	cmp byte [rax], T_closure
 20304 0000EC8D 0F8565660000            	jne L_error_non_closure
 20305 0000EC93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20306 0000EC96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20307 0000EC99 C9                      	leave
 20308 0000EC9A C21800                  	ret AND_KILL_FRAME(1)
 20309                                  .L_lambda_simple_end_01eb:	; new closure is in rax
 20310 0000EC9D 803804                  	cmp byte [rax], T_closure
 20311 0000ECA0 0F8552660000            	jne L_error_non_closure
 20312 0000ECA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20313 0000ECA9 FF7508                  	push qword [rbp + 8]
 20314 0000ECAC FF7500                  	push qword [rbp]
 20315 0000ECAF 41BA05000000            	mov r10, 1 + 4
 20316 0000ECB5 4C8B4518                	mov r8, COUNT
 20317 0000ECB9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20318 0000ECBE 4C8D4DF8                	lea r9, [rbp - 8]
 20319                                  .L_tc_recycle_frame_loop_0279:
 20320 0000ECC2 4983FA00                	cmp r10, 0
 20321 0000ECC6 7413                    	je .L_tc_recycle_frame_done_0279
 20322 0000ECC8 4D8B19                  	mov r11, qword [r9]
 20323 0000ECCB 4D8918                  	mov qword [r8], r11
 20324 0000ECCE 49FFCA                  	dec r10
 20325 0000ECD1 4983E808                	sub r8, 8
 20326 0000ECD5 4983E908                	sub r9, 8
 20327 0000ECD9 EBE7                    	jmp .L_tc_recycle_frame_loop_0279
 20328                                  .L_tc_recycle_frame_done_0279:
 20329 0000ECDB 498D6008                	lea rsp, [r8 + 8]
 20330 0000ECDF 5D                      	pop rbp
 20331 0000ECE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20332 0000ECE3 C9                      	leave
 20333 0000ECE4 C21800                  	ret AND_KILL_FRAME(1)
 20334                                  .L_lambda_simple_end_01ea:	; new closure is in rax
 20335 0000ECE7 50                      	push rax
 20336 0000ECE8 6A01                    	push 1	; arg count
 20337 0000ECEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20338 0000ECEF E8AD660000              	call malloc
 20339 0000ECF4 50                      	push rax
 20340 0000ECF5 BF00000000              	mov rdi, 8 * 0	; new rib
 20341 0000ECFA E8A2660000              	call malloc
 20342 0000ECFF 50                      	push rax
 20343 0000ED00 BF08000000              	mov rdi, 8 * 1	; extended env
 20344 0000ED05 E897660000              	call malloc
 20345 0000ED0A 488B7D10                	mov rdi, ENV
 20346 0000ED0E BE00000000              	mov rsi, 0
 20347 0000ED13 BA01000000              	mov rdx, 1
 20348                                  .L_lambda_simple_env_loop_01f2:	; ext_env[i + 1] <-- env[i]
 20349 0000ED18 4883FE00                	cmp rsi, 0
 20350 0000ED1C 7410                    	je .L_lambda_simple_env_end_01f2
 20351 0000ED1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20352 0000ED22 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20353 0000ED26 48FFC6                  	inc rsi
 20354 0000ED29 48FFC2                  	inc rdx
 20355 0000ED2C EBEA                    	jmp .L_lambda_simple_env_loop_01f2
 20356                                  .L_lambda_simple_env_end_01f2:
 20357 0000ED2E 5B                      	pop rbx
 20358 0000ED2F BE00000000              	mov rsi, 0
 20359                                  .L_lambda_simple_params_loop_01f2:	; copy params
 20360 0000ED34 4883FE00                	cmp rsi, 0
 20361 0000ED38 740E                    	je .L_lambda_simple_params_end_01f2
 20362 0000ED3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20363 0000ED3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20364 0000ED43 48FFC6                  	inc rsi
 20365 0000ED46 EBEC                    	jmp .L_lambda_simple_params_loop_01f2
 20366                                  .L_lambda_simple_params_end_01f2:
 20367 0000ED48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20368 0000ED4B 4889C3                  	mov rbx, rax
 20369 0000ED4E 58                      	pop rax
 20370 0000ED4F C60004                  	mov byte [rax], T_closure
 20371 0000ED52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20372 0000ED56 48C74009[63ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f2
 20373 0000ED5E E98D000000              	jmp .L_lambda_simple_end_01f2
 20374                                  .L_lambda_simple_code_01f2:	; lambda-simple body
 20375 0000ED63 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20376 0000ED69 740B                    	je .L_lambda_simple_arity_check_ok_01f2
 20377 0000ED6B FF742410                	push qword [rsp + 8 * 2]
 20378 0000ED6F 6A01                    	push 1
 20379 0000ED71 E9E4650000              	jmp L_error_incorrect_arity_simple
 20380                                  .L_lambda_simple_arity_check_ok_01f2:
 20381 0000ED76 C8000000                	enter 0, 0
 20382                                  	; preparing a non-tail-call
 20383 0000ED7A 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 20384 0000ED82 803805                  	cmp byte [rax], T_undefined
 20385 0000ED85 0F84E9640000            	je L_error_fvar_undefined
 20386 0000ED8B 50                      	push rax
 20387 0000ED8C 6A01                    	push 1	; arg count
 20388 0000ED8E 488B4520                	mov rax, PARAM(0)	; param make-string=?
 20389 0000ED92 803804                  	cmp byte [rax], T_closure
 20390 0000ED95 0F855D650000            	jne L_error_non_closure
 20391 0000ED9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20392 0000ED9E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20393 0000EDA1 48890425[CE160000]      	mov qword [free_var_135], rax
 20394 0000EDA9 48B8-                   	mov rax, sob_void
 20394 0000EDAB [0000000000000000] 
 20395                                  
 20396                                  	; preparing a non-tail-call
 20397 0000EDB3 488B0425[5B120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20398 0000EDBB 803805                  	cmp byte [rax], T_undefined
 20399 0000EDBE 0F84B0640000            	je L_error_fvar_undefined
 20400 0000EDC4 50                      	push rax
 20401 0000EDC5 6A01                    	push 1	; arg count
 20402 0000EDC7 488B4520                	mov rax, PARAM(0)	; param make-string=?
 20403 0000EDCB 803804                  	cmp byte [rax], T_closure
 20404 0000EDCE 0F8524650000            	jne L_error_non_closure
 20405 0000EDD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20406 0000EDD7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20407 0000EDDA 48890425[02160000]      	mov qword [free_var_123], rax
 20408 0000EDE2 48B8-                   	mov rax, sob_void
 20408 0000EDE4 [0000000000000000] 
 20409 0000EDEC C9                      	leave
 20410 0000EDED C21800                  	ret AND_KILL_FRAME(1)
 20411                                  .L_lambda_simple_end_01f2:	; new closure is in rax
 20412 0000EDF0 803804                  	cmp byte [rax], T_closure
 20413 0000EDF3 0F85FF640000            	jne L_error_non_closure
 20414 0000EDF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20415 0000EDFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 20416                                  
 20417 0000EDFF 4889C7                  	mov rdi, rax
 20418 0000EE02 E8EF670000              	call print_sexpr_if_not_void
 20419 0000EE07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20420 0000EE0C E890650000              	call malloc
 20421 0000EE11 50                      	push rax
 20422 0000EE12 BF00000000              	mov rdi, 8 * 0	; new rib
 20423 0000EE17 E885650000              	call malloc
 20424 0000EE1C 50                      	push rax
 20425 0000EE1D BF08000000              	mov rdi, 8 * 1	; extended env
 20426 0000EE22 E87A650000              	call malloc
 20427 0000EE27 488B7D10                	mov rdi, ENV
 20428 0000EE2B BE00000000              	mov rsi, 0
 20429 0000EE30 BA01000000              	mov rdx, 1
 20430                                  .L_lambda_simple_env_loop_01f3:	; ext_env[i + 1] <-- env[i]
 20431 0000EE35 4883FE00                	cmp rsi, 0
 20432 0000EE39 7410                    	je .L_lambda_simple_env_end_01f3
 20433 0000EE3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20434 0000EE3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20435 0000EE43 48FFC6                  	inc rsi
 20436 0000EE46 48FFC2                  	inc rdx
 20437 0000EE49 EBEA                    	jmp .L_lambda_simple_env_loop_01f3
 20438                                  .L_lambda_simple_env_end_01f3:
 20439 0000EE4B 5B                      	pop rbx
 20440 0000EE4C BE00000000              	mov rsi, 0
 20441                                  .L_lambda_simple_params_loop_01f3:	; copy params
 20442 0000EE51 4883FE00                	cmp rsi, 0
 20443 0000EE55 740E                    	je .L_lambda_simple_params_end_01f3
 20444 0000EE57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20445 0000EE5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20446 0000EE60 48FFC6                  	inc rsi
 20447 0000EE63 EBEC                    	jmp .L_lambda_simple_params_loop_01f3
 20448                                  .L_lambda_simple_params_end_01f3:
 20449 0000EE65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20450 0000EE68 4889C3                  	mov rbx, rax
 20451 0000EE6B 58                      	pop rax
 20452 0000EE6C C60004                  	mov byte [rax], T_closure
 20453 0000EE6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20454 0000EE73 48C74009[80EE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f3
 20455 0000EE7B E90E010000              	jmp .L_lambda_simple_end_01f3
 20456                                  .L_lambda_simple_code_01f3:	; lambda-simple body
 20457 0000EE80 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20458 0000EE86 740B                    	je .L_lambda_simple_arity_check_ok_01f3
 20459 0000EE88 FF742410                	push qword [rsp + 8 * 2]
 20460 0000EE8C 6A01                    	push 1
 20461 0000EE8E E9C7640000              	jmp L_error_incorrect_arity_simple
 20462                                  .L_lambda_simple_arity_check_ok_01f3:
 20463 0000EE93 C8000000                	enter 0, 0
 20464                                  	; preparing a non-tail-call
 20465 0000EE97 488B4520                	mov rax, PARAM(0)	; param e
 20466 0000EE9B 50                      	push rax
 20467 0000EE9C 6A01                    	push 1	; arg count
 20468 0000EE9E 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 20469 0000EEA6 803805                  	cmp byte [rax], T_undefined
 20470 0000EEA9 0F84C5630000            	je L_error_fvar_undefined
 20471 0000EEAF 803804                  	cmp byte [rax], T_closure
 20472 0000EEB2 0F8540640000            	jne L_error_non_closure
 20473 0000EEB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20474 0000EEBB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20475 0000EEBE 483D[02000000]          	cmp rax, sob_boolean_false
 20476 0000EEC4 0F85C0000000            	jne .L_or_end_002a
 20477                                  
 20478                                  	; preparing a non-tail-call
 20479 0000EECA 488B4520                	mov rax, PARAM(0)	; param e
 20480 0000EECE 50                      	push rax
 20481 0000EECF 6A01                    	push 1	; arg count
 20482 0000EED1 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
 20483 0000EED9 803805                  	cmp byte [rax], T_undefined
 20484 0000EEDC 0F8492630000            	je L_error_fvar_undefined
 20485 0000EEE2 803804                  	cmp byte [rax], T_closure
 20486 0000EEE5 0F850D640000            	jne L_error_non_closure
 20487 0000EEEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20488 0000EEEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 20489 0000EEF1 483D[02000000]          	cmp rax, sob_boolean_false
 20490 0000EEF7 0F8483000000            	je .L_if_else_0170
 20491                                  	; Initiating tail-call optimization
 20492                                  	; preparing a non-tail-call
 20493 0000EEFD 488B4520                	mov rax, PARAM(0)	; param e
 20494 0000EF01 50                      	push rax
 20495 0000EF02 6A01                    	push 1	; arg count
 20496 0000EF04 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 20497 0000EF0C 803805                  	cmp byte [rax], T_undefined
 20498 0000EF0F 0F845F630000            	je L_error_fvar_undefined
 20499 0000EF15 803804                  	cmp byte [rax], T_closure
 20500 0000EF18 0F85DA630000            	jne L_error_non_closure
 20501 0000EF1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20502 0000EF21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20503 0000EF24 50                      	push rax
 20504 0000EF25 6A01                    	push 1	; Number of arguments
 20505 0000EF27 488B0425[37140000]      	mov rax, qword [free_var_96]	; free var list?
 20506 0000EF2F 803805                  	cmp byte [rax], T_undefined
 20507 0000EF32 0F843C630000            	je L_error_fvar_undefined
 20508 0000EF38 803804                  	cmp byte [rax], T_closure
 20509 0000EF3B 0F85B7630000            	jne L_error_non_closure
 20510 0000EF41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20511 0000EF44 FF7508                  	push qword [rbp + 8]
 20512 0000EF47 FF7500                  	push qword [rbp]
 20513 0000EF4A 41BA05000000            	mov r10, 1 + 4
 20514 0000EF50 4C8B4518                	mov r8, COUNT
 20515 0000EF54 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20516 0000EF59 4C8D4DF8                	lea r9, [rbp - 8]
 20517                                  .L_tc_recycle_frame_loop_027a:
 20518 0000EF5D 4983FA00                	cmp r10, 0
 20519 0000EF61 7413                    	je .L_tc_recycle_frame_done_027a
 20520 0000EF63 4D8B19                  	mov r11, qword [r9]
 20521 0000EF66 4D8918                  	mov qword [r8], r11
 20522 0000EF69 49FFCA                  	dec r10
 20523 0000EF6C 4983E808                	sub r8, 8
 20524 0000EF70 4983E908                	sub r9, 8
 20525 0000EF74 EBE7                    	jmp .L_tc_recycle_frame_loop_027a
 20526                                  .L_tc_recycle_frame_done_027a:
 20527 0000EF76 498D6008                	lea rsp, [r8 + 8]
 20528 0000EF7A 5D                      	pop rbp
 20529 0000EF7B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20530 0000EF7E EB0A                    	jmp .L_if_end_0170
 20531                                  .L_if_else_0170:
 20532 0000EF80 48B8-                   	mov rax, L_constants + 2
 20532 0000EF82 [0200000000000000] 
 20533                                  .L_if_end_0170:
 20534                                  .L_or_end_002a:
 20535 0000EF8A C9                      	leave
 20536 0000EF8B C21800                  	ret AND_KILL_FRAME(1)
 20537                                  .L_lambda_simple_end_01f3:	; new closure is in rax
 20538 0000EF8E 48890425[37140000]      	mov qword [free_var_96], rax
 20539 0000EF96 48B8-                   	mov rax, sob_void
 20539 0000EF98 [0000000000000000] 
 20540                                  
 20541 0000EFA0 4889C7                  	mov rdi, rax
 20542 0000EFA3 E84E660000              	call print_sexpr_if_not_void
 20543                                  	; preparing a non-tail-call
 20544 0000EFA8 488B0425[8C140000]      	mov rax, qword [free_var_101]	; free var make-vector
 20545 0000EFB0 803805                  	cmp byte [rax], T_undefined
 20546 0000EFB3 0F84BB620000            	je L_error_fvar_undefined
 20547 0000EFB9 50                      	push rax
 20548 0000EFBA 6A01                    	push 1	; arg count
 20549 0000EFBC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20550 0000EFC1 E8DB630000              	call malloc
 20551 0000EFC6 50                      	push rax
 20552 0000EFC7 BF00000000              	mov rdi, 8 * 0	; new rib
 20553 0000EFCC E8D0630000              	call malloc
 20554 0000EFD1 50                      	push rax
 20555 0000EFD2 BF08000000              	mov rdi, 8 * 1	; extended env
 20556 0000EFD7 E8C5630000              	call malloc
 20557 0000EFDC 488B7D10                	mov rdi, ENV
 20558 0000EFE0 BE00000000              	mov rsi, 0
 20559 0000EFE5 BA01000000              	mov rdx, 1
 20560                                  .L_lambda_simple_env_loop_01f4:	; ext_env[i + 1] <-- env[i]
 20561 0000EFEA 4883FE00                	cmp rsi, 0
 20562 0000EFEE 7410                    	je .L_lambda_simple_env_end_01f4
 20563 0000EFF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20564 0000EFF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20565 0000EFF8 48FFC6                  	inc rsi
 20566 0000EFFB 48FFC2                  	inc rdx
 20567 0000EFFE EBEA                    	jmp .L_lambda_simple_env_loop_01f4
 20568                                  .L_lambda_simple_env_end_01f4:
 20569 0000F000 5B                      	pop rbx
 20570 0000F001 BE00000000              	mov rsi, 0
 20571                                  .L_lambda_simple_params_loop_01f4:	; copy params
 20572 0000F006 4883FE00                	cmp rsi, 0
 20573 0000F00A 740E                    	je .L_lambda_simple_params_end_01f4
 20574 0000F00C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20575 0000F011 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20576 0000F015 48FFC6                  	inc rsi
 20577 0000F018 EBEC                    	jmp .L_lambda_simple_params_loop_01f4
 20578                                  .L_lambda_simple_params_end_01f4:
 20579 0000F01A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20580 0000F01D 4889C3                  	mov rbx, rax
 20581 0000F020 58                      	pop rax
 20582 0000F021 C60004                  	mov byte [rax], T_closure
 20583 0000F024 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20584 0000F028 48C74009[35F00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f4
 20585 0000F030 E90D040000              	jmp .L_lambda_simple_end_01f4
 20586                                  .L_lambda_simple_code_01f4:	; lambda-simple body
 20587 0000F035 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20588 0000F03B 740B                    	je .L_lambda_simple_arity_check_ok_01f4
 20589 0000F03D FF742410                	push qword [rsp + 8 * 2]
 20590 0000F041 6A01                    	push 1
 20591 0000F043 E912630000              	jmp L_error_incorrect_arity_simple
 20592                                  .L_lambda_simple_arity_check_ok_01f4:
 20593 0000F048 C8000000                	enter 0, 0
 20594 0000F04C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20595 0000F051 E84B630000              	call malloc
 20596 0000F056 50                      	push rax
 20597 0000F057 BF08000000              	mov rdi, 8 * 1	; new rib
 20598 0000F05C E840630000              	call malloc
 20599 0000F061 50                      	push rax
 20600 0000F062 BF10000000              	mov rdi, 8 * 2	; extended env
 20601 0000F067 E835630000              	call malloc
 20602 0000F06C 488B7D10                	mov rdi, ENV
 20603 0000F070 BE00000000              	mov rsi, 0
 20604 0000F075 BA01000000              	mov rdx, 1
 20605                                  .L_lambda_opt_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 20606 0000F07A 4883FE01                	cmp rsi, 1
 20607 0000F07E 7410                    	je .L_lambda_opt_env_end_0046
 20608 0000F080 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20609 0000F084 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20610 0000F088 48FFC6                  	inc rsi
 20611 0000F08B 48FFC2                  	inc rdx
 20612 0000F08E EBEA                    	jmp .L_lambda_opt_env_loop_0046
 20613                                  .L_lambda_opt_env_end_0046:
 20614 0000F090 5B                      	pop rbx
 20615 0000F091 BE00000000              	mov rsi, 0
 20616                                  .L_lambda_opt_params_loop_0046:	; copy params
 20617 0000F096 4883FE01                	cmp rsi, 1
 20618 0000F09A 740E                    	je .L_lambda_opt_params_end_0046
 20619 0000F09C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20620 0000F0A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20621 0000F0A5 48FFC6                  	inc rsi
 20622 0000F0A8 EBEC                    	jmp .L_lambda_opt_params_loop_0046
 20623                                  .L_lambda_opt_params_end_0046:
 20624 0000F0AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20625 0000F0AD 4889C3                  	mov rbx, rax
 20626 0000F0B0 58                      	pop rax
 20627 0000F0B1 C60004                  	mov byte [rax], T_closure
 20628 0000F0B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20629 0000F0B8 48C74009[C5F00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0046
 20630 0000F0C0 E979030000              	jmp .L_lambda_opt_end_0046
 20631                                  .L_lambda_opt_code_0046:
 20632 0000F0C5 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 20633 0000F0CA 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 20634 0000F0CE 7407                    	je .L_lambda_opt_arity_check_exact_0046	; Jump if arity matches
 20635 0000F0D0 7F4C                    	jg .L_lambda_opt_arity_check_more_0046	; Jump if more arguments passed
 20636 0000F0D2 E997620000              	jmp L_error_incorrect_arity_opt
 20637                                  .L_lambda_opt_arity_check_exact_0046:
 20638 0000F0D7 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 20639 0000F0DA 4983C603                	add r14, 3 ; add 3 first stack values
 20640 0000F0DE 41BF00000000            	mov r15, 0 ; r15 = index
 20641 0000F0E4 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 20642 0000F0E8 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 20643 0000F0F0 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0046
 20644                                  .L_lambda_opt_stack_shrink_loop_0046:
 20645 0000F0F2 4983FE00                	cmp r14, 0
 20646 0000F0F6 7E11                    	jle .L_make_lambda_opt_exact_finish_0046
 20647 0000F0F8 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 20648 0000F0FD 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 20649 0000F101 49FFCE                  	dec r14 ; next loop value
 20650 0000F104 49FFC7                  	inc r15 ; update i
 20651 0000F107 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0046
 20652                                  .L_make_lambda_opt_exact_finish_0046:
 20653 0000F109 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 20654 0000F111 49FFC2                  	inc r10
 20655 0000F114 4C89542410              	mov qword [rsp + 8 * 2], r10
 20656 0000F119 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0046
 20657                                  .L_lambda_opt_arity_check_more_0046:
 20658 0000F11E 4D89D6                  	mov r14, r10 ; r14 = num args
 20659 0000F121 4D89D7                  	mov r15, r10 ; r15 = num args
 20660 0000F124 41B901000000            	mov r9, 1; r9 = number of params 
 20661 0000F12A 4D29CE                  	sub r14, r9 ; r14 = extra args
 20662 0000F12D 4D01F1                  	add r9, r14 ; r9 = num args
 20663 0000F130 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 20663 0000F132 [0100000000000000] 
 20664 0000F13A EB00                    	jmp .L_make_lambda_opt_arg_list_0046
 20665                                  .L_make_lambda_opt_arg_list_0046:
 20666 0000F13C 4983FE00                	cmp r14, 0
 20667 0000F140 7E25                    	jle .L_make_lambda_opt_stack_fixed_0046
 20668 0000F142 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 20669 0000F147 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 20670 0000F14C E850620000              	call malloc                         ; Allocate memory, result in rax
 20671 0000F151 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 20672 0000F154 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 20673 0000F158 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 20674 0000F15C 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 20675 0000F15F 49FFC9                  	dec r9                              ; args index minus 1
 20676 0000F162 49FFCE                  	dec r14                             ; next iteration
 20677 0000F165 EBD5                    	jmp .L_make_lambda_opt_arg_list_0046
 20678                                  .L_make_lambda_opt_stack_fixed_0046:
 20679 0000F167 4D89FE                  	mov r14, r15 ; r14 = num args
 20680 0000F16A 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 20681 0000F16D 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 20682 0000F171 4D89C1                  	mov r9, r8
 20683 0000F174 41BA01000000            	mov r10, 1; r10 = num of params
 20684 0000F17A 4D29D6                  	sub r14, r10 ; r14 = extra args
 20685 0000F17D 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 20686 0000F180 49FFCE                  	dec r14 ; how much we need to change stack wise?
 20687 0000F183 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 20688 0000F188 4D89CC                  	mov r12, r9
 20689 0000F18B 4D29F4                  	sub r12, r14
 20690 0000F18E 49FFCC                  	dec r12
 20691 0000F191 49FFCC                  	dec r12
 20692 0000F194 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0046
 20693                                  .L_lambda_opt_stack_shrink_loop_more_0046:
 20694 0000F196 4983F800                	cmp r8, 0
 20695 0000F19A 7E16                    	jle .L_make_lambda_opt_more_finish_0046
 20696 0000F19C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 20697 0000F1A0 4D01F4                  	add r12, r14
 20698 0000F1A3 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 20699 0000F1A7 49FFC8                  	dec r8 ; next iteration
 20700 0000F1AA 4D29F4                  	sub r12, r14 ; next iteration
 20701 0000F1AD 49FFCC                  	dec r12 ; next iteration
 20702 0000F1B0 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0046
 20703                                  .L_make_lambda_opt_more_finish_0046:
 20704 0000F1B2 41BA01000000            	mov r10, 1
 20705 0000F1B8 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 20706 0000F1C1 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 20707 0000F1C5 4C01F4                  	add rsp, r14  ; Add to rsp
 20708 0000F1C8 EB00                    	jmp .L_lambda_opt_stack_adjusted_0046
 20709                                  .L_lambda_opt_stack_adjusted_0046:
 20710 0000F1CA C8000000                	enter 0, 0
 20711                                  	; Initiating tail-call optimization
 20712                                  	; preparing a non-tail-call
 20713 0000F1CE 488B4528                	mov rax, PARAM(1)	; param xs
 20714 0000F1D2 50                      	push rax
 20715 0000F1D3 6A01                    	push 1	; arg count
 20716 0000F1D5 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 20717 0000F1DD 803805                  	cmp byte [rax], T_undefined
 20718 0000F1E0 0F848E600000            	je L_error_fvar_undefined
 20719 0000F1E6 803804                  	cmp byte [rax], T_closure
 20720 0000F1E9 0F8509610000            	jne L_error_non_closure
 20721 0000F1EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20722 0000F1F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20723 0000F1F5 483D[02000000]          	cmp rax, sob_boolean_false
 20724 0000F1FB 740F                    	je .L_if_else_0173
 20725 0000F1FD 48B8-                   	mov rax, L_constants + 0
 20725 0000F1FF [0000000000000000] 
 20726 0000F207 E9EE000000              	jmp .L_if_end_0173
 20727                                  .L_if_else_0173:
 20728                                  	; preparing a non-tail-call
 20729 0000F20C 488B4528                	mov rax, PARAM(1)	; param xs
 20730 0000F210 50                      	push rax
 20731 0000F211 6A01                    	push 1	; arg count
 20732 0000F213 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
 20733 0000F21B 803805                  	cmp byte [rax], T_undefined
 20734 0000F21E 0F8450600000            	je L_error_fvar_undefined
 20735 0000F224 803804                  	cmp byte [rax], T_closure
 20736 0000F227 0F85CB600000            	jne L_error_non_closure
 20737 0000F22D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20738 0000F230 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20739 0000F233 483D[02000000]          	cmp rax, sob_boolean_false
 20740 0000F239 744C                    	je .L_if_else_0171
 20741                                  	; preparing a non-tail-call
 20742                                  	; preparing a non-tail-call
 20743 0000F23B 488B4528                	mov rax, PARAM(1)	; param xs
 20744 0000F23F 50                      	push rax
 20745 0000F240 6A01                    	push 1	; arg count
 20746 0000F242 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 20747 0000F24A 803805                  	cmp byte [rax], T_undefined
 20748 0000F24D 0F8421600000            	je L_error_fvar_undefined
 20749 0000F253 803804                  	cmp byte [rax], T_closure
 20750 0000F256 0F859C600000            	jne L_error_non_closure
 20751 0000F25C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20752 0000F25F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20753 0000F262 50                      	push rax
 20754 0000F263 6A01                    	push 1	; arg count
 20755 0000F265 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 20756 0000F26D 803805                  	cmp byte [rax], T_undefined
 20757 0000F270 0F84FE5F0000            	je L_error_fvar_undefined
 20758 0000F276 803804                  	cmp byte [rax], T_closure
 20759 0000F279 0F8579600000            	jne L_error_non_closure
 20760 0000F27F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20761 0000F282 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20762 0000F285 EB0A                    	jmp .L_if_end_0171
 20763                                  .L_if_else_0171:
 20764 0000F287 48B8-                   	mov rax, L_constants + 2
 20764 0000F289 [0200000000000000] 
 20765                                  .L_if_end_0171:
 20766 0000F291 483D[02000000]          	cmp rax, sob_boolean_false
 20767 0000F297 7429                    	je .L_if_else_0172
 20768                                  	; preparing a non-tail-call
 20769 0000F299 488B4528                	mov rax, PARAM(1)	; param xs
 20770 0000F29D 50                      	push rax
 20771 0000F29E 6A01                    	push 1	; arg count
 20772 0000F2A0 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 20773 0000F2A8 803805                  	cmp byte [rax], T_undefined
 20774 0000F2AB 0F84C35F0000            	je L_error_fvar_undefined
 20775 0000F2B1 803804                  	cmp byte [rax], T_closure
 20776 0000F2B4 0F853E600000            	jne L_error_non_closure
 20777 0000F2BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20778 0000F2BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 20779 0000F2C0 EB38                    	jmp .L_if_end_0172
 20780                                  .L_if_else_0172:
 20781                                  	; preparing a non-tail-call
 20782 0000F2C2 48B8-                   	mov rax, L_constants + 2955
 20782 0000F2C4 [8B0B000000000000] 
 20783 0000F2CC 50                      	push rax
 20784 0000F2CD 48B8-                   	mov rax, L_constants + 2946
 20784 0000F2CF [820B000000000000] 
 20785 0000F2D7 50                      	push rax
 20786 0000F2D8 6A02                    	push 2	; arg count
 20787 0000F2DA 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
 20788 0000F2E2 803805                  	cmp byte [rax], T_undefined
 20789 0000F2E5 0F84895F0000            	je L_error_fvar_undefined
 20790 0000F2EB 803804                  	cmp byte [rax], T_closure
 20791 0000F2EE 0F8504600000            	jne L_error_non_closure
 20792 0000F2F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20793 0000F2F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20794                                  .L_if_end_0172:
 20795                                  .L_if_end_0173:
 20796 0000F2FA 50                      	push rax
 20797 0000F2FB 6A01                    	push 1	; Number of arguments
 20798 0000F2FD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20799 0000F302 E89A600000              	call malloc
 20800 0000F307 50                      	push rax
 20801 0000F308 BF10000000              	mov rdi, 8 * 2	; new rib
 20802 0000F30D E88F600000              	call malloc
 20803 0000F312 50                      	push rax
 20804 0000F313 BF18000000              	mov rdi, 8 * 3	; extended env
 20805 0000F318 E884600000              	call malloc
 20806 0000F31D 488B7D10                	mov rdi, ENV
 20807 0000F321 BE00000000              	mov rsi, 0
 20808 0000F326 BA01000000              	mov rdx, 1
 20809                                  .L_lambda_simple_env_loop_01f5:	; ext_env[i + 1] <-- env[i]
 20810 0000F32B 4883FE02                	cmp rsi, 2
 20811 0000F32F 7410                    	je .L_lambda_simple_env_end_01f5
 20812 0000F331 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20813 0000F335 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20814 0000F339 48FFC6                  	inc rsi
 20815 0000F33C 48FFC2                  	inc rdx
 20816 0000F33F EBEA                    	jmp .L_lambda_simple_env_loop_01f5
 20817                                  .L_lambda_simple_env_end_01f5:
 20818 0000F341 5B                      	pop rbx
 20819 0000F342 BE00000000              	mov rsi, 0
 20820                                  .L_lambda_simple_params_loop_01f5:	; copy params
 20821 0000F347 4883FE02                	cmp rsi, 2
 20822 0000F34B 740E                    	je .L_lambda_simple_params_end_01f5
 20823 0000F34D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20824 0000F352 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20825 0000F356 48FFC6                  	inc rsi
 20826 0000F359 EBEC                    	jmp .L_lambda_simple_params_loop_01f5
 20827                                  .L_lambda_simple_params_end_01f5:
 20828 0000F35B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20829 0000F35E 4889C3                  	mov rbx, rax
 20830 0000F361 58                      	pop rax
 20831 0000F362 C60004                  	mov byte [rax], T_closure
 20832 0000F365 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20833 0000F369 48C74009[76F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f5
 20834 0000F371 E97E000000              	jmp .L_lambda_simple_end_01f5
 20835                                  .L_lambda_simple_code_01f5:	; lambda-simple body
 20836 0000F376 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20837 0000F37C 740B                    	je .L_lambda_simple_arity_check_ok_01f5
 20838 0000F37E FF742410                	push qword [rsp + 8 * 2]
 20839 0000F382 6A01                    	push 1
 20840 0000F384 E9D15F0000              	jmp L_error_incorrect_arity_simple
 20841                                  .L_lambda_simple_arity_check_ok_01f5:
 20842 0000F389 C8000000                	enter 0, 0
 20843                                  	; Initiating tail-call optimization
 20844 0000F38D 488B4520                	mov rax, PARAM(0)	; param x
 20845 0000F391 50                      	push rax
 20846 0000F392 488B4510                	mov rax, ENV
 20847 0000F396 488B00                  	mov rax, qword [rax + 8 * 0]
 20848 0000F399 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 20849 0000F39C 50                      	push rax
 20850 0000F39D 6A02                    	push 2	; Number of arguments
 20851 0000F39F 488B4510                	mov rax, ENV
 20852 0000F3A3 488B4008                	mov rax, qword [rax + 8 * 1]
 20853 0000F3A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 20854 0000F3AA 803804                  	cmp byte [rax], T_closure
 20855 0000F3AD 0F85455F0000            	jne L_error_non_closure
 20856 0000F3B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20857 0000F3B6 FF7508                  	push qword [rbp + 8]
 20858 0000F3B9 FF7500                  	push qword [rbp]
 20859 0000F3BC 41BA06000000            	mov r10, 2 + 4
 20860 0000F3C2 4C8B4518                	mov r8, COUNT
 20861 0000F3C6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20862 0000F3CB 4C8D4DF8                	lea r9, [rbp - 8]
 20863                                  .L_tc_recycle_frame_loop_027b:
 20864 0000F3CF 4983FA00                	cmp r10, 0
 20865 0000F3D3 7413                    	je .L_tc_recycle_frame_done_027b
 20866 0000F3D5 4D8B19                  	mov r11, qword [r9]
 20867 0000F3D8 4D8918                  	mov qword [r8], r11
 20868 0000F3DB 49FFCA                  	dec r10
 20869 0000F3DE 4983E808                	sub r8, 8
 20870 0000F3E2 4983E908                	sub r9, 8
 20871 0000F3E6 EBE7                    	jmp .L_tc_recycle_frame_loop_027b
 20872                                  .L_tc_recycle_frame_done_027b:
 20873 0000F3E8 498D6008                	lea rsp, [r8 + 8]
 20874 0000F3EC 5D                      	pop rbp
 20875 0000F3ED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20876 0000F3F0 C9                      	leave
 20877 0000F3F1 C21800                  	ret AND_KILL_FRAME(1)
 20878                                  .L_lambda_simple_end_01f5:	; new closure is in rax
 20879 0000F3F4 803804                  	cmp byte [rax], T_closure
 20880 0000F3F7 0F85FB5E0000            	jne L_error_non_closure
 20881 0000F3FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20882 0000F400 FF7508                  	push qword [rbp + 8]
 20883 0000F403 FF7500                  	push qword [rbp]
 20884 0000F406 41BA05000000            	mov r10, 1 + 4
 20885 0000F40C 4C8B4518                	mov r8, COUNT
 20886 0000F410 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 20887 0000F415 4C8D4DF8                	lea r9, [rbp - 8]
 20888                                  .L_tc_recycle_frame_loop_027c:
 20889 0000F419 4983FA00                	cmp r10, 0
 20890 0000F41D 7413                    	je .L_tc_recycle_frame_done_027c
 20891 0000F41F 4D8B19                  	mov r11, qword [r9]
 20892 0000F422 4D8918                  	mov qword [r8], r11
 20893 0000F425 49FFCA                  	dec r10
 20894 0000F428 4983E808                	sub r8, 8
 20895 0000F42C 4983E908                	sub r9, 8
 20896 0000F430 EBE7                    	jmp .L_tc_recycle_frame_loop_027c
 20897                                  .L_tc_recycle_frame_done_027c:
 20898 0000F432 498D6008                	lea rsp, [r8 + 8]
 20899 0000F436 5D                      	pop rbp
 20900 0000F437 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20901 0000F43A C9                      	leave
 20902 0000F43B C22000                  	ret AND_KILL_FRAME(2)
 20903                                  .L_lambda_opt_end_0046:	; new closure is in rax
 20904 0000F43E C9                      	leave
 20905 0000F43F C21800                  	ret AND_KILL_FRAME(1)
 20906                                  .L_lambda_simple_end_01f4:	; new closure is in rax
 20907 0000F442 803804                  	cmp byte [rax], T_closure
 20908 0000F445 0F85AD5E0000            	jne L_error_non_closure
 20909 0000F44B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20910 0000F44E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20911 0000F451 48890425[8C140000]      	mov qword [free_var_101], rax
 20912 0000F459 48B8-                   	mov rax, sob_void
 20912 0000F45B [0000000000000000] 
 20913                                  
 20914 0000F463 4889C7                  	mov rdi, rax
 20915 0000F466 E88B610000              	call print_sexpr_if_not_void
 20916                                  	; preparing a non-tail-call
 20917 0000F46B 488B0425[6A140000]      	mov rax, qword [free_var_99]	; free var make-string
 20918 0000F473 803805                  	cmp byte [rax], T_undefined
 20919 0000F476 0F84F85D0000            	je L_error_fvar_undefined
 20920 0000F47C 50                      	push rax
 20921 0000F47D 6A01                    	push 1	; arg count
 20922 0000F47F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20923 0000F484 E8185F0000              	call malloc
 20924 0000F489 50                      	push rax
 20925 0000F48A BF00000000              	mov rdi, 8 * 0	; new rib
 20926 0000F48F E80D5F0000              	call malloc
 20927 0000F494 50                      	push rax
 20928 0000F495 BF08000000              	mov rdi, 8 * 1	; extended env
 20929 0000F49A E8025F0000              	call malloc
 20930 0000F49F 488B7D10                	mov rdi, ENV
 20931 0000F4A3 BE00000000              	mov rsi, 0
 20932 0000F4A8 BA01000000              	mov rdx, 1
 20933                                  .L_lambda_simple_env_loop_01f6:	; ext_env[i + 1] <-- env[i]
 20934 0000F4AD 4883FE00                	cmp rsi, 0
 20935 0000F4B1 7410                    	je .L_lambda_simple_env_end_01f6
 20936 0000F4B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20937 0000F4B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20938 0000F4BB 48FFC6                  	inc rsi
 20939 0000F4BE 48FFC2                  	inc rdx
 20940 0000F4C1 EBEA                    	jmp .L_lambda_simple_env_loop_01f6
 20941                                  .L_lambda_simple_env_end_01f6:
 20942 0000F4C3 5B                      	pop rbx
 20943 0000F4C4 BE00000000              	mov rsi, 0
 20944                                  .L_lambda_simple_params_loop_01f6:	; copy params
 20945 0000F4C9 4883FE00                	cmp rsi, 0
 20946 0000F4CD 740E                    	je .L_lambda_simple_params_end_01f6
 20947 0000F4CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20948 0000F4D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20949 0000F4D8 48FFC6                  	inc rsi
 20950 0000F4DB EBEC                    	jmp .L_lambda_simple_params_loop_01f6
 20951                                  .L_lambda_simple_params_end_01f6:
 20952 0000F4DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20953 0000F4E0 4889C3                  	mov rbx, rax
 20954 0000F4E3 58                      	pop rax
 20955 0000F4E4 C60004                  	mov byte [rax], T_closure
 20956 0000F4E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20957 0000F4EB 48C74009[F8F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f6
 20958 0000F4F3 E90D040000              	jmp .L_lambda_simple_end_01f6
 20959                                  .L_lambda_simple_code_01f6:	; lambda-simple body
 20960 0000F4F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20961 0000F4FE 740B                    	je .L_lambda_simple_arity_check_ok_01f6
 20962 0000F500 FF742410                	push qword [rsp + 8 * 2]
 20963 0000F504 6A01                    	push 1
 20964 0000F506 E94F5E0000              	jmp L_error_incorrect_arity_simple
 20965                                  .L_lambda_simple_arity_check_ok_01f6:
 20966 0000F50B C8000000                	enter 0, 0
 20967 0000F50F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20968 0000F514 E8885E0000              	call malloc
 20969 0000F519 50                      	push rax
 20970 0000F51A BF08000000              	mov rdi, 8 * 1	; new rib
 20971 0000F51F E87D5E0000              	call malloc
 20972 0000F524 50                      	push rax
 20973 0000F525 BF10000000              	mov rdi, 8 * 2	; extended env
 20974 0000F52A E8725E0000              	call malloc
 20975 0000F52F 488B7D10                	mov rdi, ENV
 20976 0000F533 BE00000000              	mov rsi, 0
 20977 0000F538 BA01000000              	mov rdx, 1
 20978                                  .L_lambda_opt_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 20979 0000F53D 4883FE01                	cmp rsi, 1
 20980 0000F541 7410                    	je .L_lambda_opt_env_end_0047
 20981 0000F543 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20982 0000F547 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20983 0000F54B 48FFC6                  	inc rsi
 20984 0000F54E 48FFC2                  	inc rdx
 20985 0000F551 EBEA                    	jmp .L_lambda_opt_env_loop_0047
 20986                                  .L_lambda_opt_env_end_0047:
 20987 0000F553 5B                      	pop rbx
 20988 0000F554 BE00000000              	mov rsi, 0
 20989                                  .L_lambda_opt_params_loop_0047:	; copy params
 20990 0000F559 4883FE01                	cmp rsi, 1
 20991 0000F55D 740E                    	je .L_lambda_opt_params_end_0047
 20992 0000F55F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20993 0000F564 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20994 0000F568 48FFC6                  	inc rsi
 20995 0000F56B EBEC                    	jmp .L_lambda_opt_params_loop_0047
 20996                                  .L_lambda_opt_params_end_0047:
 20997 0000F56D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20998 0000F570 4889C3                  	mov rbx, rax
 20999 0000F573 58                      	pop rax
 21000 0000F574 C60004                  	mov byte [rax], T_closure
 21001 0000F577 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21002 0000F57B 48C74009[88F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0047
 21003 0000F583 E979030000              	jmp .L_lambda_opt_end_0047
 21004                                  .L_lambda_opt_code_0047:
 21005 0000F588 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 21006 0000F58D 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 21007 0000F591 7407                    	je .L_lambda_opt_arity_check_exact_0047	; Jump if arity matches
 21008 0000F593 7F4C                    	jg .L_lambda_opt_arity_check_more_0047	; Jump if more arguments passed
 21009 0000F595 E9D45D0000              	jmp L_error_incorrect_arity_opt
 21010                                  .L_lambda_opt_arity_check_exact_0047:
 21011 0000F59A 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 21012 0000F59D 4983C603                	add r14, 3 ; add 3 first stack values
 21013 0000F5A1 41BF00000000            	mov r15, 0 ; r15 = index
 21014 0000F5A7 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 21015 0000F5AB 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 21016 0000F5B3 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0047
 21017                                  .L_lambda_opt_stack_shrink_loop_0047:
 21018 0000F5B5 4983FE00                	cmp r14, 0
 21019 0000F5B9 7E11                    	jle .L_make_lambda_opt_exact_finish_0047
 21020 0000F5BB 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 21021 0000F5C0 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 21022 0000F5C4 49FFCE                  	dec r14 ; next loop value
 21023 0000F5C7 49FFC7                  	inc r15 ; update i
 21024 0000F5CA EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0047
 21025                                  .L_make_lambda_opt_exact_finish_0047:
 21026 0000F5CC 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 21027 0000F5D4 49FFC2                  	inc r10
 21028 0000F5D7 4C89542410              	mov qword [rsp + 8 * 2], r10
 21029 0000F5DC E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0047
 21030                                  .L_lambda_opt_arity_check_more_0047:
 21031 0000F5E1 4D89D6                  	mov r14, r10 ; r14 = num args
 21032 0000F5E4 4D89D7                  	mov r15, r10 ; r15 = num args
 21033 0000F5E7 41B901000000            	mov r9, 1; r9 = number of params 
 21034 0000F5ED 4D29CE                  	sub r14, r9 ; r14 = extra args
 21035 0000F5F0 4D01F1                  	add r9, r14 ; r9 = num args
 21036 0000F5F3 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 21036 0000F5F5 [0100000000000000] 
 21037 0000F5FD EB00                    	jmp .L_make_lambda_opt_arg_list_0047
 21038                                  .L_make_lambda_opt_arg_list_0047:
 21039 0000F5FF 4983FE00                	cmp r14, 0
 21040 0000F603 7E25                    	jle .L_make_lambda_opt_stack_fixed_0047
 21041 0000F605 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 21042 0000F60A BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 21043 0000F60F E88D5D0000              	call malloc                         ; Allocate memory, result in rax
 21044 0000F614 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 21045 0000F617 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 21046 0000F61B 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 21047 0000F61F 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 21048 0000F622 49FFC9                  	dec r9                              ; args index minus 1
 21049 0000F625 49FFCE                  	dec r14                             ; next iteration
 21050 0000F628 EBD5                    	jmp .L_make_lambda_opt_arg_list_0047
 21051                                  .L_make_lambda_opt_stack_fixed_0047:
 21052 0000F62A 4D89FE                  	mov r14, r15 ; r14 = num args
 21053 0000F62D 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 21054 0000F630 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 21055 0000F634 4D89C1                  	mov r9, r8
 21056 0000F637 41BA01000000            	mov r10, 1; r10 = num of params
 21057 0000F63D 4D29D6                  	sub r14, r10 ; r14 = extra args
 21058 0000F640 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 21059 0000F643 49FFCE                  	dec r14 ; how much we need to change stack wise?
 21060 0000F646 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 21061 0000F64B 4D89CC                  	mov r12, r9
 21062 0000F64E 4D29F4                  	sub r12, r14
 21063 0000F651 49FFCC                  	dec r12
 21064 0000F654 49FFCC                  	dec r12
 21065 0000F657 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0047
 21066                                  .L_lambda_opt_stack_shrink_loop_more_0047:
 21067 0000F659 4983F800                	cmp r8, 0
 21068 0000F65D 7E16                    	jle .L_make_lambda_opt_more_finish_0047
 21069 0000F65F 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 21070 0000F663 4D01F4                  	add r12, r14
 21071 0000F666 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 21072 0000F66A 49FFC8                  	dec r8 ; next iteration
 21073 0000F66D 4D29F4                  	sub r12, r14 ; next iteration
 21074 0000F670 49FFCC                  	dec r12 ; next iteration
 21075 0000F673 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0047
 21076                                  .L_make_lambda_opt_more_finish_0047:
 21077 0000F675 41BA01000000            	mov r10, 1
 21078 0000F67B 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 21079 0000F684 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 21080 0000F688 4C01F4                  	add rsp, r14  ; Add to rsp
 21081 0000F68B EB00                    	jmp .L_lambda_opt_stack_adjusted_0047
 21082                                  .L_lambda_opt_stack_adjusted_0047:
 21083 0000F68D C8000000                	enter 0, 0
 21084                                  	; Initiating tail-call optimization
 21085                                  	; preparing a non-tail-call
 21086 0000F691 488B4528                	mov rax, PARAM(1)	; param chs
 21087 0000F695 50                      	push rax
 21088 0000F696 6A01                    	push 1	; arg count
 21089 0000F698 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 21090 0000F6A0 803805                  	cmp byte [rax], T_undefined
 21091 0000F6A3 0F84CB5B0000            	je L_error_fvar_undefined
 21092 0000F6A9 803804                  	cmp byte [rax], T_closure
 21093 0000F6AC 0F85465C0000            	jne L_error_non_closure
 21094 0000F6B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21095 0000F6B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21096 0000F6B8 483D[02000000]          	cmp rax, sob_boolean_false
 21097 0000F6BE 740F                    	je .L_if_else_0176
 21098 0000F6C0 48B8-                   	mov rax, L_constants + 4
 21098 0000F6C2 [0400000000000000] 
 21099 0000F6CA E9EE000000              	jmp .L_if_end_0176
 21100                                  .L_if_else_0176:
 21101                                  	; preparing a non-tail-call
 21102 0000F6CF 488B4528                	mov rax, PARAM(1)	; param chs
 21103 0000F6D3 50                      	push rax
 21104 0000F6D4 6A01                    	push 1	; arg count
 21105 0000F6D6 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
 21106 0000F6DE 803805                  	cmp byte [rax], T_undefined
 21107 0000F6E1 0F848D5B0000            	je L_error_fvar_undefined
 21108 0000F6E7 803804                  	cmp byte [rax], T_closure
 21109 0000F6EA 0F85085C0000            	jne L_error_non_closure
 21110 0000F6F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21111 0000F6F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21112 0000F6F6 483D[02000000]          	cmp rax, sob_boolean_false
 21113 0000F6FC 744C                    	je .L_if_else_0174
 21114                                  	; preparing a non-tail-call
 21115                                  	; preparing a non-tail-call
 21116 0000F6FE 488B4528                	mov rax, PARAM(1)	; param chs
 21117 0000F702 50                      	push rax
 21118 0000F703 6A01                    	push 1	; arg count
 21119 0000F705 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 21120 0000F70D 803805                  	cmp byte [rax], T_undefined
 21121 0000F710 0F845E5B0000            	je L_error_fvar_undefined
 21122 0000F716 803804                  	cmp byte [rax], T_closure
 21123 0000F719 0F85D95B0000            	jne L_error_non_closure
 21124 0000F71F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21125 0000F722 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21126 0000F725 50                      	push rax
 21127 0000F726 6A01                    	push 1	; arg count
 21128 0000F728 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 21129 0000F730 803805                  	cmp byte [rax], T_undefined
 21130 0000F733 0F843B5B0000            	je L_error_fvar_undefined
 21131 0000F739 803804                  	cmp byte [rax], T_closure
 21132 0000F73C 0F85B65B0000            	jne L_error_non_closure
 21133 0000F742 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21134 0000F745 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21135 0000F748 EB0A                    	jmp .L_if_end_0174
 21136                                  .L_if_else_0174:
 21137 0000F74A 48B8-                   	mov rax, L_constants + 2
 21137 0000F74C [0200000000000000] 
 21138                                  .L_if_end_0174:
 21139 0000F754 483D[02000000]          	cmp rax, sob_boolean_false
 21140 0000F75A 7429                    	je .L_if_else_0175
 21141                                  	; preparing a non-tail-call
 21142 0000F75C 488B4528                	mov rax, PARAM(1)	; param chs
 21143 0000F760 50                      	push rax
 21144 0000F761 6A01                    	push 1	; arg count
 21145 0000F763 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 21146 0000F76B 803805                  	cmp byte [rax], T_undefined
 21147 0000F76E 0F84005B0000            	je L_error_fvar_undefined
 21148 0000F774 803804                  	cmp byte [rax], T_closure
 21149 0000F777 0F857B5B0000            	jne L_error_non_closure
 21150 0000F77D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21151 0000F780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21152 0000F783 EB38                    	jmp .L_if_end_0175
 21153                                  .L_if_else_0175:
 21154                                  	; preparing a non-tail-call
 21155 0000F785 48B8-                   	mov rax, L_constants + 3016
 21155 0000F787 [C80B000000000000] 
 21156 0000F78F 50                      	push rax
 21157 0000F790 48B8-                   	mov rax, L_constants + 3007
 21157 0000F792 [BF0B000000000000] 
 21158 0000F79A 50                      	push rax
 21159 0000F79B 6A02                    	push 2	; arg count
 21160 0000F79D 488B0425[49130000]      	mov rax, qword [free_var_82]	; free var error
 21161 0000F7A5 803805                  	cmp byte [rax], T_undefined
 21162 0000F7A8 0F84C65A0000            	je L_error_fvar_undefined
 21163 0000F7AE 803804                  	cmp byte [rax], T_closure
 21164 0000F7B1 0F85415B0000            	jne L_error_non_closure
 21165 0000F7B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21166 0000F7BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21167                                  .L_if_end_0175:
 21168                                  .L_if_end_0176:
 21169 0000F7BD 50                      	push rax
 21170 0000F7BE 6A01                    	push 1	; Number of arguments
 21171 0000F7C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21172 0000F7C5 E8D75B0000              	call malloc
 21173 0000F7CA 50                      	push rax
 21174 0000F7CB BF10000000              	mov rdi, 8 * 2	; new rib
 21175 0000F7D0 E8CC5B0000              	call malloc
 21176 0000F7D5 50                      	push rax
 21177 0000F7D6 BF18000000              	mov rdi, 8 * 3	; extended env
 21178 0000F7DB E8C15B0000              	call malloc
 21179 0000F7E0 488B7D10                	mov rdi, ENV
 21180 0000F7E4 BE00000000              	mov rsi, 0
 21181 0000F7E9 BA01000000              	mov rdx, 1
 21182                                  .L_lambda_simple_env_loop_01f7:	; ext_env[i + 1] <-- env[i]
 21183 0000F7EE 4883FE02                	cmp rsi, 2
 21184 0000F7F2 7410                    	je .L_lambda_simple_env_end_01f7
 21185 0000F7F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21186 0000F7F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21187 0000F7FC 48FFC6                  	inc rsi
 21188 0000F7FF 48FFC2                  	inc rdx
 21189 0000F802 EBEA                    	jmp .L_lambda_simple_env_loop_01f7
 21190                                  .L_lambda_simple_env_end_01f7:
 21191 0000F804 5B                      	pop rbx
 21192 0000F805 BE00000000              	mov rsi, 0
 21193                                  .L_lambda_simple_params_loop_01f7:	; copy params
 21194 0000F80A 4883FE02                	cmp rsi, 2
 21195 0000F80E 740E                    	je .L_lambda_simple_params_end_01f7
 21196 0000F810 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21197 0000F815 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21198 0000F819 48FFC6                  	inc rsi
 21199 0000F81C EBEC                    	jmp .L_lambda_simple_params_loop_01f7
 21200                                  .L_lambda_simple_params_end_01f7:
 21201 0000F81E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21202 0000F821 4889C3                  	mov rbx, rax
 21203 0000F824 58                      	pop rax
 21204 0000F825 C60004                  	mov byte [rax], T_closure
 21205 0000F828 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21206 0000F82C 48C74009[39F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f7
 21207 0000F834 E97E000000              	jmp .L_lambda_simple_end_01f7
 21208                                  .L_lambda_simple_code_01f7:	; lambda-simple body
 21209 0000F839 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21210 0000F83F 740B                    	je .L_lambda_simple_arity_check_ok_01f7
 21211 0000F841 FF742410                	push qword [rsp + 8 * 2]
 21212 0000F845 6A01                    	push 1
 21213 0000F847 E90E5B0000              	jmp L_error_incorrect_arity_simple
 21214                                  .L_lambda_simple_arity_check_ok_01f7:
 21215 0000F84C C8000000                	enter 0, 0
 21216                                  	; Initiating tail-call optimization
 21217 0000F850 488B4520                	mov rax, PARAM(0)	; param ch
 21218 0000F854 50                      	push rax
 21219 0000F855 488B4510                	mov rax, ENV
 21220 0000F859 488B00                  	mov rax, qword [rax + 8 * 0]
 21221 0000F85C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21222 0000F85F 50                      	push rax
 21223 0000F860 6A02                    	push 2	; Number of arguments
 21224 0000F862 488B4510                	mov rax, ENV
 21225 0000F866 488B4008                	mov rax, qword [rax + 8 * 1]
 21226 0000F86A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 21227 0000F86D 803804                  	cmp byte [rax], T_closure
 21228 0000F870 0F85825A0000            	jne L_error_non_closure
 21229 0000F876 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21230 0000F879 FF7508                  	push qword [rbp + 8]
 21231 0000F87C FF7500                  	push qword [rbp]
 21232 0000F87F 41BA06000000            	mov r10, 2 + 4
 21233 0000F885 4C8B4518                	mov r8, COUNT
 21234 0000F889 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21235 0000F88E 4C8D4DF8                	lea r9, [rbp - 8]
 21236                                  .L_tc_recycle_frame_loop_027d:
 21237 0000F892 4983FA00                	cmp r10, 0
 21238 0000F896 7413                    	je .L_tc_recycle_frame_done_027d
 21239 0000F898 4D8B19                  	mov r11, qword [r9]
 21240 0000F89B 4D8918                  	mov qword [r8], r11
 21241 0000F89E 49FFCA                  	dec r10
 21242 0000F8A1 4983E808                	sub r8, 8
 21243 0000F8A5 4983E908                	sub r9, 8
 21244 0000F8A9 EBE7                    	jmp .L_tc_recycle_frame_loop_027d
 21245                                  .L_tc_recycle_frame_done_027d:
 21246 0000F8AB 498D6008                	lea rsp, [r8 + 8]
 21247 0000F8AF 5D                      	pop rbp
 21248 0000F8B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21249 0000F8B3 C9                      	leave
 21250 0000F8B4 C21800                  	ret AND_KILL_FRAME(1)
 21251                                  .L_lambda_simple_end_01f7:	; new closure is in rax
 21252 0000F8B7 803804                  	cmp byte [rax], T_closure
 21253 0000F8BA 0F85385A0000            	jne L_error_non_closure
 21254 0000F8C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21255 0000F8C3 FF7508                  	push qword [rbp + 8]
 21256 0000F8C6 FF7500                  	push qword [rbp]
 21257 0000F8C9 41BA05000000            	mov r10, 1 + 4
 21258 0000F8CF 4C8B4518                	mov r8, COUNT
 21259 0000F8D3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21260 0000F8D8 4C8D4DF8                	lea r9, [rbp - 8]
 21261                                  .L_tc_recycle_frame_loop_027e:
 21262 0000F8DC 4983FA00                	cmp r10, 0
 21263 0000F8E0 7413                    	je .L_tc_recycle_frame_done_027e
 21264 0000F8E2 4D8B19                  	mov r11, qword [r9]
 21265 0000F8E5 4D8918                  	mov qword [r8], r11
 21266 0000F8E8 49FFCA                  	dec r10
 21267 0000F8EB 4983E808                	sub r8, 8
 21268 0000F8EF 4983E908                	sub r9, 8
 21269 0000F8F3 EBE7                    	jmp .L_tc_recycle_frame_loop_027e
 21270                                  .L_tc_recycle_frame_done_027e:
 21271 0000F8F5 498D6008                	lea rsp, [r8 + 8]
 21272 0000F8F9 5D                      	pop rbp
 21273 0000F8FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21274 0000F8FD C9                      	leave
 21275 0000F8FE C22000                  	ret AND_KILL_FRAME(2)
 21276                                  .L_lambda_opt_end_0047:	; new closure is in rax
 21277 0000F901 C9                      	leave
 21278 0000F902 C21800                  	ret AND_KILL_FRAME(1)
 21279                                  .L_lambda_simple_end_01f6:	; new closure is in rax
 21280 0000F905 803804                  	cmp byte [rax], T_closure
 21281 0000F908 0F85EA590000            	jne L_error_non_closure
 21282 0000F90E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21283 0000F911 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21284 0000F914 48890425[6A140000]      	mov qword [free_var_99], rax
 21285 0000F91C 48B8-                   	mov rax, sob_void
 21285 0000F91E [0000000000000000] 
 21286                                  
 21287 0000F926 4889C7                  	mov rdi, rax
 21288 0000F929 E8C85C0000              	call print_sexpr_if_not_void
 21289                                  	; preparing a non-tail-call
 21290 0000F92E 48B8-                   	mov rax, L_constants + 2007
 21290 0000F930 [D707000000000000] 
 21291 0000F938 50                      	push rax
 21292 0000F939 6A01                    	push 1	; arg count
 21293 0000F93B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21294 0000F940 E85C5A0000              	call malloc
 21295 0000F945 50                      	push rax
 21296 0000F946 BF00000000              	mov rdi, 8 * 0	; new rib
 21297 0000F94B E8515A0000              	call malloc
 21298 0000F950 50                      	push rax
 21299 0000F951 BF08000000              	mov rdi, 8 * 1	; extended env
 21300 0000F956 E8465A0000              	call malloc
 21301 0000F95B 488B7D10                	mov rdi, ENV
 21302 0000F95F BE00000000              	mov rsi, 0
 21303 0000F964 BA01000000              	mov rdx, 1
 21304                                  .L_lambda_simple_env_loop_01f8:	; ext_env[i + 1] <-- env[i]
 21305 0000F969 4883FE00                	cmp rsi, 0
 21306 0000F96D 7410                    	je .L_lambda_simple_env_end_01f8
 21307 0000F96F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21308 0000F973 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21309 0000F977 48FFC6                  	inc rsi
 21310 0000F97A 48FFC2                  	inc rdx
 21311 0000F97D EBEA                    	jmp .L_lambda_simple_env_loop_01f8
 21312                                  .L_lambda_simple_env_end_01f8:
 21313 0000F97F 5B                      	pop rbx
 21314 0000F980 BE00000000              	mov rsi, 0
 21315                                  .L_lambda_simple_params_loop_01f8:	; copy params
 21316 0000F985 4883FE00                	cmp rsi, 0
 21317 0000F989 740E                    	je .L_lambda_simple_params_end_01f8
 21318 0000F98B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21319 0000F990 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21320 0000F994 48FFC6                  	inc rsi
 21321 0000F997 EBEC                    	jmp .L_lambda_simple_params_loop_01f8
 21322                                  .L_lambda_simple_params_end_01f8:
 21323 0000F999 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21324 0000F99C 4889C3                  	mov rbx, rax
 21325 0000F99F 58                      	pop rax
 21326 0000F9A0 C60004                  	mov byte [rax], T_closure
 21327 0000F9A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21328 0000F9A7 48C74009[B4F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f8
 21329 0000F9AF E930040000              	jmp .L_lambda_simple_end_01f8
 21330                                  .L_lambda_simple_code_01f8:	; lambda-simple body
 21331 0000F9B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21332 0000F9BA 740B                    	je .L_lambda_simple_arity_check_ok_01f8
 21333 0000F9BC FF742410                	push qword [rsp + 8 * 2]
 21334 0000F9C0 6A01                    	push 1
 21335 0000F9C2 E993590000              	jmp L_error_incorrect_arity_simple
 21336                                  .L_lambda_simple_arity_check_ok_01f8:
 21337 0000F9C7 C8000000                	enter 0, 0
 21338 0000F9CB BF08000000              	mov rdi, 8 * 1
 21339 0000F9D0 E8CC590000              	call malloc
 21340 0000F9D5 488B5D20                	mov rbx, PARAM(0)
 21341 0000F9D9 488918                  	mov qword [rax], rbx
 21342 0000F9DC 48894520                	mov PARAM(0), rax
 21343 0000F9E0 48B8-                   	mov rax, sob_void
 21343 0000F9E2 [0000000000000000] 
 21344                                  
 21345 0000F9EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21346 0000F9EF E8AD590000              	call malloc
 21347 0000F9F4 50                      	push rax
 21348 0000F9F5 BF08000000              	mov rdi, 8 * 1	; new rib
 21349 0000F9FA E8A2590000              	call malloc
 21350 0000F9FF 50                      	push rax
 21351 0000FA00 BF10000000              	mov rdi, 8 * 2	; extended env
 21352 0000FA05 E897590000              	call malloc
 21353 0000FA0A 488B7D10                	mov rdi, ENV
 21354 0000FA0E BE00000000              	mov rsi, 0
 21355 0000FA13 BA01000000              	mov rdx, 1
 21356                                  .L_lambda_simple_env_loop_01f9:	; ext_env[i + 1] <-- env[i]
 21357 0000FA18 4883FE01                	cmp rsi, 1
 21358 0000FA1C 7410                    	je .L_lambda_simple_env_end_01f9
 21359 0000FA1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21360 0000FA22 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21361 0000FA26 48FFC6                  	inc rsi
 21362 0000FA29 48FFC2                  	inc rdx
 21363 0000FA2C EBEA                    	jmp .L_lambda_simple_env_loop_01f9
 21364                                  .L_lambda_simple_env_end_01f9:
 21365 0000FA2E 5B                      	pop rbx
 21366 0000FA2F BE00000000              	mov rsi, 0
 21367                                  .L_lambda_simple_params_loop_01f9:	; copy params
 21368 0000FA34 4883FE01                	cmp rsi, 1
 21369 0000FA38 740E                    	je .L_lambda_simple_params_end_01f9
 21370 0000FA3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21371 0000FA3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21372 0000FA43 48FFC6                  	inc rsi
 21373 0000FA46 EBEC                    	jmp .L_lambda_simple_params_loop_01f9
 21374                                  .L_lambda_simple_params_end_01f9:
 21375 0000FA48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21376 0000FA4B 4889C3                  	mov rbx, rax
 21377 0000FA4E 58                      	pop rax
 21378 0000FA4F C60004                  	mov byte [rax], T_closure
 21379 0000FA52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21380 0000FA56 48C74009[63FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01f9
 21381 0000FA5E E973020000              	jmp .L_lambda_simple_end_01f9
 21382                                  .L_lambda_simple_code_01f9:	; lambda-simple body
 21383 0000FA63 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21384 0000FA69 740B                    	je .L_lambda_simple_arity_check_ok_01f9
 21385 0000FA6B FF742410                	push qword [rsp + 8 * 2]
 21386 0000FA6F 6A02                    	push 2
 21387 0000FA71 E9E4580000              	jmp L_error_incorrect_arity_simple
 21388                                  .L_lambda_simple_arity_check_ok_01f9:
 21389 0000FA76 C8000000                	enter 0, 0
 21390                                  	; preparing a non-tail-call
 21391 0000FA7A 488B4520                	mov rax, PARAM(0)	; param s
 21392 0000FA7E 50                      	push rax
 21393 0000FA7F 6A01                    	push 1	; arg count
 21394 0000FA81 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 21395 0000FA89 803805                  	cmp byte [rax], T_undefined
 21396 0000FA8C 0F84E2570000            	je L_error_fvar_undefined
 21397 0000FA92 803804                  	cmp byte [rax], T_closure
 21398 0000FA95 0F855D580000            	jne L_error_non_closure
 21399 0000FA9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21400 0000FA9E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21401 0000FAA1 483D[02000000]          	cmp rax, sob_boolean_false
 21402 0000FAA7 746E                    	je .L_if_else_0177
 21403                                  	; Initiating tail-call optimization
 21404 0000FAA9 48B8-                   	mov rax, L_constants + 0
 21404 0000FAAB [0000000000000000] 
 21405 0000FAB3 50                      	push rax
 21406 0000FAB4 488B4528                	mov rax, PARAM(1)	; param i
 21407 0000FAB8 50                      	push rax
 21408 0000FAB9 6A02                    	push 2	; Number of arguments
 21409 0000FABB 488B0425[8C140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21410 0000FAC3 803805                  	cmp byte [rax], T_undefined
 21411 0000FAC6 0F84A8570000            	je L_error_fvar_undefined
 21412 0000FACC 803804                  	cmp byte [rax], T_closure
 21413 0000FACF 0F8523580000            	jne L_error_non_closure
 21414 0000FAD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21415 0000FAD8 FF7508                  	push qword [rbp + 8]
 21416 0000FADB FF7500                  	push qword [rbp]
 21417 0000FADE 41BA06000000            	mov r10, 2 + 4
 21418 0000FAE4 4C8B4518                	mov r8, COUNT
 21419 0000FAE8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21420 0000FAED 4C8D4DF8                	lea r9, [rbp - 8]
 21421                                  .L_tc_recycle_frame_loop_027f:
 21422 0000FAF1 4983FA00                	cmp r10, 0
 21423 0000FAF5 7413                    	je .L_tc_recycle_frame_done_027f
 21424 0000FAF7 4D8B19                  	mov r11, qword [r9]
 21425 0000FAFA 4D8918                  	mov qword [r8], r11
 21426 0000FAFD 49FFCA                  	dec r10
 21427 0000FB00 4983E808                	sub r8, 8
 21428 0000FB04 4983E908                	sub r9, 8
 21429 0000FB08 EBE7                    	jmp .L_tc_recycle_frame_loop_027f
 21430                                  .L_tc_recycle_frame_done_027f:
 21431 0000FB0A 498D6008                	lea rsp, [r8 + 8]
 21432 0000FB0E 5D                      	pop rbp
 21433 0000FB0F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21434 0000FB12 E9BB010000              	jmp .L_if_end_0177
 21435                                  .L_if_else_0177:
 21436                                  	; Initiating tail-call optimization
 21437                                  	; preparing a non-tail-call
 21438                                  	; preparing a non-tail-call
 21439 0000FB17 48B8-                   	mov rax, L_constants + 2270
 21439 0000FB19 [DE08000000000000] 
 21440 0000FB21 50                      	push rax
 21441 0000FB22 488B4528                	mov rax, PARAM(1)	; param i
 21442 0000FB26 50                      	push rax
 21443 0000FB27 6A02                    	push 2	; arg count
 21444 0000FB29 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 21445 0000FB31 803805                  	cmp byte [rax], T_undefined
 21446 0000FB34 0F843A570000            	je L_error_fvar_undefined
 21447 0000FB3A 803804                  	cmp byte [rax], T_closure
 21448 0000FB3D 0F85B5570000            	jne L_error_non_closure
 21449 0000FB43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21450 0000FB46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21451 0000FB49 50                      	push rax
 21452                                  	; preparing a non-tail-call
 21453 0000FB4A 488B4520                	mov rax, PARAM(0)	; param s
 21454 0000FB4E 50                      	push rax
 21455 0000FB4F 6A01                    	push 1	; arg count
 21456 0000FB51 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 21457 0000FB59 803805                  	cmp byte [rax], T_undefined
 21458 0000FB5C 0F8412570000            	je L_error_fvar_undefined
 21459 0000FB62 803804                  	cmp byte [rax], T_closure
 21460 0000FB65 0F858D570000            	jne L_error_non_closure
 21461 0000FB6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21462 0000FB6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21463 0000FB71 50                      	push rax
 21464 0000FB72 6A02                    	push 2	; arg count
 21465 0000FB74 488B4510                	mov rax, ENV
 21466 0000FB78 488B00                  	mov rax, qword [rax + 8 * 0]
 21467 0000FB7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21468 0000FB7E 488B00                  	mov rax, qword [rax]
 21469 0000FB81 803804                  	cmp byte [rax], T_closure
 21470 0000FB84 0F856E570000            	jne L_error_non_closure
 21471 0000FB8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21472 0000FB8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21473 0000FB90 50                      	push rax
 21474 0000FB91 6A01                    	push 1	; Number of arguments
 21475 0000FB93 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21476 0000FB98 E804580000              	call malloc
 21477 0000FB9D 50                      	push rax
 21478 0000FB9E BF10000000              	mov rdi, 8 * 2	; new rib
 21479 0000FBA3 E8F9570000              	call malloc
 21480 0000FBA8 50                      	push rax
 21481 0000FBA9 BF18000000              	mov rdi, 8 * 3	; extended env
 21482 0000FBAE E8EE570000              	call malloc
 21483 0000FBB3 488B7D10                	mov rdi, ENV
 21484 0000FBB7 BE00000000              	mov rsi, 0
 21485 0000FBBC BA01000000              	mov rdx, 1
 21486                                  .L_lambda_simple_env_loop_01fa:	; ext_env[i + 1] <-- env[i]
 21487 0000FBC1 4883FE02                	cmp rsi, 2
 21488 0000FBC5 7410                    	je .L_lambda_simple_env_end_01fa
 21489 0000FBC7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21490 0000FBCB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21491 0000FBCF 48FFC6                  	inc rsi
 21492 0000FBD2 48FFC2                  	inc rdx
 21493 0000FBD5 EBEA                    	jmp .L_lambda_simple_env_loop_01fa
 21494                                  .L_lambda_simple_env_end_01fa:
 21495 0000FBD7 5B                      	pop rbx
 21496 0000FBD8 BE00000000              	mov rsi, 0
 21497                                  .L_lambda_simple_params_loop_01fa:	; copy params
 21498 0000FBDD 4883FE02                	cmp rsi, 2
 21499 0000FBE1 740E                    	je .L_lambda_simple_params_end_01fa
 21500 0000FBE3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21501 0000FBE8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21502 0000FBEC 48FFC6                  	inc rsi
 21503 0000FBEF EBEC                    	jmp .L_lambda_simple_params_loop_01fa
 21504                                  .L_lambda_simple_params_end_01fa:
 21505 0000FBF1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21506 0000FBF4 4889C3                  	mov rbx, rax
 21507 0000FBF7 58                      	pop rax
 21508 0000FBF8 C60004                  	mov byte [rax], T_closure
 21509 0000FBFB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21510 0000FBFF 48C74009[0CFC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01fa
 21511 0000FC07 E980000000              	jmp .L_lambda_simple_end_01fa
 21512                                  .L_lambda_simple_code_01fa:	; lambda-simple body
 21513 0000FC0C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21514 0000FC12 740B                    	je .L_lambda_simple_arity_check_ok_01fa
 21515 0000FC14 FF742410                	push qword [rsp + 8 * 2]
 21516 0000FC18 6A01                    	push 1
 21517 0000FC1A E93B570000              	jmp L_error_incorrect_arity_simple
 21518                                  .L_lambda_simple_arity_check_ok_01fa:
 21519 0000FC1F C8000000                	enter 0, 0
 21520                                  	; preparing a non-tail-call
 21521                                  	; preparing a non-tail-call
 21522 0000FC23 488B4510                	mov rax, ENV
 21523 0000FC27 488B00                  	mov rax, qword [rax + 8 * 0]
 21524 0000FC2A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 21525 0000FC2D 50                      	push rax
 21526 0000FC2E 6A01                    	push 1	; arg count
 21527 0000FC30 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 21528 0000FC38 803805                  	cmp byte [rax], T_undefined
 21529 0000FC3B 0F8433560000            	je L_error_fvar_undefined
 21530 0000FC41 803804                  	cmp byte [rax], T_closure
 21531 0000FC44 0F85AE560000            	jne L_error_non_closure
 21532 0000FC4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21533 0000FC4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21534 0000FC50 50                      	push rax
 21535 0000FC51 488B4510                	mov rax, ENV
 21536 0000FC55 488B00                  	mov rax, qword [rax + 8 * 0]
 21537 0000FC58 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 21538 0000FC5C 50                      	push rax
 21539 0000FC5D 488B4520                	mov rax, PARAM(0)	; param v
 21540 0000FC61 50                      	push rax
 21541 0000FC62 6A03                    	push 3	; arg count
 21542 0000FC64 488B0425[9A170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 21543 0000FC6C 803805                  	cmp byte [rax], T_undefined
 21544 0000FC6F 0F84FF550000            	je L_error_fvar_undefined
 21545 0000FC75 803804                  	cmp byte [rax], T_closure
 21546 0000FC78 0F857A560000            	jne L_error_non_closure
 21547 0000FC7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21548 0000FC81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21549                                  
 21550 0000FC84 488B4520                	mov rax, PARAM(0)	; param v
 21551 0000FC88 C9                      	leave
 21552 0000FC89 C21800                  	ret AND_KILL_FRAME(1)
 21553                                  .L_lambda_simple_end_01fa:	; new closure is in rax
 21554 0000FC8C 803804                  	cmp byte [rax], T_closure
 21555 0000FC8F 0F8563560000            	jne L_error_non_closure
 21556 0000FC95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21557 0000FC98 FF7508                  	push qword [rbp + 8]
 21558 0000FC9B FF7500                  	push qword [rbp]
 21559 0000FC9E 41BA05000000            	mov r10, 1 + 4
 21560 0000FCA4 4C8B4518                	mov r8, COUNT
 21561 0000FCA8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21562 0000FCAD 4C8D4DF8                	lea r9, [rbp - 8]
 21563                                  .L_tc_recycle_frame_loop_0280:
 21564 0000FCB1 4983FA00                	cmp r10, 0
 21565 0000FCB5 7413                    	je .L_tc_recycle_frame_done_0280
 21566 0000FCB7 4D8B19                  	mov r11, qword [r9]
 21567 0000FCBA 4D8918                  	mov qword [r8], r11
 21568 0000FCBD 49FFCA                  	dec r10
 21569 0000FCC0 4983E808                	sub r8, 8
 21570 0000FCC4 4983E908                	sub r9, 8
 21571 0000FCC8 EBE7                    	jmp .L_tc_recycle_frame_loop_0280
 21572                                  .L_tc_recycle_frame_done_0280:
 21573 0000FCCA 498D6008                	lea rsp, [r8 + 8]
 21574 0000FCCE 5D                      	pop rbp
 21575 0000FCCF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21576                                  .L_if_end_0177:
 21577 0000FCD2 C9                      	leave
 21578 0000FCD3 C22000                  	ret AND_KILL_FRAME(2)
 21579                                  .L_lambda_simple_end_01f9:	; new closure is in rax
 21580 0000FCD6 50                      	push rax
 21581 0000FCD7 488B4520                	mov rax, PARAM(0)	; param run
 21582 0000FCDB 8F00                    	pop qword [rax]
 21583 0000FCDD 48B8-                   	mov rax, sob_void
 21583 0000FCDF [0000000000000000] 
 21584                                  
 21585 0000FCE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21586 0000FCEC E8B0560000              	call malloc
 21587 0000FCF1 50                      	push rax
 21588 0000FCF2 BF08000000              	mov rdi, 8 * 1	; new rib
 21589 0000FCF7 E8A5560000              	call malloc
 21590 0000FCFC 50                      	push rax
 21591 0000FCFD BF10000000              	mov rdi, 8 * 2	; extended env
 21592 0000FD02 E89A560000              	call malloc
 21593 0000FD07 488B7D10                	mov rdi, ENV
 21594 0000FD0B BE00000000              	mov rsi, 0
 21595 0000FD10 BA01000000              	mov rdx, 1
 21596                                  .L_lambda_simple_env_loop_01fb:	; ext_env[i + 1] <-- env[i]
 21597 0000FD15 4883FE01                	cmp rsi, 1
 21598 0000FD19 7410                    	je .L_lambda_simple_env_end_01fb
 21599 0000FD1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21600 0000FD1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21601 0000FD23 48FFC6                  	inc rsi
 21602 0000FD26 48FFC2                  	inc rdx
 21603 0000FD29 EBEA                    	jmp .L_lambda_simple_env_loop_01fb
 21604                                  .L_lambda_simple_env_end_01fb:
 21605 0000FD2B 5B                      	pop rbx
 21606 0000FD2C BE00000000              	mov rsi, 0
 21607                                  .L_lambda_simple_params_loop_01fb:	; copy params
 21608 0000FD31 4883FE01                	cmp rsi, 1
 21609 0000FD35 740E                    	je .L_lambda_simple_params_end_01fb
 21610 0000FD37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21611 0000FD3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21612 0000FD40 48FFC6                  	inc rsi
 21613 0000FD43 EBEC                    	jmp .L_lambda_simple_params_loop_01fb
 21614                                  .L_lambda_simple_params_end_01fb:
 21615 0000FD45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21616 0000FD48 4889C3                  	mov rbx, rax
 21617 0000FD4B 58                      	pop rax
 21618 0000FD4C C60004                  	mov byte [rax], T_closure
 21619 0000FD4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21620 0000FD53 48C74009[60FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01fb
 21621 0000FD5B E980000000              	jmp .L_lambda_simple_end_01fb
 21622                                  .L_lambda_simple_code_01fb:	; lambda-simple body
 21623 0000FD60 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21624 0000FD66 740B                    	je .L_lambda_simple_arity_check_ok_01fb
 21625 0000FD68 FF742410                	push qword [rsp + 8 * 2]
 21626 0000FD6C 6A01                    	push 1
 21627 0000FD6E E9E7550000              	jmp L_error_incorrect_arity_simple
 21628                                  .L_lambda_simple_arity_check_ok_01fb:
 21629 0000FD73 C8000000                	enter 0, 0
 21630                                  	; Initiating tail-call optimization
 21631 0000FD77 48B8-                   	mov rax, L_constants + 2135
 21631 0000FD79 [5708000000000000] 
 21632 0000FD81 50                      	push rax
 21633 0000FD82 488B4520                	mov rax, PARAM(0)	; param s
 21634 0000FD86 50                      	push rax
 21635 0000FD87 6A02                    	push 2	; Number of arguments
 21636 0000FD89 488B4510                	mov rax, ENV
 21637 0000FD8D 488B00                  	mov rax, qword [rax + 8 * 0]
 21638 0000FD90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21639 0000FD93 488B00                  	mov rax, qword [rax]
 21640 0000FD96 803804                  	cmp byte [rax], T_closure
 21641 0000FD99 0F8559550000            	jne L_error_non_closure
 21642 0000FD9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21643 0000FDA2 FF7508                  	push qword [rbp + 8]
 21644 0000FDA5 FF7500                  	push qword [rbp]
 21645 0000FDA8 41BA06000000            	mov r10, 2 + 4
 21646 0000FDAE 4C8B4518                	mov r8, COUNT
 21647 0000FDB2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21648 0000FDB7 4C8D4DF8                	lea r9, [rbp - 8]
 21649                                  .L_tc_recycle_frame_loop_0281:
 21650 0000FDBB 4983FA00                	cmp r10, 0
 21651 0000FDBF 7413                    	je .L_tc_recycle_frame_done_0281
 21652 0000FDC1 4D8B19                  	mov r11, qword [r9]
 21653 0000FDC4 4D8918                  	mov qword [r8], r11
 21654 0000FDC7 49FFCA                  	dec r10
 21655 0000FDCA 4983E808                	sub r8, 8
 21656 0000FDCE 4983E908                	sub r9, 8
 21657 0000FDD2 EBE7                    	jmp .L_tc_recycle_frame_loop_0281
 21658                                  .L_tc_recycle_frame_done_0281:
 21659 0000FDD4 498D6008                	lea rsp, [r8 + 8]
 21660 0000FDD8 5D                      	pop rbp
 21661 0000FDD9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21662 0000FDDC C9                      	leave
 21663 0000FDDD C21800                  	ret AND_KILL_FRAME(1)
 21664                                  .L_lambda_simple_end_01fb:	; new closure is in rax
 21665 0000FDE0 C9                      	leave
 21666 0000FDE1 C21800                  	ret AND_KILL_FRAME(1)
 21667                                  .L_lambda_simple_end_01f8:	; new closure is in rax
 21668 0000FDE4 803804                  	cmp byte [rax], T_closure
 21669 0000FDE7 0F850B550000            	jne L_error_non_closure
 21670 0000FDED FF7001                  	push SOB_CLOSURE_ENV(rax)
 21671 0000FDF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21672 0000FDF3 48890425[26140000]      	mov qword [free_var_95], rax
 21673 0000FDFB 48B8-                   	mov rax, sob_void
 21673 0000FDFD [0000000000000000] 
 21674                                  
 21675 0000FE05 4889C7                  	mov rdi, rax
 21676 0000FE08 E8E9570000              	call print_sexpr_if_not_void
 21677                                  	; preparing a non-tail-call
 21678 0000FE0D 48B8-                   	mov rax, L_constants + 2007
 21678 0000FE0F [D707000000000000] 
 21679 0000FE17 50                      	push rax
 21680 0000FE18 6A01                    	push 1	; arg count
 21681 0000FE1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21682 0000FE1F E87D550000              	call malloc
 21683 0000FE24 50                      	push rax
 21684 0000FE25 BF00000000              	mov rdi, 8 * 0	; new rib
 21685 0000FE2A E872550000              	call malloc
 21686 0000FE2F 50                      	push rax
 21687 0000FE30 BF08000000              	mov rdi, 8 * 1	; extended env
 21688 0000FE35 E867550000              	call malloc
 21689 0000FE3A 488B7D10                	mov rdi, ENV
 21690 0000FE3E BE00000000              	mov rsi, 0
 21691 0000FE43 BA01000000              	mov rdx, 1
 21692                                  .L_lambda_simple_env_loop_01fc:	; ext_env[i + 1] <-- env[i]
 21693 0000FE48 4883FE00                	cmp rsi, 0
 21694 0000FE4C 7410                    	je .L_lambda_simple_env_end_01fc
 21695 0000FE4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21696 0000FE52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21697 0000FE56 48FFC6                  	inc rsi
 21698 0000FE59 48FFC2                  	inc rdx
 21699 0000FE5C EBEA                    	jmp .L_lambda_simple_env_loop_01fc
 21700                                  .L_lambda_simple_env_end_01fc:
 21701 0000FE5E 5B                      	pop rbx
 21702 0000FE5F BE00000000              	mov rsi, 0
 21703                                  .L_lambda_simple_params_loop_01fc:	; copy params
 21704 0000FE64 4883FE00                	cmp rsi, 0
 21705 0000FE68 740E                    	je .L_lambda_simple_params_end_01fc
 21706 0000FE6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21707 0000FE6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21708 0000FE73 48FFC6                  	inc rsi
 21709 0000FE76 EBEC                    	jmp .L_lambda_simple_params_loop_01fc
 21710                                  .L_lambda_simple_params_end_01fc:
 21711 0000FE78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21712 0000FE7B 4889C3                  	mov rbx, rax
 21713 0000FE7E 58                      	pop rax
 21714 0000FE7F C60004                  	mov byte [rax], T_closure
 21715 0000FE82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21716 0000FE86 48C74009[93FE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01fc
 21717 0000FE8E E930040000              	jmp .L_lambda_simple_end_01fc
 21718                                  .L_lambda_simple_code_01fc:	; lambda-simple body
 21719 0000FE93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21720 0000FE99 740B                    	je .L_lambda_simple_arity_check_ok_01fc
 21721 0000FE9B FF742410                	push qword [rsp + 8 * 2]
 21722 0000FE9F 6A01                    	push 1
 21723 0000FEA1 E9B4540000              	jmp L_error_incorrect_arity_simple
 21724                                  .L_lambda_simple_arity_check_ok_01fc:
 21725 0000FEA6 C8000000                	enter 0, 0
 21726 0000FEAA BF08000000              	mov rdi, 8 * 1
 21727 0000FEAF E8ED540000              	call malloc
 21728 0000FEB4 488B5D20                	mov rbx, PARAM(0)
 21729 0000FEB8 488918                  	mov qword [rax], rbx
 21730 0000FEBB 48894520                	mov PARAM(0), rax
 21731 0000FEBF 48B8-                   	mov rax, sob_void
 21731 0000FEC1 [0000000000000000] 
 21732                                  
 21733 0000FEC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21734 0000FECE E8CE540000              	call malloc
 21735 0000FED3 50                      	push rax
 21736 0000FED4 BF08000000              	mov rdi, 8 * 1	; new rib
 21737 0000FED9 E8C3540000              	call malloc
 21738 0000FEDE 50                      	push rax
 21739 0000FEDF BF10000000              	mov rdi, 8 * 2	; extended env
 21740 0000FEE4 E8B8540000              	call malloc
 21741 0000FEE9 488B7D10                	mov rdi, ENV
 21742 0000FEED BE00000000              	mov rsi, 0
 21743 0000FEF2 BA01000000              	mov rdx, 1
 21744                                  .L_lambda_simple_env_loop_01fd:	; ext_env[i + 1] <-- env[i]
 21745 0000FEF7 4883FE01                	cmp rsi, 1
 21746 0000FEFB 7410                    	je .L_lambda_simple_env_end_01fd
 21747 0000FEFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21748 0000FF01 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21749 0000FF05 48FFC6                  	inc rsi
 21750 0000FF08 48FFC2                  	inc rdx
 21751 0000FF0B EBEA                    	jmp .L_lambda_simple_env_loop_01fd
 21752                                  .L_lambda_simple_env_end_01fd:
 21753 0000FF0D 5B                      	pop rbx
 21754 0000FF0E BE00000000              	mov rsi, 0
 21755                                  .L_lambda_simple_params_loop_01fd:	; copy params
 21756 0000FF13 4883FE01                	cmp rsi, 1
 21757 0000FF17 740E                    	je .L_lambda_simple_params_end_01fd
 21758 0000FF19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21759 0000FF1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21760 0000FF22 48FFC6                  	inc rsi
 21761 0000FF25 EBEC                    	jmp .L_lambda_simple_params_loop_01fd
 21762                                  .L_lambda_simple_params_end_01fd:
 21763 0000FF27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21764 0000FF2A 4889C3                  	mov rbx, rax
 21765 0000FF2D 58                      	pop rax
 21766 0000FF2E C60004                  	mov byte [rax], T_closure
 21767 0000FF31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21768 0000FF35 48C74009[42FF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01fd
 21769 0000FF3D E973020000              	jmp .L_lambda_simple_end_01fd
 21770                                  .L_lambda_simple_code_01fd:	; lambda-simple body
 21771 0000FF42 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21772 0000FF48 740B                    	je .L_lambda_simple_arity_check_ok_01fd
 21773 0000FF4A FF742410                	push qword [rsp + 8 * 2]
 21774 0000FF4E 6A02                    	push 2
 21775 0000FF50 E905540000              	jmp L_error_incorrect_arity_simple
 21776                                  .L_lambda_simple_arity_check_ok_01fd:
 21777 0000FF55 C8000000                	enter 0, 0
 21778                                  	; preparing a non-tail-call
 21779 0000FF59 488B4520                	mov rax, PARAM(0)	; param s
 21780 0000FF5D 50                      	push rax
 21781 0000FF5E 6A01                    	push 1	; arg count
 21782 0000FF60 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 21783 0000FF68 803805                  	cmp byte [rax], T_undefined
 21784 0000FF6B 0F8403530000            	je L_error_fvar_undefined
 21785 0000FF71 803804                  	cmp byte [rax], T_closure
 21786 0000FF74 0F857E530000            	jne L_error_non_closure
 21787 0000FF7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21788 0000FF7D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21789 0000FF80 483D[02000000]          	cmp rax, sob_boolean_false
 21790 0000FF86 746E                    	je .L_if_else_0178
 21791                                  	; Initiating tail-call optimization
 21792 0000FF88 48B8-                   	mov rax, L_constants + 4
 21792 0000FF8A [0400000000000000] 
 21793 0000FF92 50                      	push rax
 21794 0000FF93 488B4528                	mov rax, PARAM(1)	; param i
 21795 0000FF97 50                      	push rax
 21796 0000FF98 6A02                    	push 2	; Number of arguments
 21797 0000FF9A 488B0425[6A140000]      	mov rax, qword [free_var_99]	; free var make-string
 21798 0000FFA2 803805                  	cmp byte [rax], T_undefined
 21799 0000FFA5 0F84C9520000            	je L_error_fvar_undefined
 21800 0000FFAB 803804                  	cmp byte [rax], T_closure
 21801 0000FFAE 0F8544530000            	jne L_error_non_closure
 21802 0000FFB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21803 0000FFB7 FF7508                  	push qword [rbp + 8]
 21804 0000FFBA FF7500                  	push qword [rbp]
 21805 0000FFBD 41BA06000000            	mov r10, 2 + 4
 21806 0000FFC3 4C8B4518                	mov r8, COUNT
 21807 0000FFC7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21808 0000FFCC 4C8D4DF8                	lea r9, [rbp - 8]
 21809                                  .L_tc_recycle_frame_loop_0282:
 21810 0000FFD0 4983FA00                	cmp r10, 0
 21811 0000FFD4 7413                    	je .L_tc_recycle_frame_done_0282
 21812 0000FFD6 4D8B19                  	mov r11, qword [r9]
 21813 0000FFD9 4D8918                  	mov qword [r8], r11
 21814 0000FFDC 49FFCA                  	dec r10
 21815 0000FFDF 4983E808                	sub r8, 8
 21816 0000FFE3 4983E908                	sub r9, 8
 21817 0000FFE7 EBE7                    	jmp .L_tc_recycle_frame_loop_0282
 21818                                  .L_tc_recycle_frame_done_0282:
 21819 0000FFE9 498D6008                	lea rsp, [r8 + 8]
 21820 0000FFED 5D                      	pop rbp
 21821 0000FFEE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21822 0000FFF1 E9BB010000              	jmp .L_if_end_0178
 21823                                  .L_if_else_0178:
 21824                                  	; Initiating tail-call optimization
 21825                                  	; preparing a non-tail-call
 21826                                  	; preparing a non-tail-call
 21827 0000FFF6 48B8-                   	mov rax, L_constants + 2270
 21827 0000FFF8 [DE08000000000000] 
 21828 00010000 50                      	push rax
 21829 00010001 488B4528                	mov rax, PARAM(1)	; param i
 21830 00010005 50                      	push rax
 21831 00010006 6A02                    	push 2	; arg count
 21832 00010008 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 21833 00010010 803805                  	cmp byte [rax], T_undefined
 21834 00010013 0F845B520000            	je L_error_fvar_undefined
 21835 00010019 803804                  	cmp byte [rax], T_closure
 21836 0001001C 0F85D6520000            	jne L_error_non_closure
 21837 00010022 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21838 00010025 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21839 00010028 50                      	push rax
 21840                                  	; preparing a non-tail-call
 21841 00010029 488B4520                	mov rax, PARAM(0)	; param s
 21842 0001002D 50                      	push rax
 21843 0001002E 6A01                    	push 1	; arg count
 21844 00010030 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 21845 00010038 803805                  	cmp byte [rax], T_undefined
 21846 0001003B 0F8433520000            	je L_error_fvar_undefined
 21847 00010041 803804                  	cmp byte [rax], T_closure
 21848 00010044 0F85AE520000            	jne L_error_non_closure
 21849 0001004A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21850 0001004D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21851 00010050 50                      	push rax
 21852 00010051 6A02                    	push 2	; arg count
 21853 00010053 488B4510                	mov rax, ENV
 21854 00010057 488B00                  	mov rax, qword [rax + 8 * 0]
 21855 0001005A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21856 0001005D 488B00                  	mov rax, qword [rax]
 21857 00010060 803804                  	cmp byte [rax], T_closure
 21858 00010063 0F858F520000            	jne L_error_non_closure
 21859 00010069 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21860 0001006C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21861 0001006F 50                      	push rax
 21862 00010070 6A01                    	push 1	; Number of arguments
 21863 00010072 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21864 00010077 E825530000              	call malloc
 21865 0001007C 50                      	push rax
 21866 0001007D BF10000000              	mov rdi, 8 * 2	; new rib
 21867 00010082 E81A530000              	call malloc
 21868 00010087 50                      	push rax
 21869 00010088 BF18000000              	mov rdi, 8 * 3	; extended env
 21870 0001008D E80F530000              	call malloc
 21871 00010092 488B7D10                	mov rdi, ENV
 21872 00010096 BE00000000              	mov rsi, 0
 21873 0001009B BA01000000              	mov rdx, 1
 21874                                  .L_lambda_simple_env_loop_01fe:	; ext_env[i + 1] <-- env[i]
 21875 000100A0 4883FE02                	cmp rsi, 2
 21876 000100A4 7410                    	je .L_lambda_simple_env_end_01fe
 21877 000100A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21878 000100AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21879 000100AE 48FFC6                  	inc rsi
 21880 000100B1 48FFC2                  	inc rdx
 21881 000100B4 EBEA                    	jmp .L_lambda_simple_env_loop_01fe
 21882                                  .L_lambda_simple_env_end_01fe:
 21883 000100B6 5B                      	pop rbx
 21884 000100B7 BE00000000              	mov rsi, 0
 21885                                  .L_lambda_simple_params_loop_01fe:	; copy params
 21886 000100BC 4883FE02                	cmp rsi, 2
 21887 000100C0 740E                    	je .L_lambda_simple_params_end_01fe
 21888 000100C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21889 000100C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21890 000100CB 48FFC6                  	inc rsi
 21891 000100CE EBEC                    	jmp .L_lambda_simple_params_loop_01fe
 21892                                  .L_lambda_simple_params_end_01fe:
 21893 000100D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21894 000100D3 4889C3                  	mov rbx, rax
 21895 000100D6 58                      	pop rax
 21896 000100D7 C60004                  	mov byte [rax], T_closure
 21897 000100DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21898 000100DE 48C74009[EB000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01fe
 21899 000100E6 E980000000              	jmp .L_lambda_simple_end_01fe
 21900                                  .L_lambda_simple_code_01fe:	; lambda-simple body
 21901 000100EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21902 000100F1 740B                    	je .L_lambda_simple_arity_check_ok_01fe
 21903 000100F3 FF742410                	push qword [rsp + 8 * 2]
 21904 000100F7 6A01                    	push 1
 21905 000100F9 E95C520000              	jmp L_error_incorrect_arity_simple
 21906                                  .L_lambda_simple_arity_check_ok_01fe:
 21907 000100FE C8000000                	enter 0, 0
 21908                                  	; preparing a non-tail-call
 21909                                  	; preparing a non-tail-call
 21910 00010102 488B4510                	mov rax, ENV
 21911 00010106 488B00                  	mov rax, qword [rax + 8 * 0]
 21912 00010109 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 21913 0001010C 50                      	push rax
 21914 0001010D 6A01                    	push 1	; arg count
 21915 0001010F 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 21916 00010117 803805                  	cmp byte [rax], T_undefined
 21917 0001011A 0F8454510000            	je L_error_fvar_undefined
 21918 00010120 803804                  	cmp byte [rax], T_closure
 21919 00010123 0F85CF510000            	jne L_error_non_closure
 21920 00010129 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21921 0001012C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21922 0001012F 50                      	push rax
 21923 00010130 488B4510                	mov rax, ENV
 21924 00010134 488B00                  	mov rax, qword [rax + 8 * 0]
 21925 00010137 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 21926 0001013B 50                      	push rax
 21927 0001013C 488B4520                	mov rax, PARAM(0)	; param str
 21928 00010140 50                      	push rax
 21929 00010141 6A03                    	push 3	; arg count
 21930 00010143 488B0425[8A160000]      	mov rax, qword [free_var_131]	; free var string-set!
 21931 0001014B 803805                  	cmp byte [rax], T_undefined
 21932 0001014E 0F8420510000            	je L_error_fvar_undefined
 21933 00010154 803804                  	cmp byte [rax], T_closure
 21934 00010157 0F859B510000            	jne L_error_non_closure
 21935 0001015D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21936 00010160 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21937                                  
 21938 00010163 488B4520                	mov rax, PARAM(0)	; param str
 21939 00010167 C9                      	leave
 21940 00010168 C21800                  	ret AND_KILL_FRAME(1)
 21941                                  .L_lambda_simple_end_01fe:	; new closure is in rax
 21942 0001016B 803804                  	cmp byte [rax], T_closure
 21943 0001016E 0F8584510000            	jne L_error_non_closure
 21944 00010174 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21945 00010177 FF7508                  	push qword [rbp + 8]
 21946 0001017A FF7500                  	push qword [rbp]
 21947 0001017D 41BA05000000            	mov r10, 1 + 4
 21948 00010183 4C8B4518                	mov r8, COUNT
 21949 00010187 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 21950 0001018C 4C8D4DF8                	lea r9, [rbp - 8]
 21951                                  .L_tc_recycle_frame_loop_0283:
 21952 00010190 4983FA00                	cmp r10, 0
 21953 00010194 7413                    	je .L_tc_recycle_frame_done_0283
 21954 00010196 4D8B19                  	mov r11, qword [r9]
 21955 00010199 4D8918                  	mov qword [r8], r11
 21956 0001019C 49FFCA                  	dec r10
 21957 0001019F 4983E808                	sub r8, 8
 21958 000101A3 4983E908                	sub r9, 8
 21959 000101A7 EBE7                    	jmp .L_tc_recycle_frame_loop_0283
 21960                                  .L_tc_recycle_frame_done_0283:
 21961 000101A9 498D6008                	lea rsp, [r8 + 8]
 21962 000101AD 5D                      	pop rbp
 21963 000101AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21964                                  .L_if_end_0178:
 21965 000101B1 C9                      	leave
 21966 000101B2 C22000                  	ret AND_KILL_FRAME(2)
 21967                                  .L_lambda_simple_end_01fd:	; new closure is in rax
 21968 000101B5 50                      	push rax
 21969 000101B6 488B4520                	mov rax, PARAM(0)	; param run
 21970 000101BA 8F00                    	pop qword [rax]
 21971 000101BC 48B8-                   	mov rax, sob_void
 21971 000101BE [0000000000000000] 
 21972                                  
 21973 000101C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21974 000101CB E8D1510000              	call malloc
 21975 000101D0 50                      	push rax
 21976 000101D1 BF08000000              	mov rdi, 8 * 1	; new rib
 21977 000101D6 E8C6510000              	call malloc
 21978 000101DB 50                      	push rax
 21979 000101DC BF10000000              	mov rdi, 8 * 2	; extended env
 21980 000101E1 E8BB510000              	call malloc
 21981 000101E6 488B7D10                	mov rdi, ENV
 21982 000101EA BE00000000              	mov rsi, 0
 21983 000101EF BA01000000              	mov rdx, 1
 21984                                  .L_lambda_simple_env_loop_01ff:	; ext_env[i + 1] <-- env[i]
 21985 000101F4 4883FE01                	cmp rsi, 1
 21986 000101F8 7410                    	je .L_lambda_simple_env_end_01ff
 21987 000101FA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21988 000101FE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21989 00010202 48FFC6                  	inc rsi
 21990 00010205 48FFC2                  	inc rdx
 21991 00010208 EBEA                    	jmp .L_lambda_simple_env_loop_01ff
 21992                                  .L_lambda_simple_env_end_01ff:
 21993 0001020A 5B                      	pop rbx
 21994 0001020B BE00000000              	mov rsi, 0
 21995                                  .L_lambda_simple_params_loop_01ff:	; copy params
 21996 00010210 4883FE01                	cmp rsi, 1
 21997 00010214 740E                    	je .L_lambda_simple_params_end_01ff
 21998 00010216 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21999 0001021B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22000 0001021F 48FFC6                  	inc rsi
 22001 00010222 EBEC                    	jmp .L_lambda_simple_params_loop_01ff
 22002                                  .L_lambda_simple_params_end_01ff:
 22003 00010224 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22004 00010227 4889C3                  	mov rbx, rax
 22005 0001022A 58                      	pop rax
 22006 0001022B C60004                  	mov byte [rax], T_closure
 22007 0001022E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22008 00010232 48C74009[3F020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_01ff
 22009 0001023A E980000000              	jmp .L_lambda_simple_end_01ff
 22010                                  .L_lambda_simple_code_01ff:	; lambda-simple body
 22011 0001023F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22012 00010245 740B                    	je .L_lambda_simple_arity_check_ok_01ff
 22013 00010247 FF742410                	push qword [rsp + 8 * 2]
 22014 0001024B 6A01                    	push 1
 22015 0001024D E908510000              	jmp L_error_incorrect_arity_simple
 22016                                  .L_lambda_simple_arity_check_ok_01ff:
 22017 00010252 C8000000                	enter 0, 0
 22018                                  	; Initiating tail-call optimization
 22019 00010256 48B8-                   	mov rax, L_constants + 2135
 22019 00010258 [5708000000000000] 
 22020 00010260 50                      	push rax
 22021 00010261 488B4520                	mov rax, PARAM(0)	; param s
 22022 00010265 50                      	push rax
 22023 00010266 6A02                    	push 2	; Number of arguments
 22024 00010268 488B4510                	mov rax, ENV
 22025 0001026C 488B00                  	mov rax, qword [rax + 8 * 0]
 22026 0001026F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22027 00010272 488B00                  	mov rax, qword [rax]
 22028 00010275 803804                  	cmp byte [rax], T_closure
 22029 00010278 0F857A500000            	jne L_error_non_closure
 22030 0001027E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22031 00010281 FF7508                  	push qword [rbp + 8]
 22032 00010284 FF7500                  	push qword [rbp]
 22033 00010287 41BA06000000            	mov r10, 2 + 4
 22034 0001028D 4C8B4518                	mov r8, COUNT
 22035 00010291 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22036 00010296 4C8D4DF8                	lea r9, [rbp - 8]
 22037                                  .L_tc_recycle_frame_loop_0284:
 22038 0001029A 4983FA00                	cmp r10, 0
 22039 0001029E 7413                    	je .L_tc_recycle_frame_done_0284
 22040 000102A0 4D8B19                  	mov r11, qword [r9]
 22041 000102A3 4D8918                  	mov qword [r8], r11
 22042 000102A6 49FFCA                  	dec r10
 22043 000102A9 4983E808                	sub r8, 8
 22044 000102AD 4983E908                	sub r9, 8
 22045 000102B1 EBE7                    	jmp .L_tc_recycle_frame_loop_0284
 22046                                  .L_tc_recycle_frame_done_0284:
 22047 000102B3 498D6008                	lea rsp, [r8 + 8]
 22048 000102B7 5D                      	pop rbp
 22049 000102B8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22050 000102BB C9                      	leave
 22051 000102BC C21800                  	ret AND_KILL_FRAME(1)
 22052                                  .L_lambda_simple_end_01ff:	; new closure is in rax
 22053 000102BF C9                      	leave
 22054 000102C0 C21800                  	ret AND_KILL_FRAME(1)
 22055                                  .L_lambda_simple_end_01fc:	; new closure is in rax
 22056 000102C3 803804                  	cmp byte [rax], T_closure
 22057 000102C6 0F852C500000            	jne L_error_non_closure
 22058 000102CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22059 000102CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22060 000102D2 48890425[15140000]      	mov qword [free_var_94], rax
 22061 000102DA 48B8-                   	mov rax, sob_void
 22061 000102DC [0000000000000000] 
 22062                                  
 22063 000102E4 4889C7                  	mov rdi, rax
 22064 000102E7 E80A530000              	call print_sexpr_if_not_void
 22065 000102EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22066 000102F1 E8AB500000              	call malloc
 22067 000102F6 50                      	push rax
 22068 000102F7 BF00000000              	mov rdi, 8 * 0	; new rib
 22069 000102FC E8A0500000              	call malloc
 22070 00010301 50                      	push rax
 22071 00010302 BF08000000              	mov rdi, 8 * 1	; extended env
 22072 00010307 E895500000              	call malloc
 22073 0001030C 488B7D10                	mov rdi, ENV
 22074 00010310 BE00000000              	mov rsi, 0
 22075 00010315 BA01000000              	mov rdx, 1
 22076                                  .L_lambda_opt_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 22077 0001031A 4883FE00                	cmp rsi, 0
 22078 0001031E 7410                    	je .L_lambda_opt_env_end_0048
 22079 00010320 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22080 00010324 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22081 00010328 48FFC6                  	inc rsi
 22082 0001032B 48FFC2                  	inc rdx
 22083 0001032E EBEA                    	jmp .L_lambda_opt_env_loop_0048
 22084                                  .L_lambda_opt_env_end_0048:
 22085 00010330 5B                      	pop rbx
 22086 00010331 BE00000000              	mov rsi, 0
 22087                                  .L_lambda_opt_params_loop_0048:	; copy params
 22088 00010336 4883FE00                	cmp rsi, 0
 22089 0001033A 740E                    	je .L_lambda_opt_params_end_0048
 22090 0001033C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22091 00010341 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22092 00010345 48FFC6                  	inc rsi
 22093 00010348 EBEC                    	jmp .L_lambda_opt_params_loop_0048
 22094                                  .L_lambda_opt_params_end_0048:
 22095 0001034A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22096 0001034D 4889C3                  	mov rbx, rax
 22097 00010350 58                      	pop rax
 22098 00010351 C60004                  	mov byte [rax], T_closure
 22099 00010354 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22100 00010358 48C74009[65030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0048
 22101 00010360 E96B010000              	jmp .L_lambda_opt_end_0048
 22102                                  .L_lambda_opt_code_0048:
 22103 00010365 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 22104 0001036A 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 22105 0001036E 7407                    	je .L_lambda_opt_arity_check_exact_0048	; Jump if arity matches
 22106 00010370 7F4C                    	jg .L_lambda_opt_arity_check_more_0048	; Jump if more arguments passed
 22107 00010372 E9F74F0000              	jmp L_error_incorrect_arity_opt
 22108                                  .L_lambda_opt_arity_check_exact_0048:
 22109 00010377 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 22110 0001037A 4983C603                	add r14, 3 ; add 3 first stack values
 22111 0001037E 41BF00000000            	mov r15, 0 ; r15 = index
 22112 00010384 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 22113 00010388 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 22114 00010390 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0048
 22115                                  .L_lambda_opt_stack_shrink_loop_0048:
 22116 00010392 4983FE00                	cmp r14, 0
 22117 00010396 7E11                    	jle .L_make_lambda_opt_exact_finish_0048
 22118 00010398 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 22119 0001039D 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 22120 000103A1 49FFCE                  	dec r14 ; next loop value
 22121 000103A4 49FFC7                  	inc r15 ; update i
 22122 000103A7 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0048
 22123                                  .L_make_lambda_opt_exact_finish_0048:
 22124 000103A9 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 22125 000103B1 49FFC2                  	inc r10
 22126 000103B4 4C89542410              	mov qword [rsp + 8 * 2], r10
 22127 000103B9 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0048
 22128                                  .L_lambda_opt_arity_check_more_0048:
 22129 000103BE 4D89D6                  	mov r14, r10 ; r14 = num args
 22130 000103C1 4D89D7                  	mov r15, r10 ; r15 = num args
 22131 000103C4 41B900000000            	mov r9, 0; r9 = number of params 
 22132 000103CA 4D29CE                  	sub r14, r9 ; r14 = extra args
 22133 000103CD 4D01F1                  	add r9, r14 ; r9 = num args
 22134 000103D0 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 22134 000103D2 [0100000000000000] 
 22135 000103DA EB00                    	jmp .L_make_lambda_opt_arg_list_0048
 22136                                  .L_make_lambda_opt_arg_list_0048:
 22137 000103DC 4983FE00                	cmp r14, 0
 22138 000103E0 7E25                    	jle .L_make_lambda_opt_stack_fixed_0048
 22139 000103E2 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 22140 000103E7 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 22141 000103EC E8B04F0000              	call malloc                         ; Allocate memory, result in rax
 22142 000103F1 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 22143 000103F4 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 22144 000103F8 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 22145 000103FC 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 22146 000103FF 49FFC9                  	dec r9                              ; args index minus 1
 22147 00010402 49FFCE                  	dec r14                             ; next iteration
 22148 00010405 EBD5                    	jmp .L_make_lambda_opt_arg_list_0048
 22149                                  .L_make_lambda_opt_stack_fixed_0048:
 22150 00010407 4D89FE                  	mov r14, r15 ; r14 = num args
 22151 0001040A 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 22152 0001040D 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 22153 00010411 4D89C1                  	mov r9, r8
 22154 00010414 41BA00000000            	mov r10, 0; r10 = num of params
 22155 0001041A 4D29D6                  	sub r14, r10 ; r14 = extra args
 22156 0001041D 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 22157 00010420 49FFCE                  	dec r14 ; how much we need to change stack wise?
 22158 00010423 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 22159 00010428 4D89CC                  	mov r12, r9
 22160 0001042B 4D29F4                  	sub r12, r14
 22161 0001042E 49FFCC                  	dec r12
 22162 00010431 49FFCC                  	dec r12
 22163 00010434 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0048
 22164                                  .L_lambda_opt_stack_shrink_loop_more_0048:
 22165 00010436 4983F800                	cmp r8, 0
 22166 0001043A 7E16                    	jle .L_make_lambda_opt_more_finish_0048
 22167 0001043C 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 22168 00010440 4D01F4                  	add r12, r14
 22169 00010443 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 22170 00010447 49FFC8                  	dec r8 ; next iteration
 22171 0001044A 4D29F4                  	sub r12, r14 ; next iteration
 22172 0001044D 49FFCC                  	dec r12 ; next iteration
 22173 00010450 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0048
 22174                                  .L_make_lambda_opt_more_finish_0048:
 22175 00010452 41BA00000000            	mov r10, 0
 22176 00010458 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 22177 00010461 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 22178 00010465 4C01F4                  	add rsp, r14  ; Add to rsp
 22179 00010468 EB00                    	jmp .L_lambda_opt_stack_adjusted_0048
 22180                                  .L_lambda_opt_stack_adjusted_0048:
 22181 0001046A C8000000                	enter 0, 0
 22182                                  	; Initiating tail-call optimization
 22183 0001046E 488B4520                	mov rax, PARAM(0)	; param s
 22184 00010472 50                      	push rax
 22185 00010473 6A01                    	push 1	; Number of arguments
 22186 00010475 488B0425[26140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22187 0001047D 803805                  	cmp byte [rax], T_undefined
 22188 00010480 0F84EE4D0000            	je L_error_fvar_undefined
 22189 00010486 803804                  	cmp byte [rax], T_closure
 22190 00010489 0F85694E0000            	jne L_error_non_closure
 22191 0001048F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22192 00010492 FF7508                  	push qword [rbp + 8]
 22193 00010495 FF7500                  	push qword [rbp]
 22194 00010498 41BA05000000            	mov r10, 1 + 4
 22195 0001049E 4C8B4518                	mov r8, COUNT
 22196 000104A2 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22197 000104A7 4C8D4DF8                	lea r9, [rbp - 8]
 22198                                  .L_tc_recycle_frame_loop_0285:
 22199 000104AB 4983FA00                	cmp r10, 0
 22200 000104AF 7413                    	je .L_tc_recycle_frame_done_0285
 22201 000104B1 4D8B19                  	mov r11, qword [r9]
 22202 000104B4 4D8918                  	mov qword [r8], r11
 22203 000104B7 49FFCA                  	dec r10
 22204 000104BA 4983E808                	sub r8, 8
 22205 000104BE 4983E908                	sub r9, 8
 22206 000104C2 EBE7                    	jmp .L_tc_recycle_frame_loop_0285
 22207                                  .L_tc_recycle_frame_done_0285:
 22208 000104C4 498D6008                	lea rsp, [r8 + 8]
 22209 000104C8 5D                      	pop rbp
 22210 000104C9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22211 000104CC C9                      	leave
 22212 000104CD C21800                  	ret AND_KILL_FRAME(1)
 22213                                  .L_lambda_opt_end_0048:	; new closure is in rax
 22214 000104D0 48890425[23170000]      	mov qword [free_var_140], rax
 22215 000104D8 48B8-                   	mov rax, sob_void
 22215 000104DA [0000000000000000] 
 22216                                  
 22217 000104E2 4889C7                  	mov rdi, rax
 22218 000104E5 E80C510000              	call print_sexpr_if_not_void
 22219                                  	; preparing a non-tail-call
 22220 000104EA 48B8-                   	mov rax, L_constants + 2007
 22220 000104EC [D707000000000000] 
 22221 000104F4 50                      	push rax
 22222 000104F5 6A01                    	push 1	; arg count
 22223 000104F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22224 000104FC E8A04E0000              	call malloc
 22225 00010501 50                      	push rax
 22226 00010502 BF00000000              	mov rdi, 8 * 0	; new rib
 22227 00010507 E8954E0000              	call malloc
 22228 0001050C 50                      	push rax
 22229 0001050D BF08000000              	mov rdi, 8 * 1	; extended env
 22230 00010512 E88A4E0000              	call malloc
 22231 00010517 488B7D10                	mov rdi, ENV
 22232 0001051B BE00000000              	mov rsi, 0
 22233 00010520 BA01000000              	mov rdx, 1
 22234                                  .L_lambda_simple_env_loop_0200:	; ext_env[i + 1] <-- env[i]
 22235 00010525 4883FE00                	cmp rsi, 0
 22236 00010529 7410                    	je .L_lambda_simple_env_end_0200
 22237 0001052B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22238 0001052F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22239 00010533 48FFC6                  	inc rsi
 22240 00010536 48FFC2                  	inc rdx
 22241 00010539 EBEA                    	jmp .L_lambda_simple_env_loop_0200
 22242                                  .L_lambda_simple_env_end_0200:
 22243 0001053B 5B                      	pop rbx
 22244 0001053C BE00000000              	mov rsi, 0
 22245                                  .L_lambda_simple_params_loop_0200:	; copy params
 22246 00010541 4883FE00                	cmp rsi, 0
 22247 00010545 740E                    	je .L_lambda_simple_params_end_0200
 22248 00010547 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22249 0001054C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22250 00010550 48FFC6                  	inc rsi
 22251 00010553 EBEC                    	jmp .L_lambda_simple_params_loop_0200
 22252                                  .L_lambda_simple_params_end_0200:
 22253 00010555 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22254 00010558 4889C3                  	mov rbx, rax
 22255 0001055B 58                      	pop rax
 22256 0001055C C60004                  	mov byte [rax], T_closure
 22257 0001055F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22258 00010563 48C74009[70050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0200
 22259 0001056B E926030000              	jmp .L_lambda_simple_end_0200
 22260                                  .L_lambda_simple_code_0200:	; lambda-simple body
 22261 00010570 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22262 00010576 740B                    	je .L_lambda_simple_arity_check_ok_0200
 22263 00010578 FF742410                	push qword [rsp + 8 * 2]
 22264 0001057C 6A01                    	push 1
 22265 0001057E E9D74D0000              	jmp L_error_incorrect_arity_simple
 22266                                  .L_lambda_simple_arity_check_ok_0200:
 22267 00010583 C8000000                	enter 0, 0
 22268 00010587 BF08000000              	mov rdi, 8 * 1
 22269 0001058C E8104E0000              	call malloc
 22270 00010591 488B5D20                	mov rbx, PARAM(0)
 22271 00010595 488918                  	mov qword [rax], rbx
 22272 00010598 48894520                	mov PARAM(0), rax
 22273 0001059C 48B8-                   	mov rax, sob_void
 22273 0001059E [0000000000000000] 
 22274                                  
 22275 000105A6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22276 000105AB E8F14D0000              	call malloc
 22277 000105B0 50                      	push rax
 22278 000105B1 BF08000000              	mov rdi, 8 * 1	; new rib
 22279 000105B6 E8E64D0000              	call malloc
 22280 000105BB 50                      	push rax
 22281 000105BC BF10000000              	mov rdi, 8 * 2	; extended env
 22282 000105C1 E8DB4D0000              	call malloc
 22283 000105C6 488B7D10                	mov rdi, ENV
 22284 000105CA BE00000000              	mov rsi, 0
 22285 000105CF BA01000000              	mov rdx, 1
 22286                                  .L_lambda_simple_env_loop_0201:	; ext_env[i + 1] <-- env[i]
 22287 000105D4 4883FE01                	cmp rsi, 1
 22288 000105D8 7410                    	je .L_lambda_simple_env_end_0201
 22289 000105DA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22290 000105DE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22291 000105E2 48FFC6                  	inc rsi
 22292 000105E5 48FFC2                  	inc rdx
 22293 000105E8 EBEA                    	jmp .L_lambda_simple_env_loop_0201
 22294                                  .L_lambda_simple_env_end_0201:
 22295 000105EA 5B                      	pop rbx
 22296 000105EB BE00000000              	mov rsi, 0
 22297                                  .L_lambda_simple_params_loop_0201:	; copy params
 22298 000105F0 4883FE01                	cmp rsi, 1
 22299 000105F4 740E                    	je .L_lambda_simple_params_end_0201
 22300 000105F6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22301 000105FB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22302 000105FF 48FFC6                  	inc rsi
 22303 00010602 EBEC                    	jmp .L_lambda_simple_params_loop_0201
 22304                                  .L_lambda_simple_params_end_0201:
 22305 00010604 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22306 00010607 4889C3                  	mov rbx, rax
 22307 0001060A 58                      	pop rax
 22308 0001060B C60004                  	mov byte [rax], T_closure
 22309 0001060E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22310 00010612 48C74009[1F060100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0201
 22311 0001061A E941010000              	jmp .L_lambda_simple_end_0201
 22312                                  .L_lambda_simple_code_0201:	; lambda-simple body
 22313 0001061F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22314 00010625 740B                    	je .L_lambda_simple_arity_check_ok_0201
 22315 00010627 FF742410                	push qword [rsp + 8 * 2]
 22316 0001062B 6A03                    	push 3
 22317 0001062D E9284D0000              	jmp L_error_incorrect_arity_simple
 22318                                  .L_lambda_simple_arity_check_ok_0201:
 22319 00010632 C8000000                	enter 0, 0
 22320                                  	; preparing a non-tail-call
 22321 00010636 488B4530                	mov rax, PARAM(2)	; param n
 22322 0001063A 50                      	push rax
 22323 0001063B 488B4528                	mov rax, PARAM(1)	; param i
 22324 0001063F 50                      	push rax
 22325 00010640 6A02                    	push 2	; arg count
 22326 00010642 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 22327 0001064A 803805                  	cmp byte [rax], T_undefined
 22328 0001064D 0F84214C0000            	je L_error_fvar_undefined
 22329 00010653 803804                  	cmp byte [rax], T_closure
 22330 00010656 0F859C4C0000            	jne L_error_non_closure
 22331 0001065C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22332 0001065F FF5009                  	call SOB_CLOSURE_CODE(rax)
 22333 00010662 483D[02000000]          	cmp rax, sob_boolean_false
 22334 00010668 0F84E4000000            	je .L_if_else_0179
 22335                                  	; Initiating tail-call optimization
 22336                                  	; preparing a non-tail-call
 22337 0001066E 488B4530                	mov rax, PARAM(2)	; param n
 22338 00010672 50                      	push rax
 22339                                  	; preparing a non-tail-call
 22340 00010673 48B8-                   	mov rax, L_constants + 2270
 22340 00010675 [DE08000000000000] 
 22341 0001067D 50                      	push rax
 22342 0001067E 488B4528                	mov rax, PARAM(1)	; param i
 22343 00010682 50                      	push rax
 22344 00010683 6A02                    	push 2	; arg count
 22345 00010685 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 22346 0001068D 803805                  	cmp byte [rax], T_undefined
 22347 00010690 0F84DE4B0000            	je L_error_fvar_undefined
 22348 00010696 803804                  	cmp byte [rax], T_closure
 22349 00010699 0F85594C0000            	jne L_error_non_closure
 22350 0001069F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22351 000106A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22352 000106A5 50                      	push rax
 22353 000106A6 488B4520                	mov rax, PARAM(0)	; param str
 22354 000106AA 50                      	push rax
 22355 000106AB 6A03                    	push 3	; arg count
 22356 000106AD 488B4510                	mov rax, ENV
 22357 000106B1 488B00                  	mov rax, qword [rax + 8 * 0]
 22358 000106B4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22359 000106B7 488B00                  	mov rax, qword [rax]
 22360 000106BA 803804                  	cmp byte [rax], T_closure
 22361 000106BD 0F85354C0000            	jne L_error_non_closure
 22362 000106C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22363 000106C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22364 000106C9 50                      	push rax
 22365                                  	; preparing a non-tail-call
 22366 000106CA 488B4528                	mov rax, PARAM(1)	; param i
 22367 000106CE 50                      	push rax
 22368 000106CF 488B4520                	mov rax, PARAM(0)	; param str
 22369 000106D3 50                      	push rax
 22370 000106D4 6A02                    	push 2	; arg count
 22371 000106D6 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 22372 000106DE 803805                  	cmp byte [rax], T_undefined
 22373 000106E1 0F848D4B0000            	je L_error_fvar_undefined
 22374 000106E7 803804                  	cmp byte [rax], T_closure
 22375 000106EA 0F85084C0000            	jne L_error_non_closure
 22376 000106F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22377 000106F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22378 000106F6 50                      	push rax
 22379 000106F7 6A02                    	push 2	; Number of arguments
 22380 000106F9 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
 22381 00010701 803805                  	cmp byte [rax], T_undefined
 22382 00010704 0F846A4B0000            	je L_error_fvar_undefined
 22383 0001070A 803804                  	cmp byte [rax], T_closure
 22384 0001070D 0F85E54B0000            	jne L_error_non_closure
 22385 00010713 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22386 00010716 FF7508                  	push qword [rbp + 8]
 22387 00010719 FF7500                  	push qword [rbp]
 22388 0001071C 41BA06000000            	mov r10, 2 + 4
 22389 00010722 4C8B4518                	mov r8, COUNT
 22390 00010726 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22391 0001072B 4C8D4DF8                	lea r9, [rbp - 8]
 22392                                  .L_tc_recycle_frame_loop_0286:
 22393 0001072F 4983FA00                	cmp r10, 0
 22394 00010733 7413                    	je .L_tc_recycle_frame_done_0286
 22395 00010735 4D8B19                  	mov r11, qword [r9]
 22396 00010738 4D8918                  	mov qword [r8], r11
 22397 0001073B 49FFCA                  	dec r10
 22398 0001073E 4983E808                	sub r8, 8
 22399 00010742 4983E908                	sub r9, 8
 22400 00010746 EBE7                    	jmp .L_tc_recycle_frame_loop_0286
 22401                                  .L_tc_recycle_frame_done_0286:
 22402 00010748 498D6008                	lea rsp, [r8 + 8]
 22403 0001074C 5D                      	pop rbp
 22404 0001074D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22405 00010750 EB0A                    	jmp .L_if_end_0179
 22406                                  .L_if_else_0179:
 22407 00010752 48B8-                   	mov rax, L_constants + 1
 22407 00010754 [0100000000000000] 
 22408                                  .L_if_end_0179:
 22409 0001075C C9                      	leave
 22410 0001075D C22800                  	ret AND_KILL_FRAME(3)
 22411                                  .L_lambda_simple_end_0201:	; new closure is in rax
 22412 00010760 50                      	push rax
 22413 00010761 488B4520                	mov rax, PARAM(0)	; param run
 22414 00010765 8F00                    	pop qword [rax]
 22415 00010767 48B8-                   	mov rax, sob_void
 22415 00010769 [0000000000000000] 
 22416                                  
 22417 00010771 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22418 00010776 E8264C0000              	call malloc
 22419 0001077B 50                      	push rax
 22420 0001077C BF08000000              	mov rdi, 8 * 1	; new rib
 22421 00010781 E81B4C0000              	call malloc
 22422 00010786 50                      	push rax
 22423 00010787 BF10000000              	mov rdi, 8 * 2	; extended env
 22424 0001078C E8104C0000              	call malloc
 22425 00010791 488B7D10                	mov rdi, ENV
 22426 00010795 BE00000000              	mov rsi, 0
 22427 0001079A BA01000000              	mov rdx, 1
 22428                                  .L_lambda_simple_env_loop_0202:	; ext_env[i + 1] <-- env[i]
 22429 0001079F 4883FE01                	cmp rsi, 1
 22430 000107A3 7410                    	je .L_lambda_simple_env_end_0202
 22431 000107A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22432 000107A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22433 000107AD 48FFC6                  	inc rsi
 22434 000107B0 48FFC2                  	inc rdx
 22435 000107B3 EBEA                    	jmp .L_lambda_simple_env_loop_0202
 22436                                  .L_lambda_simple_env_end_0202:
 22437 000107B5 5B                      	pop rbx
 22438 000107B6 BE00000000              	mov rsi, 0
 22439                                  .L_lambda_simple_params_loop_0202:	; copy params
 22440 000107BB 4883FE01                	cmp rsi, 1
 22441 000107BF 740E                    	je .L_lambda_simple_params_end_0202
 22442 000107C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22443 000107C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22444 000107CA 48FFC6                  	inc rsi
 22445 000107CD EBEC                    	jmp .L_lambda_simple_params_loop_0202
 22446                                  .L_lambda_simple_params_end_0202:
 22447 000107CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22448 000107D2 4889C3                  	mov rbx, rax
 22449 000107D5 58                      	pop rax
 22450 000107D6 C60004                  	mov byte [rax], T_closure
 22451 000107D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22452 000107DD 48C74009[EA070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0202
 22453 000107E5 E9A8000000              	jmp .L_lambda_simple_end_0202
 22454                                  .L_lambda_simple_code_0202:	; lambda-simple body
 22455 000107EA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22456 000107F0 740B                    	je .L_lambda_simple_arity_check_ok_0202
 22457 000107F2 FF742410                	push qword [rsp + 8 * 2]
 22458 000107F6 6A01                    	push 1
 22459 000107F8 E95D4B0000              	jmp L_error_incorrect_arity_simple
 22460                                  .L_lambda_simple_arity_check_ok_0202:
 22461 000107FD C8000000                	enter 0, 0
 22462                                  	; Initiating tail-call optimization
 22463                                  	; preparing a non-tail-call
 22464 00010801 488B4520                	mov rax, PARAM(0)	; param str
 22465 00010805 50                      	push rax
 22466 00010806 6A01                    	push 1	; arg count
 22467 00010808 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 22468 00010810 803805                  	cmp byte [rax], T_undefined
 22469 00010813 0F845B4A0000            	je L_error_fvar_undefined
 22470 00010819 803804                  	cmp byte [rax], T_closure
 22471 0001081C 0F85D64A0000            	jne L_error_non_closure
 22472 00010822 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22473 00010825 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22474 00010828 50                      	push rax
 22475 00010829 48B8-                   	mov rax, L_constants + 2135
 22475 0001082B [5708000000000000] 
 22476 00010833 50                      	push rax
 22477 00010834 488B4520                	mov rax, PARAM(0)	; param str
 22478 00010838 50                      	push rax
 22479 00010839 6A03                    	push 3	; Number of arguments
 22480 0001083B 488B4510                	mov rax, ENV
 22481 0001083F 488B00                  	mov rax, qword [rax + 8 * 0]
 22482 00010842 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22483 00010845 488B00                  	mov rax, qword [rax]
 22484 00010848 803804                  	cmp byte [rax], T_closure
 22485 0001084B 0F85A74A0000            	jne L_error_non_closure
 22486 00010851 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22487 00010854 FF7508                  	push qword [rbp + 8]
 22488 00010857 FF7500                  	push qword [rbp]
 22489 0001085A 41BA07000000            	mov r10, 3 + 4
 22490 00010860 4C8B4518                	mov r8, COUNT
 22491 00010864 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22492 00010869 4C8D4DF8                	lea r9, [rbp - 8]
 22493                                  .L_tc_recycle_frame_loop_0287:
 22494 0001086D 4983FA00                	cmp r10, 0
 22495 00010871 7413                    	je .L_tc_recycle_frame_done_0287
 22496 00010873 4D8B19                  	mov r11, qword [r9]
 22497 00010876 4D8918                  	mov qword [r8], r11
 22498 00010879 49FFCA                  	dec r10
 22499 0001087C 4983E808                	sub r8, 8
 22500 00010880 4983E908                	sub r9, 8
 22501 00010884 EBE7                    	jmp .L_tc_recycle_frame_loop_0287
 22502                                  .L_tc_recycle_frame_done_0287:
 22503 00010886 498D6008                	lea rsp, [r8 + 8]
 22504 0001088A 5D                      	pop rbp
 22505 0001088B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22506 0001088E C9                      	leave
 22507 0001088F C21800                  	ret AND_KILL_FRAME(1)
 22508                                  .L_lambda_simple_end_0202:	; new closure is in rax
 22509 00010892 C9                      	leave
 22510 00010893 C21800                  	ret AND_KILL_FRAME(1)
 22511                                  .L_lambda_simple_end_0200:	; new closure is in rax
 22512 00010896 803804                  	cmp byte [rax], T_closure
 22513 00010899 0F85594A0000            	jne L_error_non_closure
 22514 0001089F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22515 000108A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22516 000108A5 48890425[BE150000]      	mov qword [free_var_119], rax
 22517 000108AD 48B8-                   	mov rax, sob_void
 22517 000108AF [0000000000000000] 
 22518                                  
 22519 000108B7 4889C7                  	mov rdi, rax
 22520 000108BA E8374D0000              	call print_sexpr_if_not_void
 22521                                  	; preparing a non-tail-call
 22522 000108BF 48B8-                   	mov rax, L_constants + 2007
 22522 000108C1 [D707000000000000] 
 22523 000108C9 50                      	push rax
 22524 000108CA 6A01                    	push 1	; arg count
 22525 000108CC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22526 000108D1 E8CB4A0000              	call malloc
 22527 000108D6 50                      	push rax
 22528 000108D7 BF00000000              	mov rdi, 8 * 0	; new rib
 22529 000108DC E8C04A0000              	call malloc
 22530 000108E1 50                      	push rax
 22531 000108E2 BF08000000              	mov rdi, 8 * 1	; extended env
 22532 000108E7 E8B54A0000              	call malloc
 22533 000108EC 488B7D10                	mov rdi, ENV
 22534 000108F0 BE00000000              	mov rsi, 0
 22535 000108F5 BA01000000              	mov rdx, 1
 22536                                  .L_lambda_simple_env_loop_0203:	; ext_env[i + 1] <-- env[i]
 22537 000108FA 4883FE00                	cmp rsi, 0
 22538 000108FE 7410                    	je .L_lambda_simple_env_end_0203
 22539 00010900 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22540 00010904 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22541 00010908 48FFC6                  	inc rsi
 22542 0001090B 48FFC2                  	inc rdx
 22543 0001090E EBEA                    	jmp .L_lambda_simple_env_loop_0203
 22544                                  .L_lambda_simple_env_end_0203:
 22545 00010910 5B                      	pop rbx
 22546 00010911 BE00000000              	mov rsi, 0
 22547                                  .L_lambda_simple_params_loop_0203:	; copy params
 22548 00010916 4883FE00                	cmp rsi, 0
 22549 0001091A 740E                    	je .L_lambda_simple_params_end_0203
 22550 0001091C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22551 00010921 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22552 00010925 48FFC6                  	inc rsi
 22553 00010928 EBEC                    	jmp .L_lambda_simple_params_loop_0203
 22554                                  .L_lambda_simple_params_end_0203:
 22555 0001092A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22556 0001092D 4889C3                  	mov rbx, rax
 22557 00010930 58                      	pop rax
 22558 00010931 C60004                  	mov byte [rax], T_closure
 22559 00010934 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22560 00010938 48C74009[45090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0203
 22561 00010940 E926030000              	jmp .L_lambda_simple_end_0203
 22562                                  .L_lambda_simple_code_0203:	; lambda-simple body
 22563 00010945 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22564 0001094B 740B                    	je .L_lambda_simple_arity_check_ok_0203
 22565 0001094D FF742410                	push qword [rsp + 8 * 2]
 22566 00010951 6A01                    	push 1
 22567 00010953 E9024A0000              	jmp L_error_incorrect_arity_simple
 22568                                  .L_lambda_simple_arity_check_ok_0203:
 22569 00010958 C8000000                	enter 0, 0
 22570 0001095C BF08000000              	mov rdi, 8 * 1
 22571 00010961 E83B4A0000              	call malloc
 22572 00010966 488B5D20                	mov rbx, PARAM(0)
 22573 0001096A 488918                  	mov qword [rax], rbx
 22574 0001096D 48894520                	mov PARAM(0), rax
 22575 00010971 48B8-                   	mov rax, sob_void
 22575 00010973 [0000000000000000] 
 22576                                  
 22577 0001097B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22578 00010980 E81C4A0000              	call malloc
 22579 00010985 50                      	push rax
 22580 00010986 BF08000000              	mov rdi, 8 * 1	; new rib
 22581 0001098B E8114A0000              	call malloc
 22582 00010990 50                      	push rax
 22583 00010991 BF10000000              	mov rdi, 8 * 2	; extended env
 22584 00010996 E8064A0000              	call malloc
 22585 0001099B 488B7D10                	mov rdi, ENV
 22586 0001099F BE00000000              	mov rsi, 0
 22587 000109A4 BA01000000              	mov rdx, 1
 22588                                  .L_lambda_simple_env_loop_0204:	; ext_env[i + 1] <-- env[i]
 22589 000109A9 4883FE01                	cmp rsi, 1
 22590 000109AD 7410                    	je .L_lambda_simple_env_end_0204
 22591 000109AF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22592 000109B3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22593 000109B7 48FFC6                  	inc rsi
 22594 000109BA 48FFC2                  	inc rdx
 22595 000109BD EBEA                    	jmp .L_lambda_simple_env_loop_0204
 22596                                  .L_lambda_simple_env_end_0204:
 22597 000109BF 5B                      	pop rbx
 22598 000109C0 BE00000000              	mov rsi, 0
 22599                                  .L_lambda_simple_params_loop_0204:	; copy params
 22600 000109C5 4883FE01                	cmp rsi, 1
 22601 000109C9 740E                    	je .L_lambda_simple_params_end_0204
 22602 000109CB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22603 000109D0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22604 000109D4 48FFC6                  	inc rsi
 22605 000109D7 EBEC                    	jmp .L_lambda_simple_params_loop_0204
 22606                                  .L_lambda_simple_params_end_0204:
 22607 000109D9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22608 000109DC 4889C3                  	mov rbx, rax
 22609 000109DF 58                      	pop rax
 22610 000109E0 C60004                  	mov byte [rax], T_closure
 22611 000109E3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22612 000109E7 48C74009[F4090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0204
 22613 000109EF E941010000              	jmp .L_lambda_simple_end_0204
 22614                                  .L_lambda_simple_code_0204:	; lambda-simple body
 22615 000109F4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22616 000109FA 740B                    	je .L_lambda_simple_arity_check_ok_0204
 22617 000109FC FF742410                	push qword [rsp + 8 * 2]
 22618 00010A00 6A03                    	push 3
 22619 00010A02 E953490000              	jmp L_error_incorrect_arity_simple
 22620                                  .L_lambda_simple_arity_check_ok_0204:
 22621 00010A07 C8000000                	enter 0, 0
 22622                                  	; preparing a non-tail-call
 22623 00010A0B 488B4530                	mov rax, PARAM(2)	; param n
 22624 00010A0F 50                      	push rax
 22625 00010A10 488B4528                	mov rax, PARAM(1)	; param i
 22626 00010A14 50                      	push rax
 22627 00010A15 6A02                    	push 2	; arg count
 22628 00010A17 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 22629 00010A1F 803805                  	cmp byte [rax], T_undefined
 22630 00010A22 0F844C480000            	je L_error_fvar_undefined
 22631 00010A28 803804                  	cmp byte [rax], T_closure
 22632 00010A2B 0F85C7480000            	jne L_error_non_closure
 22633 00010A31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22634 00010A34 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22635 00010A37 483D[02000000]          	cmp rax, sob_boolean_false
 22636 00010A3D 0F84E4000000            	je .L_if_else_017a
 22637                                  	; Initiating tail-call optimization
 22638                                  	; preparing a non-tail-call
 22639 00010A43 488B4530                	mov rax, PARAM(2)	; param n
 22640 00010A47 50                      	push rax
 22641                                  	; preparing a non-tail-call
 22642 00010A48 48B8-                   	mov rax, L_constants + 2270
 22642 00010A4A [DE08000000000000] 
 22643 00010A52 50                      	push rax
 22644 00010A53 488B4528                	mov rax, PARAM(1)	; param i
 22645 00010A57 50                      	push rax
 22646 00010A58 6A02                    	push 2	; arg count
 22647 00010A5A 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 22648 00010A62 803805                  	cmp byte [rax], T_undefined
 22649 00010A65 0F8409480000            	je L_error_fvar_undefined
 22650 00010A6B 803804                  	cmp byte [rax], T_closure
 22651 00010A6E 0F8584480000            	jne L_error_non_closure
 22652 00010A74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22653 00010A77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22654 00010A7A 50                      	push rax
 22655 00010A7B 488B4520                	mov rax, PARAM(0)	; param v
 22656 00010A7F 50                      	push rax
 22657 00010A80 6A03                    	push 3	; arg count
 22658 00010A82 488B4510                	mov rax, ENV
 22659 00010A86 488B00                  	mov rax, qword [rax + 8 * 0]
 22660 00010A89 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22661 00010A8C 488B00                  	mov rax, qword [rax]
 22662 00010A8F 803804                  	cmp byte [rax], T_closure
 22663 00010A92 0F8560480000            	jne L_error_non_closure
 22664 00010A98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22665 00010A9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22666 00010A9E 50                      	push rax
 22667                                  	; preparing a non-tail-call
 22668 00010A9F 488B4528                	mov rax, PARAM(1)	; param i
 22669 00010AA3 50                      	push rax
 22670 00010AA4 488B4520                	mov rax, PARAM(0)	; param v
 22671 00010AA8 50                      	push rax
 22672 00010AA9 6A02                    	push 2	; arg count
 22673 00010AAB 488B0425[67170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 22674 00010AB3 803805                  	cmp byte [rax], T_undefined
 22675 00010AB6 0F84B8470000            	je L_error_fvar_undefined
 22676 00010ABC 803804                  	cmp byte [rax], T_closure
 22677 00010ABF 0F8533480000            	jne L_error_non_closure
 22678 00010AC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22679 00010AC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22680 00010ACB 50                      	push rax
 22681 00010ACC 6A02                    	push 2	; Number of arguments
 22682 00010ACE 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
 22683 00010AD6 803805                  	cmp byte [rax], T_undefined
 22684 00010AD9 0F8495470000            	je L_error_fvar_undefined
 22685 00010ADF 803804                  	cmp byte [rax], T_closure
 22686 00010AE2 0F8510480000            	jne L_error_non_closure
 22687 00010AE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22688 00010AEB FF7508                  	push qword [rbp + 8]
 22689 00010AEE FF7500                  	push qword [rbp]
 22690 00010AF1 41BA06000000            	mov r10, 2 + 4
 22691 00010AF7 4C8B4518                	mov r8, COUNT
 22692 00010AFB 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22693 00010B00 4C8D4DF8                	lea r9, [rbp - 8]
 22694                                  .L_tc_recycle_frame_loop_0288:
 22695 00010B04 4983FA00                	cmp r10, 0
 22696 00010B08 7413                    	je .L_tc_recycle_frame_done_0288
 22697 00010B0A 4D8B19                  	mov r11, qword [r9]
 22698 00010B0D 4D8918                  	mov qword [r8], r11
 22699 00010B10 49FFCA                  	dec r10
 22700 00010B13 4983E808                	sub r8, 8
 22701 00010B17 4983E908                	sub r9, 8
 22702 00010B1B EBE7                    	jmp .L_tc_recycle_frame_loop_0288
 22703                                  .L_tc_recycle_frame_done_0288:
 22704 00010B1D 498D6008                	lea rsp, [r8 + 8]
 22705 00010B21 5D                      	pop rbp
 22706 00010B22 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22707 00010B25 EB0A                    	jmp .L_if_end_017a
 22708                                  .L_if_else_017a:
 22709 00010B27 48B8-                   	mov rax, L_constants + 1
 22709 00010B29 [0100000000000000] 
 22710                                  .L_if_end_017a:
 22711 00010B31 C9                      	leave
 22712 00010B32 C22800                  	ret AND_KILL_FRAME(3)
 22713                                  .L_lambda_simple_end_0204:	; new closure is in rax
 22714 00010B35 50                      	push rax
 22715 00010B36 488B4520                	mov rax, PARAM(0)	; param run
 22716 00010B3A 8F00                    	pop qword [rax]
 22717 00010B3C 48B8-                   	mov rax, sob_void
 22717 00010B3E [0000000000000000] 
 22718                                  
 22719 00010B46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22720 00010B4B E851480000              	call malloc
 22721 00010B50 50                      	push rax
 22722 00010B51 BF08000000              	mov rdi, 8 * 1	; new rib
 22723 00010B56 E846480000              	call malloc
 22724 00010B5B 50                      	push rax
 22725 00010B5C BF10000000              	mov rdi, 8 * 2	; extended env
 22726 00010B61 E83B480000              	call malloc
 22727 00010B66 488B7D10                	mov rdi, ENV
 22728 00010B6A BE00000000              	mov rsi, 0
 22729 00010B6F BA01000000              	mov rdx, 1
 22730                                  .L_lambda_simple_env_loop_0205:	; ext_env[i + 1] <-- env[i]
 22731 00010B74 4883FE01                	cmp rsi, 1
 22732 00010B78 7410                    	je .L_lambda_simple_env_end_0205
 22733 00010B7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22734 00010B7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22735 00010B82 48FFC6                  	inc rsi
 22736 00010B85 48FFC2                  	inc rdx
 22737 00010B88 EBEA                    	jmp .L_lambda_simple_env_loop_0205
 22738                                  .L_lambda_simple_env_end_0205:
 22739 00010B8A 5B                      	pop rbx
 22740 00010B8B BE00000000              	mov rsi, 0
 22741                                  .L_lambda_simple_params_loop_0205:	; copy params
 22742 00010B90 4883FE01                	cmp rsi, 1
 22743 00010B94 740E                    	je .L_lambda_simple_params_end_0205
 22744 00010B96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22745 00010B9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22746 00010B9F 48FFC6                  	inc rsi
 22747 00010BA2 EBEC                    	jmp .L_lambda_simple_params_loop_0205
 22748                                  .L_lambda_simple_params_end_0205:
 22749 00010BA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22750 00010BA7 4889C3                  	mov rbx, rax
 22751 00010BAA 58                      	pop rax
 22752 00010BAB C60004                  	mov byte [rax], T_closure
 22753 00010BAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22754 00010BB2 48C74009[BF0B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0205
 22755 00010BBA E9A8000000              	jmp .L_lambda_simple_end_0205
 22756                                  .L_lambda_simple_code_0205:	; lambda-simple body
 22757 00010BBF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22758 00010BC5 740B                    	je .L_lambda_simple_arity_check_ok_0205
 22759 00010BC7 FF742410                	push qword [rsp + 8 * 2]
 22760 00010BCB 6A01                    	push 1
 22761 00010BCD E988470000              	jmp L_error_incorrect_arity_simple
 22762                                  .L_lambda_simple_arity_check_ok_0205:
 22763 00010BD2 C8000000                	enter 0, 0
 22764                                  	; Initiating tail-call optimization
 22765                                  	; preparing a non-tail-call
 22766 00010BD6 488B4520                	mov rax, PARAM(0)	; param v
 22767 00010BDA 50                      	push rax
 22768 00010BDB 6A01                    	push 1	; arg count
 22769 00010BDD 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 22770 00010BE5 803805                  	cmp byte [rax], T_undefined
 22771 00010BE8 0F8486460000            	je L_error_fvar_undefined
 22772 00010BEE 803804                  	cmp byte [rax], T_closure
 22773 00010BF1 0F8501470000            	jne L_error_non_closure
 22774 00010BF7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22775 00010BFA FF5009                  	call SOB_CLOSURE_CODE(rax)
 22776 00010BFD 50                      	push rax
 22777 00010BFE 48B8-                   	mov rax, L_constants + 2135
 22777 00010C00 [5708000000000000] 
 22778 00010C08 50                      	push rax
 22779 00010C09 488B4520                	mov rax, PARAM(0)	; param v
 22780 00010C0D 50                      	push rax
 22781 00010C0E 6A03                    	push 3	; Number of arguments
 22782 00010C10 488B4510                	mov rax, ENV
 22783 00010C14 488B00                  	mov rax, qword [rax + 8 * 0]
 22784 00010C17 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22785 00010C1A 488B00                  	mov rax, qword [rax]
 22786 00010C1D 803804                  	cmp byte [rax], T_closure
 22787 00010C20 0F85D2460000            	jne L_error_non_closure
 22788 00010C26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22789 00010C29 FF7508                  	push qword [rbp + 8]
 22790 00010C2C FF7500                  	push qword [rbp]
 22791 00010C2F 41BA07000000            	mov r10, 3 + 4
 22792 00010C35 4C8B4518                	mov r8, COUNT
 22793 00010C39 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22794 00010C3E 4C8D4DF8                	lea r9, [rbp - 8]
 22795                                  .L_tc_recycle_frame_loop_0289:
 22796 00010C42 4983FA00                	cmp r10, 0
 22797 00010C46 7413                    	je .L_tc_recycle_frame_done_0289
 22798 00010C48 4D8B19                  	mov r11, qword [r9]
 22799 00010C4B 4D8918                  	mov qword [r8], r11
 22800 00010C4E 49FFCA                  	dec r10
 22801 00010C51 4983E808                	sub r8, 8
 22802 00010C55 4983E908                	sub r9, 8
 22803 00010C59 EBE7                    	jmp .L_tc_recycle_frame_loop_0289
 22804                                  .L_tc_recycle_frame_done_0289:
 22805 00010C5B 498D6008                	lea rsp, [r8 + 8]
 22806 00010C5F 5D                      	pop rbp
 22807 00010C60 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22808 00010C63 C9                      	leave
 22809 00010C64 C21800                  	ret AND_KILL_FRAME(1)
 22810                                  .L_lambda_simple_end_0205:	; new closure is in rax
 22811 00010C67 C9                      	leave
 22812 00010C68 C21800                  	ret AND_KILL_FRAME(1)
 22813                                  .L_lambda_simple_end_0203:	; new closure is in rax
 22814 00010C6B 803804                  	cmp byte [rax], T_closure
 22815 00010C6E 0F8584460000            	jne L_error_non_closure
 22816 00010C74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22817 00010C77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22818 00010C7A 48890425[34170000]      	mov qword [free_var_141], rax
 22819 00010C82 48B8-                   	mov rax, sob_void
 22819 00010C84 [0000000000000000] 
 22820                                  
 22821 00010C8C 4889C7                  	mov rdi, rax
 22822 00010C8F E862490000              	call print_sexpr_if_not_void
 22823 00010C94 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22824 00010C99 E803470000              	call malloc
 22825 00010C9E 50                      	push rax
 22826 00010C9F BF00000000              	mov rdi, 8 * 0	; new rib
 22827 00010CA4 E8F8460000              	call malloc
 22828 00010CA9 50                      	push rax
 22829 00010CAA BF08000000              	mov rdi, 8 * 1	; extended env
 22830 00010CAF E8ED460000              	call malloc
 22831 00010CB4 488B7D10                	mov rdi, ENV
 22832 00010CB8 BE00000000              	mov rsi, 0
 22833 00010CBD BA01000000              	mov rdx, 1
 22834                                  .L_lambda_simple_env_loop_0206:	; ext_env[i + 1] <-- env[i]
 22835 00010CC2 4883FE00                	cmp rsi, 0
 22836 00010CC6 7410                    	je .L_lambda_simple_env_end_0206
 22837 00010CC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22838 00010CCC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22839 00010CD0 48FFC6                  	inc rsi
 22840 00010CD3 48FFC2                  	inc rdx
 22841 00010CD6 EBEA                    	jmp .L_lambda_simple_env_loop_0206
 22842                                  .L_lambda_simple_env_end_0206:
 22843 00010CD8 5B                      	pop rbx
 22844 00010CD9 BE00000000              	mov rsi, 0
 22845                                  .L_lambda_simple_params_loop_0206:	; copy params
 22846 00010CDE 4883FE00                	cmp rsi, 0
 22847 00010CE2 740E                    	je .L_lambda_simple_params_end_0206
 22848 00010CE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22849 00010CE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22850 00010CED 48FFC6                  	inc rsi
 22851 00010CF0 EBEC                    	jmp .L_lambda_simple_params_loop_0206
 22852                                  .L_lambda_simple_params_end_0206:
 22853 00010CF2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22854 00010CF5 4889C3                  	mov rbx, rax
 22855 00010CF8 58                      	pop rax
 22856 00010CF9 C60004                  	mov byte [rax], T_closure
 22857 00010CFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22858 00010D00 48C74009[0D0D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0206
 22859 00010D08 E99C000000              	jmp .L_lambda_simple_end_0206
 22860                                  .L_lambda_simple_code_0206:	; lambda-simple body
 22861 00010D0D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22862 00010D13 740B                    	je .L_lambda_simple_arity_check_ok_0206
 22863 00010D15 FF742410                	push qword [rsp + 8 * 2]
 22864 00010D19 6A01                    	push 1
 22865 00010D1B E93A460000              	jmp L_error_incorrect_arity_simple
 22866                                  .L_lambda_simple_arity_check_ok_0206:
 22867 00010D20 C8000000                	enter 0, 0
 22868                                  	; Initiating tail-call optimization
 22869 00010D24 488B4520                	mov rax, PARAM(0)	; param n
 22870 00010D28 50                      	push rax
 22871                                  	; preparing a non-tail-call
 22872 00010D29 6A00                    	push 0	; arg count
 22873 00010D2B 488B0425[12170000]      	mov rax, qword [free_var_139]	; free var trng
 22874 00010D33 803805                  	cmp byte [rax], T_undefined
 22875 00010D36 0F8438450000            	je L_error_fvar_undefined
 22876 00010D3C 803804                  	cmp byte [rax], T_closure
 22877 00010D3F 0F85B3450000            	jne L_error_non_closure
 22878 00010D45 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22879 00010D48 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22880 00010D4B 50                      	push rax
 22881 00010D4C 6A02                    	push 2	; Number of arguments
 22882 00010D4E 488B0425[9C150000]      	mov rax, qword [free_var_117]	; free var remainder
 22883 00010D56 803805                  	cmp byte [rax], T_undefined
 22884 00010D59 0F8415450000            	je L_error_fvar_undefined
 22885 00010D5F 803804                  	cmp byte [rax], T_closure
 22886 00010D62 0F8590450000            	jne L_error_non_closure
 22887 00010D68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22888 00010D6B FF7508                  	push qword [rbp + 8]
 22889 00010D6E FF7500                  	push qword [rbp]
 22890 00010D71 41BA06000000            	mov r10, 2 + 4
 22891 00010D77 4C8B4518                	mov r8, COUNT
 22892 00010D7B 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22893 00010D80 4C8D4DF8                	lea r9, [rbp - 8]
 22894                                  .L_tc_recycle_frame_loop_028a:
 22895 00010D84 4983FA00                	cmp r10, 0
 22896 00010D88 7413                    	je .L_tc_recycle_frame_done_028a
 22897 00010D8A 4D8B19                  	mov r11, qword [r9]
 22898 00010D8D 4D8918                  	mov qword [r8], r11
 22899 00010D90 49FFCA                  	dec r10
 22900 00010D93 4983E808                	sub r8, 8
 22901 00010D97 4983E908                	sub r9, 8
 22902 00010D9B EBE7                    	jmp .L_tc_recycle_frame_loop_028a
 22903                                  .L_tc_recycle_frame_done_028a:
 22904 00010D9D 498D6008                	lea rsp, [r8 + 8]
 22905 00010DA1 5D                      	pop rbp
 22906 00010DA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22907 00010DA5 C9                      	leave
 22908 00010DA6 C21800                  	ret AND_KILL_FRAME(1)
 22909                                  .L_lambda_simple_end_0206:	; new closure is in rax
 22910 00010DA9 48890425[58150000]      	mov qword [free_var_113], rax
 22911 00010DB1 48B8-                   	mov rax, sob_void
 22911 00010DB3 [0000000000000000] 
 22912                                  
 22913 00010DBB 4889C7                  	mov rdi, rax
 22914 00010DBE E833480000              	call print_sexpr_if_not_void
 22915 00010DC3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22916 00010DC8 E8D4450000              	call malloc
 22917 00010DCD 50                      	push rax
 22918 00010DCE BF00000000              	mov rdi, 8 * 0	; new rib
 22919 00010DD3 E8C9450000              	call malloc
 22920 00010DD8 50                      	push rax
 22921 00010DD9 BF08000000              	mov rdi, 8 * 1	; extended env
 22922 00010DDE E8BE450000              	call malloc
 22923 00010DE3 488B7D10                	mov rdi, ENV
 22924 00010DE7 BE00000000              	mov rsi, 0
 22925 00010DEC BA01000000              	mov rdx, 1
 22926                                  .L_lambda_simple_env_loop_0207:	; ext_env[i + 1] <-- env[i]
 22927 00010DF1 4883FE00                	cmp rsi, 0
 22928 00010DF5 7410                    	je .L_lambda_simple_env_end_0207
 22929 00010DF7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22930 00010DFB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22931 00010DFF 48FFC6                  	inc rsi
 22932 00010E02 48FFC2                  	inc rdx
 22933 00010E05 EBEA                    	jmp .L_lambda_simple_env_loop_0207
 22934                                  .L_lambda_simple_env_end_0207:
 22935 00010E07 5B                      	pop rbx
 22936 00010E08 BE00000000              	mov rsi, 0
 22937                                  .L_lambda_simple_params_loop_0207:	; copy params
 22938 00010E0D 4883FE00                	cmp rsi, 0
 22939 00010E11 740E                    	je .L_lambda_simple_params_end_0207
 22940 00010E13 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22941 00010E18 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22942 00010E1C 48FFC6                  	inc rsi
 22943 00010E1F EBEC                    	jmp .L_lambda_simple_params_loop_0207
 22944                                  .L_lambda_simple_params_end_0207:
 22945 00010E21 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22946 00010E24 4889C3                  	mov rbx, rax
 22947 00010E27 58                      	pop rax
 22948 00010E28 C60004                  	mov byte [rax], T_closure
 22949 00010E2B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22950 00010E2F 48C74009[3C0E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0207
 22951 00010E37 E984000000              	jmp .L_lambda_simple_end_0207
 22952                                  .L_lambda_simple_code_0207:	; lambda-simple body
 22953 00010E3C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22954 00010E42 740B                    	je .L_lambda_simple_arity_check_ok_0207
 22955 00010E44 FF742410                	push qword [rsp + 8 * 2]
 22956 00010E48 6A01                    	push 1
 22957 00010E4A E90B450000              	jmp L_error_incorrect_arity_simple
 22958                                  .L_lambda_simple_arity_check_ok_0207:
 22959 00010E4F C8000000                	enter 0, 0
 22960                                  	; Initiating tail-call optimization
 22961 00010E53 488B4520                	mov rax, PARAM(0)	; param x
 22962 00010E57 50                      	push rax
 22963 00010E58 48B8-                   	mov rax, L_constants + 2135
 22963 00010E5A [5708000000000000] 
 22964 00010E62 50                      	push rax
 22965 00010E63 6A02                    	push 2	; Number of arguments
 22966 00010E65 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 22967 00010E6D 803805                  	cmp byte [rax], T_undefined
 22968 00010E70 0F84FE430000            	je L_error_fvar_undefined
 22969 00010E76 803804                  	cmp byte [rax], T_closure
 22970 00010E79 0F8579440000            	jne L_error_non_closure
 22971 00010E7F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22972 00010E82 FF7508                  	push qword [rbp + 8]
 22973 00010E85 FF7500                  	push qword [rbp]
 22974 00010E88 41BA06000000            	mov r10, 2 + 4
 22975 00010E8E 4C8B4518                	mov r8, COUNT
 22976 00010E92 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 22977 00010E97 4C8D4DF8                	lea r9, [rbp - 8]
 22978                                  .L_tc_recycle_frame_loop_028b:
 22979 00010E9B 4983FA00                	cmp r10, 0
 22980 00010E9F 7413                    	je .L_tc_recycle_frame_done_028b
 22981 00010EA1 4D8B19                  	mov r11, qword [r9]
 22982 00010EA4 4D8918                  	mov qword [r8], r11
 22983 00010EA7 49FFCA                  	dec r10
 22984 00010EAA 4983E808                	sub r8, 8
 22985 00010EAE 4983E908                	sub r9, 8
 22986 00010EB2 EBE7                    	jmp .L_tc_recycle_frame_loop_028b
 22987                                  .L_tc_recycle_frame_done_028b:
 22988 00010EB4 498D6008                	lea rsp, [r8 + 8]
 22989 00010EB8 5D                      	pop rbp
 22990 00010EB9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22991 00010EBC C9                      	leave
 22992 00010EBD C21800                  	ret AND_KILL_FRAME(1)
 22993                                  .L_lambda_simple_end_0207:	; new closure is in rax
 22994 00010EC0 48890425[47150000]      	mov qword [free_var_112], rax
 22995 00010EC8 48B8-                   	mov rax, sob_void
 22995 00010ECA [0000000000000000] 
 22996                                  
 22997 00010ED2 4889C7                  	mov rdi, rax
 22998 00010ED5 E81C470000              	call print_sexpr_if_not_void
 22999 00010EDA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23000 00010EDF E8BD440000              	call malloc
 23001 00010EE4 50                      	push rax
 23002 00010EE5 BF00000000              	mov rdi, 8 * 0	; new rib
 23003 00010EEA E8B2440000              	call malloc
 23004 00010EEF 50                      	push rax
 23005 00010EF0 BF08000000              	mov rdi, 8 * 1	; extended env
 23006 00010EF5 E8A7440000              	call malloc
 23007 00010EFA 488B7D10                	mov rdi, ENV
 23008 00010EFE BE00000000              	mov rsi, 0
 23009 00010F03 BA01000000              	mov rdx, 1
 23010                                  .L_lambda_simple_env_loop_0208:	; ext_env[i + 1] <-- env[i]
 23011 00010F08 4883FE00                	cmp rsi, 0
 23012 00010F0C 7410                    	je .L_lambda_simple_env_end_0208
 23013 00010F0E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23014 00010F12 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23015 00010F16 48FFC6                  	inc rsi
 23016 00010F19 48FFC2                  	inc rdx
 23017 00010F1C EBEA                    	jmp .L_lambda_simple_env_loop_0208
 23018                                  .L_lambda_simple_env_end_0208:
 23019 00010F1E 5B                      	pop rbx
 23020 00010F1F BE00000000              	mov rsi, 0
 23021                                  .L_lambda_simple_params_loop_0208:	; copy params
 23022 00010F24 4883FE00                	cmp rsi, 0
 23023 00010F28 740E                    	je .L_lambda_simple_params_end_0208
 23024 00010F2A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23025 00010F2F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23026 00010F33 48FFC6                  	inc rsi
 23027 00010F36 EBEC                    	jmp .L_lambda_simple_params_loop_0208
 23028                                  .L_lambda_simple_params_end_0208:
 23029 00010F38 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23030 00010F3B 4889C3                  	mov rbx, rax
 23031 00010F3E 58                      	pop rax
 23032 00010F3F C60004                  	mov byte [rax], T_closure
 23033 00010F42 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23034 00010F46 48C74009[530F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0208
 23035 00010F4E E984000000              	jmp .L_lambda_simple_end_0208
 23036                                  .L_lambda_simple_code_0208:	; lambda-simple body
 23037 00010F53 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23038 00010F59 740B                    	je .L_lambda_simple_arity_check_ok_0208
 23039 00010F5B FF742410                	push qword [rsp + 8 * 2]
 23040 00010F5F 6A01                    	push 1
 23041 00010F61 E9F4430000              	jmp L_error_incorrect_arity_simple
 23042                                  .L_lambda_simple_arity_check_ok_0208:
 23043 00010F66 C8000000                	enter 0, 0
 23044                                  	; Initiating tail-call optimization
 23045 00010F6A 48B8-                   	mov rax, L_constants + 2135
 23045 00010F6C [5708000000000000] 
 23046 00010F74 50                      	push rax
 23047 00010F75 488B4520                	mov rax, PARAM(0)	; param x
 23048 00010F79 50                      	push rax
 23049 00010F7A 6A02                    	push 2	; Number of arguments
 23050 00010F7C 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 23051 00010F84 803805                  	cmp byte [rax], T_undefined
 23052 00010F87 0F84E7420000            	je L_error_fvar_undefined
 23053 00010F8D 803804                  	cmp byte [rax], T_closure
 23054 00010F90 0F8562430000            	jne L_error_non_closure
 23055 00010F96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23056 00010F99 FF7508                  	push qword [rbp + 8]
 23057 00010F9C FF7500                  	push qword [rbp]
 23058 00010F9F 41BA06000000            	mov r10, 2 + 4
 23059 00010FA5 4C8B4518                	mov r8, COUNT
 23060 00010FA9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23061 00010FAE 4C8D4DF8                	lea r9, [rbp - 8]
 23062                                  .L_tc_recycle_frame_loop_028c:
 23063 00010FB2 4983FA00                	cmp r10, 0
 23064 00010FB6 7413                    	je .L_tc_recycle_frame_done_028c
 23065 00010FB8 4D8B19                  	mov r11, qword [r9]
 23066 00010FBB 4D8918                  	mov qword [r8], r11
 23067 00010FBE 49FFCA                  	dec r10
 23068 00010FC1 4983E808                	sub r8, 8
 23069 00010FC5 4983E908                	sub r9, 8
 23070 00010FC9 EBE7                    	jmp .L_tc_recycle_frame_loop_028c
 23071                                  .L_tc_recycle_frame_done_028c:
 23072 00010FCB 498D6008                	lea rsp, [r8 + 8]
 23073 00010FCF 5D                      	pop rbp
 23074 00010FD0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23075 00010FD3 C9                      	leave
 23076 00010FD4 C21800                  	ret AND_KILL_FRAME(1)
 23077                                  .L_lambda_simple_end_0208:	; new closure is in rax
 23078 00010FD7 48890425[BF140000]      	mov qword [free_var_104], rax
 23079 00010FDF 48B8-                   	mov rax, sob_void
 23079 00010FE1 [0000000000000000] 
 23080                                  
 23081 00010FE9 4889C7                  	mov rdi, rax
 23082 00010FEC E805460000              	call print_sexpr_if_not_void
 23083 00010FF1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23084 00010FF6 E8A6430000              	call malloc
 23085 00010FFB 50                      	push rax
 23086 00010FFC BF00000000              	mov rdi, 8 * 0	; new rib
 23087 00011001 E89B430000              	call malloc
 23088 00011006 50                      	push rax
 23089 00011007 BF08000000              	mov rdi, 8 * 1	; extended env
 23090 0001100C E890430000              	call malloc
 23091 00011011 488B7D10                	mov rdi, ENV
 23092 00011015 BE00000000              	mov rsi, 0
 23093 0001101A BA01000000              	mov rdx, 1
 23094                                  .L_lambda_simple_env_loop_0209:	; ext_env[i + 1] <-- env[i]
 23095 0001101F 4883FE00                	cmp rsi, 0
 23096 00011023 7410                    	je .L_lambda_simple_env_end_0209
 23097 00011025 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23098 00011029 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23099 0001102D 48FFC6                  	inc rsi
 23100 00011030 48FFC2                  	inc rdx
 23101 00011033 EBEA                    	jmp .L_lambda_simple_env_loop_0209
 23102                                  .L_lambda_simple_env_end_0209:
 23103 00011035 5B                      	pop rbx
 23104 00011036 BE00000000              	mov rsi, 0
 23105                                  .L_lambda_simple_params_loop_0209:	; copy params
 23106 0001103B 4883FE00                	cmp rsi, 0
 23107 0001103F 740E                    	je .L_lambda_simple_params_end_0209
 23108 00011041 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23109 00011046 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23110 0001104A 48FFC6                  	inc rsi
 23111 0001104D EBEC                    	jmp .L_lambda_simple_params_loop_0209
 23112                                  .L_lambda_simple_params_end_0209:
 23113 0001104F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23114 00011052 4889C3                  	mov rbx, rax
 23115 00011055 58                      	pop rax
 23116 00011056 C60004                  	mov byte [rax], T_closure
 23117 00011059 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23118 0001105D 48C74009[6A100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0209
 23119 00011065 E9A7000000              	jmp .L_lambda_simple_end_0209
 23120                                  .L_lambda_simple_code_0209:	; lambda-simple body
 23121 0001106A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23122 00011070 740B                    	je .L_lambda_simple_arity_check_ok_0209
 23123 00011072 FF742410                	push qword [rsp + 8 * 2]
 23124 00011076 6A01                    	push 1
 23125 00011078 E9DD420000              	jmp L_error_incorrect_arity_simple
 23126                                  .L_lambda_simple_arity_check_ok_0209:
 23127 0001107D C8000000                	enter 0, 0
 23128                                  	; Initiating tail-call optimization
 23129                                  	; preparing a non-tail-call
 23130 00011081 48B8-                   	mov rax, L_constants + 3190
 23130 00011083 [760C000000000000] 
 23131 0001108B 50                      	push rax
 23132 0001108C 488B4520                	mov rax, PARAM(0)	; param n
 23133 00011090 50                      	push rax
 23134 00011091 6A02                    	push 2	; arg count
 23135 00011093 488B0425[9C150000]      	mov rax, qword [free_var_117]	; free var remainder
 23136 0001109B 803805                  	cmp byte [rax], T_undefined
 23137 0001109E 0F84D0410000            	je L_error_fvar_undefined
 23138 000110A4 803804                  	cmp byte [rax], T_closure
 23139 000110A7 0F854B420000            	jne L_error_non_closure
 23140 000110AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 23141 000110B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23142 000110B3 50                      	push rax
 23143 000110B4 6A01                    	push 1	; Number of arguments
 23144 000110B6 488B0425[DE170000]      	mov rax, qword [free_var_151]	; free var zero?
 23145 000110BE 803805                  	cmp byte [rax], T_undefined
 23146 000110C1 0F84AD410000            	je L_error_fvar_undefined
 23147 000110C7 803804                  	cmp byte [rax], T_closure
 23148 000110CA 0F8528420000            	jne L_error_non_closure
 23149 000110D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23150 000110D3 FF7508                  	push qword [rbp + 8]
 23151 000110D6 FF7500                  	push qword [rbp]
 23152 000110D9 41BA05000000            	mov r10, 1 + 4
 23153 000110DF 4C8B4518                	mov r8, COUNT
 23154 000110E3 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23155 000110E8 4C8D4DF8                	lea r9, [rbp - 8]
 23156                                  .L_tc_recycle_frame_loop_028d:
 23157 000110EC 4983FA00                	cmp r10, 0
 23158 000110F0 7413                    	je .L_tc_recycle_frame_done_028d
 23159 000110F2 4D8B19                  	mov r11, qword [r9]
 23160 000110F5 4D8918                  	mov qword [r8], r11
 23161 000110F8 49FFCA                  	dec r10
 23162 000110FB 4983E808                	sub r8, 8
 23163 000110FF 4983E908                	sub r9, 8
 23164 00011103 EBE7                    	jmp .L_tc_recycle_frame_loop_028d
 23165                                  .L_tc_recycle_frame_done_028d:
 23166 00011105 498D6008                	lea rsp, [r8 + 8]
 23167 00011109 5D                      	pop rbp
 23168 0001110A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23169 0001110D C9                      	leave
 23170 0001110E C21800                  	ret AND_KILL_FRAME(1)
 23171                                  .L_lambda_simple_end_0209:	; new closure is in rax
 23172 00011111 48890425[5A130000]      	mov qword [free_var_83], rax
 23173 00011119 48B8-                   	mov rax, sob_void
 23173 0001111B [0000000000000000] 
 23174                                  
 23175 00011123 4889C7                  	mov rdi, rax
 23176 00011126 E8CB440000              	call print_sexpr_if_not_void
 23177 0001112B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23178 00011130 E86C420000              	call malloc
 23179 00011135 50                      	push rax
 23180 00011136 BF00000000              	mov rdi, 8 * 0	; new rib
 23181 0001113B E861420000              	call malloc
 23182 00011140 50                      	push rax
 23183 00011141 BF08000000              	mov rdi, 8 * 1	; extended env
 23184 00011146 E856420000              	call malloc
 23185 0001114B 488B7D10                	mov rdi, ENV
 23186 0001114F BE00000000              	mov rsi, 0
 23187 00011154 BA01000000              	mov rdx, 1
 23188                                  .L_lambda_simple_env_loop_020a:	; ext_env[i + 1] <-- env[i]
 23189 00011159 4883FE00                	cmp rsi, 0
 23190 0001115D 7410                    	je .L_lambda_simple_env_end_020a
 23191 0001115F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23192 00011163 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23193 00011167 48FFC6                  	inc rsi
 23194 0001116A 48FFC2                  	inc rdx
 23195 0001116D EBEA                    	jmp .L_lambda_simple_env_loop_020a
 23196                                  .L_lambda_simple_env_end_020a:
 23197 0001116F 5B                      	pop rbx
 23198 00011170 BE00000000              	mov rsi, 0
 23199                                  .L_lambda_simple_params_loop_020a:	; copy params
 23200 00011175 4883FE00                	cmp rsi, 0
 23201 00011179 740E                    	je .L_lambda_simple_params_end_020a
 23202 0001117B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23203 00011180 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23204 00011184 48FFC6                  	inc rsi
 23205 00011187 EBEC                    	jmp .L_lambda_simple_params_loop_020a
 23206                                  .L_lambda_simple_params_end_020a:
 23207 00011189 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23208 0001118C 4889C3                  	mov rbx, rax
 23209 0001118F 58                      	pop rax
 23210 00011190 C60004                  	mov byte [rax], T_closure
 23211 00011193 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23212 00011197 48C74009[A4110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020a
 23213 0001119F E99C000000              	jmp .L_lambda_simple_end_020a
 23214                                  .L_lambda_simple_code_020a:	; lambda-simple body
 23215 000111A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23216 000111AA 740B                    	je .L_lambda_simple_arity_check_ok_020a
 23217 000111AC FF742410                	push qword [rsp + 8 * 2]
 23218 000111B0 6A01                    	push 1
 23219 000111B2 E9A3410000              	jmp L_error_incorrect_arity_simple
 23220                                  .L_lambda_simple_arity_check_ok_020a:
 23221 000111B7 C8000000                	enter 0, 0
 23222                                  	; Initiating tail-call optimization
 23223                                  	; preparing a non-tail-call
 23224 000111BB 488B4520                	mov rax, PARAM(0)	; param n
 23225 000111BF 50                      	push rax
 23226 000111C0 6A01                    	push 1	; arg count
 23227 000111C2 488B0425[5A130000]      	mov rax, qword [free_var_83]	; free var even?
 23228 000111CA 803805                  	cmp byte [rax], T_undefined
 23229 000111CD 0F84A1400000            	je L_error_fvar_undefined
 23230 000111D3 803804                  	cmp byte [rax], T_closure
 23231 000111D6 0F851C410000            	jne L_error_non_closure
 23232 000111DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 23233 000111DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 23234 000111E2 50                      	push rax
 23235 000111E3 6A01                    	push 1	; Number of arguments
 23236 000111E5 488B0425[E1140000]      	mov rax, qword [free_var_106]	; free var not
 23237 000111ED 803805                  	cmp byte [rax], T_undefined
 23238 000111F0 0F847E400000            	je L_error_fvar_undefined
 23239 000111F6 803804                  	cmp byte [rax], T_closure
 23240 000111F9 0F85F9400000            	jne L_error_non_closure
 23241 000111FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23242 00011202 FF7508                  	push qword [rbp + 8]
 23243 00011205 FF7500                  	push qword [rbp]
 23244 00011208 41BA05000000            	mov r10, 1 + 4
 23245 0001120E 4C8B4518                	mov r8, COUNT
 23246 00011212 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23247 00011217 4C8D4DF8                	lea r9, [rbp - 8]
 23248                                  .L_tc_recycle_frame_loop_028e:
 23249 0001121B 4983FA00                	cmp r10, 0
 23250 0001121F 7413                    	je .L_tc_recycle_frame_done_028e
 23251 00011221 4D8B19                  	mov r11, qword [r9]
 23252 00011224 4D8918                  	mov qword [r8], r11
 23253 00011227 49FFCA                  	dec r10
 23254 0001122A 4983E808                	sub r8, 8
 23255 0001122E 4983E908                	sub r9, 8
 23256 00011232 EBE7                    	jmp .L_tc_recycle_frame_loop_028e
 23257                                  .L_tc_recycle_frame_done_028e:
 23258 00011234 498D6008                	lea rsp, [r8 + 8]
 23259 00011238 5D                      	pop rbp
 23260 00011239 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23261 0001123C C9                      	leave
 23262 0001123D C21800                  	ret AND_KILL_FRAME(1)
 23263                                  .L_lambda_simple_end_020a:	; new closure is in rax
 23264 00011240 48890425[14150000]      	mov qword [free_var_109], rax
 23265 00011248 48B8-                   	mov rax, sob_void
 23265 0001124A [0000000000000000] 
 23266                                  
 23267 00011252 4889C7                  	mov rdi, rax
 23268 00011255 E89C430000              	call print_sexpr_if_not_void
 23269 0001125A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23270 0001125F E83D410000              	call malloc
 23271 00011264 50                      	push rax
 23272 00011265 BF00000000              	mov rdi, 8 * 0	; new rib
 23273 0001126A E832410000              	call malloc
 23274 0001126F 50                      	push rax
 23275 00011270 BF08000000              	mov rdi, 8 * 1	; extended env
 23276 00011275 E827410000              	call malloc
 23277 0001127A 488B7D10                	mov rdi, ENV
 23278 0001127E BE00000000              	mov rsi, 0
 23279 00011283 BA01000000              	mov rdx, 1
 23280                                  .L_lambda_simple_env_loop_020b:	; ext_env[i + 1] <-- env[i]
 23281 00011288 4883FE00                	cmp rsi, 0
 23282 0001128C 7410                    	je .L_lambda_simple_env_end_020b
 23283 0001128E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23284 00011292 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23285 00011296 48FFC6                  	inc rsi
 23286 00011299 48FFC2                  	inc rdx
 23287 0001129C EBEA                    	jmp .L_lambda_simple_env_loop_020b
 23288                                  .L_lambda_simple_env_end_020b:
 23289 0001129E 5B                      	pop rbx
 23290 0001129F BE00000000              	mov rsi, 0
 23291                                  .L_lambda_simple_params_loop_020b:	; copy params
 23292 000112A4 4883FE00                	cmp rsi, 0
 23293 000112A8 740E                    	je .L_lambda_simple_params_end_020b
 23294 000112AA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23295 000112AF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23296 000112B3 48FFC6                  	inc rsi
 23297 000112B6 EBEC                    	jmp .L_lambda_simple_params_loop_020b
 23298                                  .L_lambda_simple_params_end_020b:
 23299 000112B8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23300 000112BB 4889C3                  	mov rbx, rax
 23301 000112BE 58                      	pop rax
 23302 000112BF C60004                  	mov byte [rax], T_closure
 23303 000112C2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23304 000112C6 48C74009[D3120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020b
 23305 000112CE E9AE000000              	jmp .L_lambda_simple_end_020b
 23306                                  .L_lambda_simple_code_020b:	; lambda-simple body
 23307 000112D3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23308 000112D9 740B                    	je .L_lambda_simple_arity_check_ok_020b
 23309 000112DB FF742410                	push qword [rsp + 8 * 2]
 23310 000112DF 6A01                    	push 1
 23311 000112E1 E974400000              	jmp L_error_incorrect_arity_simple
 23312                                  .L_lambda_simple_arity_check_ok_020b:
 23313 000112E6 C8000000                	enter 0, 0
 23314                                  	; preparing a non-tail-call
 23315 000112EA 488B4520                	mov rax, PARAM(0)	; param x
 23316 000112EE 50                      	push rax
 23317 000112EF 6A01                    	push 1	; arg count
 23318 000112F1 488B0425[BF140000]      	mov rax, qword [free_var_104]	; free var negative?
 23319 000112F9 803805                  	cmp byte [rax], T_undefined
 23320 000112FC 0F84723F0000            	je L_error_fvar_undefined
 23321 00011302 803804                  	cmp byte [rax], T_closure
 23322 00011305 0F85ED3F0000            	jne L_error_non_closure
 23323 0001130B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23324 0001130E FF5009                  	call SOB_CLOSURE_CODE(rax)
 23325 00011311 483D[02000000]          	cmp rax, sob_boolean_false
 23326 00011317 7460                    	je .L_if_else_017b
 23327                                  	; Initiating tail-call optimization
 23328 00011319 488B4520                	mov rax, PARAM(0)	; param x
 23329 0001131D 50                      	push rax
 23330 0001131E 6A01                    	push 1	; Number of arguments
 23331 00011320 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 23332 00011328 803805                  	cmp byte [rax], T_undefined
 23333 0001132B 0F84433F0000            	je L_error_fvar_undefined
 23334 00011331 803804                  	cmp byte [rax], T_closure
 23335 00011334 0F85BE3F0000            	jne L_error_non_closure
 23336 0001133A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23337 0001133D FF7508                  	push qword [rbp + 8]
 23338 00011340 FF7500                  	push qword [rbp]
 23339 00011343 41BA05000000            	mov r10, 1 + 4
 23340 00011349 4C8B4518                	mov r8, COUNT
 23341 0001134D 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23342 00011352 4C8D4DF8                	lea r9, [rbp - 8]
 23343                                  .L_tc_recycle_frame_loop_028f:
 23344 00011356 4983FA00                	cmp r10, 0
 23345 0001135A 7413                    	je .L_tc_recycle_frame_done_028f
 23346 0001135C 4D8B19                  	mov r11, qword [r9]
 23347 0001135F 4D8918                  	mov qword [r8], r11
 23348 00011362 49FFCA                  	dec r10
 23349 00011365 4983E808                	sub r8, 8
 23350 00011369 4983E908                	sub r9, 8
 23351 0001136D EBE7                    	jmp .L_tc_recycle_frame_loop_028f
 23352                                  .L_tc_recycle_frame_done_028f:
 23353 0001136F 498D6008                	lea rsp, [r8 + 8]
 23354 00011373 5D                      	pop rbp
 23355 00011374 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23356 00011377 EB04                    	jmp .L_if_end_017b
 23357                                  .L_if_else_017b:
 23358 00011379 488B4520                	mov rax, PARAM(0)	; param x
 23359                                  .L_if_end_017b:
 23360 0001137D C9                      	leave
 23361 0001137E C21800                  	ret AND_KILL_FRAME(1)
 23362                                  .L_lambda_simple_end_020b:	; new closure is in rax
 23363 00011381 48890425[D50F0000]      	mov qword [free_var_30], rax
 23364 00011389 48B8-                   	mov rax, sob_void
 23364 0001138B [0000000000000000] 
 23365                                  
 23366 00011393 4889C7                  	mov rdi, rax
 23367 00011396 E85B420000              	call print_sexpr_if_not_void
 23368 0001139B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23369 000113A0 E8FC3F0000              	call malloc
 23370 000113A5 50                      	push rax
 23371 000113A6 BF00000000              	mov rdi, 8 * 0	; new rib
 23372 000113AB E8F13F0000              	call malloc
 23373 000113B0 50                      	push rax
 23374 000113B1 BF08000000              	mov rdi, 8 * 1	; extended env
 23375 000113B6 E8E63F0000              	call malloc
 23376 000113BB 488B7D10                	mov rdi, ENV
 23377 000113BF BE00000000              	mov rsi, 0
 23378 000113C4 BA01000000              	mov rdx, 1
 23379                                  .L_lambda_simple_env_loop_020c:	; ext_env[i + 1] <-- env[i]
 23380 000113C9 4883FE00                	cmp rsi, 0
 23381 000113CD 7410                    	je .L_lambda_simple_env_end_020c
 23382 000113CF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23383 000113D3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23384 000113D7 48FFC6                  	inc rsi
 23385 000113DA 48FFC2                  	inc rdx
 23386 000113DD EBEA                    	jmp .L_lambda_simple_env_loop_020c
 23387                                  .L_lambda_simple_env_end_020c:
 23388 000113DF 5B                      	pop rbx
 23389 000113E0 BE00000000              	mov rsi, 0
 23390                                  .L_lambda_simple_params_loop_020c:	; copy params
 23391 000113E5 4883FE00                	cmp rsi, 0
 23392 000113E9 740E                    	je .L_lambda_simple_params_end_020c
 23393 000113EB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23394 000113F0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23395 000113F4 48FFC6                  	inc rsi
 23396 000113F7 EBEC                    	jmp .L_lambda_simple_params_loop_020c
 23397                                  .L_lambda_simple_params_end_020c:
 23398 000113F9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23399 000113FC 4889C3                  	mov rbx, rax
 23400 000113FF 58                      	pop rax
 23401 00011400 C60004                  	mov byte [rax], T_closure
 23402 00011403 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23403 00011407 48C74009[14140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020c
 23404 0001140F E9C7060000              	jmp .L_lambda_simple_end_020c
 23405                                  .L_lambda_simple_code_020c:	; lambda-simple body
 23406 00011414 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23407 0001141A 740B                    	je .L_lambda_simple_arity_check_ok_020c
 23408 0001141C FF742410                	push qword [rsp + 8 * 2]
 23409 00011420 6A02                    	push 2
 23410 00011422 E9333F0000              	jmp L_error_incorrect_arity_simple
 23411                                  .L_lambda_simple_arity_check_ok_020c:
 23412 00011427 C8000000                	enter 0, 0
 23413                                  	; preparing a non-tail-call
 23414 0001142B 488B4520                	mov rax, PARAM(0)	; param e1
 23415 0001142F 50                      	push rax
 23416 00011430 6A01                    	push 1	; arg count
 23417 00011432 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
 23418 0001143A 803805                  	cmp byte [rax], T_undefined
 23419 0001143D 0F84313E0000            	je L_error_fvar_undefined
 23420 00011443 803804                  	cmp byte [rax], T_closure
 23421 00011446 0F85AC3E0000            	jne L_error_non_closure
 23422 0001144C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23423 0001144F FF5009                  	call SOB_CLOSURE_CODE(rax)
 23424 00011452 483D[02000000]          	cmp rax, sob_boolean_false
 23425 00011458 7429                    	je .L_if_else_017c
 23426                                  	; preparing a non-tail-call
 23427 0001145A 488B4528                	mov rax, PARAM(1)	; param e2
 23428 0001145E 50                      	push rax
 23429 0001145F 6A01                    	push 1	; arg count
 23430 00011461 488B0425[36150000]      	mov rax, qword [free_var_111]	; free var pair?
 23431 00011469 803805                  	cmp byte [rax], T_undefined
 23432 0001146C 0F84023E0000            	je L_error_fvar_undefined
 23433 00011472 803804                  	cmp byte [rax], T_closure
 23434 00011475 0F857D3E0000            	jne L_error_non_closure
 23435 0001147B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23436 0001147E FF5009                  	call SOB_CLOSURE_CODE(rax)
 23437 00011481 EB0A                    	jmp .L_if_end_017c
 23438                                  .L_if_else_017c:
 23439 00011483 48B8-                   	mov rax, L_constants + 2
 23439 00011485 [0200000000000000] 
 23440                                  .L_if_end_017c:
 23441 0001148D 483D[02000000]          	cmp rax, sob_boolean_false
 23442 00011493 0F8438010000            	je .L_if_else_0188
 23443                                  	; preparing a non-tail-call
 23444                                  	; preparing a non-tail-call
 23445 00011499 488B4528                	mov rax, PARAM(1)	; param e2
 23446 0001149D 50                      	push rax
 23447 0001149E 6A01                    	push 1	; arg count
 23448 000114A0 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 23449 000114A8 803805                  	cmp byte [rax], T_undefined
 23450 000114AB 0F84C33D0000            	je L_error_fvar_undefined
 23451 000114B1 803804                  	cmp byte [rax], T_closure
 23452 000114B4 0F853E3E0000            	jne L_error_non_closure
 23453 000114BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23454 000114BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 23455 000114C0 50                      	push rax
 23456                                  	; preparing a non-tail-call
 23457 000114C1 488B4520                	mov rax, PARAM(0)	; param e1
 23458 000114C5 50                      	push rax
 23459 000114C6 6A01                    	push 1	; arg count
 23460 000114C8 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 23461 000114D0 803805                  	cmp byte [rax], T_undefined
 23462 000114D3 0F849B3D0000            	je L_error_fvar_undefined
 23463 000114D9 803804                  	cmp byte [rax], T_closure
 23464 000114DC 0F85163E0000            	jne L_error_non_closure
 23465 000114E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23466 000114E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23467 000114E8 50                      	push rax
 23468 000114E9 6A02                    	push 2	; arg count
 23469 000114EB 488B0425[38130000]      	mov rax, qword [free_var_81]	; free var equal?
 23470 000114F3 803805                  	cmp byte [rax], T_undefined
 23471 000114F6 0F84783D0000            	je L_error_fvar_undefined
 23472 000114FC 803804                  	cmp byte [rax], T_closure
 23473 000114FF 0F85F33D0000            	jne L_error_non_closure
 23474 00011505 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23475 00011508 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23476 0001150B 483D[02000000]          	cmp rax, sob_boolean_false
 23477 00011511 0F84AB000000            	je .L_if_else_017d
 23478                                  	; Initiating tail-call optimization
 23479                                  	; preparing a non-tail-call
 23480 00011517 488B4528                	mov rax, PARAM(1)	; param e2
 23481 0001151B 50                      	push rax
 23482 0001151C 6A01                    	push 1	; arg count
 23483 0001151E 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 23484 00011526 803805                  	cmp byte [rax], T_undefined
 23485 00011529 0F84453D0000            	je L_error_fvar_undefined
 23486 0001152F 803804                  	cmp byte [rax], T_closure
 23487 00011532 0F85C03D0000            	jne L_error_non_closure
 23488 00011538 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23489 0001153B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23490 0001153E 50                      	push rax
 23491                                  	; preparing a non-tail-call
 23492 0001153F 488B4520                	mov rax, PARAM(0)	; param e1
 23493 00011543 50                      	push rax
 23494 00011544 6A01                    	push 1	; arg count
 23495 00011546 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 23496 0001154E 803805                  	cmp byte [rax], T_undefined
 23497 00011551 0F841D3D0000            	je L_error_fvar_undefined
 23498 00011557 803804                  	cmp byte [rax], T_closure
 23499 0001155A 0F85983D0000            	jne L_error_non_closure
 23500 00011560 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23501 00011563 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23502 00011566 50                      	push rax
 23503 00011567 6A02                    	push 2	; Number of arguments
 23504 00011569 488B0425[38130000]      	mov rax, qword [free_var_81]	; free var equal?
 23505 00011571 803805                  	cmp byte [rax], T_undefined
 23506 00011574 0F84FA3C0000            	je L_error_fvar_undefined
 23507 0001157A 803804                  	cmp byte [rax], T_closure
 23508 0001157D 0F85753D0000            	jne L_error_non_closure
 23509 00011583 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23510 00011586 FF7508                  	push qword [rbp + 8]
 23511 00011589 FF7500                  	push qword [rbp]
 23512 0001158C 41BA06000000            	mov r10, 2 + 4
 23513 00011592 4C8B4518                	mov r8, COUNT
 23514 00011596 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23515 0001159B 4C8D4DF8                	lea r9, [rbp - 8]
 23516                                  .L_tc_recycle_frame_loop_0290:
 23517 0001159F 4983FA00                	cmp r10, 0
 23518 000115A3 7413                    	je .L_tc_recycle_frame_done_0290
 23519 000115A5 4D8B19                  	mov r11, qword [r9]
 23520 000115A8 4D8918                  	mov qword [r8], r11
 23521 000115AB 49FFCA                  	dec r10
 23522 000115AE 4983E808                	sub r8, 8
 23523 000115B2 4983E908                	sub r9, 8
 23524 000115B6 EBE7                    	jmp .L_tc_recycle_frame_loop_0290
 23525                                  .L_tc_recycle_frame_done_0290:
 23526 000115B8 498D6008                	lea rsp, [r8 + 8]
 23527 000115BC 5D                      	pop rbp
 23528 000115BD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23529 000115C0 EB0A                    	jmp .L_if_end_017d
 23530                                  .L_if_else_017d:
 23531 000115C2 48B8-                   	mov rax, L_constants + 2
 23531 000115C4 [0200000000000000] 
 23532                                  .L_if_end_017d:
 23533 000115CC E906050000              	jmp .L_if_end_0188
 23534                                  .L_if_else_0188:
 23535                                  	; preparing a non-tail-call
 23536 000115D1 488B4520                	mov rax, PARAM(0)	; param e1
 23537 000115D5 50                      	push rax
 23538 000115D6 6A01                    	push 1	; arg count
 23539 000115D8 488B0425[AB170000]      	mov rax, qword [free_var_148]	; free var vector?
 23540 000115E0 803805                  	cmp byte [rax], T_undefined
 23541 000115E3 0F848B3C0000            	je L_error_fvar_undefined
 23542 000115E9 803804                  	cmp byte [rax], T_closure
 23543 000115EC 0F85063D0000            	jne L_error_non_closure
 23544 000115F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23545 000115F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23546 000115F8 483D[02000000]          	cmp rax, sob_boolean_false
 23547 000115FE 0F84AF000000            	je .L_if_else_017f
 23548                                  	; preparing a non-tail-call
 23549 00011604 488B4528                	mov rax, PARAM(1)	; param e2
 23550 00011608 50                      	push rax
 23551 00011609 6A01                    	push 1	; arg count
 23552 0001160B 488B0425[AB170000]      	mov rax, qword [free_var_148]	; free var vector?
 23553 00011613 803805                  	cmp byte [rax], T_undefined
 23554 00011616 0F84583C0000            	je L_error_fvar_undefined
 23555 0001161C 803804                  	cmp byte [rax], T_closure
 23556 0001161F 0F85D33C0000            	jne L_error_non_closure
 23557 00011625 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23558 00011628 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23559 0001162B 483D[02000000]          	cmp rax, sob_boolean_false
 23560 00011631 7474                    	je .L_if_else_017e
 23561                                  	; preparing a non-tail-call
 23562                                  	; preparing a non-tail-call
 23563 00011633 488B4528                	mov rax, PARAM(1)	; param e2
 23564 00011637 50                      	push rax
 23565 00011638 6A01                    	push 1	; arg count
 23566 0001163A 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23567 00011642 803805                  	cmp byte [rax], T_undefined
 23568 00011645 0F84293C0000            	je L_error_fvar_undefined
 23569 0001164B 803804                  	cmp byte [rax], T_closure
 23570 0001164E 0F85A43C0000            	jne L_error_non_closure
 23571 00011654 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23572 00011657 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23573 0001165A 50                      	push rax
 23574                                  	; preparing a non-tail-call
 23575 0001165B 488B4520                	mov rax, PARAM(0)	; param e1
 23576 0001165F 50                      	push rax
 23577 00011660 6A01                    	push 1	; arg count
 23578 00011662 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23579 0001166A 803805                  	cmp byte [rax], T_undefined
 23580 0001166D 0F84013C0000            	je L_error_fvar_undefined
 23581 00011673 803804                  	cmp byte [rax], T_closure
 23582 00011676 0F857C3C0000            	jne L_error_non_closure
 23583 0001167C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23584 0001167F FF5009                  	call SOB_CLOSURE_CODE(rax)
 23585 00011682 50                      	push rax
 23586 00011683 6A02                    	push 2	; arg count
 23587 00011685 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 23588 0001168D 803805                  	cmp byte [rax], T_undefined
 23589 00011690 0F84DE3B0000            	je L_error_fvar_undefined
 23590 00011696 803804                  	cmp byte [rax], T_closure
 23591 00011699 0F85593C0000            	jne L_error_non_closure
 23592 0001169F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23593 000116A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23594 000116A5 EB0A                    	jmp .L_if_end_017e
 23595                                  .L_if_else_017e:
 23596 000116A7 48B8-                   	mov rax, L_constants + 2
 23596 000116A9 [0200000000000000] 
 23597                                  .L_if_end_017e:
 23598 000116B1 EB0A                    	jmp .L_if_end_017f
 23599                                  .L_if_else_017f:
 23600 000116B3 48B8-                   	mov rax, L_constants + 2
 23600 000116B5 [0200000000000000] 
 23601                                  .L_if_end_017f:
 23602 000116BD 483D[02000000]          	cmp rax, sob_boolean_false
 23603 000116C3 0F84AE000000            	je .L_if_else_0187
 23604                                  	; Initiating tail-call optimization
 23605                                  	; preparing a non-tail-call
 23606 000116C9 488B4528                	mov rax, PARAM(1)	; param e2
 23607 000116CD 50                      	push rax
 23608 000116CE 6A01                    	push 1	; arg count
 23609 000116D0 488B0425[34170000]      	mov rax, qword [free_var_141]	; free var vector->list
 23610 000116D8 803805                  	cmp byte [rax], T_undefined
 23611 000116DB 0F84933B0000            	je L_error_fvar_undefined
 23612 000116E1 803804                  	cmp byte [rax], T_closure
 23613 000116E4 0F850E3C0000            	jne L_error_non_closure
 23614 000116EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23615 000116ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 23616 000116F0 50                      	push rax
 23617                                  	; preparing a non-tail-call
 23618 000116F1 488B4520                	mov rax, PARAM(0)	; param e1
 23619 000116F5 50                      	push rax
 23620 000116F6 6A01                    	push 1	; arg count
 23621 000116F8 488B0425[34170000]      	mov rax, qword [free_var_141]	; free var vector->list
 23622 00011700 803805                  	cmp byte [rax], T_undefined
 23623 00011703 0F846B3B0000            	je L_error_fvar_undefined
 23624 00011709 803804                  	cmp byte [rax], T_closure
 23625 0001170C 0F85E63B0000            	jne L_error_non_closure
 23626 00011712 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23627 00011715 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23628 00011718 50                      	push rax
 23629 00011719 6A02                    	push 2	; Number of arguments
 23630 0001171B 488B0425[38130000]      	mov rax, qword [free_var_81]	; free var equal?
 23631 00011723 803805                  	cmp byte [rax], T_undefined
 23632 00011726 0F84483B0000            	je L_error_fvar_undefined
 23633 0001172C 803804                  	cmp byte [rax], T_closure
 23634 0001172F 0F85C33B0000            	jne L_error_non_closure
 23635 00011735 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23636 00011738 FF7508                  	push qword [rbp + 8]
 23637 0001173B FF7500                  	push qword [rbp]
 23638 0001173E 41BA06000000            	mov r10, 2 + 4
 23639 00011744 4C8B4518                	mov r8, COUNT
 23640 00011748 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23641 0001174D 4C8D4DF8                	lea r9, [rbp - 8]
 23642                                  .L_tc_recycle_frame_loop_0291:
 23643 00011751 4983FA00                	cmp r10, 0
 23644 00011755 7413                    	je .L_tc_recycle_frame_done_0291
 23645 00011757 4D8B19                  	mov r11, qword [r9]
 23646 0001175A 4D8918                  	mov qword [r8], r11
 23647 0001175D 49FFCA                  	dec r10
 23648 00011760 4983E808                	sub r8, 8
 23649 00011764 4983E908                	sub r9, 8
 23650 00011768 EBE7                    	jmp .L_tc_recycle_frame_loop_0291
 23651                                  .L_tc_recycle_frame_done_0291:
 23652 0001176A 498D6008                	lea rsp, [r8 + 8]
 23653 0001176E 5D                      	pop rbp
 23654 0001176F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23655 00011772 E960030000              	jmp .L_if_end_0187
 23656                                  .L_if_else_0187:
 23657                                  	; preparing a non-tail-call
 23658 00011777 488B4520                	mov rax, PARAM(0)	; param e1
 23659 0001177B 50                      	push rax
 23660 0001177C 6A01                    	push 1	; arg count
 23661 0001177E 488B0425[01170000]      	mov rax, qword [free_var_138]	; free var string?
 23662 00011786 803805                  	cmp byte [rax], T_undefined
 23663 00011789 0F84E53A0000            	je L_error_fvar_undefined
 23664 0001178F 803804                  	cmp byte [rax], T_closure
 23665 00011792 0F85603B0000            	jne L_error_non_closure
 23666 00011798 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23667 0001179B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23668 0001179E 483D[02000000]          	cmp rax, sob_boolean_false
 23669 000117A4 0F84AF000000            	je .L_if_else_0181
 23670                                  	; preparing a non-tail-call
 23671 000117AA 488B4528                	mov rax, PARAM(1)	; param e2
 23672 000117AE 50                      	push rax
 23673 000117AF 6A01                    	push 1	; arg count
 23674 000117B1 488B0425[01170000]      	mov rax, qword [free_var_138]	; free var string?
 23675 000117B9 803805                  	cmp byte [rax], T_undefined
 23676 000117BC 0F84B23A0000            	je L_error_fvar_undefined
 23677 000117C2 803804                  	cmp byte [rax], T_closure
 23678 000117C5 0F852D3B0000            	jne L_error_non_closure
 23679 000117CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23680 000117CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23681 000117D1 483D[02000000]          	cmp rax, sob_boolean_false
 23682 000117D7 7474                    	je .L_if_else_0180
 23683                                  	; preparing a non-tail-call
 23684                                  	; preparing a non-tail-call
 23685 000117D9 488B4528                	mov rax, PARAM(1)	; param e2
 23686 000117DD 50                      	push rax
 23687 000117DE 6A01                    	push 1	; arg count
 23688 000117E0 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 23689 000117E8 803805                  	cmp byte [rax], T_undefined
 23690 000117EB 0F84833A0000            	je L_error_fvar_undefined
 23691 000117F1 803804                  	cmp byte [rax], T_closure
 23692 000117F4 0F85FE3A0000            	jne L_error_non_closure
 23693 000117FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23694 000117FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 23695 00011800 50                      	push rax
 23696                                  	; preparing a non-tail-call
 23697 00011801 488B4520                	mov rax, PARAM(0)	; param e1
 23698 00011805 50                      	push rax
 23699 00011806 6A01                    	push 1	; arg count
 23700 00011808 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 23701 00011810 803805                  	cmp byte [rax], T_undefined
 23702 00011813 0F845B3A0000            	je L_error_fvar_undefined
 23703 00011819 803804                  	cmp byte [rax], T_closure
 23704 0001181C 0F85D63A0000            	jne L_error_non_closure
 23705 00011822 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23706 00011825 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23707 00011828 50                      	push rax
 23708 00011829 6A02                    	push 2	; arg count
 23709 0001182B 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 23710 00011833 803805                  	cmp byte [rax], T_undefined
 23711 00011836 0F84383A0000            	je L_error_fvar_undefined
 23712 0001183C 803804                  	cmp byte [rax], T_closure
 23713 0001183F 0F85B33A0000            	jne L_error_non_closure
 23714 00011845 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23715 00011848 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23716 0001184B EB0A                    	jmp .L_if_end_0180
 23717                                  .L_if_else_0180:
 23718 0001184D 48B8-                   	mov rax, L_constants + 2
 23718 0001184F [0200000000000000] 
 23719                                  .L_if_end_0180:
 23720 00011857 EB0A                    	jmp .L_if_end_0181
 23721                                  .L_if_else_0181:
 23722 00011859 48B8-                   	mov rax, L_constants + 2
 23722 0001185B [0200000000000000] 
 23723                                  .L_if_end_0181:
 23724 00011863 483D[02000000]          	cmp rax, sob_boolean_false
 23725 00011869 7468                    	je .L_if_else_0186
 23726                                  	; Initiating tail-call optimization
 23727 0001186B 488B4528                	mov rax, PARAM(1)	; param e2
 23728 0001186F 50                      	push rax
 23729 00011870 488B4520                	mov rax, PARAM(0)	; param e1
 23730 00011874 50                      	push rax
 23731 00011875 6A02                    	push 2	; Number of arguments
 23732 00011877 488B0425[CE160000]      	mov rax, qword [free_var_135]	; free var string=?
 23733 0001187F 803805                  	cmp byte [rax], T_undefined
 23734 00011882 0F84EC390000            	je L_error_fvar_undefined
 23735 00011888 803804                  	cmp byte [rax], T_closure
 23736 0001188B 0F85673A0000            	jne L_error_non_closure
 23737 00011891 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23738 00011894 FF7508                  	push qword [rbp + 8]
 23739 00011897 FF7500                  	push qword [rbp]
 23740 0001189A 41BA06000000            	mov r10, 2 + 4
 23741 000118A0 4C8B4518                	mov r8, COUNT
 23742 000118A4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23743 000118A9 4C8D4DF8                	lea r9, [rbp - 8]
 23744                                  .L_tc_recycle_frame_loop_0292:
 23745 000118AD 4983FA00                	cmp r10, 0
 23746 000118B1 7413                    	je .L_tc_recycle_frame_done_0292
 23747 000118B3 4D8B19                  	mov r11, qword [r9]
 23748 000118B6 4D8918                  	mov qword [r8], r11
 23749 000118B9 49FFCA                  	dec r10
 23750 000118BC 4983E808                	sub r8, 8
 23751 000118C0 4983E908                	sub r9, 8
 23752 000118C4 EBE7                    	jmp .L_tc_recycle_frame_loop_0292
 23753                                  .L_tc_recycle_frame_done_0292:
 23754 000118C6 498D6008                	lea rsp, [r8 + 8]
 23755 000118CA 5D                      	pop rbp
 23756 000118CB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23757 000118CE E904020000              	jmp .L_if_end_0186
 23758                                  .L_if_else_0186:
 23759                                  	; preparing a non-tail-call
 23760 000118D3 488B4520                	mov rax, PARAM(0)	; param e1
 23761 000118D7 50                      	push rax
 23762 000118D8 6A01                    	push 1	; arg count
 23763 000118DA 488B0425[03150000]      	mov rax, qword [free_var_108]	; free var number?
 23764 000118E2 803805                  	cmp byte [rax], T_undefined
 23765 000118E5 0F8489390000            	je L_error_fvar_undefined
 23766 000118EB 803804                  	cmp byte [rax], T_closure
 23767 000118EE 0F85043A0000            	jne L_error_non_closure
 23768 000118F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23769 000118F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23770 000118FA 483D[02000000]          	cmp rax, sob_boolean_false
 23771 00011900 7429                    	je .L_if_else_0182
 23772                                  	; preparing a non-tail-call
 23773 00011902 488B4528                	mov rax, PARAM(1)	; param e2
 23774 00011906 50                      	push rax
 23775 00011907 6A01                    	push 1	; arg count
 23776 00011909 488B0425[03150000]      	mov rax, qword [free_var_108]	; free var number?
 23777 00011911 803805                  	cmp byte [rax], T_undefined
 23778 00011914 0F845A390000            	je L_error_fvar_undefined
 23779 0001191A 803804                  	cmp byte [rax], T_closure
 23780 0001191D 0F85D5390000            	jne L_error_non_closure
 23781 00011923 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23782 00011926 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23783 00011929 EB0A                    	jmp .L_if_end_0182
 23784                                  .L_if_else_0182:
 23785 0001192B 48B8-                   	mov rax, L_constants + 2
 23785 0001192D [0200000000000000] 
 23786                                  .L_if_end_0182:
 23787 00011935 483D[02000000]          	cmp rax, sob_boolean_false
 23788 0001193B 7468                    	je .L_if_else_0185
 23789                                  	; Initiating tail-call optimization
 23790 0001193D 488B4528                	mov rax, PARAM(1)	; param e2
 23791 00011941 50                      	push rax
 23792 00011942 488B4520                	mov rax, PARAM(0)	; param e1
 23793 00011946 50                      	push rax
 23794 00011947 6A02                    	push 2	; Number of arguments
 23795 00011949 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 23796 00011951 803805                  	cmp byte [rax], T_undefined
 23797 00011954 0F841A390000            	je L_error_fvar_undefined
 23798 0001195A 803804                  	cmp byte [rax], T_closure
 23799 0001195D 0F8595390000            	jne L_error_non_closure
 23800 00011963 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23801 00011966 FF7508                  	push qword [rbp + 8]
 23802 00011969 FF7500                  	push qword [rbp]
 23803 0001196C 41BA06000000            	mov r10, 2 + 4
 23804 00011972 4C8B4518                	mov r8, COUNT
 23805 00011976 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23806 0001197B 4C8D4DF8                	lea r9, [rbp - 8]
 23807                                  .L_tc_recycle_frame_loop_0293:
 23808 0001197F 4983FA00                	cmp r10, 0
 23809 00011983 7413                    	je .L_tc_recycle_frame_done_0293
 23810 00011985 4D8B19                  	mov r11, qword [r9]
 23811 00011988 4D8918                  	mov qword [r8], r11
 23812 0001198B 49FFCA                  	dec r10
 23813 0001198E 4983E808                	sub r8, 8
 23814 00011992 4983E908                	sub r9, 8
 23815 00011996 EBE7                    	jmp .L_tc_recycle_frame_loop_0293
 23816                                  .L_tc_recycle_frame_done_0293:
 23817 00011998 498D6008                	lea rsp, [r8 + 8]
 23818 0001199C 5D                      	pop rbp
 23819 0001199D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23820 000119A0 E932010000              	jmp .L_if_end_0185
 23821                                  .L_if_else_0185:
 23822                                  	; preparing a non-tail-call
 23823 000119A5 488B4520                	mov rax, PARAM(0)	; param e1
 23824 000119A9 50                      	push rax
 23825 000119AA 6A01                    	push 1	; arg count
 23826 000119AC 488B0425[05130000]      	mov rax, qword [free_var_78]	; free var char?
 23827 000119B4 803805                  	cmp byte [rax], T_undefined
 23828 000119B7 0F84B7380000            	je L_error_fvar_undefined
 23829 000119BD 803804                  	cmp byte [rax], T_closure
 23830 000119C0 0F8532390000            	jne L_error_non_closure
 23831 000119C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23832 000119C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23833 000119CC 483D[02000000]          	cmp rax, sob_boolean_false
 23834 000119D2 7429                    	je .L_if_else_0183
 23835                                  	; preparing a non-tail-call
 23836 000119D4 488B4528                	mov rax, PARAM(1)	; param e2
 23837 000119D8 50                      	push rax
 23838 000119D9 6A01                    	push 1	; arg count
 23839 000119DB 488B0425[05130000]      	mov rax, qword [free_var_78]	; free var char?
 23840 000119E3 803805                  	cmp byte [rax], T_undefined
 23841 000119E6 0F8488380000            	je L_error_fvar_undefined
 23842 000119EC 803804                  	cmp byte [rax], T_closure
 23843 000119EF 0F8503390000            	jne L_error_non_closure
 23844 000119F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23845 000119F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23846 000119FB EB0A                    	jmp .L_if_end_0183
 23847                                  .L_if_else_0183:
 23848 000119FD 48B8-                   	mov rax, L_constants + 2
 23848 000119FF [0200000000000000] 
 23849                                  .L_if_end_0183:
 23850 00011A07 483D[02000000]          	cmp rax, sob_boolean_false
 23851 00011A0D 7465                    	je .L_if_else_0184
 23852                                  	; Initiating tail-call optimization
 23853 00011A0F 488B4528                	mov rax, PARAM(1)	; param e2
 23854 00011A13 50                      	push rax
 23855 00011A14 488B4520                	mov rax, PARAM(0)	; param e1
 23856 00011A18 50                      	push rax
 23857 00011A19 6A02                    	push 2	; Number of arguments
 23858 00011A1B 488B0425[D2120000]      	mov rax, qword [free_var_75]	; free var char=?
 23859 00011A23 803805                  	cmp byte [rax], T_undefined
 23860 00011A26 0F8448380000            	je L_error_fvar_undefined
 23861 00011A2C 803804                  	cmp byte [rax], T_closure
 23862 00011A2F 0F85C3380000            	jne L_error_non_closure
 23863 00011A35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23864 00011A38 FF7508                  	push qword [rbp + 8]
 23865 00011A3B FF7500                  	push qword [rbp]
 23866 00011A3E 41BA06000000            	mov r10, 2 + 4
 23867 00011A44 4C8B4518                	mov r8, COUNT
 23868 00011A48 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23869 00011A4D 4C8D4DF8                	lea r9, [rbp - 8]
 23870                                  .L_tc_recycle_frame_loop_0294:
 23871 00011A51 4983FA00                	cmp r10, 0
 23872 00011A55 7413                    	je .L_tc_recycle_frame_done_0294
 23873 00011A57 4D8B19                  	mov r11, qword [r9]
 23874 00011A5A 4D8918                  	mov qword [r8], r11
 23875 00011A5D 49FFCA                  	dec r10
 23876 00011A60 4983E808                	sub r8, 8
 23877 00011A64 4983E908                	sub r9, 8
 23878 00011A68 EBE7                    	jmp .L_tc_recycle_frame_loop_0294
 23879                                  .L_tc_recycle_frame_done_0294:
 23880 00011A6A 498D6008                	lea rsp, [r8 + 8]
 23881 00011A6E 5D                      	pop rbp
 23882 00011A6F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23883 00011A72 EB63                    	jmp .L_if_end_0184
 23884                                  .L_if_else_0184:
 23885                                  	; Initiating tail-call optimization
 23886 00011A74 488B4528                	mov rax, PARAM(1)	; param e2
 23887 00011A78 50                      	push rax
 23888 00011A79 488B4520                	mov rax, PARAM(0)	; param e1
 23889 00011A7D 50                      	push rax
 23890 00011A7E 6A02                    	push 2	; Number of arguments
 23891 00011A80 488B0425[27130000]      	mov rax, qword [free_var_80]	; free var eq?
 23892 00011A88 803805                  	cmp byte [rax], T_undefined
 23893 00011A8B 0F84E3370000            	je L_error_fvar_undefined
 23894 00011A91 803804                  	cmp byte [rax], T_closure
 23895 00011A94 0F855E380000            	jne L_error_non_closure
 23896 00011A9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23897 00011A9D FF7508                  	push qword [rbp + 8]
 23898 00011AA0 FF7500                  	push qword [rbp]
 23899 00011AA3 41BA06000000            	mov r10, 2 + 4
 23900 00011AA9 4C8B4518                	mov r8, COUNT
 23901 00011AAD 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 23902 00011AB2 4C8D4DF8                	lea r9, [rbp - 8]
 23903                                  .L_tc_recycle_frame_loop_0295:
 23904 00011AB6 4983FA00                	cmp r10, 0
 23905 00011ABA 7413                    	je .L_tc_recycle_frame_done_0295
 23906 00011ABC 4D8B19                  	mov r11, qword [r9]
 23907 00011ABF 4D8918                  	mov qword [r8], r11
 23908 00011AC2 49FFCA                  	dec r10
 23909 00011AC5 4983E808                	sub r8, 8
 23910 00011AC9 4983E908                	sub r9, 8
 23911 00011ACD EBE7                    	jmp .L_tc_recycle_frame_loop_0295
 23912                                  .L_tc_recycle_frame_done_0295:
 23913 00011ACF 498D6008                	lea rsp, [r8 + 8]
 23914 00011AD3 5D                      	pop rbp
 23915 00011AD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23916                                  .L_if_end_0184:
 23917                                  .L_if_end_0185:
 23918                                  .L_if_end_0186:
 23919                                  .L_if_end_0187:
 23920                                  .L_if_end_0188:
 23921 00011AD7 C9                      	leave
 23922 00011AD8 C22000                  	ret AND_KILL_FRAME(2)
 23923                                  .L_lambda_simple_end_020c:	; new closure is in rax
 23924 00011ADB 48890425[38130000]      	mov qword [free_var_81], rax
 23925 00011AE3 48B8-                   	mov rax, sob_void
 23925 00011AE5 [0000000000000000] 
 23926                                  
 23927 00011AED 4889C7                  	mov rdi, rax
 23928 00011AF0 E8013B0000              	call print_sexpr_if_not_void
 23929 00011AF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23930 00011AFA E8A2380000              	call malloc
 23931 00011AFF 50                      	push rax
 23932 00011B00 BF00000000              	mov rdi, 8 * 0	; new rib
 23933 00011B05 E897380000              	call malloc
 23934 00011B0A 50                      	push rax
 23935 00011B0B BF08000000              	mov rdi, 8 * 1	; extended env
 23936 00011B10 E88C380000              	call malloc
 23937 00011B15 488B7D10                	mov rdi, ENV
 23938 00011B19 BE00000000              	mov rsi, 0
 23939 00011B1E BA01000000              	mov rdx, 1
 23940                                  .L_lambda_simple_env_loop_020d:	; ext_env[i + 1] <-- env[i]
 23941 00011B23 4883FE00                	cmp rsi, 0
 23942 00011B27 7410                    	je .L_lambda_simple_env_end_020d
 23943 00011B29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23944 00011B2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23945 00011B31 48FFC6                  	inc rsi
 23946 00011B34 48FFC2                  	inc rdx
 23947 00011B37 EBEA                    	jmp .L_lambda_simple_env_loop_020d
 23948                                  .L_lambda_simple_env_end_020d:
 23949 00011B39 5B                      	pop rbx
 23950 00011B3A BE00000000              	mov rsi, 0
 23951                                  .L_lambda_simple_params_loop_020d:	; copy params
 23952 00011B3F 4883FE00                	cmp rsi, 0
 23953 00011B43 740E                    	je .L_lambda_simple_params_end_020d
 23954 00011B45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23955 00011B4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23956 00011B4E 48FFC6                  	inc rsi
 23957 00011B51 EBEC                    	jmp .L_lambda_simple_params_loop_020d
 23958                                  .L_lambda_simple_params_end_020d:
 23959 00011B53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23960 00011B56 4889C3                  	mov rbx, rax
 23961 00011B59 58                      	pop rax
 23962 00011B5A C60004                  	mov byte [rax], T_closure
 23963 00011B5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23964 00011B61 48C74009[6E1B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020d
 23965 00011B69 E999010000              	jmp .L_lambda_simple_end_020d
 23966                                  .L_lambda_simple_code_020d:	; lambda-simple body
 23967 00011B6E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23968 00011B74 740B                    	je .L_lambda_simple_arity_check_ok_020d
 23969 00011B76 FF742410                	push qword [rsp + 8 * 2]
 23970 00011B7A 6A02                    	push 2
 23971 00011B7C E9D9370000              	jmp L_error_incorrect_arity_simple
 23972                                  .L_lambda_simple_arity_check_ok_020d:
 23973 00011B81 C8000000                	enter 0, 0
 23974                                  	; preparing a non-tail-call
 23975 00011B85 488B4528                	mov rax, PARAM(1)	; param s
 23976 00011B89 50                      	push rax
 23977 00011B8A 6A01                    	push 1	; arg count
 23978 00011B8C 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 23979 00011B94 803805                  	cmp byte [rax], T_undefined
 23980 00011B97 0F84D7360000            	je L_error_fvar_undefined
 23981 00011B9D 803804                  	cmp byte [rax], T_closure
 23982 00011BA0 0F8552370000            	jne L_error_non_closure
 23983 00011BA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23984 00011BA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23985 00011BAC 483D[02000000]          	cmp rax, sob_boolean_false
 23986 00011BB2 740F                    	je .L_if_else_018a
 23987 00011BB4 48B8-                   	mov rax, L_constants + 2
 23987 00011BB6 [0200000000000000] 
 23988 00011BBE E940010000              	jmp .L_if_end_018a
 23989                                  .L_if_else_018a:
 23990                                  	; preparing a non-tail-call
 23991 00011BC3 488B4520                	mov rax, PARAM(0)	; param a
 23992 00011BC7 50                      	push rax
 23993                                  	; preparing a non-tail-call
 23994 00011BC8 488B4528                	mov rax, PARAM(1)	; param s
 23995 00011BCC 50                      	push rax
 23996 00011BCD 6A01                    	push 1	; arg count
 23997 00011BCF 488B0425[90100000]      	mov rax, qword [free_var_41]	; free var caar
 23998 00011BD7 803805                  	cmp byte [rax], T_undefined
 23999 00011BDA 0F8494360000            	je L_error_fvar_undefined
 24000 00011BE0 803804                  	cmp byte [rax], T_closure
 24001 00011BE3 0F850F370000            	jne L_error_non_closure
 24002 00011BE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24003 00011BEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24004 00011BEF 50                      	push rax
 24005 00011BF0 6A02                    	push 2	; arg count
 24006 00011BF2 488B0425[27130000]      	mov rax, qword [free_var_80]	; free var eq?
 24007 00011BFA 803805                  	cmp byte [rax], T_undefined
 24008 00011BFD 0F8471360000            	je L_error_fvar_undefined
 24009 00011C03 803804                  	cmp byte [rax], T_closure
 24010 00011C06 0F85EC360000            	jne L_error_non_closure
 24011 00011C0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24012 00011C0F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24013 00011C12 483D[02000000]          	cmp rax, sob_boolean_false
 24014 00011C18 7463                    	je .L_if_else_0189
 24015                                  	; Initiating tail-call optimization
 24016 00011C1A 488B4528                	mov rax, PARAM(1)	; param s
 24017 00011C1E 50                      	push rax
 24018 00011C1F 6A01                    	push 1	; Number of arguments
 24019 00011C21 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 24020 00011C29 803805                  	cmp byte [rax], T_undefined
 24021 00011C2C 0F8442360000            	je L_error_fvar_undefined
 24022 00011C32 803804                  	cmp byte [rax], T_closure
 24023 00011C35 0F85BD360000            	jne L_error_non_closure
 24024 00011C3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24025 00011C3E FF7508                  	push qword [rbp + 8]
 24026 00011C41 FF7500                  	push qword [rbp]
 24027 00011C44 41BA05000000            	mov r10, 1 + 4
 24028 00011C4A 4C8B4518                	mov r8, COUNT
 24029 00011C4E 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24030 00011C53 4C8D4DF8                	lea r9, [rbp - 8]
 24031                                  .L_tc_recycle_frame_loop_0296:
 24032 00011C57 4983FA00                	cmp r10, 0
 24033 00011C5B 7413                    	je .L_tc_recycle_frame_done_0296
 24034 00011C5D 4D8B19                  	mov r11, qword [r9]
 24035 00011C60 4D8918                  	mov qword [r8], r11
 24036 00011C63 49FFCA                  	dec r10
 24037 00011C66 4983E808                	sub r8, 8
 24038 00011C6A 4983E908                	sub r9, 8
 24039 00011C6E EBE7                    	jmp .L_tc_recycle_frame_loop_0296
 24040                                  .L_tc_recycle_frame_done_0296:
 24041 00011C70 498D6008                	lea rsp, [r8 + 8]
 24042 00011C74 5D                      	pop rbp
 24043 00011C75 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24044 00011C78 E986000000              	jmp .L_if_end_0189
 24045                                  .L_if_else_0189:
 24046                                  	; Initiating tail-call optimization
 24047                                  	; preparing a non-tail-call
 24048 00011C7D 488B4528                	mov rax, PARAM(1)	; param s
 24049 00011C81 50                      	push rax
 24050 00011C82 6A01                    	push 1	; arg count
 24051 00011C84 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 24052 00011C8C 803805                  	cmp byte [rax], T_undefined
 24053 00011C8F 0F84DF350000            	je L_error_fvar_undefined
 24054 00011C95 803804                  	cmp byte [rax], T_closure
 24055 00011C98 0F855A360000            	jne L_error_non_closure
 24056 00011C9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24057 00011CA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24058 00011CA4 50                      	push rax
 24059 00011CA5 488B4520                	mov rax, PARAM(0)	; param a
 24060 00011CA9 50                      	push rax
 24061 00011CAA 6A02                    	push 2	; Number of arguments
 24062 00011CAC 488B0425[19100000]      	mov rax, qword [free_var_34]	; free var assoc
 24063 00011CB4 803805                  	cmp byte [rax], T_undefined
 24064 00011CB7 0F84B7350000            	je L_error_fvar_undefined
 24065 00011CBD 803804                  	cmp byte [rax], T_closure
 24066 00011CC0 0F8532360000            	jne L_error_non_closure
 24067 00011CC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24068 00011CC9 FF7508                  	push qword [rbp + 8]
 24069 00011CCC FF7500                  	push qword [rbp]
 24070 00011CCF 41BA06000000            	mov r10, 2 + 4
 24071 00011CD5 4C8B4518                	mov r8, COUNT
 24072 00011CD9 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24073 00011CDE 4C8D4DF8                	lea r9, [rbp - 8]
 24074                                  .L_tc_recycle_frame_loop_0297:
 24075 00011CE2 4983FA00                	cmp r10, 0
 24076 00011CE6 7413                    	je .L_tc_recycle_frame_done_0297
 24077 00011CE8 4D8B19                  	mov r11, qword [r9]
 24078 00011CEB 4D8918                  	mov qword [r8], r11
 24079 00011CEE 49FFCA                  	dec r10
 24080 00011CF1 4983E808                	sub r8, 8
 24081 00011CF5 4983E908                	sub r9, 8
 24082 00011CF9 EBE7                    	jmp .L_tc_recycle_frame_loop_0297
 24083                                  .L_tc_recycle_frame_done_0297:
 24084 00011CFB 498D6008                	lea rsp, [r8 + 8]
 24085 00011CFF 5D                      	pop rbp
 24086 00011D00 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24087                                  .L_if_end_0189:
 24088                                  .L_if_end_018a:
 24089 00011D03 C9                      	leave
 24090 00011D04 C22000                  	ret AND_KILL_FRAME(2)
 24091                                  .L_lambda_simple_end_020d:	; new closure is in rax
 24092 00011D07 48890425[19100000]      	mov qword [free_var_34], rax
 24093 00011D0F 48B8-                   	mov rax, sob_void
 24093 00011D11 [0000000000000000] 
 24094                                  
 24095 00011D19 4889C7                  	mov rdi, rax
 24096 00011D1C E8D5380000              	call print_sexpr_if_not_void
 24097                                  	; preparing a non-tail-call
 24098 00011D21 48B8-                   	mov rax, L_constants + 2007
 24098 00011D23 [D707000000000000] 
 24099 00011D2B 50                      	push rax
 24100 00011D2C 48B8-                   	mov rax, L_constants + 2007
 24100 00011D2E [D707000000000000] 
 24101 00011D36 50                      	push rax
 24102 00011D37 6A02                    	push 2	; arg count
 24103 00011D39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24104 00011D3E E85E360000              	call malloc
 24105 00011D43 50                      	push rax
 24106 00011D44 BF00000000              	mov rdi, 8 * 0	; new rib
 24107 00011D49 E853360000              	call malloc
 24108 00011D4E 50                      	push rax
 24109 00011D4F BF08000000              	mov rdi, 8 * 1	; extended env
 24110 00011D54 E848360000              	call malloc
 24111 00011D59 488B7D10                	mov rdi, ENV
 24112 00011D5D BE00000000              	mov rsi, 0
 24113 00011D62 BA01000000              	mov rdx, 1
 24114                                  .L_lambda_simple_env_loop_020e:	; ext_env[i + 1] <-- env[i]
 24115 00011D67 4883FE00                	cmp rsi, 0
 24116 00011D6B 7410                    	je .L_lambda_simple_env_end_020e
 24117 00011D6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24118 00011D71 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24119 00011D75 48FFC6                  	inc rsi
 24120 00011D78 48FFC2                  	inc rdx
 24121 00011D7B EBEA                    	jmp .L_lambda_simple_env_loop_020e
 24122                                  .L_lambda_simple_env_end_020e:
 24123 00011D7D 5B                      	pop rbx
 24124 00011D7E BE00000000              	mov rsi, 0
 24125                                  .L_lambda_simple_params_loop_020e:	; copy params
 24126 00011D83 4883FE00                	cmp rsi, 0
 24127 00011D87 740E                    	je .L_lambda_simple_params_end_020e
 24128 00011D89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24129 00011D8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24130 00011D92 48FFC6                  	inc rsi
 24131 00011D95 EBEC                    	jmp .L_lambda_simple_params_loop_020e
 24132                                  .L_lambda_simple_params_end_020e:
 24133 00011D97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24134 00011D9A 4889C3                  	mov rbx, rax
 24135 00011D9D 58                      	pop rax
 24136 00011D9E C60004                  	mov byte [rax], T_closure
 24137 00011DA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24138 00011DA5 48C74009[B21D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020e
 24139 00011DAD E99C070000              	jmp .L_lambda_simple_end_020e
 24140                                  .L_lambda_simple_code_020e:	; lambda-simple body
 24141 00011DB2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24142 00011DB8 740B                    	je .L_lambda_simple_arity_check_ok_020e
 24143 00011DBA FF742410                	push qword [rsp + 8 * 2]
 24144 00011DBE 6A02                    	push 2
 24145 00011DC0 E995350000              	jmp L_error_incorrect_arity_simple
 24146                                  .L_lambda_simple_arity_check_ok_020e:
 24147 00011DC5 C8000000                	enter 0, 0
 24148 00011DC9 BF08000000              	mov rdi, 8 * 1
 24149 00011DCE E8CE350000              	call malloc
 24150 00011DD3 488B5D20                	mov rbx, PARAM(0)
 24151 00011DD7 488918                  	mov qword [rax], rbx
 24152 00011DDA 48894520                	mov PARAM(0), rax
 24153 00011DDE 48B8-                   	mov rax, sob_void
 24153 00011DE0 [0000000000000000] 
 24154                                  
 24155 00011DE8 BF08000000              	mov rdi, 8 * 1
 24156 00011DED E8AF350000              	call malloc
 24157 00011DF2 488B5D28                	mov rbx, PARAM(1)
 24158 00011DF6 488918                  	mov qword [rax], rbx
 24159 00011DF9 48894528                	mov PARAM(1), rax
 24160 00011DFD 48B8-                   	mov rax, sob_void
 24160 00011DFF [0000000000000000] 
 24161                                  
 24162 00011E07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24163 00011E0C E890350000              	call malloc
 24164 00011E11 50                      	push rax
 24165 00011E12 BF10000000              	mov rdi, 8 * 2	; new rib
 24166 00011E17 E885350000              	call malloc
 24167 00011E1C 50                      	push rax
 24168 00011E1D BF10000000              	mov rdi, 8 * 2	; extended env
 24169 00011E22 E87A350000              	call malloc
 24170 00011E27 488B7D10                	mov rdi, ENV
 24171 00011E2B BE00000000              	mov rsi, 0
 24172 00011E30 BA01000000              	mov rdx, 1
 24173                                  .L_lambda_simple_env_loop_020f:	; ext_env[i + 1] <-- env[i]
 24174 00011E35 4883FE01                	cmp rsi, 1
 24175 00011E39 7410                    	je .L_lambda_simple_env_end_020f
 24176 00011E3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24177 00011E3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24178 00011E43 48FFC6                  	inc rsi
 24179 00011E46 48FFC2                  	inc rdx
 24180 00011E49 EBEA                    	jmp .L_lambda_simple_env_loop_020f
 24181                                  .L_lambda_simple_env_end_020f:
 24182 00011E4B 5B                      	pop rbx
 24183 00011E4C BE00000000              	mov rsi, 0
 24184                                  .L_lambda_simple_params_loop_020f:	; copy params
 24185 00011E51 4883FE02                	cmp rsi, 2
 24186 00011E55 740E                    	je .L_lambda_simple_params_end_020f
 24187 00011E57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24188 00011E5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24189 00011E60 48FFC6                  	inc rsi
 24190 00011E63 EBEC                    	jmp .L_lambda_simple_params_loop_020f
 24191                                  .L_lambda_simple_params_end_020f:
 24192 00011E65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24193 00011E68 4889C3                  	mov rbx, rax
 24194 00011E6B 58                      	pop rax
 24195 00011E6C C60004                  	mov byte [rax], T_closure
 24196 00011E6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24197 00011E73 48C74009[801E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_020f
 24198 00011E7B E96C020000              	jmp .L_lambda_simple_end_020f
 24199                                  .L_lambda_simple_code_020f:	; lambda-simple body
 24200 00011E80 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24201 00011E86 740B                    	je .L_lambda_simple_arity_check_ok_020f
 24202 00011E88 FF742410                	push qword [rsp + 8 * 2]
 24203 00011E8C 6A03                    	push 3
 24204 00011E8E E9C7340000              	jmp L_error_incorrect_arity_simple
 24205                                  .L_lambda_simple_arity_check_ok_020f:
 24206 00011E93 C8000000                	enter 0, 0
 24207                                  	; preparing a non-tail-call
 24208 00011E97 488B4530                	mov rax, PARAM(2)	; param s
 24209 00011E9B 50                      	push rax
 24210 00011E9C 6A01                    	push 1	; arg count
 24211 00011E9E 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 24212 00011EA6 803805                  	cmp byte [rax], T_undefined
 24213 00011EA9 0F84C5330000            	je L_error_fvar_undefined
 24214 00011EAF 803804                  	cmp byte [rax], T_closure
 24215 00011EB2 0F8540340000            	jne L_error_non_closure
 24216 00011EB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24217 00011EBB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24218 00011EBE 483D[02000000]          	cmp rax, sob_boolean_false
 24219 00011EC4 7409                    	je .L_if_else_018b
 24220 00011EC6 488B4520                	mov rax, PARAM(0)	; param target
 24221 00011ECA E919020000              	jmp .L_if_end_018b
 24222                                  .L_if_else_018b:
 24223                                  	; Initiating tail-call optimization
 24224                                  	; preparing a non-tail-call
 24225                                  	; preparing a non-tail-call
 24226                                  	; preparing a non-tail-call
 24227 00011ECF 488B4530                	mov rax, PARAM(2)	; param s
 24228 00011ED3 50                      	push rax
 24229 00011ED4 6A01                    	push 1	; arg count
 24230 00011ED6 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 24231 00011EDE 803805                  	cmp byte [rax], T_undefined
 24232 00011EE1 0F848D330000            	je L_error_fvar_undefined
 24233 00011EE7 803804                  	cmp byte [rax], T_closure
 24234 00011EEA 0F8508340000            	jne L_error_non_closure
 24235 00011EF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24236 00011EF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24237 00011EF6 50                      	push rax
 24238 00011EF7 6A01                    	push 1	; arg count
 24239 00011EF9 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 24240 00011F01 803805                  	cmp byte [rax], T_undefined
 24241 00011F04 0F846A330000            	je L_error_fvar_undefined
 24242 00011F0A 803804                  	cmp byte [rax], T_closure
 24243 00011F0D 0F85E5330000            	jne L_error_non_closure
 24244 00011F13 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24245 00011F16 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24246 00011F19 50                      	push rax
 24247 00011F1A 48B8-                   	mov rax, L_constants + 2135
 24247 00011F1C [5708000000000000] 
 24248 00011F24 50                      	push rax
 24249                                  	; preparing a non-tail-call
 24250 00011F25 488B4530                	mov rax, PARAM(2)	; param s
 24251 00011F29 50                      	push rax
 24252 00011F2A 6A01                    	push 1	; arg count
 24253 00011F2C 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 24254 00011F34 803805                  	cmp byte [rax], T_undefined
 24255 00011F37 0F8437330000            	je L_error_fvar_undefined
 24256 00011F3D 803804                  	cmp byte [rax], T_closure
 24257 00011F40 0F85B2330000            	jne L_error_non_closure
 24258 00011F46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24259 00011F49 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24260 00011F4C 50                      	push rax
 24261 00011F4D 488B4528                	mov rax, PARAM(1)	; param i
 24262 00011F51 50                      	push rax
 24263 00011F52 488B4520                	mov rax, PARAM(0)	; param target
 24264 00011F56 50                      	push rax
 24265 00011F57 6A05                    	push 5	; arg count
 24266 00011F59 488B4510                	mov rax, ENV
 24267 00011F5D 488B00                  	mov rax, qword [rax + 8 * 0]
 24268 00011F60 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24269 00011F64 488B00                  	mov rax, qword [rax]
 24270 00011F67 803804                  	cmp byte [rax], T_closure
 24271 00011F6A 0F8588330000            	jne L_error_non_closure
 24272 00011F70 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24273 00011F73 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24274 00011F76 50                      	push rax
 24275 00011F77 6A01                    	push 1	; Number of arguments
 24276 00011F79 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24277 00011F7E E81E340000              	call malloc
 24278 00011F83 50                      	push rax
 24279 00011F84 BF18000000              	mov rdi, 8 * 3	; new rib
 24280 00011F89 E813340000              	call malloc
 24281 00011F8E 50                      	push rax
 24282 00011F8F BF18000000              	mov rdi, 8 * 3	; extended env
 24283 00011F94 E808340000              	call malloc
 24284 00011F99 488B7D10                	mov rdi, ENV
 24285 00011F9D BE00000000              	mov rsi, 0
 24286 00011FA2 BA01000000              	mov rdx, 1
 24287                                  .L_lambda_simple_env_loop_0210:	; ext_env[i + 1] <-- env[i]
 24288 00011FA7 4883FE02                	cmp rsi, 2
 24289 00011FAB 7410                    	je .L_lambda_simple_env_end_0210
 24290 00011FAD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24291 00011FB1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24292 00011FB5 48FFC6                  	inc rsi
 24293 00011FB8 48FFC2                  	inc rdx
 24294 00011FBB EBEA                    	jmp .L_lambda_simple_env_loop_0210
 24295                                  .L_lambda_simple_env_end_0210:
 24296 00011FBD 5B                      	pop rbx
 24297 00011FBE BE00000000              	mov rsi, 0
 24298                                  .L_lambda_simple_params_loop_0210:	; copy params
 24299 00011FC3 4883FE03                	cmp rsi, 3
 24300 00011FC7 740E                    	je .L_lambda_simple_params_end_0210
 24301 00011FC9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24302 00011FCE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24303 00011FD2 48FFC6                  	inc rsi
 24304 00011FD5 EBEC                    	jmp .L_lambda_simple_params_loop_0210
 24305                                  .L_lambda_simple_params_end_0210:
 24306 00011FD7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24307 00011FDA 4889C3                  	mov rbx, rax
 24308 00011FDD 58                      	pop rax
 24309 00011FDE C60004                  	mov byte [rax], T_closure
 24310 00011FE1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24311 00011FE5 48C74009[F21F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0210
 24312 00011FED E9B0000000              	jmp .L_lambda_simple_end_0210
 24313                                  .L_lambda_simple_code_0210:	; lambda-simple body
 24314 00011FF2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24315 00011FF8 740B                    	je .L_lambda_simple_arity_check_ok_0210
 24316 00011FFA FF742410                	push qword [rsp + 8 * 2]
 24317 00011FFE 6A01                    	push 1
 24318 00012000 E955330000              	jmp L_error_incorrect_arity_simple
 24319                                  .L_lambda_simple_arity_check_ok_0210:
 24320 00012005 C8000000                	enter 0, 0
 24321                                  	; Initiating tail-call optimization
 24322                                  	; preparing a non-tail-call
 24323 00012009 488B4510                	mov rax, ENV
 24324 0001200D 488B00                  	mov rax, qword [rax + 8 * 0]
 24325 00012010 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 24326 00012014 50                      	push rax
 24327 00012015 6A01                    	push 1	; arg count
 24328 00012017 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 24329 0001201F 803805                  	cmp byte [rax], T_undefined
 24330 00012022 0F844C320000            	je L_error_fvar_undefined
 24331 00012028 803804                  	cmp byte [rax], T_closure
 24332 0001202B 0F85C7320000            	jne L_error_non_closure
 24333 00012031 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24334 00012034 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24335 00012037 50                      	push rax
 24336 00012038 488B4520                	mov rax, PARAM(0)	; param i
 24337 0001203C 50                      	push rax
 24338 0001203D 488B4510                	mov rax, ENV
 24339 00012041 488B00                  	mov rax, qword [rax + 8 * 0]
 24340 00012044 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 24341 00012047 50                      	push rax
 24342 00012048 6A03                    	push 3	; Number of arguments
 24343 0001204A 488B4510                	mov rax, ENV
 24344 0001204E 488B4008                	mov rax, qword [rax + 8 * 1]
 24345 00012052 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24346 00012055 488B00                  	mov rax, qword [rax]
 24347 00012058 803804                  	cmp byte [rax], T_closure
 24348 0001205B 0F8597320000            	jne L_error_non_closure
 24349 00012061 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24350 00012064 FF7508                  	push qword [rbp + 8]
 24351 00012067 FF7500                  	push qword [rbp]
 24352 0001206A 41BA07000000            	mov r10, 3 + 4
 24353 00012070 4C8B4518                	mov r8, COUNT
 24354 00012074 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24355 00012079 4C8D4DF8                	lea r9, [rbp - 8]
 24356                                  .L_tc_recycle_frame_loop_0298:
 24357 0001207D 4983FA00                	cmp r10, 0
 24358 00012081 7413                    	je .L_tc_recycle_frame_done_0298
 24359 00012083 4D8B19                  	mov r11, qword [r9]
 24360 00012086 4D8918                  	mov qword [r8], r11
 24361 00012089 49FFCA                  	dec r10
 24362 0001208C 4983E808                	sub r8, 8
 24363 00012090 4983E908                	sub r9, 8
 24364 00012094 EBE7                    	jmp .L_tc_recycle_frame_loop_0298
 24365                                  .L_tc_recycle_frame_done_0298:
 24366 00012096 498D6008                	lea rsp, [r8 + 8]
 24367 0001209A 5D                      	pop rbp
 24368 0001209B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24369 0001209E C9                      	leave
 24370 0001209F C21800                  	ret AND_KILL_FRAME(1)
 24371                                  .L_lambda_simple_end_0210:	; new closure is in rax
 24372 000120A2 803804                  	cmp byte [rax], T_closure
 24373 000120A5 0F854D320000            	jne L_error_non_closure
 24374 000120AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24375 000120AE FF7508                  	push qword [rbp + 8]
 24376 000120B1 FF7500                  	push qword [rbp]
 24377 000120B4 41BA05000000            	mov r10, 1 + 4
 24378 000120BA 4C8B4518                	mov r8, COUNT
 24379 000120BE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24380 000120C3 4C8D4DF8                	lea r9, [rbp - 8]
 24381                                  .L_tc_recycle_frame_loop_0299:
 24382 000120C7 4983FA00                	cmp r10, 0
 24383 000120CB 7413                    	je .L_tc_recycle_frame_done_0299
 24384 000120CD 4D8B19                  	mov r11, qword [r9]
 24385 000120D0 4D8918                  	mov qword [r8], r11
 24386 000120D3 49FFCA                  	dec r10
 24387 000120D6 4983E808                	sub r8, 8
 24388 000120DA 4983E908                	sub r9, 8
 24389 000120DE EBE7                    	jmp .L_tc_recycle_frame_loop_0299
 24390                                  .L_tc_recycle_frame_done_0299:
 24391 000120E0 498D6008                	lea rsp, [r8 + 8]
 24392 000120E4 5D                      	pop rbp
 24393 000120E5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24394                                  .L_if_end_018b:
 24395 000120E8 C9                      	leave
 24396 000120E9 C22800                  	ret AND_KILL_FRAME(3)
 24397                                  .L_lambda_simple_end_020f:	; new closure is in rax
 24398 000120EC 50                      	push rax
 24399 000120ED 488B4520                	mov rax, PARAM(0)	; param run
 24400 000120F1 8F00                    	pop qword [rax]
 24401 000120F3 48B8-                   	mov rax, sob_void
 24401 000120F5 [0000000000000000] 
 24402                                  
 24403 000120FD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24404 00012102 E89A320000              	call malloc
 24405 00012107 50                      	push rax
 24406 00012108 BF10000000              	mov rdi, 8 * 2	; new rib
 24407 0001210D E88F320000              	call malloc
 24408 00012112 50                      	push rax
 24409 00012113 BF10000000              	mov rdi, 8 * 2	; extended env
 24410 00012118 E884320000              	call malloc
 24411 0001211D 488B7D10                	mov rdi, ENV
 24412 00012121 BE00000000              	mov rsi, 0
 24413 00012126 BA01000000              	mov rdx, 1
 24414                                  .L_lambda_simple_env_loop_0211:	; ext_env[i + 1] <-- env[i]
 24415 0001212B 4883FE01                	cmp rsi, 1
 24416 0001212F 7410                    	je .L_lambda_simple_env_end_0211
 24417 00012131 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24418 00012135 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24419 00012139 48FFC6                  	inc rsi
 24420 0001213C 48FFC2                  	inc rdx
 24421 0001213F EBEA                    	jmp .L_lambda_simple_env_loop_0211
 24422                                  .L_lambda_simple_env_end_0211:
 24423 00012141 5B                      	pop rbx
 24424 00012142 BE00000000              	mov rsi, 0
 24425                                  .L_lambda_simple_params_loop_0211:	; copy params
 24426 00012147 4883FE02                	cmp rsi, 2
 24427 0001214B 740E                    	je .L_lambda_simple_params_end_0211
 24428 0001214D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24429 00012152 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24430 00012156 48FFC6                  	inc rsi
 24431 00012159 EBEC                    	jmp .L_lambda_simple_params_loop_0211
 24432                                  .L_lambda_simple_params_end_0211:
 24433 0001215B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24434 0001215E 4889C3                  	mov rbx, rax
 24435 00012161 58                      	pop rax
 24436 00012162 C60004                  	mov byte [rax], T_closure
 24437 00012165 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24438 00012169 48C74009[76210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0211
 24439 00012171 E946010000              	jmp .L_lambda_simple_end_0211
 24440                                  .L_lambda_simple_code_0211:	; lambda-simple body
 24441 00012176 48837C241005            	cmp qword [rsp + 8 * 2], 5
 24442 0001217C 740B                    	je .L_lambda_simple_arity_check_ok_0211
 24443 0001217E FF742410                	push qword [rsp + 8 * 2]
 24444 00012182 6A05                    	push 5
 24445 00012184 E9D1310000              	jmp L_error_incorrect_arity_simple
 24446                                  .L_lambda_simple_arity_check_ok_0211:
 24447 00012189 C8000000                	enter 0, 0
 24448                                  	; preparing a non-tail-call
 24449 0001218D 488B4540                	mov rax, PARAM(4)	; param limit
 24450 00012191 50                      	push rax
 24451 00012192 488B4538                	mov rax, PARAM(3)	; param j
 24452 00012196 50                      	push rax
 24453 00012197 6A02                    	push 2	; arg count
 24454 00012199 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 24455 000121A1 803805                  	cmp byte [rax], T_undefined
 24456 000121A4 0F84CA300000            	je L_error_fvar_undefined
 24457 000121AA 803804                  	cmp byte [rax], T_closure
 24458 000121AD 0F8545310000            	jne L_error_non_closure
 24459 000121B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24460 000121B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24461 000121B9 483D[02000000]          	cmp rax, sob_boolean_false
 24462 000121BF 0F84EF000000            	je .L_if_else_018c
 24463                                  	; preparing a non-tail-call
 24464                                  	; preparing a non-tail-call
 24465 000121C5 488B4538                	mov rax, PARAM(3)	; param j
 24466 000121C9 50                      	push rax
 24467 000121CA 488B4530                	mov rax, PARAM(2)	; param str
 24468 000121CE 50                      	push rax
 24469 000121CF 6A02                    	push 2	; arg count
 24470 000121D1 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 24471 000121D9 803805                  	cmp byte [rax], T_undefined
 24472 000121DC 0F8492300000            	je L_error_fvar_undefined
 24473 000121E2 803804                  	cmp byte [rax], T_closure
 24474 000121E5 0F850D310000            	jne L_error_non_closure
 24475 000121EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24476 000121EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24477 000121F1 50                      	push rax
 24478 000121F2 488B4528                	mov rax, PARAM(1)	; param i
 24479 000121F6 50                      	push rax
 24480 000121F7 488B4520                	mov rax, PARAM(0)	; param target
 24481 000121FB 50                      	push rax
 24482 000121FC 6A03                    	push 3	; arg count
 24483 000121FE 488B0425[8A160000]      	mov rax, qword [free_var_131]	; free var string-set!
 24484 00012206 803805                  	cmp byte [rax], T_undefined
 24485 00012209 0F8465300000            	je L_error_fvar_undefined
 24486 0001220F 803804                  	cmp byte [rax], T_closure
 24487 00012212 0F85E0300000            	jne L_error_non_closure
 24488 00012218 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24489 0001221B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24490                                  
 24491                                  	; preparing a non-tail-call
 24492 0001221E 488B4540                	mov rax, PARAM(4)	; param limit
 24493 00012222 50                      	push rax
 24494                                  	; preparing a non-tail-call
 24495 00012223 48B8-                   	mov rax, L_constants + 2270
 24495 00012225 [DE08000000000000] 
 24496 0001222D 50                      	push rax
 24497 0001222E 488B4538                	mov rax, PARAM(3)	; param j
 24498 00012232 50                      	push rax
 24499 00012233 6A02                    	push 2	; arg count
 24500 00012235 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 24501 0001223D 803805                  	cmp byte [rax], T_undefined
 24502 00012240 0F842E300000            	je L_error_fvar_undefined
 24503 00012246 803804                  	cmp byte [rax], T_closure
 24504 00012249 0F85A9300000            	jne L_error_non_closure
 24505 0001224F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24506 00012252 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24507 00012255 50                      	push rax
 24508 00012256 488B4530                	mov rax, PARAM(2)	; param str
 24509 0001225A 50                      	push rax
 24510                                  	; preparing a non-tail-call
 24511 0001225B 48B8-                   	mov rax, L_constants + 2270
 24511 0001225D [DE08000000000000] 
 24512 00012265 50                      	push rax
 24513 00012266 488B4528                	mov rax, PARAM(1)	; param i
 24514 0001226A 50                      	push rax
 24515 0001226B 6A02                    	push 2	; arg count
 24516 0001226D 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 24517 00012275 803805                  	cmp byte [rax], T_undefined
 24518 00012278 0F84F62F0000            	je L_error_fvar_undefined
 24519 0001227E 803804                  	cmp byte [rax], T_closure
 24520 00012281 0F8571300000            	jne L_error_non_closure
 24521 00012287 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24522 0001228A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24523 0001228D 50                      	push rax
 24524 0001228E 488B4520                	mov rax, PARAM(0)	; param target
 24525 00012292 50                      	push rax
 24526 00012293 6A05                    	push 5	; arg count
 24527 00012295 488B4510                	mov rax, ENV
 24528 00012299 488B00                  	mov rax, qword [rax + 8 * 0]
 24529 0001229C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24530 000122A0 488B00                  	mov rax, qword [rax]
 24531 000122A3 803804                  	cmp byte [rax], T_closure
 24532 000122A6 0F854C300000            	jne L_error_non_closure
 24533 000122AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24534 000122AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24535 000122B2 EB04                    	jmp .L_if_end_018c
 24536                                  .L_if_else_018c:
 24537 000122B4 488B4528                	mov rax, PARAM(1)	; param i
 24538                                  .L_if_end_018c:
 24539 000122B8 C9                      	leave
 24540 000122B9 C23800                  	ret AND_KILL_FRAME(5)
 24541                                  .L_lambda_simple_end_0211:	; new closure is in rax
 24542 000122BC 50                      	push rax
 24543 000122BD 488B4528                	mov rax, PARAM(1)	; param add
 24544 000122C1 8F00                    	pop qword [rax]
 24545 000122C3 48B8-                   	mov rax, sob_void
 24545 000122C5 [0000000000000000] 
 24546                                  
 24547 000122CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24548 000122D2 E8CA300000              	call malloc
 24549 000122D7 50                      	push rax
 24550 000122D8 BF10000000              	mov rdi, 8 * 2	; new rib
 24551 000122DD E8BF300000              	call malloc
 24552 000122E2 50                      	push rax
 24553 000122E3 BF10000000              	mov rdi, 8 * 2	; extended env
 24554 000122E8 E8B4300000              	call malloc
 24555 000122ED 488B7D10                	mov rdi, ENV
 24556 000122F1 BE00000000              	mov rsi, 0
 24557 000122F6 BA01000000              	mov rdx, 1
 24558                                  .L_lambda_opt_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 24559 000122FB 4883FE01                	cmp rsi, 1
 24560 000122FF 7410                    	je .L_lambda_opt_env_end_0049
 24561 00012301 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24562 00012305 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24563 00012309 48FFC6                  	inc rsi
 24564 0001230C 48FFC2                  	inc rdx
 24565 0001230F EBEA                    	jmp .L_lambda_opt_env_loop_0049
 24566                                  .L_lambda_opt_env_end_0049:
 24567 00012311 5B                      	pop rbx
 24568 00012312 BE00000000              	mov rsi, 0
 24569                                  .L_lambda_opt_params_loop_0049:	; copy params
 24570 00012317 4883FE02                	cmp rsi, 2
 24571 0001231B 740E                    	je .L_lambda_opt_params_end_0049
 24572 0001231D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24573 00012322 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24574 00012326 48FFC6                  	inc rsi
 24575 00012329 EBEC                    	jmp .L_lambda_opt_params_loop_0049
 24576                                  .L_lambda_opt_params_end_0049:
 24577 0001232B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24578 0001232E 4889C3                  	mov rbx, rax
 24579 00012331 58                      	pop rax
 24580 00012332 C60004                  	mov byte [rax], T_closure
 24581 00012335 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24582 00012339 48C74009[46230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0049
 24583 00012341 E904020000              	jmp .L_lambda_opt_end_0049
 24584                                  .L_lambda_opt_code_0049:
 24585 00012346 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 24586 0001234B 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 24587 0001234F 7407                    	je .L_lambda_opt_arity_check_exact_0049	; Jump if arity matches
 24588 00012351 7F4C                    	jg .L_lambda_opt_arity_check_more_0049	; Jump if more arguments passed
 24589 00012353 E916300000              	jmp L_error_incorrect_arity_opt
 24590                                  .L_lambda_opt_arity_check_exact_0049:
 24591 00012358 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 24592 0001235B 4983C603                	add r14, 3 ; add 3 first stack values
 24593 0001235F 41BF00000000            	mov r15, 0 ; r15 = index
 24594 00012365 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 24595 00012369 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 24596 00012371 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_0049
 24597                                  .L_lambda_opt_stack_shrink_loop_0049:
 24598 00012373 4983FE00                	cmp r14, 0
 24599 00012377 7E11                    	jle .L_make_lambda_opt_exact_finish_0049
 24600 00012379 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 24601 0001237E 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 24602 00012382 49FFCE                  	dec r14 ; next loop value
 24603 00012385 49FFC7                  	inc r15 ; update i
 24604 00012388 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_0049
 24605                                  .L_make_lambda_opt_exact_finish_0049:
 24606 0001238A 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 24607 00012392 49FFC2                  	inc r10
 24608 00012395 4C89542410              	mov qword [rsp + 8 * 2], r10
 24609 0001239A E9AC000000              	jmp .L_lambda_opt_stack_adjusted_0049
 24610                                  .L_lambda_opt_arity_check_more_0049:
 24611 0001239F 4D89D6                  	mov r14, r10 ; r14 = num args
 24612 000123A2 4D89D7                  	mov r15, r10 ; r15 = num args
 24613 000123A5 41B900000000            	mov r9, 0; r9 = number of params 
 24614 000123AB 4D29CE                  	sub r14, r9 ; r14 = extra args
 24615 000123AE 4D01F1                  	add r9, r14 ; r9 = num args
 24616 000123B1 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 24616 000123B3 [0100000000000000] 
 24617 000123BB EB00                    	jmp .L_make_lambda_opt_arg_list_0049
 24618                                  .L_make_lambda_opt_arg_list_0049:
 24619 000123BD 4983FE00                	cmp r14, 0
 24620 000123C1 7E25                    	jle .L_make_lambda_opt_stack_fixed_0049
 24621 000123C3 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 24622 000123C8 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 24623 000123CD E8CF2F0000              	call malloc                         ; Allocate memory, result in rax
 24624 000123D2 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 24625 000123D5 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 24626 000123D9 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 24627 000123DD 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 24628 000123E0 49FFC9                  	dec r9                              ; args index minus 1
 24629 000123E3 49FFCE                  	dec r14                             ; next iteration
 24630 000123E6 EBD5                    	jmp .L_make_lambda_opt_arg_list_0049
 24631                                  .L_make_lambda_opt_stack_fixed_0049:
 24632 000123E8 4D89FE                  	mov r14, r15 ; r14 = num args
 24633 000123EB 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 24634 000123EE 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 24635 000123F2 4D89C1                  	mov r9, r8
 24636 000123F5 41BA00000000            	mov r10, 0; r10 = num of params
 24637 000123FB 4D29D6                  	sub r14, r10 ; r14 = extra args
 24638 000123FE 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 24639 00012401 49FFCE                  	dec r14 ; how much we need to change stack wise?
 24640 00012404 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 24641 00012409 4D89CC                  	mov r12, r9
 24642 0001240C 4D29F4                  	sub r12, r14
 24643 0001240F 49FFCC                  	dec r12
 24644 00012412 49FFCC                  	dec r12
 24645 00012415 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_0049
 24646                                  .L_lambda_opt_stack_shrink_loop_more_0049:
 24647 00012417 4983F800                	cmp r8, 0
 24648 0001241B 7E16                    	jle .L_make_lambda_opt_more_finish_0049
 24649 0001241D 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 24650 00012421 4D01F4                  	add r12, r14
 24651 00012424 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 24652 00012428 49FFC8                  	dec r8 ; next iteration
 24653 0001242B 4D29F4                  	sub r12, r14 ; next iteration
 24654 0001242E 49FFCC                  	dec r12 ; next iteration
 24655 00012431 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_0049
 24656                                  .L_make_lambda_opt_more_finish_0049:
 24657 00012433 41BA00000000            	mov r10, 0
 24658 00012439 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 24659 00012442 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 24660 00012446 4C01F4                  	add rsp, r14  ; Add to rsp
 24661 00012449 EB00                    	jmp .L_lambda_opt_stack_adjusted_0049
 24662                                  .L_lambda_opt_stack_adjusted_0049:
 24663 0001244B C8000000                	enter 0, 0
 24664                                  	; Initiating tail-call optimization
 24665 0001244F 488B4520                	mov rax, PARAM(0)	; param strings
 24666 00012453 50                      	push rax
 24667 00012454 48B8-                   	mov rax, L_constants + 2135
 24667 00012456 [5708000000000000] 
 24668 0001245E 50                      	push rax
 24669                                  	; preparing a non-tail-call
 24670                                  	; preparing a non-tail-call
 24671                                  	; preparing a non-tail-call
 24672 0001245F 488B4520                	mov rax, PARAM(0)	; param strings
 24673 00012463 50                      	push rax
 24674 00012464 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 24675 0001246C 803805                  	cmp byte [rax], T_undefined
 24676 0001246F 0F84FF2D0000            	je L_error_fvar_undefined
 24677 00012475 50                      	push rax
 24678 00012476 6A02                    	push 2	; arg count
 24679 00012478 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
 24680 00012480 803805                  	cmp byte [rax], T_undefined
 24681 00012483 0F84EB2D0000            	je L_error_fvar_undefined
 24682 00012489 803804                  	cmp byte [rax], T_closure
 24683 0001248C 0F85662E0000            	jne L_error_non_closure
 24684 00012492 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24685 00012495 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24686 00012498 50                      	push rax
 24687 00012499 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 24688 000124A1 803805                  	cmp byte [rax], T_undefined
 24689 000124A4 0F84CA2D0000            	je L_error_fvar_undefined
 24690 000124AA 50                      	push rax
 24691 000124AB 6A02                    	push 2	; arg count
 24692 000124AD 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
 24693 000124B5 803805                  	cmp byte [rax], T_undefined
 24694 000124B8 0F84B62D0000            	je L_error_fvar_undefined
 24695 000124BE 803804                  	cmp byte [rax], T_closure
 24696 000124C1 0F85312E0000            	jne L_error_non_closure
 24697 000124C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24698 000124CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24699 000124CD 50                      	push rax
 24700 000124CE 6A01                    	push 1	; arg count
 24701 000124D0 488B0425[6A140000]      	mov rax, qword [free_var_99]	; free var make-string
 24702 000124D8 803805                  	cmp byte [rax], T_undefined
 24703 000124DB 0F84932D0000            	je L_error_fvar_undefined
 24704 000124E1 803804                  	cmp byte [rax], T_closure
 24705 000124E4 0F850E2E0000            	jne L_error_non_closure
 24706 000124EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24707 000124ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 24708 000124F0 50                      	push rax
 24709 000124F1 6A03                    	push 3	; Number of arguments
 24710 000124F3 488B4510                	mov rax, ENV
 24711 000124F7 488B00                  	mov rax, qword [rax + 8 * 0]
 24712 000124FA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24713 000124FD 488B00                  	mov rax, qword [rax]
 24714 00012500 803804                  	cmp byte [rax], T_closure
 24715 00012503 0F85EF2D0000            	jne L_error_non_closure
 24716 00012509 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24717 0001250C FF7508                  	push qword [rbp + 8]
 24718 0001250F FF7500                  	push qword [rbp]
 24719 00012512 41BA07000000            	mov r10, 3 + 4
 24720 00012518 4C8B4518                	mov r8, COUNT
 24721 0001251C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 24722 00012521 4C8D4DF8                	lea r9, [rbp - 8]
 24723                                  .L_tc_recycle_frame_loop_029a:
 24724 00012525 4983FA00                	cmp r10, 0
 24725 00012529 7413                    	je .L_tc_recycle_frame_done_029a
 24726 0001252B 4D8B19                  	mov r11, qword [r9]
 24727 0001252E 4D8918                  	mov qword [r8], r11
 24728 00012531 49FFCA                  	dec r10
 24729 00012534 4983E808                	sub r8, 8
 24730 00012538 4983E908                	sub r9, 8
 24731 0001253C EBE7                    	jmp .L_tc_recycle_frame_loop_029a
 24732                                  .L_tc_recycle_frame_done_029a:
 24733 0001253E 498D6008                	lea rsp, [r8 + 8]
 24734 00012542 5D                      	pop rbp
 24735 00012543 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24736 00012546 C9                      	leave
 24737 00012547 C21800                  	ret AND_KILL_FRAME(1)
 24738                                  .L_lambda_opt_end_0049:	; new closure is in rax
 24739 0001254A C9                      	leave
 24740 0001254B C22000                  	ret AND_KILL_FRAME(2)
 24741                                  .L_lambda_simple_end_020e:	; new closure is in rax
 24742 0001254E 803804                  	cmp byte [rax], T_closure
 24743 00012551 0F85A12D0000            	jne L_error_non_closure
 24744 00012557 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24745 0001255A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24746 0001255D 48890425[CF150000]      	mov qword [free_var_120], rax
 24747 00012565 48B8-                   	mov rax, sob_void
 24747 00012567 [0000000000000000] 
 24748                                  
 24749 0001256F 4889C7                  	mov rdi, rax
 24750 00012572 E87F300000              	call print_sexpr_if_not_void
 24751                                  	; preparing a non-tail-call
 24752 00012577 48B8-                   	mov rax, L_constants + 2007
 24752 00012579 [D707000000000000] 
 24753 00012581 50                      	push rax
 24754 00012582 48B8-                   	mov rax, L_constants + 2007
 24754 00012584 [D707000000000000] 
 24755 0001258C 50                      	push rax
 24756 0001258D 6A02                    	push 2	; arg count
 24757 0001258F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24758 00012594 E8082E0000              	call malloc
 24759 00012599 50                      	push rax
 24760 0001259A BF00000000              	mov rdi, 8 * 0	; new rib
 24761 0001259F E8FD2D0000              	call malloc
 24762 000125A4 50                      	push rax
 24763 000125A5 BF08000000              	mov rdi, 8 * 1	; extended env
 24764 000125AA E8F22D0000              	call malloc
 24765 000125AF 488B7D10                	mov rdi, ENV
 24766 000125B3 BE00000000              	mov rsi, 0
 24767 000125B8 BA01000000              	mov rdx, 1
 24768                                  .L_lambda_simple_env_loop_0212:	; ext_env[i + 1] <-- env[i]
 24769 000125BD 4883FE00                	cmp rsi, 0
 24770 000125C1 7410                    	je .L_lambda_simple_env_end_0212
 24771 000125C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24772 000125C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24773 000125CB 48FFC6                  	inc rsi
 24774 000125CE 48FFC2                  	inc rdx
 24775 000125D1 EBEA                    	jmp .L_lambda_simple_env_loop_0212
 24776                                  .L_lambda_simple_env_end_0212:
 24777 000125D3 5B                      	pop rbx
 24778 000125D4 BE00000000              	mov rsi, 0
 24779                                  .L_lambda_simple_params_loop_0212:	; copy params
 24780 000125D9 4883FE00                	cmp rsi, 0
 24781 000125DD 740E                    	je .L_lambda_simple_params_end_0212
 24782 000125DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24783 000125E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24784 000125E8 48FFC6                  	inc rsi
 24785 000125EB EBEC                    	jmp .L_lambda_simple_params_loop_0212
 24786                                  .L_lambda_simple_params_end_0212:
 24787 000125ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24788 000125F0 4889C3                  	mov rbx, rax
 24789 000125F3 58                      	pop rax
 24790 000125F4 C60004                  	mov byte [rax], T_closure
 24791 000125F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24792 000125FB 48C74009[08260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0212
 24793 00012603 E99C070000              	jmp .L_lambda_simple_end_0212
 24794                                  .L_lambda_simple_code_0212:	; lambda-simple body
 24795 00012608 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24796 0001260E 740B                    	je .L_lambda_simple_arity_check_ok_0212
 24797 00012610 FF742410                	push qword [rsp + 8 * 2]
 24798 00012614 6A02                    	push 2
 24799 00012616 E93F2D0000              	jmp L_error_incorrect_arity_simple
 24800                                  .L_lambda_simple_arity_check_ok_0212:
 24801 0001261B C8000000                	enter 0, 0
 24802 0001261F BF08000000              	mov rdi, 8 * 1
 24803 00012624 E8782D0000              	call malloc
 24804 00012629 488B5D20                	mov rbx, PARAM(0)
 24805 0001262D 488918                  	mov qword [rax], rbx
 24806 00012630 48894520                	mov PARAM(0), rax
 24807 00012634 48B8-                   	mov rax, sob_void
 24807 00012636 [0000000000000000] 
 24808                                  
 24809 0001263E BF08000000              	mov rdi, 8 * 1
 24810 00012643 E8592D0000              	call malloc
 24811 00012648 488B5D28                	mov rbx, PARAM(1)
 24812 0001264C 488918                  	mov qword [rax], rbx
 24813 0001264F 48894528                	mov PARAM(1), rax
 24814 00012653 48B8-                   	mov rax, sob_void
 24814 00012655 [0000000000000000] 
 24815                                  
 24816 0001265D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24817 00012662 E83A2D0000              	call malloc
 24818 00012667 50                      	push rax
 24819 00012668 BF10000000              	mov rdi, 8 * 2	; new rib
 24820 0001266D E82F2D0000              	call malloc
 24821 00012672 50                      	push rax
 24822 00012673 BF10000000              	mov rdi, 8 * 2	; extended env
 24823 00012678 E8242D0000              	call malloc
 24824 0001267D 488B7D10                	mov rdi, ENV
 24825 00012681 BE00000000              	mov rsi, 0
 24826 00012686 BA01000000              	mov rdx, 1
 24827                                  .L_lambda_simple_env_loop_0213:	; ext_env[i + 1] <-- env[i]
 24828 0001268B 4883FE01                	cmp rsi, 1
 24829 0001268F 7410                    	je .L_lambda_simple_env_end_0213
 24830 00012691 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24831 00012695 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24832 00012699 48FFC6                  	inc rsi
 24833 0001269C 48FFC2                  	inc rdx
 24834 0001269F EBEA                    	jmp .L_lambda_simple_env_loop_0213
 24835                                  .L_lambda_simple_env_end_0213:
 24836 000126A1 5B                      	pop rbx
 24837 000126A2 BE00000000              	mov rsi, 0
 24838                                  .L_lambda_simple_params_loop_0213:	; copy params
 24839 000126A7 4883FE02                	cmp rsi, 2
 24840 000126AB 740E                    	je .L_lambda_simple_params_end_0213
 24841 000126AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24842 000126B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24843 000126B6 48FFC6                  	inc rsi
 24844 000126B9 EBEC                    	jmp .L_lambda_simple_params_loop_0213
 24845                                  .L_lambda_simple_params_end_0213:
 24846 000126BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24847 000126BE 4889C3                  	mov rbx, rax
 24848 000126C1 58                      	pop rax
 24849 000126C2 C60004                  	mov byte [rax], T_closure
 24850 000126C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24851 000126C9 48C74009[D6260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0213
 24852 000126D1 E96C020000              	jmp .L_lambda_simple_end_0213
 24853                                  .L_lambda_simple_code_0213:	; lambda-simple body
 24854 000126D6 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24855 000126DC 740B                    	je .L_lambda_simple_arity_check_ok_0213
 24856 000126DE FF742410                	push qword [rsp + 8 * 2]
 24857 000126E2 6A03                    	push 3
 24858 000126E4 E9712C0000              	jmp L_error_incorrect_arity_simple
 24859                                  .L_lambda_simple_arity_check_ok_0213:
 24860 000126E9 C8000000                	enter 0, 0
 24861                                  	; preparing a non-tail-call
 24862 000126ED 488B4530                	mov rax, PARAM(2)	; param s
 24863 000126F1 50                      	push rax
 24864 000126F2 6A01                    	push 1	; arg count
 24865 000126F4 488B0425[F2140000]      	mov rax, qword [free_var_107]	; free var null?
 24866 000126FC 803805                  	cmp byte [rax], T_undefined
 24867 000126FF 0F846F2B0000            	je L_error_fvar_undefined
 24868 00012705 803804                  	cmp byte [rax], T_closure
 24869 00012708 0F85EA2B0000            	jne L_error_non_closure
 24870 0001270E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24871 00012711 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24872 00012714 483D[02000000]          	cmp rax, sob_boolean_false
 24873 0001271A 7409                    	je .L_if_else_018d
 24874 0001271C 488B4520                	mov rax, PARAM(0)	; param target
 24875 00012720 E919020000              	jmp .L_if_end_018d
 24876                                  .L_if_else_018d:
 24877                                  	; Initiating tail-call optimization
 24878                                  	; preparing a non-tail-call
 24879                                  	; preparing a non-tail-call
 24880                                  	; preparing a non-tail-call
 24881 00012725 488B4530                	mov rax, PARAM(2)	; param s
 24882 00012729 50                      	push rax
 24883 0001272A 6A01                    	push 1	; arg count
 24884 0001272C 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 24885 00012734 803805                  	cmp byte [rax], T_undefined
 24886 00012737 0F84372B0000            	je L_error_fvar_undefined
 24887 0001273D 803804                  	cmp byte [rax], T_closure
 24888 00012740 0F85B22B0000            	jne L_error_non_closure
 24889 00012746 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24890 00012749 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24891 0001274C 50                      	push rax
 24892 0001274D 6A01                    	push 1	; arg count
 24893 0001274F 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24894 00012757 803805                  	cmp byte [rax], T_undefined
 24895 0001275A 0F84142B0000            	je L_error_fvar_undefined
 24896 00012760 803804                  	cmp byte [rax], T_closure
 24897 00012763 0F858F2B0000            	jne L_error_non_closure
 24898 00012769 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24899 0001276C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24900 0001276F 50                      	push rax
 24901 00012770 48B8-                   	mov rax, L_constants + 2135
 24901 00012772 [5708000000000000] 
 24902 0001277A 50                      	push rax
 24903                                  	; preparing a non-tail-call
 24904 0001277B 488B4530                	mov rax, PARAM(2)	; param s
 24905 0001277F 50                      	push rax
 24906 00012780 6A01                    	push 1	; arg count
 24907 00012782 488B0425[18110000]      	mov rax, qword [free_var_49]	; free var car
 24908 0001278A 803805                  	cmp byte [rax], T_undefined
 24909 0001278D 0F84E12A0000            	je L_error_fvar_undefined
 24910 00012793 803804                  	cmp byte [rax], T_closure
 24911 00012796 0F855C2B0000            	jne L_error_non_closure
 24912 0001279C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24913 0001279F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24914 000127A2 50                      	push rax
 24915 000127A3 488B4528                	mov rax, PARAM(1)	; param i
 24916 000127A7 50                      	push rax
 24917 000127A8 488B4520                	mov rax, PARAM(0)	; param target
 24918 000127AC 50                      	push rax
 24919 000127AD 6A05                    	push 5	; arg count
 24920 000127AF 488B4510                	mov rax, ENV
 24921 000127B3 488B00                  	mov rax, qword [rax + 8 * 0]
 24922 000127B6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24923 000127BA 488B00                  	mov rax, qword [rax]
 24924 000127BD 803804                  	cmp byte [rax], T_closure
 24925 000127C0 0F85322B0000            	jne L_error_non_closure
 24926 000127C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24927 000127C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24928 000127CC 50                      	push rax
 24929 000127CD 6A01                    	push 1	; Number of arguments
 24930 000127CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24931 000127D4 E8C82B0000              	call malloc
 24932 000127D9 50                      	push rax
 24933 000127DA BF18000000              	mov rdi, 8 * 3	; new rib
 24934 000127DF E8BD2B0000              	call malloc
 24935 000127E4 50                      	push rax
 24936 000127E5 BF18000000              	mov rdi, 8 * 3	; extended env
 24937 000127EA E8B22B0000              	call malloc
 24938 000127EF 488B7D10                	mov rdi, ENV
 24939 000127F3 BE00000000              	mov rsi, 0
 24940 000127F8 BA01000000              	mov rdx, 1
 24941                                  .L_lambda_simple_env_loop_0214:	; ext_env[i + 1] <-- env[i]
 24942 000127FD 4883FE02                	cmp rsi, 2
 24943 00012801 7410                    	je .L_lambda_simple_env_end_0214
 24944 00012803 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24945 00012807 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24946 0001280B 48FFC6                  	inc rsi
 24947 0001280E 48FFC2                  	inc rdx
 24948 00012811 EBEA                    	jmp .L_lambda_simple_env_loop_0214
 24949                                  .L_lambda_simple_env_end_0214:
 24950 00012813 5B                      	pop rbx
 24951 00012814 BE00000000              	mov rsi, 0
 24952                                  .L_lambda_simple_params_loop_0214:	; copy params
 24953 00012819 4883FE03                	cmp rsi, 3
 24954 0001281D 740E                    	je .L_lambda_simple_params_end_0214
 24955 0001281F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24956 00012824 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24957 00012828 48FFC6                  	inc rsi
 24958 0001282B EBEC                    	jmp .L_lambda_simple_params_loop_0214
 24959                                  .L_lambda_simple_params_end_0214:
 24960 0001282D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24961 00012830 4889C3                  	mov rbx, rax
 24962 00012833 58                      	pop rax
 24963 00012834 C60004                  	mov byte [rax], T_closure
 24964 00012837 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24965 0001283B 48C74009[48280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0214
 24966 00012843 E9B0000000              	jmp .L_lambda_simple_end_0214
 24967                                  .L_lambda_simple_code_0214:	; lambda-simple body
 24968 00012848 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24969 0001284E 740B                    	je .L_lambda_simple_arity_check_ok_0214
 24970 00012850 FF742410                	push qword [rsp + 8 * 2]
 24971 00012854 6A01                    	push 1
 24972 00012856 E9FF2A0000              	jmp L_error_incorrect_arity_simple
 24973                                  .L_lambda_simple_arity_check_ok_0214:
 24974 0001285B C8000000                	enter 0, 0
 24975                                  	; Initiating tail-call optimization
 24976                                  	; preparing a non-tail-call
 24977 0001285F 488B4510                	mov rax, ENV
 24978 00012863 488B00                  	mov rax, qword [rax + 8 * 0]
 24979 00012866 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 24980 0001286A 50                      	push rax
 24981 0001286B 6A01                    	push 1	; arg count
 24982 0001286D 488B0425[17120000]      	mov rax, qword [free_var_64]	; free var cdr
 24983 00012875 803805                  	cmp byte [rax], T_undefined
 24984 00012878 0F84F6290000            	je L_error_fvar_undefined
 24985 0001287E 803804                  	cmp byte [rax], T_closure
 24986 00012881 0F85712A0000            	jne L_error_non_closure
 24987 00012887 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24988 0001288A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24989 0001288D 50                      	push rax
 24990 0001288E 488B4520                	mov rax, PARAM(0)	; param i
 24991 00012892 50                      	push rax
 24992 00012893 488B4510                	mov rax, ENV
 24993 00012897 488B00                  	mov rax, qword [rax + 8 * 0]
 24994 0001289A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 24995 0001289D 50                      	push rax
 24996 0001289E 6A03                    	push 3	; Number of arguments
 24997 000128A0 488B4510                	mov rax, ENV
 24998 000128A4 488B4008                	mov rax, qword [rax + 8 * 1]
 24999 000128A8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25000 000128AB 488B00                  	mov rax, qword [rax]
 25001 000128AE 803804                  	cmp byte [rax], T_closure
 25002 000128B1 0F85412A0000            	jne L_error_non_closure
 25003 000128B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25004 000128BA FF7508                  	push qword [rbp + 8]
 25005 000128BD FF7500                  	push qword [rbp]
 25006 000128C0 41BA07000000            	mov r10, 3 + 4
 25007 000128C6 4C8B4518                	mov r8, COUNT
 25008 000128CA 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25009 000128CF 4C8D4DF8                	lea r9, [rbp - 8]
 25010                                  .L_tc_recycle_frame_loop_029b:
 25011 000128D3 4983FA00                	cmp r10, 0
 25012 000128D7 7413                    	je .L_tc_recycle_frame_done_029b
 25013 000128D9 4D8B19                  	mov r11, qword [r9]
 25014 000128DC 4D8918                  	mov qword [r8], r11
 25015 000128DF 49FFCA                  	dec r10
 25016 000128E2 4983E808                	sub r8, 8
 25017 000128E6 4983E908                	sub r9, 8
 25018 000128EA EBE7                    	jmp .L_tc_recycle_frame_loop_029b
 25019                                  .L_tc_recycle_frame_done_029b:
 25020 000128EC 498D6008                	lea rsp, [r8 + 8]
 25021 000128F0 5D                      	pop rbp
 25022 000128F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25023 000128F4 C9                      	leave
 25024 000128F5 C21800                  	ret AND_KILL_FRAME(1)
 25025                                  .L_lambda_simple_end_0214:	; new closure is in rax
 25026 000128F8 803804                  	cmp byte [rax], T_closure
 25027 000128FB 0F85F7290000            	jne L_error_non_closure
 25028 00012901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25029 00012904 FF7508                  	push qword [rbp + 8]
 25030 00012907 FF7500                  	push qword [rbp]
 25031 0001290A 41BA05000000            	mov r10, 1 + 4
 25032 00012910 4C8B4518                	mov r8, COUNT
 25033 00012914 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25034 00012919 4C8D4DF8                	lea r9, [rbp - 8]
 25035                                  .L_tc_recycle_frame_loop_029c:
 25036 0001291D 4983FA00                	cmp r10, 0
 25037 00012921 7413                    	je .L_tc_recycle_frame_done_029c
 25038 00012923 4D8B19                  	mov r11, qword [r9]
 25039 00012926 4D8918                  	mov qword [r8], r11
 25040 00012929 49FFCA                  	dec r10
 25041 0001292C 4983E808                	sub r8, 8
 25042 00012930 4983E908                	sub r9, 8
 25043 00012934 EBE7                    	jmp .L_tc_recycle_frame_loop_029c
 25044                                  .L_tc_recycle_frame_done_029c:
 25045 00012936 498D6008                	lea rsp, [r8 + 8]
 25046 0001293A 5D                      	pop rbp
 25047 0001293B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25048                                  .L_if_end_018d:
 25049 0001293E C9                      	leave
 25050 0001293F C22800                  	ret AND_KILL_FRAME(3)
 25051                                  .L_lambda_simple_end_0213:	; new closure is in rax
 25052 00012942 50                      	push rax
 25053 00012943 488B4520                	mov rax, PARAM(0)	; param run
 25054 00012947 8F00                    	pop qword [rax]
 25055 00012949 48B8-                   	mov rax, sob_void
 25055 0001294B [0000000000000000] 
 25056                                  
 25057 00012953 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25058 00012958 E8442A0000              	call malloc
 25059 0001295D 50                      	push rax
 25060 0001295E BF10000000              	mov rdi, 8 * 2	; new rib
 25061 00012963 E8392A0000              	call malloc
 25062 00012968 50                      	push rax
 25063 00012969 BF10000000              	mov rdi, 8 * 2	; extended env
 25064 0001296E E82E2A0000              	call malloc
 25065 00012973 488B7D10                	mov rdi, ENV
 25066 00012977 BE00000000              	mov rsi, 0
 25067 0001297C BA01000000              	mov rdx, 1
 25068                                  .L_lambda_simple_env_loop_0215:	; ext_env[i + 1] <-- env[i]
 25069 00012981 4883FE01                	cmp rsi, 1
 25070 00012985 7410                    	je .L_lambda_simple_env_end_0215
 25071 00012987 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25072 0001298B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25073 0001298F 48FFC6                  	inc rsi
 25074 00012992 48FFC2                  	inc rdx
 25075 00012995 EBEA                    	jmp .L_lambda_simple_env_loop_0215
 25076                                  .L_lambda_simple_env_end_0215:
 25077 00012997 5B                      	pop rbx
 25078 00012998 BE00000000              	mov rsi, 0
 25079                                  .L_lambda_simple_params_loop_0215:	; copy params
 25080 0001299D 4883FE02                	cmp rsi, 2
 25081 000129A1 740E                    	je .L_lambda_simple_params_end_0215
 25082 000129A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25083 000129A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25084 000129AC 48FFC6                  	inc rsi
 25085 000129AF EBEC                    	jmp .L_lambda_simple_params_loop_0215
 25086                                  .L_lambda_simple_params_end_0215:
 25087 000129B1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25088 000129B4 4889C3                  	mov rbx, rax
 25089 000129B7 58                      	pop rax
 25090 000129B8 C60004                  	mov byte [rax], T_closure
 25091 000129BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25092 000129BF 48C74009[CC290100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0215
 25093 000129C7 E946010000              	jmp .L_lambda_simple_end_0215
 25094                                  .L_lambda_simple_code_0215:	; lambda-simple body
 25095 000129CC 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25096 000129D2 740B                    	je .L_lambda_simple_arity_check_ok_0215
 25097 000129D4 FF742410                	push qword [rsp + 8 * 2]
 25098 000129D8 6A05                    	push 5
 25099 000129DA E97B290000              	jmp L_error_incorrect_arity_simple
 25100                                  .L_lambda_simple_arity_check_ok_0215:
 25101 000129DF C8000000                	enter 0, 0
 25102                                  	; preparing a non-tail-call
 25103 000129E3 488B4540                	mov rax, PARAM(4)	; param limit
 25104 000129E7 50                      	push rax
 25105 000129E8 488B4538                	mov rax, PARAM(3)	; param j
 25106 000129EC 50                      	push rax
 25107 000129ED 6A02                    	push 2	; arg count
 25108 000129EF 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 25109 000129F7 803805                  	cmp byte [rax], T_undefined
 25110 000129FA 0F8474280000            	je L_error_fvar_undefined
 25111 00012A00 803804                  	cmp byte [rax], T_closure
 25112 00012A03 0F85EF280000            	jne L_error_non_closure
 25113 00012A09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25114 00012A0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25115 00012A0F 483D[02000000]          	cmp rax, sob_boolean_false
 25116 00012A15 0F84EF000000            	je .L_if_else_018e
 25117                                  	; preparing a non-tail-call
 25118                                  	; preparing a non-tail-call
 25119 00012A1B 488B4538                	mov rax, PARAM(3)	; param j
 25120 00012A1F 50                      	push rax
 25121 00012A20 488B4530                	mov rax, PARAM(2)	; param vec
 25122 00012A24 50                      	push rax
 25123 00012A25 6A02                    	push 2	; arg count
 25124 00012A27 488B0425[67170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 25125 00012A2F 803805                  	cmp byte [rax], T_undefined
 25126 00012A32 0F843C280000            	je L_error_fvar_undefined
 25127 00012A38 803804                  	cmp byte [rax], T_closure
 25128 00012A3B 0F85B7280000            	jne L_error_non_closure
 25129 00012A41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25130 00012A44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25131 00012A47 50                      	push rax
 25132 00012A48 488B4528                	mov rax, PARAM(1)	; param i
 25133 00012A4C 50                      	push rax
 25134 00012A4D 488B4520                	mov rax, PARAM(0)	; param target
 25135 00012A51 50                      	push rax
 25136 00012A52 6A03                    	push 3	; arg count
 25137 00012A54 488B0425[9A170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 25138 00012A5C 803805                  	cmp byte [rax], T_undefined
 25139 00012A5F 0F840F280000            	je L_error_fvar_undefined
 25140 00012A65 803804                  	cmp byte [rax], T_closure
 25141 00012A68 0F858A280000            	jne L_error_non_closure
 25142 00012A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25143 00012A71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25144                                  
 25145                                  	; preparing a non-tail-call
 25146 00012A74 488B4540                	mov rax, PARAM(4)	; param limit
 25147 00012A78 50                      	push rax
 25148                                  	; preparing a non-tail-call
 25149 00012A79 48B8-                   	mov rax, L_constants + 2270
 25149 00012A7B [DE08000000000000] 
 25150 00012A83 50                      	push rax
 25151 00012A84 488B4538                	mov rax, PARAM(3)	; param j
 25152 00012A88 50                      	push rax
 25153 00012A89 6A02                    	push 2	; arg count
 25154 00012A8B 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 25155 00012A93 803805                  	cmp byte [rax], T_undefined
 25156 00012A96 0F84D8270000            	je L_error_fvar_undefined
 25157 00012A9C 803804                  	cmp byte [rax], T_closure
 25158 00012A9F 0F8553280000            	jne L_error_non_closure
 25159 00012AA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25160 00012AA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25161 00012AAB 50                      	push rax
 25162 00012AAC 488B4530                	mov rax, PARAM(2)	; param vec
 25163 00012AB0 50                      	push rax
 25164                                  	; preparing a non-tail-call
 25165 00012AB1 48B8-                   	mov rax, L_constants + 2270
 25165 00012AB3 [DE08000000000000] 
 25166 00012ABB 50                      	push rax
 25167 00012ABC 488B4528                	mov rax, PARAM(1)	; param i
 25168 00012AC0 50                      	push rax
 25169 00012AC1 6A02                    	push 2	; arg count
 25170 00012AC3 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 25171 00012ACB 803805                  	cmp byte [rax], T_undefined
 25172 00012ACE 0F84A0270000            	je L_error_fvar_undefined
 25173 00012AD4 803804                  	cmp byte [rax], T_closure
 25174 00012AD7 0F851B280000            	jne L_error_non_closure
 25175 00012ADD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25176 00012AE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25177 00012AE3 50                      	push rax
 25178 00012AE4 488B4520                	mov rax, PARAM(0)	; param target
 25179 00012AE8 50                      	push rax
 25180 00012AE9 6A05                    	push 5	; arg count
 25181 00012AEB 488B4510                	mov rax, ENV
 25182 00012AEF 488B00                  	mov rax, qword [rax + 8 * 0]
 25183 00012AF2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25184 00012AF6 488B00                  	mov rax, qword [rax]
 25185 00012AF9 803804                  	cmp byte [rax], T_closure
 25186 00012AFC 0F85F6270000            	jne L_error_non_closure
 25187 00012B02 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25188 00012B05 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25189 00012B08 EB04                    	jmp .L_if_end_018e
 25190                                  .L_if_else_018e:
 25191 00012B0A 488B4528                	mov rax, PARAM(1)	; param i
 25192                                  .L_if_end_018e:
 25193 00012B0E C9                      	leave
 25194 00012B0F C23800                  	ret AND_KILL_FRAME(5)
 25195                                  .L_lambda_simple_end_0215:	; new closure is in rax
 25196 00012B12 50                      	push rax
 25197 00012B13 488B4528                	mov rax, PARAM(1)	; param add
 25198 00012B17 8F00                    	pop qword [rax]
 25199 00012B19 48B8-                   	mov rax, sob_void
 25199 00012B1B [0000000000000000] 
 25200                                  
 25201 00012B23 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25202 00012B28 E874280000              	call malloc
 25203 00012B2D 50                      	push rax
 25204 00012B2E BF10000000              	mov rdi, 8 * 2	; new rib
 25205 00012B33 E869280000              	call malloc
 25206 00012B38 50                      	push rax
 25207 00012B39 BF10000000              	mov rdi, 8 * 2	; extended env
 25208 00012B3E E85E280000              	call malloc
 25209 00012B43 488B7D10                	mov rdi, ENV
 25210 00012B47 BE00000000              	mov rsi, 0
 25211 00012B4C BA01000000              	mov rdx, 1
 25212                                  .L_lambda_opt_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 25213 00012B51 4883FE01                	cmp rsi, 1
 25214 00012B55 7410                    	je .L_lambda_opt_env_end_004a
 25215 00012B57 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25216 00012B5B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25217 00012B5F 48FFC6                  	inc rsi
 25218 00012B62 48FFC2                  	inc rdx
 25219 00012B65 EBEA                    	jmp .L_lambda_opt_env_loop_004a
 25220                                  .L_lambda_opt_env_end_004a:
 25221 00012B67 5B                      	pop rbx
 25222 00012B68 BE00000000              	mov rsi, 0
 25223                                  .L_lambda_opt_params_loop_004a:	; copy params
 25224 00012B6D 4883FE02                	cmp rsi, 2
 25225 00012B71 740E                    	je .L_lambda_opt_params_end_004a
 25226 00012B73 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25227 00012B78 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25228 00012B7C 48FFC6                  	inc rsi
 25229 00012B7F EBEC                    	jmp .L_lambda_opt_params_loop_004a
 25230                                  .L_lambda_opt_params_end_004a:
 25231 00012B81 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25232 00012B84 4889C3                  	mov rbx, rax
 25233 00012B87 58                      	pop rax
 25234 00012B88 C60004                  	mov byte [rax], T_closure
 25235 00012B8B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25236 00012B8F 48C74009[9C2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_004a
 25237 00012B97 E904020000              	jmp .L_lambda_opt_end_004a
 25238                                  .L_lambda_opt_code_004a:
 25239 00012B9C 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 25240 00012BA1 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 25241 00012BA5 7407                    	je .L_lambda_opt_arity_check_exact_004a	; Jump if arity matches
 25242 00012BA7 7F4C                    	jg .L_lambda_opt_arity_check_more_004a	; Jump if more arguments passed
 25243 00012BA9 E9C0270000              	jmp L_error_incorrect_arity_opt
 25244                                  .L_lambda_opt_arity_check_exact_004a:
 25245 00012BAE 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 25246 00012BB1 4983C603                	add r14, 3 ; add 3 first stack values
 25247 00012BB5 41BF00000000            	mov r15, 0 ; r15 = index
 25248 00012BBB 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 25249 00012BBF 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 25250 00012BC7 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_004a
 25251                                  .L_lambda_opt_stack_shrink_loop_004a:
 25252 00012BC9 4983FE00                	cmp r14, 0
 25253 00012BCD 7E11                    	jle .L_make_lambda_opt_exact_finish_004a
 25254 00012BCF 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 25255 00012BD4 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 25256 00012BD8 49FFCE                  	dec r14 ; next loop value
 25257 00012BDB 49FFC7                  	inc r15 ; update i
 25258 00012BDE EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_004a
 25259                                  .L_make_lambda_opt_exact_finish_004a:
 25260 00012BE0 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 25261 00012BE8 49FFC2                  	inc r10
 25262 00012BEB 4C89542410              	mov qword [rsp + 8 * 2], r10
 25263 00012BF0 E9AC000000              	jmp .L_lambda_opt_stack_adjusted_004a
 25264                                  .L_lambda_opt_arity_check_more_004a:
 25265 00012BF5 4D89D6                  	mov r14, r10 ; r14 = num args
 25266 00012BF8 4D89D7                  	mov r15, r10 ; r15 = num args
 25267 00012BFB 41B900000000            	mov r9, 0; r9 = number of params 
 25268 00012C01 4D29CE                  	sub r14, r9 ; r14 = extra args
 25269 00012C04 4D01F1                  	add r9, r14 ; r9 = num args
 25270 00012C07 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 25270 00012C09 [0100000000000000] 
 25271 00012C11 EB00                    	jmp .L_make_lambda_opt_arg_list_004a
 25272                                  .L_make_lambda_opt_arg_list_004a:
 25273 00012C13 4983FE00                	cmp r14, 0
 25274 00012C17 7E25                    	jle .L_make_lambda_opt_stack_fixed_004a
 25275 00012C19 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 25276 00012C1E BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 25277 00012C23 E879270000              	call malloc                         ; Allocate memory, result in rax
 25278 00012C28 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 25279 00012C2B 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 25280 00012C2F 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 25281 00012C33 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 25282 00012C36 49FFC9                  	dec r9                              ; args index minus 1
 25283 00012C39 49FFCE                  	dec r14                             ; next iteration
 25284 00012C3C EBD5                    	jmp .L_make_lambda_opt_arg_list_004a
 25285                                  .L_make_lambda_opt_stack_fixed_004a:
 25286 00012C3E 4D89FE                  	mov r14, r15 ; r14 = num args
 25287 00012C41 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 25288 00012C44 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 25289 00012C48 4D89C1                  	mov r9, r8
 25290 00012C4B 41BA00000000            	mov r10, 0; r10 = num of params
 25291 00012C51 4D29D6                  	sub r14, r10 ; r14 = extra args
 25292 00012C54 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 25293 00012C57 49FFCE                  	dec r14 ; how much we need to change stack wise?
 25294 00012C5A 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 25295 00012C5F 4D89CC                  	mov r12, r9
 25296 00012C62 4D29F4                  	sub r12, r14
 25297 00012C65 49FFCC                  	dec r12
 25298 00012C68 49FFCC                  	dec r12
 25299 00012C6B EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_004a
 25300                                  .L_lambda_opt_stack_shrink_loop_more_004a:
 25301 00012C6D 4983F800                	cmp r8, 0
 25302 00012C71 7E16                    	jle .L_make_lambda_opt_more_finish_004a
 25303 00012C73 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 25304 00012C77 4D01F4                  	add r12, r14
 25305 00012C7A 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 25306 00012C7E 49FFC8                  	dec r8 ; next iteration
 25307 00012C81 4D29F4                  	sub r12, r14 ; next iteration
 25308 00012C84 49FFCC                  	dec r12 ; next iteration
 25309 00012C87 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_004a
 25310                                  .L_make_lambda_opt_more_finish_004a:
 25311 00012C89 41BA00000000            	mov r10, 0
 25312 00012C8F 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 25313 00012C98 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 25314 00012C9C 4C01F4                  	add rsp, r14  ; Add to rsp
 25315 00012C9F EB00                    	jmp .L_lambda_opt_stack_adjusted_004a
 25316                                  .L_lambda_opt_stack_adjusted_004a:
 25317 00012CA1 C8000000                	enter 0, 0
 25318                                  	; Initiating tail-call optimization
 25319 00012CA5 488B4520                	mov rax, PARAM(0)	; param vectors
 25320 00012CA9 50                      	push rax
 25321 00012CAA 48B8-                   	mov rax, L_constants + 2135
 25321 00012CAC [5708000000000000] 
 25322 00012CB4 50                      	push rax
 25323                                  	; preparing a non-tail-call
 25324                                  	; preparing a non-tail-call
 25325                                  	; preparing a non-tail-call
 25326 00012CB5 488B4520                	mov rax, PARAM(0)	; param vectors
 25327 00012CB9 50                      	push rax
 25328 00012CBA 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25329 00012CC2 803805                  	cmp byte [rax], T_undefined
 25330 00012CC5 0F84A9250000            	je L_error_fvar_undefined
 25331 00012CCB 50                      	push rax
 25332 00012CCC 6A02                    	push 2	; arg count
 25333 00012CCE 488B0425[AE140000]      	mov rax, qword [free_var_103]	; free var map
 25334 00012CD6 803805                  	cmp byte [rax], T_undefined
 25335 00012CD9 0F8495250000            	je L_error_fvar_undefined
 25336 00012CDF 803804                  	cmp byte [rax], T_closure
 25337 00012CE2 0F8510260000            	jne L_error_non_closure
 25338 00012CE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25339 00012CEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25340 00012CEE 50                      	push rax
 25341 00012CEF 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 25342 00012CF7 803805                  	cmp byte [rax], T_undefined
 25343 00012CFA 0F8474250000            	je L_error_fvar_undefined
 25344 00012D00 50                      	push rax
 25345 00012D01 6A02                    	push 2	; arg count
 25346 00012D03 488B0425[08100000]      	mov rax, qword [free_var_33]	; free var apply
 25347 00012D0B 803805                  	cmp byte [rax], T_undefined
 25348 00012D0E 0F8460250000            	je L_error_fvar_undefined
 25349 00012D14 803804                  	cmp byte [rax], T_closure
 25350 00012D17 0F85DB250000            	jne L_error_non_closure
 25351 00012D1D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25352 00012D20 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25353 00012D23 50                      	push rax
 25354 00012D24 6A01                    	push 1	; arg count
 25355 00012D26 488B0425[8C140000]      	mov rax, qword [free_var_101]	; free var make-vector
 25356 00012D2E 803805                  	cmp byte [rax], T_undefined
 25357 00012D31 0F843D250000            	je L_error_fvar_undefined
 25358 00012D37 803804                  	cmp byte [rax], T_closure
 25359 00012D3A 0F85B8250000            	jne L_error_non_closure
 25360 00012D40 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25361 00012D43 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25362 00012D46 50                      	push rax
 25363 00012D47 6A03                    	push 3	; Number of arguments
 25364 00012D49 488B4510                	mov rax, ENV
 25365 00012D4D 488B00                  	mov rax, qword [rax + 8 * 0]
 25366 00012D50 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25367 00012D53 488B00                  	mov rax, qword [rax]
 25368 00012D56 803804                  	cmp byte [rax], T_closure
 25369 00012D59 0F8599250000            	jne L_error_non_closure
 25370 00012D5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25371 00012D62 FF7508                  	push qword [rbp + 8]
 25372 00012D65 FF7500                  	push qword [rbp]
 25373 00012D68 41BA07000000            	mov r10, 3 + 4
 25374 00012D6E 4C8B4518                	mov r8, COUNT
 25375 00012D72 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25376 00012D77 4C8D4DF8                	lea r9, [rbp - 8]
 25377                                  .L_tc_recycle_frame_loop_029d:
 25378 00012D7B 4983FA00                	cmp r10, 0
 25379 00012D7F 7413                    	je .L_tc_recycle_frame_done_029d
 25380 00012D81 4D8B19                  	mov r11, qword [r9]
 25381 00012D84 4D8918                  	mov qword [r8], r11
 25382 00012D87 49FFCA                  	dec r10
 25383 00012D8A 4983E808                	sub r8, 8
 25384 00012D8E 4983E908                	sub r9, 8
 25385 00012D92 EBE7                    	jmp .L_tc_recycle_frame_loop_029d
 25386                                  .L_tc_recycle_frame_done_029d:
 25387 00012D94 498D6008                	lea rsp, [r8 + 8]
 25388 00012D98 5D                      	pop rbp
 25389 00012D99 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25390 00012D9C C9                      	leave
 25391 00012D9D C21800                  	ret AND_KILL_FRAME(1)
 25392                                  .L_lambda_opt_end_004a:	; new closure is in rax
 25393 00012DA0 C9                      	leave
 25394 00012DA1 C22000                  	ret AND_KILL_FRAME(2)
 25395                                  .L_lambda_simple_end_0212:	; new closure is in rax
 25396 00012DA4 803804                  	cmp byte [rax], T_closure
 25397 00012DA7 0F854B250000            	jne L_error_non_closure
 25398 00012DAD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25399 00012DB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25400 00012DB3 48890425[45170000]      	mov qword [free_var_142], rax
 25401 00012DBB 48B8-                   	mov rax, sob_void
 25401 00012DBD [0000000000000000] 
 25402                                  
 25403 00012DC5 4889C7                  	mov rdi, rax
 25404 00012DC8 E829280000              	call print_sexpr_if_not_void
 25405 00012DCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25406 00012DD2 E8CA250000              	call malloc
 25407 00012DD7 50                      	push rax
 25408 00012DD8 BF00000000              	mov rdi, 8 * 0	; new rib
 25409 00012DDD E8BF250000              	call malloc
 25410 00012DE2 50                      	push rax
 25411 00012DE3 BF08000000              	mov rdi, 8 * 1	; extended env
 25412 00012DE8 E8B4250000              	call malloc
 25413 00012DED 488B7D10                	mov rdi, ENV
 25414 00012DF1 BE00000000              	mov rsi, 0
 25415 00012DF6 BA01000000              	mov rdx, 1
 25416                                  .L_lambda_simple_env_loop_0216:	; ext_env[i + 1] <-- env[i]
 25417 00012DFB 4883FE00                	cmp rsi, 0
 25418 00012DFF 7410                    	je .L_lambda_simple_env_end_0216
 25419 00012E01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25420 00012E05 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25421 00012E09 48FFC6                  	inc rsi
 25422 00012E0C 48FFC2                  	inc rdx
 25423 00012E0F EBEA                    	jmp .L_lambda_simple_env_loop_0216
 25424                                  .L_lambda_simple_env_end_0216:
 25425 00012E11 5B                      	pop rbx
 25426 00012E12 BE00000000              	mov rsi, 0
 25427                                  .L_lambda_simple_params_loop_0216:	; copy params
 25428 00012E17 4883FE00                	cmp rsi, 0
 25429 00012E1B 740E                    	je .L_lambda_simple_params_end_0216
 25430 00012E1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25431 00012E22 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25432 00012E26 48FFC6                  	inc rsi
 25433 00012E29 EBEC                    	jmp .L_lambda_simple_params_loop_0216
 25434                                  .L_lambda_simple_params_end_0216:
 25435 00012E2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25436 00012E2E 4889C3                  	mov rbx, rax
 25437 00012E31 58                      	pop rax
 25438 00012E32 C60004                  	mov byte [rax], T_closure
 25439 00012E35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25440 00012E39 48C74009[462E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0216
 25441 00012E41 E9BF000000              	jmp .L_lambda_simple_end_0216
 25442                                  .L_lambda_simple_code_0216:	; lambda-simple body
 25443 00012E46 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25444 00012E4C 740B                    	je .L_lambda_simple_arity_check_ok_0216
 25445 00012E4E FF742410                	push qword [rsp + 8 * 2]
 25446 00012E52 6A01                    	push 1
 25447 00012E54 E901250000              	jmp L_error_incorrect_arity_simple
 25448                                  .L_lambda_simple_arity_check_ok_0216:
 25449 00012E59 C8000000                	enter 0, 0
 25450                                  	; Initiating tail-call optimization
 25451                                  	; preparing a non-tail-call
 25452                                  	; preparing a non-tail-call
 25453 00012E5D 488B4520                	mov rax, PARAM(0)	; param str
 25454 00012E61 50                      	push rax
 25455 00012E62 6A01                    	push 1	; arg count
 25456 00012E64 488B0425[BE150000]      	mov rax, qword [free_var_119]	; free var string->list
 25457 00012E6C 803805                  	cmp byte [rax], T_undefined
 25458 00012E6F 0F84FF230000            	je L_error_fvar_undefined
 25459 00012E75 803804                  	cmp byte [rax], T_closure
 25460 00012E78 0F857A240000            	jne L_error_non_closure
 25461 00012E7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25462 00012E81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25463 00012E84 50                      	push rax
 25464 00012E85 6A01                    	push 1	; arg count
 25465 00012E87 488B0425[AD150000]      	mov rax, qword [free_var_118]	; free var reverse
 25466 00012E8F 803805                  	cmp byte [rax], T_undefined
 25467 00012E92 0F84DC230000            	je L_error_fvar_undefined
 25468 00012E98 803804                  	cmp byte [rax], T_closure
 25469 00012E9B 0F8557240000            	jne L_error_non_closure
 25470 00012EA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25471 00012EA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25472 00012EA7 50                      	push rax
 25473 00012EA8 6A01                    	push 1	; Number of arguments
 25474 00012EAA 488B0425[15140000]      	mov rax, qword [free_var_94]	; free var list->string
 25475 00012EB2 803805                  	cmp byte [rax], T_undefined
 25476 00012EB5 0F84B9230000            	je L_error_fvar_undefined
 25477 00012EBB 803804                  	cmp byte [rax], T_closure
 25478 00012EBE 0F8534240000            	jne L_error_non_closure
 25479 00012EC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25480 00012EC7 FF7508                  	push qword [rbp + 8]
 25481 00012ECA FF7500                  	push qword [rbp]
 25482 00012ECD 41BA05000000            	mov r10, 1 + 4
 25483 00012ED3 4C8B4518                	mov r8, COUNT
 25484 00012ED7 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25485 00012EDC 4C8D4DF8                	lea r9, [rbp - 8]
 25486                                  .L_tc_recycle_frame_loop_029e:
 25487 00012EE0 4983FA00                	cmp r10, 0
 25488 00012EE4 7413                    	je .L_tc_recycle_frame_done_029e
 25489 00012EE6 4D8B19                  	mov r11, qword [r9]
 25490 00012EE9 4D8918                  	mov qword [r8], r11
 25491 00012EEC 49FFCA                  	dec r10
 25492 00012EEF 4983E808                	sub r8, 8
 25493 00012EF3 4983E908                	sub r9, 8
 25494 00012EF7 EBE7                    	jmp .L_tc_recycle_frame_loop_029e
 25495                                  .L_tc_recycle_frame_done_029e:
 25496 00012EF9 498D6008                	lea rsp, [r8 + 8]
 25497 00012EFD 5D                      	pop rbp
 25498 00012EFE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25499 00012F01 C9                      	leave
 25500 00012F02 C21800                  	ret AND_KILL_FRAME(1)
 25501                                  .L_lambda_simple_end_0216:	; new closure is in rax
 25502 00012F05 48890425[68160000]      	mov qword [free_var_129], rax
 25503 00012F0D 48B8-                   	mov rax, sob_void
 25503 00012F0F [0000000000000000] 
 25504                                  
 25505 00012F17 4889C7                  	mov rdi, rax
 25506 00012F1A E8D7260000              	call print_sexpr_if_not_void
 25507 00012F1F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25508 00012F24 E878240000              	call malloc
 25509 00012F29 50                      	push rax
 25510 00012F2A BF00000000              	mov rdi, 8 * 0	; new rib
 25511 00012F2F E86D240000              	call malloc
 25512 00012F34 50                      	push rax
 25513 00012F35 BF08000000              	mov rdi, 8 * 1	; extended env
 25514 00012F3A E862240000              	call malloc
 25515 00012F3F 488B7D10                	mov rdi, ENV
 25516 00012F43 BE00000000              	mov rsi, 0
 25517 00012F48 BA01000000              	mov rdx, 1
 25518                                  .L_lambda_simple_env_loop_0217:	; ext_env[i + 1] <-- env[i]
 25519 00012F4D 4883FE00                	cmp rsi, 0
 25520 00012F51 7410                    	je .L_lambda_simple_env_end_0217
 25521 00012F53 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25522 00012F57 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25523 00012F5B 48FFC6                  	inc rsi
 25524 00012F5E 48FFC2                  	inc rdx
 25525 00012F61 EBEA                    	jmp .L_lambda_simple_env_loop_0217
 25526                                  .L_lambda_simple_env_end_0217:
 25527 00012F63 5B                      	pop rbx
 25528 00012F64 BE00000000              	mov rsi, 0
 25529                                  .L_lambda_simple_params_loop_0217:	; copy params
 25530 00012F69 4883FE00                	cmp rsi, 0
 25531 00012F6D 740E                    	je .L_lambda_simple_params_end_0217
 25532 00012F6F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25533 00012F74 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25534 00012F78 48FFC6                  	inc rsi
 25535 00012F7B EBEC                    	jmp .L_lambda_simple_params_loop_0217
 25536                                  .L_lambda_simple_params_end_0217:
 25537 00012F7D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25538 00012F80 4889C3                  	mov rbx, rax
 25539 00012F83 58                      	pop rax
 25540 00012F84 C60004                  	mov byte [rax], T_closure
 25541 00012F87 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25542 00012F8B 48C74009[982F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0217
 25543 00012F93 E9BF000000              	jmp .L_lambda_simple_end_0217
 25544                                  .L_lambda_simple_code_0217:	; lambda-simple body
 25545 00012F98 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25546 00012F9E 740B                    	je .L_lambda_simple_arity_check_ok_0217
 25547 00012FA0 FF742410                	push qword [rsp + 8 * 2]
 25548 00012FA4 6A01                    	push 1
 25549 00012FA6 E9AF230000              	jmp L_error_incorrect_arity_simple
 25550                                  .L_lambda_simple_arity_check_ok_0217:
 25551 00012FAB C8000000                	enter 0, 0
 25552                                  	; Initiating tail-call optimization
 25553                                  	; preparing a non-tail-call
 25554                                  	; preparing a non-tail-call
 25555 00012FAF 488B4520                	mov rax, PARAM(0)	; param vec
 25556 00012FB3 50                      	push rax
 25557 00012FB4 6A01                    	push 1	; arg count
 25558 00012FB6 488B0425[34170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25559 00012FBE 803805                  	cmp byte [rax], T_undefined
 25560 00012FC1 0F84AD220000            	je L_error_fvar_undefined
 25561 00012FC7 803804                  	cmp byte [rax], T_closure
 25562 00012FCA 0F8528230000            	jne L_error_non_closure
 25563 00012FD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25564 00012FD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25565 00012FD6 50                      	push rax
 25566 00012FD7 6A01                    	push 1	; arg count
 25567 00012FD9 488B0425[AD150000]      	mov rax, qword [free_var_118]	; free var reverse
 25568 00012FE1 803805                  	cmp byte [rax], T_undefined
 25569 00012FE4 0F848A220000            	je L_error_fvar_undefined
 25570 00012FEA 803804                  	cmp byte [rax], T_closure
 25571 00012FED 0F8505230000            	jne L_error_non_closure
 25572 00012FF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25573 00012FF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25574 00012FF9 50                      	push rax
 25575 00012FFA 6A01                    	push 1	; Number of arguments
 25576 00012FFC 488B0425[26140000]      	mov rax, qword [free_var_95]	; free var list->vector
 25577 00013004 803805                  	cmp byte [rax], T_undefined
 25578 00013007 0F8467220000            	je L_error_fvar_undefined
 25579 0001300D 803804                  	cmp byte [rax], T_closure
 25580 00013010 0F85E2220000            	jne L_error_non_closure
 25581 00013016 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25582 00013019 FF7508                  	push qword [rbp + 8]
 25583 0001301C FF7500                  	push qword [rbp]
 25584 0001301F 41BA05000000            	mov r10, 1 + 4
 25585 00013025 4C8B4518                	mov r8, COUNT
 25586 00013029 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25587 0001302E 4C8D4DF8                	lea r9, [rbp - 8]
 25588                                  .L_tc_recycle_frame_loop_029f:
 25589 00013032 4983FA00                	cmp r10, 0
 25590 00013036 7413                    	je .L_tc_recycle_frame_done_029f
 25591 00013038 4D8B19                  	mov r11, qword [r9]
 25592 0001303B 4D8918                  	mov qword [r8], r11
 25593 0001303E 49FFCA                  	dec r10
 25594 00013041 4983E808                	sub r8, 8
 25595 00013045 4983E908                	sub r9, 8
 25596 00013049 EBE7                    	jmp .L_tc_recycle_frame_loop_029f
 25597                                  .L_tc_recycle_frame_done_029f:
 25598 0001304B 498D6008                	lea rsp, [r8 + 8]
 25599 0001304F 5D                      	pop rbp
 25600 00013050 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25601 00013053 C9                      	leave
 25602 00013054 C21800                  	ret AND_KILL_FRAME(1)
 25603                                  .L_lambda_simple_end_0217:	; new closure is in rax
 25604 00013057 48890425[78170000]      	mov qword [free_var_145], rax
 25605 0001305F 48B8-                   	mov rax, sob_void
 25605 00013061 [0000000000000000] 
 25606                                  
 25607 00013069 4889C7                  	mov rdi, rax
 25608 0001306C E885250000              	call print_sexpr_if_not_void
 25609                                  	; preparing a non-tail-call
 25610 00013071 48B8-                   	mov rax, L_constants + 2007
 25610 00013073 [D707000000000000] 
 25611 0001307B 50                      	push rax
 25612 0001307C 6A01                    	push 1	; arg count
 25613 0001307E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25614 00013083 E819230000              	call malloc
 25615 00013088 50                      	push rax
 25616 00013089 BF00000000              	mov rdi, 8 * 0	; new rib
 25617 0001308E E80E230000              	call malloc
 25618 00013093 50                      	push rax
 25619 00013094 BF08000000              	mov rdi, 8 * 1	; extended env
 25620 00013099 E803230000              	call malloc
 25621 0001309E 488B7D10                	mov rdi, ENV
 25622 000130A2 BE00000000              	mov rsi, 0
 25623 000130A7 BA01000000              	mov rdx, 1
 25624                                  .L_lambda_simple_env_loop_0218:	; ext_env[i + 1] <-- env[i]
 25625 000130AC 4883FE00                	cmp rsi, 0
 25626 000130B0 7410                    	je .L_lambda_simple_env_end_0218
 25627 000130B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25628 000130B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25629 000130BA 48FFC6                  	inc rsi
 25630 000130BD 48FFC2                  	inc rdx
 25631 000130C0 EBEA                    	jmp .L_lambda_simple_env_loop_0218
 25632                                  .L_lambda_simple_env_end_0218:
 25633 000130C2 5B                      	pop rbx
 25634 000130C3 BE00000000              	mov rsi, 0
 25635                                  .L_lambda_simple_params_loop_0218:	; copy params
 25636 000130C8 4883FE00                	cmp rsi, 0
 25637 000130CC 740E                    	je .L_lambda_simple_params_end_0218
 25638 000130CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25639 000130D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25640 000130D7 48FFC6                  	inc rsi
 25641 000130DA EBEC                    	jmp .L_lambda_simple_params_loop_0218
 25642                                  .L_lambda_simple_params_end_0218:
 25643 000130DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25644 000130DF 4889C3                  	mov rbx, rax
 25645 000130E2 58                      	pop rax
 25646 000130E3 C60004                  	mov byte [rax], T_closure
 25647 000130E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25648 000130EA 48C74009[F7300100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0218
 25649 000130F2 E9EA050000              	jmp .L_lambda_simple_end_0218
 25650                                  .L_lambda_simple_code_0218:	; lambda-simple body
 25651 000130F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25652 000130FD 740B                    	je .L_lambda_simple_arity_check_ok_0218
 25653 000130FF FF742410                	push qword [rsp + 8 * 2]
 25654 00013103 6A01                    	push 1
 25655 00013105 E950220000              	jmp L_error_incorrect_arity_simple
 25656                                  .L_lambda_simple_arity_check_ok_0218:
 25657 0001310A C8000000                	enter 0, 0
 25658 0001310E BF08000000              	mov rdi, 8 * 1
 25659 00013113 E889220000              	call malloc
 25660 00013118 488B5D20                	mov rbx, PARAM(0)
 25661 0001311C 488918                  	mov qword [rax], rbx
 25662 0001311F 48894520                	mov PARAM(0), rax
 25663 00013123 48B8-                   	mov rax, sob_void
 25663 00013125 [0000000000000000] 
 25664                                  
 25665 0001312D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25666 00013132 E86A220000              	call malloc
 25667 00013137 50                      	push rax
 25668 00013138 BF08000000              	mov rdi, 8 * 1	; new rib
 25669 0001313D E85F220000              	call malloc
 25670 00013142 50                      	push rax
 25671 00013143 BF10000000              	mov rdi, 8 * 2	; extended env
 25672 00013148 E854220000              	call malloc
 25673 0001314D 488B7D10                	mov rdi, ENV
 25674 00013151 BE00000000              	mov rsi, 0
 25675 00013156 BA01000000              	mov rdx, 1
 25676                                  .L_lambda_simple_env_loop_0219:	; ext_env[i + 1] <-- env[i]
 25677 0001315B 4883FE01                	cmp rsi, 1
 25678 0001315F 7410                    	je .L_lambda_simple_env_end_0219
 25679 00013161 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25680 00013165 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25681 00013169 48FFC6                  	inc rsi
 25682 0001316C 48FFC2                  	inc rdx
 25683 0001316F EBEA                    	jmp .L_lambda_simple_env_loop_0219
 25684                                  .L_lambda_simple_env_end_0219:
 25685 00013171 5B                      	pop rbx
 25686 00013172 BE00000000              	mov rsi, 0
 25687                                  .L_lambda_simple_params_loop_0219:	; copy params
 25688 00013177 4883FE01                	cmp rsi, 1
 25689 0001317B 740E                    	je .L_lambda_simple_params_end_0219
 25690 0001317D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25691 00013182 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25692 00013186 48FFC6                  	inc rsi
 25693 00013189 EBEC                    	jmp .L_lambda_simple_params_loop_0219
 25694                                  .L_lambda_simple_params_end_0219:
 25695 0001318B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25696 0001318E 4889C3                  	mov rbx, rax
 25697 00013191 58                      	pop rax
 25698 00013192 C60004                  	mov byte [rax], T_closure
 25699 00013195 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25700 00013199 48C74009[A6310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0219
 25701 000131A1 E9B1020000              	jmp .L_lambda_simple_end_0219
 25702                                  .L_lambda_simple_code_0219:	; lambda-simple body
 25703 000131A6 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25704 000131AC 740B                    	je .L_lambda_simple_arity_check_ok_0219
 25705 000131AE FF742410                	push qword [rsp + 8 * 2]
 25706 000131B2 6A03                    	push 3
 25707 000131B4 E9A1210000              	jmp L_error_incorrect_arity_simple
 25708                                  .L_lambda_simple_arity_check_ok_0219:
 25709 000131B9 C8000000                	enter 0, 0
 25710                                  	; preparing a non-tail-call
 25711 000131BD 488B4530                	mov rax, PARAM(2)	; param j
 25712 000131C1 50                      	push rax
 25713 000131C2 488B4528                	mov rax, PARAM(1)	; param i
 25714 000131C6 50                      	push rax
 25715 000131C7 6A02                    	push 2	; arg count
 25716 000131C9 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 25717 000131D1 803805                  	cmp byte [rax], T_undefined
 25718 000131D4 0F849A200000            	je L_error_fvar_undefined
 25719 000131DA 803804                  	cmp byte [rax], T_closure
 25720 000131DD 0F8515210000            	jne L_error_non_closure
 25721 000131E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25722 000131E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25723 000131E9 483D[02000000]          	cmp rax, sob_boolean_false
 25724 000131EF 0F845A020000            	je .L_if_else_018f
 25725                                  	; Initiating tail-call optimization
 25726                                  	; preparing a non-tail-call
 25727 000131F5 488B4528                	mov rax, PARAM(1)	; param i
 25728 000131F9 50                      	push rax
 25729 000131FA 488B4520                	mov rax, PARAM(0)	; param str
 25730 000131FE 50                      	push rax
 25731 000131FF 6A02                    	push 2	; arg count
 25732 00013201 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25733 00013209 803805                  	cmp byte [rax], T_undefined
 25734 0001320C 0F8462200000            	je L_error_fvar_undefined
 25735 00013212 803804                  	cmp byte [rax], T_closure
 25736 00013215 0F85DD200000            	jne L_error_non_closure
 25737 0001321B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25738 0001321E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25739 00013221 50                      	push rax
 25740 00013222 6A01                    	push 1	; Number of arguments
 25741 00013224 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25742 00013229 E873210000              	call malloc
 25743 0001322E 50                      	push rax
 25744 0001322F BF18000000              	mov rdi, 8 * 3	; new rib
 25745 00013234 E868210000              	call malloc
 25746 00013239 50                      	push rax
 25747 0001323A BF18000000              	mov rdi, 8 * 3	; extended env
 25748 0001323F E85D210000              	call malloc
 25749 00013244 488B7D10                	mov rdi, ENV
 25750 00013248 BE00000000              	mov rsi, 0
 25751 0001324D BA01000000              	mov rdx, 1
 25752                                  .L_lambda_simple_env_loop_021a:	; ext_env[i + 1] <-- env[i]
 25753 00013252 4883FE02                	cmp rsi, 2
 25754 00013256 7410                    	je .L_lambda_simple_env_end_021a
 25755 00013258 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25756 0001325C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25757 00013260 48FFC6                  	inc rsi
 25758 00013263 48FFC2                  	inc rdx
 25759 00013266 EBEA                    	jmp .L_lambda_simple_env_loop_021a
 25760                                  .L_lambda_simple_env_end_021a:
 25761 00013268 5B                      	pop rbx
 25762 00013269 BE00000000              	mov rsi, 0
 25763                                  .L_lambda_simple_params_loop_021a:	; copy params
 25764 0001326E 4883FE03                	cmp rsi, 3
 25765 00013272 740E                    	je .L_lambda_simple_params_end_021a
 25766 00013274 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25767 00013279 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25768 0001327D 48FFC6                  	inc rsi
 25769 00013280 EBEC                    	jmp .L_lambda_simple_params_loop_021a
 25770                                  .L_lambda_simple_params_end_021a:
 25771 00013282 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25772 00013285 4889C3                  	mov rbx, rax
 25773 00013288 58                      	pop rax
 25774 00013289 C60004                  	mov byte [rax], T_closure
 25775 0001328C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25776 00013290 48C74009[9D320100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021a
 25777 00013298 E96A010000              	jmp .L_lambda_simple_end_021a
 25778                                  .L_lambda_simple_code_021a:	; lambda-simple body
 25779 0001329D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25780 000132A3 740B                    	je .L_lambda_simple_arity_check_ok_021a
 25781 000132A5 FF742410                	push qword [rsp + 8 * 2]
 25782 000132A9 6A01                    	push 1
 25783 000132AB E9AA200000              	jmp L_error_incorrect_arity_simple
 25784                                  .L_lambda_simple_arity_check_ok_021a:
 25785 000132B0 C8000000                	enter 0, 0
 25786                                  	; preparing a non-tail-call
 25787                                  	; preparing a non-tail-call
 25788 000132B4 488B4510                	mov rax, ENV
 25789 000132B8 488B00                  	mov rax, qword [rax + 8 * 0]
 25790 000132BB 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 25791 000132BF 50                      	push rax
 25792 000132C0 488B4510                	mov rax, ENV
 25793 000132C4 488B00                  	mov rax, qword [rax + 8 * 0]
 25794 000132C7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 25795 000132CA 50                      	push rax
 25796 000132CB 6A02                    	push 2	; arg count
 25797 000132CD 488B0425[57160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25798 000132D5 803805                  	cmp byte [rax], T_undefined
 25799 000132D8 0F84961F0000            	je L_error_fvar_undefined
 25800 000132DE 803804                  	cmp byte [rax], T_closure
 25801 000132E1 0F8511200000            	jne L_error_non_closure
 25802 000132E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25803 000132EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 25804 000132ED 50                      	push rax
 25805 000132EE 488B4510                	mov rax, ENV
 25806 000132F2 488B00                  	mov rax, qword [rax + 8 * 0]
 25807 000132F5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 25808 000132F9 50                      	push rax
 25809 000132FA 488B4510                	mov rax, ENV
 25810 000132FE 488B00                  	mov rax, qword [rax + 8 * 0]
 25811 00013301 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 25812 00013304 50                      	push rax
 25813 00013305 6A03                    	push 3	; arg count
 25814 00013307 488B0425[8A160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25815 0001330F 803805                  	cmp byte [rax], T_undefined
 25816 00013312 0F845C1F0000            	je L_error_fvar_undefined
 25817 00013318 803804                  	cmp byte [rax], T_closure
 25818 0001331B 0F85D71F0000            	jne L_error_non_closure
 25819 00013321 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25820 00013324 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25821                                  
 25822                                  	; preparing a non-tail-call
 25823 00013327 488B4520                	mov rax, PARAM(0)	; param ch
 25824 0001332B 50                      	push rax
 25825 0001332C 488B4510                	mov rax, ENV
 25826 00013330 488B00                  	mov rax, qword [rax + 8 * 0]
 25827 00013333 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 25828 00013337 50                      	push rax
 25829 00013338 488B4510                	mov rax, ENV
 25830 0001333C 488B00                  	mov rax, qword [rax + 8 * 0]
 25831 0001333F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 25832 00013342 50                      	push rax
 25833 00013343 6A03                    	push 3	; arg count
 25834 00013345 488B0425[8A160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25835 0001334D 803805                  	cmp byte [rax], T_undefined
 25836 00013350 0F841E1F0000            	je L_error_fvar_undefined
 25837 00013356 803804                  	cmp byte [rax], T_closure
 25838 00013359 0F85991F0000            	jne L_error_non_closure
 25839 0001335F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25840 00013362 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25841                                  
 25842                                  	; preparing a non-tail-call
 25843                                  	; preparing a non-tail-call
 25844 00013365 48B8-                   	mov rax, L_constants + 2270
 25844 00013367 [DE08000000000000] 
 25845 0001336F 50                      	push rax
 25846 00013370 488B4510                	mov rax, ENV
 25847 00013374 488B00                  	mov rax, qword [rax + 8 * 0]
 25848 00013377 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 25849 0001337B 50                      	push rax
 25850 0001337C 6A02                    	push 2	; arg count
 25851 0001337E 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 25852 00013386 803805                  	cmp byte [rax], T_undefined
 25853 00013389 0F84E51E0000            	je L_error_fvar_undefined
 25854 0001338F 803804                  	cmp byte [rax], T_closure
 25855 00013392 0F85601F0000            	jne L_error_non_closure
 25856 00013398 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25857 0001339B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25858 0001339E 50                      	push rax
 25859                                  	; preparing a non-tail-call
 25860 0001339F 48B8-                   	mov rax, L_constants + 2270
 25860 000133A1 [DE08000000000000] 
 25861 000133A9 50                      	push rax
 25862 000133AA 488B4510                	mov rax, ENV
 25863 000133AE 488B00                  	mov rax, qword [rax + 8 * 0]
 25864 000133B1 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 25865 000133B5 50                      	push rax
 25866 000133B6 6A02                    	push 2	; arg count
 25867 000133B8 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 25868 000133C0 803805                  	cmp byte [rax], T_undefined
 25869 000133C3 0F84AB1E0000            	je L_error_fvar_undefined
 25870 000133C9 803804                  	cmp byte [rax], T_closure
 25871 000133CC 0F85261F0000            	jne L_error_non_closure
 25872 000133D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25873 000133D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25874 000133D8 50                      	push rax
 25875 000133D9 488B4510                	mov rax, ENV
 25876 000133DD 488B00                  	mov rax, qword [rax + 8 * 0]
 25877 000133E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 25878 000133E3 50                      	push rax
 25879 000133E4 6A03                    	push 3	; arg count
 25880 000133E6 488B4510                	mov rax, ENV
 25881 000133EA 488B4008                	mov rax, qword [rax + 8 * 1]
 25882 000133EE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25883 000133F1 488B00                  	mov rax, qword [rax]
 25884 000133F4 803804                  	cmp byte [rax], T_closure
 25885 000133F7 0F85FB1E0000            	jne L_error_non_closure
 25886 000133FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25887 00013400 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25888 00013403 C9                      	leave
 25889 00013404 C21800                  	ret AND_KILL_FRAME(1)
 25890                                  .L_lambda_simple_end_021a:	; new closure is in rax
 25891 00013407 803804                  	cmp byte [rax], T_closure
 25892 0001340A 0F85E81E0000            	jne L_error_non_closure
 25893 00013410 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25894 00013413 FF7508                  	push qword [rbp + 8]
 25895 00013416 FF7500                  	push qword [rbp]
 25896 00013419 41BA05000000            	mov r10, 1 + 4
 25897 0001341F 4C8B4518                	mov r8, COUNT
 25898 00013423 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 25899 00013428 4C8D4DF8                	lea r9, [rbp - 8]
 25900                                  .L_tc_recycle_frame_loop_02a0:
 25901 0001342C 4983FA00                	cmp r10, 0
 25902 00013430 7413                    	je .L_tc_recycle_frame_done_02a0
 25903 00013432 4D8B19                  	mov r11, qword [r9]
 25904 00013435 4D8918                  	mov qword [r8], r11
 25905 00013438 49FFCA                  	dec r10
 25906 0001343B 4983E808                	sub r8, 8
 25907 0001343F 4983E908                	sub r9, 8
 25908 00013443 EBE7                    	jmp .L_tc_recycle_frame_loop_02a0
 25909                                  .L_tc_recycle_frame_done_02a0:
 25910 00013445 498D6008                	lea rsp, [r8 + 8]
 25911 00013449 5D                      	pop rbp
 25912 0001344A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25913 0001344D EB04                    	jmp .L_if_end_018f
 25914                                  .L_if_else_018f:
 25915 0001344F 488B4520                	mov rax, PARAM(0)	; param str
 25916                                  .L_if_end_018f:
 25917 00013453 C9                      	leave
 25918 00013454 C22800                  	ret AND_KILL_FRAME(3)
 25919                                  .L_lambda_simple_end_0219:	; new closure is in rax
 25920 00013457 50                      	push rax
 25921 00013458 488B4520                	mov rax, PARAM(0)	; param run
 25922 0001345C 8F00                    	pop qword [rax]
 25923 0001345E 48B8-                   	mov rax, sob_void
 25923 00013460 [0000000000000000] 
 25924                                  
 25925 00013468 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25926 0001346D E82F1F0000              	call malloc
 25927 00013472 50                      	push rax
 25928 00013473 BF08000000              	mov rdi, 8 * 1	; new rib
 25929 00013478 E8241F0000              	call malloc
 25930 0001347D 50                      	push rax
 25931 0001347E BF10000000              	mov rdi, 8 * 2	; extended env
 25932 00013483 E8191F0000              	call malloc
 25933 00013488 488B7D10                	mov rdi, ENV
 25934 0001348C BE00000000              	mov rsi, 0
 25935 00013491 BA01000000              	mov rdx, 1
 25936                                  .L_lambda_simple_env_loop_021b:	; ext_env[i + 1] <-- env[i]
 25937 00013496 4883FE01                	cmp rsi, 1
 25938 0001349A 7410                    	je .L_lambda_simple_env_end_021b
 25939 0001349C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25940 000134A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25941 000134A4 48FFC6                  	inc rsi
 25942 000134A7 48FFC2                  	inc rdx
 25943 000134AA EBEA                    	jmp .L_lambda_simple_env_loop_021b
 25944                                  .L_lambda_simple_env_end_021b:
 25945 000134AC 5B                      	pop rbx
 25946 000134AD BE00000000              	mov rsi, 0
 25947                                  .L_lambda_simple_params_loop_021b:	; copy params
 25948 000134B2 4883FE01                	cmp rsi, 1
 25949 000134B6 740E                    	je .L_lambda_simple_params_end_021b
 25950 000134B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25951 000134BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25952 000134C1 48FFC6                  	inc rsi
 25953 000134C4 EBEC                    	jmp .L_lambda_simple_params_loop_021b
 25954                                  .L_lambda_simple_params_end_021b:
 25955 000134C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25956 000134C9 4889C3                  	mov rbx, rax
 25957 000134CC 58                      	pop rax
 25958 000134CD C60004                  	mov byte [rax], T_closure
 25959 000134D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25960 000134D4 48C74009[E1340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021b
 25961 000134DC E9FC010000              	jmp .L_lambda_simple_end_021b
 25962                                  .L_lambda_simple_code_021b:	; lambda-simple body
 25963 000134E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25964 000134E7 740B                    	je .L_lambda_simple_arity_check_ok_021b
 25965 000134E9 FF742410                	push qword [rsp + 8 * 2]
 25966 000134ED 6A01                    	push 1
 25967 000134EF E9661E0000              	jmp L_error_incorrect_arity_simple
 25968                                  .L_lambda_simple_arity_check_ok_021b:
 25969 000134F4 C8000000                	enter 0, 0
 25970                                  	; Initiating tail-call optimization
 25971                                  	; preparing a non-tail-call
 25972 000134F8 488B4520                	mov rax, PARAM(0)	; param str
 25973 000134FC 50                      	push rax
 25974 000134FD 6A01                    	push 1	; arg count
 25975 000134FF 488B0425[46160000]      	mov rax, qword [free_var_127]	; free var string-length
 25976 00013507 803805                  	cmp byte [rax], T_undefined
 25977 0001350A 0F84641D0000            	je L_error_fvar_undefined
 25978 00013510 803804                  	cmp byte [rax], T_closure
 25979 00013513 0F85DF1D0000            	jne L_error_non_closure
 25980 00013519 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25981 0001351C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25982 0001351F 50                      	push rax
 25983 00013520 6A01                    	push 1	; Number of arguments
 25984 00013522 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25985 00013527 E8751E0000              	call malloc
 25986 0001352C 50                      	push rax
 25987 0001352D BF08000000              	mov rdi, 8 * 1	; new rib
 25988 00013532 E86A1E0000              	call malloc
 25989 00013537 50                      	push rax
 25990 00013538 BF18000000              	mov rdi, 8 * 3	; extended env
 25991 0001353D E85F1E0000              	call malloc
 25992 00013542 488B7D10                	mov rdi, ENV
 25993 00013546 BE00000000              	mov rsi, 0
 25994 0001354B BA01000000              	mov rdx, 1
 25995                                  .L_lambda_simple_env_loop_021c:	; ext_env[i + 1] <-- env[i]
 25996 00013550 4883FE02                	cmp rsi, 2
 25997 00013554 7410                    	je .L_lambda_simple_env_end_021c
 25998 00013556 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25999 0001355A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26000 0001355E 48FFC6                  	inc rsi
 26001 00013561 48FFC2                  	inc rdx
 26002 00013564 EBEA                    	jmp .L_lambda_simple_env_loop_021c
 26003                                  .L_lambda_simple_env_end_021c:
 26004 00013566 5B                      	pop rbx
 26005 00013567 BE00000000              	mov rsi, 0
 26006                                  .L_lambda_simple_params_loop_021c:	; copy params
 26007 0001356C 4883FE01                	cmp rsi, 1
 26008 00013570 740E                    	je .L_lambda_simple_params_end_021c
 26009 00013572 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26010 00013577 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26011 0001357B 48FFC6                  	inc rsi
 26012 0001357E EBEC                    	jmp .L_lambda_simple_params_loop_021c
 26013                                  .L_lambda_simple_params_end_021c:
 26014 00013580 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26015 00013583 4889C3                  	mov rbx, rax
 26016 00013586 58                      	pop rax
 26017 00013587 C60004                  	mov byte [rax], T_closure
 26018 0001358A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26019 0001358E 48C74009[9B350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021c
 26020 00013596 E9F8000000              	jmp .L_lambda_simple_end_021c
 26021                                  .L_lambda_simple_code_021c:	; lambda-simple body
 26022 0001359B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26023 000135A1 740B                    	je .L_lambda_simple_arity_check_ok_021c
 26024 000135A3 FF742410                	push qword [rsp + 8 * 2]
 26025 000135A7 6A01                    	push 1
 26026 000135A9 E9AC1D0000              	jmp L_error_incorrect_arity_simple
 26027                                  .L_lambda_simple_arity_check_ok_021c:
 26028 000135AE C8000000                	enter 0, 0
 26029                                  	; preparing a non-tail-call
 26030 000135B2 488B4520                	mov rax, PARAM(0)	; param n
 26031 000135B6 50                      	push rax
 26032 000135B7 6A01                    	push 1	; arg count
 26033 000135B9 488B0425[DE170000]      	mov rax, qword [free_var_151]	; free var zero?
 26034 000135C1 803805                  	cmp byte [rax], T_undefined
 26035 000135C4 0F84AA1C0000            	je L_error_fvar_undefined
 26036 000135CA 803804                  	cmp byte [rax], T_closure
 26037 000135CD 0F85251D0000            	jne L_error_non_closure
 26038 000135D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26039 000135D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26040 000135D9 483D[02000000]          	cmp rax, sob_boolean_false
 26041 000135DF 740F                    	je .L_if_else_0190
 26042 000135E1 488B4510                	mov rax, ENV
 26043 000135E5 488B00                  	mov rax, qword [rax + 8 * 0]
 26044 000135E8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26045 000135EB E99F000000              	jmp .L_if_end_0190
 26046                                  .L_if_else_0190:
 26047                                  	; Initiating tail-call optimization
 26048                                  	; preparing a non-tail-call
 26049 000135F0 48B8-                   	mov rax, L_constants + 2270
 26049 000135F2 [DE08000000000000] 
 26050 000135FA 50                      	push rax
 26051 000135FB 488B4520                	mov rax, PARAM(0)	; param n
 26052 000135FF 50                      	push rax
 26053 00013600 6A02                    	push 2	; arg count
 26054 00013602 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 26055 0001360A 803805                  	cmp byte [rax], T_undefined
 26056 0001360D 0F84611C0000            	je L_error_fvar_undefined
 26057 00013613 803804                  	cmp byte [rax], T_closure
 26058 00013616 0F85DC1C0000            	jne L_error_non_closure
 26059 0001361C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26060 0001361F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26061 00013622 50                      	push rax
 26062 00013623 48B8-                   	mov rax, L_constants + 2135
 26062 00013625 [5708000000000000] 
 26063 0001362D 50                      	push rax
 26064 0001362E 488B4510                	mov rax, ENV
 26065 00013632 488B00                  	mov rax, qword [rax + 8 * 0]
 26066 00013635 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26067 00013638 50                      	push rax
 26068 00013639 6A03                    	push 3	; Number of arguments
 26069 0001363B 488B4510                	mov rax, ENV
 26070 0001363F 488B4008                	mov rax, qword [rax + 8 * 1]
 26071 00013643 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26072 00013646 488B00                  	mov rax, qword [rax]
 26073 00013649 803804                  	cmp byte [rax], T_closure
 26074 0001364C 0F85A61C0000            	jne L_error_non_closure
 26075 00013652 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26076 00013655 FF7508                  	push qword [rbp + 8]
 26077 00013658 FF7500                  	push qword [rbp]
 26078 0001365B 41BA07000000            	mov r10, 3 + 4
 26079 00013661 4C8B4518                	mov r8, COUNT
 26080 00013665 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26081 0001366A 4C8D4DF8                	lea r9, [rbp - 8]
 26082                                  .L_tc_recycle_frame_loop_02a1:
 26083 0001366E 4983FA00                	cmp r10, 0
 26084 00013672 7413                    	je .L_tc_recycle_frame_done_02a1
 26085 00013674 4D8B19                  	mov r11, qword [r9]
 26086 00013677 4D8918                  	mov qword [r8], r11
 26087 0001367A 49FFCA                  	dec r10
 26088 0001367D 4983E808                	sub r8, 8
 26089 00013681 4983E908                	sub r9, 8
 26090 00013685 EBE7                    	jmp .L_tc_recycle_frame_loop_02a1
 26091                                  .L_tc_recycle_frame_done_02a1:
 26092 00013687 498D6008                	lea rsp, [r8 + 8]
 26093 0001368B 5D                      	pop rbp
 26094 0001368C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26095                                  .L_if_end_0190:
 26096 0001368F C9                      	leave
 26097 00013690 C21800                  	ret AND_KILL_FRAME(1)
 26098                                  .L_lambda_simple_end_021c:	; new closure is in rax
 26099 00013693 803804                  	cmp byte [rax], T_closure
 26100 00013696 0F855C1C0000            	jne L_error_non_closure
 26101 0001369C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26102 0001369F FF7508                  	push qword [rbp + 8]
 26103 000136A2 FF7500                  	push qword [rbp]
 26104 000136A5 41BA05000000            	mov r10, 1 + 4
 26105 000136AB 4C8B4518                	mov r8, COUNT
 26106 000136AF 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26107 000136B4 4C8D4DF8                	lea r9, [rbp - 8]
 26108                                  .L_tc_recycle_frame_loop_02a2:
 26109 000136B8 4983FA00                	cmp r10, 0
 26110 000136BC 7413                    	je .L_tc_recycle_frame_done_02a2
 26111 000136BE 4D8B19                  	mov r11, qword [r9]
 26112 000136C1 4D8918                  	mov qword [r8], r11
 26113 000136C4 49FFCA                  	dec r10
 26114 000136C7 4983E808                	sub r8, 8
 26115 000136CB 4983E908                	sub r9, 8
 26116 000136CF EBE7                    	jmp .L_tc_recycle_frame_loop_02a2
 26117                                  .L_tc_recycle_frame_done_02a2:
 26118 000136D1 498D6008                	lea rsp, [r8 + 8]
 26119 000136D5 5D                      	pop rbp
 26120 000136D6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26121 000136D9 C9                      	leave
 26122 000136DA C21800                  	ret AND_KILL_FRAME(1)
 26123                                  .L_lambda_simple_end_021b:	; new closure is in rax
 26124 000136DD C9                      	leave
 26125 000136DE C21800                  	ret AND_KILL_FRAME(1)
 26126                                  .L_lambda_simple_end_0218:	; new closure is in rax
 26127 000136E1 803804                  	cmp byte [rax], T_closure
 26128 000136E4 0F850E1C0000            	jne L_error_non_closure
 26129 000136EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26130 000136ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 26131 000136F0 48890425[79160000]      	mov qword [free_var_130], rax
 26132 000136F8 48B8-                   	mov rax, sob_void
 26132 000136FA [0000000000000000] 
 26133                                  
 26134 00013702 4889C7                  	mov rdi, rax
 26135 00013705 E8EC1E0000              	call print_sexpr_if_not_void
 26136                                  	; preparing a non-tail-call
 26137 0001370A 48B8-                   	mov rax, L_constants + 2007
 26137 0001370C [D707000000000000] 
 26138 00013714 50                      	push rax
 26139 00013715 6A01                    	push 1	; arg count
 26140 00013717 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26141 0001371C E8801C0000              	call malloc
 26142 00013721 50                      	push rax
 26143 00013722 BF00000000              	mov rdi, 8 * 0	; new rib
 26144 00013727 E8751C0000              	call malloc
 26145 0001372C 50                      	push rax
 26146 0001372D BF08000000              	mov rdi, 8 * 1	; extended env
 26147 00013732 E86A1C0000              	call malloc
 26148 00013737 488B7D10                	mov rdi, ENV
 26149 0001373B BE00000000              	mov rsi, 0
 26150 00013740 BA01000000              	mov rdx, 1
 26151                                  .L_lambda_simple_env_loop_021d:	; ext_env[i + 1] <-- env[i]
 26152 00013745 4883FE00                	cmp rsi, 0
 26153 00013749 7410                    	je .L_lambda_simple_env_end_021d
 26154 0001374B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26155 0001374F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26156 00013753 48FFC6                  	inc rsi
 26157 00013756 48FFC2                  	inc rdx
 26158 00013759 EBEA                    	jmp .L_lambda_simple_env_loop_021d
 26159                                  .L_lambda_simple_env_end_021d:
 26160 0001375B 5B                      	pop rbx
 26161 0001375C BE00000000              	mov rsi, 0
 26162                                  .L_lambda_simple_params_loop_021d:	; copy params
 26163 00013761 4883FE00                	cmp rsi, 0
 26164 00013765 740E                    	je .L_lambda_simple_params_end_021d
 26165 00013767 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26166 0001376C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26167 00013770 48FFC6                  	inc rsi
 26168 00013773 EBEC                    	jmp .L_lambda_simple_params_loop_021d
 26169                                  .L_lambda_simple_params_end_021d:
 26170 00013775 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26171 00013778 4889C3                  	mov rbx, rax
 26172 0001377B 58                      	pop rax
 26173 0001377C C60004                  	mov byte [rax], T_closure
 26174 0001377F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26175 00013783 48C74009[90370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021d
 26176 0001378B E9EA050000              	jmp .L_lambda_simple_end_021d
 26177                                  .L_lambda_simple_code_021d:	; lambda-simple body
 26178 00013790 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26179 00013796 740B                    	je .L_lambda_simple_arity_check_ok_021d
 26180 00013798 FF742410                	push qword [rsp + 8 * 2]
 26181 0001379C 6A01                    	push 1
 26182 0001379E E9B71B0000              	jmp L_error_incorrect_arity_simple
 26183                                  .L_lambda_simple_arity_check_ok_021d:
 26184 000137A3 C8000000                	enter 0, 0
 26185 000137A7 BF08000000              	mov rdi, 8 * 1
 26186 000137AC E8F01B0000              	call malloc
 26187 000137B1 488B5D20                	mov rbx, PARAM(0)
 26188 000137B5 488918                  	mov qword [rax], rbx
 26189 000137B8 48894520                	mov PARAM(0), rax
 26190 000137BC 48B8-                   	mov rax, sob_void
 26190 000137BE [0000000000000000] 
 26191                                  
 26192 000137C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26193 000137CB E8D11B0000              	call malloc
 26194 000137D0 50                      	push rax
 26195 000137D1 BF08000000              	mov rdi, 8 * 1	; new rib
 26196 000137D6 E8C61B0000              	call malloc
 26197 000137DB 50                      	push rax
 26198 000137DC BF10000000              	mov rdi, 8 * 2	; extended env
 26199 000137E1 E8BB1B0000              	call malloc
 26200 000137E6 488B7D10                	mov rdi, ENV
 26201 000137EA BE00000000              	mov rsi, 0
 26202 000137EF BA01000000              	mov rdx, 1
 26203                                  .L_lambda_simple_env_loop_021e:	; ext_env[i + 1] <-- env[i]
 26204 000137F4 4883FE01                	cmp rsi, 1
 26205 000137F8 7410                    	je .L_lambda_simple_env_end_021e
 26206 000137FA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26207 000137FE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26208 00013802 48FFC6                  	inc rsi
 26209 00013805 48FFC2                  	inc rdx
 26210 00013808 EBEA                    	jmp .L_lambda_simple_env_loop_021e
 26211                                  .L_lambda_simple_env_end_021e:
 26212 0001380A 5B                      	pop rbx
 26213 0001380B BE00000000              	mov rsi, 0
 26214                                  .L_lambda_simple_params_loop_021e:	; copy params
 26215 00013810 4883FE01                	cmp rsi, 1
 26216 00013814 740E                    	je .L_lambda_simple_params_end_021e
 26217 00013816 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26218 0001381B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26219 0001381F 48FFC6                  	inc rsi
 26220 00013822 EBEC                    	jmp .L_lambda_simple_params_loop_021e
 26221                                  .L_lambda_simple_params_end_021e:
 26222 00013824 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26223 00013827 4889C3                  	mov rbx, rax
 26224 0001382A 58                      	pop rax
 26225 0001382B C60004                  	mov byte [rax], T_closure
 26226 0001382E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26227 00013832 48C74009[3F380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021e
 26228 0001383A E9B1020000              	jmp .L_lambda_simple_end_021e
 26229                                  .L_lambda_simple_code_021e:	; lambda-simple body
 26230 0001383F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26231 00013845 740B                    	je .L_lambda_simple_arity_check_ok_021e
 26232 00013847 FF742410                	push qword [rsp + 8 * 2]
 26233 0001384B 6A03                    	push 3
 26234 0001384D E9081B0000              	jmp L_error_incorrect_arity_simple
 26235                                  .L_lambda_simple_arity_check_ok_021e:
 26236 00013852 C8000000                	enter 0, 0
 26237                                  	; preparing a non-tail-call
 26238 00013856 488B4530                	mov rax, PARAM(2)	; param j
 26239 0001385A 50                      	push rax
 26240 0001385B 488B4528                	mov rax, PARAM(1)	; param i
 26241 0001385F 50                      	push rax
 26242 00013860 6A02                    	push 2	; arg count
 26243 00013862 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 26244 0001386A 803805                  	cmp byte [rax], T_undefined
 26245 0001386D 0F84011A0000            	je L_error_fvar_undefined
 26246 00013873 803804                  	cmp byte [rax], T_closure
 26247 00013876 0F857C1A0000            	jne L_error_non_closure
 26248 0001387C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26249 0001387F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26250 00013882 483D[02000000]          	cmp rax, sob_boolean_false
 26251 00013888 0F845A020000            	je .L_if_else_0191
 26252                                  	; Initiating tail-call optimization
 26253                                  	; preparing a non-tail-call
 26254 0001388E 488B4528                	mov rax, PARAM(1)	; param i
 26255 00013892 50                      	push rax
 26256 00013893 488B4520                	mov rax, PARAM(0)	; param vec
 26257 00013897 50                      	push rax
 26258 00013898 6A02                    	push 2	; arg count
 26259 0001389A 488B0425[67170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26260 000138A2 803805                  	cmp byte [rax], T_undefined
 26261 000138A5 0F84C9190000            	je L_error_fvar_undefined
 26262 000138AB 803804                  	cmp byte [rax], T_closure
 26263 000138AE 0F85441A0000            	jne L_error_non_closure
 26264 000138B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26265 000138B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26266 000138BA 50                      	push rax
 26267 000138BB 6A01                    	push 1	; Number of arguments
 26268 000138BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26269 000138C2 E8DA1A0000              	call malloc
 26270 000138C7 50                      	push rax
 26271 000138C8 BF18000000              	mov rdi, 8 * 3	; new rib
 26272 000138CD E8CF1A0000              	call malloc
 26273 000138D2 50                      	push rax
 26274 000138D3 BF18000000              	mov rdi, 8 * 3	; extended env
 26275 000138D8 E8C41A0000              	call malloc
 26276 000138DD 488B7D10                	mov rdi, ENV
 26277 000138E1 BE00000000              	mov rsi, 0
 26278 000138E6 BA01000000              	mov rdx, 1
 26279                                  .L_lambda_simple_env_loop_021f:	; ext_env[i + 1] <-- env[i]
 26280 000138EB 4883FE02                	cmp rsi, 2
 26281 000138EF 7410                    	je .L_lambda_simple_env_end_021f
 26282 000138F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26283 000138F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26284 000138F9 48FFC6                  	inc rsi
 26285 000138FC 48FFC2                  	inc rdx
 26286 000138FF EBEA                    	jmp .L_lambda_simple_env_loop_021f
 26287                                  .L_lambda_simple_env_end_021f:
 26288 00013901 5B                      	pop rbx
 26289 00013902 BE00000000              	mov rsi, 0
 26290                                  .L_lambda_simple_params_loop_021f:	; copy params
 26291 00013907 4883FE03                	cmp rsi, 3
 26292 0001390B 740E                    	je .L_lambda_simple_params_end_021f
 26293 0001390D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26294 00013912 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26295 00013916 48FFC6                  	inc rsi
 26296 00013919 EBEC                    	jmp .L_lambda_simple_params_loop_021f
 26297                                  .L_lambda_simple_params_end_021f:
 26298 0001391B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26299 0001391E 4889C3                  	mov rbx, rax
 26300 00013921 58                      	pop rax
 26301 00013922 C60004                  	mov byte [rax], T_closure
 26302 00013925 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26303 00013929 48C74009[36390100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_021f
 26304 00013931 E96A010000              	jmp .L_lambda_simple_end_021f
 26305                                  .L_lambda_simple_code_021f:	; lambda-simple body
 26306 00013936 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26307 0001393C 740B                    	je .L_lambda_simple_arity_check_ok_021f
 26308 0001393E FF742410                	push qword [rsp + 8 * 2]
 26309 00013942 6A01                    	push 1
 26310 00013944 E9111A0000              	jmp L_error_incorrect_arity_simple
 26311                                  .L_lambda_simple_arity_check_ok_021f:
 26312 00013949 C8000000                	enter 0, 0
 26313                                  	; preparing a non-tail-call
 26314                                  	; preparing a non-tail-call
 26315 0001394D 488B4510                	mov rax, ENV
 26316 00013951 488B00                  	mov rax, qword [rax + 8 * 0]
 26317 00013954 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26318 00013958 50                      	push rax
 26319 00013959 488B4510                	mov rax, ENV
 26320 0001395D 488B00                  	mov rax, qword [rax + 8 * 0]
 26321 00013960 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26322 00013963 50                      	push rax
 26323 00013964 6A02                    	push 2	; arg count
 26324 00013966 488B0425[67170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26325 0001396E 803805                  	cmp byte [rax], T_undefined
 26326 00013971 0F84FD180000            	je L_error_fvar_undefined
 26327 00013977 803804                  	cmp byte [rax], T_closure
 26328 0001397A 0F8578190000            	jne L_error_non_closure
 26329 00013980 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26330 00013983 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26331 00013986 50                      	push rax
 26332 00013987 488B4510                	mov rax, ENV
 26333 0001398B 488B00                  	mov rax, qword [rax + 8 * 0]
 26334 0001398E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26335 00013992 50                      	push rax
 26336 00013993 488B4510                	mov rax, ENV
 26337 00013997 488B00                  	mov rax, qword [rax + 8 * 0]
 26338 0001399A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26339 0001399D 50                      	push rax
 26340 0001399E 6A03                    	push 3	; arg count
 26341 000139A0 488B0425[9A170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26342 000139A8 803805                  	cmp byte [rax], T_undefined
 26343 000139AB 0F84C3180000            	je L_error_fvar_undefined
 26344 000139B1 803804                  	cmp byte [rax], T_closure
 26345 000139B4 0F853E190000            	jne L_error_non_closure
 26346 000139BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26347 000139BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26348                                  
 26349                                  	; preparing a non-tail-call
 26350 000139C0 488B4520                	mov rax, PARAM(0)	; param ch
 26351 000139C4 50                      	push rax
 26352 000139C5 488B4510                	mov rax, ENV
 26353 000139C9 488B00                  	mov rax, qword [rax + 8 * 0]
 26354 000139CC 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26355 000139D0 50                      	push rax
 26356 000139D1 488B4510                	mov rax, ENV
 26357 000139D5 488B00                  	mov rax, qword [rax + 8 * 0]
 26358 000139D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26359 000139DB 50                      	push rax
 26360 000139DC 6A03                    	push 3	; arg count
 26361 000139DE 488B0425[9A170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26362 000139E6 803805                  	cmp byte [rax], T_undefined
 26363 000139E9 0F8485180000            	je L_error_fvar_undefined
 26364 000139EF 803804                  	cmp byte [rax], T_closure
 26365 000139F2 0F8500190000            	jne L_error_non_closure
 26366 000139F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26367 000139FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 26368                                  
 26369                                  	; preparing a non-tail-call
 26370                                  	; preparing a non-tail-call
 26371 000139FE 48B8-                   	mov rax, L_constants + 2270
 26371 00013A00 [DE08000000000000] 
 26372 00013A08 50                      	push rax
 26373 00013A09 488B4510                	mov rax, ENV
 26374 00013A0D 488B00                  	mov rax, qword [rax + 8 * 0]
 26375 00013A10 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26376 00013A14 50                      	push rax
 26377 00013A15 6A02                    	push 2	; arg count
 26378 00013A17 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 26379 00013A1F 803805                  	cmp byte [rax], T_undefined
 26380 00013A22 0F844C180000            	je L_error_fvar_undefined
 26381 00013A28 803804                  	cmp byte [rax], T_closure
 26382 00013A2B 0F85C7180000            	jne L_error_non_closure
 26383 00013A31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26384 00013A34 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26385 00013A37 50                      	push rax
 26386                                  	; preparing a non-tail-call
 26387 00013A38 48B8-                   	mov rax, L_constants + 2270
 26387 00013A3A [DE08000000000000] 
 26388 00013A42 50                      	push rax
 26389 00013A43 488B4510                	mov rax, ENV
 26390 00013A47 488B00                  	mov rax, qword [rax + 8 * 0]
 26391 00013A4A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26392 00013A4E 50                      	push rax
 26393 00013A4F 6A02                    	push 2	; arg count
 26394 00013A51 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 26395 00013A59 803805                  	cmp byte [rax], T_undefined
 26396 00013A5C 0F8412180000            	je L_error_fvar_undefined
 26397 00013A62 803804                  	cmp byte [rax], T_closure
 26398 00013A65 0F858D180000            	jne L_error_non_closure
 26399 00013A6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 26400 00013A6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 26401 00013A71 50                      	push rax
 26402 00013A72 488B4510                	mov rax, ENV
 26403 00013A76 488B00                  	mov rax, qword [rax + 8 * 0]
 26404 00013A79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26405 00013A7C 50                      	push rax
 26406 00013A7D 6A03                    	push 3	; arg count
 26407 00013A7F 488B4510                	mov rax, ENV
 26408 00013A83 488B4008                	mov rax, qword [rax + 8 * 1]
 26409 00013A87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26410 00013A8A 488B00                  	mov rax, qword [rax]
 26411 00013A8D 803804                  	cmp byte [rax], T_closure
 26412 00013A90 0F8562180000            	jne L_error_non_closure
 26413 00013A96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26414 00013A99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26415 00013A9C C9                      	leave
 26416 00013A9D C21800                  	ret AND_KILL_FRAME(1)
 26417                                  .L_lambda_simple_end_021f:	; new closure is in rax
 26418 00013AA0 803804                  	cmp byte [rax], T_closure
 26419 00013AA3 0F854F180000            	jne L_error_non_closure
 26420 00013AA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26421 00013AAC FF7508                  	push qword [rbp + 8]
 26422 00013AAF FF7500                  	push qword [rbp]
 26423 00013AB2 41BA05000000            	mov r10, 1 + 4
 26424 00013AB8 4C8B4518                	mov r8, COUNT
 26425 00013ABC 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26426 00013AC1 4C8D4DF8                	lea r9, [rbp - 8]
 26427                                  .L_tc_recycle_frame_loop_02a3:
 26428 00013AC5 4983FA00                	cmp r10, 0
 26429 00013AC9 7413                    	je .L_tc_recycle_frame_done_02a3
 26430 00013ACB 4D8B19                  	mov r11, qword [r9]
 26431 00013ACE 4D8918                  	mov qword [r8], r11
 26432 00013AD1 49FFCA                  	dec r10
 26433 00013AD4 4983E808                	sub r8, 8
 26434 00013AD8 4983E908                	sub r9, 8
 26435 00013ADC EBE7                    	jmp .L_tc_recycle_frame_loop_02a3
 26436                                  .L_tc_recycle_frame_done_02a3:
 26437 00013ADE 498D6008                	lea rsp, [r8 + 8]
 26438 00013AE2 5D                      	pop rbp
 26439 00013AE3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26440 00013AE6 EB04                    	jmp .L_if_end_0191
 26441                                  .L_if_else_0191:
 26442 00013AE8 488B4520                	mov rax, PARAM(0)	; param vec
 26443                                  .L_if_end_0191:
 26444 00013AEC C9                      	leave
 26445 00013AED C22800                  	ret AND_KILL_FRAME(3)
 26446                                  .L_lambda_simple_end_021e:	; new closure is in rax
 26447 00013AF0 50                      	push rax
 26448 00013AF1 488B4520                	mov rax, PARAM(0)	; param run
 26449 00013AF5 8F00                    	pop qword [rax]
 26450 00013AF7 48B8-                   	mov rax, sob_void
 26450 00013AF9 [0000000000000000] 
 26451                                  
 26452 00013B01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26453 00013B06 E896180000              	call malloc
 26454 00013B0B 50                      	push rax
 26455 00013B0C BF08000000              	mov rdi, 8 * 1	; new rib
 26456 00013B11 E88B180000              	call malloc
 26457 00013B16 50                      	push rax
 26458 00013B17 BF10000000              	mov rdi, 8 * 2	; extended env
 26459 00013B1C E880180000              	call malloc
 26460 00013B21 488B7D10                	mov rdi, ENV
 26461 00013B25 BE00000000              	mov rsi, 0
 26462 00013B2A BA01000000              	mov rdx, 1
 26463                                  .L_lambda_simple_env_loop_0220:	; ext_env[i + 1] <-- env[i]
 26464 00013B2F 4883FE01                	cmp rsi, 1
 26465 00013B33 7410                    	je .L_lambda_simple_env_end_0220
 26466 00013B35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26467 00013B39 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26468 00013B3D 48FFC6                  	inc rsi
 26469 00013B40 48FFC2                  	inc rdx
 26470 00013B43 EBEA                    	jmp .L_lambda_simple_env_loop_0220
 26471                                  .L_lambda_simple_env_end_0220:
 26472 00013B45 5B                      	pop rbx
 26473 00013B46 BE00000000              	mov rsi, 0
 26474                                  .L_lambda_simple_params_loop_0220:	; copy params
 26475 00013B4B 4883FE01                	cmp rsi, 1
 26476 00013B4F 740E                    	je .L_lambda_simple_params_end_0220
 26477 00013B51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26478 00013B56 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26479 00013B5A 48FFC6                  	inc rsi
 26480 00013B5D EBEC                    	jmp .L_lambda_simple_params_loop_0220
 26481                                  .L_lambda_simple_params_end_0220:
 26482 00013B5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26483 00013B62 4889C3                  	mov rbx, rax
 26484 00013B65 58                      	pop rax
 26485 00013B66 C60004                  	mov byte [rax], T_closure
 26486 00013B69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26487 00013B6D 48C74009[7A3B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0220
 26488 00013B75 E9FC010000              	jmp .L_lambda_simple_end_0220
 26489                                  .L_lambda_simple_code_0220:	; lambda-simple body
 26490 00013B7A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26491 00013B80 740B                    	je .L_lambda_simple_arity_check_ok_0220
 26492 00013B82 FF742410                	push qword [rsp + 8 * 2]
 26493 00013B86 6A01                    	push 1
 26494 00013B88 E9CD170000              	jmp L_error_incorrect_arity_simple
 26495                                  .L_lambda_simple_arity_check_ok_0220:
 26496 00013B8D C8000000                	enter 0, 0
 26497                                  	; Initiating tail-call optimization
 26498                                  	; preparing a non-tail-call
 26499 00013B91 488B4520                	mov rax, PARAM(0)	; param vec
 26500 00013B95 50                      	push rax
 26501 00013B96 6A01                    	push 1	; arg count
 26502 00013B98 488B0425[56170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26503 00013BA0 803805                  	cmp byte [rax], T_undefined
 26504 00013BA3 0F84CB160000            	je L_error_fvar_undefined
 26505 00013BA9 803804                  	cmp byte [rax], T_closure
 26506 00013BAC 0F8546170000            	jne L_error_non_closure
 26507 00013BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26508 00013BB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26509 00013BB8 50                      	push rax
 26510 00013BB9 6A01                    	push 1	; Number of arguments
 26511 00013BBB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26512 00013BC0 E8DC170000              	call malloc
 26513 00013BC5 50                      	push rax
 26514 00013BC6 BF08000000              	mov rdi, 8 * 1	; new rib
 26515 00013BCB E8D1170000              	call malloc
 26516 00013BD0 50                      	push rax
 26517 00013BD1 BF18000000              	mov rdi, 8 * 3	; extended env
 26518 00013BD6 E8C6170000              	call malloc
 26519 00013BDB 488B7D10                	mov rdi, ENV
 26520 00013BDF BE00000000              	mov rsi, 0
 26521 00013BE4 BA01000000              	mov rdx, 1
 26522                                  .L_lambda_simple_env_loop_0221:	; ext_env[i + 1] <-- env[i]
 26523 00013BE9 4883FE02                	cmp rsi, 2
 26524 00013BED 7410                    	je .L_lambda_simple_env_end_0221
 26525 00013BEF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26526 00013BF3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26527 00013BF7 48FFC6                  	inc rsi
 26528 00013BFA 48FFC2                  	inc rdx
 26529 00013BFD EBEA                    	jmp .L_lambda_simple_env_loop_0221
 26530                                  .L_lambda_simple_env_end_0221:
 26531 00013BFF 5B                      	pop rbx
 26532 00013C00 BE00000000              	mov rsi, 0
 26533                                  .L_lambda_simple_params_loop_0221:	; copy params
 26534 00013C05 4883FE01                	cmp rsi, 1
 26535 00013C09 740E                    	je .L_lambda_simple_params_end_0221
 26536 00013C0B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26537 00013C10 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26538 00013C14 48FFC6                  	inc rsi
 26539 00013C17 EBEC                    	jmp .L_lambda_simple_params_loop_0221
 26540                                  .L_lambda_simple_params_end_0221:
 26541 00013C19 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26542 00013C1C 4889C3                  	mov rbx, rax
 26543 00013C1F 58                      	pop rax
 26544 00013C20 C60004                  	mov byte [rax], T_closure
 26545 00013C23 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26546 00013C27 48C74009[343C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0221
 26547 00013C2F E9F8000000              	jmp .L_lambda_simple_end_0221
 26548                                  .L_lambda_simple_code_0221:	; lambda-simple body
 26549 00013C34 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26550 00013C3A 740B                    	je .L_lambda_simple_arity_check_ok_0221
 26551 00013C3C FF742410                	push qword [rsp + 8 * 2]
 26552 00013C40 6A01                    	push 1
 26553 00013C42 E913170000              	jmp L_error_incorrect_arity_simple
 26554                                  .L_lambda_simple_arity_check_ok_0221:
 26555 00013C47 C8000000                	enter 0, 0
 26556                                  	; preparing a non-tail-call
 26557 00013C4B 488B4520                	mov rax, PARAM(0)	; param n
 26558 00013C4F 50                      	push rax
 26559 00013C50 6A01                    	push 1	; arg count
 26560 00013C52 488B0425[DE170000]      	mov rax, qword [free_var_151]	; free var zero?
 26561 00013C5A 803805                  	cmp byte [rax], T_undefined
 26562 00013C5D 0F8411160000            	je L_error_fvar_undefined
 26563 00013C63 803804                  	cmp byte [rax], T_closure
 26564 00013C66 0F858C160000            	jne L_error_non_closure
 26565 00013C6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26566 00013C6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26567 00013C72 483D[02000000]          	cmp rax, sob_boolean_false
 26568 00013C78 740F                    	je .L_if_else_0192
 26569 00013C7A 488B4510                	mov rax, ENV
 26570 00013C7E 488B00                  	mov rax, qword [rax + 8 * 0]
 26571 00013C81 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26572 00013C84 E99F000000              	jmp .L_if_end_0192
 26573                                  .L_if_else_0192:
 26574                                  	; Initiating tail-call optimization
 26575                                  	; preparing a non-tail-call
 26576 00013C89 48B8-                   	mov rax, L_constants + 2270
 26576 00013C8B [DE08000000000000] 
 26577 00013C93 50                      	push rax
 26578 00013C94 488B4520                	mov rax, PARAM(0)	; param n
 26579 00013C98 50                      	push rax
 26580 00013C99 6A02                    	push 2	; arg count
 26581 00013C9B 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 26582 00013CA3 803805                  	cmp byte [rax], T_undefined
 26583 00013CA6 0F84C8150000            	je L_error_fvar_undefined
 26584 00013CAC 803804                  	cmp byte [rax], T_closure
 26585 00013CAF 0F8543160000            	jne L_error_non_closure
 26586 00013CB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26587 00013CB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26588 00013CBB 50                      	push rax
 26589 00013CBC 48B8-                   	mov rax, L_constants + 2135
 26589 00013CBE [5708000000000000] 
 26590 00013CC6 50                      	push rax
 26591 00013CC7 488B4510                	mov rax, ENV
 26592 00013CCB 488B00                  	mov rax, qword [rax + 8 * 0]
 26593 00013CCE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 26594 00013CD1 50                      	push rax
 26595 00013CD2 6A03                    	push 3	; Number of arguments
 26596 00013CD4 488B4510                	mov rax, ENV
 26597 00013CD8 488B4008                	mov rax, qword [rax + 8 * 1]
 26598 00013CDC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26599 00013CDF 488B00                  	mov rax, qword [rax]
 26600 00013CE2 803804                  	cmp byte [rax], T_closure
 26601 00013CE5 0F850D160000            	jne L_error_non_closure
 26602 00013CEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 26603 00013CEE FF7508                  	push qword [rbp + 8]
 26604 00013CF1 FF7500                  	push qword [rbp]
 26605 00013CF4 41BA07000000            	mov r10, 3 + 4
 26606 00013CFA 4C8B4518                	mov r8, COUNT
 26607 00013CFE 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26608 00013D03 4C8D4DF8                	lea r9, [rbp - 8]
 26609                                  .L_tc_recycle_frame_loop_02a4:
 26610 00013D07 4983FA00                	cmp r10, 0
 26611 00013D0B 7413                    	je .L_tc_recycle_frame_done_02a4
 26612 00013D0D 4D8B19                  	mov r11, qword [r9]
 26613 00013D10 4D8918                  	mov qword [r8], r11
 26614 00013D13 49FFCA                  	dec r10
 26615 00013D16 4983E808                	sub r8, 8
 26616 00013D1A 4983E908                	sub r9, 8
 26617 00013D1E EBE7                    	jmp .L_tc_recycle_frame_loop_02a4
 26618                                  .L_tc_recycle_frame_done_02a4:
 26619 00013D20 498D6008                	lea rsp, [r8 + 8]
 26620 00013D24 5D                      	pop rbp
 26621 00013D25 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26622                                  .L_if_end_0192:
 26623 00013D28 C9                      	leave
 26624 00013D29 C21800                  	ret AND_KILL_FRAME(1)
 26625                                  .L_lambda_simple_end_0221:	; new closure is in rax
 26626 00013D2C 803804                  	cmp byte [rax], T_closure
 26627 00013D2F 0F85C3150000            	jne L_error_non_closure
 26628 00013D35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26629 00013D38 FF7508                  	push qword [rbp + 8]
 26630 00013D3B FF7500                  	push qword [rbp]
 26631 00013D3E 41BA05000000            	mov r10, 1 + 4
 26632 00013D44 4C8B4518                	mov r8, COUNT
 26633 00013D48 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26634 00013D4D 4C8D4DF8                	lea r9, [rbp - 8]
 26635                                  .L_tc_recycle_frame_loop_02a5:
 26636 00013D51 4983FA00                	cmp r10, 0
 26637 00013D55 7413                    	je .L_tc_recycle_frame_done_02a5
 26638 00013D57 4D8B19                  	mov r11, qword [r9]
 26639 00013D5A 4D8918                  	mov qword [r8], r11
 26640 00013D5D 49FFCA                  	dec r10
 26641 00013D60 4983E808                	sub r8, 8
 26642 00013D64 4983E908                	sub r9, 8
 26643 00013D68 EBE7                    	jmp .L_tc_recycle_frame_loop_02a5
 26644                                  .L_tc_recycle_frame_done_02a5:
 26645 00013D6A 498D6008                	lea rsp, [r8 + 8]
 26646 00013D6E 5D                      	pop rbp
 26647 00013D6F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26648 00013D72 C9                      	leave
 26649 00013D73 C21800                  	ret AND_KILL_FRAME(1)
 26650                                  .L_lambda_simple_end_0220:	; new closure is in rax
 26651 00013D76 C9                      	leave
 26652 00013D77 C21800                  	ret AND_KILL_FRAME(1)
 26653                                  .L_lambda_simple_end_021d:	; new closure is in rax
 26654 00013D7A 803804                  	cmp byte [rax], T_closure
 26655 00013D7D 0F8575150000            	jne L_error_non_closure
 26656 00013D83 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26657 00013D86 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26658 00013D89 48890425[89170000]      	mov qword [free_var_146], rax
 26659 00013D91 48B8-                   	mov rax, sob_void
 26659 00013D93 [0000000000000000] 
 26660                                  
 26661 00013D9B 4889C7                  	mov rdi, rax
 26662 00013D9E E853180000              	call print_sexpr_if_not_void
 26663 00013DA3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26664 00013DA8 E8F4150000              	call malloc
 26665 00013DAD 50                      	push rax
 26666 00013DAE BF00000000              	mov rdi, 8 * 0	; new rib
 26667 00013DB3 E8E9150000              	call malloc
 26668 00013DB8 50                      	push rax
 26669 00013DB9 BF08000000              	mov rdi, 8 * 1	; extended env
 26670 00013DBE E8DE150000              	call malloc
 26671 00013DC3 488B7D10                	mov rdi, ENV
 26672 00013DC7 BE00000000              	mov rsi, 0
 26673 00013DCC BA01000000              	mov rdx, 1
 26674                                  .L_lambda_simple_env_loop_0222:	; ext_env[i + 1] <-- env[i]
 26675 00013DD1 4883FE00                	cmp rsi, 0
 26676 00013DD5 7410                    	je .L_lambda_simple_env_end_0222
 26677 00013DD7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26678 00013DDB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26679 00013DDF 48FFC6                  	inc rsi
 26680 00013DE2 48FFC2                  	inc rdx
 26681 00013DE5 EBEA                    	jmp .L_lambda_simple_env_loop_0222
 26682                                  .L_lambda_simple_env_end_0222:
 26683 00013DE7 5B                      	pop rbx
 26684 00013DE8 BE00000000              	mov rsi, 0
 26685                                  .L_lambda_simple_params_loop_0222:	; copy params
 26686 00013DED 4883FE00                	cmp rsi, 0
 26687 00013DF1 740E                    	je .L_lambda_simple_params_end_0222
 26688 00013DF3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26689 00013DF8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26690 00013DFC 48FFC6                  	inc rsi
 26691 00013DFF EBEC                    	jmp .L_lambda_simple_params_loop_0222
 26692                                  .L_lambda_simple_params_end_0222:
 26693 00013E01 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26694 00013E04 4889C3                  	mov rbx, rax
 26695 00013E07 58                      	pop rax
 26696 00013E08 C60004                  	mov byte [rax], T_closure
 26697 00013E0B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26698 00013E0F 48C74009[1C3E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0222
 26699 00013E17 E902030000              	jmp .L_lambda_simple_end_0222
 26700                                  .L_lambda_simple_code_0222:	; lambda-simple body
 26701 00013E1C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26702 00013E22 740B                    	je .L_lambda_simple_arity_check_ok_0222
 26703 00013E24 FF742410                	push qword [rsp + 8 * 2]
 26704 00013E28 6A02                    	push 2
 26705 00013E2A E92B150000              	jmp L_error_incorrect_arity_simple
 26706                                  .L_lambda_simple_arity_check_ok_0222:
 26707 00013E2F C8000000                	enter 0, 0
 26708                                  	; Initiating tail-call optimization
 26709 00013E33 48B8-                   	mov rax, L_constants + 2007
 26709 00013E35 [D707000000000000] 
 26710 00013E3D 50                      	push rax
 26711 00013E3E 6A01                    	push 1	; Number of arguments
 26712 00013E40 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26713 00013E45 E857150000              	call malloc
 26714 00013E4A 50                      	push rax
 26715 00013E4B BF10000000              	mov rdi, 8 * 2	; new rib
 26716 00013E50 E84C150000              	call malloc
 26717 00013E55 50                      	push rax
 26718 00013E56 BF10000000              	mov rdi, 8 * 2	; extended env
 26719 00013E5B E841150000              	call malloc
 26720 00013E60 488B7D10                	mov rdi, ENV
 26721 00013E64 BE00000000              	mov rsi, 0
 26722 00013E69 BA01000000              	mov rdx, 1
 26723                                  .L_lambda_simple_env_loop_0223:	; ext_env[i + 1] <-- env[i]
 26724 00013E6E 4883FE01                	cmp rsi, 1
 26725 00013E72 7410                    	je .L_lambda_simple_env_end_0223
 26726 00013E74 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26727 00013E78 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26728 00013E7C 48FFC6                  	inc rsi
 26729 00013E7F 48FFC2                  	inc rdx
 26730 00013E82 EBEA                    	jmp .L_lambda_simple_env_loop_0223
 26731                                  .L_lambda_simple_env_end_0223:
 26732 00013E84 5B                      	pop rbx
 26733 00013E85 BE00000000              	mov rsi, 0
 26734                                  .L_lambda_simple_params_loop_0223:	; copy params
 26735 00013E8A 4883FE02                	cmp rsi, 2
 26736 00013E8E 740E                    	je .L_lambda_simple_params_end_0223
 26737 00013E90 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26738 00013E95 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26739 00013E99 48FFC6                  	inc rsi
 26740 00013E9C EBEC                    	jmp .L_lambda_simple_params_loop_0223
 26741                                  .L_lambda_simple_params_end_0223:
 26742 00013E9E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26743 00013EA1 4889C3                  	mov rbx, rax
 26744 00013EA4 58                      	pop rax
 26745 00013EA5 C60004                  	mov byte [rax], T_closure
 26746 00013EA8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26747 00013EAC 48C74009[B93E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0223
 26748 00013EB4 E91B020000              	jmp .L_lambda_simple_end_0223
 26749                                  .L_lambda_simple_code_0223:	; lambda-simple body
 26750 00013EB9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26751 00013EBF 740B                    	je .L_lambda_simple_arity_check_ok_0223
 26752 00013EC1 FF742410                	push qword [rsp + 8 * 2]
 26753 00013EC5 6A01                    	push 1
 26754 00013EC7 E98E140000              	jmp L_error_incorrect_arity_simple
 26755                                  .L_lambda_simple_arity_check_ok_0223:
 26756 00013ECC C8000000                	enter 0, 0
 26757 00013ED0 BF08000000              	mov rdi, 8 * 1
 26758 00013ED5 E8C7140000              	call malloc
 26759 00013EDA 488B5D20                	mov rbx, PARAM(0)
 26760 00013EDE 488918                  	mov qword [rax], rbx
 26761 00013EE1 48894520                	mov PARAM(0), rax
 26762 00013EE5 48B8-                   	mov rax, sob_void
 26762 00013EE7 [0000000000000000] 
 26763                                  
 26764 00013EEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26765 00013EF4 E8A8140000              	call malloc
 26766 00013EF9 50                      	push rax
 26767 00013EFA BF08000000              	mov rdi, 8 * 1	; new rib
 26768 00013EFF E89D140000              	call malloc
 26769 00013F04 50                      	push rax
 26770 00013F05 BF18000000              	mov rdi, 8 * 3	; extended env
 26771 00013F0A E892140000              	call malloc
 26772 00013F0F 488B7D10                	mov rdi, ENV
 26773 00013F13 BE00000000              	mov rsi, 0
 26774 00013F18 BA01000000              	mov rdx, 1
 26775                                  .L_lambda_simple_env_loop_0224:	; ext_env[i + 1] <-- env[i]
 26776 00013F1D 4883FE02                	cmp rsi, 2
 26777 00013F21 7410                    	je .L_lambda_simple_env_end_0224
 26778 00013F23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26779 00013F27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26780 00013F2B 48FFC6                  	inc rsi
 26781 00013F2E 48FFC2                  	inc rdx
 26782 00013F31 EBEA                    	jmp .L_lambda_simple_env_loop_0224
 26783                                  .L_lambda_simple_env_end_0224:
 26784 00013F33 5B                      	pop rbx
 26785 00013F34 BE00000000              	mov rsi, 0
 26786                                  .L_lambda_simple_params_loop_0224:	; copy params
 26787 00013F39 4883FE01                	cmp rsi, 1
 26788 00013F3D 740E                    	je .L_lambda_simple_params_end_0224
 26789 00013F3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26790 00013F44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26791 00013F48 48FFC6                  	inc rsi
 26792 00013F4B EBEC                    	jmp .L_lambda_simple_params_loop_0224
 26793                                  .L_lambda_simple_params_end_0224:
 26794 00013F4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26795 00013F50 4889C3                  	mov rbx, rax
 26796 00013F53 58                      	pop rax
 26797 00013F54 C60004                  	mov byte [rax], T_closure
 26798 00013F57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26799 00013F5B 48C74009[683F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0224
 26800 00013F63 E934010000              	jmp .L_lambda_simple_end_0224
 26801                                  .L_lambda_simple_code_0224:	; lambda-simple body
 26802 00013F68 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26803 00013F6E 740B                    	je .L_lambda_simple_arity_check_ok_0224
 26804 00013F70 FF742410                	push qword [rsp + 8 * 2]
 26805 00013F74 6A01                    	push 1
 26806 00013F76 E9DF130000              	jmp L_error_incorrect_arity_simple
 26807                                  .L_lambda_simple_arity_check_ok_0224:
 26808 00013F7B C8000000                	enter 0, 0
 26809                                  	; preparing a non-tail-call
 26810 00013F7F 488B4510                	mov rax, ENV
 26811 00013F83 488B4008                	mov rax, qword [rax + 8 * 1]
 26812 00013F87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 26813 00013F8A 50                      	push rax
 26814 00013F8B 488B4520                	mov rax, PARAM(0)	; param i
 26815 00013F8F 50                      	push rax
 26816 00013F90 6A02                    	push 2	; arg count
 26817 00013F92 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 26818 00013F9A 803805                  	cmp byte [rax], T_undefined
 26819 00013F9D 0F84D1120000            	je L_error_fvar_undefined
 26820 00013FA3 803804                  	cmp byte [rax], T_closure
 26821 00013FA6 0F854C130000            	jne L_error_non_closure
 26822 00013FAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26823 00013FAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 26824 00013FB2 483D[02000000]          	cmp rax, sob_boolean_false
 26825 00013FB8 0F84D0000000            	je .L_if_else_0193
 26826                                  	; Initiating tail-call optimization
 26827                                  	; preparing a non-tail-call
 26828                                  	; preparing a non-tail-call
 26829 00013FBE 48B8-                   	mov rax, L_constants + 2270
 26829 00013FC0 [DE08000000000000] 
 26830 00013FC8 50                      	push rax
 26831 00013FC9 488B4520                	mov rax, PARAM(0)	; param i
 26832 00013FCD 50                      	push rax
 26833 00013FCE 6A02                    	push 2	; arg count
 26834 00013FD0 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 26835 00013FD8 803805                  	cmp byte [rax], T_undefined
 26836 00013FDB 0F8493120000            	je L_error_fvar_undefined
 26837 00013FE1 803804                  	cmp byte [rax], T_closure
 26838 00013FE4 0F850E130000            	jne L_error_non_closure
 26839 00013FEA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26840 00013FED FF5009                  	call SOB_CLOSURE_CODE(rax)
 26841 00013FF0 50                      	push rax
 26842 00013FF1 6A01                    	push 1	; arg count
 26843 00013FF3 488B4510                	mov rax, ENV
 26844 00013FF7 488B00                  	mov rax, qword [rax + 8 * 0]
 26845 00013FFA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26846 00013FFD 488B00                  	mov rax, qword [rax]
 26847 00014000 803804                  	cmp byte [rax], T_closure
 26848 00014003 0F85EF120000            	jne L_error_non_closure
 26849 00014009 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26850 0001400C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26851 0001400F 50                      	push rax
 26852                                  	; preparing a non-tail-call
 26853 00014010 488B4520                	mov rax, PARAM(0)	; param i
 26854 00014014 50                      	push rax
 26855 00014015 6A01                    	push 1	; arg count
 26856 00014017 488B4510                	mov rax, ENV
 26857 0001401B 488B4008                	mov rax, qword [rax + 8 * 1]
 26858 0001401F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 26859 00014023 803804                  	cmp byte [rax], T_closure
 26860 00014026 0F85CC120000            	jne L_error_non_closure
 26861 0001402C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26862 0001402F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26863 00014032 50                      	push rax
 26864 00014033 6A02                    	push 2	; Number of arguments
 26865 00014035 488B0425[16130000]      	mov rax, qword [free_var_79]	; free var cons
 26866 0001403D 803805                  	cmp byte [rax], T_undefined
 26867 00014040 0F842E120000            	je L_error_fvar_undefined
 26868 00014046 803804                  	cmp byte [rax], T_closure
 26869 00014049 0F85A9120000            	jne L_error_non_closure
 26870 0001404F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26871 00014052 FF7508                  	push qword [rbp + 8]
 26872 00014055 FF7500                  	push qword [rbp]
 26873 00014058 41BA06000000            	mov r10, 2 + 4
 26874 0001405E 4C8B4518                	mov r8, COUNT
 26875 00014062 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26876 00014067 4C8D4DF8                	lea r9, [rbp - 8]
 26877                                  .L_tc_recycle_frame_loop_02a6:
 26878 0001406B 4983FA00                	cmp r10, 0
 26879 0001406F 7413                    	je .L_tc_recycle_frame_done_02a6
 26880 00014071 4D8B19                  	mov r11, qword [r9]
 26881 00014074 4D8918                  	mov qword [r8], r11
 26882 00014077 49FFCA                  	dec r10
 26883 0001407A 4983E808                	sub r8, 8
 26884 0001407E 4983E908                	sub r9, 8
 26885 00014082 EBE7                    	jmp .L_tc_recycle_frame_loop_02a6
 26886                                  .L_tc_recycle_frame_done_02a6:
 26887 00014084 498D6008                	lea rsp, [r8 + 8]
 26888 00014088 5D                      	pop rbp
 26889 00014089 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26890 0001408C EB0A                    	jmp .L_if_end_0193
 26891                                  .L_if_else_0193:
 26892 0001408E 48B8-                   	mov rax, L_constants + 1
 26892 00014090 [0100000000000000] 
 26893                                  .L_if_end_0193:
 26894 00014098 C9                      	leave
 26895 00014099 C21800                  	ret AND_KILL_FRAME(1)
 26896                                  .L_lambda_simple_end_0224:	; new closure is in rax
 26897 0001409C 50                      	push rax
 26898 0001409D 488B4520                	mov rax, PARAM(0)	; param run
 26899 000140A1 8F00                    	pop qword [rax]
 26900 000140A3 48B8-                   	mov rax, sob_void
 26900 000140A5 [0000000000000000] 
 26901                                  
 26902                                  	; preparing a non-tail-call
 26903 000140AD 48B8-                   	mov rax, L_constants + 2135
 26903 000140AF [5708000000000000] 
 26904 000140B7 50                      	push rax
 26905 000140B8 6A01                    	push 1	; arg count
 26906 000140BA 488B4520                	mov rax, PARAM(0)	; param run
 26907 000140BE 488B00                  	mov rax, qword [rax]
 26908 000140C1 803804                  	cmp byte [rax], T_closure
 26909 000140C4 0F852E120000            	jne L_error_non_closure
 26910 000140CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26911 000140CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26912 000140D0 C9                      	leave
 26913 000140D1 C21800                  	ret AND_KILL_FRAME(1)
 26914                                  .L_lambda_simple_end_0223:	; new closure is in rax
 26915 000140D4 803804                  	cmp byte [rax], T_closure
 26916 000140D7 0F851B120000            	jne L_error_non_closure
 26917 000140DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 26918 000140E0 FF7508                  	push qword [rbp + 8]
 26919 000140E3 FF7500                  	push qword [rbp]
 26920 000140E6 41BA05000000            	mov r10, 1 + 4
 26921 000140EC 4C8B4518                	mov r8, COUNT
 26922 000140F0 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 26923 000140F5 4C8D4DF8                	lea r9, [rbp - 8]
 26924                                  .L_tc_recycle_frame_loop_02a7:
 26925 000140F9 4983FA00                	cmp r10, 0
 26926 000140FD 7413                    	je .L_tc_recycle_frame_done_02a7
 26927 000140FF 4D8B19                  	mov r11, qword [r9]
 26928 00014102 4D8918                  	mov qword [r8], r11
 26929 00014105 49FFCA                  	dec r10
 26930 00014108 4983E808                	sub r8, 8
 26931 0001410C 4983E908                	sub r9, 8
 26932 00014110 EBE7                    	jmp .L_tc_recycle_frame_loop_02a7
 26933                                  .L_tc_recycle_frame_done_02a7:
 26934 00014112 498D6008                	lea rsp, [r8 + 8]
 26935 00014116 5D                      	pop rbp
 26936 00014117 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26937 0001411A C9                      	leave
 26938 0001411B C22000                  	ret AND_KILL_FRAME(2)
 26939                                  .L_lambda_simple_end_0222:	; new closure is in rax
 26940 0001411E 48890425[59140000]      	mov qword [free_var_98], rax
 26941 00014126 48B8-                   	mov rax, sob_void
 26941 00014128 [0000000000000000] 
 26942                                  
 26943 00014130 4889C7                  	mov rdi, rax
 26944 00014133 E8BE140000              	call print_sexpr_if_not_void
 26945 00014138 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26946 0001413D E85F120000              	call malloc
 26947 00014142 50                      	push rax
 26948 00014143 BF00000000              	mov rdi, 8 * 0	; new rib
 26949 00014148 E854120000              	call malloc
 26950 0001414D 50                      	push rax
 26951 0001414E BF08000000              	mov rdi, 8 * 1	; extended env
 26952 00014153 E849120000              	call malloc
 26953 00014158 488B7D10                	mov rdi, ENV
 26954 0001415C BE00000000              	mov rsi, 0
 26955 00014161 BA01000000              	mov rdx, 1
 26956                                  .L_lambda_simple_env_loop_0225:	; ext_env[i + 1] <-- env[i]
 26957 00014166 4883FE00                	cmp rsi, 0
 26958 0001416A 7410                    	je .L_lambda_simple_env_end_0225
 26959 0001416C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26960 00014170 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26961 00014174 48FFC6                  	inc rsi
 26962 00014177 48FFC2                  	inc rdx
 26963 0001417A EBEA                    	jmp .L_lambda_simple_env_loop_0225
 26964                                  .L_lambda_simple_env_end_0225:
 26965 0001417C 5B                      	pop rbx
 26966 0001417D BE00000000              	mov rsi, 0
 26967                                  .L_lambda_simple_params_loop_0225:	; copy params
 26968 00014182 4883FE00                	cmp rsi, 0
 26969 00014186 740E                    	je .L_lambda_simple_params_end_0225
 26970 00014188 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26971 0001418D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26972 00014191 48FFC6                  	inc rsi
 26973 00014194 EBEC                    	jmp .L_lambda_simple_params_loop_0225
 26974                                  .L_lambda_simple_params_end_0225:
 26975 00014196 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26976 00014199 4889C3                  	mov rbx, rax
 26977 0001419C 58                      	pop rax
 26978 0001419D C60004                  	mov byte [rax], T_closure
 26979 000141A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26980 000141A4 48C74009[B1410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0225
 26981 000141AC E9E0030000              	jmp .L_lambda_simple_end_0225
 26982                                  .L_lambda_simple_code_0225:	; lambda-simple body
 26983 000141B1 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26984 000141B7 740B                    	je .L_lambda_simple_arity_check_ok_0225
 26985 000141B9 FF742410                	push qword [rsp + 8 * 2]
 26986 000141BD 6A02                    	push 2
 26987 000141BF E996110000              	jmp L_error_incorrect_arity_simple
 26988                                  .L_lambda_simple_arity_check_ok_0225:
 26989 000141C4 C8000000                	enter 0, 0
 26990                                  	; Initiating tail-call optimization
 26991                                  	; preparing a non-tail-call
 26992 000141C8 488B4520                	mov rax, PARAM(0)	; param n
 26993 000141CC 50                      	push rax
 26994 000141CD 6A01                    	push 1	; arg count
 26995 000141CF 488B0425[6A140000]      	mov rax, qword [free_var_99]	; free var make-string
 26996 000141D7 803805                  	cmp byte [rax], T_undefined
 26997 000141DA 0F8494100000            	je L_error_fvar_undefined
 26998 000141E0 803804                  	cmp byte [rax], T_closure
 26999 000141E3 0F850F110000            	jne L_error_non_closure
 27000 000141E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27001 000141EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27002 000141EF 50                      	push rax
 27003 000141F0 6A01                    	push 1	; Number of arguments
 27004 000141F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27005 000141F7 E8A5110000              	call malloc
 27006 000141FC 50                      	push rax
 27007 000141FD BF10000000              	mov rdi, 8 * 2	; new rib
 27008 00014202 E89A110000              	call malloc
 27009 00014207 50                      	push rax
 27010 00014208 BF10000000              	mov rdi, 8 * 2	; extended env
 27011 0001420D E88F110000              	call malloc
 27012 00014212 488B7D10                	mov rdi, ENV
 27013 00014216 BE00000000              	mov rsi, 0
 27014 0001421B BA01000000              	mov rdx, 1
 27015                                  .L_lambda_simple_env_loop_0226:	; ext_env[i + 1] <-- env[i]
 27016 00014220 4883FE01                	cmp rsi, 1
 27017 00014224 7410                    	je .L_lambda_simple_env_end_0226
 27018 00014226 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27019 0001422A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27020 0001422E 48FFC6                  	inc rsi
 27021 00014231 48FFC2                  	inc rdx
 27022 00014234 EBEA                    	jmp .L_lambda_simple_env_loop_0226
 27023                                  .L_lambda_simple_env_end_0226:
 27024 00014236 5B                      	pop rbx
 27025 00014237 BE00000000              	mov rsi, 0
 27026                                  .L_lambda_simple_params_loop_0226:	; copy params
 27027 0001423C 4883FE02                	cmp rsi, 2
 27028 00014240 740E                    	je .L_lambda_simple_params_end_0226
 27029 00014242 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27030 00014247 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27031 0001424B 48FFC6                  	inc rsi
 27032 0001424E EBEC                    	jmp .L_lambda_simple_params_loop_0226
 27033                                  .L_lambda_simple_params_end_0226:
 27034 00014250 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27035 00014253 4889C3                  	mov rbx, rax
 27036 00014256 58                      	pop rax
 27037 00014257 C60004                  	mov byte [rax], T_closure
 27038 0001425A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27039 0001425E 48C74009[6B420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0226
 27040 00014266 E9DC020000              	jmp .L_lambda_simple_end_0226
 27041                                  .L_lambda_simple_code_0226:	; lambda-simple body
 27042 0001426B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27043 00014271 740B                    	je .L_lambda_simple_arity_check_ok_0226
 27044 00014273 FF742410                	push qword [rsp + 8 * 2]
 27045 00014277 6A01                    	push 1
 27046 00014279 E9DC100000              	jmp L_error_incorrect_arity_simple
 27047                                  .L_lambda_simple_arity_check_ok_0226:
 27048 0001427E C8000000                	enter 0, 0
 27049                                  	; Initiating tail-call optimization
 27050 00014282 48B8-                   	mov rax, L_constants + 2007
 27050 00014284 [D707000000000000] 
 27051 0001428C 50                      	push rax
 27052 0001428D 6A01                    	push 1	; Number of arguments
 27053 0001428F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27054 00014294 E808110000              	call malloc
 27055 00014299 50                      	push rax
 27056 0001429A BF08000000              	mov rdi, 8 * 1	; new rib
 27057 0001429F E8FD100000              	call malloc
 27058 000142A4 50                      	push rax
 27059 000142A5 BF18000000              	mov rdi, 8 * 3	; extended env
 27060 000142AA E8F2100000              	call malloc
 27061 000142AF 488B7D10                	mov rdi, ENV
 27062 000142B3 BE00000000              	mov rsi, 0
 27063 000142B8 BA01000000              	mov rdx, 1
 27064                                  .L_lambda_simple_env_loop_0227:	; ext_env[i + 1] <-- env[i]
 27065 000142BD 4883FE02                	cmp rsi, 2
 27066 000142C1 7410                    	je .L_lambda_simple_env_end_0227
 27067 000142C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27068 000142C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27069 000142CB 48FFC6                  	inc rsi
 27070 000142CE 48FFC2                  	inc rdx
 27071 000142D1 EBEA                    	jmp .L_lambda_simple_env_loop_0227
 27072                                  .L_lambda_simple_env_end_0227:
 27073 000142D3 5B                      	pop rbx
 27074 000142D4 BE00000000              	mov rsi, 0
 27075                                  .L_lambda_simple_params_loop_0227:	; copy params
 27076 000142D9 4883FE01                	cmp rsi, 1
 27077 000142DD 740E                    	je .L_lambda_simple_params_end_0227
 27078 000142DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27079 000142E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27080 000142E8 48FFC6                  	inc rsi
 27081 000142EB EBEC                    	jmp .L_lambda_simple_params_loop_0227
 27082                                  .L_lambda_simple_params_end_0227:
 27083 000142ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27084 000142F0 4889C3                  	mov rbx, rax
 27085 000142F3 58                      	pop rax
 27086 000142F4 C60004                  	mov byte [rax], T_closure
 27087 000142F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27088 000142FB 48C74009[08430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0227
 27089 00014303 E9F5010000              	jmp .L_lambda_simple_end_0227
 27090                                  .L_lambda_simple_code_0227:	; lambda-simple body
 27091 00014308 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27092 0001430E 740B                    	je .L_lambda_simple_arity_check_ok_0227
 27093 00014310 FF742410                	push qword [rsp + 8 * 2]
 27094 00014314 6A01                    	push 1
 27095 00014316 E93F100000              	jmp L_error_incorrect_arity_simple
 27096                                  .L_lambda_simple_arity_check_ok_0227:
 27097 0001431B C8000000                	enter 0, 0
 27098 0001431F BF08000000              	mov rdi, 8 * 1
 27099 00014324 E878100000              	call malloc
 27100 00014329 488B5D20                	mov rbx, PARAM(0)
 27101 0001432D 488918                  	mov qword [rax], rbx
 27102 00014330 48894520                	mov PARAM(0), rax
 27103 00014334 48B8-                   	mov rax, sob_void
 27103 00014336 [0000000000000000] 
 27104                                  
 27105 0001433E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27106 00014343 E859100000              	call malloc
 27107 00014348 50                      	push rax
 27108 00014349 BF08000000              	mov rdi, 8 * 1	; new rib
 27109 0001434E E84E100000              	call malloc
 27110 00014353 50                      	push rax
 27111 00014354 BF20000000              	mov rdi, 8 * 4	; extended env
 27112 00014359 E843100000              	call malloc
 27113 0001435E 488B7D10                	mov rdi, ENV
 27114 00014362 BE00000000              	mov rsi, 0
 27115 00014367 BA01000000              	mov rdx, 1
 27116                                  .L_lambda_simple_env_loop_0228:	; ext_env[i + 1] <-- env[i]
 27117 0001436C 4883FE03                	cmp rsi, 3
 27118 00014370 7410                    	je .L_lambda_simple_env_end_0228
 27119 00014372 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27120 00014376 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27121 0001437A 48FFC6                  	inc rsi
 27122 0001437D 48FFC2                  	inc rdx
 27123 00014380 EBEA                    	jmp .L_lambda_simple_env_loop_0228
 27124                                  .L_lambda_simple_env_end_0228:
 27125 00014382 5B                      	pop rbx
 27126 00014383 BE00000000              	mov rsi, 0
 27127                                  .L_lambda_simple_params_loop_0228:	; copy params
 27128 00014388 4883FE01                	cmp rsi, 1
 27129 0001438C 740E                    	je .L_lambda_simple_params_end_0228
 27130 0001438E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27131 00014393 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27132 00014397 48FFC6                  	inc rsi
 27133 0001439A EBEC                    	jmp .L_lambda_simple_params_loop_0228
 27134                                  .L_lambda_simple_params_end_0228:
 27135 0001439C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27136 0001439F 4889C3                  	mov rbx, rax
 27137 000143A2 58                      	pop rax
 27138 000143A3 C60004                  	mov byte [rax], T_closure
 27139 000143A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27140 000143AA 48C74009[B7430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0228
 27141 000143B2 E90E010000              	jmp .L_lambda_simple_end_0228
 27142                                  .L_lambda_simple_code_0228:	; lambda-simple body
 27143 000143B7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27144 000143BD 740B                    	je .L_lambda_simple_arity_check_ok_0228
 27145 000143BF FF742410                	push qword [rsp + 8 * 2]
 27146 000143C3 6A01                    	push 1
 27147 000143C5 E9900F0000              	jmp L_error_incorrect_arity_simple
 27148                                  .L_lambda_simple_arity_check_ok_0228:
 27149 000143CA C8000000                	enter 0, 0
 27150                                  	; preparing a non-tail-call
 27151 000143CE 488B4510                	mov rax, ENV
 27152 000143D2 488B4010                	mov rax, qword [rax + 8 * 2]
 27153 000143D6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27154 000143D9 50                      	push rax
 27155 000143DA 488B4520                	mov rax, PARAM(0)	; param i
 27156 000143DE 50                      	push rax
 27157 000143DF 6A02                    	push 2	; arg count
 27158 000143E1 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 27159 000143E9 803805                  	cmp byte [rax], T_undefined
 27160 000143EC 0F84820E0000            	je L_error_fvar_undefined
 27161 000143F2 803804                  	cmp byte [rax], T_closure
 27162 000143F5 0F85FD0E0000            	jne L_error_non_closure
 27163 000143FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 27164 000143FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 27165 00014401 483D[02000000]          	cmp rax, sob_boolean_false
 27166 00014407 0F84A9000000            	je .L_if_else_0194
 27167                                  	; preparing a non-tail-call
 27168                                  	; preparing a non-tail-call
 27169 0001440D 488B4520                	mov rax, PARAM(0)	; param i
 27170 00014411 50                      	push rax
 27171 00014412 6A01                    	push 1	; arg count
 27172 00014414 488B4510                	mov rax, ENV
 27173 00014418 488B4010                	mov rax, qword [rax + 8 * 2]
 27174 0001441C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27175 00014420 803804                  	cmp byte [rax], T_closure
 27176 00014423 0F85CF0E0000            	jne L_error_non_closure
 27177 00014429 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27178 0001442C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27179 0001442F 50                      	push rax
 27180 00014430 488B4520                	mov rax, PARAM(0)	; param i
 27181 00014434 50                      	push rax
 27182 00014435 488B4510                	mov rax, ENV
 27183 00014439 488B4008                	mov rax, qword [rax + 8 * 1]
 27184 0001443D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27185 00014440 50                      	push rax
 27186 00014441 6A03                    	push 3	; arg count
 27187 00014443 488B0425[8A160000]      	mov rax, qword [free_var_131]	; free var string-set!
 27188 0001444B 803805                  	cmp byte [rax], T_undefined
 27189 0001444E 0F84200E0000            	je L_error_fvar_undefined
 27190 00014454 803804                  	cmp byte [rax], T_closure
 27191 00014457 0F859B0E0000            	jne L_error_non_closure
 27192 0001445D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27193 00014460 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27194                                  
 27195                                  	; preparing a non-tail-call
 27196                                  	; preparing a non-tail-call
 27197 00014463 48B8-                   	mov rax, L_constants + 2270
 27197 00014465 [DE08000000000000] 
 27198 0001446D 50                      	push rax
 27199 0001446E 488B4520                	mov rax, PARAM(0)	; param i
 27200 00014472 50                      	push rax
 27201 00014473 6A02                    	push 2	; arg count
 27202 00014475 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 27203 0001447D 803805                  	cmp byte [rax], T_undefined
 27204 00014480 0F84EE0D0000            	je L_error_fvar_undefined
 27205 00014486 803804                  	cmp byte [rax], T_closure
 27206 00014489 0F85690E0000            	jne L_error_non_closure
 27207 0001448F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27208 00014492 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27209 00014495 50                      	push rax
 27210 00014496 6A01                    	push 1	; arg count
 27211 00014498 488B4510                	mov rax, ENV
 27212 0001449C 488B00                  	mov rax, qword [rax + 8 * 0]
 27213 0001449F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27214 000144A2 488B00                  	mov rax, qword [rax]
 27215 000144A5 803804                  	cmp byte [rax], T_closure
 27216 000144A8 0F854A0E0000            	jne L_error_non_closure
 27217 000144AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 27218 000144B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27219 000144B4 EB0B                    	jmp .L_if_end_0194
 27220                                  .L_if_else_0194:
 27221 000144B6 488B4510                	mov rax, ENV
 27222 000144BA 488B4008                	mov rax, qword [rax + 8 * 1]
 27223 000144BE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27224                                  .L_if_end_0194:
 27225 000144C1 C9                      	leave
 27226 000144C2 C21800                  	ret AND_KILL_FRAME(1)
 27227                                  .L_lambda_simple_end_0228:	; new closure is in rax
 27228 000144C5 50                      	push rax
 27229 000144C6 488B4520                	mov rax, PARAM(0)	; param run
 27230 000144CA 8F00                    	pop qword [rax]
 27231 000144CC 48B8-                   	mov rax, sob_void
 27231 000144CE [0000000000000000] 
 27232                                  
 27233                                  	; preparing a non-tail-call
 27234 000144D6 48B8-                   	mov rax, L_constants + 2135
 27234 000144D8 [5708000000000000] 
 27235 000144E0 50                      	push rax
 27236 000144E1 6A01                    	push 1	; arg count
 27237 000144E3 488B4520                	mov rax, PARAM(0)	; param run
 27238 000144E7 488B00                  	mov rax, qword [rax]
 27239 000144EA 803804                  	cmp byte [rax], T_closure
 27240 000144ED 0F85050E0000            	jne L_error_non_closure
 27241 000144F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27242 000144F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27243 000144F9 C9                      	leave
 27244 000144FA C21800                  	ret AND_KILL_FRAME(1)
 27245                                  .L_lambda_simple_end_0227:	; new closure is in rax
 27246 000144FD 803804                  	cmp byte [rax], T_closure
 27247 00014500 0F85F20D0000            	jne L_error_non_closure
 27248 00014506 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27249 00014509 FF7508                  	push qword [rbp + 8]
 27250 0001450C FF7500                  	push qword [rbp]
 27251 0001450F 41BA05000000            	mov r10, 1 + 4
 27252 00014515 4C8B4518                	mov r8, COUNT
 27253 00014519 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27254 0001451E 4C8D4DF8                	lea r9, [rbp - 8]
 27255                                  .L_tc_recycle_frame_loop_02a8:
 27256 00014522 4983FA00                	cmp r10, 0
 27257 00014526 7413                    	je .L_tc_recycle_frame_done_02a8
 27258 00014528 4D8B19                  	mov r11, qword [r9]
 27259 0001452B 4D8918                  	mov qword [r8], r11
 27260 0001452E 49FFCA                  	dec r10
 27261 00014531 4983E808                	sub r8, 8
 27262 00014535 4983E908                	sub r9, 8
 27263 00014539 EBE7                    	jmp .L_tc_recycle_frame_loop_02a8
 27264                                  .L_tc_recycle_frame_done_02a8:
 27265 0001453B 498D6008                	lea rsp, [r8 + 8]
 27266 0001453F 5D                      	pop rbp
 27267 00014540 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27268 00014543 C9                      	leave
 27269 00014544 C21800                  	ret AND_KILL_FRAME(1)
 27270                                  .L_lambda_simple_end_0226:	; new closure is in rax
 27271 00014547 803804                  	cmp byte [rax], T_closure
 27272 0001454A 0F85A80D0000            	jne L_error_non_closure
 27273 00014550 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27274 00014553 FF7508                  	push qword [rbp + 8]
 27275 00014556 FF7500                  	push qword [rbp]
 27276 00014559 41BA05000000            	mov r10, 1 + 4
 27277 0001455F 4C8B4518                	mov r8, COUNT
 27278 00014563 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27279 00014568 4C8D4DF8                	lea r9, [rbp - 8]
 27280                                  .L_tc_recycle_frame_loop_02a9:
 27281 0001456C 4983FA00                	cmp r10, 0
 27282 00014570 7413                    	je .L_tc_recycle_frame_done_02a9
 27283 00014572 4D8B19                  	mov r11, qword [r9]
 27284 00014575 4D8918                  	mov qword [r8], r11
 27285 00014578 49FFCA                  	dec r10
 27286 0001457B 4983E808                	sub r8, 8
 27287 0001457F 4983E908                	sub r9, 8
 27288 00014583 EBE7                    	jmp .L_tc_recycle_frame_loop_02a9
 27289                                  .L_tc_recycle_frame_done_02a9:
 27290 00014585 498D6008                	lea rsp, [r8 + 8]
 27291 00014589 5D                      	pop rbp
 27292 0001458A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27293 0001458D C9                      	leave
 27294 0001458E C22000                  	ret AND_KILL_FRAME(2)
 27295                                  .L_lambda_simple_end_0225:	; new closure is in rax
 27296 00014591 48890425[7B140000]      	mov qword [free_var_100], rax
 27297 00014599 48B8-                   	mov rax, sob_void
 27297 0001459B [0000000000000000] 
 27298                                  
 27299 000145A3 4889C7                  	mov rdi, rax
 27300 000145A6 E84B100000              	call print_sexpr_if_not_void
 27301 000145AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27302 000145B0 E8EC0D0000              	call malloc
 27303 000145B5 50                      	push rax
 27304 000145B6 BF00000000              	mov rdi, 8 * 0	; new rib
 27305 000145BB E8E10D0000              	call malloc
 27306 000145C0 50                      	push rax
 27307 000145C1 BF08000000              	mov rdi, 8 * 1	; extended env
 27308 000145C6 E8D60D0000              	call malloc
 27309 000145CB 488B7D10                	mov rdi, ENV
 27310 000145CF BE00000000              	mov rsi, 0
 27311 000145D4 BA01000000              	mov rdx, 1
 27312                                  .L_lambda_simple_env_loop_0229:	; ext_env[i + 1] <-- env[i]
 27313 000145D9 4883FE00                	cmp rsi, 0
 27314 000145DD 7410                    	je .L_lambda_simple_env_end_0229
 27315 000145DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27316 000145E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27317 000145E7 48FFC6                  	inc rsi
 27318 000145EA 48FFC2                  	inc rdx
 27319 000145ED EBEA                    	jmp .L_lambda_simple_env_loop_0229
 27320                                  .L_lambda_simple_env_end_0229:
 27321 000145EF 5B                      	pop rbx
 27322 000145F0 BE00000000              	mov rsi, 0
 27323                                  .L_lambda_simple_params_loop_0229:	; copy params
 27324 000145F5 4883FE00                	cmp rsi, 0
 27325 000145F9 740E                    	je .L_lambda_simple_params_end_0229
 27326 000145FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27327 00014600 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27328 00014604 48FFC6                  	inc rsi
 27329 00014607 EBEC                    	jmp .L_lambda_simple_params_loop_0229
 27330                                  .L_lambda_simple_params_end_0229:
 27331 00014609 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27332 0001460C 4889C3                  	mov rbx, rax
 27333 0001460F 58                      	pop rax
 27334 00014610 C60004                  	mov byte [rax], T_closure
 27335 00014613 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27336 00014617 48C74009[24460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0229
 27337 0001461F E9E0030000              	jmp .L_lambda_simple_end_0229
 27338                                  .L_lambda_simple_code_0229:	; lambda-simple body
 27339 00014624 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27340 0001462A 740B                    	je .L_lambda_simple_arity_check_ok_0229
 27341 0001462C FF742410                	push qword [rsp + 8 * 2]
 27342 00014630 6A02                    	push 2
 27343 00014632 E9230D0000              	jmp L_error_incorrect_arity_simple
 27344                                  .L_lambda_simple_arity_check_ok_0229:
 27345 00014637 C8000000                	enter 0, 0
 27346                                  	; Initiating tail-call optimization
 27347                                  	; preparing a non-tail-call
 27348 0001463B 488B4520                	mov rax, PARAM(0)	; param n
 27349 0001463F 50                      	push rax
 27350 00014640 6A01                    	push 1	; arg count
 27351 00014642 488B0425[8C140000]      	mov rax, qword [free_var_101]	; free var make-vector
 27352 0001464A 803805                  	cmp byte [rax], T_undefined
 27353 0001464D 0F84210C0000            	je L_error_fvar_undefined
 27354 00014653 803804                  	cmp byte [rax], T_closure
 27355 00014656 0F859C0C0000            	jne L_error_non_closure
 27356 0001465C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27357 0001465F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27358 00014662 50                      	push rax
 27359 00014663 6A01                    	push 1	; Number of arguments
 27360 00014665 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27361 0001466A E8320D0000              	call malloc
 27362 0001466F 50                      	push rax
 27363 00014670 BF10000000              	mov rdi, 8 * 2	; new rib
 27364 00014675 E8270D0000              	call malloc
 27365 0001467A 50                      	push rax
 27366 0001467B BF10000000              	mov rdi, 8 * 2	; extended env
 27367 00014680 E81C0D0000              	call malloc
 27368 00014685 488B7D10                	mov rdi, ENV
 27369 00014689 BE00000000              	mov rsi, 0
 27370 0001468E BA01000000              	mov rdx, 1
 27371                                  .L_lambda_simple_env_loop_022a:	; ext_env[i + 1] <-- env[i]
 27372 00014693 4883FE01                	cmp rsi, 1
 27373 00014697 7410                    	je .L_lambda_simple_env_end_022a
 27374 00014699 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27375 0001469D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27376 000146A1 48FFC6                  	inc rsi
 27377 000146A4 48FFC2                  	inc rdx
 27378 000146A7 EBEA                    	jmp .L_lambda_simple_env_loop_022a
 27379                                  .L_lambda_simple_env_end_022a:
 27380 000146A9 5B                      	pop rbx
 27381 000146AA BE00000000              	mov rsi, 0
 27382                                  .L_lambda_simple_params_loop_022a:	; copy params
 27383 000146AF 4883FE02                	cmp rsi, 2
 27384 000146B3 740E                    	je .L_lambda_simple_params_end_022a
 27385 000146B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27386 000146BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27387 000146BE 48FFC6                  	inc rsi
 27388 000146C1 EBEC                    	jmp .L_lambda_simple_params_loop_022a
 27389                                  .L_lambda_simple_params_end_022a:
 27390 000146C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27391 000146C6 4889C3                  	mov rbx, rax
 27392 000146C9 58                      	pop rax
 27393 000146CA C60004                  	mov byte [rax], T_closure
 27394 000146CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27395 000146D1 48C74009[DE460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022a
 27396 000146D9 E9DC020000              	jmp .L_lambda_simple_end_022a
 27397                                  .L_lambda_simple_code_022a:	; lambda-simple body
 27398 000146DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27399 000146E4 740B                    	je .L_lambda_simple_arity_check_ok_022a
 27400 000146E6 FF742410                	push qword [rsp + 8 * 2]
 27401 000146EA 6A01                    	push 1
 27402 000146EC E9690C0000              	jmp L_error_incorrect_arity_simple
 27403                                  .L_lambda_simple_arity_check_ok_022a:
 27404 000146F1 C8000000                	enter 0, 0
 27405                                  	; Initiating tail-call optimization
 27406 000146F5 48B8-                   	mov rax, L_constants + 2007
 27406 000146F7 [D707000000000000] 
 27407 000146FF 50                      	push rax
 27408 00014700 6A01                    	push 1	; Number of arguments
 27409 00014702 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27410 00014707 E8950C0000              	call malloc
 27411 0001470C 50                      	push rax
 27412 0001470D BF08000000              	mov rdi, 8 * 1	; new rib
 27413 00014712 E88A0C0000              	call malloc
 27414 00014717 50                      	push rax
 27415 00014718 BF18000000              	mov rdi, 8 * 3	; extended env
 27416 0001471D E87F0C0000              	call malloc
 27417 00014722 488B7D10                	mov rdi, ENV
 27418 00014726 BE00000000              	mov rsi, 0
 27419 0001472B BA01000000              	mov rdx, 1
 27420                                  .L_lambda_simple_env_loop_022b:	; ext_env[i + 1] <-- env[i]
 27421 00014730 4883FE02                	cmp rsi, 2
 27422 00014734 7410                    	je .L_lambda_simple_env_end_022b
 27423 00014736 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27424 0001473A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27425 0001473E 48FFC6                  	inc rsi
 27426 00014741 48FFC2                  	inc rdx
 27427 00014744 EBEA                    	jmp .L_lambda_simple_env_loop_022b
 27428                                  .L_lambda_simple_env_end_022b:
 27429 00014746 5B                      	pop rbx
 27430 00014747 BE00000000              	mov rsi, 0
 27431                                  .L_lambda_simple_params_loop_022b:	; copy params
 27432 0001474C 4883FE01                	cmp rsi, 1
 27433 00014750 740E                    	je .L_lambda_simple_params_end_022b
 27434 00014752 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27435 00014757 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27436 0001475B 48FFC6                  	inc rsi
 27437 0001475E EBEC                    	jmp .L_lambda_simple_params_loop_022b
 27438                                  .L_lambda_simple_params_end_022b:
 27439 00014760 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27440 00014763 4889C3                  	mov rbx, rax
 27441 00014766 58                      	pop rax
 27442 00014767 C60004                  	mov byte [rax], T_closure
 27443 0001476A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27444 0001476E 48C74009[7B470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022b
 27445 00014776 E9F5010000              	jmp .L_lambda_simple_end_022b
 27446                                  .L_lambda_simple_code_022b:	; lambda-simple body
 27447 0001477B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27448 00014781 740B                    	je .L_lambda_simple_arity_check_ok_022b
 27449 00014783 FF742410                	push qword [rsp + 8 * 2]
 27450 00014787 6A01                    	push 1
 27451 00014789 E9CC0B0000              	jmp L_error_incorrect_arity_simple
 27452                                  .L_lambda_simple_arity_check_ok_022b:
 27453 0001478E C8000000                	enter 0, 0
 27454 00014792 BF08000000              	mov rdi, 8 * 1
 27455 00014797 E8050C0000              	call malloc
 27456 0001479C 488B5D20                	mov rbx, PARAM(0)
 27457 000147A0 488918                  	mov qword [rax], rbx
 27458 000147A3 48894520                	mov PARAM(0), rax
 27459 000147A7 48B8-                   	mov rax, sob_void
 27459 000147A9 [0000000000000000] 
 27460                                  
 27461 000147B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27462 000147B6 E8E60B0000              	call malloc
 27463 000147BB 50                      	push rax
 27464 000147BC BF08000000              	mov rdi, 8 * 1	; new rib
 27465 000147C1 E8DB0B0000              	call malloc
 27466 000147C6 50                      	push rax
 27467 000147C7 BF20000000              	mov rdi, 8 * 4	; extended env
 27468 000147CC E8D00B0000              	call malloc
 27469 000147D1 488B7D10                	mov rdi, ENV
 27470 000147D5 BE00000000              	mov rsi, 0
 27471 000147DA BA01000000              	mov rdx, 1
 27472                                  .L_lambda_simple_env_loop_022c:	; ext_env[i + 1] <-- env[i]
 27473 000147DF 4883FE03                	cmp rsi, 3
 27474 000147E3 7410                    	je .L_lambda_simple_env_end_022c
 27475 000147E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27476 000147E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27477 000147ED 48FFC6                  	inc rsi
 27478 000147F0 48FFC2                  	inc rdx
 27479 000147F3 EBEA                    	jmp .L_lambda_simple_env_loop_022c
 27480                                  .L_lambda_simple_env_end_022c:
 27481 000147F5 5B                      	pop rbx
 27482 000147F6 BE00000000              	mov rsi, 0
 27483                                  .L_lambda_simple_params_loop_022c:	; copy params
 27484 000147FB 4883FE01                	cmp rsi, 1
 27485 000147FF 740E                    	je .L_lambda_simple_params_end_022c
 27486 00014801 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27487 00014806 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27488 0001480A 48FFC6                  	inc rsi
 27489 0001480D EBEC                    	jmp .L_lambda_simple_params_loop_022c
 27490                                  .L_lambda_simple_params_end_022c:
 27491 0001480F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27492 00014812 4889C3                  	mov rbx, rax
 27493 00014815 58                      	pop rax
 27494 00014816 C60004                  	mov byte [rax], T_closure
 27495 00014819 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27496 0001481D 48C74009[2A480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022c
 27497 00014825 E90E010000              	jmp .L_lambda_simple_end_022c
 27498                                  .L_lambda_simple_code_022c:	; lambda-simple body
 27499 0001482A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27500 00014830 740B                    	je .L_lambda_simple_arity_check_ok_022c
 27501 00014832 FF742410                	push qword [rsp + 8 * 2]
 27502 00014836 6A01                    	push 1
 27503 00014838 E91D0B0000              	jmp L_error_incorrect_arity_simple
 27504                                  .L_lambda_simple_arity_check_ok_022c:
 27505 0001483D C8000000                	enter 0, 0
 27506                                  	; preparing a non-tail-call
 27507 00014841 488B4510                	mov rax, ENV
 27508 00014845 488B4010                	mov rax, qword [rax + 8 * 2]
 27509 00014849 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27510 0001484C 50                      	push rax
 27511 0001484D 488B4520                	mov rax, PARAM(0)	; param i
 27512 00014851 50                      	push rax
 27513 00014852 6A02                    	push 2	; arg count
 27514 00014854 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 27515 0001485C 803805                  	cmp byte [rax], T_undefined
 27516 0001485F 0F840F0A0000            	je L_error_fvar_undefined
 27517 00014865 803804                  	cmp byte [rax], T_closure
 27518 00014868 0F858A0A0000            	jne L_error_non_closure
 27519 0001486E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27520 00014871 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27521 00014874 483D[02000000]          	cmp rax, sob_boolean_false
 27522 0001487A 0F84A9000000            	je .L_if_else_0195
 27523                                  	; preparing a non-tail-call
 27524                                  	; preparing a non-tail-call
 27525 00014880 488B4520                	mov rax, PARAM(0)	; param i
 27526 00014884 50                      	push rax
 27527 00014885 6A01                    	push 1	; arg count
 27528 00014887 488B4510                	mov rax, ENV
 27529 0001488B 488B4010                	mov rax, qword [rax + 8 * 2]
 27530 0001488F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27531 00014893 803804                  	cmp byte [rax], T_closure
 27532 00014896 0F855C0A0000            	jne L_error_non_closure
 27533 0001489C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27534 0001489F FF5009                  	call SOB_CLOSURE_CODE(rax)
 27535 000148A2 50                      	push rax
 27536 000148A3 488B4520                	mov rax, PARAM(0)	; param i
 27537 000148A7 50                      	push rax
 27538 000148A8 488B4510                	mov rax, ENV
 27539 000148AC 488B4008                	mov rax, qword [rax + 8 * 1]
 27540 000148B0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27541 000148B3 50                      	push rax
 27542 000148B4 6A03                    	push 3	; arg count
 27543 000148B6 488B0425[9A170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27544 000148BE 803805                  	cmp byte [rax], T_undefined
 27545 000148C1 0F84AD090000            	je L_error_fvar_undefined
 27546 000148C7 803804                  	cmp byte [rax], T_closure
 27547 000148CA 0F85280A0000            	jne L_error_non_closure
 27548 000148D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27549 000148D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27550                                  
 27551                                  	; preparing a non-tail-call
 27552                                  	; preparing a non-tail-call
 27553 000148D6 48B8-                   	mov rax, L_constants + 2270
 27553 000148D8 [DE08000000000000] 
 27554 000148E0 50                      	push rax
 27555 000148E1 488B4520                	mov rax, PARAM(0)	; param i
 27556 000148E5 50                      	push rax
 27557 000148E6 6A02                    	push 2	; arg count
 27558 000148E8 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 27559 000148F0 803805                  	cmp byte [rax], T_undefined
 27560 000148F3 0F847B090000            	je L_error_fvar_undefined
 27561 000148F9 803804                  	cmp byte [rax], T_closure
 27562 000148FC 0F85F6090000            	jne L_error_non_closure
 27563 00014902 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27564 00014905 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27565 00014908 50                      	push rax
 27566 00014909 6A01                    	push 1	; arg count
 27567 0001490B 488B4510                	mov rax, ENV
 27568 0001490F 488B00                  	mov rax, qword [rax + 8 * 0]
 27569 00014912 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27570 00014915 488B00                  	mov rax, qword [rax]
 27571 00014918 803804                  	cmp byte [rax], T_closure
 27572 0001491B 0F85D7090000            	jne L_error_non_closure
 27573 00014921 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27574 00014924 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27575 00014927 EB0B                    	jmp .L_if_end_0195
 27576                                  .L_if_else_0195:
 27577 00014929 488B4510                	mov rax, ENV
 27578 0001492D 488B4008                	mov rax, qword [rax + 8 * 1]
 27579 00014931 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27580                                  .L_if_end_0195:
 27581 00014934 C9                      	leave
 27582 00014935 C21800                  	ret AND_KILL_FRAME(1)
 27583                                  .L_lambda_simple_end_022c:	; new closure is in rax
 27584 00014938 50                      	push rax
 27585 00014939 488B4520                	mov rax, PARAM(0)	; param run
 27586 0001493D 8F00                    	pop qword [rax]
 27587 0001493F 48B8-                   	mov rax, sob_void
 27587 00014941 [0000000000000000] 
 27588                                  
 27589                                  	; preparing a non-tail-call
 27590 00014949 48B8-                   	mov rax, L_constants + 2135
 27590 0001494B [5708000000000000] 
 27591 00014953 50                      	push rax
 27592 00014954 6A01                    	push 1	; arg count
 27593 00014956 488B4520                	mov rax, PARAM(0)	; param run
 27594 0001495A 488B00                  	mov rax, qword [rax]
 27595 0001495D 803804                  	cmp byte [rax], T_closure
 27596 00014960 0F8592090000            	jne L_error_non_closure
 27597 00014966 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27598 00014969 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27599 0001496C C9                      	leave
 27600 0001496D C21800                  	ret AND_KILL_FRAME(1)
 27601                                  .L_lambda_simple_end_022b:	; new closure is in rax
 27602 00014970 803804                  	cmp byte [rax], T_closure
 27603 00014973 0F857F090000            	jne L_error_non_closure
 27604 00014979 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27605 0001497C FF7508                  	push qword [rbp + 8]
 27606 0001497F FF7500                  	push qword [rbp]
 27607 00014982 41BA05000000            	mov r10, 1 + 4
 27608 00014988 4C8B4518                	mov r8, COUNT
 27609 0001498C 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27610 00014991 4C8D4DF8                	lea r9, [rbp - 8]
 27611                                  .L_tc_recycle_frame_loop_02aa:
 27612 00014995 4983FA00                	cmp r10, 0
 27613 00014999 7413                    	je .L_tc_recycle_frame_done_02aa
 27614 0001499B 4D8B19                  	mov r11, qword [r9]
 27615 0001499E 4D8918                  	mov qword [r8], r11
 27616 000149A1 49FFCA                  	dec r10
 27617 000149A4 4983E808                	sub r8, 8
 27618 000149A8 4983E908                	sub r9, 8
 27619 000149AC EBE7                    	jmp .L_tc_recycle_frame_loop_02aa
 27620                                  .L_tc_recycle_frame_done_02aa:
 27621 000149AE 498D6008                	lea rsp, [r8 + 8]
 27622 000149B2 5D                      	pop rbp
 27623 000149B3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27624 000149B6 C9                      	leave
 27625 000149B7 C21800                  	ret AND_KILL_FRAME(1)
 27626                                  .L_lambda_simple_end_022a:	; new closure is in rax
 27627 000149BA 803804                  	cmp byte [rax], T_closure
 27628 000149BD 0F8535090000            	jne L_error_non_closure
 27629 000149C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27630 000149C6 FF7508                  	push qword [rbp + 8]
 27631 000149C9 FF7500                  	push qword [rbp]
 27632 000149CC 41BA05000000            	mov r10, 1 + 4
 27633 000149D2 4C8B4518                	mov r8, COUNT
 27634 000149D6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27635 000149DB 4C8D4DF8                	lea r9, [rbp - 8]
 27636                                  .L_tc_recycle_frame_loop_02ab:
 27637 000149DF 4983FA00                	cmp r10, 0
 27638 000149E3 7413                    	je .L_tc_recycle_frame_done_02ab
 27639 000149E5 4D8B19                  	mov r11, qword [r9]
 27640 000149E8 4D8918                  	mov qword [r8], r11
 27641 000149EB 49FFCA                  	dec r10
 27642 000149EE 4983E808                	sub r8, 8
 27643 000149F2 4983E908                	sub r9, 8
 27644 000149F6 EBE7                    	jmp .L_tc_recycle_frame_loop_02ab
 27645                                  .L_tc_recycle_frame_done_02ab:
 27646 000149F8 498D6008                	lea rsp, [r8 + 8]
 27647 000149FC 5D                      	pop rbp
 27648 000149FD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27649 00014A00 C9                      	leave
 27650 00014A01 C22000                  	ret AND_KILL_FRAME(2)
 27651                                  .L_lambda_simple_end_0229:	; new closure is in rax
 27652 00014A04 48890425[9D140000]      	mov qword [free_var_102], rax
 27653 00014A0C 48B8-                   	mov rax, sob_void
 27653 00014A0E [0000000000000000] 
 27654                                  
 27655 00014A16 4889C7                  	mov rdi, rax
 27656 00014A19 E8D80B0000              	call print_sexpr_if_not_void
 27657 00014A1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27658 00014A23 E879090000              	call malloc
 27659 00014A28 50                      	push rax
 27660 00014A29 BF00000000              	mov rdi, 8 * 0	; new rib
 27661 00014A2E E86E090000              	call malloc
 27662 00014A33 50                      	push rax
 27663 00014A34 BF08000000              	mov rdi, 8 * 1	; extended env
 27664 00014A39 E863090000              	call malloc
 27665 00014A3E 488B7D10                	mov rdi, ENV
 27666 00014A42 BE00000000              	mov rsi, 0
 27667 00014A47 BA01000000              	mov rdx, 1
 27668                                  .L_lambda_simple_env_loop_022d:	; ext_env[i + 1] <-- env[i]
 27669 00014A4C 4883FE00                	cmp rsi, 0
 27670 00014A50 7410                    	je .L_lambda_simple_env_end_022d
 27671 00014A52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27672 00014A56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27673 00014A5A 48FFC6                  	inc rsi
 27674 00014A5D 48FFC2                  	inc rdx
 27675 00014A60 EBEA                    	jmp .L_lambda_simple_env_loop_022d
 27676                                  .L_lambda_simple_env_end_022d:
 27677 00014A62 5B                      	pop rbx
 27678 00014A63 BE00000000              	mov rsi, 0
 27679                                  .L_lambda_simple_params_loop_022d:	; copy params
 27680 00014A68 4883FE00                	cmp rsi, 0
 27681 00014A6C 740E                    	je .L_lambda_simple_params_end_022d
 27682 00014A6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27683 00014A73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27684 00014A77 48FFC6                  	inc rsi
 27685 00014A7A EBEC                    	jmp .L_lambda_simple_params_loop_022d
 27686                                  .L_lambda_simple_params_end_022d:
 27687 00014A7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27688 00014A7F 4889C3                  	mov rbx, rax
 27689 00014A82 58                      	pop rax
 27690 00014A83 C60004                  	mov byte [rax], T_closure
 27691 00014A86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27692 00014A8A 48C74009[974A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022d
 27693 00014A92 E95B020000              	jmp .L_lambda_simple_end_022d
 27694                                  .L_lambda_simple_code_022d:	; lambda-simple body
 27695 00014A97 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27696 00014A9D 740B                    	je .L_lambda_simple_arity_check_ok_022d
 27697 00014A9F FF742410                	push qword [rsp + 8 * 2]
 27698 00014AA3 6A03                    	push 3
 27699 00014AA5 E9B0080000              	jmp L_error_incorrect_arity_simple
 27700                                  .L_lambda_simple_arity_check_ok_022d:
 27701 00014AAA C8000000                	enter 0, 0
 27702                                  	; preparing a non-tail-call
 27703 00014AAE 488B4530                	mov rax, PARAM(2)	; param n
 27704 00014AB2 50                      	push rax
 27705 00014AB3 6A01                    	push 1	; arg count
 27706 00014AB5 488B0425[DE170000]      	mov rax, qword [free_var_151]	; free var zero?
 27707 00014ABD 803805                  	cmp byte [rax], T_undefined
 27708 00014AC0 0F84AE070000            	je L_error_fvar_undefined
 27709 00014AC6 803804                  	cmp byte [rax], T_closure
 27710 00014AC9 0F8529080000            	jne L_error_non_closure
 27711 00014ACF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27712 00014AD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27713 00014AD5 483D[02000000]          	cmp rax, sob_boolean_false
 27714 00014ADB 740F                    	je .L_if_else_0198
 27715 00014ADD 48B8-                   	mov rax, L_constants + 3485
 27715 00014ADF [9D0D000000000000] 
 27716 00014AE7 E902020000              	jmp .L_if_end_0198
 27717                                  .L_if_else_0198:
 27718                                  	; preparing a non-tail-call
 27719 00014AEC 488B4528                	mov rax, PARAM(1)	; param b
 27720 00014AF0 50                      	push rax
 27721 00014AF1 488B4520                	mov rax, PARAM(0)	; param a
 27722 00014AF5 50                      	push rax
 27723 00014AF6 6A02                    	push 2	; arg count
 27724 00014AF8 488B0425[1B0E0000]      	mov rax, qword [free_var_4]	; free var <
 27725 00014B00 803805                  	cmp byte [rax], T_undefined
 27726 00014B03 0F846B070000            	je L_error_fvar_undefined
 27727 00014B09 803804                  	cmp byte [rax], T_closure
 27728 00014B0C 0F85E6070000            	jne L_error_non_closure
 27729 00014B12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27730 00014B15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27731 00014B18 483D[02000000]          	cmp rax, sob_boolean_false
 27732 00014B1E 0F84C3000000            	je .L_if_else_0197
 27733                                  	; Initiating tail-call optimization
 27734                                  	; preparing a non-tail-call
 27735 00014B24 488B4530                	mov rax, PARAM(2)	; param n
 27736 00014B28 50                      	push rax
 27737                                  	; preparing a non-tail-call
 27738 00014B29 488B4520                	mov rax, PARAM(0)	; param a
 27739 00014B2D 50                      	push rax
 27740 00014B2E 488B4528                	mov rax, PARAM(1)	; param b
 27741 00014B32 50                      	push rax
 27742 00014B33 6A02                    	push 2	; arg count
 27743 00014B35 488B0425[0A0E0000]      	mov rax, qword [free_var_3]	; free var /
 27744 00014B3D 803805                  	cmp byte [rax], T_undefined
 27745 00014B40 0F842E070000            	je L_error_fvar_undefined
 27746 00014B46 803804                  	cmp byte [rax], T_closure
 27747 00014B49 0F85A9070000            	jne L_error_non_closure
 27748 00014B4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27749 00014B52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27750 00014B55 50                      	push rax
 27751 00014B56 488B4520                	mov rax, PARAM(0)	; param a
 27752 00014B5A 50                      	push rax
 27753 00014B5B 6A03                    	push 3	; arg count
 27754 00014B5D 488B0425[48140000]      	mov rax, qword [free_var_97]	; free var logarithm
 27755 00014B65 803805                  	cmp byte [rax], T_undefined
 27756 00014B68 0F8406070000            	je L_error_fvar_undefined
 27757 00014B6E 803804                  	cmp byte [rax], T_closure
 27758 00014B71 0F8581070000            	jne L_error_non_closure
 27759 00014B77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27760 00014B7A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27761 00014B7D 50                      	push rax
 27762 00014B7E 48B8-                   	mov rax, L_constants + 3485
 27762 00014B80 [9D0D000000000000] 
 27763 00014B88 50                      	push rax
 27764 00014B89 6A02                    	push 2	; Number of arguments
 27765 00014B8B 488B0425[E80D0000]      	mov rax, qword [free_var_1]	; free var +
 27766 00014B93 803805                  	cmp byte [rax], T_undefined
 27767 00014B96 0F84D8060000            	je L_error_fvar_undefined
 27768 00014B9C 803804                  	cmp byte [rax], T_closure
 27769 00014B9F 0F8553070000            	jne L_error_non_closure
 27770 00014BA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27771 00014BA8 FF7508                  	push qword [rbp + 8]
 27772 00014BAB FF7500                  	push qword [rbp]
 27773 00014BAE 41BA06000000            	mov r10, 2 + 4
 27774 00014BB4 4C8B4518                	mov r8, COUNT
 27775 00014BB8 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27776 00014BBD 4C8D4DF8                	lea r9, [rbp - 8]
 27777                                  .L_tc_recycle_frame_loop_02ac:
 27778 00014BC1 4983FA00                	cmp r10, 0
 27779 00014BC5 7413                    	je .L_tc_recycle_frame_done_02ac
 27780 00014BC7 4D8B19                  	mov r11, qword [r9]
 27781 00014BCA 4D8918                  	mov qword [r8], r11
 27782 00014BCD 49FFCA                  	dec r10
 27783 00014BD0 4983E808                	sub r8, 8
 27784 00014BD4 4983E908                	sub r9, 8
 27785 00014BD8 EBE7                    	jmp .L_tc_recycle_frame_loop_02ac
 27786                                  .L_tc_recycle_frame_done_02ac:
 27787 00014BDA 498D6008                	lea rsp, [r8 + 8]
 27788 00014BDE 5D                      	pop rbp
 27789 00014BDF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27790 00014BE2 E907010000              	jmp .L_if_end_0197
 27791                                  .L_if_else_0197:
 27792                                  	; preparing a non-tail-call
 27793 00014BE7 488B4528                	mov rax, PARAM(1)	; param b
 27794 00014BEB 50                      	push rax
 27795 00014BEC 488B4520                	mov rax, PARAM(0)	; param a
 27796 00014BF0 50                      	push rax
 27797 00014BF1 6A02                    	push 2	; arg count
 27798 00014BF3 488B0425[3D0E0000]      	mov rax, qword [free_var_6]	; free var =
 27799 00014BFB 803805                  	cmp byte [rax], T_undefined
 27800 00014BFE 0F8470060000            	je L_error_fvar_undefined
 27801 00014C04 803804                  	cmp byte [rax], T_closure
 27802 00014C07 0F85EB060000            	jne L_error_non_closure
 27803 00014C0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27804 00014C10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27805 00014C13 483D[02000000]          	cmp rax, sob_boolean_false
 27806 00014C19 740F                    	je .L_if_else_0196
 27807 00014C1B 48B8-                   	mov rax, L_constants + 3485
 27807 00014C1D [9D0D000000000000] 
 27808 00014C25 E9C4000000              	jmp .L_if_end_0196
 27809                                  .L_if_else_0196:
 27810                                  	; Initiating tail-call optimization
 27811                                  	; preparing a non-tail-call
 27812                                  	; preparing a non-tail-call
 27813 00014C2A 48B8-                   	mov rax, L_constants + 2270
 27813 00014C2C [DE08000000000000] 
 27814 00014C34 50                      	push rax
 27815 00014C35 488B4530                	mov rax, PARAM(2)	; param n
 27816 00014C39 50                      	push rax
 27817 00014C3A 6A02                    	push 2	; arg count
 27818 00014C3C 488B0425[F90D0000]      	mov rax, qword [free_var_2]	; free var -
 27819 00014C44 803805                  	cmp byte [rax], T_undefined
 27820 00014C47 0F8427060000            	je L_error_fvar_undefined
 27821 00014C4D 803804                  	cmp byte [rax], T_closure
 27822 00014C50 0F85A2060000            	jne L_error_non_closure
 27823 00014C56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27824 00014C59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27825 00014C5C 50                      	push rax
 27826 00014C5D 488B4520                	mov rax, PARAM(0)	; param a
 27827 00014C61 50                      	push rax
 27828 00014C62 488B4528                	mov rax, PARAM(1)	; param b
 27829 00014C66 50                      	push rax
 27830 00014C67 6A03                    	push 3	; arg count
 27831 00014C69 488B0425[48140000]      	mov rax, qword [free_var_97]	; free var logarithm
 27832 00014C71 803805                  	cmp byte [rax], T_undefined
 27833 00014C74 0F84FA050000            	je L_error_fvar_undefined
 27834 00014C7A 803804                  	cmp byte [rax], T_closure
 27835 00014C7D 0F8575060000            	jne L_error_non_closure
 27836 00014C83 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27837 00014C86 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27838 00014C89 50                      	push rax
 27839 00014C8A 48B8-                   	mov rax, L_constants + 3485
 27839 00014C8C [9D0D000000000000] 
 27840 00014C94 50                      	push rax
 27841 00014C95 6A02                    	push 2	; Number of arguments
 27842 00014C97 488B0425[0A0E0000]      	mov rax, qword [free_var_3]	; free var /
 27843 00014C9F 803805                  	cmp byte [rax], T_undefined
 27844 00014CA2 0F84CC050000            	je L_error_fvar_undefined
 27845 00014CA8 803804                  	cmp byte [rax], T_closure
 27846 00014CAB 0F8547060000            	jne L_error_non_closure
 27847 00014CB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27848 00014CB4 FF7508                  	push qword [rbp + 8]
 27849 00014CB7 FF7500                  	push qword [rbp]
 27850 00014CBA 41BA06000000            	mov r10, 2 + 4
 27851 00014CC0 4C8B4518                	mov r8, COUNT
 27852 00014CC4 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27853 00014CC9 4C8D4DF8                	lea r9, [rbp - 8]
 27854                                  .L_tc_recycle_frame_loop_02ad:
 27855 00014CCD 4983FA00                	cmp r10, 0
 27856 00014CD1 7413                    	je .L_tc_recycle_frame_done_02ad
 27857 00014CD3 4D8B19                  	mov r11, qword [r9]
 27858 00014CD6 4D8918                  	mov qword [r8], r11
 27859 00014CD9 49FFCA                  	dec r10
 27860 00014CDC 4983E808                	sub r8, 8
 27861 00014CE0 4983E908                	sub r9, 8
 27862 00014CE4 EBE7                    	jmp .L_tc_recycle_frame_loop_02ad
 27863                                  .L_tc_recycle_frame_done_02ad:
 27864 00014CE6 498D6008                	lea rsp, [r8 + 8]
 27865 00014CEA 5D                      	pop rbp
 27866 00014CEB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27867                                  .L_if_end_0196:
 27868                                  .L_if_end_0197:
 27869                                  .L_if_end_0198:
 27870 00014CEE C9                      	leave
 27871 00014CEF C22800                  	ret AND_KILL_FRAME(3)
 27872                                  .L_lambda_simple_end_022d:	; new closure is in rax
 27873 00014CF2 48890425[48140000]      	mov qword [free_var_97], rax
 27874 00014CFA 48B8-                   	mov rax, sob_void
 27874 00014CFC [0000000000000000] 
 27875                                  
 27876 00014D04 4889C7                  	mov rdi, rax
 27877 00014D07 E8EA080000              	call print_sexpr_if_not_void
 27878 00014D0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27879 00014D11 E88B060000              	call malloc
 27880 00014D16 50                      	push rax
 27881 00014D17 BF00000000              	mov rdi, 8 * 0	; new rib
 27882 00014D1C E880060000              	call malloc
 27883 00014D21 50                      	push rax
 27884 00014D22 BF08000000              	mov rdi, 8 * 1	; extended env
 27885 00014D27 E875060000              	call malloc
 27886 00014D2C 488B7D10                	mov rdi, ENV
 27887 00014D30 BE00000000              	mov rsi, 0
 27888 00014D35 BA01000000              	mov rdx, 1
 27889                                  .L_lambda_simple_env_loop_022e:	; ext_env[i + 1] <-- env[i]
 27890 00014D3A 4883FE00                	cmp rsi, 0
 27891 00014D3E 7410                    	je .L_lambda_simple_env_end_022e
 27892 00014D40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27893 00014D44 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27894 00014D48 48FFC6                  	inc rsi
 27895 00014D4B 48FFC2                  	inc rdx
 27896 00014D4E EBEA                    	jmp .L_lambda_simple_env_loop_022e
 27897                                  .L_lambda_simple_env_end_022e:
 27898 00014D50 5B                      	pop rbx
 27899 00014D51 BE00000000              	mov rsi, 0
 27900                                  .L_lambda_simple_params_loop_022e:	; copy params
 27901 00014D56 4883FE00                	cmp rsi, 0
 27902 00014D5A 740E                    	je .L_lambda_simple_params_end_022e
 27903 00014D5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27904 00014D61 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27905 00014D65 48FFC6                  	inc rsi
 27906 00014D68 EBEC                    	jmp .L_lambda_simple_params_loop_022e
 27907                                  .L_lambda_simple_params_end_022e:
 27908 00014D6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27909 00014D6D 4889C3                  	mov rbx, rax
 27910 00014D70 58                      	pop rax
 27911 00014D71 C60004                  	mov byte [rax], T_closure
 27912 00014D74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27913 00014D78 48C74009[854D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022e
 27914 00014D80 E97F000000              	jmp .L_lambda_simple_end_022e
 27915                                  .L_lambda_simple_code_022e:	; lambda-simple body
 27916 00014D85 48837C241000            	cmp qword [rsp + 8 * 2], 0
 27917 00014D8B 740B                    	je .L_lambda_simple_arity_check_ok_022e
 27918 00014D8D FF742410                	push qword [rsp + 8 * 2]
 27919 00014D91 6A00                    	push 0
 27920 00014D93 E9C2050000              	jmp L_error_incorrect_arity_simple
 27921                                  .L_lambda_simple_arity_check_ok_022e:
 27922 00014D98 C8000000                	enter 0, 0
 27923                                  	; Initiating tail-call optimization
 27924 00014D9C 48B8-                   	mov rax, L_constants + 3510
 27924 00014D9E [B60D000000000000] 
 27925 00014DA6 50                      	push rax
 27926 00014DA7 6A01                    	push 1	; Number of arguments
 27927 00014DA9 488B0425[CD170000]      	mov rax, qword [free_var_150]	; free var write-char
 27928 00014DB1 803805                  	cmp byte [rax], T_undefined
 27929 00014DB4 0F84BA040000            	je L_error_fvar_undefined
 27930 00014DBA 803804                  	cmp byte [rax], T_closure
 27931 00014DBD 0F8535050000            	jne L_error_non_closure
 27932 00014DC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27933 00014DC6 FF7508                  	push qword [rbp + 8]
 27934 00014DC9 FF7500                  	push qword [rbp]
 27935 00014DCC 41BA05000000            	mov r10, 1 + 4
 27936 00014DD2 4C8B4518                	mov r8, COUNT
 27937 00014DD6 4E8D44C518              	lea r8, [rbp + 8 * r8 + 24]
 27938 00014DDB 4C8D4DF8                	lea r9, [rbp - 8]
 27939                                  .L_tc_recycle_frame_loop_02ae:
 27940 00014DDF 4983FA00                	cmp r10, 0
 27941 00014DE3 7413                    	je .L_tc_recycle_frame_done_02ae
 27942 00014DE5 4D8B19                  	mov r11, qword [r9]
 27943 00014DE8 4D8918                  	mov qword [r8], r11
 27944 00014DEB 49FFCA                  	dec r10
 27945 00014DEE 4983E808                	sub r8, 8
 27946 00014DF2 4983E908                	sub r9, 8
 27947 00014DF6 EBE7                    	jmp .L_tc_recycle_frame_loop_02ae
 27948                                  .L_tc_recycle_frame_done_02ae:
 27949 00014DF8 498D6008                	lea rsp, [r8 + 8]
 27950 00014DFC 5D                      	pop rbp
 27951 00014DFD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27952 00014E00 C9                      	leave
 27953 00014E01 C21000                  	ret AND_KILL_FRAME(0)
 27954                                  .L_lambda_simple_end_022e:	; new closure is in rax
 27955 00014E04 48890425[D0140000]      	mov qword [free_var_105], rax
 27956 00014E0C 48B8-                   	mov rax, sob_void
 27956 00014E0E [0000000000000000] 
 27957                                  
 27958 00014E16 4889C7                  	mov rdi, rax
 27959 00014E19 E8D8070000              	call print_sexpr_if_not_void
 27960 00014E1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27961 00014E23 E879050000              	call malloc
 27962 00014E28 50                      	push rax
 27963 00014E29 BF00000000              	mov rdi, 8 * 0	; new rib
 27964 00014E2E E86E050000              	call malloc
 27965 00014E33 50                      	push rax
 27966 00014E34 BF08000000              	mov rdi, 8 * 1	; extended env
 27967 00014E39 E863050000              	call malloc
 27968 00014E3E 488B7D10                	mov rdi, ENV
 27969 00014E42 BE00000000              	mov rsi, 0
 27970 00014E47 BA01000000              	mov rdx, 1
 27971                                  .L_lambda_simple_env_loop_022f:	; ext_env[i + 1] <-- env[i]
 27972 00014E4C 4883FE00                	cmp rsi, 0
 27973 00014E50 7410                    	je .L_lambda_simple_env_end_022f
 27974 00014E52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27975 00014E56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27976 00014E5A 48FFC6                  	inc rsi
 27977 00014E5D 48FFC2                  	inc rdx
 27978 00014E60 EBEA                    	jmp .L_lambda_simple_env_loop_022f
 27979                                  .L_lambda_simple_env_end_022f:
 27980 00014E62 5B                      	pop rbx
 27981 00014E63 BE00000000              	mov rsi, 0
 27982                                  .L_lambda_simple_params_loop_022f:	; copy params
 27983 00014E68 4883FE00                	cmp rsi, 0
 27984 00014E6C 740E                    	je .L_lambda_simple_params_end_022f
 27985 00014E6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27986 00014E73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27987 00014E77 48FFC6                  	inc rsi
 27988 00014E7A EBEC                    	jmp .L_lambda_simple_params_loop_022f
 27989                                  .L_lambda_simple_params_end_022f:
 27990 00014E7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27991 00014E7F 4889C3                  	mov rbx, rax
 27992 00014E82 58                      	pop rax
 27993 00014E83 C60004                  	mov byte [rax], T_closure
 27994 00014E86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27995 00014E8A 48C74009[944E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_022f
 27996 00014E92 EB25                    	jmp .L_lambda_simple_end_022f
 27997                                  .L_lambda_simple_code_022f:	; lambda-simple body
 27998 00014E94 48837C241000            	cmp qword [rsp + 8 * 2], 0
 27999 00014E9A 740B                    	je .L_lambda_simple_arity_check_ok_022f
 28000 00014E9C FF742410                	push qword [rsp + 8 * 2]
 28001 00014EA0 6A00                    	push 0
 28002 00014EA2 E9B3040000              	jmp L_error_incorrect_arity_simple
 28003                                  .L_lambda_simple_arity_check_ok_022f:
 28004 00014EA7 C8000000                	enter 0, 0
 28005 00014EAB 48B8-                   	mov rax, L_constants + 0
 28005 00014EAD [0000000000000000] 
 28006 00014EB5 C9                      	leave
 28007 00014EB6 C21000                  	ret AND_KILL_FRAME(0)
 28008                                  .L_lambda_simple_end_022f:	; new closure is in rax
 28009 00014EB9 48890425[BC170000]      	mov qword [free_var_149], rax
 28010 00014EC1 48B8-                   	mov rax, sob_void
 28010 00014EC3 [0000000000000000] 
 28011                                  
 28012 00014ECB 4889C7                  	mov rdi, rax
 28013 00014ECE E823070000              	call print_sexpr_if_not_void
 28014                                  	; preparing a non-tail-call
 28015 00014ED3 48B8-                   	mov rax, L_constants + 3534
 28015 00014ED5 [CE0D000000000000] 
 28016 00014EDD 50                      	push rax
 28017 00014EDE 48B8-                   	mov rax, L_constants + 3525
 28017 00014EE0 [C50D000000000000] 
 28018 00014EE8 50                      	push rax
 28019                                  	; preparing a non-tail-call
 28020 00014EE9 48B8-                   	mov rax, L_constants + 3190
 28020 00014EEB [760C000000000000] 
 28021 00014EF3 50                      	push rax
 28022 00014EF4 48B8-                   	mov rax, L_constants + 2270
 28022 00014EF6 [DE08000000000000] 
 28023 00014EFE 50                      	push rax
 28024 00014EFF 6A02                    	push 2	; arg count
 28025 00014F01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28026 00014F06 E896040000              	call malloc
 28027 00014F0B 50                      	push rax
 28028 00014F0C BF00000000              	mov rdi, 8 * 0	; new rib
 28029 00014F11 E88B040000              	call malloc
 28030 00014F16 50                      	push rax
 28031 00014F17 BF08000000              	mov rdi, 8 * 1	; extended env
 28032 00014F1C E880040000              	call malloc
 28033 00014F21 488B7D10                	mov rdi, ENV
 28034 00014F25 BE00000000              	mov rsi, 0
 28035 00014F2A BA01000000              	mov rdx, 1
 28036                                  .L_lambda_opt_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 28037 00014F2F 4883FE00                	cmp rsi, 0
 28038 00014F33 7410                    	je .L_lambda_opt_env_end_004b
 28039 00014F35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28040 00014F39 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28041 00014F3D 48FFC6                  	inc rsi
 28042 00014F40 48FFC2                  	inc rdx
 28043 00014F43 EBEA                    	jmp .L_lambda_opt_env_loop_004b
 28044                                  .L_lambda_opt_env_end_004b:
 28045 00014F45 5B                      	pop rbx
 28046 00014F46 BE00000000              	mov rsi, 0
 28047                                  .L_lambda_opt_params_loop_004b:	; copy params
 28048 00014F4B 4883FE00                	cmp rsi, 0
 28049 00014F4F 740E                    	je .L_lambda_opt_params_end_004b
 28050 00014F51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28051 00014F56 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28052 00014F5A 48FFC6                  	inc rsi
 28053 00014F5D EBEC                    	jmp .L_lambda_opt_params_loop_004b
 28054                                  .L_lambda_opt_params_end_004b:
 28055 00014F5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28056 00014F62 4889C3                  	mov rbx, rax
 28057 00014F65 58                      	pop rax
 28058 00014F66 C60004                  	mov byte [rax], T_closure
 28059 00014F69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28060 00014F6D 48C74009[7A4F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_004b
 28061 00014F75 E911010000              	jmp .L_lambda_opt_end_004b
 28062                                  .L_lambda_opt_code_004b:
 28063 00014F7A 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 28064 00014F7F 4983FA00                	cmp r10, 0         ; Compare r10 (argument count) with required params
 28065 00014F83 7407                    	je .L_lambda_opt_arity_check_exact_004b	; Jump if arity matches
 28066 00014F85 7F4C                    	jg .L_lambda_opt_arity_check_more_004b	; Jump if more arguments passed
 28067 00014F87 E9E2030000              	jmp L_error_incorrect_arity_opt
 28068                                  .L_lambda_opt_arity_check_exact_004b:
 28069 00014F8C 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 28070 00014F8F 4983C603                	add r14, 3 ; add 3 first stack values
 28071 00014F93 41BF00000000            	mov r15, 0 ; r15 = index
 28072 00014F99 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 28073 00014F9D 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 28074 00014FA5 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_004b
 28075                                  .L_lambda_opt_stack_shrink_loop_004b:
 28076 00014FA7 4983FE00                	cmp r14, 0
 28077 00014FAB 7E11                    	jle .L_make_lambda_opt_exact_finish_004b
 28078 00014FAD 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 28079 00014FB2 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 28080 00014FB6 49FFCE                  	dec r14 ; next loop value
 28081 00014FB9 49FFC7                  	inc r15 ; update i
 28082 00014FBC EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_004b
 28083                                  .L_make_lambda_opt_exact_finish_004b:
 28084 00014FBE 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 28085 00014FC6 49FFC2                  	inc r10
 28086 00014FC9 4C89542410              	mov qword [rsp + 8 * 2], r10
 28087 00014FCE E9AC000000              	jmp .L_lambda_opt_stack_adjusted_004b
 28088                                  .L_lambda_opt_arity_check_more_004b:
 28089 00014FD3 4D89D6                  	mov r14, r10 ; r14 = num args
 28090 00014FD6 4D89D7                  	mov r15, r10 ; r15 = num args
 28091 00014FD9 41B900000000            	mov r9, 0; r9 = number of params 
 28092 00014FDF 4D29CE                  	sub r14, r9 ; r14 = extra args
 28093 00014FE2 4D01F1                  	add r9, r14 ; r9 = num args
 28094 00014FE5 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 28094 00014FE7 [0100000000000000] 
 28095 00014FEF EB00                    	jmp .L_make_lambda_opt_arg_list_004b
 28096                                  .L_make_lambda_opt_arg_list_004b:
 28097 00014FF1 4983FE00                	cmp r14, 0
 28098 00014FF5 7E25                    	jle .L_make_lambda_opt_stack_fixed_004b
 28099 00014FF7 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 28100 00014FFC BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 28101 00015001 E89B030000              	call malloc                         ; Allocate memory, result in rax
 28102 00015006 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 28103 00015009 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 28104 0001500D 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 28105 00015011 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 28106 00015014 49FFC9                  	dec r9                              ; args index minus 1
 28107 00015017 49FFCE                  	dec r14                             ; next iteration
 28108 0001501A EBD5                    	jmp .L_make_lambda_opt_arg_list_004b
 28109                                  .L_make_lambda_opt_stack_fixed_004b:
 28110 0001501C 4D89FE                  	mov r14, r15 ; r14 = num args
 28111 0001501F 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 28112 00015022 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 28113 00015026 4D89C1                  	mov r9, r8
 28114 00015029 41BA00000000            	mov r10, 0; r10 = num of params
 28115 0001502F 4D29D6                  	sub r14, r10 ; r14 = extra args
 28116 00015032 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 28117 00015035 49FFCE                  	dec r14 ; how much we need to change stack wise?
 28118 00015038 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 28119 0001503D 4D89CC                  	mov r12, r9
 28120 00015040 4D29F4                  	sub r12, r14
 28121 00015043 49FFCC                  	dec r12
 28122 00015046 49FFCC                  	dec r12
 28123 00015049 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_004b
 28124                                  .L_lambda_opt_stack_shrink_loop_more_004b:
 28125 0001504B 4983F800                	cmp r8, 0
 28126 0001504F 7E16                    	jle .L_make_lambda_opt_more_finish_004b
 28127 00015051 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 28128 00015055 4D01F4                  	add r12, r14
 28129 00015058 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 28130 0001505C 49FFC8                  	dec r8 ; next iteration
 28131 0001505F 4D29F4                  	sub r12, r14 ; next iteration
 28132 00015062 49FFCC                  	dec r12 ; next iteration
 28133 00015065 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_004b
 28134                                  .L_make_lambda_opt_more_finish_004b:
 28135 00015067 41BA00000000            	mov r10, 0
 28136 0001506D 4AC744F41001000000      	mov qword [rsp + 8 * (r14 + 2)], 1
 28137 00015076 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 28138 0001507A 4C01F4                  	add rsp, r14  ; Add to rsp
 28139 0001507D EB00                    	jmp .L_lambda_opt_stack_adjusted_004b
 28140                                  .L_lambda_opt_stack_adjusted_004b:
 28141 0001507F C8000000                	enter 0, 0
 28142 00015083 488B4520                	mov rax, PARAM(0)	; param d
 28143 00015087 C9                      	leave
 28144 00015088 C21800                  	ret AND_KILL_FRAME(1)
 28145                                  .L_lambda_opt_end_004b:	; new closure is in rax
 28146 0001508B 803804                  	cmp byte [rax], T_closure
 28147 0001508E 0F8564020000            	jne L_error_non_closure
 28148 00015094 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28149 00015097 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28150 0001509A 50                      	push rax
 28151 0001509B 6A03                    	push 3	; arg count
 28152 0001509D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28153 000150A2 E8FA020000              	call malloc
 28154 000150A7 50                      	push rax
 28155 000150A8 BF00000000              	mov rdi, 8 * 0	; new rib
 28156 000150AD E8EF020000              	call malloc
 28157 000150B2 50                      	push rax
 28158 000150B3 BF08000000              	mov rdi, 8 * 1	; extended env
 28159 000150B8 E8E4020000              	call malloc
 28160 000150BD 488B7D10                	mov rdi, ENV
 28161 000150C1 BE00000000              	mov rsi, 0
 28162 000150C6 BA01000000              	mov rdx, 1
 28163                                  .L_lambda_opt_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 28164 000150CB 4883FE00                	cmp rsi, 0
 28165 000150CF 7410                    	je .L_lambda_opt_env_end_004c
 28166 000150D1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28167 000150D5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28168 000150D9 48FFC6                  	inc rsi
 28169 000150DC 48FFC2                  	inc rdx
 28170 000150DF EBEA                    	jmp .L_lambda_opt_env_loop_004c
 28171                                  .L_lambda_opt_env_end_004c:
 28172 000150E1 5B                      	pop rbx
 28173 000150E2 BE00000000              	mov rsi, 0
 28174                                  .L_lambda_opt_params_loop_004c:	; copy params
 28175 000150E7 4883FE00                	cmp rsi, 0
 28176 000150EB 740E                    	je .L_lambda_opt_params_end_004c
 28177 000150ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28178 000150F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28179 000150F6 48FFC6                  	inc rsi
 28180 000150F9 EBEC                    	jmp .L_lambda_opt_params_loop_004c
 28181                                  .L_lambda_opt_params_end_004c:
 28182 000150FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28183 000150FE 4889C3                  	mov rbx, rax
 28184 00015101 58                      	pop rax
 28185 00015102 C60004                  	mov byte [rax], T_closure
 28186 00015105 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28187 00015109 48C74009[16510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_004c
 28188 00015111 E911010000              	jmp .L_lambda_opt_end_004c
 28189                                  .L_lambda_opt_code_004c:
 28190 00015116 4C8B542410              	mov r10, qword [rsp + 8 * 2]         ; r10 = number of args 
 28191 0001511B 4983FA01                	cmp r10, 1         ; Compare r10 (argument count) with required params
 28192 0001511F 7407                    	je .L_lambda_opt_arity_check_exact_004c	; Jump if arity matches
 28193 00015121 7F4C                    	jg .L_lambda_opt_arity_check_more_004c	; Jump if more arguments passed
 28194 00015123 E946020000              	jmp L_error_incorrect_arity_opt
 28195                                  .L_lambda_opt_arity_check_exact_004c:
 28196 00015128 4D89D6                  	mov r14, r10 ; r14 = num of iterations (args)
 28197 0001512B 4983C603                	add r14, 3 ; add 3 first stack values
 28198 0001512F 41BF00000000            	mov r15, 0 ; r15 = index
 28199 00015135 4883EC08                	sub rsp, 8 ; Allocate one extra space on the stack
 28200 00015139 48C70424[01000000]      	mov qword [rsp], sob_nil ; Initialize the new space with sob_nil
 28201 00015141 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_004c
 28202                                  .L_lambda_opt_stack_shrink_loop_004c:
 28203 00015143 4983FE00                	cmp r14, 0
 28204 00015147 7E11                    	jle .L_make_lambda_opt_exact_finish_004c
 28205 00015149 4E8B5CFC08              	mov r11, qword [rsp + 8 * (r15 + 1)] ; r11 = value of param
 28206 0001514E 4E891CFC                	mov qword [rsp + 8 * r15], r11 ; move param to the right place
 28207 00015152 49FFCE                  	dec r14 ; next loop value
 28208 00015155 49FFC7                  	inc r15 ; update i
 28209 00015158 EBE9                    	jmp .L_lambda_opt_stack_shrink_loop_004c
 28210                                  .L_make_lambda_opt_exact_finish_004c:
 28211 0001515A 4AC704FC[01000000]      	mov qword [rsp + 8 * r15], sob_nil ; Add sob_nil to the stack at the end
 28212 00015162 49FFC2                  	inc r10
 28213 00015165 4C89542410              	mov qword [rsp + 8 * 2], r10
 28214 0001516A E9AC000000              	jmp .L_lambda_opt_stack_adjusted_004c
 28215                                  .L_lambda_opt_arity_check_more_004c:
 28216 0001516F 4D89D6                  	mov r14, r10 ; r14 = num args
 28217 00015172 4D89D7                  	mov r15, r10 ; r15 = num args
 28218 00015175 41B901000000            	mov r9, 1; r9 = number of params 
 28219 0001517B 4D29CE                  	sub r14, r9 ; r14 = extra args
 28220 0001517E 4D01F1                  	add r9, r14 ; r9 = num args
 28221 00015181 48BA-                   	mov rdx, sob_nil ; rdx = point to our list
 28221 00015183 [0100000000000000] 
 28222 0001518B EB00                    	jmp .L_make_lambda_opt_arg_list_004c
 28223                                  .L_make_lambda_opt_arg_list_004c:
 28224 0001518D 4983FE00                	cmp r14, 0
 28225 00015191 7E25                    	jle .L_make_lambda_opt_stack_fixed_004c
 28226 00015193 4E8B54CC10              	mov r10, qword [rsp + 8 * (r9 + 2)] ; r10 = Load the last arg
 28227 00015198 BF11000000              	mov rdi, (1 + 8 + 8)                ; r10 = Allocate memory for the new pair (T_PAIR + CAR + CDR)
 28228 0001519D E8FF010000              	call malloc                         ; Allocate memory, result in rax
 28229 000151A2 C60021                  	mov byte [rax], T_pair              ; Mark as a pair
 28230 000151A5 4C895001                	mov qword [rax + 1], r10         ; CAR: current argument
 28231 000151A9 48895009                	mov qword [rax + 1 + 8], rdx           ; CDR: current list
 28232 000151AD 4889C2                  	mov rdx, rax                        ; rdx = Update rdx to point to the new pair
 28233 000151B0 49FFC9                  	dec r9                              ; args index minus 1
 28234 000151B3 49FFCE                  	dec r14                             ; next iteration
 28235 000151B6 EBD5                    	jmp .L_make_lambda_opt_arg_list_004c
 28236                                  .L_make_lambda_opt_stack_fixed_004c:
 28237 000151B8 4D89FE                  	mov r14, r15 ; r14 = num args
 28238 000151BB 4D89F8                  	mov r8, r15 ; r14 = num args and num of iterations 
 28239 000151BE 4983C003                	add r8, 3 ; add the first 3 things in the stuff to num of iterations
 28240 000151C2 4D89C1                  	mov r9, r8
 28241 000151C5 41BA01000000            	mov r10, 1; r10 = num of params
 28242 000151CB 4D29D6                  	sub r14, r10 ; r14 = extra args
 28243 000151CE 4D29F0                  	sub r8, r14 ; r8 = number of iterations (check this)
 28244 000151D1 49FFCE                  	dec r14 ; how much we need to change stack wise?
 28245 000151D4 4A8954FC10              	mov qword [rsp + 8 * (r15 + 2)], rdx ; Add list to the right place
 28246 000151D9 4D89CC                  	mov r12, r9
 28247 000151DC 4D29F4                  	sub r12, r14
 28248 000151DF 49FFCC                  	dec r12
 28249 000151E2 49FFCC                  	dec r12
 28250 000151E5 EB00                    	jmp .L_lambda_opt_stack_shrink_loop_more_004c
 28251                                  .L_lambda_opt_stack_shrink_loop_more_004c:
 28252 000151E7 4983F800                	cmp r8, 0
 28253 000151EB 7E16                    	jle .L_make_lambda_opt_more_finish_004c
 28254 000151ED 4E8B1CE4                	mov r11, qword [rsp + 8 * r12] 
 28255 000151F1 4D01F4                  	add r12, r14
 28256 000151F4 4E891CE4                	mov qword [rsp + 8 * r12], r11 
 28257 000151F8 49FFC8                  	dec r8 ; next iteration
 28258 000151FB 4D29F4                  	sub r12, r14 ; next iteration
 28259 000151FE 49FFCC                  	dec r12 ; next iteration
 28260 00015201 EBE4                    	jmp .L_lambda_opt_stack_shrink_loop_more_004c
 28261                                  .L_make_lambda_opt_more_finish_004c:
 28262 00015203 41BA01000000            	mov r10, 1
 28263 00015209 4AC744F41002000000      	mov qword [rsp + 8 * (r14 + 2)], 2
 28264 00015212 49C1E603                	shl r14, 3  ; Multiply r14 by 8
 28265 00015216 4C01F4                  	add rsp, r14  ; Add to rsp
 28266 00015219 EB00                    	jmp .L_lambda_opt_stack_adjusted_004c
 28267                                  .L_lambda_opt_stack_adjusted_004c:
 28268 0001521B C8000000                	enter 0, 0
 28269 0001521F 488B4528                	mov rax, PARAM(1)	; param b
 28270 00015223 C9                      	leave
 28271 00015224 C22000                  	ret AND_KILL_FRAME(2)
 28272                                  .L_lambda_opt_end_004c:	; new closure is in rax
 28273 00015227 803804                  	cmp byte [rax], T_closure
 28274 0001522A 0F85C8000000            	jne L_error_non_closure
 28275 00015230 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28276 00015233 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28277                                  Lend:
 28278 00015236 4889C7                  	mov rdi, rax
 28279 00015239 E8B8030000              	call print_sexpr_if_not_void
 28280 0001523E 48BF-                   mov rdi, fmt_memory_usage
 28280 00015240 [8718000000000000] 
 28281 00015248 488B3425[0D190000]              mov rsi, qword [top_of_memory]
 28282 00015250 4881EE[00000000]                sub rsi, memory
 28283 00015257 B800000000                      mov rax, 0
 28284                                          ENTER
    44 0001525C C8000000            <1>  enter 0, 0
    45 00015260 4883E4F0            <1>  and rsp, ~15
 28285 00015264 E8(00000000)                    call printf
 28286                                          LEAVE
    49 00015269 C9                  <1>  leave
 28287 0001526A B800000000                      mov rax, 0
 28288 0001526F E8(00000000)                    call exit
 28289                                  
 28290                                  L_error_fvar_undefined:
 28291 00015274 50                              push rax
 28292 00015275 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 28293 0001527D 48BE-                           mov rsi, fmt_undefined_free_var_1
 28293 0001527F [EF17000000000000] 
 28294 00015287 B800000000                      mov rax, 0
 28295                                          ENTER
    44 0001528C C8000000            <1>  enter 0, 0
    45 00015290 4883E4F0            <1>  and rsp, ~15
 28296 00015294 E8(00000000)                    call fprintf
 28297                                          LEAVE
    49 00015299 C9                  <1>  leave
 28298 0001529A 58                              pop rax
 28299 0001529B 488B4001                        mov rax, qword [rax + 1] ; string
 28300 0001529F 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 28301 000152A3 BE01000000                      mov rsi, 1               ; sizeof(char)
 28302 000152A8 488B5001                        mov rdx, qword [rax + 1] ; string-length
 28303 000152AC 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 28304 000152B4 B800000000                      mov rax, 0
 28305                                          ENTER
    44 000152B9 C8000000            <1>  enter 0, 0
    45 000152BD 4883E4F0            <1>  and rsp, ~15
 28306 000152C1 E8(00000000)                    call fwrite
 28307                                          LEAVE
    49 000152C6 C9                  <1>  leave
 28308 000152C7 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 28309 000152CF 48BE-                           mov rsi, fmt_undefined_free_var_2
 28309 000152D1 [0618000000000000] 
 28310 000152D9 B800000000                      mov rax, 0
 28311                                          ENTER
    44 000152DE C8000000            <1>  enter 0, 0
    45 000152E2 4883E4F0            <1>  and rsp, ~15
 28312 000152E6 E8(00000000)                    call fprintf
 28313                                          LEAVE
    49 000152EB C9                  <1>  leave
 28314 000152EC 48C7C0F6FFFFFF                  mov rax, -10
 28315 000152F3 E8(00000000)                    call exit
 28316                                  
 28317                                  L_error_non_closure:
 28318 000152F8 488B3C25[00000000]              mov rdi, qword [stderr]
 28319 00015300 48BE-                           mov rsi, fmt_non_closure
 28319 00015302 [BD18000000000000] 
 28320 0001530A B800000000                      mov rax, 0
 28321                                          ENTER
    44 0001530F C8000000            <1>  enter 0, 0
    45 00015313 4883E4F0            <1>  and rsp, ~15
 28322 00015317 E8(00000000)                    call fprintf
 28323                                          LEAVE
    49 0001531C C9                  <1>  leave
 28324 0001531D 48C7C0FEFFFFFF                  mov rax, -2
 28325 00015324 E8(00000000)                    call exit
 28326                                  
 28327                                  L_error_improper_list:
 28328 00015329 488B3C25[00000000]      	mov rdi, qword [stderr]
 28329 00015331 48BE-                   	mov rsi, fmt_error_improper_list
 28329 00015333 [E518000000000000] 
 28330 0001533B B800000000              	mov rax, 0
 28331                                          ENTER
    44 00015340 C8000000            <1>  enter 0, 0
    45 00015344 4883E4F0            <1>  and rsp, ~15
 28332 00015348 E8(00000000)            	call fprintf
 28333                                          LEAVE
    49 0001534D C9                  <1>  leave
 28334 0001534E 48C7C0F9FFFFFF          	mov rax, -7
 28335 00015355 E8(00000000)            	call exit
 28336                                  
 28337                                  L_error_incorrect_arity_simple:
 28338 0001535A 488B3C25[00000000]              mov rdi, qword [stderr]
 28339 00015362 48BE-                           mov rsi, fmt_incorrect_arity_simple
 28339 00015364 [2818000000000000] 
 28340 0001536C EB12                            jmp L_error_incorrect_arity_common
 28341                                  L_error_incorrect_arity_opt:
 28342 0001536E 488B3C25[00000000]              mov rdi, qword [stderr]
 28343 00015376 48BE-                           mov rsi, fmt_incorrect_arity_opt
 28343 00015378 [5318000000000000] 
 28344                                  L_error_incorrect_arity_common:
 28345 00015380 5A                              pop rdx
 28346 00015381 59                              pop rcx
 28347 00015382 B800000000                      mov rax, 0
 28348                                          ENTER
    44 00015387 C8000000            <1>  enter 0, 0
    45 0001538B 4883E4F0            <1>  and rsp, ~15
 28349 0001538F E8(00000000)                    call fprintf
 28350                                          LEAVE
    49 00015394 C9                  <1>  leave
 28351 00015395 48C7C0FAFFFFFF                  mov rax, -6
 28352 0001539C E8(00000000)                    call exit
 28353                                  
 28354                                  section .data
 28355                                  fmt_undefined_free_var_1:
 28356 000017EF 212121205468652066-             db `!!! The free variable \0`
 28356 000017F8 726565207661726961-
 28356 00001801 626C652000         
 28357                                  fmt_undefined_free_var_2:
 28358 00001806 207761732075736564-             db ` was used before it was defined.\n\0`
 28358 0000180F 206265666F72652069-
 28358 00001818 742077617320646566-
 28358 00001821 696E65642E0A00     
 28359                                  fmt_incorrect_arity_simple:
 28360 00001828 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 28360 00001831 74656420256C642061-
 28360 0000183A 7267756D656E74732C-
 28360 00001843 206275742067697665-
 28360 0000184C 6E20256C640A00     
 28361                                  fmt_incorrect_arity_opt:
 28362 00001853 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 28362 0000185C 746564206174206C65-
 28362 00001865 61737420256C642061-
 28362 0000186E 7267756D656E74732C-
 28362 00001877 206275742067697665-
 28362 00001880 6E20256C640A00     
 28363                                  fmt_memory_usage:
 28364 00001887 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 28364 00001890 20256C642062797465-
 28364 00001899 73206F662064796E61-
 28364 000018A2 6D6963616C6C792D61-
 28364 000018AB 6C6C6F636174656420-
 28364 000018B4 6D656D6F72790A0A00 
 28365                                  fmt_non_closure:
 28366 000018BD 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 28366 000018C6 7074696E6720746F20-
 28366 000018CF 6170706C792061206E-
 28366 000018D8 6F6E2D636C6F737572-
 28366 000018E1 65210A00           
 28367                                  fmt_error_improper_list:
 28368 000018E5 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 28368 000018EE 7267756D656E742069-
 28368 000018F7 73206E6F7420612070-
 28368 00001900 726F706572206C6973-
 28368 00001909 74210A00           
 28369                                  
 28370                                  section .bss
 28371                                  memory:
 28372 00000000 <res 40000000h>         	resb gbytes(1)
 28373                                  
 28374                                  section .data
 28375                                  top_of_memory:
 28376 0000190D [0000000000000000]              dq memory
 28377                                  
 28378                                  section .text
 28379                                  malloc:
 28380 000153A1 488B0425[0D190000]              mov rax, qword [top_of_memory]
 28381 000153A9 48013C25[0D190000]              add qword [top_of_memory], rdi
 28382 000153B1 C3                              ret
 28383                                  
 28384                                  L_code_ptr_return:
 28385 000153B2 48837C241002            	cmp qword [rsp + 8*2], 2
 28386 000153B8 0F85EF1C0000            	jne L_error_arg_count_2
 28387 000153BE 488B4C2418              	mov rcx, qword [rsp + 8*3]
 28388                                  	assert_integer(rcx)
    53 000153C3 803911              <1>  cmp byte [%1], %2
    54 000153C6 0F85801D0000        <1>  jne L_error_incorrect_type
 28389 000153CC 488B4901                	mov rcx, qword [rcx + 1]
 28390 000153D0 4883F900                	cmp rcx, 0
 28391 000153D4 0F8C071C0000            	jl L_error_integer_range
 28392 000153DA 488B442420              	mov rax, qword [rsp + 8*4]
 28393                                  .L0:
 28394 000153DF 4883F900                        cmp rcx, 0
 28395 000153E3 7409                            je .L1
 28396 000153E5 488B6D00                	mov rbp, qword [rbp]
 28397 000153E9 48FFC9                  	dec rcx
 28398 000153EC 7FF1                    	jg .L0
 28399                                  .L1:
 28400 000153EE 4889EC                  	mov rsp, rbp
 28401 000153F1 5D                      	pop rbp
 28402 000153F2 5B                              pop rbx
 28403 000153F3 488B4C2408                      mov rcx, qword [rsp + 8*1]
 28404 000153F8 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 28405 000153FD FFE3                    	jmp rbx
 28406                                  
 28407                                  L_code_ptr_make_list:
 28408 000153FF C8000000                	enter 0, 0
 28409 00015403 48837D1801                      cmp COUNT, 1
 28410 00015408 740C                            je .L0
 28411 0001540A 48837D1802                      cmp COUNT, 2
 28412 0001540F 7411                            je .L1
 28413 00015411 E9CC1C0000                      jmp L_error_arg_count_12
 28414                                  .L0:
 28415 00015416 49B9-                           mov r9, sob_void
 28415 00015418 [0000000000000000] 
 28416 00015420 EB04                            jmp .L2
 28417                                  .L1:
 28418 00015422 4C8B4D28                        mov r9, PARAM(1)
 28419                                  .L2:
 28420 00015426 488B4D20                        mov rcx, PARAM(0)
 28421                                          assert_integer(rcx)
    53 0001542A 803911              <1>  cmp byte [%1], %2
    54 0001542D 0F85191D0000        <1>  jne L_error_incorrect_type
 28422 00015433 488B4901                        mov rcx, qword [rcx + 1]
 28423 00015437 4883F900                        cmp rcx, 0
 28424 0001543B 0F8CD11B0000                    jl L_error_arg_negative
 28425 00015441 49B8-                           mov r8, sob_nil
 28425 00015443 [0100000000000000] 
 28426                                  .L3:
 28427 0001544B 4883F900                        cmp rcx, 0
 28428 0001544F 7E1D                            jle .L4
 28429 00015451 BF11000000                      mov rdi, 1 + 8 + 8
 28430 00015456 E846FFFFFF                      call malloc
 28431 0001545B C60021                          mov byte [rax], T_pair
 28432 0001545E 4C894801                        mov qword [rax + 1], r9
 28433 00015462 4C894009                        mov qword [rax + 1 + 8], r8
 28434 00015466 4989C0                          mov r8, rax
 28435 00015469 48FFC9                          dec rcx
 28436 0001546C EBDD                            jmp .L3
 28437                                  .L4:
 28438 0001546E 4C89C0                          mov rax, r8
 28439 00015471 48837D1802                      cmp COUNT, 2
 28440 00015476 7404                            je .L5
 28441 00015478 C9                              leave
 28442 00015479 C21800                          ret AND_KILL_FRAME(1)
 28443                                  .L5:
 28444 0001547C C9                      	leave
 28445 0001547D C22000                  	ret AND_KILL_FRAME(2)
 28446                                  
 28447                                  L_code_ptr_is_primitive:
 28448 00015480 C8000000                	enter 0, 0
 28449 00015484 48837D1801              	cmp COUNT, 1
 28450 00015489 0F85E91B0000            	jne L_error_arg_count_1
 28451 0001548F 488B4520                	mov rax, PARAM(0)
 28452                                  	assert_closure(rax)
    53 00015493 803804              <1>  cmp byte [%1], %2
    54 00015496 0F85B01C0000        <1>  jne L_error_incorrect_type
 28453 0001549C 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 28454 000154A1 750C                    	jne .L_false
 28455 000154A3 48B8-                   	mov rax, sob_boolean_true
 28455 000154A5 [0300000000000000] 
 28456 000154AD EB0A                    	jmp .L_end
 28457                                  .L_false:
 28458 000154AF 48B8-                   	mov rax, sob_boolean_false
 28458 000154B1 [0200000000000000] 
 28459                                  .L_end:
 28460 000154B9 C9                      	leave
 28461 000154BA C21800                  	ret AND_KILL_FRAME(1)
 28462                                  
 28463                                  L_code_ptr_length:
 28464 000154BD C8000000                	enter 0, 0
 28465 000154C1 48837D1801              	cmp COUNT, 1
 28466 000154C6 0F85AC1B0000            	jne L_error_arg_count_1
 28467 000154CC 488B5D20                	mov rbx, PARAM(0)
 28468 000154D0 BF00000000              	mov rdi, 0
 28469                                  .L:
 28470 000154D5 803B01                  	cmp byte [rbx], T_nil
 28471 000154D8 7412                    	je .L_end
 28472                                  	assert_pair(rbx)
    53 000154DA 803B21              <1>  cmp byte [%1], %2
    54 000154DD 0F85691C0000        <1>  jne L_error_incorrect_type
 28473 000154E3 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 28474 000154E7 48FFC7                  	inc rdi
 28475 000154EA EBE9                    	jmp .L
 28476                                  .L_end:
 28477 000154EC E8D61A0000              	call make_integer
 28478 000154F1 C9                      	leave
 28479 000154F2 C21800                  	ret AND_KILL_FRAME(1)
 28480                                  
 28481                                  L_code_ptr_break:
 28482 000154F5 48837C241000                    cmp qword [rsp + 8 * 2], 0
 28483 000154FB 0F85421B0000                    jne L_error_arg_count_0
 28484 00015501 CC                              int3
 28485 00015502 48B8-                           mov rax, sob_void
 28485 00015504 [0000000000000000] 
 28486 0001550C C21000                          ret AND_KILL_FRAME(0)        
 28487                                  
 28488                                  L_code_ptr_frame:
 28489 0001550F C8000000                        enter 0, 0
 28490 00015513 48837D1800                      cmp COUNT, 0
 28491 00015518 0F85251B0000                    jne L_error_arg_count_0
 28492                                  
 28493 0001551E 48BF-                           mov rdi, fmt_frame
 28493 00015520 [1519000000000000] 
 28494 00015528 488B7500                        mov rsi, qword [rbp]    ; old rbp
 28495 0001552C 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 28496 00015530 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 28497 00015534 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 28498 00015538 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 28499 0001553C 6A00                            push 0
 28500 0001553E 4151                            push r9
 28501 00015540 4150                            push r8                   ; we'll use it when printing the params
 28502 00015542 B800000000                      mov rax, 0
 28503                                          
 28504                                          ENTER
    44 00015547 C8000000            <1>  enter 0, 0
    45 0001554B 4883E4F0            <1>  and rsp, ~15
 28505 0001554F E8(00000000)                    call printf
 28506                                          LEAVE
    49 00015554 C9                  <1>  leave
 28507                                  
 28508                                  .L:
 28509 00015555 488B0C24                        mov rcx, qword [rsp]
 28510 00015559 4883F900                        cmp rcx, 0
 28511 0001555D 7467                            je .L_out
 28512 0001555F 48BF-                           mov rdi, fmt_frame_param_prefix
 28512 00015561 [4E19000000000000] 
 28513 00015569 488B742410                      mov rsi, qword [rsp + 8*2]
 28514 0001556E B800000000                      mov rax, 0
 28515                                          
 28516                                          ENTER
    44 00015573 C8000000            <1>  enter 0, 0
    45 00015577 4883E4F0            <1>  and rsp, ~15
 28517 0001557B E8(00000000)                    call printf
 28518                                          LEAVE
    49 00015580 C9                  <1>  leave
 28519                                  
 28520 00015581 488B0C24                        mov rcx, qword [rsp]
 28521 00015585 48FFC9                          dec rcx
 28522 00015588 48890C24                        mov qword [rsp], rcx    ; dec arg count
 28523 0001558C 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 28524 00015591 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 28525 00015596 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 28526 0001559A 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 28527 0001559F 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 28528 000155A2 E87B000000                      call print_sexpr
 28529 000155A7 48BF-                           mov rdi, fmt_newline
 28529 000155A9 [7A19000000000000] 
 28530 000155B1 B800000000                      mov rax, 0
 28531                                          ENTER
    44 000155B6 C8000000            <1>  enter 0, 0
    45 000155BA 4883E4F0            <1>  and rsp, ~15
 28532 000155BE E8(00000000)                    call printf
 28533                                          LEAVE
    49 000155C3 C9                  <1>  leave
 28534 000155C4 EB8F                            jmp .L
 28535                                  .L_out:
 28536 000155C6 48BF-                           mov rdi, fmt_frame_continue
 28536 000155C8 [5F19000000000000] 
 28537 000155D0 B800000000                      mov rax, 0
 28538                                          ENTER
    44 000155D5 C8000000            <1>  enter 0, 0
    45 000155D9 4883E4F0            <1>  and rsp, ~15
 28539 000155DD E8(00000000)                    call printf
 28540 000155E2 E8(00000000)                    call getchar
 28541                                          LEAVE
    49 000155E7 C9                  <1>  leave
 28542                                          
 28543 000155E8 48B8-                           mov rax, sob_void
 28543 000155EA [0000000000000000] 
 28544 000155F2 C9                              leave
 28545 000155F3 C21000                          ret AND_KILL_FRAME(0)
 28546                                          
 28547                                  print_sexpr_if_not_void:
 28548 000155F6 4881FF[00000000]        	cmp rdi, sob_void
 28549 000155FD 7422                    	je .done
 28550 000155FF E81E000000              	call print_sexpr
 28551 00015604 48BF-                   	mov rdi, fmt_newline
 28551 00015606 [7A19000000000000] 
 28552 0001560E B800000000              	mov rax, 0
 28553                                  	ENTER
    44 00015613 C8000000            <1>  enter 0, 0
    45 00015617 4883E4F0            <1>  and rsp, ~15
 28554 0001561B E8(00000000)            	call printf
 28555                                  	LEAVE
    49 00015620 C9                  <1>  leave
 28556                                  .done:
 28557 00015621 C3                      	ret
 28558                                  
 28559                                  section .data
 28560                                  fmt_frame:
 28561 00001915 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 28561 0000191E 207265742061646472-
 28561 00001927 203D2025703B206C65-
 28561 00001930 7820656E76203D2025-
 28561 00001939 703B20706172616D20-
 28561 00001942 636F756E74203D2025-
 28561 0000194B 640A00             
 28562                                  fmt_frame_param_prefix:
 28563 0000194E 3D3D5B706172616D20-             db `==[param %d]==> \0`
 28563 00001957 25645D3D3D3E2000   
 28564                                  fmt_frame_continue:
 28565 0000195F 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 28565 00001968 723E20746F20636F6E-
 28565 00001971 74696E75652E2E2E00 
 28566                                  fmt_newline:
 28567 0000197A 0A00                    	db `\n\0`
 28568                                  fmt_void:
 28569 0000197C 233C766F69643E00        	db `#<void>\0`
 28570                                  fmt_nil:
 28571 00001984 282900                  	db `()\0`
 28572                                  fmt_boolean_false:
 28573 00001987 236600                  	db `#f\0`
 28574                                  fmt_boolean_true:
 28575 0000198A 237400                  	db `#t\0`
 28576                                  fmt_char_backslash:
 28577 0000198D 235C5C00                	db `#\\\\\0`
 28578                                  fmt_char_dquote:
 28579 00001991 235C2200                	db `#\\"\0`
 28580                                  fmt_char_simple:
 28581 00001995 235C256300              	db `#\\%c\0`
 28582                                  fmt_char_null:
 28583 0000199A 235C6E756C00            	db `#\\nul\0`
 28584                                  fmt_char_bell:
 28585 000019A0 235C62656C6C00          	db `#\\bell\0`
 28586                                  fmt_char_backspace:
 28587 000019A7 235C6261636B737061-     	db `#\\backspace\0`
 28587 000019B0 636500             
 28588                                  fmt_char_tab:
 28589 000019B3 235C74616200            	db `#\\tab\0`
 28590                                  fmt_char_newline:
 28591 000019B9 235C6E65776C696E65-     	db `#\\newline\0`
 28591 000019C2 00                 
 28592                                  fmt_char_formfeed:
 28593 000019C3 235C7061676500          	db `#\\page\0`
 28594                                  fmt_char_return:
 28595 000019CA 235C72657475726E00      	db `#\\return\0`
 28596                                  fmt_char_escape:
 28597 000019D3 235C65736300            	db `#\\esc\0`
 28598                                  fmt_char_space:
 28599 000019D9 235C737061636500        	db `#\\space\0`
 28600                                  fmt_char_hex:
 28601 000019E1 235C782530325800        	db `#\\x%02X\0`
 28602                                  fmt_gensym:
 28603 000019E9 47256C6400                      db `G%ld\0`
 28604                                  fmt_closure:
 28605 000019EE 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 28605 000019F7 206174203078253038-
 28605 00001A00 5820656E763D307825-
 28605 00001A09 30385820636F64653D-
 28605 00001A12 3078253038583E00   
 28606                                  fmt_lparen:
 28607 00001A1A 2800                    	db `(\0`
 28608                                  fmt_dotted_pair:
 28609 00001A1C 202E2000                	db ` . \0`
 28610                                  fmt_rparen:
 28611 00001A20 2900                    	db `)\0`
 28612                                  fmt_space:
 28613 00001A22 2000                    	db ` \0`
 28614                                  fmt_empty_vector:
 28615 00001A24 23282900                	db `#()\0`
 28616                                  fmt_vector:
 28617 00001A28 232800                  	db `#(\0`
 28618                                  fmt_real:
 28619 00001A2B 256600                  	db `%f\0`
 28620                                  fmt_fraction:
 28621 00001A2E 256C642F256C6400        	db `%ld/%ld\0`
 28622                                  fmt_zero:
 28623 00001A36 3000                    	db `0\0`
 28624                                  fmt_int:
 28625 00001A38 256C6400                	db `%ld\0`
 28626                                  fmt_unknown_scheme_object_error:
 28627 00001A3C 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 28627 00001A45 6F723A20556E6B6E6F-
 28627 00001A4E 776E20536368656D65-
 28627 00001A57 2D6F626A6563742028-
 28627 00001A60 525454492030782530-
 28627 00001A69 32582920           
 28628 00001A6D 617420616464726573-     	db `at address 0x%08X\n\n\0`
 28628 00001A76 73203078253038580A-
 28628 00001A7F 0A00               
 28629                                  fmt_dquote:
 28630 00001A81 2200                    	db `\"\0`
 28631                                  fmt_string_char:
 28632 00001A83 256300                          db `%c\0`
 28633                                  fmt_string_char_7:
 28634 00001A86 5C6100                          db `\\a\0`
 28635                                  fmt_string_char_8:
 28636 00001A89 5C6200                          db `\\b\0`
 28637                                  fmt_string_char_9:
 28638 00001A8C 5C7400                          db `\\t\0`
 28639                                  fmt_string_char_10:
 28640 00001A8F 5C6E00                          db `\\n\0`
 28641                                  fmt_string_char_11:
 28642 00001A92 5C7600                          db `\\v\0`
 28643                                  fmt_string_char_12:
 28644 00001A95 5C6600                          db `\\f\0`
 28645                                  fmt_string_char_13:
 28646 00001A98 5C7200                          db `\\r\0`
 28647                                  fmt_string_char_34:
 28648 00001A9B 5C2200                          db `\\"\0`
 28649                                  fmt_string_char_92:
 28650 00001A9E 5C5C00                          db `\\\\\0`
 28651                                  fmt_string_char_hex:
 28652 00001AA1 5C7825583B00                    db `\\x%X;\0`
 28653                                  
 28654                                  section .text
 28655                                  
 28656                                  print_sexpr:
 28657 00015622 C8000000                	enter 0, 0
 28658 00015626 8A07                    	mov al, byte [rdi]
 28659 00015628 3C00                    	cmp al, T_void
 28660 0001562A 7465                    	je .Lvoid
 28661 0001562C 3C01                    	cmp al, T_nil
 28662 0001562E 7470                    	je .Lnil
 28663 00015630 3C09                    	cmp al, T_boolean_false
 28664 00015632 747B                    	je .Lboolean_false
 28665 00015634 3C0A                    	cmp al, T_boolean_true
 28666 00015636 0F8482000000            	je .Lboolean_true
 28667 0001563C 3C02                    	cmp al, T_char
 28668 0001563E 0F8489000000            	je .Lchar
 28669 00015644 3C41                    	cmp al, T_interned_symbol
 28670 00015646 0F84CB010000            	je .Linterned_symbol
 28671 0001564C 3C42                            cmp al, T_uninterned_symbol
 28672 0001564E 0F84EF010000                    je .Luninterned_symbol
 28673 00015654 3C21                    	cmp al, T_pair
 28674 00015656 0F84FA010000            	je .Lpair
 28675 0001565C 3C22                    	cmp al, T_vector
 28676 0001565E 0F84C3020000            	je .Lvector
 28677 00015664 3C04                    	cmp al, T_closure
 28678 00015666 0F8491010000            	je .Lclosure
 28679 0001566C 3C13                    	cmp al, T_real
 28680 0001566E 0F8454030000            	je .Lreal
 28681 00015674 3C12                    	cmp al, T_fraction
 28682 00015676 0F847A030000            	je .Lfraction
 28683 0001567C 3C11                    	cmp al, T_integer
 28684 0001567E 0F84B3030000            	je .Linteger
 28685 00015684 3C03                    	cmp al, T_string
 28686 00015686 0F84BE030000            	je .Lstring
 28687                                  
 28688 0001568C E9F6040000              	jmp .Lunknown_sexpr_type
 28689                                  
 28690                                  .Lvoid:
 28691 00015691 48BF-                   	mov rdi, fmt_void
 28691 00015693 [7C19000000000000] 
 28692 0001569B E91A050000              	jmp .Lemit
 28693                                  
 28694                                  .Lnil:
 28695 000156A0 48BF-                   	mov rdi, fmt_nil
 28695 000156A2 [8419000000000000] 
 28696 000156AA E90B050000              	jmp .Lemit
 28697                                  
 28698                                  .Lboolean_false:
 28699 000156AF 48BF-                   	mov rdi, fmt_boolean_false
 28699 000156B1 [8719000000000000] 
 28700 000156B9 E9FC040000              	jmp .Lemit
 28701                                  
 28702                                  .Lboolean_true:
 28703 000156BE 48BF-                   	mov rdi, fmt_boolean_true
 28703 000156C0 [8A19000000000000] 
 28704 000156C8 E9ED040000              	jmp .Lemit
 28705                                  
 28706                                  .Lchar:
 28707 000156CD 8A4701                  	mov al, byte [rdi + 1]
 28708 000156D0 3C20                    	cmp al, ' '
 28709 000156D2 7E28                    	jle .Lchar_whitespace
 28710 000156D4 3C5C                    	cmp al, 92 		; backslash
 28711 000156D6 0F847C000000            	je .Lchar_backslash
 28712 000156DC 3C22                    	cmp al, '"'
 28713 000156DE 0F8483000000            	je .Lchar_dquote
 28714 000156E4 4825FF000000            	and rax, 255
 28715 000156EA 48BF-                   	mov rdi, fmt_char_simple
 28715 000156EC [9519000000000000] 
 28716 000156F4 4889C6                  	mov rsi, rax
 28717 000156F7 E9BE040000              	jmp .Lemit
 28718                                  
 28719                                  .Lchar_whitespace:
 28720 000156FC 3C00                    	cmp al, 0
 28721 000156FE 7476                    	je .Lchar_null
 28722 00015700 3C07                    	cmp al, 7
 28723 00015702 0F847D000000            	je .Lchar_bell
 28724 00015708 3C08                    	cmp al, 8
 28725 0001570A 0F8484000000            	je .Lchar_backspace
 28726 00015710 3C09                    	cmp al, 9
 28727 00015712 0F848B000000            	je .Lchar_tab
 28728 00015718 3C0A                    	cmp al, 10
 28729 0001571A 0F8492000000            	je .Lchar_newline
 28730 00015720 3C0C                    	cmp al, 12
 28731 00015722 0F8499000000            	je .Lchar_formfeed
 28732 00015728 3C0D                    	cmp al, 13
 28733 0001572A 0F84A0000000            	je .Lchar_return
 28734 00015730 3C1B                    	cmp al, 27
 28735 00015732 0F84A7000000            	je .Lchar_escape
 28736 00015738 4825FF000000            	and rax, 255
 28737 0001573E 3C20                    	cmp al, ' '
 28738 00015740 0F84A8000000            	je .Lchar_space
 28739 00015746 48BF-                   	mov rdi, fmt_char_hex
 28739 00015748 [E119000000000000] 
 28740 00015750 4889C6                  	mov rsi, rax
 28741 00015753 E962040000              	jmp .Lemit	
 28742                                  
 28743                                  .Lchar_backslash:
 28744 00015758 48BF-                   	mov rdi, fmt_char_backslash
 28744 0001575A [8D19000000000000] 
 28745 00015762 E953040000              	jmp .Lemit
 28746                                  
 28747                                  .Lchar_dquote:
 28748 00015767 48BF-                   	mov rdi, fmt_char_dquote
 28748 00015769 [9119000000000000] 
 28749 00015771 E944040000              	jmp .Lemit
 28750                                  
 28751                                  .Lchar_null:
 28752 00015776 48BF-                   	mov rdi, fmt_char_null
 28752 00015778 [9A19000000000000] 
 28753 00015780 E935040000              	jmp .Lemit
 28754                                  
 28755                                  .Lchar_bell:
 28756 00015785 48BF-                   	mov rdi, fmt_char_bell
 28756 00015787 [A019000000000000] 
 28757 0001578F E926040000              	jmp .Lemit
 28758                                  
 28759                                  .Lchar_backspace:
 28760 00015794 48BF-                   	mov rdi, fmt_char_backspace
 28760 00015796 [A719000000000000] 
 28761 0001579E E917040000              	jmp .Lemit
 28762                                  
 28763                                  .Lchar_tab:
 28764 000157A3 48BF-                   	mov rdi, fmt_char_tab
 28764 000157A5 [B319000000000000] 
 28765 000157AD E908040000              	jmp .Lemit
 28766                                  
 28767                                  .Lchar_newline:
 28768 000157B2 48BF-                   	mov rdi, fmt_char_newline
 28768 000157B4 [B919000000000000] 
 28769 000157BC E9F9030000              	jmp .Lemit
 28770                                  
 28771                                  .Lchar_formfeed:
 28772 000157C1 48BF-                   	mov rdi, fmt_char_formfeed
 28772 000157C3 [C319000000000000] 
 28773 000157CB E9EA030000              	jmp .Lemit
 28774                                  
 28775                                  .Lchar_return:
 28776 000157D0 48BF-                   	mov rdi, fmt_char_return
 28776 000157D2 [CA19000000000000] 
 28777 000157DA E9DB030000              	jmp .Lemit
 28778                                  
 28779                                  .Lchar_escape:
 28780 000157DF 48BF-                   	mov rdi, fmt_char_escape
 28780 000157E1 [D319000000000000] 
 28781 000157E9 E9CC030000              	jmp .Lemit
 28782                                  
 28783                                  .Lchar_space:
 28784 000157EE 48BF-                   	mov rdi, fmt_char_space
 28784 000157F0 [D919000000000000] 
 28785 000157F8 E9BD030000              	jmp .Lemit
 28786                                  
 28787                                  .Lclosure:
 28788 000157FD 4889FE                  	mov rsi, qword rdi
 28789 00015800 48BF-                   	mov rdi, fmt_closure
 28789 00015802 [EE19000000000000] 
 28790 0001580A 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 28791 0001580E 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 28792 00015812 E9A3030000              	jmp .Lemit
 28793                                  
 28794                                  .Linterned_symbol:
 28795 00015817 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 28796 0001581B BE01000000              	mov rsi, 1		 ; size = 1 byte
 28797 00015820 488B5701                	mov rdx, qword [rdi + 1] ; length
 28798 00015824 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 28799 00015828 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 28800                                  	ENTER
    44 00015830 C8000000            <1>  enter 0, 0
    45 00015834 4883E4F0            <1>  and rsp, ~15
 28801 00015838 E8(00000000)            	call fwrite
 28802                                  	LEAVE
    49 0001583D C9                  <1>  leave
 28803 0001583E E98C030000              	jmp .Lend
 28804                                  
 28805                                  .Luninterned_symbol:
 28806 00015843 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 28807 00015847 48BF-                           mov rdi, fmt_gensym
 28807 00015849 [E919000000000000] 
 28808 00015851 E964030000                      jmp .Lemit
 28809                                  	
 28810                                  .Lpair:
 28811 00015856 57                      	push rdi
 28812 00015857 48BF-                   	mov rdi, fmt_lparen
 28812 00015859 [1A1A000000000000] 
 28813 00015861 B800000000              	mov rax, 0
 28814                                          ENTER
    44 00015866 C8000000            <1>  enter 0, 0
    45 0001586A 4883E4F0            <1>  and rsp, ~15
 28815 0001586E E8(00000000)            	call printf
 28816                                          LEAVE
    49 00015873 C9                  <1>  leave
 28817 00015874 488B3C24                	mov rdi, qword [rsp] 	; pair
 28818 00015878 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 28819 0001587C E8A1FDFFFF              	call print_sexpr
 28820 00015881 5F                      	pop rdi 		; pair
 28821 00015882 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 28822                                  .Lcdr:
 28823 00015886 8A07                    	mov al, byte [rdi]
 28824 00015888 3C01                    	cmp al, T_nil
 28825 0001588A 7447                    	je .Lcdr_nil
 28826 0001588C 3C21                    	cmp al, T_pair
 28827 0001588E 7462                    	je .Lcdr_pair
 28828 00015890 57                      	push rdi
 28829 00015891 48BF-                   	mov rdi, fmt_dotted_pair
 28829 00015893 [1C1A000000000000] 
 28830 0001589B B800000000              	mov rax, 0
 28831                                          ENTER
    44 000158A0 C8000000            <1>  enter 0, 0
    45 000158A4 4883E4F0            <1>  and rsp, ~15
 28832 000158A8 E8(00000000)            	call printf
 28833                                          LEAVE
    49 000158AD C9                  <1>  leave
 28834 000158AE 5F                      	pop rdi
 28835 000158AF E86EFDFFFF              	call print_sexpr
 28836 000158B4 48BF-                   	mov rdi, fmt_rparen
 28836 000158B6 [201A000000000000] 
 28837 000158BE B800000000              	mov rax, 0
 28838                                          ENTER
    44 000158C3 C8000000            <1>  enter 0, 0
    45 000158C7 4883E4F0            <1>  and rsp, ~15
 28839 000158CB E8(00000000)            	call printf
 28840                                          LEAVE
    49 000158D0 C9                  <1>  leave
 28841 000158D1 C9                      	leave
 28842 000158D2 C3                      	ret
 28843                                  
 28844                                  .Lcdr_nil:
 28845 000158D3 48BF-                   	mov rdi, fmt_rparen
 28845 000158D5 [201A000000000000] 
 28846 000158DD B800000000              	mov rax, 0
 28847                                          ENTER
    44 000158E2 C8000000            <1>  enter 0, 0
    45 000158E6 4883E4F0            <1>  and rsp, ~15
 28848 000158EA E8(00000000)            	call printf
 28849                                          LEAVE
    49 000158EF C9                  <1>  leave
 28850 000158F0 C9                      	leave
 28851 000158F1 C3                      	ret
 28852                                  
 28853                                  .Lcdr_pair:
 28854 000158F2 57                      	push rdi
 28855 000158F3 48BF-                   	mov rdi, fmt_space
 28855 000158F5 [221A000000000000] 
 28856 000158FD B800000000              	mov rax, 0
 28857                                          ENTER
    44 00015902 C8000000            <1>  enter 0, 0
    45 00015906 4883E4F0            <1>  and rsp, ~15
 28858 0001590A E8(00000000)            	call printf
 28859                                          LEAVE
    49 0001590F C9                  <1>  leave
 28860 00015910 488B3C24                	mov rdi, qword [rsp]
 28861 00015914 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 28862 00015918 E805FDFFFF              	call print_sexpr
 28863 0001591D 5F                      	pop rdi
 28864 0001591E 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 28865 00015922 E95FFFFFFF              	jmp .Lcdr
 28866                                  
 28867                                  .Lvector:
 28868 00015927 488B4701                	mov rax, qword [rdi + 1] ; length
 28869 0001592B 4883F800                	cmp rax, 0
 28870 0001592F 0F8484000000            	je .Lvector_empty
 28871 00015935 57                      	push rdi
 28872 00015936 48BF-                   	mov rdi, fmt_vector
 28872 00015938 [281A000000000000] 
 28873 00015940 B800000000              	mov rax, 0
 28874                                          ENTER
    44 00015945 C8000000            <1>  enter 0, 0
    45 00015949 4883E4F0            <1>  and rsp, ~15
 28875 0001594D E8(00000000)            	call printf
 28876                                          LEAVE
    49 00015952 C9                  <1>  leave
 28877 00015953 488B3C24                	mov rdi, qword [rsp]
 28878 00015957 FF7701                  	push qword [rdi + 1]
 28879 0001595A 6A01                    	push 1
 28880 0001595C 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 28881 00015960 E8BDFCFFFF              	call print_sexpr
 28882                                  .Lvector_loop:
 28883                                  	; [rsp] index
 28884                                  	; [rsp + 8*1] limit
 28885                                  	; [rsp + 8*2] vector
 28886 00015965 488B0424                	mov rax, qword [rsp]
 28887 00015969 483B442408              	cmp rax, qword [rsp + 8*1]
 28888 0001596E 7436                    	je .Lvector_end
 28889 00015970 48BF-                   	mov rdi, fmt_space
 28889 00015972 [221A000000000000] 
 28890 0001597A B800000000              	mov rax, 0
 28891                                          ENTER
    44 0001597F C8000000            <1>  enter 0, 0
    45 00015983 4883E4F0            <1>  and rsp, ~15
 28892 00015987 E8(00000000)            	call printf
 28893                                          LEAVE
    49 0001598C C9                  <1>  leave
 28894 0001598D 488B0424                	mov rax, qword [rsp]
 28895 00015991 488B5C2410              	mov rbx, qword [rsp + 8*2]
 28896 00015996 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 28897 0001599B E882FCFFFF              	call print_sexpr
 28898 000159A0 48FF0424                	inc qword [rsp]
 28899 000159A4 EBBF                    	jmp .Lvector_loop
 28900                                  
 28901                                  .Lvector_end:
 28902 000159A6 4883C418                	add rsp, 8*3
 28903 000159AA 48BF-                   	mov rdi, fmt_rparen
 28903 000159AC [201A000000000000] 
 28904 000159B4 E901020000              	jmp .Lemit	
 28905                                  
 28906                                  .Lvector_empty:
 28907 000159B9 48BF-                   	mov rdi, fmt_empty_vector
 28907 000159BB [241A000000000000] 
 28908 000159C3 E9F2010000              	jmp .Lemit
 28909                                  
 28910                                  .Lreal:
 28911 000159C8 FF7701                  	push qword [rdi + 1]
 28912 000159CB F20F100424              	movsd xmm0, qword [rsp]
 28913 000159D0 4883C408                	add rsp, 8*1
 28914 000159D4 48BF-                   	mov rdi, fmt_real
 28914 000159D6 [2B1A000000000000] 
 28915 000159DE B801000000              	mov rax, 1
 28916                                  	ENTER
    44 000159E3 C8000000            <1>  enter 0, 0
    45 000159E7 4883E4F0            <1>  and rsp, ~15
 28917 000159EB E8(00000000)            	call printf
 28918                                  	LEAVE
    49 000159F0 C9                  <1>  leave
 28919 000159F1 E9D9010000              	jmp .Lend
 28920                                  
 28921                                  .Lfraction:
 28922 000159F6 488B7701                	mov rsi, qword [rdi + 1]
 28923 000159FA 488B5709                	mov rdx, qword [rdi + 1 + 8]
 28924 000159FE 4883FE00                	cmp rsi, 0
 28925 00015A02 7415                    	je .Lrat_zero
 28926 00015A04 4883FA01                	cmp rdx, 1
 28927 00015A08 741E                    	je .Lrat_int
 28928 00015A0A 48BF-                   	mov rdi, fmt_fraction
 28928 00015A0C [2E1A000000000000] 
 28929 00015A14 E9A1010000              	jmp .Lemit
 28930                                  
 28931                                  .Lrat_zero:
 28932 00015A19 48BF-                   	mov rdi, fmt_zero
 28932 00015A1B [361A000000000000] 
 28933 00015A23 E992010000              	jmp .Lemit
 28934                                  
 28935                                  .Lrat_int:
 28936 00015A28 48BF-                   	mov rdi, fmt_int
 28936 00015A2A [381A000000000000] 
 28937 00015A32 E983010000              	jmp .Lemit
 28938                                  
 28939                                  .Linteger:
 28940 00015A37 488B7701                	mov rsi, qword [rdi + 1]
 28941 00015A3B 48BF-                   	mov rdi, fmt_int
 28941 00015A3D [381A000000000000] 
 28942 00015A45 E970010000              	jmp .Lemit
 28943                                  
 28944                                  .Lstring:
 28945 00015A4A 488D4709                	lea rax, [rdi + 1 + 8]
 28946 00015A4E 50                      	push rax
 28947 00015A4F FF7701                  	push qword [rdi + 1]
 28948 00015A52 48BF-                   	mov rdi, fmt_dquote
 28948 00015A54 [811A000000000000] 
 28949 00015A5C B800000000              	mov rax, 0
 28950                                  	ENTER
    44 00015A61 C8000000            <1>  enter 0, 0
    45 00015A65 4883E4F0            <1>  and rsp, ~15
 28951 00015A69 E8(00000000)            	call printf
 28952                                  	LEAVE
    49 00015A6E C9                  <1>  leave
 28953                                  .Lstring_loop:
 28954                                  	; qword [rsp]: limit
 28955                                  	; qword [rsp + 8*1]: char *
 28956 00015A6F 48833C2400              	cmp qword [rsp], 0
 28957 00015A74 0F84FD000000            	je .Lstring_end
 28958 00015A7A 488B442408              	mov rax, qword [rsp + 8*1]
 28959 00015A7F 8A00                    	mov al, byte [rax]
 28960 00015A81 4825FF000000            	and rax, 255
 28961 00015A87 3C07                    	cmp al, 7
 28962 00015A89 7468                            je .Lstring_char_7
 28963 00015A8B 3C08                            cmp al, 8
 28964 00015A8D 7470                            je .Lstring_char_8
 28965 00015A8F 3C09                            cmp al, 9
 28966 00015A91 7478                            je .Lstring_char_9
 28967 00015A93 3C0A                            cmp al, 10
 28968 00015A95 0F847C000000                    je .Lstring_char_10
 28969 00015A9B 3C0B                            cmp al, 11
 28970 00015A9D 0F8480000000                    je .Lstring_char_11
 28971 00015AA3 3C0C                            cmp al, 12
 28972 00015AA5 0F8484000000                    je .Lstring_char_12
 28973 00015AAB 3C0D                            cmp al, 13
 28974 00015AAD 0F8488000000                    je .Lstring_char_13
 28975 00015AB3 3C22                            cmp al, 34
 28976 00015AB5 0F848C000000                    je .Lstring_char_34
 28977 00015ABB 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 28979 00015ABD 3C20                            cmp al, ' '
 28980 00015ABF 0F8CA0000000                    jl .Lstring_char_hex
 28981 00015AC5 48BF-                           mov rdi, fmt_string_char
 28981 00015AC7 [831A000000000000] 
 28982 00015ACF 4889C6                          mov rsi, rax
 28983                                  .Lstring_char_emit:
 28984 00015AD2 B800000000                      mov rax, 0
 28985                                          ENTER
    44 00015AD7 C8000000            <1>  enter 0, 0
    45 00015ADB 4883E4F0            <1>  and rsp, ~15
 28986 00015ADF E8(00000000)                    call printf
 28987                                          LEAVE
    49 00015AE4 C9                  <1>  leave
 28988 00015AE5 48FF0C24                        dec qword [rsp]
 28989 00015AE9 48FF442408                      inc qword [rsp + 8*1]
 28990 00015AEE E97CFFFFFF                      jmp .Lstring_loop
 28991                                  
 28992                                  .Lstring_char_7:
 28993 00015AF3 48BF-                           mov rdi, fmt_string_char_7
 28993 00015AF5 [861A000000000000] 
 28994 00015AFD EBD3                            jmp .Lstring_char_emit
 28995                                  
 28996                                  .Lstring_char_8:
 28997 00015AFF 48BF-                           mov rdi, fmt_string_char_8
 28997 00015B01 [891A000000000000] 
 28998 00015B09 EBC7                            jmp .Lstring_char_emit
 28999                                          
 29000                                  .Lstring_char_9:
 29001 00015B0B 48BF-                           mov rdi, fmt_string_char_9
 29001 00015B0D [8C1A000000000000] 
 29002 00015B15 EBBB                            jmp .Lstring_char_emit
 29003                                  
 29004                                  .Lstring_char_10:
 29005 00015B17 48BF-                           mov rdi, fmt_string_char_10
 29005 00015B19 [8F1A000000000000] 
 29006 00015B21 EBAF                            jmp .Lstring_char_emit
 29007                                  
 29008                                  .Lstring_char_11:
 29009 00015B23 48BF-                           mov rdi, fmt_string_char_11
 29009 00015B25 [921A000000000000] 
 29010 00015B2D EBA3                            jmp .Lstring_char_emit
 29011                                  
 29012                                  .Lstring_char_12:
 29013 00015B2F 48BF-                           mov rdi, fmt_string_char_12
 29013 00015B31 [951A000000000000] 
 29014 00015B39 EB97                            jmp .Lstring_char_emit
 29015                                  
 29016                                  .Lstring_char_13:
 29017 00015B3B 48BF-                           mov rdi, fmt_string_char_13
 29017 00015B3D [981A000000000000] 
 29018 00015B45 EB8B                            jmp .Lstring_char_emit
 29019                                  
 29020                                  .Lstring_char_34:
 29021 00015B47 48BF-                           mov rdi, fmt_string_char_34
 29021 00015B49 [9B1A000000000000] 
 29022 00015B51 E97CFFFFFF                      jmp .Lstring_char_emit
 29023                                  
 29024                                  .Lstring_char_92:
 29025 00015B56 48BF-                           mov rdi, fmt_string_char_92
 29025 00015B58 [9E1A000000000000] 
 29026 00015B60 E96DFFFFFF                      jmp .Lstring_char_emit
 29027                                  
 29028                                  .Lstring_char_hex:
 29029 00015B65 48BF-                           mov rdi, fmt_string_char_hex
 29029 00015B67 [A11A000000000000] 
 29030 00015B6F 4889C6                          mov rsi, rax
 29031 00015B72 E95BFFFFFF                      jmp .Lstring_char_emit        
 29032                                  
 29033                                  .Lstring_end:
 29034 00015B77 4883C410                	add rsp, 8 * 2
 29035 00015B7B 48BF-                   	mov rdi, fmt_dquote
 29035 00015B7D [811A000000000000] 
 29036 00015B85 EB33                    	jmp .Lemit
 29037                                  
 29038                                  .Lunknown_sexpr_type:
 29039 00015B87 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 29039 00015B89 [3C1A000000000000] 
 29040 00015B91 4825FF000000            	and rax, 255
 29041 00015B97 4889C2                  	mov rdx, rax
 29042 00015B9A 4889F9                  	mov rcx, rdi
 29043 00015B9D 488B3C25[00000000]      	mov rdi, qword [stderr]
 29044 00015BA5 B800000000              	mov rax, 0
 29045                                          ENTER
    44 00015BAA C8000000            <1>  enter 0, 0
    45 00015BAE 4883E4F0            <1>  and rsp, ~15
 29046 00015BB2 E8(00000000)            	call fprintf
 29047                                          LEAVE
    49 00015BB7 C9                  <1>  leave
 29048 00015BB8 C9                              leave
 29049 00015BB9 C3                              ret
 29050                                  
 29051                                  .Lemit:
 29052 00015BBA B800000000              	mov rax, 0
 29053                                          ENTER
    44 00015BBF C8000000            <1>  enter 0, 0
    45 00015BC3 4883E4F0            <1>  and rsp, ~15
 29054 00015BC7 E8(00000000)            	call printf
 29055                                          LEAVE
    49 00015BCC C9                  <1>  leave
 29056 00015BCD EB00                    	jmp .Lend
 29057                                  
 29058                                  .Lend:
 29059                                  	LEAVE
    49 00015BCF C9                  <1>  leave
 29060 00015BD0 C3                      	ret
 29061                                  
 29062                                  ;;; rdi: address of free variable
 29063                                  ;;; rsi: address of code-pointer
 29064                                  bind_primitive:
 29065 00015BD1 C8000000                        enter 0, 0
 29066 00015BD5 57                              push rdi
 29067 00015BD6 BF11000000                      mov rdi, (1 + 8 + 8)
 29068 00015BDB E8C1F7FFFF                      call malloc
 29069 00015BE0 5F                              pop rdi
 29070 00015BE1 C60004                          mov byte [rax], T_closure
 29071 00015BE4 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 29072 00015BEC 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 29073 00015BF0 488907                          mov qword [rdi], rax
 29074 00015BF3 48B8-                           mov rax, sob_void
 29074 00015BF5 [0000000000000000] 
 29075 00015BFD C9                              leave
 29076 00015BFE C3                              ret
 29077                                  
 29078                                  L_code_ptr_ash:
 29079 00015BFF C8000000                        enter 0, 0
 29080 00015C03 48837D1802                      cmp COUNT, 2
 29081 00015C08 0F859F140000                    jne L_error_arg_count_2
 29082 00015C0E 488B7D20                        mov rdi, PARAM(0)
 29083                                          assert_integer(rdi)
    53 00015C12 803F11              <1>  cmp byte [%1], %2
    54 00015C15 0F8531150000        <1>  jne L_error_incorrect_type
 29084 00015C1B 488B4D28                        mov rcx, PARAM(1)
 29085                                          assert_integer(rcx)
    53 00015C1F 803911              <1>  cmp byte [%1], %2
    54 00015C22 0F8524150000        <1>  jne L_error_incorrect_type
 29086 00015C28 488B7F01                        mov rdi, qword [rdi + 1]
 29087 00015C2C 488B4901                        mov rcx, qword [rcx + 1]
 29088 00015C30 4883F900                        cmp rcx, 0
 29089 00015C34 7C0F                            jl .L_negative
 29090                                  .L_loop_positive:
 29091 00015C36 4883F900                        cmp rcx, 0
 29092 00015C3A 741B                            je .L_exit
 29093 00015C3C 48D3E7                          sal rdi, cl
 29094 00015C3F 48C1E908                        shr rcx, 8
 29095 00015C43 EBF1                            jmp .L_loop_positive
 29096                                  .L_negative:
 29097 00015C45 48F7D9                          neg rcx
 29098                                  .L_loop_negative:
 29099 00015C48 4883F900                        cmp rcx, 0
 29100 00015C4C 7409                            je .L_exit
 29101 00015C4E 48D3FF                          sar rdi, cl
 29102 00015C51 48C1E908                        shr rcx, 8
 29103 00015C55 EBF1                            jmp .L_loop_negative
 29104                                  .L_exit:
 29105 00015C57 E86B130000                      call make_integer
 29106 00015C5C C9                              leave
 29107 00015C5D C22000                          ret AND_KILL_FRAME(2)
 29108                                  
 29109                                  L_code_ptr_logand:
 29110 00015C60 C8000000                        enter 0, 0
 29111 00015C64 48837D1802                      cmp COUNT, 2
 29112 00015C69 0F853E140000                    jne L_error_arg_count_2
 29113 00015C6F 4C8B4520                        mov r8, PARAM(0)
 29114                                          assert_integer(r8)
    53 00015C73 41803811            <1>  cmp byte [%1], %2
    54 00015C77 0F85CF140000        <1>  jne L_error_incorrect_type
 29115 00015C7D 4C8B4D28                        mov r9, PARAM(1)
 29116                                          assert_integer(r9)
    53 00015C81 41803911            <1>  cmp byte [%1], %2
    54 00015C85 0F85C1140000        <1>  jne L_error_incorrect_type
 29117 00015C8B 498B7801                        mov rdi, qword [r8 + 1]
 29118 00015C8F 49237901                        and rdi, qword [r9 + 1]
 29119 00015C93 E82F130000                      call make_integer
 29120 00015C98 C9                              leave
 29121 00015C99 C22000                          ret AND_KILL_FRAME(2)
 29122                                  
 29123                                  L_code_ptr_logor:
 29124 00015C9C C8000000                        enter 0, 0
 29125 00015CA0 48837D1802                      cmp COUNT, 2
 29126 00015CA5 0F8502140000                    jne L_error_arg_count_2
 29127 00015CAB 4C8B4520                        mov r8, PARAM(0)
 29128                                          assert_integer(r8)
    53 00015CAF 41803811            <1>  cmp byte [%1], %2
    54 00015CB3 0F8593140000        <1>  jne L_error_incorrect_type
 29129 00015CB9 4C8B4D28                        mov r9, PARAM(1)
 29130                                          assert_integer(r9)
    53 00015CBD 41803911            <1>  cmp byte [%1], %2
    54 00015CC1 0F8585140000        <1>  jne L_error_incorrect_type
 29131 00015CC7 498B7801                        mov rdi, qword [r8 + 1]
 29132 00015CCB 490B7901                        or rdi, qword [r9 + 1]
 29133 00015CCF E8F3120000                      call make_integer
 29134 00015CD4 C9                              leave
 29135 00015CD5 C22000                          ret AND_KILL_FRAME(2)
 29136                                  
 29137                                  L_code_ptr_logxor:
 29138 00015CD8 C8000000                        enter 0, 0
 29139 00015CDC 48837D1802                      cmp COUNT, 2
 29140 00015CE1 0F85C6130000                    jne L_error_arg_count_2
 29141 00015CE7 4C8B4520                        mov r8, PARAM(0)
 29142                                          assert_integer(r8)
    53 00015CEB 41803811            <1>  cmp byte [%1], %2
    54 00015CEF 0F8557140000        <1>  jne L_error_incorrect_type
 29143 00015CF5 4C8B4D28                        mov r9, PARAM(1)
 29144                                          assert_integer(r9)
    53 00015CF9 41803911            <1>  cmp byte [%1], %2
    54 00015CFD 0F8549140000        <1>  jne L_error_incorrect_type
 29145 00015D03 498B7801                        mov rdi, qword [r8 + 1]
 29146 00015D07 49337901                        xor rdi, qword [r9 + 1]
 29147 00015D0B E8B7120000                      call make_integer
 29148                                          LEAVE
    49 00015D10 C9                  <1>  leave
 29149 00015D11 C22000                          ret AND_KILL_FRAME(2)
 29150                                  
 29151                                  L_code_ptr_lognot:
 29152 00015D14 C8000000                        enter 0, 0
 29153 00015D18 48837D1801                      cmp COUNT, 1
 29154 00015D1D 0F8555130000                    jne L_error_arg_count_1
 29155 00015D23 4C8B4520                        mov r8, PARAM(0)
 29156                                          assert_integer(r8)
    53 00015D27 41803811            <1>  cmp byte [%1], %2
    54 00015D2B 0F851B140000        <1>  jne L_error_incorrect_type
 29157 00015D31 498B7801                        mov rdi, qword [r8 + 1]
 29158 00015D35 48F7D7                          not rdi
 29159 00015D38 E88A120000                      call make_integer
 29160 00015D3D C9                              leave
 29161 00015D3E C21800                          ret AND_KILL_FRAME(1)
 29162                                  
 29163                                  L_code_ptr_bin_apply:
 29164 00015D41 48837C241002                    cmp qword [rsp + 8 * 2], 2
 29165 00015D47 0F8560130000                    jne L_error_arg_count_2
 29166 00015D4D 4C8B642418                      mov r12, qword [rsp + 8 * 3]
 29167                                          assert_closure(r12)
    53 00015D52 41803C2404          <1>  cmp byte [%1], %2
    54 00015D57 0F85EF130000        <1>  jne L_error_incorrect_type
 29168 00015D5D 4C8D542420                      lea r10, [rsp + 8 * 4]
 29169 00015D62 4D8B1A                          mov r11, qword [r10]
 29170 00015D65 4C8B0C24                        mov r9, qword [rsp]
 29171 00015D69 B900000000                      mov rcx, 0
 29172 00015D6E 4C89DE                          mov rsi, r11
 29173                                  .L0:
 29174 00015D71 4881FE[01000000]                cmp rsi, sob_nil
 29175 00015D78 7412                            je .L0_out
 29176                                          assert_pair(rsi)
    53 00015D7A 803E21              <1>  cmp byte [%1], %2
    54 00015D7D 0F85C9130000        <1>  jne L_error_incorrect_type
 29177 00015D83 48FFC1                          inc rcx
 29178 00015D86 488B7609                        mov rsi, SOB_PAIR_CDR(rsi)
 29179 00015D8A EBE5                            jmp .L0
 29180                                  .L0_out:
 29181 00015D8C 488D1CCDF0FFFFFF                lea rbx, [8 * (rcx - 2)]
 29182 00015D94 4829DC                          sub rsp, rbx
 29183 00015D97 4889E7                          mov rdi, rsp
 29184 00015D9A FC                              cld
 29185                                          ; place ret addr
 29186 00015D9B 4C89C8                          mov rax, r9
 29187 00015D9E 48AB                            stosq
 29188                                          ; place env_f
 29189 00015DA0 498B442401                      mov rax, SOB_CLOSURE_ENV(r12)
 29190 00015DA5 48AB                            stosq
 29191                                          ; place COUNT = rcx
 29192 00015DA7 4889C8                          mov rax, rcx
 29193 00015DAA 48AB                            stosq
 29194                                  .L1:
 29195 00015DAC 4883F900                        cmp rcx, 0
 29196 00015DB0 740F                            je .L1_out
 29197 00015DB2 498B4301                        mov rax, SOB_PAIR_CAR(r11)
 29198 00015DB6 48AB                            stosq
 29199 00015DB8 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11)
 29200 00015DBC 48FFC9                          dec rcx
 29201 00015DBF EBEB                            jmp .L1
 29202                                  .L1_out:
 29203 00015DC1 4883EF08                        sub rdi, 8*1
 29204 00015DC5 4939FA                          cmp r10, rdi
 29205 00015DC8 7505                            jne .L_error_apply_stack_corrupted
 29206 00015DCA 41FF642409                      jmp SOB_CLOSURE_CODE(r12)
 29207                                  .L_error_apply_stack_corrupted:
 29208 00015DCF CC                              int3
 29209                                  
 29210                                  
 29211                                  L_code_ptr_is_null:
 29212 00015DD0 C8000000                        enter 0, 0
 29213 00015DD4 48837D1801                      cmp COUNT, 1
 29214 00015DD9 0F8599120000                    jne L_error_arg_count_1
 29215 00015DDF 488B4520                        mov rax, PARAM(0)
 29216 00015DE3 803801                          cmp byte [rax], T_nil
 29217 00015DE6 750C                            jne .L_false
 29218 00015DE8 48B8-                           mov rax, sob_boolean_true
 29218 00015DEA [0300000000000000] 
 29219 00015DF2 EB0A                            jmp .L_end
 29220                                  .L_false:
 29221 00015DF4 48B8-                           mov rax, sob_boolean_false
 29221 00015DF6 [0200000000000000] 
 29222                                  .L_end:
 29223 00015DFE C9                              leave
 29224 00015DFF C21800                          ret AND_KILL_FRAME(1)
 29225                                  
 29226                                  L_code_ptr_is_pair:
 29227 00015E02 C8000000                        enter 0, 0
 29228 00015E06 48837D1801                      cmp COUNT, 1
 29229 00015E0B 0F8567120000                    jne L_error_arg_count_1
 29230 00015E11 488B4520                        mov rax, PARAM(0)
 29231 00015E15 803821                          cmp byte [rax], T_pair
 29232 00015E18 750C                            jne .L_false
 29233 00015E1A 48B8-                           mov rax, sob_boolean_true
 29233 00015E1C [0300000000000000] 
 29234 00015E24 EB0A                            jmp .L_end
 29235                                  .L_false:
 29236 00015E26 48B8-                           mov rax, sob_boolean_false
 29236 00015E28 [0200000000000000] 
 29237                                  .L_end:
 29238 00015E30 C9                              leave
 29239 00015E31 C21800                          ret AND_KILL_FRAME(1)
 29240                                          
 29241                                  L_code_ptr_is_void:
 29242 00015E34 C8000000                        enter 0, 0
 29243 00015E38 48837D1801                      cmp COUNT, 1
 29244 00015E3D 0F8535120000                    jne L_error_arg_count_1
 29245 00015E43 488B4520                        mov rax, PARAM(0)
 29246 00015E47 803800                          cmp byte [rax], T_void
 29247 00015E4A 750C                            jne .L_false
 29248 00015E4C 48B8-                           mov rax, sob_boolean_true
 29248 00015E4E [0300000000000000] 
 29249 00015E56 EB0A                            jmp .L_end
 29250                                  .L_false:
 29251 00015E58 48B8-                           mov rax, sob_boolean_false
 29251 00015E5A [0200000000000000] 
 29252                                  .L_end:
 29253 00015E62 C9                              leave
 29254 00015E63 C21800                          ret AND_KILL_FRAME(1)
 29255                                  
 29256                                  L_code_ptr_is_char:
 29257 00015E66 C8000000                        enter 0, 0
 29258 00015E6A 48837D1801                      cmp COUNT, 1
 29259 00015E6F 0F8503120000                    jne L_error_arg_count_1
 29260 00015E75 488B4520                        mov rax, PARAM(0)
 29261 00015E79 803802                          cmp byte [rax], T_char
 29262 00015E7C 750C                            jne .L_false
 29263 00015E7E 48B8-                           mov rax, sob_boolean_true
 29263 00015E80 [0300000000000000] 
 29264 00015E88 EB0A                            jmp .L_end
 29265                                  .L_false:
 29266 00015E8A 48B8-                           mov rax, sob_boolean_false
 29266 00015E8C [0200000000000000] 
 29267                                  .L_end:
 29268 00015E94 C9                              leave
 29269 00015E95 C21800                          ret AND_KILL_FRAME(1)
 29270                                  
 29271                                  L_code_ptr_is_string:
 29272 00015E98 C8000000                        enter 0, 0
 29273 00015E9C 48837D1801                      cmp COUNT, 1
 29274 00015EA1 0F85D1110000                    jne L_error_arg_count_1
 29275 00015EA7 488B4520                        mov rax, PARAM(0)
 29276 00015EAB 803803                          cmp byte [rax], T_string
 29277 00015EAE 750C                            jne .L_false
 29278 00015EB0 48B8-                           mov rax, sob_boolean_true
 29278 00015EB2 [0300000000000000] 
 29279 00015EBA EB0A                            jmp .L_end
 29280                                  .L_false:
 29281 00015EBC 48B8-                           mov rax, sob_boolean_false
 29281 00015EBE [0200000000000000] 
 29282                                  .L_end:
 29283 00015EC6 C9                              leave
 29284 00015EC7 C21800                          ret AND_KILL_FRAME(1)
 29285                                  
 29286                                  L_code_ptr_is_symbol:
 29287 00015ECA C8000000                        enter 0, 0
 29288 00015ECE 48837D1801                      cmp COUNT, 1
 29289 00015ED3 0F859F110000                    jne L_error_arg_count_1
 29290 00015ED9 4C8B4520                        mov r8, PARAM(0)
 29291 00015EDD 41802040                        and byte [r8], T_symbol
 29292 00015EE1 740C                            jz .L_false
 29293 00015EE3 48B8-                           mov rax, sob_boolean_true
 29293 00015EE5 [0300000000000000] 
 29294 00015EED EB0A                            jmp .L_exit
 29295                                  .L_false:
 29296 00015EEF 48B8-                           mov rax, sob_boolean_false
 29296 00015EF1 [0200000000000000] 
 29297                                  .L_exit:
 29298 00015EF9 C9                              leave
 29299 00015EFA C21800                          ret AND_KILL_FRAME(1)
 29300                                  
 29301                                  L_code_ptr_is_uninterned_symbol:
 29302 00015EFD C8000000                        enter 0, 0
 29303 00015F01 48837D1801                      cmp COUNT, 1
 29304 00015F06 0F856C110000                    jne L_error_arg_count_1
 29305 00015F0C 4C8B4520                        mov r8, PARAM(0)
 29306 00015F10 41803842                        cmp byte [r8], T_uninterned_symbol
 29307 00015F14 750C                            jne .L_false
 29308 00015F16 48B8-                           mov rax, sob_boolean_true
 29308 00015F18 [0300000000000000] 
 29309 00015F20 EB0A                            jmp .L_exit
 29310                                  .L_false:
 29311 00015F22 48B8-                           mov rax, sob_boolean_false
 29311 00015F24 [0200000000000000] 
 29312                                  .L_exit:
 29313 00015F2C C9                              leave
 29314 00015F2D C21800                          ret AND_KILL_FRAME(1)
 29315                                  
 29316                                  L_code_ptr_is_interned_symbol:
 29317 00015F30 C8000000                        enter 0, 0
 29318 00015F34 48837D1801                      cmp COUNT, 1
 29319 00015F39 0F8539110000                    jne L_error_arg_count_1
 29320 00015F3F 488B4520                        mov rax, PARAM(0)
 29321 00015F43 803841                          cmp byte [rax], T_interned_symbol
 29322 00015F46 750C                            jne .L_false
 29323 00015F48 48B8-                           mov rax, sob_boolean_true
 29323 00015F4A [0300000000000000] 
 29324 00015F52 EB0A                            jmp .L_end
 29325                                  .L_false:
 29326 00015F54 48B8-                           mov rax, sob_boolean_false
 29326 00015F56 [0200000000000000] 
 29327                                  .L_end:
 29328 00015F5E C9                              leave
 29329 00015F5F C21800                          ret AND_KILL_FRAME(1)
 29330                                  
 29331                                  L_code_ptr_gensym:
 29332 00015F62 C8000000                        enter 0, 0
 29333 00015F66 48837D1800                      cmp COUNT, 0
 29334 00015F6B 0F85D2100000                    jne L_error_arg_count_0
 29335 00015F71 48FF0425[A71A0000]              inc qword [gensym_count]
 29336 00015F79 BF09000000                      mov rdi, (1 + 8)
 29337 00015F7E E81EF4FFFF                      call malloc
 29338 00015F83 C60042                          mov byte [rax], T_uninterned_symbol
 29339 00015F86 488B0C25[A71A0000]              mov rcx, qword [gensym_count]
 29340 00015F8E 48894801                        mov qword [rax + 1], rcx
 29341 00015F92 C9                              leave
 29342 00015F93 C21000                          ret AND_KILL_FRAME(0)
 29343                                  
 29344                                  L_code_ptr_is_vector:
 29345 00015F96 C8000000                        enter 0, 0
 29346 00015F9A 48837D1801                      cmp COUNT, 1
 29347 00015F9F 0F85D3100000                    jne L_error_arg_count_1
 29348 00015FA5 488B4520                        mov rax, PARAM(0)
 29349 00015FA9 803822                          cmp byte [rax], T_vector
 29350 00015FAC 750C                            jne .L_false
 29351 00015FAE 48B8-                           mov rax, sob_boolean_true
 29351 00015FB0 [0300000000000000] 
 29352 00015FB8 EB0A                            jmp .L_end
 29353                                  .L_false:
 29354 00015FBA 48B8-                           mov rax, sob_boolean_false
 29354 00015FBC [0200000000000000] 
 29355                                  .L_end:
 29356 00015FC4 C9                              leave
 29357 00015FC5 C21800                          ret AND_KILL_FRAME(1)
 29358                                  
 29359                                  L_code_ptr_is_closure:
 29360 00015FC8 C8000000                        enter 0, 0
 29361 00015FCC 48837D1801                      cmp COUNT, 1
 29362 00015FD1 0F85A1100000                    jne L_error_arg_count_1
 29363 00015FD7 488B4520                        mov rax, PARAM(0)
 29364 00015FDB 803804                          cmp byte [rax], T_closure
 29365 00015FDE 750C                            jne .L_false
 29366 00015FE0 48B8-                           mov rax, sob_boolean_true
 29366 00015FE2 [0300000000000000] 
 29367 00015FEA EB0A                            jmp .L_end
 29368                                  .L_false:
 29369 00015FEC 48B8-                           mov rax, sob_boolean_false
 29369 00015FEE [0200000000000000] 
 29370                                  .L_end:
 29371 00015FF6 C9                              leave
 29372 00015FF7 C21800                          ret AND_KILL_FRAME(1)
 29373                                  
 29374                                  L_code_ptr_is_real:
 29375 00015FFA C8000000                        enter 0, 0
 29376 00015FFE 48837D1801                      cmp COUNT, 1
 29377 00016003 0F856F100000                    jne L_error_arg_count_1
 29378 00016009 488B4520                        mov rax, PARAM(0)
 29379 0001600D 803813                          cmp byte [rax], T_real
 29380 00016010 750C                            jne .L_false
 29381 00016012 48B8-                           mov rax, sob_boolean_true
 29381 00016014 [0300000000000000] 
 29382 0001601C EB0A                            jmp .L_end
 29383                                  .L_false:
 29384 0001601E 48B8-                           mov rax, sob_boolean_false
 29384 00016020 [0200000000000000] 
 29385                                  .L_end:
 29386 00016028 C9                              leave
 29387 00016029 C21800                          ret AND_KILL_FRAME(1)
 29388                                  
 29389                                  L_code_ptr_is_fraction:
 29390 0001602C C8000000                        enter 0, 0
 29391 00016030 48837D1801                      cmp COUNT, 1
 29392 00016035 0F853D100000                    jne L_error_arg_count_1
 29393 0001603B 488B4520                        mov rax, PARAM(0)
 29394 0001603F 803812                          cmp byte [rax], T_fraction
 29395 00016042 750C                            jne .L_false
 29396 00016044 48B8-                           mov rax, sob_boolean_true
 29396 00016046 [0300000000000000] 
 29397 0001604E EB0A                            jmp .L_end
 29398                                  .L_false:
 29399 00016050 48B8-                           mov rax, sob_boolean_false
 29399 00016052 [0200000000000000] 
 29400                                  .L_end:
 29401 0001605A C9                              leave
 29402 0001605B C21800                          ret AND_KILL_FRAME(1)
 29403                                  
 29404                                  L_code_ptr_is_boolean:
 29405 0001605E C8000000                        enter 0, 0
 29406 00016062 48837D1801                      cmp COUNT, 1
 29407 00016067 0F850B100000                    jne L_error_arg_count_1
 29408 0001606D 488B4520                        mov rax, PARAM(0)
 29409 00016071 8A18                            mov bl, byte [rax]
 29410 00016073 80E308                          and bl, T_boolean
 29411 00016076 740C                            je .L_false
 29412 00016078 48B8-                           mov rax, sob_boolean_true
 29412 0001607A [0300000000000000] 
 29413 00016082 EB0A                            jmp .L_end
 29414                                  .L_false:
 29415 00016084 48B8-                           mov rax, sob_boolean_false
 29415 00016086 [0200000000000000] 
 29416                                  .L_end:
 29417 0001608E C9                              leave
 29418 0001608F C21800                          ret AND_KILL_FRAME(1)
 29419                                          
 29420                                  L_code_ptr_is_boolean_false:
 29421 00016092 C8000000                        enter 0, 0
 29422 00016096 48837D1801                      cmp COUNT, 1
 29423 0001609B 0F85D70F0000                    jne L_error_arg_count_1
 29424 000160A1 488B4520                        mov rax, PARAM(0)
 29425 000160A5 8A18                            mov bl, byte [rax]
 29426 000160A7 80FB09                          cmp bl, T_boolean_false
 29427 000160AA 750C                            jne .L_false
 29428 000160AC 48B8-                           mov rax, sob_boolean_true
 29428 000160AE [0300000000000000] 
 29429 000160B6 EB0A                            jmp .L_end
 29430                                  .L_false:
 29431 000160B8 48B8-                           mov rax, sob_boolean_false
 29431 000160BA [0200000000000000] 
 29432                                  .L_end:
 29433 000160C2 C9                              leave
 29434 000160C3 C21800                          ret AND_KILL_FRAME(1)
 29435                                  
 29436                                  L_code_ptr_is_boolean_true:
 29437 000160C6 C8000000                        enter 0, 0
 29438 000160CA 48837D1801                      cmp COUNT, 1
 29439 000160CF 0F85A30F0000                    jne L_error_arg_count_1
 29440 000160D5 488B4520                        mov rax, PARAM(0)
 29441 000160D9 8A18                            mov bl, byte [rax]
 29442 000160DB 80FB0A                          cmp bl, T_boolean_true
 29443 000160DE 750C                            jne .L_false
 29444 000160E0 48B8-                           mov rax, sob_boolean_true
 29444 000160E2 [0300000000000000] 
 29445 000160EA EB0A                            jmp .L_end
 29446                                  .L_false:
 29447 000160EC 48B8-                           mov rax, sob_boolean_false
 29447 000160EE [0200000000000000] 
 29448                                  .L_end:
 29449 000160F6 C9                              leave
 29450 000160F7 C21800                          ret AND_KILL_FRAME(1)
 29451                                  
 29452                                  L_code_ptr_is_number:
 29453 000160FA C8000000                        enter 0, 0
 29454 000160FE 48837D1801                      cmp COUNT, 1
 29455 00016103 0F856F0F0000                    jne L_error_arg_count_1
 29456 00016109 488B4520                        mov rax, PARAM(0)
 29457 0001610D 8A18                            mov bl, byte [rax]
 29458 0001610F 80E310                          and bl, T_number
 29459 00016112 740C                            jz .L_false
 29460 00016114 48B8-                           mov rax, sob_boolean_true
 29460 00016116 [0300000000000000] 
 29461 0001611E EB0A                            jmp .L_end
 29462                                  .L_false:
 29463 00016120 48B8-                           mov rax, sob_boolean_false
 29463 00016122 [0200000000000000] 
 29464                                  .L_end:
 29465 0001612A C9                              leave
 29466 0001612B C21800                          ret AND_KILL_FRAME(1)
 29467                                          
 29468                                  L_code_ptr_is_collection:
 29469 0001612E C8000000                        enter 0, 0
 29470 00016132 48837D1801                      cmp COUNT, 1
 29471 00016137 0F853B0F0000                    jne L_error_arg_count_1
 29472 0001613D 488B4520                        mov rax, PARAM(0)
 29473 00016141 8A18                            mov bl, byte [rax]
 29474 00016143 80E320                          and bl, T_collection
 29475 00016146 740C                            je .L_false
 29476 00016148 48B8-                           mov rax, sob_boolean_true
 29476 0001614A [0300000000000000] 
 29477 00016152 EB0A                            jmp .L_end
 29478                                  .L_false:
 29479 00016154 48B8-                           mov rax, sob_boolean_false
 29479 00016156 [0200000000000000] 
 29480                                  .L_end:
 29481 0001615E C9                              leave
 29482 0001615F C21800                          ret AND_KILL_FRAME(1)
 29483                                  
 29484                                  L_code_ptr_cons:
 29485 00016162 C8000000                        enter 0, 0
 29486 00016166 48837D1802                      cmp COUNT, 2
 29487 0001616B 0F853C0F0000                    jne L_error_arg_count_2
 29488 00016171 BF11000000                      mov rdi, (1 + 8 + 8)
 29489 00016176 E826F2FFFF                      call malloc
 29490 0001617B C60021                          mov byte [rax], T_pair
 29491 0001617E 488B5D20                        mov rbx, PARAM(0)
 29492 00016182 48895801                        mov SOB_PAIR_CAR(rax), rbx
 29493 00016186 488B5D28                        mov rbx, PARAM(1)
 29494 0001618A 48895809                        mov SOB_PAIR_CDR(rax), rbx
 29495 0001618E C9                              leave
 29496 0001618F C22000                          ret AND_KILL_FRAME(2)
 29497                                  
 29498                                  L_code_ptr_display_sexpr:
 29499 00016192 C8000000                        enter 0, 0
 29500 00016196 48837D1801                      cmp COUNT, 1
 29501 0001619B 0F85D70E0000                    jne L_error_arg_count_1
 29502 000161A1 488B7D20                        mov rdi, PARAM(0)
 29503 000161A5 E878F4FFFF                      call print_sexpr
 29504 000161AA 48B8-                           mov rax, sob_void
 29504 000161AC [0000000000000000] 
 29505 000161B4 C9                              leave
 29506 000161B5 C21800                          ret AND_KILL_FRAME(1)
 29507                                  
 29508                                  L_code_ptr_write_char:
 29509 000161B8 C8000000                        enter 0, 0
 29510 000161BC 48837D1801                      cmp COUNT, 1
 29511 000161C1 0F85B10E0000                    jne L_error_arg_count_1
 29512 000161C7 488B4520                        mov rax, PARAM(0)
 29513                                          assert_char(rax)
    53 000161CB 803802              <1>  cmp byte [%1], %2
    54 000161CE 0F85780F0000        <1>  jne L_error_incorrect_type
 29514 000161D4 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 29515 000161D7 4825FF000000                    and rax, 255
 29516 000161DD 48BF-                           mov rdi, fmt_char
 29516 000161DF [AF1A000000000000] 
 29517 000161E7 4889C6                          mov rsi, rax
 29518 000161EA B800000000                      mov rax, 0
 29519                                          ENTER
    44 000161EF C8000000            <1>  enter 0, 0
    45 000161F3 4883E4F0            <1>  and rsp, ~15
 29520 000161F7 E8(00000000)                    call printf
 29521                                          LEAVE
    49 000161FC C9                  <1>  leave
 29522 000161FD 48B8-                           mov rax, sob_void
 29522 000161FF [0000000000000000] 
 29523 00016207 C9                              leave
 29524 00016208 C21800                          ret AND_KILL_FRAME(1)
 29525                                  
 29526                                  L_code_ptr_car:
 29527 0001620B C8000000                        enter 0, 0
 29528 0001620F 48837D1801                      cmp COUNT, 1
 29529 00016214 0F855E0E0000                    jne L_error_arg_count_1
 29530 0001621A 488B4520                        mov rax, PARAM(0)
 29531                                          assert_pair(rax)
    53 0001621E 803821              <1>  cmp byte [%1], %2
    54 00016221 0F85250F0000        <1>  jne L_error_incorrect_type
 29532 00016227 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 29533 0001622B C9                              leave
 29534 0001622C C21800                          ret AND_KILL_FRAME(1)
 29535                                          
 29536                                  L_code_ptr_cdr:
 29537 0001622F C8000000                        enter 0, 0
 29538 00016233 48837D1801                      cmp COUNT, 1
 29539 00016238 0F853A0E0000                    jne L_error_arg_count_1
 29540 0001623E 488B4520                        mov rax, PARAM(0)
 29541                                          assert_pair(rax)
    53 00016242 803821              <1>  cmp byte [%1], %2
    54 00016245 0F85010F0000        <1>  jne L_error_incorrect_type
 29542 0001624B 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 29543 0001624F C9                              leave
 29544 00016250 C21800                          ret AND_KILL_FRAME(1)
 29545                                          
 29546                                  L_code_ptr_string_length:
 29547 00016253 C8000000                        enter 0, 0
 29548 00016257 48837D1801                      cmp COUNT, 1
 29549 0001625C 0F85160E0000                    jne L_error_arg_count_1
 29550 00016262 488B4520                        mov rax, PARAM(0)
 29551                                          assert_string(rax)
    53 00016266 803803              <1>  cmp byte [%1], %2
    54 00016269 0F85DD0E0000        <1>  jne L_error_incorrect_type
 29552 0001626F 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 29553 00016273 E84F0D0000                      call make_integer
 29554 00016278 C9                              leave
 29555 00016279 C21800                          ret AND_KILL_FRAME(1)
 29556                                  
 29557                                  L_code_ptr_vector_length:
 29558 0001627C C8000000                        enter 0, 0
 29559 00016280 48837D1801                      cmp COUNT, 1
 29560 00016285 0F85ED0D0000                    jne L_error_arg_count_1
 29561 0001628B 488B4520                        mov rax, PARAM(0)
 29562                                          assert_vector(rax)
    53 0001628F 803822              <1>  cmp byte [%1], %2
    54 00016292 0F85B40E0000        <1>  jne L_error_incorrect_type
 29563 00016298 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 29564 0001629C E8260D0000                      call make_integer
 29565 000162A1 C9                              leave
 29566 000162A2 C21800                          ret AND_KILL_FRAME(1)
 29567                                  
 29568                                  L_code_ptr_real_to_integer:
 29569 000162A5 C8000000                        enter 0, 0
 29570 000162A9 48837D1801                      cmp COUNT, 1
 29571 000162AE 0F85C40D0000                    jne L_error_arg_count_1
 29572 000162B4 488B5D20                        mov rbx, PARAM(0)
 29573                                          assert_real(rbx)
    53 000162B8 803B13              <1>  cmp byte [%1], %2
    54 000162BB 0F858B0E0000        <1>  jne L_error_incorrect_type
 29574 000162C1 F20F104301                      movsd xmm0, qword [rbx + 1]
 29575 000162C6 F2480F2CF8                      cvttsd2si rdi, xmm0
 29576 000162CB E8F70C0000                      call make_integer
 29577 000162D0 C9                              leave
 29578 000162D1 C21800                          ret AND_KILL_FRAME(1)
 29579                                  
 29580                                  L_code_ptr_exit:
 29581 000162D4 C8000000                        enter 0, 0
 29582 000162D8 48837D1800                      cmp COUNT, 0
 29583 000162DD 0F85600D0000                    jne L_error_arg_count_0
 29584 000162E3 B800000000                      mov rax, 0
 29585 000162E8 E8(00000000)                    call exit
 29586                                  
 29587                                  L_code_ptr_integer_to_real:
 29588 000162ED C8000000                        enter 0, 0
 29589 000162F1 48837D1801                      cmp COUNT, 1
 29590 000162F6 0F857C0D0000                    jne L_error_arg_count_1
 29591 000162FC 488B4520                        mov rax, PARAM(0)
 29592                                          assert_integer(rax)
    53 00016300 803811              <1>  cmp byte [%1], %2
    54 00016303 0F85430E0000        <1>  jne L_error_incorrect_type
 29593 00016309 FF7001                          push qword [rax + 1]
 29594 0001630C F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 29595 00016312 E8980C0000                      call make_real
 29596 00016317 C9                              leave
 29597 00016318 C21800                          ret AND_KILL_FRAME(1)
 29598                                  
 29599                                  L_code_ptr_fraction_to_real:
 29600 0001631B C8000000                        enter 0, 0
 29601 0001631F 48837D1801                      cmp COUNT, 1
 29602 00016324 0F854E0D0000                    jne L_error_arg_count_1
 29603 0001632A 488B4520                        mov rax, PARAM(0)
 29604                                          assert_fraction(rax)
    53 0001632E 803812              <1>  cmp byte [%1], %2
    54 00016331 0F85150E0000        <1>  jne L_error_incorrect_type
 29605 00016337 FF7001                          push qword [rax + 1]
 29606 0001633A F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 29607 00016340 FF7009                          push qword [rax + 1 + 8]
 29608 00016343 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 29609 00016349 F20F5EC1                        divsd xmm0, xmm1
 29610 0001634D E85D0C0000                      call make_real
 29611 00016352 C9                              leave
 29612 00016353 C21800                          ret AND_KILL_FRAME(1)
 29613                                  
 29614                                  L_code_ptr_char_to_integer:
 29615 00016356 C8000000                        enter 0, 0
 29616 0001635A 48837D1801                      cmp COUNT, 1
 29617 0001635F 0F85130D0000                    jne L_error_arg_count_1
 29618 00016365 488B4520                        mov rax, PARAM(0)
 29619                                          assert_char(rax)
    53 00016369 803802              <1>  cmp byte [%1], %2
    54 0001636C 0F85DA0D0000        <1>  jne L_error_incorrect_type
 29620 00016372 8A4001                          mov al, byte [rax + 1]
 29621 00016375 4825FF000000                    and rax, 255
 29622 0001637B 4889C7                          mov rdi, rax
 29623 0001637E E8440C0000                      call make_integer
 29624 00016383 C9                              leave
 29625 00016384 C21800                          ret AND_KILL_FRAME(1)
 29626                                  
 29627                                  L_code_ptr_integer_to_fraction:
 29628 00016387 C8000000                        enter 0, 0
 29629 0001638B 48837D1801                      cmp COUNT, 1
 29630 00016390 0F85E20C0000                    jne L_error_arg_count_1
 29631 00016396 4C8B4520                        mov r8, PARAM(0)
 29632                                          assert_integer(r8)
    53 0001639A 41803811            <1>  cmp byte [%1], %2
    54 0001639E 0F85A80D0000        <1>  jne L_error_incorrect_type
 29633 000163A4 BF11000000                      mov rdi, (1 + 8 + 8)
 29634 000163A9 E8F3EFFFFF                      call malloc
 29635 000163AE 498B5801                        mov rbx, qword [r8 + 1]
 29636 000163B2 C60012                          mov byte [rax], T_fraction
 29637 000163B5 48895801                        mov qword [rax + 1], rbx
 29638 000163B9 48C7400901000000                mov qword [rax + 1 + 8], 1
 29639 000163C1 C9                              leave
 29640 000163C2 C21800                          ret AND_KILL_FRAME(1)
 29641                                  
 29642                                  L_code_ptr_integer_to_char:
 29643 000163C5 C8000000                        enter 0, 0
 29644 000163C9 48837D1801                      cmp COUNT, 1
 29645 000163CE 0F85A40C0000                    jne L_error_arg_count_1
 29646 000163D4 488B4520                        mov rax, PARAM(0)
 29647                                          assert_integer(rax)
    53 000163D8 803811              <1>  cmp byte [%1], %2
    54 000163DB 0F856B0D0000        <1>  jne L_error_incorrect_type
 29648 000163E1 488B5801                        mov rbx, qword [rax + 1]
 29649 000163E5 4883FB00                        cmp rbx, 0
 29650 000163E9 0F8EF20B0000                    jle L_error_integer_range
 29651 000163EF 4881FB00010000                  cmp rbx, 256
 29652 000163F6 0F8DE50B0000                    jge L_error_integer_range
 29653 000163FC BF02000000                      mov rdi, (1 + 1)
 29654 00016401 E89BEFFFFF                      call malloc
 29655 00016406 C60002                          mov byte [rax], T_char
 29656 00016409 885801                          mov byte [rax + 1], bl
 29657 0001640C C9                              leave
 29658 0001640D C21800                          ret AND_KILL_FRAME(1)
 29659                                  
 29660                                  L_code_ptr_trng:
 29661 00016410 C8000000                        enter 0, 0
 29662 00016414 48837D1800                      cmp COUNT, 0
 29663 00016419 0F85240C0000                    jne L_error_arg_count_0
 29664 0001641F 480FC7F7                        rdrand rdi
 29665 00016423 48D1EF                          shr rdi, 1
 29666 00016426 E89C0B0000                      call make_integer
 29667 0001642B C9                              leave
 29668 0001642C C21000                          ret AND_KILL_FRAME(0)
 29669                                  
 29670                                  L_code_ptr_is_zero:
 29671 0001642F C8000000                        enter 0, 0
 29672 00016433 48837D1801                      cmp COUNT, 1
 29673 00016438 0F853A0C0000                    jne L_error_arg_count_1
 29674 0001643E 488B4520                        mov rax, PARAM(0)
 29675 00016442 803811                          cmp byte [rax], T_integer
 29676 00016445 740F                            je .L_integer
 29677 00016447 803812                          cmp byte [rax], T_fraction
 29678 0001644A 7413                            je .L_fraction
 29679 0001644C 803813                          cmp byte [rax], T_real
 29680 0001644F 7417                            je .L_real
 29681 00016451 E9F60C0000                      jmp L_error_incorrect_type
 29682                                  .L_integer:
 29683 00016456 4883780100                      cmp qword [rax + 1], 0
 29684 0001645B 7429                            je .L_zero
 29685 0001645D EB1B                            jmp .L_not_zero
 29686                                  .L_fraction:
 29687 0001645F 4883780100                      cmp qword [rax + 1], 0
 29688 00016464 7420                            je .L_zero
 29689 00016466 EB12                            jmp .L_not_zero
 29690                                  .L_real:
 29691 00016468 660FEFC0                        pxor xmm0, xmm0
 29692 0001646C FF7001                          push qword [rax + 1]
 29693 0001646F F20F100C24                      movsd xmm1, qword [rsp]
 29694 00016474 660F2EC1                        ucomisd xmm0, xmm1
 29695 00016478 740C                            je .L_zero
 29696                                  .L_not_zero:
 29697 0001647A 48B8-                           mov rax, sob_boolean_false
 29697 0001647C [0200000000000000] 
 29698 00016484 EB0A                            jmp .L_end
 29699                                  .L_zero:
 29700 00016486 48B8-                           mov rax, sob_boolean_true
 29700 00016488 [0300000000000000] 
 29701                                  .L_end:
 29702 00016490 C9                              leave
 29703 00016491 C21800                          ret AND_KILL_FRAME(1)
 29704                                  
 29705                                  L_code_ptr_is_integer:
 29706 00016494 C8000000                        enter 0, 0
 29707 00016498 48837D1801                      cmp COUNT, 1
 29708 0001649D 0F85D50B0000                    jne L_error_arg_count_1
 29709 000164A3 488B4520                        mov rax, PARAM(0)
 29710 000164A7 803811                          cmp byte [rax], T_integer
 29711 000164AA 750C                            jne .L_false
 29712 000164AC 48B8-                           mov rax, sob_boolean_true
 29712 000164AE [0300000000000000] 
 29713 000164B6 EB0A                            jmp .L_exit
 29714                                  .L_false:
 29715 000164B8 48B8-                           mov rax, sob_boolean_false
 29715 000164BA [0200000000000000] 
 29716                                  .L_exit:
 29717 000164C2 C9                              leave
 29718 000164C3 C21800                          ret AND_KILL_FRAME(1)
 29719                                  
 29720                                  L_code_ptr_raw_bin_add_rr:
 29721 000164C6 C8000000                        enter 0, 0
 29722 000164CA 48837D1802                      cmp COUNT, 2
 29723 000164CF 0F85D80B0000                    jne L_error_arg_count_2
 29724 000164D5 488B5D20                        mov rbx, PARAM(0)
 29725                                          assert_real(rbx)
    53 000164D9 803B13              <1>  cmp byte [%1], %2
    54 000164DC 0F856A0C0000        <1>  jne L_error_incorrect_type
 29726 000164E2 488B4D28                        mov rcx, PARAM(1)
 29727                                          assert_real(rcx)
    53 000164E6 803913              <1>  cmp byte [%1], %2
    54 000164E9 0F855D0C0000        <1>  jne L_error_incorrect_type
 29728 000164EF F20F104301                      movsd xmm0, qword [rbx + 1]
 29729 000164F4 F20F104901                      movsd xmm1, qword [rcx + 1]
 29730 000164F9 F20F58C1                        addsd xmm0, xmm1
 29731 000164FD E8AD0A0000                      call make_real
 29732 00016502 C9                              leave
 29733 00016503 C22000                          ret AND_KILL_FRAME(2)
 29734                                  
 29735                                  L_code_ptr_raw_bin_sub_rr:
 29736 00016506 C8000000                        enter 0, 0
 29737 0001650A 48837D1802                      cmp COUNT, 2
 29738 0001650F 0F85980B0000                    jne L_error_arg_count_2
 29739 00016515 488B5D20                        mov rbx, PARAM(0)
 29740                                          assert_real(rbx)
    53 00016519 803B13              <1>  cmp byte [%1], %2
    54 0001651C 0F852A0C0000        <1>  jne L_error_incorrect_type
 29741 00016522 488B4D28                        mov rcx, PARAM(1)
 29742                                          assert_real(rcx)
    53 00016526 803913              <1>  cmp byte [%1], %2
    54 00016529 0F851D0C0000        <1>  jne L_error_incorrect_type
 29743 0001652F F20F104301                      movsd xmm0, qword [rbx + 1]
 29744 00016534 F20F104901                      movsd xmm1, qword [rcx + 1]
 29745 00016539 F20F5CC1                        subsd xmm0, xmm1
 29746 0001653D E86D0A0000                      call make_real
 29747 00016542 C9                              leave
 29748 00016543 C22000                          ret AND_KILL_FRAME(2)
 29749                                  
 29750                                  L_code_ptr_raw_bin_mul_rr:
 29751 00016546 C8000000                        enter 0, 0
 29752 0001654A 48837D1802                      cmp COUNT, 2
 29753 0001654F 0F85580B0000                    jne L_error_arg_count_2
 29754 00016555 488B5D20                        mov rbx, PARAM(0)
 29755                                          assert_real(rbx)
    53 00016559 803B13              <1>  cmp byte [%1], %2
    54 0001655C 0F85EA0B0000        <1>  jne L_error_incorrect_type
 29756 00016562 488B4D28                        mov rcx, PARAM(1)
 29757                                          assert_real(rcx)
    53 00016566 803913              <1>  cmp byte [%1], %2
    54 00016569 0F85DD0B0000        <1>  jne L_error_incorrect_type
 29758 0001656F F20F104301                      movsd xmm0, qword [rbx + 1]
 29759 00016574 F20F104901                      movsd xmm1, qword [rcx + 1]
 29760 00016579 F20F59C1                        mulsd xmm0, xmm1
 29761 0001657D E82D0A0000                      call make_real
 29762 00016582 C9                              leave
 29763 00016583 C22000                          ret AND_KILL_FRAME(2)
 29764                                  
 29765                                  L_code_ptr_raw_bin_div_rr:
 29766 00016586 C8000000                        enter 0, 0
 29767 0001658A 48837D1802                      cmp COUNT, 2
 29768 0001658F 0F85180B0000                    jne L_error_arg_count_2
 29769 00016595 488B5D20                        mov rbx, PARAM(0)
 29770                                          assert_real(rbx)
    53 00016599 803B13              <1>  cmp byte [%1], %2
    54 0001659C 0F85AA0B0000        <1>  jne L_error_incorrect_type
 29771 000165A2 488B4D28                        mov rcx, PARAM(1)
 29772                                          assert_real(rcx)
    53 000165A6 803913              <1>  cmp byte [%1], %2
    54 000165A9 0F859D0B0000        <1>  jne L_error_incorrect_type
 29773 000165AF F20F104301                      movsd xmm0, qword [rbx + 1]
 29774 000165B4 F20F104901                      movsd xmm1, qword [rcx + 1]
 29775 000165B9 660FEFD2                        pxor xmm2, xmm2
 29776 000165BD 660F2ECA                        ucomisd xmm1, xmm2
 29777 000165C1 0F84B60B0000                    je L_error_division_by_zero
 29778 000165C7 F20F5EC1                        divsd xmm0, xmm1
 29779 000165CB E8DF090000                      call make_real
 29780 000165D0 C9                              leave
 29781 000165D1 C22000                          ret AND_KILL_FRAME(2)
 29782                                  
 29783                                  L_code_ptr_raw_bin_add_zz:
 29784 000165D4 C8000000                	enter 0, 0
 29785 000165D8 48837D1802              	cmp COUNT, 2
 29786 000165DD 0F85CA0A0000            	jne L_error_arg_count_2
 29787 000165E3 4C8B4520                	mov r8, PARAM(0)
 29788                                  	assert_integer(r8)
    53 000165E7 41803811            <1>  cmp byte [%1], %2
    54 000165EB 0F855B0B0000        <1>  jne L_error_incorrect_type
 29789 000165F1 4C8B4D28                	mov r9, PARAM(1)
 29790                                  	assert_integer(r9)
    53 000165F5 41803911            <1>  cmp byte [%1], %2
    54 000165F9 0F854D0B0000        <1>  jne L_error_incorrect_type
 29791 000165FF 498B7801                	mov rdi, qword [r8 + 1]
 29792 00016603 49037901                	add rdi, qword [r9 + 1]
 29793 00016607 E8BB090000              	call make_integer
 29794 0001660C C9                      	leave
 29795 0001660D C22000                  	ret AND_KILL_FRAME(2)
 29796                                  
 29797                                  L_code_ptr_raw_bin_add_qq:
 29798 00016610 C8000000                        enter 0, 0
 29799 00016614 48837D1802                      cmp COUNT, 2
 29800 00016619 0F858E0A0000                    jne L_error_arg_count_2
 29801 0001661F 4C8B4520                        mov r8, PARAM(0)
 29802                                          assert_fraction(r8)
    53 00016623 41803812            <1>  cmp byte [%1], %2
    54 00016627 0F851F0B0000        <1>  jne L_error_incorrect_type
 29803 0001662D 4C8B4D28                        mov r9, PARAM(1)
 29804                                          assert_fraction(r9)
    53 00016631 41803912            <1>  cmp byte [%1], %2
    54 00016635 0F85110B0000        <1>  jne L_error_incorrect_type
 29805 0001663B 498B4001                        mov rax, qword [r8 + 1] ; num1
 29806 0001663F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 29807 00016643 4899                            cqo
 29808 00016645 48F7EB                          imul rbx
 29809 00016648 4889C6                          mov rsi, rax
 29810 0001664B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29811 0001664F 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 29812 00016653 4899                            cqo
 29813 00016655 48F7EB                          imul rbx
 29814 00016658 4801C6                          add rsi, rax
 29815 0001665B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29816 0001665F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 29817 00016663 4899                            cqo
 29818 00016665 48F7EB                          imul rbx
 29819 00016668 4889C7                          mov rdi, rax
 29820 0001666B E8DE010000                      call normalize_fraction
 29821 00016670 C9                              leave
 29822 00016671 C22000                          ret AND_KILL_FRAME(2)
 29823                                  
 29824                                  L_code_ptr_raw_bin_sub_zz:
 29825 00016674 C8000000                	enter 0, 0
 29826 00016678 48837D1802              	cmp COUNT, 2
 29827 0001667D 0F852A0A0000            	jne L_error_arg_count_2
 29828 00016683 4C8B4520                	mov r8, PARAM(0)
 29829                                  	assert_integer(r8)
    53 00016687 41803811            <1>  cmp byte [%1], %2
    54 0001668B 0F85BB0A0000        <1>  jne L_error_incorrect_type
 29830 00016691 4C8B4D28                	mov r9, PARAM(1)
 29831                                  	assert_integer(r9)
    53 00016695 41803911            <1>  cmp byte [%1], %2
    54 00016699 0F85AD0A0000        <1>  jne L_error_incorrect_type
 29832 0001669F 498B7801                	mov rdi, qword [r8 + 1]
 29833 000166A3 492B7901                	sub rdi, qword [r9 + 1]
 29834 000166A7 E81B090000              	call make_integer
 29835 000166AC C9                      	leave
 29836 000166AD C22000                  	ret AND_KILL_FRAME(2)
 29837                                  
 29838                                  L_code_ptr_raw_bin_sub_qq:
 29839 000166B0 C8000000                        enter 0, 0
 29840 000166B4 48837D1802                      cmp COUNT, 2
 29841 000166B9 0F85EE090000                    jne L_error_arg_count_2
 29842 000166BF 4C8B4520                        mov r8, PARAM(0)
 29843                                          assert_fraction(r8)
    53 000166C3 41803812            <1>  cmp byte [%1], %2
    54 000166C7 0F857F0A0000        <1>  jne L_error_incorrect_type
 29844 000166CD 4C8B4D28                        mov r9, PARAM(1)
 29845                                          assert_fraction(r9)
    53 000166D1 41803912            <1>  cmp byte [%1], %2
    54 000166D5 0F85710A0000        <1>  jne L_error_incorrect_type
 29846 000166DB 498B4001                        mov rax, qword [r8 + 1] ; num1
 29847 000166DF 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 29848 000166E3 4899                            cqo
 29849 000166E5 48F7EB                          imul rbx
 29850 000166E8 4889C6                          mov rsi, rax
 29851 000166EB 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29852 000166EF 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 29853 000166F3 4899                            cqo
 29854 000166F5 48F7EB                          imul rbx
 29855 000166F8 4829C6                          sub rsi, rax
 29856 000166FB 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29857 000166FF 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 29858 00016703 4899                            cqo
 29859 00016705 48F7EB                          imul rbx
 29860 00016708 4889C7                          mov rdi, rax
 29861 0001670B E83E010000                      call normalize_fraction
 29862 00016710 C9                              leave
 29863 00016711 C22000                          ret AND_KILL_FRAME(2)
 29864                                  
 29865                                  L_code_ptr_raw_bin_mul_zz:
 29866 00016714 C8000000                	enter 0, 0
 29867 00016718 48837D1802              	cmp COUNT, 2
 29868 0001671D 0F858A090000            	jne L_error_arg_count_2
 29869 00016723 4C8B4520                	mov r8, PARAM(0)
 29870                                  	assert_integer(r8)
    53 00016727 41803811            <1>  cmp byte [%1], %2
    54 0001672B 0F851B0A0000        <1>  jne L_error_incorrect_type
 29871 00016731 4C8B4D28                	mov r9, PARAM(1)
 29872                                  	assert_integer(r9)
    53 00016735 41803911            <1>  cmp byte [%1], %2
    54 00016739 0F850D0A0000        <1>  jne L_error_incorrect_type
 29873 0001673F 4899                    	cqo
 29874 00016741 498B4001                	mov rax, qword [r8 + 1]
 29875 00016745 49F76101                	mul qword [r9 + 1]
 29876 00016749 4889C7                  	mov rdi, rax
 29877 0001674C E876080000              	call make_integer
 29878 00016751 C9                      	leave
 29879 00016752 C22000                  	ret AND_KILL_FRAME(2)
 29880                                  
 29881                                  L_code_ptr_raw_bin_mul_qq:
 29882 00016755 C8000000                        enter 0, 0
 29883 00016759 48837D1802                      cmp COUNT, 2
 29884 0001675E 0F8549090000                    jne L_error_arg_count_2
 29885 00016764 4C8B4520                        mov r8, PARAM(0)
 29886                                          assert_fraction(r8)
    53 00016768 41803812            <1>  cmp byte [%1], %2
    54 0001676C 0F85DA090000        <1>  jne L_error_incorrect_type
 29887 00016772 4C8B4D28                        mov r9, PARAM(1)
 29888                                          assert_fraction(r9)
    53 00016776 41803912            <1>  cmp byte [%1], %2
    54 0001677A 0F85CC090000        <1>  jne L_error_incorrect_type
 29889 00016780 498B4001                        mov rax, qword [r8 + 1] ; num1
 29890 00016784 498B5901                        mov rbx, qword [r9 + 1] ; num2
 29891 00016788 4899                            cqo
 29892 0001678A 48F7EB                          imul rbx
 29893 0001678D 4889C6                          mov rsi, rax
 29894 00016790 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29895 00016794 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 29896 00016798 4899                            cqo
 29897 0001679A 48F7EB                          imul rbx
 29898 0001679D 4889C7                          mov rdi, rax
 29899 000167A0 E8A9000000                      call normalize_fraction
 29900 000167A5 C9                              leave
 29901 000167A6 C22000                          ret AND_KILL_FRAME(2)
 29902                                          
 29903                                  L_code_ptr_raw_bin_div_zz:
 29904 000167A9 C8000000                	enter 0, 0
 29905 000167AD 48837D1802              	cmp COUNT, 2
 29906 000167B2 0F85F5080000            	jne L_error_arg_count_2
 29907 000167B8 4C8B4520                	mov r8, PARAM(0)
 29908                                  	assert_integer(r8)
    53 000167BC 41803811            <1>  cmp byte [%1], %2
    54 000167C0 0F8586090000        <1>  jne L_error_incorrect_type
 29909 000167C6 4C8B4D28                	mov r9, PARAM(1)
 29910                                  	assert_integer(r9)
    53 000167CA 41803911            <1>  cmp byte [%1], %2
    54 000167CE 0F8578090000        <1>  jne L_error_incorrect_type
 29911 000167D4 498B7901                	mov rdi, qword [r9 + 1]
 29912 000167D8 4883FF00                	cmp rdi, 0
 29913 000167DC 0F849B090000            	je L_error_division_by_zero
 29914 000167E2 498B7001                	mov rsi, qword [r8 + 1]
 29915 000167E6 E863000000              	call normalize_fraction
 29916 000167EB C9                      	leave
 29917 000167EC C22000                  	ret AND_KILL_FRAME(2)
 29918                                  
 29919                                  L_code_ptr_raw_bin_div_qq:
 29920 000167EF C8000000                        enter 0, 0
 29921 000167F3 48837D1802                      cmp COUNT, 2
 29922 000167F8 0F85AF080000                    jne L_error_arg_count_2
 29923 000167FE 4C8B4520                        mov r8, PARAM(0)
 29924                                          assert_fraction(r8)
    53 00016802 41803812            <1>  cmp byte [%1], %2
    54 00016806 0F8540090000        <1>  jne L_error_incorrect_type
 29925 0001680C 4C8B4D28                        mov r9, PARAM(1)
 29926                                          assert_fraction(r9)
    53 00016810 41803912            <1>  cmp byte [%1], %2
    54 00016814 0F8532090000        <1>  jne L_error_incorrect_type
 29927 0001681A 4983790100                      cmp qword [r9 + 1], 0
 29928 0001681F 0F8458090000                    je L_error_division_by_zero
 29929 00016825 498B4001                        mov rax, qword [r8 + 1] ; num1
 29930 00016829 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 29931 0001682D 4899                            cqo
 29932 0001682F 48F7EB                          imul rbx
 29933 00016832 4889C6                          mov rsi, rax
 29934 00016835 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 29935 00016839 498B5901                        mov rbx, qword [r9 + 1] ; num2
 29936 0001683D 4899                            cqo
 29937 0001683F 48F7EB                          imul rbx
 29938 00016842 4889C7                          mov rdi, rax
 29939 00016845 E804000000                      call normalize_fraction
 29940 0001684A C9                              leave
 29941 0001684B C22000                          ret AND_KILL_FRAME(2)
 29942                                          
 29943                                  normalize_fraction:
 29944 0001684E 56                              push rsi
 29945 0001684F 57                              push rdi
 29946 00016850 E859000000                      call gcd
 29947 00016855 4889C3                          mov rbx, rax
 29948 00016858 58                              pop rax
 29949 00016859 4899                            cqo
 29950 0001685B 48F7FB                          idiv rbx
 29951 0001685E 4989C0                          mov r8, rax
 29952 00016861 58                              pop rax
 29953 00016862 4899                            cqo
 29954 00016864 48F7FB                          idiv rbx
 29955 00016867 4989C1                          mov r9, rax
 29956 0001686A 4983F900                        cmp r9, 0
 29957 0001686E 741C                            je .L_zero
 29958 00016870 4983F801                        cmp r8, 1
 29959 00016874 7421                            je .L_int
 29960 00016876 BF11000000                      mov rdi, (1 + 8 + 8)
 29961 0001687B E821EBFFFF                      call malloc
 29962 00016880 C60012                          mov byte [rax], T_fraction
 29963 00016883 4C894801                        mov qword [rax + 1], r9
 29964 00016887 4C894009                        mov qword [rax + 1 + 8], r8
 29965 0001688B C3                              ret
 29966                                  .L_zero:
 29967 0001688C BF00000000                      mov rdi, 0
 29968 00016891 E831070000                      call make_integer
 29969 00016896 C3                              ret
 29970                                  .L_int:
 29971 00016897 4C89CF                          mov rdi, r9
 29972 0001689A E828070000                      call make_integer
 29973 0001689F C3                              ret
 29974                                  
 29975                                  iabs:
 29976 000168A0 4889F8                          mov rax, rdi
 29977 000168A3 4883F800                        cmp rax, 0
 29978 000168A7 7C01                            jl .Lneg
 29979 000168A9 C3                              ret
 29980                                  .Lneg:
 29981 000168AA 48F7D8                          neg rax
 29982 000168AD C3                              ret
 29983                                  
 29984                                  gcd:
 29985 000168AE E8EDFFFFFF                      call iabs
 29986 000168B3 4889C3                          mov rbx, rax
 29987 000168B6 4889F7                          mov rdi, rsi
 29988 000168B9 E8E2FFFFFF                      call iabs
 29989 000168BE 4883F800                        cmp rax, 0
 29990 000168C2 7502                            jne .L0
 29991 000168C4 4893                            xchg rax, rbx
 29992                                  .L0:
 29993 000168C6 4883FB00                        cmp rbx, 0
 29994 000168CA 740C                            je .L1
 29995 000168CC 4899                            cqo
 29996 000168CE 48F7F3                          div rbx
 29997 000168D1 4889D0                          mov rax, rdx
 29998 000168D4 4893                            xchg rax, rbx
 29999 000168D6 EBEE                            jmp .L0
 30000                                  .L1:
 30001 000168D8 C3                              ret
 30002                                  
 30003                                  L_code_ptr_error:
 30004 000168D9 C8000000                        enter 0, 0
 30005 000168DD 48837D1802                      cmp COUNT, 2
 30006 000168E2 0F85C5070000                    jne L_error_arg_count_2
 30007 000168E8 488B7520                        mov rsi, PARAM(0)
 30008                                          assert_interned_symbol(rsi)
    53 000168EC 803E41              <1>  cmp byte [%1], %2
    54 000168EF 0F8557080000        <1>  jne L_error_incorrect_type
 30009 000168F5 488B7528                        mov rsi, PARAM(1)
 30010                                          assert_string(rsi)
    53 000168F9 803E03              <1>  cmp byte [%1], %2
    54 000168FC 0F854A080000        <1>  jne L_error_incorrect_type
 30011 00016902 48BF-                           mov rdi, fmt_scheme_error_part_1
 30011 00016904 [0D1C000000000000] 
 30012 0001690C B800000000                      mov rax, 0
 30013                                          ENTER
    44 00016911 C8000000            <1>  enter 0, 0
    45 00016915 4883E4F0            <1>  and rsp, ~15
 30014 00016919 E8(00000000)                    call printf
 30015                                          LEAVE
    49 0001691E C9                  <1>  leave
 30016 0001691F 488B7D20                        mov rdi, PARAM(0)
 30017 00016923 E8FAECFFFF                      call print_sexpr
 30018 00016928 48BF-                           mov rdi, fmt_scheme_error_part_2
 30018 0001692A [211C000000000000] 
 30019 00016932 B800000000                      mov rax, 0
 30020                                          ENTER
    44 00016937 C8000000            <1>  enter 0, 0
    45 0001693B 4883E4F0            <1>  and rsp, ~15
 30021 0001693F E8(00000000)                    call printf
 30022                                          LEAVE
    49 00016944 C9                  <1>  leave
 30023 00016945 488B4528                        mov rax, PARAM(1)       ; sob_string
 30024 00016949 BE01000000                      mov rsi, 1              ; size = 1 byte
 30025 0001694E 488B5001                        mov rdx, qword [rax + 1] ; length
 30026 00016952 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 30027 00016956 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 30028                                  	ENTER
    44 0001695E C8000000            <1>  enter 0, 0
    45 00016962 4883E4F0            <1>  and rsp, ~15
 30029 00016966 E8(00000000)                    call fwrite
 30030                                  	LEAVE
    49 0001696B C9                  <1>  leave
 30031 0001696C 48BF-                           mov rdi, fmt_scheme_error_part_3
 30031 0001696E [631C000000000000] 
 30032 00016976 B800000000                      mov rax, 0
 30033                                          ENTER
    44 0001697B C8000000            <1>  enter 0, 0
    45 0001697F 4883E4F0            <1>  and rsp, ~15
 30034 00016983 E8(00000000)                    call printf
 30035                                          LEAVE
    49 00016988 C9                  <1>  leave
 30036 00016989 48C7C0F7FFFFFF                  mov rax, -9
 30037 00016990 E8(00000000)                    call exit
 30038                                  
 30039                                  L_code_ptr_raw_less_than_rr:
 30040 00016995 C8000000                        enter 0, 0
 30041 00016999 48837D1802                      cmp COUNT, 2
 30042 0001699E 0F8509070000                    jne L_error_arg_count_2
 30043 000169A4 488B7520                        mov rsi, PARAM(0)
 30044                                          assert_real(rsi)
    53 000169A8 803E13              <1>  cmp byte [%1], %2
    54 000169AB 0F859B070000        <1>  jne L_error_incorrect_type
 30045 000169B1 488B7D28                        mov rdi, PARAM(1)
 30046                                          assert_real(rdi)
    53 000169B5 803F13              <1>  cmp byte [%1], %2
    54 000169B8 0F858E070000        <1>  jne L_error_incorrect_type
 30047 000169BE F20F104601                      movsd xmm0, qword [rsi + 1]
 30048 000169C3 F20F104F01                      movsd xmm1, qword [rdi + 1]
 30049 000169C8 660F2FC1                        comisd xmm0, xmm1
 30050 000169CC 730C                            jae .L_false
 30051 000169CE 48B8-                           mov rax, sob_boolean_true
 30051 000169D0 [0300000000000000] 
 30052 000169D8 EB0A                            jmp .L_exit
 30053                                  .L_false:
 30054 000169DA 48B8-                           mov rax, sob_boolean_false
 30054 000169DC [0200000000000000] 
 30055                                  .L_exit:
 30056 000169E4 C9                              leave
 30057 000169E5 C22000                          ret AND_KILL_FRAME(2)
 30058                                          
 30059                                  L_code_ptr_raw_less_than_zz:
 30060 000169E8 C8000000                	enter 0, 0
 30061 000169EC 48837D1802              	cmp COUNT, 2
 30062 000169F1 0F85B6060000            	jne L_error_arg_count_2
 30063 000169F7 4C8B4520                	mov r8, PARAM(0)
 30064                                  	assert_integer(r8)
    53 000169FB 41803811            <1>  cmp byte [%1], %2
    54 000169FF 0F8547070000        <1>  jne L_error_incorrect_type
 30065 00016A05 4C8B4D28                	mov r9, PARAM(1)
 30066                                  	assert_integer(r9)
    53 00016A09 41803911            <1>  cmp byte [%1], %2
    54 00016A0D 0F8539070000        <1>  jne L_error_incorrect_type
 30067 00016A13 498B7801                	mov rdi, qword [r8 + 1]
 30068 00016A17 493B7901                	cmp rdi, qword [r9 + 1]
 30069 00016A1B 7D0C                    	jge .L_false
 30070 00016A1D 48B8-                   	mov rax, sob_boolean_true
 30070 00016A1F [0300000000000000] 
 30071 00016A27 EB0A                    	jmp .L_exit
 30072                                  .L_false:
 30073 00016A29 48B8-                   	mov rax, sob_boolean_false
 30073 00016A2B [0200000000000000] 
 30074                                  .L_exit:
 30075 00016A33 C9                      	leave
 30076 00016A34 C22000                  	ret AND_KILL_FRAME(2)
 30077                                  
 30078                                  L_code_ptr_raw_less_than_qq:
 30079 00016A37 C8000000                        enter 0, 0
 30080 00016A3B 48837D1802                      cmp COUNT, 2
 30081 00016A40 0F8567060000                    jne L_error_arg_count_2
 30082 00016A46 488B7520                        mov rsi, PARAM(0)
 30083                                          assert_fraction(rsi)
    53 00016A4A 803E12              <1>  cmp byte [%1], %2
    54 00016A4D 0F85F9060000        <1>  jne L_error_incorrect_type
 30084 00016A53 488B7D28                        mov rdi, PARAM(1)
 30085                                          assert_fraction(rdi)
    53 00016A57 803F12              <1>  cmp byte [%1], %2
    54 00016A5A 0F85EC060000        <1>  jne L_error_incorrect_type
 30086 00016A60 488B4601                        mov rax, qword [rsi + 1] ; num1
 30087 00016A64 4899                            cqo
 30088 00016A66 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 30089 00016A6A 4889C1                          mov rcx, rax
 30090 00016A6D 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 30091 00016A71 4899                            cqo
 30092 00016A73 48F76F01                        imul qword [rdi + 1]          ; num2
 30093 00016A77 4829C1                          sub rcx, rax
 30094 00016A7A 7D0C                            jge .L_false
 30095 00016A7C 48B8-                           mov rax, sob_boolean_true
 30095 00016A7E [0300000000000000] 
 30096 00016A86 EB0A                            jmp .L_exit
 30097                                  .L_false:
 30098 00016A88 48B8-                           mov rax, sob_boolean_false
 30098 00016A8A [0200000000000000] 
 30099                                  .L_exit:
 30100 00016A92 C9                              leave
 30101 00016A93 C22000                          ret AND_KILL_FRAME(2)
 30102                                  
 30103                                  L_code_ptr_raw_equal_rr:
 30104 00016A96 C8000000                        enter 0, 0
 30105 00016A9A 48837D1802                      cmp COUNT, 2
 30106 00016A9F 0F8508060000                    jne L_error_arg_count_2
 30107 00016AA5 488B7520                        mov rsi, PARAM(0)
 30108                                          assert_real(rsi)
    53 00016AA9 803E13              <1>  cmp byte [%1], %2
    54 00016AAC 0F859A060000        <1>  jne L_error_incorrect_type
 30109 00016AB2 488B7D28                        mov rdi, PARAM(1)
 30110                                          assert_real(rdi)
    53 00016AB6 803F13              <1>  cmp byte [%1], %2
    54 00016AB9 0F858D060000        <1>  jne L_error_incorrect_type
 30111 00016ABF F20F104601                      movsd xmm0, qword [rsi + 1]
 30112 00016AC4 F20F104F01                      movsd xmm1, qword [rdi + 1]
 30113 00016AC9 660F2FC1                        comisd xmm0, xmm1
 30114 00016ACD 750C                            jne .L_false
 30115 00016ACF 48B8-                           mov rax, sob_boolean_true
 30115 00016AD1 [0300000000000000] 
 30116 00016AD9 EB0A                            jmp .L_exit
 30117                                  .L_false:
 30118 00016ADB 48B8-                           mov rax, sob_boolean_false
 30118 00016ADD [0200000000000000] 
 30119                                  .L_exit:
 30120 00016AE5 C9                              leave
 30121 00016AE6 C22000                          ret AND_KILL_FRAME(2)
 30122                                          
 30123                                  L_code_ptr_raw_equal_zz:
 30124 00016AE9 C8000000                	enter 0, 0
 30125 00016AED 48837D1802              	cmp COUNT, 2
 30126 00016AF2 0F85B5050000            	jne L_error_arg_count_2
 30127 00016AF8 4C8B4520                	mov r8, PARAM(0)
 30128                                  	assert_integer(r8)
    53 00016AFC 41803811            <1>  cmp byte [%1], %2
    54 00016B00 0F8546060000        <1>  jne L_error_incorrect_type
 30129 00016B06 4C8B4D28                	mov r9, PARAM(1)
 30130                                  	assert_integer(r9)
    53 00016B0A 41803911            <1>  cmp byte [%1], %2
    54 00016B0E 0F8538060000        <1>  jne L_error_incorrect_type
 30131 00016B14 498B7801                	mov rdi, qword [r8 + 1]
 30132 00016B18 493B7901                	cmp rdi, qword [r9 + 1]
 30133 00016B1C 750C                    	jne .L_false
 30134 00016B1E 48B8-                   	mov rax, sob_boolean_true
 30134 00016B20 [0300000000000000] 
 30135 00016B28 EB0A                    	jmp .L_exit
 30136                                  .L_false:
 30137 00016B2A 48B8-                   	mov rax, sob_boolean_false
 30137 00016B2C [0200000000000000] 
 30138                                  .L_exit:
 30139 00016B34 C9                      	leave
 30140 00016B35 C22000                  	ret AND_KILL_FRAME(2)
 30141                                  
 30142                                  L_code_ptr_raw_equal_qq:
 30143 00016B38 C8000000                        enter 0, 0
 30144 00016B3C 48837D1802                      cmp COUNT, 2
 30145 00016B41 0F8566050000                    jne L_error_arg_count_2
 30146 00016B47 488B7520                        mov rsi, PARAM(0)
 30147                                          assert_fraction(rsi)
    53 00016B4B 803E12              <1>  cmp byte [%1], %2
    54 00016B4E 0F85F8050000        <1>  jne L_error_incorrect_type
 30148 00016B54 488B7D28                        mov rdi, PARAM(1)
 30149                                          assert_fraction(rdi)
    53 00016B58 803F12              <1>  cmp byte [%1], %2
    54 00016B5B 0F85EB050000        <1>  jne L_error_incorrect_type
 30150 00016B61 488B4601                        mov rax, qword [rsi + 1] ; num1
 30151 00016B65 4899                            cqo
 30152 00016B67 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 30153 00016B6B 4889C1                          mov rcx, rax
 30154 00016B6E 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 30155 00016B72 4899                            cqo
 30156 00016B74 48F76F01                        imul qword [rdi + 1]          ; num2
 30157 00016B78 4829C1                          sub rcx, rax
 30158 00016B7B 750C                            jne .L_false
 30159 00016B7D 48B8-                           mov rax, sob_boolean_true
 30159 00016B7F [0300000000000000] 
 30160 00016B87 EB0A                            jmp .L_exit
 30161                                  .L_false:
 30162 00016B89 48B8-                           mov rax, sob_boolean_false
 30162 00016B8B [0200000000000000] 
 30163                                  .L_exit:
 30164 00016B93 C9                              leave
 30165 00016B94 C22000                          ret AND_KILL_FRAME(2)
 30166                                  
 30167                                  L_code_ptr_quotient:
 30168 00016B97 C8000000                        enter 0, 0
 30169 00016B9B 48837D1802                      cmp COUNT, 2
 30170 00016BA0 0F8507050000                    jne L_error_arg_count_2
 30171 00016BA6 488B7520                        mov rsi, PARAM(0)
 30172                                          assert_integer(rsi)
    53 00016BAA 803E11              <1>  cmp byte [%1], %2
    54 00016BAD 0F8599050000        <1>  jne L_error_incorrect_type
 30173 00016BB3 488B7D28                        mov rdi, PARAM(1)
 30174                                          assert_integer(rdi)
    53 00016BB7 803F11              <1>  cmp byte [%1], %2
    54 00016BBA 0F858C050000        <1>  jne L_error_incorrect_type
 30175 00016BC0 488B4601                        mov rax, qword [rsi + 1]
 30176 00016BC4 488B5F01                        mov rbx, qword [rdi + 1]
 30177 00016BC8 4883FB00                        cmp rbx, 0
 30178 00016BCC 0F84AB050000                    je L_error_division_by_zero
 30179 00016BD2 4899                            cqo
 30180 00016BD4 48F7FB                          idiv rbx
 30181 00016BD7 4889C7                          mov rdi, rax
 30182 00016BDA E8E8030000                      call make_integer
 30183 00016BDF C9                              leave
 30184 00016BE0 C22000                          ret AND_KILL_FRAME(2)
 30185                                          
 30186                                  L_code_ptr_remainder:
 30187 00016BE3 C8000000                        enter 0, 0
 30188 00016BE7 48837D1802                      cmp COUNT, 2
 30189 00016BEC 0F85BB040000                    jne L_error_arg_count_2
 30190 00016BF2 488B7520                        mov rsi, PARAM(0)
 30191                                          assert_integer(rsi)
    53 00016BF6 803E11              <1>  cmp byte [%1], %2
    54 00016BF9 0F854D050000        <1>  jne L_error_incorrect_type
 30192 00016BFF 488B7D28                        mov rdi, PARAM(1)
 30193                                          assert_integer(rdi)
    53 00016C03 803F11              <1>  cmp byte [%1], %2
    54 00016C06 0F8540050000        <1>  jne L_error_incorrect_type
 30194 00016C0C 488B4601                        mov rax, qword [rsi + 1]
 30195 00016C10 488B5F01                        mov rbx, qword [rdi + 1]
 30196 00016C14 4883FB00                        cmp rbx, 0
 30197 00016C18 0F845F050000                    je L_error_division_by_zero
 30198 00016C1E 4899                            cqo
 30199 00016C20 48F7FB                          idiv rbx
 30200 00016C23 4889D7                          mov rdi, rdx
 30201 00016C26 E89C030000                      call make_integer
 30202 00016C2B C9                              leave
 30203 00016C2C C22000                          ret AND_KILL_FRAME(2)
 30204                                  
 30205                                  L_code_ptr_set_car:
 30206 00016C2F C8000000                        enter 0, 0
 30207 00016C33 48837D1802                      cmp COUNT, 2
 30208 00016C38 0F856F040000                    jne L_error_arg_count_2
 30209 00016C3E 488B4520                        mov rax, PARAM(0)
 30210                                          assert_pair(rax)
    53 00016C42 803821              <1>  cmp byte [%1], %2
    54 00016C45 0F8501050000        <1>  jne L_error_incorrect_type
 30211 00016C4B 488B5D28                        mov rbx, PARAM(1)
 30212 00016C4F 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30213 00016C53 48B8-                           mov rax, sob_void
 30213 00016C55 [0000000000000000] 
 30214 00016C5D C9                              leave
 30215 00016C5E C22000                          ret AND_KILL_FRAME(2)
 30216                                  
 30217                                  L_code_ptr_set_cdr:
 30218 00016C61 C8000000                        enter 0, 0
 30219 00016C65 48837D1802                      cmp COUNT, 2
 30220 00016C6A 0F853D040000                    jne L_error_arg_count_2
 30221 00016C70 488B4520                        mov rax, PARAM(0)
 30222                                          assert_pair(rax)
    53 00016C74 803821              <1>  cmp byte [%1], %2
    54 00016C77 0F85CF040000        <1>  jne L_error_incorrect_type
 30223 00016C7D 488B5D28                        mov rbx, PARAM(1)
 30224 00016C81 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30225 00016C85 48B8-                           mov rax, sob_void
 30225 00016C87 [0000000000000000] 
 30226 00016C8F C9                              leave
 30227 00016C90 C22000                          ret AND_KILL_FRAME(2)
 30228                                  
 30229                                  L_code_ptr_string_ref:
 30230 00016C93 C8000000                        enter 0, 0
 30231 00016C97 48837D1802                      cmp COUNT, 2
 30232 00016C9C 0F850B040000                    jne L_error_arg_count_2
 30233 00016CA2 488B7D20                        mov rdi, PARAM(0)
 30234                                          assert_string(rdi)
    53 00016CA6 803F03              <1>  cmp byte [%1], %2
    54 00016CA9 0F859D040000        <1>  jne L_error_incorrect_type
 30235 00016CAF 488B7528                        mov rsi, PARAM(1)
 30236                                          assert_integer(rsi)
    53 00016CB3 803E11              <1>  cmp byte [%1], %2
    54 00016CB6 0F8590040000        <1>  jne L_error_incorrect_type
 30237 00016CBC 488B5701                        mov rdx, qword [rdi + 1]
 30238 00016CC0 488B4E01                        mov rcx, qword [rsi + 1]
 30239 00016CC4 4839D1                          cmp rcx, rdx
 30240 00016CC7 0F8D14030000                    jge L_error_integer_range
 30241 00016CCD 4883F900                        cmp rcx, 0
 30242 00016CD1 0F8C0A030000                    jl L_error_integer_range
 30243 00016CD7 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 30244 00016CDB BF02000000                      mov rdi, 2
 30245 00016CE0 E8BCE6FFFF                      call malloc
 30246 00016CE5 C60002                          mov byte [rax], T_char
 30247 00016CE8 885801                          mov byte [rax + 1], bl
 30248 00016CEB C9                              leave
 30249 00016CEC C22000                          ret AND_KILL_FRAME(2)
 30250                                  
 30251                                  L_code_ptr_vector_ref:
 30252 00016CEF C8000000                        enter 0, 0
 30253 00016CF3 48837D1802                      cmp COUNT, 2
 30254 00016CF8 0F85AF030000                    jne L_error_arg_count_2
 30255 00016CFE 488B7D20                        mov rdi, PARAM(0)
 30256                                          assert_vector(rdi)
    53 00016D02 803F22              <1>  cmp byte [%1], %2
    54 00016D05 0F8541040000        <1>  jne L_error_incorrect_type
 30257 00016D0B 488B7528                        mov rsi, PARAM(1)
 30258                                          assert_integer(rsi)
    53 00016D0F 803E11              <1>  cmp byte [%1], %2
    54 00016D12 0F8534040000        <1>  jne L_error_incorrect_type
 30259 00016D18 488B5701                        mov rdx, qword [rdi + 1]
 30260 00016D1C 488B4E01                        mov rcx, qword [rsi + 1]
 30261 00016D20 4839D1                          cmp rcx, rdx
 30262 00016D23 0F8DB8020000                    jge L_error_integer_range
 30263 00016D29 4883F900                        cmp rcx, 0
 30264 00016D2D 0F8CAE020000                    jl L_error_integer_range
 30265 00016D33 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 30266 00016D38 C9                              leave
 30267 00016D39 C22000                          ret AND_KILL_FRAME(2)
 30268                                  
 30269                                  L_code_ptr_vector_set:
 30270 00016D3C C8000000                        enter 0, 0
 30271 00016D40 48837D1803                      cmp COUNT, 3
 30272 00016D45 0F85CC030000                    jne L_error_arg_count_3
 30273 00016D4B 488B7D20                        mov rdi, PARAM(0)
 30274                                          assert_vector(rdi)
    53 00016D4F 803F22              <1>  cmp byte [%1], %2
    54 00016D52 0F85F4030000        <1>  jne L_error_incorrect_type
 30275 00016D58 488B7528                        mov rsi, PARAM(1)
 30276                                          assert_integer(rsi)
    53 00016D5C 803E11              <1>  cmp byte [%1], %2
    54 00016D5F 0F85E7030000        <1>  jne L_error_incorrect_type
 30277 00016D65 488B5701                        mov rdx, qword [rdi + 1]
 30278 00016D69 488B4E01                        mov rcx, qword [rsi + 1]
 30279 00016D6D 4839D1                          cmp rcx, rdx
 30280 00016D70 0F8D6B020000                    jge L_error_integer_range
 30281 00016D76 4883F900                        cmp rcx, 0
 30282 00016D7A 0F8C61020000                    jl L_error_integer_range
 30283 00016D80 488B4530                        mov rax, PARAM(2)
 30284 00016D84 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 30285 00016D89 48B8-                           mov rax, sob_void
 30285 00016D8B [0000000000000000] 
 30286 00016D93 C9                              leave
 30287 00016D94 C22800                          ret AND_KILL_FRAME(3)
 30288                                  
 30289                                  L_code_ptr_string_set:
 30290 00016D97 C8000000                        enter 0, 0
 30291 00016D9B 48837D1803                      cmp COUNT, 3
 30292 00016DA0 0F8571030000                    jne L_error_arg_count_3
 30293 00016DA6 488B7D20                        mov rdi, PARAM(0)
 30294                                          assert_string(rdi)
    53 00016DAA 803F03              <1>  cmp byte [%1], %2
    54 00016DAD 0F8599030000        <1>  jne L_error_incorrect_type
 30295 00016DB3 488B7528                        mov rsi, PARAM(1)
 30296                                          assert_integer(rsi)
    53 00016DB7 803E11              <1>  cmp byte [%1], %2
    54 00016DBA 0F858C030000        <1>  jne L_error_incorrect_type
 30297 00016DC0 488B5701                        mov rdx, qword [rdi + 1]
 30298 00016DC4 488B4E01                        mov rcx, qword [rsi + 1]
 30299 00016DC8 4839D1                          cmp rcx, rdx
 30300 00016DCB 0F8D10020000                    jge L_error_integer_range
 30301 00016DD1 4883F900                        cmp rcx, 0
 30302 00016DD5 0F8C06020000                    jl L_error_integer_range
 30303 00016DDB 488B4530                        mov rax, PARAM(2)
 30304                                          assert_char(rax)
    53 00016DDF 803802              <1>  cmp byte [%1], %2
    54 00016DE2 0F8564030000        <1>  jne L_error_incorrect_type
 30305 00016DE8 8A4001                          mov al, byte [rax + 1]
 30306 00016DEB 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 30307 00016DEF 48B8-                           mov rax, sob_void
 30307 00016DF1 [0000000000000000] 
 30308 00016DF9 C9                              leave
 30309 00016DFA C22800                          ret AND_KILL_FRAME(3)
 30310                                  
 30311                                  L_code_ptr_make_vector:
 30312 00016DFD C8000000                        enter 0, 0
 30313 00016E01 48837D1802                      cmp COUNT, 2
 30314 00016E06 0F85A1020000                    jne L_error_arg_count_2
 30315 00016E0C 488B4D20                        mov rcx, PARAM(0)
 30316                                          assert_integer(rcx)
    53 00016E10 803911              <1>  cmp byte [%1], %2
    54 00016E13 0F8533030000        <1>  jne L_error_incorrect_type
 30317 00016E19 488B4901                        mov rcx, qword [rcx + 1]
 30318 00016E1D 4883F900                        cmp rcx, 0
 30319 00016E21 0F8CBA010000                    jl L_error_integer_range
 30320 00016E27 488B5528                        mov rdx, PARAM(1)
 30321 00016E2B 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 30322 00016E33 E869E5FFFF                      call malloc
 30323 00016E38 C60022                          mov byte [rax], T_vector
 30324 00016E3B 48894801                        mov qword [rax + 1], rcx
 30325 00016E3F 41B800000000                    mov r8, 0
 30326                                  .L0:
 30327 00016E45 4939C8                          cmp r8, rcx
 30328 00016E48 740A                            je .L1
 30329 00016E4A 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 30330 00016E4F 49FFC0                          inc r8
 30331 00016E52 EBF1                            jmp .L0
 30332                                  .L1:
 30333 00016E54 C9                              leave
 30334 00016E55 C22000                          ret AND_KILL_FRAME(2)
 30335                                          
 30336                                  L_code_ptr_make_string:
 30337 00016E58 C8000000                        enter 0, 0
 30338 00016E5C 48837D1802                      cmp COUNT, 2
 30339 00016E61 0F8546020000                    jne L_error_arg_count_2
 30340 00016E67 488B4D20                        mov rcx, PARAM(0)
 30341                                          assert_integer(rcx)
    53 00016E6B 803911              <1>  cmp byte [%1], %2
    54 00016E6E 0F85D8020000        <1>  jne L_error_incorrect_type
 30342 00016E74 488B4901                        mov rcx, qword [rcx + 1]
 30343 00016E78 4883F900                        cmp rcx, 0
 30344 00016E7C 0F8C5F010000                    jl L_error_integer_range
 30345 00016E82 488B5528                        mov rdx, PARAM(1)
 30346                                          assert_char(rdx)
    53 00016E86 803A02              <1>  cmp byte [%1], %2
    54 00016E89 0F85BD020000        <1>  jne L_error_incorrect_type
 30347 00016E8F 8A5201                          mov dl, byte [rdx + 1]
 30348 00016E92 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 30349 00016E96 E806E5FFFF                      call malloc
 30350 00016E9B C60003                          mov byte [rax], T_string
 30351 00016E9E 48894801                        mov qword [rax + 1], rcx
 30352 00016EA2 41B800000000                    mov r8, 0
 30353                                  .L0:
 30354 00016EA8 4939C8                          cmp r8, rcx
 30355 00016EAB 740A                            je .L1
 30356 00016EAD 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 30357 00016EB2 49FFC0                          inc r8
 30358 00016EB5 EBF1                            jmp .L0
 30359                                  .L1:
 30360 00016EB7 C9                              leave
 30361 00016EB8 C22000                          ret AND_KILL_FRAME(2)
 30362                                  
 30363                                  L_code_ptr_numerator:
 30364 00016EBB C8000000                        enter 0, 0
 30365 00016EBF 48837D1801                      cmp COUNT, 1
 30366 00016EC4 0F85AE010000                    jne L_error_arg_count_1
 30367 00016ECA 488B4520                        mov rax, PARAM(0)
 30368                                          assert_fraction(rax)
    53 00016ECE 803812              <1>  cmp byte [%1], %2
    54 00016ED1 0F8575020000        <1>  jne L_error_incorrect_type
 30369 00016ED7 488B7801                        mov rdi, qword [rax + 1]
 30370 00016EDB E8E7000000                      call make_integer
 30371 00016EE0 C9                              leave
 30372 00016EE1 C21800                          ret AND_KILL_FRAME(1)
 30373                                          
 30374                                  L_code_ptr_denominator:
 30375 00016EE4 C8000000                        enter 0, 0
 30376 00016EE8 48837D1801                      cmp COUNT, 1
 30377 00016EED 0F8585010000                    jne L_error_arg_count_1
 30378 00016EF3 488B4520                        mov rax, PARAM(0)
 30379                                          assert_fraction(rax)
    53 00016EF7 803812              <1>  cmp byte [%1], %2
    54 00016EFA 0F854C020000        <1>  jne L_error_incorrect_type
 30380 00016F00 488B7809                        mov rdi, qword [rax + 1 + 8]
 30381 00016F04 E8BE000000                      call make_integer
 30382 00016F09 C9                              leave
 30383 00016F0A C21800                          ret AND_KILL_FRAME(1)
 30384                                  
 30385                                  L_code_ptr_is_eq:
 30386 00016F0D C8000000                	enter 0, 0
 30387 00016F11 48837D1802              	cmp COUNT, 2
 30388 00016F16 0F8591010000            	jne L_error_arg_count_2
 30389 00016F1C 488B7D20                	mov rdi, PARAM(0)
 30390 00016F20 488B7528                	mov rsi, PARAM(1)
 30391 00016F24 4839F7                  	cmp rdi, rsi
 30392 00016F27 746C                    	je .L_eq_true
 30393 00016F29 8A17                    	mov dl, byte [rdi]
 30394 00016F2B 3A16                    	cmp dl, byte [rsi]
 30395 00016F2D 7572                    	jne .L_eq_false
 30396 00016F2F 80FA02                  	cmp dl, T_char
 30397 00016F32 7459                    	je .L_char
 30398 00016F34 80FA41                  	cmp dl, T_interned_symbol
 30399 00016F37 7440                    	je .L_interned_symbol
 30400 00016F39 80FA42                          cmp dl, T_uninterned_symbol
 30401 00016F3C 7443                            je .L_uninterned_symbol
 30402 00016F3E 80FA13                  	cmp dl, T_real
 30403 00016F41 742E                    	je .L_real
 30404 00016F43 80FA12                  	cmp dl, T_fraction
 30405 00016F46 7413                    	je .L_fraction
 30406 00016F48 80FA11                          cmp dl, T_integer
 30407 00016F4B 7402                            je .L_integer
 30408 00016F4D EB52                    	jmp .L_eq_false
 30409                                  .L_integer:
 30410 00016F4F 488B4601                        mov rax, qword [rsi + 1]
 30411 00016F53 483B4701                        cmp rax, qword [rdi + 1]
 30412 00016F57 7548                            jne .L_eq_false
 30413 00016F59 EB3A                            jmp .L_eq_true
 30414                                  .L_fraction:
 30415 00016F5B 488B4601                	mov rax, qword [rsi + 1]
 30416 00016F5F 483B4701                	cmp rax, qword [rdi + 1]
 30417 00016F63 753C                    	jne .L_eq_false
 30418 00016F65 488B4609                	mov rax, qword [rsi + 1 + 8]
 30419 00016F69 483B4709                	cmp rax, qword [rdi + 1 + 8]
 30420 00016F6D 7532                    	jne .L_eq_false
 30421 00016F6F EB24                    	jmp .L_eq_true
 30422                                  .L_real:
 30423 00016F71 488B4601                	mov rax, qword [rsi + 1]
 30424 00016F75 483B4701                	cmp rax, qword [rdi + 1]
 30425                                  .L_interned_symbol:
 30426                                  	; never reached, because interned_symbols are static!
 30427                                  	; but I'm keeping it in case, I'll ever change
 30428                                  	; the implementation
 30429 00016F79 488B4601                	mov rax, qword [rsi + 1]
 30430 00016F7D 483B4701                	cmp rax, qword [rdi + 1]
 30431                                  .L_uninterned_symbol:
 30432 00016F81 4C8B4701                        mov r8, qword [rdi + 1]
 30433 00016F85 4C3B4601                        cmp r8, qword [rsi + 1]
 30434 00016F89 7516                            jne .L_eq_false
 30435 00016F8B EB08                            jmp .L_eq_true
 30436                                  .L_char:
 30437 00016F8D 8A5E01                  	mov bl, byte [rsi + 1]
 30438 00016F90 3A5F01                  	cmp bl, byte [rdi + 1]
 30439 00016F93 750C                    	jne .L_eq_false
 30440                                  .L_eq_true:
 30441 00016F95 48B8-                   	mov rax, sob_boolean_true
 30441 00016F97 [0300000000000000] 
 30442 00016F9F EB0A                    	jmp .L_eq_exit
 30443                                  .L_eq_false:
 30444 00016FA1 48B8-                   	mov rax, sob_boolean_false
 30444 00016FA3 [0200000000000000] 
 30445                                  .L_eq_exit:
 30446 00016FAB C9                      	leave
 30447 00016FAC C22000                  	ret AND_KILL_FRAME(2)
 30448                                  
 30449                                  make_real:
 30450 00016FAF C8000000                        enter 0, 0
 30451 00016FB3 BF09000000                      mov rdi, (1 + 8)
 30452 00016FB8 E8E4E3FFFF                      call malloc
 30453 00016FBD C60013                          mov byte [rax], T_real
 30454 00016FC0 F20F114001                      movsd qword [rax + 1], xmm0
 30455 00016FC5 C9                              leave 
 30456 00016FC6 C3                              ret
 30457                                          
 30458                                  make_integer:
 30459 00016FC7 C8000000                        enter 0, 0
 30460 00016FCB 4889FE                          mov rsi, rdi
 30461 00016FCE BF09000000                      mov rdi, (1 + 8)
 30462 00016FD3 E8C9E3FFFF                      call malloc
 30463 00016FD8 C60011                          mov byte [rax], T_integer
 30464 00016FDB 48897001                        mov qword [rax + 1], rsi
 30465 00016FDF C9                              leave
 30466 00016FE0 C3                              ret
 30467                                          
 30468                                  L_error_integer_range:
 30469 00016FE1 488B3C25[00000000]              mov rdi, qword [stderr]
 30470 00016FE9 48BE-                           mov rsi, fmt_integer_range
 30470 00016FEB [DA1B000000000000] 
 30471 00016FF3 B800000000                      mov rax, 0
 30472                                          ENTER
    44 00016FF8 C8000000            <1>  enter 0, 0
    45 00016FFC 4883E4F0            <1>  and rsp, ~15
 30473 00017000 E8(00000000)                    call fprintf
 30474                                          LEAVE
    49 00017005 C9                  <1>  leave
 30475 00017006 48C7C0FBFFFFFF                  mov rax, -5
 30476 0001700D E8(00000000)                    call exit
 30477                                  
 30478                                  L_error_arg_negative:
 30479 00017012 488B3C25[00000000]              mov rdi, qword [stderr]
 30480 0001701A 48BE-                           mov rsi, fmt_arg_negative
 30480 0001701C [B21A000000000000] 
 30481 00017024 B800000000                      mov rax, 0
 30482                                          ENTER
    44 00017029 C8000000            <1>  enter 0, 0
    45 0001702D 4883E4F0            <1>  and rsp, ~15
 30483 00017031 E8(00000000)                    call fprintf
 30484                                          LEAVE
    49 00017036 C9                  <1>  leave
 30485 00017037 48C7C0FDFFFFFF                  mov rax, -3
 30486 0001703E E8(00000000)                    call exit
 30487                                  
 30488                                  L_error_arg_count_0:
 30489 00017043 488B3C25[00000000]              mov rdi, qword [stderr]
 30490 0001704B 48BE-                           mov rsi, fmt_arg_count_0
 30490 0001704D [D81A000000000000] 
 30491 00017055 488B5518                        mov rdx, COUNT
 30492 00017059 B800000000                      mov rax, 0
 30493                                          ENTER
    44 0001705E C8000000            <1>  enter 0, 0
    45 00017062 4883E4F0            <1>  and rsp, ~15
 30494 00017066 E8(00000000)                    call fprintf
 30495                                          LEAVE
    49 0001706B C9                  <1>  leave
 30496 0001706C 48C7C0FDFFFFFF                  mov rax, -3
 30497 00017073 E8(00000000)                    call exit
 30498                                  
 30499                                  L_error_arg_count_1:
 30500 00017078 488B3C25[00000000]              mov rdi, qword [stderr]
 30501 00017080 48BE-                           mov rsi, fmt_arg_count_1
 30501 00017082 [001B000000000000] 
 30502 0001708A 488B5518                        mov rdx, COUNT
 30503 0001708E B800000000                      mov rax, 0
 30504                                          ENTER
    44 00017093 C8000000            <1>  enter 0, 0
    45 00017097 4883E4F0            <1>  and rsp, ~15
 30505 0001709B E8(00000000)                    call fprintf
 30506                                          LEAVE
    49 000170A0 C9                  <1>  leave
 30507 000170A1 48C7C0FDFFFFFF                  mov rax, -3
 30508 000170A8 E8(00000000)                    call exit
 30509                                  
 30510                                  L_error_arg_count_2:
 30511 000170AD 488B3C25[00000000]              mov rdi, qword [stderr]
 30512 000170B5 48BE-                           mov rsi, fmt_arg_count_2
 30512 000170B7 [661B000000000000] 
 30513 000170BF 488B5518                        mov rdx, COUNT
 30514 000170C3 B800000000                      mov rax, 0
 30515                                          ENTER
    44 000170C8 C8000000            <1>  enter 0, 0
    45 000170CC 4883E4F0            <1>  and rsp, ~15
 30516 000170D0 E8(00000000)                    call fprintf
 30517                                          LEAVE
    49 000170D5 C9                  <1>  leave
 30518 000170D6 48C7C0FDFFFFFF                  mov rax, -3
 30519 000170DD E8(00000000)                    call exit
 30520                                  
 30521                                  L_error_arg_count_12:
 30522 000170E2 488B3C25[00000000]              mov rdi, qword [stderr]
 30523 000170EA 48BE-                           mov rsi, fmt_arg_count_12
 30523 000170EC [261B000000000000] 
 30524 000170F4 488B5518                        mov rdx, COUNT
 30525 000170F8 B800000000                      mov rax, 0
 30526                                          ENTER
    44 000170FD C8000000            <1>  enter 0, 0
    45 00017101 4883E4F0            <1>  and rsp, ~15
 30527 00017105 E8(00000000)                    call fprintf
 30528                                          LEAVE
    49 0001710A C9                  <1>  leave
 30529 0001710B 48C7C0FDFFFFFF                  mov rax, -3
 30530 00017112 E8(00000000)                    call exit
 30531                                  
 30532                                  L_error_arg_count_3:
 30533 00017117 488B3C25[00000000]              mov rdi, qword [stderr]
 30534 0001711F 48BE-                           mov rsi, fmt_arg_count_3
 30534 00017121 [8D1B000000000000] 
 30535 00017129 488B5518                        mov rdx, COUNT
 30536 0001712D B800000000                      mov rax, 0
 30537                                          ENTER
    44 00017132 C8000000            <1>  enter 0, 0
    45 00017136 4883E4F0            <1>  and rsp, ~15
 30538 0001713A E8(00000000)                    call fprintf
 30539                                          LEAVE
    49 0001713F C9                  <1>  leave
 30540 00017140 48C7C0FDFFFFFF                  mov rax, -3
 30541 00017147 E8(00000000)                    call exit
 30542                                          
 30543                                  L_error_incorrect_type:
 30544 0001714C 488B3C25[00000000]              mov rdi, qword [stderr]
 30545 00017154 48BE-                           mov rsi, fmt_type
 30545 00017156 [B61B000000000000] 
 30546 0001715E B800000000                      mov rax, 0
 30547                                          ENTER
    44 00017163 C8000000            <1>  enter 0, 0
    45 00017167 4883E4F0            <1>  and rsp, ~15
 30548 0001716B E8(00000000)                    call fprintf
 30549                                          LEAVE
    49 00017170 C9                  <1>  leave
 30550 00017171 48C7C0FCFFFFFF                  mov rax, -4
 30551 00017178 E8(00000000)                    call exit
 30552                                  
 30553                                  L_error_division_by_zero:
 30554 0001717D 488B3C25[00000000]              mov rdi, qword [stderr]
 30555 00017185 48BE-                           mov rsi, fmt_division_by_zero
 30555 00017187 [F71B000000000000] 
 30556 0001718F B800000000                      mov rax, 0
 30557                                          ENTER
    44 00017194 C8000000            <1>  enter 0, 0
    45 00017198 4883E4F0            <1>  and rsp, ~15
 30558 0001719C E8(00000000)                    call fprintf
 30559                                          LEAVE
    49 000171A1 C9                  <1>  leave
 30560 000171A2 48C7C0F8FFFFFF                  mov rax, -8
 30561 000171A9 E8(00000000)                    call exit
 30562                                  
 30563                                  section .data
 30564                                  gensym_count:
 30565 00001AA7 0000000000000000                dq 0
 30566                                  fmt_char:
 30567 00001AAF 256300                          db `%c\0`
 30568                                  fmt_arg_negative:
 30569 00001AB2 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 30569 00001ABB 7267756D656E742063-
 30569 00001AC4 616E6E6F7420626520-
 30569 00001ACD 6E656761746976652E-
 30569 00001AD6 0A00               
 30570                                  fmt_arg_count_0:
 30571 00001AD8 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 30571 00001AE1 74696E67207A65726F-
 30571 00001AEA 20617267756D656E74-
 30571 00001AF3 732E20466F756E6420-
 30571 00001AFC 25640A00           
 30572                                  fmt_arg_count_1:
 30573 00001B00 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 30573 00001B09 74696E67206F6E6520-
 30573 00001B12 617267756D656E742E-
 30573 00001B1B 20466F756E64202564-
 30573 00001B24 0A00               
 30574                                  fmt_arg_count_12:
 30575 00001B26 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 30575 00001B2F 74696E67206F6E6520-
 30575 00001B38 726571756972656420-
 30575 00001B41 616E64206F6E65206F-
 30575 00001B4A 7074696F6E616C2061-
 30575 00001B53 7267756D656E742E20-
 30575 00001B5C 466F756E642025640A-
 30575 00001B65 00                 
 30576                                  fmt_arg_count_2:
 30577 00001B66 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 30577 00001B6F 74696E672074776F20-
 30577 00001B78 617267756D656E7473-
 30577 00001B81 2E20466F756E642025-
 30577 00001B8A 640A00             
 30578                                  fmt_arg_count_3:
 30579 00001B8D 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 30579 00001B96 74696E672074687265-
 30579 00001B9F 6520617267756D656E-
 30579 00001BA8 74732E20466F756E64-
 30579 00001BB1 2025640A00         
 30580                                  fmt_type:
 30581 00001BB6 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 30581 00001BBF 696F6E207061737365-
 30581 00001BC8 6420696E636F727265-
 30581 00001BD1 637420747970650A00 
 30582                                  fmt_integer_range:
 30583 00001BDA 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 30583 00001BE3 7265637420696E7465-
 30583 00001BEC 6765722072616E6765-
 30583 00001BF5 0A00               
 30584                                  fmt_division_by_zero:
 30585 00001BF7 212121204469766973-             db `!!! Division by zero\n\0`
 30585 00001C00 696F6E206279207A65-
 30585 00001C09 726F0A00           
 30586                                  fmt_scheme_error_part_1:
 30587 00001C0D 0A2121212054686520-             db `\n!!! The procedure \0`
 30587 00001C16 70726F636564757265-
 30587 00001C1F 2000               
 30588                                  fmt_scheme_error_part_2:
 30589 00001C21 2061736B656420746F-             db ` asked to terminate the program\n`
 30589 00001C2A 207465726D696E6174-
 30589 00001C33 65207468652070726F-
 30589 00001C3C 6772616D0A         
 30590 00001C41 202020207769746820-             db `    with the following message:\n\n\0`
 30590 00001C4A 74686520666F6C6C6F-
 30590 00001C53 77696E67206D657373-
 30590 00001C5C 6167653A0A0A00     
 30591                                  fmt_scheme_error_part_3:
 30592 00001C63 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 30592 00001C6C 210A0A00           
